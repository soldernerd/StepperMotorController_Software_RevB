

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Jan 05 16:00:28 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text82,global,reloc=2,class=CODE,delta=1
   103                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text84,global,reloc=2,class=CODE,delta=1
   105                           	psect	text85,global,reloc=2,class=CODE,delta=1
   106                           	psect	text86,global,reloc=2,class=CODE,delta=1
   107                           	psect	text87,global,reloc=2,class=CODE,delta=1
   108                           	psect	text88,global,reloc=2,class=CODE,delta=1
   109                           	psect	text89,global,reloc=2,class=CODE,delta=1
   110                           	psect	text90,global,reloc=2,class=CODE,delta=1
   111                           	psect	text91,global,reloc=2,class=CODE,delta=1
   112                           	psect	text92,global,reloc=2,class=CODE,delta=1
   113                           	psect	text93,global,reloc=2,class=CODE,delta=1
   114                           	psect	text94,global,reloc=2,class=CODE,delta=1
   115                           	psect	text95,global,reloc=2,class=CODE,delta=1
   116                           	psect	text96,global,reloc=2,class=CODE,delta=1
   117                           	psect	text97,global,reloc=2,class=CODE,delta=1
   118                           	psect	text98,global,reloc=2,class=CODE,delta=1
   119                           	psect	text99,global,reloc=2,class=CODE,delta=1
   120                           	psect	text100,global,reloc=2,class=CODE,delta=1
   121                           	psect	text101,global,reloc=2,class=CODE,delta=1
   122                           	psect	text102,global,reloc=2,class=CODE,delta=1
   123                           	psect	text103,global,reloc=2,class=CODE,delta=1
   124                           	psect	text104,global,reloc=2,class=CODE,delta=1
   125                           	psect	text105,global,reloc=2,class=CODE,delta=1
   126                           	psect	text106,global,reloc=2,class=CODE,delta=1
   127                           	psect	text107,global,reloc=2,class=CODE,delta=1
   128                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text109,global,reloc=2,class=CODE,delta=1
   130                           	psect	text110,global,reloc=2,class=CODE,delta=1
   131                           	psect	text111,global,reloc=2,class=CODE,delta=1
   132                           	psect	text112,global,reloc=2,class=CODE,delta=1
   133                           	psect	text113,global,reloc=2,class=CODE,delta=1
   134                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=2
   135                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=2
   136                           	psect	text116,global,reloc=2,class=CODE,delta=1,group=2
   137                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=1
   138                           	psect	text118,global,reloc=2,class=CODE,delta=1,group=1
   139                           	psect	text119,global,reloc=2,class=CODE,delta=1,group=1
   140                           	psect	text120,global,reloc=2,class=CODE,delta=1,group=1
   141                           	psect	text121,global,reloc=2,class=CODE,delta=1
   142                           	psect	text122,global,reloc=2,class=CODE,delta=1
   143                           	psect	text123,global,reloc=2,class=CODE,delta=1,group=1
   144                           	psect	text124,global,reloc=2,class=CODE,delta=1,group=1
   145                           	psect	text125,global,reloc=2,class=CODE,delta=1,group=1
   146                           	psect	text126,global,reloc=2,class=CODE,delta=1,group=1
   147                           	psect	text127,global,reloc=2,class=CODE,delta=1,group=1
   148                           	psect	text128,global,reloc=2,class=CODE,delta=1
   149                           	psect	text129,global,reloc=2,class=CODE,delta=1,group=2
   150                           	psect	text130,global,reloc=2,class=CODE,delta=1
   151                           	psect	text131,global,reloc=2,class=CODE,delta=1
   152                           	psect	text132,global,reloc=2,class=CODE,delta=1
   153                           	psect	text133,global,reloc=2,class=CODE,delta=1
   154                           	psect	text134,global,reloc=2,class=CODE,delta=1
   155                           	psect	text135,global,reloc=2,class=CODE,delta=1
   156                           	psect	text136,global,reloc=2,class=CODE,delta=1
   157                           	psect	text137,global,reloc=2,class=CODE,delta=1
   158                           	psect	text138,global,reloc=2,class=CODE,delta=1
   159                           	psect	text139,global,reloc=2,class=CODE,delta=1
   160                           	psect	text140,global,reloc=2,class=CODE,delta=1
   161                           	psect	text141,global,reloc=2,class=CODE,delta=1
   162                           	psect	text142,global,reloc=2,class=CODE,delta=1
   163                           	psect	text143,global,reloc=2,class=CODE,delta=1
   164                           	psect	text144,global,reloc=2,class=CODE,delta=1
   165                           	psect	text145,global,reloc=2,class=CODE,delta=1
   166                           	psect	text146,global,reloc=2,class=CODE,delta=1
   167                           	psect	text147,global,reloc=2,class=CODE,delta=1
   168                           	psect	text148,global,reloc=2,class=CODE,delta=1
   169                           	psect	text149,global,reloc=2,class=CODE,delta=1
   170                           	psect	text150,global,reloc=2,class=CODE,delta=1
   171                           	psect	text151,global,reloc=2,class=CODE,delta=1
   172                           	psect	text152,global,reloc=2,class=CODE,delta=1
   173                           	psect	text153,global,reloc=2,class=CODE,delta=1
   174                           	psect	text154,global,reloc=2,class=CODE,delta=1
   175                           	psect	text155,global,reloc=2,class=CODE,delta=1
   176                           	psect	text156,global,reloc=2,class=CODE,delta=1
   177                           	psect	text157,global,reloc=2,class=CODE,delta=1
   178                           	psect	text158,global,reloc=2,class=CODE,delta=1
   179                           	psect	text159,global,reloc=2,class=CODE,delta=1
   180                           	psect	text160,global,reloc=2,class=CODE,delta=1
   181                           	psect	text161,global,reloc=2,class=CODE,delta=1
   182                           	psect	text162,global,reloc=2,class=CODE,delta=1
   183                           	psect	text163,global,reloc=2,class=CODE,delta=1
   184                           	psect	text164,global,reloc=2,class=CODE,delta=1
   185                           	psect	text165,global,reloc=2,class=CODE,delta=1
   186                           	psect	text166,global,reloc=2,class=CODE,delta=1,group=2
   187                           	psect	text167,global,reloc=2,class=CODE,delta=1
   188                           	psect	text168,global,reloc=2,class=CODE,delta=1
   189                           	psect	text169,global,reloc=2,class=CODE,delta=1
   190                           	psect	text170,global,reloc=2,class=CODE,delta=1
   191                           	psect	text171,global,reloc=2,class=CODE,delta=1
   192                           	psect	text172,global,reloc=2,class=CODE,delta=1
   193                           	psect	text173,global,reloc=2,class=CODE,delta=1
   194                           	psect	text174,global,reloc=2,class=CODE,delta=1
   195                           	psect	text175,global,reloc=2,class=CODE,delta=1
   196                           	psect	text176,global,reloc=2,class=CODE,delta=1
   197                           	psect	text177,global,reloc=2,class=CODE,delta=1
   198                           	psect	text178,global,reloc=2,class=CODE,delta=1
   199                           	psect	text179,global,reloc=2,class=CODE,delta=1
   200                           	psect	text180,global,reloc=2,class=CODE,delta=1
   201                           	psect	text181,global,reloc=2,class=CODE,delta=1
   202                           	psect	text182,global,reloc=2,class=CODE,delta=1
   203                           	psect	text183,global,reloc=2,class=CODE,delta=1
   204                           	psect	text184,global,reloc=2,class=CODE,delta=1
   205                           	psect	text185,global,reloc=2,class=CODE,delta=1
   206                           	psect	text186,global,reloc=2,class=CODE,delta=1
   207                           	psect	text187,global,reloc=2,class=CODE,delta=1
   208                           	psect	text188,global,reloc=2,class=CODE,delta=1
   209                           	psect	text189,global,reloc=2,class=CODE,delta=1
   210                           	psect	text190,global,reloc=2,class=CODE,delta=1
   211                           	psect	text191,global,reloc=2,class=CODE,delta=1,group=1
   212                           	psect	text192,global,reloc=2,class=CODE,delta=1
   213                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   214                           	psect	text194,global,reloc=2,class=CODE,delta=1
   215                           	psect	text195,global,reloc=2,class=CODE,delta=1
   216                           	psect	text196,global,reloc=2,class=CODE,delta=1
   217                           	psect	text197,global,reloc=2,class=CODE,delta=1
   218                           	psect	text198,global,reloc=2,class=CODE,delta=1
   219                           	psect	text199,global,reloc=2,class=CODE,delta=1
   220                           	psect	text200,global,reloc=2,class=CODE,delta=1
   221                           	psect	text201,global,reloc=2,class=CODE,delta=1
   222                           	psect	text202,global,reloc=2,class=CODE,delta=1
   223                           	psect	text203,global,reloc=2,class=CODE,delta=1
   224                           	psect	text204,global,reloc=2,class=CODE,delta=1
   225                           	psect	text205,global,reloc=2,class=CODE,delta=1
   226                           	psect	text206,global,reloc=2,class=CODE,delta=1
   227                           	psect	text207,global,reloc=2,class=CODE,delta=1
   228                           	psect	text208,global,reloc=2,class=CODE,delta=1
   229                           	psect	text209,global,reloc=2,class=CODE,delta=1
   230                           	psect	text210,global,reloc=2,class=CODE,delta=1
   231                           	psect	text211,global,reloc=2,class=CODE,delta=1
   232                           	psect	text212,global,reloc=2,class=CODE,delta=1
   233                           	psect	text213,global,reloc=2,class=CODE,delta=1
   234                           	psect	text214,global,reloc=2,class=CODE,delta=1
   235                           	psect	text215,global,reloc=2,class=CODE,delta=1
   236                           	psect	text216,global,reloc=2,class=CODE,delta=1
   237                           	psect	text217,global,reloc=2,class=CODE,delta=1
   238                           	psect	text218,global,reloc=2,class=CODE,delta=1
   239                           	psect	text219,global,reloc=2,class=CODE,delta=1
   240                           	psect	text220,global,reloc=2,class=CODE,delta=1
   241                           	psect	text221,global,reloc=2,class=CODE,delta=1
   242                           	psect	text222,global,reloc=2,class=CODE,delta=1
   243                           	psect	text223,global,reloc=2,class=CODE,delta=1
   244                           	psect	text224,global,reloc=2,class=CODE,delta=1
   245                           	psect	text225,global,reloc=2,class=CODE,delta=1
   246                           	psect	text226,global,reloc=2,class=CODE,delta=1
   247                           	psect	text227,global,reloc=2,class=CODE,delta=1
   248                           	psect	text228,global,reloc=2,class=CODE,delta=1
   249                           	psect	text229,global,reloc=2,class=CODE,delta=1
   250                           	psect	text230,global,reloc=2,class=CODE,delta=1
   251                           	psect	text231,global,reloc=2,class=CODE,delta=1
   252                           	psect	text232,global,reloc=2,class=CODE,delta=1
   253                           	psect	text233,global,reloc=2,class=CODE,delta=1
   254                           	psect	text234,global,reloc=2,class=CODE,delta=1
   255                           	psect	text235,global,reloc=2,class=CODE,delta=1
   256                           	psect	text236,global,reloc=2,class=CODE,delta=1
   257                           	psect	text237,global,reloc=2,class=CODE,delta=1
   258                           	psect	text238,global,reloc=2,class=CODE,delta=1
   259                           	psect	text239,global,reloc=2,class=CODE,delta=1
   260                           	psect	text240,global,reloc=2,class=CODE,delta=1
   261                           	psect	text241,global,reloc=2,class=CODE,delta=1
   262                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   263                           	psect	text242,global,reloc=2,class=CODE,delta=1
   264                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   265                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   266                           	dabs	1,0x600,512,_msd_buffer
   267                           	dabs	1,0xD00,48,_BDT
   268                           	dabs	1,0xD40,31,_msd_cbw
   269                           	dabs	1,0xD80,13,_msd_csw
   270                           	dabs	1,0xD38,8,_CtrlTrfData
   271                           	dabs	1,0xD30,8,_SetupPkt
   272  0000                     
   273                           ; Version 2.00
   274                           ; Generated 27/05/2018 GMT
   275                           ; 
   276                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   277                           ; All rights reserved.
   278                           ; 
   279                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   280                           ; 
   281                           ; Redistribution and use in source and binary forms, with or without modification, are
   282                           ; permitted provided that the following conditions are met:
   283                           ; 
   284                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   285                           ;        conditions and the following disclaimer.
   286                           ; 
   287                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   288                           ;        of conditions and the following disclaimer in the documentation and/or other
   289                           ;        materials provided with the distribution.
   290                           ; 
   291                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   292                           ;        software without specific prior written permission.
   293                           ; 
   294                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   295                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   296                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   297                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   298                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   299                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   300                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   301                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   302                           ; 
   303                           ; 
   304                           ; Code-generator required, PIC18F47J53 Definitions
   305                           ; 
   306                           ; SFR Addresses
   307  0000                     
   308                           	psect	idataBANK2
   309  01541A                     __pidataBANK2:
   310                           	opt stack 0
   311                           
   312                           ;initializer for _LUN
   313  01541A  7E                 	db	low _ExternalFlash_MediaInitialize
   314  01541B  5E                 	db	high _ExternalFlash_MediaInitialize
   315  01541C  01                 	db	low (_ExternalFlash_MediaInitialize shr (0+16))
   316  01541D  90                 	db	low _ExternalFlash_CapacityRead
   317  01541E  5F                 	db	high _ExternalFlash_CapacityRead
   318  01541F  01                 	db	low (_ExternalFlash_CapacityRead shr (0+16))
   319  015420  0C                 	db	low _ExternalFlash_SectorSizeRead
   320  015421  60                 	db	high _ExternalFlash_SectorSizeRead
   321  015422  01                 	db	low (_ExternalFlash_SectorSizeRead shr (0+16))
   322  015423  58                 	db	low _ExternalFlash_MediaDetect
   323  015424  60                 	db	high _ExternalFlash_MediaDetect
   324  015425  01                 	db	low (_ExternalFlash_MediaDetect shr (0+16))
   325  015426  A4                 	db	low _ExternalFlash_SectorRead
   326  015427  59                 	db	high _ExternalFlash_SectorRead
   327  015428  01                 	db	low (_ExternalFlash_SectorRead shr (0+16))
   328  015429  98                 	db	low _ExternalFlash_WriteProtectStateGet
   329  01542A  60                 	db	high _ExternalFlash_WriteProtectStateGet
   330  01542B  01                 	db	low (_ExternalFlash_WriteProtectStateGet shr (0+16))
   331  01542C  70                 	db	low _ExternalFlash_SectorWrite
   332  01542D  59                 	db	high _ExternalFlash_SectorWrite
   333  01542E  01                 	db	low (_ExternalFlash_SectorWrite shr (0+16))
   334  01542F  00                 	db	0
   335  015430  00                 	db	0
   336  015431  00                 	db	0
   337  015432  00                 	db	0
   338  015433  00                 	db	0
   339  015434  00                 	db	0
   340  015435  00                 	db	0
   341  015436  00                 	db	0
   342                           
   343                           ;initializer for i2c_display_init@F7093
   344  015437  3A                 	db	58
   345  015438  1E                 	db	30
   346  015439  39                 	db	57
   347  01543A  0C                 	db	12
   348  01543B  74                 	db	116
   349  01543C  5C                 	db	92
   350  01543D  6D                 	db	109
   351  01543E  0C                 	db	12
   352  01543F  01                 	db	1
   353                           
   354                           ;initializer for __i2c_display_send_init_sequence@F7090
   355  015440  3A                 	db	58
   356  015441  1E                 	db	30
   357  015442  39                 	db	57
   358  015443  0C                 	db	12
   359  015444  74                 	db	116
   360  015445  5C                 	db	92
   361  015446  6D                 	db	109
   362  015447  0C                 	db	12
   363  015448  01                 	db	1
   364                           
   365                           ;initializer for _tx_buf
   366  015449  01                 	db	1
   367  01544A  02                 	db	2
   368  01544B  03                 	db	3
   369  01544C  04                 	db	4
   370  01544D  05                 	db	5
   371  01544E  06                 	db	6
   372  01544F  07                 	db	7
   373  015450  08                 	db	8
   374                           
   375                           ;initializer for _configFile_used_name
   376  015451  55                 	db	85
   377  015452  53                 	db	83
   378  015453  45                 	db	69
   379  015454  44                 	db	68
   380  015455  43                 	db	67
   381  015456  4F                 	db	79
   382  015457  4E                 	db	78
   383  015458  46                 	db	70
   384                           
   385                           ;initializer for _configFile_name
   386  015459  43                 	db	67
   387  01545A  4F                 	db	79
   388  01545B  4E                 	db	78
   389  01545C  46                 	db	70
   390  01545D  49                 	db	73
   391  01545E  47                 	db	71
   392  01545F  20                 	db	32
   393  015460  20                 	db	32
   394                           
   395                           ;initializer for _configFile_used_extention
   396  015461  54                 	db	84
   397  015462  58                 	db	88
   398  015463  54                 	db	84
   399                           
   400                           ;initializer for _configFile_extention
   401  015464  54                 	db	84
   402  015465  58                 	db	88
   403  015466  54                 	db	84
   404                           
   405                           	psect	idataBANK4
   406  01523A                     __pidataBANK4:
   407                           	opt stack 0
   408                           
   409                           ;initializer for _dc_startup
   410  01523A  2A                 	db	42
   411  01523B  20                 	db	32
   412  01523C  20                 	db	32
   413  01523D  53                 	db	83
   414  01523E  74                 	db	116
   415  01523F  65                 	db	101
   416  015240  70                 	db	112
   417  015241  70                 	db	112
   418  015242  65                 	db	101
   419  015243  72                 	db	114
   420  015244  20                 	db	32
   421  015245  4D                 	db	77
   422  015246  6F                 	db	111
   423  015247  74                 	db	116
   424  015248  6F                 	db	111
   425  015249  72                 	db	114
   426  01524A  20                 	db	32
   427  01524B  20                 	db	32
   428  01524C  20                 	db	32
   429  01524D  2A                 	db	42
   430  01524E  2A                 	db	42
   431  01524F  20                 	db	32
   432  015250  20                 	db	32
   433  015251  20                 	db	32
   434  015252  20                 	db	32
   435  015253  43                 	db	67
   436  015254  6F                 	db	111
   437  015255  6E                 	db	110
   438  015256  74                 	db	116
   439  015257  72                 	db	114
   440  015258  6F                 	db	111
   441  015259  6C                 	db	108
   442  01525A  6C                 	db	108
   443  01525B  65                 	db	101
   444  01525C  72                 	db	114
   445  01525D  20                 	db	32
   446  01525E  20                 	db	32
   447  01525F  20                 	db	32
   448  015260  20                 	db	32
   449  015261  2A                 	db	42
   450  015262  2A                 	db	42
   451  015263  20                 	db	32
   452  015264  20                 	db	32
   453  015265  20                 	db	32
   454  015266  20                 	db	32
   455  015267  76                 	db	118
   456  015268  20                 	db	32
   457  015269  20                 	db	32
   458  01526A  20                 	db	32
   459  01526B  20                 	db	32
   460  01526C  20                 	db	32
   461  01526D  20                 	db	32
   462  01526E  20                 	db	32
   463  01526F  20                 	db	32
   464  015270  20                 	db	32
   465  015271  20                 	db	32
   466  015272  20                 	db	32
   467  015273  20                 	db	32
   468  015274  20                 	db	32
   469  015275  2A                 	db	42
   470  015276  2A                 	db	42
   471  015277  20                 	db	32
   472  015278  20                 	db	32
   473  015279  73                 	db	115
   474  01527A  6F                 	db	111
   475  01527B  6C                 	db	108
   476  01527C  64                 	db	100
   477  01527D  65                 	db	101
   478  01527E  72                 	db	114
   479  01527F  6E                 	db	110
   480  015280  65                 	db	101
   481  015281  72                 	db	114
   482  015282  64                 	db	100
   483  015283  2E                 	db	46
   484  015284  63                 	db	99
   485  015285  6F                 	db	111
   486  015286  6D                 	db	109
   487  015287  20                 	db	32
   488  015288  20                 	db	32
   489  015289  2A                 	db	42
   490                           
   491                           	psect	mediumconst
   492  009092                     __pmediumconst:
   493                           	opt stack 0
   494  009092  00                 	db	0
   495  009093                     _motor_speed_lookup:
   496                           	opt stack 0
   497  009093  0008               	dw	8
   498  009095  000C               	dw	12
   499  009097  0010               	dw	16
   500  009099  0013               	dw	19
   501  00909B  0016               	dw	22
   502  00909D  0019               	dw	25
   503  00909F  001C               	dw	28
   504  0090A1  001E               	dw	30
   505  0090A3  0021               	dw	33
   506  0090A5  0023               	dw	35
   507  0090A7  0026               	dw	38
   508  0090A9  0028               	dw	40
   509  0090AB  002A               	dw	42
   510  0090AD  002C               	dw	44
   511  0090AF  002E               	dw	46
   512  0090B1  0030               	dw	48
   513  0090B3  0032               	dw	50
   514  0090B5  0034               	dw	52
   515  0090B7  0036               	dw	54
   516  0090B9  0038               	dw	56
   517  0090BB  003A               	dw	58
   518  0090BD  003C               	dw	60
   519  0090BF  003D               	dw	61
   520  0090C1  003F               	dw	63
   521  0090C3  0041               	dw	65
   522  0090C5  0043               	dw	67
   523  0090C7  0045               	dw	69
   524  0090C9  0046               	dw	70
   525  0090CB  0048               	dw	72
   526  0090CD  0049               	dw	73
   527  0090CF  004B               	dw	75
   528  0090D1  004D               	dw	77
   529  0090D3  004E               	dw	78
   530  0090D5  0050               	dw	80
   531  0090D7  0051               	dw	81
   532  0090D9  0053               	dw	83
   533  0090DB  0054               	dw	84
   534  0090DD  0056               	dw	86
   535  0090DF  0057               	dw	87
   536  0090E1  0059               	dw	89
   537  0090E3  005A               	dw	90
   538  0090E5  005C               	dw	92
   539  0090E7  005D               	dw	93
   540  0090E9  005F               	dw	95
   541  0090EB  0060               	dw	96
   542  0090ED  0062               	dw	98
   543  0090EF  0063               	dw	99
   544  0090F1  0064               	dw	100
   545  0090F3  0066               	dw	102
   546  0090F5  0067               	dw	103
   547  0090F7  0069               	dw	105
   548  0090F9  006A               	dw	106
   549  0090FB  006C               	dw	108
   550  0090FD  006D               	dw	109
   551  0090FF  006E               	dw	110
   552  009101  0070               	dw	112
   553  009103  0071               	dw	113
   554  009105  0072               	dw	114
   555  009107  0073               	dw	115
   556  009109  0074               	dw	116
   557  00910B  0076               	dw	118
   558  00910D  0078               	dw	120
   559  00910F  0079               	dw	121
   560  009111  007A               	dw	122
   561  009113  007B               	dw	123
   562  009115  007D               	dw	125
   563  009117  007E               	dw	126
   564  009119  007F               	dw	127
   565  00911B  0082               	dw	130
   566  00911D  0085               	dw	133
   567  00911F  0087               	dw	135
   568  009121  008A               	dw	138
   569  009123  008C               	dw	140
   570  009125  008F               	dw	143
   571  009127  0091               	dw	145
   572  009129  0092               	dw	146
   573  00912B  0094               	dw	148
   574  00912D  0098               	dw	152
   575  00912F  009A               	dw	154
   576  009131  009C               	dw	156
   577  009133  009E               	dw	158
   578  009135  00A1               	dw	161
   579  009137  00A3               	dw	163
   580  009139  00A5               	dw	165
   581  00913B  00A7               	dw	167
   582  00913D  00AA               	dw	170
   583  00913F  00AC               	dw	172
   584  009141  00AF               	dw	175
   585  009143  00B2               	dw	178
   586  009145  00B4               	dw	180
   587  009147  00B7               	dw	183
   588  009149  00B8               	dw	184
   589  00914B  00BA               	dw	186
   590  00914D  00BC               	dw	188
   591  00914F  00BE               	dw	190
   592  009151  00C0               	dw	192
   593  009153  00C3               	dw	195
   594  009155  00C4               	dw	196
   595  009157  00C6               	dw	198
   596  009159  00C8               	dw	200
   597  00915B  00CA               	dw	202
   598  00915D  00CC               	dw	204
   599  00915F  00CE               	dw	206
   600  009161  00D0               	dw	208
   601  009163  00D2               	dw	210
   602  009165  00D4               	dw	212
   603  009167  00D6               	dw	214
   604  009169  00D8               	dw	216
   605  00916B  00D9               	dw	217
   606  00916D  00DB               	dw	219
   607  00916F  00DD               	dw	221
   608  009171  00DF               	dw	223
   609  009173  00E1               	dw	225
   610  009175  00E2               	dw	226
   611  009177  00E5               	dw	229
   612  009179  00E7               	dw	231
   613  00917B  00E8               	dw	232
   614  00917D  00EA               	dw	234
   615  00917F  00EC               	dw	236
   616  009181  00EE               	dw	238
   617  009183  00EF               	dw	239
   618  009185  00F2               	dw	242
   619  009187  00F3               	dw	243
   620  009189  00F5               	dw	245
   621  00918B  00F7               	dw	247
   622  00918D  00F8               	dw	248
   623  00918F  00FB               	dw	251
   624  009191  00FD               	dw	253
   625  009193  0100               	dw	256
   626  009195  0103               	dw	259
   627  009197  0104               	dw	260
   628  009199  0107               	dw	263
   629  00919B  010A               	dw	266
   630  00919D  010C               	dw	268
   631  00919F  010F               	dw	271
   632  0091A1  0112               	dw	274
   633  0091A3  0114               	dw	276
   634  0091A5  0117               	dw	279
   635  0091A7  0119               	dw	281
   636  0091A9  011C               	dw	284
   637  0091AB  011E               	dw	286
   638  0091AD  0121               	dw	289
   639  0091AF  0123               	dw	291
   640  0091B1  0125               	dw	293
   641  0091B3  0129               	dw	297
   642  0091B5  012B               	dw	299
   643  0091B7  012C               	dw	300
   644  0091B9  012E               	dw	302
   645  0091BB  0132               	dw	306
   646  0091BD  0134               	dw	308
   647  0091BF  0136               	dw	310
   648  0091C1  0138               	dw	312
   649  0091C3  013B               	dw	315
   650  0091C5  013D               	dw	317
   651  0091C7  013F               	dw	319
   652  0091C9  0143               	dw	323
   653  0091CB  0146               	dw	326
   654  0091CD  0148               	dw	328
   655  0091CF  014A               	dw	330
   656  0091D1  014C               	dw	332
   657  0091D3  014F               	dw	335
   658  0091D5  0151               	dw	337
   659  0091D7  0154               	dw	340
   660  0091D9  0156               	dw	342
   661  0091DB  0159               	dw	345
   662  0091DD  015B               	dw	347
   663  0091DF  015E               	dw	350
   664  0091E1  0160               	dw	352
   665  0091E3  0163               	dw	355
   666  0091E5  0166               	dw	358
   667  0091E7  0169               	dw	361
   668  0091E9  016B               	dw	363
   669  0091EB  016E               	dw	366
   670  0091ED  0171               	dw	369
   671  0091EF  0174               	dw	372
   672  0091F1  0177               	dw	375
   673  0091F3  017A               	dw	378
   674  0091F5  017D               	dw	381
   675  0091F7  0180               	dw	384
   676  0091F9  0183               	dw	387
   677  0091FB  0187               	dw	391
   678  0091FD  018A               	dw	394
   679  0091FF  018D               	dw	397
   680  009201  0191               	dw	401
   681  009203  0194               	dw	404
   682  009205  0198               	dw	408
   683  009207  019B               	dw	411
   684  009209  019F               	dw	415
   685  00920B  01A3               	dw	419
   686  00920D  01A6               	dw	422
   687  00920F  01AA               	dw	426
   688  009211  01AE               	dw	430
   689  009213  01B2               	dw	434
   690  009215  01B6               	dw	438
   691  009217  01BA               	dw	442
   692  009219  01BE               	dw	446
   693  00921B  01C3               	dw	451
   694  00921D  01C7               	dw	455
   695  00921F  01CC               	dw	460
   696  009221  01D0               	dw	464
   697  009223  01D5               	dw	469
   698  009225  01D9               	dw	473
   699  009227  01DE               	dw	478
   700  009229  01E3               	dw	483
   701  00922B  01E8               	dw	488
   702  00922D  01ED               	dw	493
   703  00922F  01F3               	dw	499
   704  009231  01F8               	dw	504
   705  009233  01FE               	dw	510
   706  009235  0203               	dw	515
   707  009237  0209               	dw	521
   708  009239  020F               	dw	527
   709  00923B  0215               	dw	533
   710  00923D  021B               	dw	539
   711  00923F  0221               	dw	545
   712  009241  0227               	dw	551
   713  009243  022E               	dw	558
   714  009245  0235               	dw	565
   715  009247  023C               	dw	572
   716  009249  0243               	dw	579
   717  00924B  024A               	dw	586
   718  00924D  0251               	dw	593
   719  00924F  0259               	dw	601
   720  009251  0261               	dw	609
   721  009253  0269               	dw	617
   722  009255  0271               	dw	625
   723  009257  0279               	dw	633
   724  009259  0282               	dw	642
   725  00925B  028B               	dw	651
   726  00925D  0294               	dw	660
   727  00925F  029E               	dw	670
   728  009261  02A7               	dw	679
   729  009263  02B1               	dw	689
   730  009265  02BC               	dw	700
   731  009267  02C6               	dw	710
   732  009269  02D1               	dw	721
   733  00926B  02DC               	dw	732
   734  00926D  02DC               	dw	732
   735  00926F  02DF               	dw	735
   736  009271  02E2               	dw	738
   737  009273  02E5               	dw	741
   738  009275  02E8               	dw	744
   739  009277  02EB               	dw	747
   740  009279  02EE               	dw	750
   741  00927B  02F1               	dw	753
   742  00927D  02F4               	dw	756
   743  00927F  02F7               	dw	759
   744  009281  02FA               	dw	762
   745  009283  02FD               	dw	765
   746  009285  0300               	dw	768
   747  009287  0304               	dw	772
   748  009289  0307               	dw	775
   749  00928B  030A               	dw	778
   750  00928D  030D               	dw	781
   751  00928F  0311               	dw	785
   752  009291  0314               	dw	788
   753  009293  0317               	dw	791
   754  009295  031A               	dw	794
   755  009297  031E               	dw	798
   756  009299  0321               	dw	801
   757  00929B  0325               	dw	805
   758  00929D  0328               	dw	808
   759  00929F  032C               	dw	812
   760  0092A1  032F               	dw	815
   761  0092A3  0333               	dw	819
   762  0092A5  0336               	dw	822
   763  0092A7  033A               	dw	826
   764  0092A9  033E               	dw	830
   765  0092AB  0341               	dw	833
   766  0092AD  0345               	dw	837
   767  0092AF  0349               	dw	841
   768  0092B1  034D               	dw	845
   769  0092B3  0350               	dw	848
   770  0092B5  0354               	dw	852
   771  0092B7  0358               	dw	856
   772  0092B9  035C               	dw	860
   773  0092BB  0360               	dw	864
   774  0092BD  0364               	dw	868
   775  0092BF  0368               	dw	872
   776  0092C1  036C               	dw	876
   777  0092C3  0370               	dw	880
   778  0092C5  0374               	dw	884
   779  0092C7  0379               	dw	889
   780  0092C9  037D               	dw	893
   781  0092CB  0381               	dw	897
   782  0092CD  0385               	dw	901
   783  0092CF  038A               	dw	906
   784  0092D1  038E               	dw	910
   785  0092D3  0393               	dw	915
   786  0092D5  0397               	dw	919
   787  0092D7  039C               	dw	924
   788  0092D9  03A0               	dw	928
   789  0092DB  03A5               	dw	933
   790  0092DD  03AA               	dw	938
   791  0092DF  03AE               	dw	942
   792  0092E1  03B3               	dw	947
   793  0092E3  03B8               	dw	952
   794  0092E5  03BD               	dw	957
   795  0092E7  03C2               	dw	962
   796  0092E9  03C6               	dw	966
   797  0092EB  03CC               	dw	972
   798  0092ED  03D1               	dw	977
   799  0092EF  03D6               	dw	982
   800  0092F1  03DB               	dw	987
   801  0092F3  03E0               	dw	992
   802  0092F5  03E5               	dw	997
   803  0092F7  03EB               	dw	1003
   804  0092F9  03F0               	dw	1008
   805  0092FB  03F6               	dw	1014
   806  0092FD  03FB               	dw	1019
   807  0092FF  0401               	dw	1025
   808  009301  0406               	dw	1030
   809  009303  040C               	dw	1036
   810  009305  0412               	dw	1042
   811  009307  0417               	dw	1047
   812  009309  041D               	dw	1053
   813  00930B  0423               	dw	1059
   814  00930D  0429               	dw	1065
   815  00930F  042F               	dw	1071
   816  009311  0436               	dw	1078
   817  009313  043C               	dw	1084
   818  009315  0442               	dw	1090
   819  009317  0448               	dw	1096
   820  009319  044F               	dw	1103
   821  00931B  0455               	dw	1109
   822  00931D  045C               	dw	1116
   823  00931F  0463               	dw	1123
   824  009321  046A               	dw	1130
   825  009323  0470               	dw	1136
   826  009325  0477               	dw	1143
   827  009327  047E               	dw	1150
   828  009329  0485               	dw	1157
   829  00932B  048D               	dw	1165
   830  00932D  0494               	dw	1172
   831  00932F  049B               	dw	1179
   832  009331  04A3               	dw	1187
   833  009333  04AA               	dw	1194
   834  009335  04B2               	dw	1202
   835  009337  04BA               	dw	1210
   836  009339  04C2               	dw	1218
   837  00933B  04C9               	dw	1225
   838  00933D  04D2               	dw	1234
   839  00933F  04DA               	dw	1242
   840  009341  04E2               	dw	1250
   841  009343  04EA               	dw	1258
   842  009345  04F3               	dw	1267
   843  009347  04FC               	dw	1276
   844  009349  0504               	dw	1284
   845  00934B  050D               	dw	1293
   846  00934D  0516               	dw	1302
   847  00934F  051F               	dw	1311
   848  009351  0528               	dw	1320
   849  009353  0532               	dw	1330
   850  009355  053B               	dw	1339
   851  009357  0545               	dw	1349
   852  009359  054F               	dw	1359
   853  00935B  0559               	dw	1369
   854  00935D  0563               	dw	1379
   855  00935F  056D               	dw	1389
   856  009361  0577               	dw	1399
   857  009363  0582               	dw	1410
   858  009365  058C               	dw	1420
   859  009367  0597               	dw	1431
   860  009369  05A2               	dw	1442
   861  00936B  05AD               	dw	1453
   862  00936D  05B9               	dw	1465
   863  00936F  05C4               	dw	1476
   864  009371  05D0               	dw	1488
   865  009373  05DC               	dw	1500
   866  009375  05E8               	dw	1512
   867  009377  05F4               	dw	1524
   868  009379  0601               	dw	1537
   869  00937B  060E               	dw	1550
   870  00937D  061A               	dw	1562
   871  00937F  0628               	dw	1576
   872  009381  0635               	dw	1589
   873  009383  0643               	dw	1603
   874  009385  0650               	dw	1616
   875  009387  065E               	dw	1630
   876  009389  066D               	dw	1645
   877  00938B  067B               	dw	1659
   878  00938D  068A               	dw	1674
   879  00938F  0699               	dw	1689
   880  009391  06A9               	dw	1705
   881  009393  06B8               	dw	1720
   882  009395  06C8               	dw	1736
   883  009397  06D8               	dw	1752
   884  009399  06E9               	dw	1769
   885  00939B  06FA               	dw	1786
   886  00939D  070B               	dw	1803
   887  00939F  071C               	dw	1820
   888  0093A1  072E               	dw	1838
   889  0093A3  0740               	dw	1856
   890  0093A5  0753               	dw	1875
   891  0093A7  0766               	dw	1894
   892  0093A9  0779               	dw	1913
   893  0093AB  078D               	dw	1933
   894  0093AD  07A1               	dw	1953
   895  0093AF  07B6               	dw	1974
   896  0093B1  07CB               	dw	1995
   897  0093B3  07E0               	dw	2016
   898  0093B5  07F6               	dw	2038
   899  0093B7  080C               	dw	2060
   900  0093B9  0823               	dw	2083
   901  0093BB  083B               	dw	2107
   902  0093BD  0853               	dw	2131
   903  0093BF  086B               	dw	2155
   904  0093C1  0884               	dw	2180
   905  0093C3  089E               	dw	2206
   906  0093C5  08B8               	dw	2232
   907  0093C7  08D3               	dw	2259
   908  0093C9  08EF               	dw	2287
   909  0093CB  090B               	dw	2315
   910  0093CD  0928               	dw	2344
   911  0093CF  0945               	dw	2373
   912  0093D1  0964               	dw	2404
   913  0093D3  0983               	dw	2435
   914  0093D5  09A3               	dw	2467
   915  0093D7  09C4               	dw	2500
   916  0093D9  09E6               	dw	2534
   917  0093DB  0A08               	dw	2568
   918  0093DD  0A2C               	dw	2604
   919  0093DF  0A51               	dw	2641
   920  0093E1  0A77               	dw	2679
   921  0093E3  0A9D               	dw	2717
   922  0093E5  0AC5               	dw	2757
   923  0093E7  0AEF               	dw	2799
   924  0093E9  0B19               	dw	2841
   925  0093EB  0B45               	dw	2885
   926  0093ED  0B72               	dw	2930
   927  0093EF  0B72               	dw	2930
   928  0093F1  0B7D               	dw	2941
   929  0093F3  0B89               	dw	2953
   930  0093F5  0B94               	dw	2964
   931  0093F7  0BA0               	dw	2976
   932  0093F9  0BAC               	dw	2988
   933  0093FB  0BB8               	dw	3000
   934  0093FD  0BC4               	dw	3012
   935  0093FF  0BD0               	dw	3024
   936  009401  0BDC               	dw	3036
   937  009403  0BE9               	dw	3049
   938  009405  0BF5               	dw	3061
   939  009407  0C02               	dw	3074
   940  009409  0C0E               	dw	3086
   941  00940B  0C1B               	dw	3099
   942  00940D  0C28               	dw	3112
   943  00940F  0C35               	dw	3125
   944  009411  0C42               	dw	3138
   945  009413  0C4F               	dw	3151
   946  009415  0C5D               	dw	3165
   947  009417  0C6A               	dw	3178
   948  009419  0C77               	dw	3191
   949  00941B  0C85               	dw	3205
   950  00941D  0C93               	dw	3219
   951  00941F  0CA1               	dw	3233
   952  009421  0CAF               	dw	3247
   953  009423  0CBD               	dw	3261
   954  009425  0CCB               	dw	3275
   955  009427  0CD9               	dw	3289
   956  009429  0CE8               	dw	3304
   957  00942B  0CF7               	dw	3319
   958  00942D  0D05               	dw	3333
   959  00942F  0D14               	dw	3348
   960  009431  0D23               	dw	3363
   961  009433  0D32               	dw	3378
   962  009435  0D42               	dw	3394
   963  009437  0D51               	dw	3409
   964  009439  0D61               	dw	3425
   965  00943B  0D70               	dw	3440
   966  00943D  0D80               	dw	3456
   967  00943F  0D90               	dw	3472
   968  009441  0DA0               	dw	3488
   969  009443  0DB1               	dw	3505
   970  009445  0DC1               	dw	3521
   971  009447  0DD2               	dw	3538
   972  009449  0DE3               	dw	3555
   973  00944B  0DF3               	dw	3571
   974  00944D  0E05               	dw	3589
   975  00944F  0E16               	dw	3606
   976  009451  0E27               	dw	3623
   977  009453  0E39               	dw	3641
   978  009455  0E4B               	dw	3659
   979  009457  0E5C               	dw	3676
   980  009459  0E6F               	dw	3695
   981  00945B  0E81               	dw	3713
   982  00945D  0E93               	dw	3731
   983  00945F  0EA6               	dw	3750
   984  009461                     __end_of_motor_speed_lookup:
   985                           	opt stack 0
   986  009461                     _motor_steps_lookup:
   987                           	opt stack 0
   988  009461  0001               	dw	1
   989  009463  0002               	dw	2
   990  009465  0003               	dw	3
   991  009467  0004               	dw	4
   992  009469  0005               	dw	5
   993  00946B  0006               	dw	6
   994  00946D  0007               	dw	7
   995  00946F  0008               	dw	8
   996  009471  0009               	dw	9
   997  009473  000A               	dw	10
   998  009475  000B               	dw	11
   999  009477  000C               	dw	12
  1000  009479  000D               	dw	13
  1001  00947B  000E               	dw	14
  1002  00947D  000F               	dw	15
  1003  00947F  0010               	dw	16
  1004  009481  0011               	dw	17
  1005  009483  0012               	dw	18
  1006  009485  0013               	dw	19
  1007  009487  0014               	dw	20
  1008  009489  0015               	dw	21
  1009  00948B  0016               	dw	22
  1010  00948D  0017               	dw	23
  1011  00948F  0018               	dw	24
  1012  009491  0019               	dw	25
  1013  009493  001A               	dw	26
  1014  009495  001B               	dw	27
  1015  009497  001C               	dw	28
  1016  009499  001D               	dw	29
  1017  00949B  001E               	dw	30
  1018  00949D  001F               	dw	31
  1019  00949F  0020               	dw	32
  1020  0094A1  0021               	dw	33
  1021  0094A3  0022               	dw	34
  1022  0094A5  0023               	dw	35
  1023  0094A7  0024               	dw	36
  1024  0094A9  0025               	dw	37
  1025  0094AB  0026               	dw	38
  1026  0094AD  0027               	dw	39
  1027  0094AF  0028               	dw	40
  1028  0094B1  0029               	dw	41
  1029  0094B3  002A               	dw	42
  1030  0094B5  002B               	dw	43
  1031  0094B7  002C               	dw	44
  1032  0094B9  002D               	dw	45
  1033  0094BB  002E               	dw	46
  1034  0094BD  002F               	dw	47
  1035  0094BF  0030               	dw	48
  1036  0094C1  0031               	dw	49
  1037  0094C3  0032               	dw	50
  1038  0094C5  0033               	dw	51
  1039  0094C7  0034               	dw	52
  1040  0094C9  0035               	dw	53
  1041  0094CB  0036               	dw	54
  1042  0094CD  0037               	dw	55
  1043  0094CF  0038               	dw	56
  1044  0094D1  0039               	dw	57
  1045  0094D3  003A               	dw	58
  1046  0094D5  003B               	dw	59
  1047  0094D7  003C               	dw	60
  1048  0094D9  003D               	dw	61
  1049  0094DB  003E               	dw	62
  1050  0094DD  003F               	dw	63
  1051  0094DF  0040               	dw	64
  1052  0094E1  0041               	dw	65
  1053  0094E3  0042               	dw	66
  1054  0094E5  0043               	dw	67
  1055  0094E7  0045               	dw	69
  1056  0094E9  0047               	dw	71
  1057  0094EB  0049               	dw	73
  1058  0094ED  004B               	dw	75
  1059  0094EF  004D               	dw	77
  1060  0094F1  004F               	dw	79
  1061  0094F3  0051               	dw	81
  1062  0094F5  0053               	dw	83
  1063  0094F7  0055               	dw	85
  1064  0094F9  0057               	dw	87
  1065  0094FB  0059               	dw	89
  1066  0094FD  005B               	dw	91
  1067  0094FF  005D               	dw	93
  1068  009501  005F               	dw	95
  1069  009503  0061               	dw	97
  1070  009505  0063               	dw	99
  1071  009507  0065               	dw	101
  1072  009509  0067               	dw	103
  1073  00950B  0069               	dw	105
  1074  00950D  006B               	dw	107
  1075  00950F  006E               	dw	110
  1076  009511  0070               	dw	112
  1077  009513  0073               	dw	115
  1078  009515  0075               	dw	117
  1079  009517  0077               	dw	119
  1080  009519  0079               	dw	121
  1081  00951B  007B               	dw	123
  1082  00951D  007D               	dw	125
  1083  00951F  007F               	dw	127
  1084  009521  0081               	dw	129
  1085  009523  0083               	dw	131
  1086  009525  0085               	dw	133
  1087  009527  0087               	dw	135
  1088  009529  0089               	dw	137
  1089  00952B  008B               	dw	139
  1090  00952D  008D               	dw	141
  1091  00952F  008F               	dw	143
  1092  009531  0091               	dw	145
  1093  009533  0093               	dw	147
  1094  009535  0095               	dw	149
  1095  009537  0097               	dw	151
  1096  009539  0099               	dw	153
  1097  00953B  009B               	dw	155
  1098  00953D  009D               	dw	157
  1099  00953F  009F               	dw	159
  1100  009541  00A1               	dw	161
  1101  009543  00A3               	dw	163
  1102  009545  00A5               	dw	165
  1103  009547  00A7               	dw	167
  1104  009549  00A9               	dw	169
  1105  00954B  00AB               	dw	171
  1106  00954D  00AD               	dw	173
  1107  00954F  00AF               	dw	175
  1108  009551  00B1               	dw	177
  1109  009553  00B3               	dw	179
  1110  009555  00B5               	dw	181
  1111  009557  00B7               	dw	183
  1112  009559  00B9               	dw	185
  1113  00955B  00BB               	dw	187
  1114  00955D  00BD               	dw	189
  1115  00955F  00C0               	dw	192
  1116  009561  00C3               	dw	195
  1117  009563  00C6               	dw	198
  1118  009565  00C9               	dw	201
  1119  009567  00CC               	dw	204
  1120  009569  00CF               	dw	207
  1121  00956B  00D2               	dw	210
  1122  00956D  00D5               	dw	213
  1123  00956F  00D8               	dw	216
  1124  009571  00DB               	dw	219
  1125  009573  00DE               	dw	222
  1126  009575  00E1               	dw	225
  1127  009577  00E4               	dw	228
  1128  009579  00E7               	dw	231
  1129  00957B  00EA               	dw	234
  1130  00957D  00ED               	dw	237
  1131  00957F  00F0               	dw	240
  1132  009581  00F3               	dw	243
  1133  009583  00F6               	dw	246
  1134  009585  00F9               	dw	249
  1135  009587  00FC               	dw	252
  1136  009589  00FF               	dw	255
  1137  00958B  0102               	dw	258
  1138  00958D  0105               	dw	261
  1139  00958F  0108               	dw	264
  1140  009591  010B               	dw	267
  1141  009593  010E               	dw	270
  1142  009595  0111               	dw	273
  1143  009597  0114               	dw	276
  1144  009599  0117               	dw	279
  1145  00959B  011A               	dw	282
  1146  00959D  011D               	dw	285
  1147  00959F  0120               	dw	288
  1148  0095A1  0123               	dw	291
  1149  0095A3  0126               	dw	294
  1150  0095A5  012A               	dw	298
  1151  0095A7  012D               	dw	301
  1152  0095A9  0130               	dw	304
  1153  0095AB  0133               	dw	307
  1154  0095AD  0137               	dw	311
  1155  0095AF  013A               	dw	314
  1156  0095B1  013E               	dw	318
  1157  0095B3  0142               	dw	322
  1158  0095B5  0145               	dw	325
  1159  0095B7  0149               	dw	329
  1160  0095B9  014D               	dw	333
  1161  0095BB  0151               	dw	337
  1162  0095BD  0155               	dw	341
  1163  0095BF  0159               	dw	345
  1164  0095C1  015D               	dw	349
  1165  0095C3  0161               	dw	353
  1166  0095C5  0166               	dw	358
  1167  0095C7  016A               	dw	362
  1168  0095C9  016E               	dw	366
  1169  0095CB  0173               	dw	371
  1170  0095CD  0178               	dw	376
  1171  0095CF  017D               	dw	381
  1172  0095D1  0182               	dw	386
  1173  0095D3  0187               	dw	391
  1174  0095D5  018C               	dw	396
  1175  0095D7  0191               	dw	401
  1176  0095D9  0196               	dw	406
  1177  0095DB  019C               	dw	412
  1178  0095DD  01A1               	dw	417
  1179  0095DF  01A7               	dw	423
  1180  0095E1  01AD               	dw	429
  1181  0095E3  01B3               	dw	435
  1182  0095E5  01B9               	dw	441
  1183  0095E7  01BF               	dw	447
  1184  0095E9  01C6               	dw	454
  1185  0095EB  01CC               	dw	460
  1186  0095ED  01D3               	dw	467
  1187  0095EF  01DA               	dw	474
  1188  0095F1  01E1               	dw	481
  1189  0095F3  01E8               	dw	488
  1190  0095F5  01F0               	dw	496
  1191  0095F7  01F7               	dw	503
  1192  0095F9  01FF               	dw	511
  1193  0095FB  0207               	dw	519
  1194  0095FD  020F               	dw	527
  1195  0095FF  0218               	dw	536
  1196  009601  0221               	dw	545
  1197  009603  022A               	dw	554
  1198  009605  0233               	dw	563
  1199  009607  023D               	dw	573
  1200  009609  0247               	dw	583
  1201  00960B  0251               	dw	593
  1202  00960D  025C               	dw	604
  1203  00960F  0267               	dw	615
  1204  009611  0272               	dw	626
  1205  009613  027E               	dw	638
  1206  009615  028A               	dw	650
  1207  009617  0297               	dw	663
  1208  009619  02A4               	dw	676
  1209  00961B  02B2               	dw	690
  1210  00961D  02C0               	dw	704
  1211  00961F  02CF               	dw	719
  1212  009621  02DF               	dw	735
  1213  009623  02EF               	dw	751
  1214  009625  02FF               	dw	767
  1215  009627  0311               	dw	785
  1216  009629  0323               	dw	803
  1217  00962B  0336               	dw	822
  1218  00962D  0349               	dw	841
  1219  00962F  035E               	dw	862
  1220  009631  0373               	dw	883
  1221  009633  0389               	dw	905
  1222  009635  03A1               	dw	929
  1223  009637  03B9               	dw	953
  1224  009639  03D3               	dw	979
  1225  00963B  03DD               	dw	989
  1226  00963D  03E4               	dw	996
  1227  00963F  03EA               	dw	1002
  1228  009641  03F1               	dw	1009
  1229  009643  03F8               	dw	1016
  1230  009645  03FF               	dw	1023
  1231  009647  0406               	dw	1030
  1232  009649  040D               	dw	1037
  1233  00964B  0415               	dw	1045
  1234  00964D  041C               	dw	1052
  1235  00964F  0424               	dw	1060
  1236  009651  042B               	dw	1067
  1237  009653  0433               	dw	1075
  1238  009655  043B               	dw	1083
  1239  009657  0442               	dw	1090
  1240  009659  044A               	dw	1098
  1241  00965B  0452               	dw	1106
  1242  00965D  045A               	dw	1114
  1243  00965F  0463               	dw	1123
  1244  009661  046B               	dw	1131
  1245  009663  0474               	dw	1140
  1246  009665  047C               	dw	1148
  1247  009667  0485               	dw	1157
  1248  009669  048E               	dw	1166
  1249  00966B  0496               	dw	1174
  1250  00966D  049F               	dw	1183
  1251  00966F  04A9               	dw	1193
  1252  009671  04B2               	dw	1202
  1253  009673  04BB               	dw	1211
  1254  009675  04C5               	dw	1221
  1255  009677  04CE               	dw	1230
  1256  009679  04D8               	dw	1240
  1257  00967B  04E2               	dw	1250
  1258  00967D  04EC               	dw	1260
  1259  00967F  04F6               	dw	1270
  1260  009681  0500               	dw	1280
  1261  009683  050B               	dw	1291
  1262  009685  0515               	dw	1301
  1263  009687  0520               	dw	1312
  1264  009689  052B               	dw	1323
  1265  00968B  0536               	dw	1334
  1266  00968D  0541               	dw	1345
  1267  00968F  054C               	dw	1356
  1268  009691  0558               	dw	1368
  1269  009693  0564               	dw	1380
  1270  009695  056F               	dw	1391
  1271  009697  057B               	dw	1403
  1272  009699  0587               	dw	1415
  1273  00969B  0594               	dw	1428
  1274  00969D  05A0               	dw	1440
  1275  00969F  05AD               	dw	1453
  1276  0096A1  05BA               	dw	1466
  1277  0096A3  05C7               	dw	1479
  1278  0096A5  05D4               	dw	1492
  1279  0096A7  05E2               	dw	1506
  1280  0096A9  05EF               	dw	1519
  1281  0096AB  05FD               	dw	1533
  1282  0096AD  060B               	dw	1547
  1283  0096AF  0619               	dw	1561
  1284  0096B1  0628               	dw	1576
  1285  0096B3  0637               	dw	1591
  1286  0096B5  0646               	dw	1606
  1287  0096B7  0655               	dw	1621
  1288  0096B9  0664               	dw	1636
  1289  0096BB  0674               	dw	1652
  1290  0096BD  0684               	dw	1668
  1291  0096BF  0694               	dw	1684
  1292  0096C1  06A4               	dw	1700
  1293  0096C3  06B5               	dw	1717
  1294  0096C5  06C6               	dw	1734
  1295  0096C7  06D7               	dw	1751
  1296  0096C9  06E9               	dw	1769
  1297  0096CB  06FA               	dw	1786
  1298  0096CD  070C               	dw	1804
  1299  0096CF  071F               	dw	1823
  1300  0096D1  0731               	dw	1841
  1301  0096D3  0744               	dw	1860
  1302  0096D5  0758               	dw	1880
  1303  0096D7  076B               	dw	1899
  1304  0096D9  077F               	dw	1919
  1305  0096DB  0793               	dw	1939
  1306  0096DD  07A8               	dw	1960
  1307  0096DF  07BD               	dw	1981
  1308  0096E1  07D2               	dw	2002
  1309  0096E3  07E8               	dw	2024
  1310  0096E5  07FE               	dw	2046
  1311  0096E7  0815               	dw	2069
  1312  0096E9  082C               	dw	2092
  1313  0096EB  0843               	dw	2115
  1314  0096ED  085B               	dw	2139
  1315  0096EF  0873               	dw	2163
  1316  0096F1  088B               	dw	2187
  1317  0096F3  08A5               	dw	2213
  1318  0096F5  08BE               	dw	2238
  1319  0096F7  08D8               	dw	2264
  1320  0096F9  08F2               	dw	2290
  1321  0096FB  090D               	dw	2317
  1322  0096FD  0929               	dw	2345
  1323  0096FF  0945               	dw	2373
  1324  009701  0961               	dw	2401
  1325  009703  097E               	dw	2430
  1326  009705  099C               	dw	2460
  1327  009707  09BA               	dw	2490
  1328  009709  09D9               	dw	2521
  1329  00970B  09F9               	dw	2553
  1330  00970D  0A19               	dw	2585
  1331  00970F  0A39               	dw	2617
  1332  009711  0A5B               	dw	2651
  1333  009713  0A7D               	dw	2685
  1334  009715  0A9F               	dw	2719
  1335  009717  0AC3               	dw	2755
  1336  009719  0AE7               	dw	2791
  1337  00971B  0B0C               	dw	2828
  1338  00971D  0B31               	dw	2865
  1339  00971F  0B58               	dw	2904
  1340  009721  0B7F               	dw	2943
  1341  009723  0BA7               	dw	2983
  1342  009725  0BD0               	dw	3024
  1343  009727  0BFA               	dw	3066
  1344  009729  0C25               	dw	3109
  1345  00972B  0C51               	dw	3153
  1346  00972D  0C7E               	dw	3198
  1347  00972F  0CAB               	dw	3243
  1348  009731  0CDA               	dw	3290
  1349  009733  0D0A               	dw	3338
  1350  009735  0D3B               	dw	3387
  1351  009737  0D6D               	dw	3437
  1352  009739  0DA0               	dw	3488
  1353  00973B  0DD4               	dw	3540
  1354  00973D  0E0A               	dw	3594
  1355  00973F  0E41               	dw	3649
  1356  009741  0E79               	dw	3705
  1357  009743  0EB3               	dw	3763
  1358  009745  0EEE               	dw	3822
  1359  009747  0F2A               	dw	3882
  1360  009749  0F68               	dw	3944
  1361  00974B  0FA8               	dw	4008
  1362  00974D  0FE9               	dw	4073
  1363  00974F  102C               	dw	4140
  1364  009751  1070               	dw	4208
  1365  009753  10B6               	dw	4278
  1366  009755  10FE               	dw	4350
  1367  009757  1148               	dw	4424
  1368  009759  1194               	dw	4500
  1369  00975B  11E2               	dw	4578
  1370  00975D  1232               	dw	4658
  1371  00975F  1285               	dw	4741
  1372  009761  12D9               	dw	4825
  1373  009763  1330               	dw	4912
  1374  009765  1389               	dw	5001
  1375  009767  13E5               	dw	5093
  1376  009769  1444               	dw	5188
  1377  00976B  14A5               	dw	5285
  1378  00976D  1509               	dw	5385
  1379  00976F  1570               	dw	5488
  1380  009771  15DA               	dw	5594
  1381  009773  1647               	dw	5703
  1382  009775  16B8               	dw	5816
  1383  009777  172B               	dw	5931
  1384  009779  17A3               	dw	6051
  1385  00977B  181E               	dw	6174
  1386  00977D  189D               	dw	6301
  1387  00977F  1921               	dw	6433
  1388  009781  19A8               	dw	6568
  1389  009783  1A34               	dw	6708
  1390  009785  1AC4               	dw	6852
  1391  009787  1B5A               	dw	7002
  1392  009789  1BF4               	dw	7156
  1393  00978B  1C94               	dw	7316
  1394  00978D  1D39               	dw	7481
  1395  00978F  1DE4               	dw	7652
  1396  009791  1E95               	dw	7829
  1397  009793  1F4C               	dw	8012
  1398  009795  200A               	dw	8202
  1399  009797  20CE               	dw	8398
  1400  009799  219A               	dw	8602
  1401  00979B  226E               	dw	8814
  1402  00979D  234A               	dw	9034
  1403  00979F  242E               	dw	9262
  1404  0097A1  251B               	dw	9499
  1405  0097A3  2612               	dw	9746
  1406  0097A5  2712               	dw	10002
  1407  0097A7  281D               	dw	10269
  1408  0097A9  2932               	dw	10546
  1409  0097AB  2A53               	dw	10835
  1410  0097AD  2B81               	dw	11137
  1411  0097AF  2CBB               	dw	11451
  1412  0097B1  2E03               	dw	11779
  1413  0097B3  2F5A               	dw	12122
  1414  0097B5  30C0               	dw	12480
  1415  0097B7  3236               	dw	12854
  1416  0097B9  33BD               	dw	13245
  1417  0097BB  3557               	dw	13655
  1418  0097BD  35F5               	dw	13813
  1419  0097BF  3661               	dw	13921
  1420  0097C1  36CD               	dw	14029
  1421  0097C3  373B               	dw	14139
  1422  0097C5  37AA               	dw	14250
  1423  0097C7  381B               	dw	14363
  1424  0097C9  388C               	dw	14476
  1425  0097CB  3900               	dw	14592
  1426  0097CD  3974               	dw	14708
  1427  0097CF  39EA               	dw	14826
  1428  0097D1  3A62               	dw	14946
  1429  0097D3  3ADB               	dw	15067
  1430  0097D5  3B55               	dw	15189
  1431  0097D7  3BD1               	dw	15313
  1432  0097D9  3C4E               	dw	15438
  1433  0097DB  3CCD               	dw	15565
  1434  0097DD  3D4E               	dw	15694
  1435  0097DF  3DD0               	dw	15824
  1436  0097E1  3E54               	dw	15956
  1437  0097E3  3EDA               	dw	16090
  1438  0097E5  3F61               	dw	16225
  1439  0097E7  3FEA               	dw	16362
  1440  0097E9  4074               	dw	16500
  1441  0097EB  4101               	dw	16641
  1442  0097ED  418F               	dw	16783
  1443  0097EF  421F               	dw	16927
  1444  0097F1  42B1               	dw	17073
  1445  0097F3  4345               	dw	17221
  1446  0097F5  43DB               	dw	17371
  1447  0097F7  4473               	dw	17523
  1448  0097F9  450D               	dw	17677
  1449  0097FB  45A9               	dw	17833
  1450  0097FD  4647               	dw	17991
  1451  0097FF  46E7               	dw	18151
  1452  009801  4789               	dw	18313
  1453  009803  482E               	dw	18478
  1454  009805  48D5               	dw	18645
  1455  009807  497E               	dw	18814
  1456  009809  4A29               	dw	18985
  1457  00980B  4AD7               	dw	19159
  1458  00980D  4B87               	dw	19335
  1459  00980F  4C3A               	dw	19514
  1460  009811  4CEF               	dw	19695
  1461  009813  4DA6               	dw	19878
  1462  009815  4E61               	dw	20065
  1463  009817  4F1E               	dw	20254
  1464  009819  4FDD               	dw	20445
  1465  00981B  50A0               	dw	20640
  1466  00981D  5165               	dw	20837
  1467  00981F  522D               	dw	21037
  1468  009821  52F8               	dw	21240
  1469  009823  53C6               	dw	21446
  1470  009825  5497               	dw	21655
  1471  009827  556B               	dw	21867
  1472  009829  5642               	dw	22082
  1473  00982B  571C               	dw	22300
  1474  00982D  57FA               	dw	22522
  1475  00982F                     __end_of_motor_steps_lookup:
  1476                           	opt stack 0
  1477  00982F                     _motor_postscaler_lookup:
  1478                           	opt stack 0
  1479  00982F  0C                 	db	12
  1480  009830  07                 	db	7
  1481  009831  05                 	db	5
  1482  009832  04                 	db	4
  1483  009833  04                 	db	4
  1484  009834  03                 	db	3
  1485  009835  03                 	db	3
  1486  009836  03                 	db	3
  1487  009837  02                 	db	2
  1488  009838  02                 	db	2
  1489  009839  02                 	db	2
  1490  00983A  02                 	db	2
  1491  00983B  02                 	db	2
  1492  00983C  02                 	db	2
  1493  00983D  01                 	db	1
  1494  00983E  01                 	db	1
  1495  00983F  01                 	db	1
  1496  009840  01                 	db	1
  1497  009841  01                 	db	1
  1498  009842  01                 	db	1
  1499  009843  01                 	db	1
  1500  009844  01                 	db	1
  1501  009845  01                 	db	1
  1502  009846  01                 	db	1
  1503  009847  01                 	db	1
  1504  009848  01                 	db	1
  1505  009849  01                 	db	1
  1506  00984A  01                 	db	1
  1507  00984B  01                 	db	1
  1508  00984C  01                 	db	1
  1509  00984D  01                 	db	1
  1510  00984E  01                 	db	1
  1511  00984F  01                 	db	1
  1512  009850  01                 	db	1
  1513  009851  01                 	db	1
  1514  009852  01                 	db	1
  1515  009853  01                 	db	1
  1516  009854  01                 	db	1
  1517  009855  01                 	db	1
  1518  009856  01                 	db	1
  1519  009857  01                 	db	1
  1520  009858  01                 	db	1
  1521  009859  01                 	db	1
  1522  00985A  01                 	db	1
  1523  00985B  01                 	db	1
  1524  00985C  01                 	db	1
  1525  00985D  01                 	db	1
  1526  00985E  01                 	db	1
  1527  00985F  01                 	db	1
  1528  009860  01                 	db	1
  1529  009861  01                 	db	1
  1530  009862  01                 	db	1
  1531  009863  01                 	db	1
  1532  009864  01                 	db	1
  1533  009865  01                 	db	1
  1534  009866  01                 	db	1
  1535  009867  01                 	db	1
  1536  009868  01                 	db	1
  1537  009869  01                 	db	1
  1538  00986A  01                 	db	1
  1539  00986B  01                 	db	1
  1540  00986C  01                 	db	1
  1541  00986D  01                 	db	1
  1542  00986E  01                 	db	1
  1543  00986F  01                 	db	1
  1544  009870  01                 	db	1
  1545  009871  01                 	db	1
  1546  009872  01                 	db	1
  1547  009873  01                 	db	1
  1548  009874  01                 	db	1
  1549  009875  01                 	db	1
  1550  009876  01                 	db	1
  1551  009877  01                 	db	1
  1552  009878  01                 	db	1
  1553  009879  01                 	db	1
  1554  00987A  01                 	db	1
  1555  00987B  01                 	db	1
  1556  00987C  01                 	db	1
  1557  00987D  01                 	db	1
  1558  00987E  01                 	db	1
  1559  00987F  01                 	db	1
  1560  009880  01                 	db	1
  1561  009881  01                 	db	1
  1562  009882  01                 	db	1
  1563  009883  01                 	db	1
  1564  009884  01                 	db	1
  1565  009885  01                 	db	1
  1566  009886  01                 	db	1
  1567  009887  01                 	db	1
  1568  009888  01                 	db	1
  1569  009889  01                 	db	1
  1570  00988A  00                 	db	0
  1571  00988B  00                 	db	0
  1572  00988C  00                 	db	0
  1573  00988D  00                 	db	0
  1574  00988E  00                 	db	0
  1575  00988F  00                 	db	0
  1576  009890  00                 	db	0
  1577  009891  00                 	db	0
  1578  009892  00                 	db	0
  1579  009893  00                 	db	0
  1580  009894  00                 	db	0
  1581  009895  00                 	db	0
  1582  009896  00                 	db	0
  1583  009897  00                 	db	0
  1584  009898  00                 	db	0
  1585  009899  00                 	db	0
  1586  00989A  00                 	db	0
  1587  00989B  00                 	db	0
  1588  00989C  00                 	db	0
  1589  00989D  00                 	db	0
  1590  00989E  00                 	db	0
  1591  00989F  00                 	db	0
  1592  0098A0  00                 	db	0
  1593  0098A1  00                 	db	0
  1594  0098A2  00                 	db	0
  1595  0098A3  00                 	db	0
  1596  0098A4  00                 	db	0
  1597  0098A5  00                 	db	0
  1598  0098A6  00                 	db	0
  1599  0098A7  00                 	db	0
  1600  0098A8  00                 	db	0
  1601  0098A9  00                 	db	0
  1602  0098AA  00                 	db	0
  1603  0098AB  00                 	db	0
  1604  0098AC  00                 	db	0
  1605  0098AD  00                 	db	0
  1606  0098AE  00                 	db	0
  1607  0098AF  00                 	db	0
  1608  0098B0  00                 	db	0
  1609  0098B1  00                 	db	0
  1610  0098B2  00                 	db	0
  1611  0098B3  00                 	db	0
  1612  0098B4  00                 	db	0
  1613  0098B5  00                 	db	0
  1614  0098B6  00                 	db	0
  1615  0098B7  00                 	db	0
  1616  0098B8  00                 	db	0
  1617  0098B9  00                 	db	0
  1618  0098BA  00                 	db	0
  1619  0098BB  00                 	db	0
  1620  0098BC  00                 	db	0
  1621  0098BD  00                 	db	0
  1622  0098BE  00                 	db	0
  1623  0098BF  00                 	db	0
  1624  0098C0  00                 	db	0
  1625  0098C1  00                 	db	0
  1626  0098C2  00                 	db	0
  1627  0098C3  00                 	db	0
  1628  0098C4  00                 	db	0
  1629  0098C5  00                 	db	0
  1630  0098C6  00                 	db	0
  1631  0098C7  00                 	db	0
  1632  0098C8  00                 	db	0
  1633  0098C9  00                 	db	0
  1634  0098CA  00                 	db	0
  1635  0098CB  00                 	db	0
  1636  0098CC  00                 	db	0
  1637  0098CD  00                 	db	0
  1638  0098CE  00                 	db	0
  1639  0098CF  00                 	db	0
  1640  0098D0  00                 	db	0
  1641  0098D1  00                 	db	0
  1642  0098D2  00                 	db	0
  1643  0098D3  00                 	db	0
  1644  0098D4  00                 	db	0
  1645  0098D5  00                 	db	0
  1646  0098D6  00                 	db	0
  1647  0098D7  00                 	db	0
  1648  0098D8  00                 	db	0
  1649  0098D9  00                 	db	0
  1650  0098DA  00                 	db	0
  1651  0098DB  00                 	db	0
  1652  0098DC  00                 	db	0
  1653  0098DD  00                 	db	0
  1654  0098DE  00                 	db	0
  1655  0098DF  00                 	db	0
  1656  0098E0  00                 	db	0
  1657  0098E1  00                 	db	0
  1658  0098E2  00                 	db	0
  1659  0098E3  00                 	db	0
  1660  0098E4  00                 	db	0
  1661  0098E5  00                 	db	0
  1662  0098E6  00                 	db	0
  1663  0098E7  00                 	db	0
  1664  0098E8  00                 	db	0
  1665  0098E9  00                 	db	0
  1666  0098EA  00                 	db	0
  1667  0098EB  00                 	db	0
  1668  0098EC  00                 	db	0
  1669  0098ED  00                 	db	0
  1670  0098EE  00                 	db	0
  1671  0098EF  00                 	db	0
  1672  0098F0  00                 	db	0
  1673  0098F1  00                 	db	0
  1674  0098F2  00                 	db	0
  1675  0098F3  00                 	db	0
  1676  0098F4  00                 	db	0
  1677  0098F5  00                 	db	0
  1678  0098F6  00                 	db	0
  1679  0098F7  00                 	db	0
  1680  0098F8  00                 	db	0
  1681  0098F9  00                 	db	0
  1682  0098FA  00                 	db	0
  1683  0098FB  00                 	db	0
  1684  0098FC  00                 	db	0
  1685  0098FD  00                 	db	0
  1686  0098FE  00                 	db	0
  1687  0098FF  00                 	db	0
  1688  009900  00                 	db	0
  1689  009901  00                 	db	0
  1690  009902  00                 	db	0
  1691  009903  00                 	db	0
  1692  009904  00                 	db	0
  1693  009905  00                 	db	0
  1694  009906  00                 	db	0
  1695  009907  00                 	db	0
  1696  009908  00                 	db	0
  1697  009909  00                 	db	0
  1698  00990A  00                 	db	0
  1699  00990B  00                 	db	0
  1700  00990C  00                 	db	0
  1701  00990D  00                 	db	0
  1702  00990E  00                 	db	0
  1703  00990F  00                 	db	0
  1704  009910  00                 	db	0
  1705  009911  00                 	db	0
  1706  009912  00                 	db	0
  1707  009913  00                 	db	0
  1708  009914  00                 	db	0
  1709  009915  00                 	db	0
  1710  009916  00                 	db	0
  1711  009917  00                 	db	0
  1712  009918  00                 	db	0
  1713  009919  00                 	db	0
  1714  00991A  00                 	db	0
  1715  00991B  00                 	db	0
  1716  00991C  00                 	db	0
  1717  00991D  00                 	db	0
  1718  00991E  00                 	db	0
  1719  00991F  00                 	db	0
  1720  009920  00                 	db	0
  1721  009921  00                 	db	0
  1722  009922  00                 	db	0
  1723  009923  00                 	db	0
  1724  009924  00                 	db	0
  1725  009925  00                 	db	0
  1726  009926  00                 	db	0
  1727  009927  00                 	db	0
  1728  009928  00                 	db	0
  1729  009929  00                 	db	0
  1730  00992A  00                 	db	0
  1731  00992B  00                 	db	0
  1732  00992C  00                 	db	0
  1733  00992D  00                 	db	0
  1734  00992E  00                 	db	0
  1735  00992F  00                 	db	0
  1736  009930  00                 	db	0
  1737  009931  00                 	db	0
  1738  009932  00                 	db	0
  1739  009933  00                 	db	0
  1740  009934  00                 	db	0
  1741  009935  00                 	db	0
  1742  009936  00                 	db	0
  1743  009937  00                 	db	0
  1744  009938  00                 	db	0
  1745  009939  00                 	db	0
  1746  00993A  00                 	db	0
  1747  00993B  00                 	db	0
  1748  00993C  00                 	db	0
  1749  00993D  00                 	db	0
  1750  00993E  00                 	db	0
  1751  00993F  00                 	db	0
  1752  009940  00                 	db	0
  1753  009941  00                 	db	0
  1754  009942  00                 	db	0
  1755  009943  00                 	db	0
  1756  009944  00                 	db	0
  1757  009945  00                 	db	0
  1758  009946  00                 	db	0
  1759  009947  00                 	db	0
  1760  009948  00                 	db	0
  1761  009949  00                 	db	0
  1762  00994A  00                 	db	0
  1763  00994B  00                 	db	0
  1764  00994C  00                 	db	0
  1765  00994D  00                 	db	0
  1766  00994E  00                 	db	0
  1767  00994F  00                 	db	0
  1768  009950  00                 	db	0
  1769  009951  00                 	db	0
  1770  009952  00                 	db	0
  1771  009953  00                 	db	0
  1772  009954  00                 	db	0
  1773  009955  00                 	db	0
  1774  009956  00                 	db	0
  1775  009957  00                 	db	0
  1776  009958  00                 	db	0
  1777  009959  00                 	db	0
  1778  00995A  00                 	db	0
  1779  00995B  00                 	db	0
  1780  00995C  00                 	db	0
  1781  00995D  00                 	db	0
  1782  00995E  00                 	db	0
  1783  00995F  00                 	db	0
  1784  009960  00                 	db	0
  1785  009961  00                 	db	0
  1786  009962  00                 	db	0
  1787  009963  00                 	db	0
  1788  009964  00                 	db	0
  1789  009965  00                 	db	0
  1790  009966  00                 	db	0
  1791  009967  00                 	db	0
  1792  009968  00                 	db	0
  1793  009969  00                 	db	0
  1794  00996A  00                 	db	0
  1795  00996B  00                 	db	0
  1796  00996C  00                 	db	0
  1797  00996D  00                 	db	0
  1798  00996E  00                 	db	0
  1799  00996F  00                 	db	0
  1800  009970  00                 	db	0
  1801  009971  00                 	db	0
  1802  009972  00                 	db	0
  1803  009973  00                 	db	0
  1804  009974  00                 	db	0
  1805  009975  00                 	db	0
  1806  009976  00                 	db	0
  1807  009977  00                 	db	0
  1808  009978  00                 	db	0
  1809  009979  00                 	db	0
  1810  00997A  00                 	db	0
  1811  00997B  00                 	db	0
  1812  00997C  00                 	db	0
  1813  00997D  00                 	db	0
  1814  00997E  00                 	db	0
  1815  00997F  00                 	db	0
  1816  009980  00                 	db	0
  1817  009981  00                 	db	0
  1818  009982  00                 	db	0
  1819  009983  00                 	db	0
  1820  009984  00                 	db	0
  1821  009985  00                 	db	0
  1822  009986  00                 	db	0
  1823  009987  00                 	db	0
  1824  009988  00                 	db	0
  1825  009989  00                 	db	0
  1826  00998A  00                 	db	0
  1827  00998B  00                 	db	0
  1828  00998C  00                 	db	0
  1829  00998D  00                 	db	0
  1830  00998E  00                 	db	0
  1831  00998F  00                 	db	0
  1832  009990  00                 	db	0
  1833  009991  00                 	db	0
  1834  009992  00                 	db	0
  1835  009993  00                 	db	0
  1836  009994  00                 	db	0
  1837  009995  00                 	db	0
  1838  009996  00                 	db	0
  1839  009997  00                 	db	0
  1840  009998  00                 	db	0
  1841  009999  00                 	db	0
  1842  00999A  00                 	db	0
  1843  00999B  00                 	db	0
  1844  00999C  00                 	db	0
  1845  00999D  00                 	db	0
  1846  00999E  00                 	db	0
  1847  00999F  00                 	db	0
  1848  0099A0  00                 	db	0
  1849  0099A1  00                 	db	0
  1850  0099A2  00                 	db	0
  1851  0099A3  00                 	db	0
  1852  0099A4  00                 	db	0
  1853  0099A5  00                 	db	0
  1854  0099A6  00                 	db	0
  1855  0099A7  00                 	db	0
  1856  0099A8  00                 	db	0
  1857  0099A9  00                 	db	0
  1858  0099AA  00                 	db	0
  1859  0099AB  00                 	db	0
  1860  0099AC  00                 	db	0
  1861  0099AD  00                 	db	0
  1862  0099AE  00                 	db	0
  1863  0099AF  00                 	db	0
  1864  0099B0  00                 	db	0
  1865  0099B1  00                 	db	0
  1866  0099B2  00                 	db	0
  1867  0099B3  00                 	db	0
  1868  0099B4  00                 	db	0
  1869  0099B5  00                 	db	0
  1870  0099B6  00                 	db	0
  1871  0099B7  00                 	db	0
  1872  0099B8  00                 	db	0
  1873  0099B9  00                 	db	0
  1874  0099BA  00                 	db	0
  1875  0099BB  00                 	db	0
  1876  0099BC  00                 	db	0
  1877  0099BD  00                 	db	0
  1878  0099BE  00                 	db	0
  1879  0099BF  00                 	db	0
  1880  0099C0  00                 	db	0
  1881  0099C1  00                 	db	0
  1882  0099C2  00                 	db	0
  1883  0099C3  00                 	db	0
  1884  0099C4  00                 	db	0
  1885  0099C5  00                 	db	0
  1886  0099C6  00                 	db	0
  1887  0099C7  00                 	db	0
  1888  0099C8  00                 	db	0
  1889  0099C9  00                 	db	0
  1890  0099CA  00                 	db	0
  1891  0099CB  00                 	db	0
  1892  0099CC  00                 	db	0
  1893  0099CD  00                 	db	0
  1894  0099CE  00                 	db	0
  1895  0099CF  00                 	db	0
  1896  0099D0  00                 	db	0
  1897  0099D1  00                 	db	0
  1898  0099D2  00                 	db	0
  1899  0099D3  00                 	db	0
  1900  0099D4  00                 	db	0
  1901  0099D5  00                 	db	0
  1902  0099D6  00                 	db	0
  1903  0099D7  00                 	db	0
  1904  0099D8  00                 	db	0
  1905  0099D9  00                 	db	0
  1906  0099DA  00                 	db	0
  1907  0099DB  00                 	db	0
  1908  0099DC  00                 	db	0
  1909  0099DD  00                 	db	0
  1910  0099DE  00                 	db	0
  1911  0099DF  00                 	db	0
  1912  0099E0  00                 	db	0
  1913  0099E1  00                 	db	0
  1914  0099E2  00                 	db	0
  1915  0099E3  00                 	db	0
  1916  0099E4  00                 	db	0
  1917  0099E5  00                 	db	0
  1918  0099E6  00                 	db	0
  1919  0099E7  00                 	db	0
  1920  0099E8  00                 	db	0
  1921  0099E9  00                 	db	0
  1922  0099EA  00                 	db	0
  1923  0099EB  00                 	db	0
  1924  0099EC  00                 	db	0
  1925  0099ED  00                 	db	0
  1926  0099EE  00                 	db	0
  1927  0099EF  00                 	db	0
  1928  0099F0  00                 	db	0
  1929  0099F1  00                 	db	0
  1930  0099F2  00                 	db	0
  1931  0099F3  00                 	db	0
  1932  0099F4  00                 	db	0
  1933  0099F5  00                 	db	0
  1934  0099F6  00                 	db	0
  1935  0099F7  00                 	db	0
  1936  0099F8  00                 	db	0
  1937  0099F9  00                 	db	0
  1938  0099FA  00                 	db	0
  1939  0099FB  00                 	db	0
  1940  0099FC  00                 	db	0
  1941  0099FD  00                 	db	0
  1942  0099FE  00                 	db	0
  1943  0099FF  00                 	db	0
  1944  009A00  00                 	db	0
  1945  009A01  00                 	db	0
  1946  009A02  00                 	db	0
  1947  009A03  00                 	db	0
  1948  009A04  00                 	db	0
  1949  009A05  00                 	db	0
  1950  009A06  00                 	db	0
  1951  009A07  00                 	db	0
  1952  009A08  00                 	db	0
  1953  009A09  00                 	db	0
  1954  009A0A  00                 	db	0
  1955  009A0B  00                 	db	0
  1956  009A0C  00                 	db	0
  1957  009A0D  00                 	db	0
  1958  009A0E  00                 	db	0
  1959  009A0F  00                 	db	0
  1960  009A10  00                 	db	0
  1961  009A11  00                 	db	0
  1962  009A12  00                 	db	0
  1963  009A13  00                 	db	0
  1964  009A14  00                 	db	0
  1965  009A15  00                 	db	0
  1966  009A16                     __end_of_motor_postscaler_lookup:
  1967                           	opt stack 0
  1968  009A16                     _motor_period_lookup:
  1969                           	opt stack 0
  1970  009A16  EC                 	db	236
  1971  009A17  F2                 	db	242
  1972  009A18  F6                 	db	246
  1973  009A19  F4                 	db	244
  1974  009A1A  D2                 	db	210
  1975  009A1B  E8                 	db	232
  1976  009A1C  D2                 	db	210
  1977  009A1D  C0                 	db	192
  1978  009A1E  EC                 	db	236
  1979  009A1F  DC                 	db	220
  1980  009A20  CF                 	db	207
  1981  009A21  C3                 	db	195
  1982  009A22  B9                 	db	185
  1983  009A23  B0                 	db	176
  1984  009A24  FC                 	db	252
  1985  009A25  F2                 	db	242
  1986  009A26  E8                 	db	232
  1987  009A27  DF                 	db	223
  1988  009A28  D7                 	db	215
  1989  009A29  D0                 	db	208
  1990  009A2A  CA                 	db	202
  1991  009A2B  C3                 	db	195
  1992  009A2C  BE                 	db	190
  1993  009A2D  B8                 	db	184
  1994  009A2E  B3                 	db	179
  1995  009A2F  AF                 	db	175
  1996  009A30  AA                 	db	170
  1997  009A31  A6                 	db	166
  1998  009A32  A2                 	db	162
  1999  009A33  9F                 	db	159
  2000  009A34  9B                 	db	155
  2001  009A35  98                 	db	152
  2002  009A36  95                 	db	149
  2003  009A37  92                 	db	146
  2004  009A38  8F                 	db	143
  2005  009A39  8C                 	db	140
  2006  009A3A  8A                 	db	138
  2007  009A3B  87                 	db	135
  2008  009A3C  85                 	db	133
  2009  009A3D  83                 	db	131
  2010  009A3E  81                 	db	129
  2011  009A3F  7F                 	db	127
  2012  009A40  7D                 	db	125
  2013  009A41  7B                 	db	123
  2014  009A42  79                 	db	121
  2015  009A43  77                 	db	119
  2016  009A44  75                 	db	117
  2017  009A45  74                 	db	116
  2018  009A46  72                 	db	114
  2019  009A47  71                 	db	113
  2020  009A48  6F                 	db	111
  2021  009A49  6E                 	db	110
  2022  009A4A  6C                 	db	108
  2023  009A4B  6B                 	db	107
  2024  009A4C  6A                 	db	106
  2025  009A4D  68                 	db	104
  2026  009A4E  67                 	db	103
  2027  009A4F  66                 	db	102
  2028  009A50  65                 	db	101
  2029  009A51  64                 	db	100
  2030  009A52  62                 	db	98
  2031  009A53  61                 	db	97
  2032  009A54  60                 	db	96
  2033  009A55  5F                 	db	95
  2034  009A56  5E                 	db	94
  2035  009A57  5D                 	db	93
  2036  009A58  5C                 	db	92
  2037  009A59  5B                 	db	91
  2038  009A5A  59                 	db	89
  2039  009A5B  57                 	db	87
  2040  009A5C  56                 	db	86
  2041  009A5D  54                 	db	84
  2042  009A5E  53                 	db	83
  2043  009A5F  51                 	db	81
  2044  009A60  50                 	db	80
  2045  009A61  4F                 	db	79
  2046  009A62  4E                 	db	78
  2047  009A63  4C                 	db	76
  2048  009A64  4B                 	db	75
  2049  009A65  4A                 	db	74
  2050  009A66  49                 	db	73
  2051  009A67  48                 	db	72
  2052  009A68  47                 	db	71
  2053  009A69  46                 	db	70
  2054  009A6A  45                 	db	69
  2055  009A6B  44                 	db	68
  2056  009A6C  43                 	db	67
  2057  009A6D  42                 	db	66
  2058  009A6E  41                 	db	65
  2059  009A6F  40                 	db	64
  2060  009A70  3F                 	db	63
  2061  009A71  FE                 	db	254
  2062  009A72  FB                 	db	251
  2063  009A73  F8                 	db	248
  2064  009A74  F6                 	db	246
  2065  009A75  F3                 	db	243
  2066  009A76  F0                 	db	240
  2067  009A77  EE                 	db	238
  2068  009A78  EC                 	db	236
  2069  009A79  E9                 	db	233
  2070  009A7A  E7                 	db	231
  2071  009A7B  E5                 	db	229
  2072  009A7C  E3                 	db	227
  2073  009A7D  E0                 	db	224
  2074  009A7E  DE                 	db	222
  2075  009A7F  DC                 	db	220
  2076  009A80  DA                 	db	218
  2077  009A81  D8                 	db	216
  2078  009A82  D7                 	db	215
  2079  009A83  D5                 	db	213
  2080  009A84  D3                 	db	211
  2081  009A85  D1                 	db	209
  2082  009A86  CF                 	db	207
  2083  009A87  CE                 	db	206
  2084  009A88  CC                 	db	204
  2085  009A89  CA                 	db	202
  2086  009A8A  C9                 	db	201
  2087  009A8B  C7                 	db	199
  2088  009A8C  C6                 	db	198
  2089  009A8D  C4                 	db	196
  2090  009A8E  C3                 	db	195
  2091  009A8F  C1                 	db	193
  2092  009A90  C0                 	db	192
  2093  009A91  BE                 	db	190
  2094  009A92  BD                 	db	189
  2095  009A93  BC                 	db	188
  2096  009A94  BA                 	db	186
  2097  009A95  B8                 	db	184
  2098  009A96  B6                 	db	182
  2099  009A97  B4                 	db	180
  2100  009A98  B3                 	db	179
  2101  009A99  B1                 	db	177
  2102  009A9A  AF                 	db	175
  2103  009A9B  AE                 	db	174
  2104  009A9C  AC                 	db	172
  2105  009A9D  AA                 	db	170
  2106  009A9E  A9                 	db	169
  2107  009A9F  A7                 	db	167
  2108  009AA0  A6                 	db	166
  2109  009AA1  A4                 	db	164
  2110  009AA2  A3                 	db	163
  2111  009AA3  A1                 	db	161
  2112  009AA4  A0                 	db	160
  2113  009AA5  9F                 	db	159
  2114  009AA6  9D                 	db	157
  2115  009AA7  9C                 	db	156
  2116  009AA8  9B                 	db	155
  2117  009AA9  9A                 	db	154
  2118  009AAA  98                 	db	152
  2119  009AAB  97                 	db	151
  2120  009AAC  96                 	db	150
  2121  009AAD  95                 	db	149
  2122  009AAE  94                 	db	148
  2123  009AAF  93                 	db	147
  2124  009AB0  92                 	db	146
  2125  009AB1  90                 	db	144
  2126  009AB2  8F                 	db	143
  2127  009AB3  8E                 	db	142
  2128  009AB4  8D                 	db	141
  2129  009AB5  8C                 	db	140
  2130  009AB6  8B                 	db	139
  2131  009AB7  8A                 	db	138
  2132  009AB8  89                 	db	137
  2133  009AB9  88                 	db	136
  2134  009ABA  87                 	db	135
  2135  009ABB  86                 	db	134
  2136  009ABC  85                 	db	133
  2137  009ABD  84                 	db	132
  2138  009ABE  83                 	db	131
  2139  009ABF  82                 	db	130
  2140  009AC0  81                 	db	129
  2141  009AC1  80                 	db	128
  2142  009AC2  7F                 	db	127
  2143  009AC3  7E                 	db	126
  2144  009AC4  7D                 	db	125
  2145  009AC5  7C                 	db	124
  2146  009AC6  7B                 	db	123
  2147  009AC7  7A                 	db	122
  2148  009AC8  79                 	db	121
  2149  009AC9  78                 	db	120
  2150  009ACA  77                 	db	119
  2151  009ACB  76                 	db	118
  2152  009ACC  75                 	db	117
  2153  009ACD  74                 	db	116
  2154  009ACE  73                 	db	115
  2155  009ACF  72                 	db	114
  2156  009AD0  71                 	db	113
  2157  009AD1  70                 	db	112
  2158  009AD2  6F                 	db	111
  2159  009AD3  6E                 	db	110
  2160  009AD4  6D                 	db	109
  2161  009AD5  6C                 	db	108
  2162  009AD6  6B                 	db	107
  2163  009AD7  6A                 	db	106
  2164  009AD8  69                 	db	105
  2165  009AD9  68                 	db	104
  2166  009ADA  67                 	db	103
  2167  009ADB  66                 	db	102
  2168  009ADC  65                 	db	101
  2169  009ADD  64                 	db	100
  2170  009ADE  63                 	db	99
  2171  009ADF  62                 	db	98
  2172  009AE0  61                 	db	97
  2173  009AE1  60                 	db	96
  2174  009AE2  5F                 	db	95
  2175  009AE3  5E                 	db	94
  2176  009AE4  5D                 	db	93
  2177  009AE5  5C                 	db	92
  2178  009AE6  5B                 	db	91
  2179  009AE7  5A                 	db	90
  2180  009AE8  59                 	db	89
  2181  009AE9  58                 	db	88
  2182  009AEA  57                 	db	87
  2183  009AEB  56                 	db	86
  2184  009AEC  55                 	db	85
  2185  009AED  54                 	db	84
  2186  009AEE  53                 	db	83
  2187  009AEF  52                 	db	82
  2188  009AF0  51                 	db	81
  2189  009AF1  50                 	db	80
  2190  009AF2  4F                 	db	79
  2191  009AF3  4E                 	db	78
  2192  009AF4  4D                 	db	77
  2193  009AF5  4C                 	db	76
  2194  009AF6  4B                 	db	75
  2195  009AF7  4A                 	db	74
  2196  009AF8  49                 	db	73
  2197  009AF9  48                 	db	72
  2198  009AFA  47                 	db	71
  2199  009AFB  46                 	db	70
  2200  009AFC  45                 	db	69
  2201  009AFD  44                 	db	68
  2202  009AFE  43                 	db	67
  2203  009AFF  42                 	db	66
  2204  009B00  41                 	db	65
  2205  009B01  40                 	db	64
  2206  009B02  3F                 	db	63
  2207  009B03  FF                 	db	255
  2208  009B04  FE                 	db	254
  2209  009B05  FD                 	db	253
  2210  009B06  FC                 	db	252
  2211  009B07  FB                 	db	251
  2212  009B08  FA                 	db	250
  2213  009B09  F9                 	db	249
  2214  009B0A  F8                 	db	248
  2215  009B0B  F7                 	db	247
  2216  009B0C  F6                 	db	246
  2217  009B0D  F5                 	db	245
  2218  009B0E  F4                 	db	244
  2219  009B0F  F3                 	db	243
  2220  009B10  F2                 	db	242
  2221  009B11  F1                 	db	241
  2222  009B12  F0                 	db	240
  2223  009B13  EF                 	db	239
  2224  009B14  EE                 	db	238
  2225  009B15  ED                 	db	237
  2226  009B16  EC                 	db	236
  2227  009B17  EB                 	db	235
  2228  009B18  EA                 	db	234
  2229  009B19  E9                 	db	233
  2230  009B1A  E8                 	db	232
  2231  009B1B  E7                 	db	231
  2232  009B1C  E6                 	db	230
  2233  009B1D  E5                 	db	229
  2234  009B1E  E4                 	db	228
  2235  009B1F  E3                 	db	227
  2236  009B20  E2                 	db	226
  2237  009B21  E1                 	db	225
  2238  009B22  E0                 	db	224
  2239  009B23  DF                 	db	223
  2240  009B24  DE                 	db	222
  2241  009B25  DD                 	db	221
  2242  009B26  DC                 	db	220
  2243  009B27  DB                 	db	219
  2244  009B28  DA                 	db	218
  2245  009B29  D9                 	db	217
  2246  009B2A  D8                 	db	216
  2247  009B2B  D7                 	db	215
  2248  009B2C  D6                 	db	214
  2249  009B2D  D5                 	db	213
  2250  009B2E  D4                 	db	212
  2251  009B2F  D3                 	db	211
  2252  009B30  D2                 	db	210
  2253  009B31  D1                 	db	209
  2254  009B32  D0                 	db	208
  2255  009B33  CF                 	db	207
  2256  009B34  CE                 	db	206
  2257  009B35  CD                 	db	205
  2258  009B36  CC                 	db	204
  2259  009B37  CB                 	db	203
  2260  009B38  CA                 	db	202
  2261  009B39  C9                 	db	201
  2262  009B3A  C8                 	db	200
  2263  009B3B  C7                 	db	199
  2264  009B3C  C6                 	db	198
  2265  009B3D  C5                 	db	197
  2266  009B3E  C4                 	db	196
  2267  009B3F  C3                 	db	195
  2268  009B40  C2                 	db	194
  2269  009B41  C1                 	db	193
  2270  009B42  C0                 	db	192
  2271  009B43  BF                 	db	191
  2272  009B44  BE                 	db	190
  2273  009B45  BD                 	db	189
  2274  009B46  BC                 	db	188
  2275  009B47  BB                 	db	187
  2276  009B48  BA                 	db	186
  2277  009B49  B9                 	db	185
  2278  009B4A  B8                 	db	184
  2279  009B4B  B7                 	db	183
  2280  009B4C  B6                 	db	182
  2281  009B4D  B5                 	db	181
  2282  009B4E  B4                 	db	180
  2283  009B4F  B3                 	db	179
  2284  009B50  B2                 	db	178
  2285  009B51  B1                 	db	177
  2286  009B52  B0                 	db	176
  2287  009B53  AF                 	db	175
  2288  009B54  AE                 	db	174
  2289  009B55  AD                 	db	173
  2290  009B56  AC                 	db	172
  2291  009B57  AB                 	db	171
  2292  009B58  AA                 	db	170
  2293  009B59  A9                 	db	169
  2294  009B5A  A8                 	db	168
  2295  009B5B  A7                 	db	167
  2296  009B5C  A6                 	db	166
  2297  009B5D  A5                 	db	165
  2298  009B5E  A4                 	db	164
  2299  009B5F  A3                 	db	163
  2300  009B60  A2                 	db	162
  2301  009B61  A1                 	db	161
  2302  009B62  A0                 	db	160
  2303  009B63  9F                 	db	159
  2304  009B64  9E                 	db	158
  2305  009B65  9D                 	db	157
  2306  009B66  9C                 	db	156
  2307  009B67  9B                 	db	155
  2308  009B68  9A                 	db	154
  2309  009B69  99                 	db	153
  2310  009B6A  98                 	db	152
  2311  009B6B  97                 	db	151
  2312  009B6C  96                 	db	150
  2313  009B6D  95                 	db	149
  2314  009B6E  94                 	db	148
  2315  009B6F  93                 	db	147
  2316  009B70  92                 	db	146
  2317  009B71  91                 	db	145
  2318  009B72  90                 	db	144
  2319  009B73  8F                 	db	143
  2320  009B74  8E                 	db	142
  2321  009B75  8D                 	db	141
  2322  009B76  8C                 	db	140
  2323  009B77  8B                 	db	139
  2324  009B78  8A                 	db	138
  2325  009B79  89                 	db	137
  2326  009B7A  88                 	db	136
  2327  009B7B  87                 	db	135
  2328  009B7C  86                 	db	134
  2329  009B7D  85                 	db	133
  2330  009B7E  84                 	db	132
  2331  009B7F  83                 	db	131
  2332  009B80  82                 	db	130
  2333  009B81  81                 	db	129
  2334  009B82  80                 	db	128
  2335  009B83  7F                 	db	127
  2336  009B84  7E                 	db	126
  2337  009B85  7D                 	db	125
  2338  009B86  7C                 	db	124
  2339  009B87  7B                 	db	123
  2340  009B88  7A                 	db	122
  2341  009B89  79                 	db	121
  2342  009B8A  78                 	db	120
  2343  009B8B  77                 	db	119
  2344  009B8C  76                 	db	118
  2345  009B8D  75                 	db	117
  2346  009B8E  74                 	db	116
  2347  009B8F  73                 	db	115
  2348  009B90  72                 	db	114
  2349  009B91  71                 	db	113
  2350  009B92  70                 	db	112
  2351  009B93  6F                 	db	111
  2352  009B94  6E                 	db	110
  2353  009B95  6D                 	db	109
  2354  009B96  6C                 	db	108
  2355  009B97  6B                 	db	107
  2356  009B98  6A                 	db	106
  2357  009B99  69                 	db	105
  2358  009B9A  68                 	db	104
  2359  009B9B  67                 	db	103
  2360  009B9C  66                 	db	102
  2361  009B9D  65                 	db	101
  2362  009B9E  64                 	db	100
  2363  009B9F  63                 	db	99
  2364  009BA0  62                 	db	98
  2365  009BA1  61                 	db	97
  2366  009BA2  60                 	db	96
  2367  009BA3  5F                 	db	95
  2368  009BA4  5E                 	db	94
  2369  009BA5  5D                 	db	93
  2370  009BA6  5C                 	db	92
  2371  009BA7  5B                 	db	91
  2372  009BA8  5A                 	db	90
  2373  009BA9  59                 	db	89
  2374  009BAA  58                 	db	88
  2375  009BAB  57                 	db	87
  2376  009BAC  56                 	db	86
  2377  009BAD  55                 	db	85
  2378  009BAE  54                 	db	84
  2379  009BAF  53                 	db	83
  2380  009BB0  52                 	db	82
  2381  009BB1  51                 	db	81
  2382  009BB2  50                 	db	80
  2383  009BB3  4F                 	db	79
  2384  009BB4  4E                 	db	78
  2385  009BB5  4D                 	db	77
  2386  009BB6  4C                 	db	76
  2387  009BB7  4B                 	db	75
  2388  009BB8  4A                 	db	74
  2389  009BB9  49                 	db	73
  2390  009BBA  48                 	db	72
  2391  009BBB  47                 	db	71
  2392  009BBC  46                 	db	70
  2393  009BBD  45                 	db	69
  2394  009BBE  44                 	db	68
  2395  009BBF  43                 	db	67
  2396  009BC0  42                 	db	66
  2397  009BC1  41                 	db	65
  2398  009BC2  40                 	db	64
  2399  009BC3  3F                 	db	63
  2400  009BC4  FF                 	db	255
  2401  009BC5  FE                 	db	254
  2402  009BC6  FD                 	db	253
  2403  009BC7  FC                 	db	252
  2404  009BC8  FB                 	db	251
  2405  009BC9  FA                 	db	250
  2406  009BCA  F9                 	db	249
  2407  009BCB  F8                 	db	248
  2408  009BCC  F7                 	db	247
  2409  009BCD  F6                 	db	246
  2410  009BCE  F5                 	db	245
  2411  009BCF  F4                 	db	244
  2412  009BD0  F3                 	db	243
  2413  009BD1  F2                 	db	242
  2414  009BD2  F1                 	db	241
  2415  009BD3  F0                 	db	240
  2416  009BD4  EF                 	db	239
  2417  009BD5  EE                 	db	238
  2418  009BD6  ED                 	db	237
  2419  009BD7  EC                 	db	236
  2420  009BD8  EB                 	db	235
  2421  009BD9  EA                 	db	234
  2422  009BDA  E9                 	db	233
  2423  009BDB  E8                 	db	232
  2424  009BDC  E7                 	db	231
  2425  009BDD  E6                 	db	230
  2426  009BDE  E5                 	db	229
  2427  009BDF  E4                 	db	228
  2428  009BE0  E3                 	db	227
  2429  009BE1  E2                 	db	226
  2430  009BE2  E1                 	db	225
  2431  009BE3  E0                 	db	224
  2432  009BE4  DF                 	db	223
  2433  009BE5  DE                 	db	222
  2434  009BE6  DD                 	db	221
  2435  009BE7  DC                 	db	220
  2436  009BE8  DB                 	db	219
  2437  009BE9  DA                 	db	218
  2438  009BEA  D9                 	db	217
  2439  009BEB  D8                 	db	216
  2440  009BEC  D7                 	db	215
  2441  009BED  D6                 	db	214
  2442  009BEE  D5                 	db	213
  2443  009BEF  D4                 	db	212
  2444  009BF0  D3                 	db	211
  2445  009BF1  D2                 	db	210
  2446  009BF2  D1                 	db	209
  2447  009BF3  D0                 	db	208
  2448  009BF4  CF                 	db	207
  2449  009BF5  CE                 	db	206
  2450  009BF6  CD                 	db	205
  2451  009BF7  CC                 	db	204
  2452  009BF8  CB                 	db	203
  2453  009BF9  CA                 	db	202
  2454  009BFA  C9                 	db	201
  2455  009BFB  C8                 	db	200
  2456  009BFC  C7                 	db	199
  2457  009BFD                     __end_of_motor_period_lookup:
  2458                           	opt stack 0
  2459  009BFD                     _motor_prescaler_lookup:
  2460                           	opt stack 0
  2461  009BFD  02                 	db	2
  2462  009BFE  02                 	db	2
  2463  009BFF  02                 	db	2
  2464  009C00  02                 	db	2
  2465  009C01  02                 	db	2
  2466  009C02  02                 	db	2
  2467  009C03  02                 	db	2
  2468  009C04  02                 	db	2
  2469  009C05  02                 	db	2
  2470  009C06  02                 	db	2
  2471  009C07  02                 	db	2
  2472  009C08  02                 	db	2
  2473  009C09  02                 	db	2
  2474  009C0A  02                 	db	2
  2475  009C0B  02                 	db	2
  2476  009C0C  02                 	db	2
  2477  009C0D  02                 	db	2
  2478  009C0E  02                 	db	2
  2479  009C0F  02                 	db	2
  2480  009C10  02                 	db	2
  2481  009C11  02                 	db	2
  2482  009C12  02                 	db	2
  2483  009C13  02                 	db	2
  2484  009C14  02                 	db	2
  2485  009C15  02                 	db	2
  2486  009C16  02                 	db	2
  2487  009C17  02                 	db	2
  2488  009C18  02                 	db	2
  2489  009C19  02                 	db	2
  2490  009C1A  02                 	db	2
  2491  009C1B  02                 	db	2
  2492  009C1C  02                 	db	2
  2493  009C1D  02                 	db	2
  2494  009C1E  02                 	db	2
  2495  009C1F  02                 	db	2
  2496  009C20  02                 	db	2
  2497  009C21  02                 	db	2
  2498  009C22  02                 	db	2
  2499  009C23  02                 	db	2
  2500  009C24  02                 	db	2
  2501  009C25  02                 	db	2
  2502  009C26  02                 	db	2
  2503  009C27  02                 	db	2
  2504  009C28  02                 	db	2
  2505  009C29  02                 	db	2
  2506  009C2A  02                 	db	2
  2507  009C2B  02                 	db	2
  2508  009C2C  02                 	db	2
  2509  009C2D  02                 	db	2
  2510  009C2E  02                 	db	2
  2511  009C2F  02                 	db	2
  2512  009C30  02                 	db	2
  2513  009C31  02                 	db	2
  2514  009C32  02                 	db	2
  2515  009C33  02                 	db	2
  2516  009C34  02                 	db	2
  2517  009C35  02                 	db	2
  2518  009C36  02                 	db	2
  2519  009C37  02                 	db	2
  2520  009C38  02                 	db	2
  2521  009C39  02                 	db	2
  2522  009C3A  02                 	db	2
  2523  009C3B  02                 	db	2
  2524  009C3C  02                 	db	2
  2525  009C3D  02                 	db	2
  2526  009C3E  02                 	db	2
  2527  009C3F  02                 	db	2
  2528  009C40  02                 	db	2
  2529  009C41  02                 	db	2
  2530  009C42  02                 	db	2
  2531  009C43  02                 	db	2
  2532  009C44  02                 	db	2
  2533  009C45  02                 	db	2
  2534  009C46  02                 	db	2
  2535  009C47  02                 	db	2
  2536  009C48  02                 	db	2
  2537  009C49  02                 	db	2
  2538  009C4A  02                 	db	2
  2539  009C4B  02                 	db	2
  2540  009C4C  02                 	db	2
  2541  009C4D  02                 	db	2
  2542  009C4E  02                 	db	2
  2543  009C4F  02                 	db	2
  2544  009C50  02                 	db	2
  2545  009C51  02                 	db	2
  2546  009C52  02                 	db	2
  2547  009C53  02                 	db	2
  2548  009C54  02                 	db	2
  2549  009C55  02                 	db	2
  2550  009C56  02                 	db	2
  2551  009C57  02                 	db	2
  2552  009C58  02                 	db	2
  2553  009C59  02                 	db	2
  2554  009C5A  02                 	db	2
  2555  009C5B  02                 	db	2
  2556  009C5C  02                 	db	2
  2557  009C5D  02                 	db	2
  2558  009C5E  02                 	db	2
  2559  009C5F  02                 	db	2
  2560  009C60  02                 	db	2
  2561  009C61  02                 	db	2
  2562  009C62  02                 	db	2
  2563  009C63  02                 	db	2
  2564  009C64  02                 	db	2
  2565  009C65  02                 	db	2
  2566  009C66  02                 	db	2
  2567  009C67  02                 	db	2
  2568  009C68  02                 	db	2
  2569  009C69  02                 	db	2
  2570  009C6A  02                 	db	2
  2571  009C6B  02                 	db	2
  2572  009C6C  02                 	db	2
  2573  009C6D  02                 	db	2
  2574  009C6E  02                 	db	2
  2575  009C6F  02                 	db	2
  2576  009C70  02                 	db	2
  2577  009C71  02                 	db	2
  2578  009C72  02                 	db	2
  2579  009C73  02                 	db	2
  2580  009C74  02                 	db	2
  2581  009C75  02                 	db	2
  2582  009C76  02                 	db	2
  2583  009C77  02                 	db	2
  2584  009C78  02                 	db	2
  2585  009C79  02                 	db	2
  2586  009C7A  02                 	db	2
  2587  009C7B  02                 	db	2
  2588  009C7C  02                 	db	2
  2589  009C7D  02                 	db	2
  2590  009C7E  02                 	db	2
  2591  009C7F  02                 	db	2
  2592  009C80  02                 	db	2
  2593  009C81  02                 	db	2
  2594  009C82  02                 	db	2
  2595  009C83  02                 	db	2
  2596  009C84  02                 	db	2
  2597  009C85  02                 	db	2
  2598  009C86  02                 	db	2
  2599  009C87  02                 	db	2
  2600  009C88  02                 	db	2
  2601  009C89  02                 	db	2
  2602  009C8A  02                 	db	2
  2603  009C8B  02                 	db	2
  2604  009C8C  02                 	db	2
  2605  009C8D  02                 	db	2
  2606  009C8E  02                 	db	2
  2607  009C8F  02                 	db	2
  2608  009C90  02                 	db	2
  2609  009C91  02                 	db	2
  2610  009C92  02                 	db	2
  2611  009C93  02                 	db	2
  2612  009C94  02                 	db	2
  2613  009C95  02                 	db	2
  2614  009C96  02                 	db	2
  2615  009C97  02                 	db	2
  2616  009C98  02                 	db	2
  2617  009C99  02                 	db	2
  2618  009C9A  02                 	db	2
  2619  009C9B  02                 	db	2
  2620  009C9C  02                 	db	2
  2621  009C9D  02                 	db	2
  2622  009C9E  02                 	db	2
  2623  009C9F  02                 	db	2
  2624  009CA0  02                 	db	2
  2625  009CA1  02                 	db	2
  2626  009CA2  02                 	db	2
  2627  009CA3  02                 	db	2
  2628  009CA4  02                 	db	2
  2629  009CA5  02                 	db	2
  2630  009CA6  02                 	db	2
  2631  009CA7  02                 	db	2
  2632  009CA8  02                 	db	2
  2633  009CA9  02                 	db	2
  2634  009CAA  02                 	db	2
  2635  009CAB  02                 	db	2
  2636  009CAC  02                 	db	2
  2637  009CAD  02                 	db	2
  2638  009CAE  02                 	db	2
  2639  009CAF  02                 	db	2
  2640  009CB0  02                 	db	2
  2641  009CB1  02                 	db	2
  2642  009CB2  02                 	db	2
  2643  009CB3  02                 	db	2
  2644  009CB4  02                 	db	2
  2645  009CB5  02                 	db	2
  2646  009CB6  02                 	db	2
  2647  009CB7  02                 	db	2
  2648  009CB8  02                 	db	2
  2649  009CB9  02                 	db	2
  2650  009CBA  02                 	db	2
  2651  009CBB  02                 	db	2
  2652  009CBC  02                 	db	2
  2653  009CBD  02                 	db	2
  2654  009CBE  02                 	db	2
  2655  009CBF  02                 	db	2
  2656  009CC0  02                 	db	2
  2657  009CC1  02                 	db	2
  2658  009CC2  02                 	db	2
  2659  009CC3  02                 	db	2
  2660  009CC4  02                 	db	2
  2661  009CC5  02                 	db	2
  2662  009CC6  02                 	db	2
  2663  009CC7  02                 	db	2
  2664  009CC8  02                 	db	2
  2665  009CC9  02                 	db	2
  2666  009CCA  02                 	db	2
  2667  009CCB  02                 	db	2
  2668  009CCC  02                 	db	2
  2669  009CCD  02                 	db	2
  2670  009CCE  02                 	db	2
  2671  009CCF  02                 	db	2
  2672  009CD0  02                 	db	2
  2673  009CD1  02                 	db	2
  2674  009CD2  02                 	db	2
  2675  009CD3  02                 	db	2
  2676  009CD4  02                 	db	2
  2677  009CD5  02                 	db	2
  2678  009CD6  02                 	db	2
  2679  009CD7  02                 	db	2
  2680  009CD8  02                 	db	2
  2681  009CD9  02                 	db	2
  2682  009CDA  02                 	db	2
  2683  009CDB  02                 	db	2
  2684  009CDC  02                 	db	2
  2685  009CDD  02                 	db	2
  2686  009CDE  02                 	db	2
  2687  009CDF  02                 	db	2
  2688  009CE0  02                 	db	2
  2689  009CE1  02                 	db	2
  2690  009CE2  02                 	db	2
  2691  009CE3  02                 	db	2
  2692  009CE4  02                 	db	2
  2693  009CE5  02                 	db	2
  2694  009CE6  02                 	db	2
  2695  009CE7  02                 	db	2
  2696  009CE8  02                 	db	2
  2697  009CE9  02                 	db	2
  2698  009CEA  01                 	db	1
  2699  009CEB  01                 	db	1
  2700  009CEC  01                 	db	1
  2701  009CED  01                 	db	1
  2702  009CEE  01                 	db	1
  2703  009CEF  01                 	db	1
  2704  009CF0  01                 	db	1
  2705  009CF1  01                 	db	1
  2706  009CF2  01                 	db	1
  2707  009CF3  01                 	db	1
  2708  009CF4  01                 	db	1
  2709  009CF5  01                 	db	1
  2710  009CF6  01                 	db	1
  2711  009CF7  01                 	db	1
  2712  009CF8  01                 	db	1
  2713  009CF9  01                 	db	1
  2714  009CFA  01                 	db	1
  2715  009CFB  01                 	db	1
  2716  009CFC  01                 	db	1
  2717  009CFD  01                 	db	1
  2718  009CFE  01                 	db	1
  2719  009CFF  01                 	db	1
  2720  009D00  01                 	db	1
  2721  009D01  01                 	db	1
  2722  009D02  01                 	db	1
  2723  009D03  01                 	db	1
  2724  009D04  01                 	db	1
  2725  009D05  01                 	db	1
  2726  009D06  01                 	db	1
  2727  009D07  01                 	db	1
  2728  009D08  01                 	db	1
  2729  009D09  01                 	db	1
  2730  009D0A  01                 	db	1
  2731  009D0B  01                 	db	1
  2732  009D0C  01                 	db	1
  2733  009D0D  01                 	db	1
  2734  009D0E  01                 	db	1
  2735  009D0F  01                 	db	1
  2736  009D10  01                 	db	1
  2737  009D11  01                 	db	1
  2738  009D12  01                 	db	1
  2739  009D13  01                 	db	1
  2740  009D14  01                 	db	1
  2741  009D15  01                 	db	1
  2742  009D16  01                 	db	1
  2743  009D17  01                 	db	1
  2744  009D18  01                 	db	1
  2745  009D19  01                 	db	1
  2746  009D1A  01                 	db	1
  2747  009D1B  01                 	db	1
  2748  009D1C  01                 	db	1
  2749  009D1D  01                 	db	1
  2750  009D1E  01                 	db	1
  2751  009D1F  01                 	db	1
  2752  009D20  01                 	db	1
  2753  009D21  01                 	db	1
  2754  009D22  01                 	db	1
  2755  009D23  01                 	db	1
  2756  009D24  01                 	db	1
  2757  009D25  01                 	db	1
  2758  009D26  01                 	db	1
  2759  009D27  01                 	db	1
  2760  009D28  01                 	db	1
  2761  009D29  01                 	db	1
  2762  009D2A  01                 	db	1
  2763  009D2B  01                 	db	1
  2764  009D2C  01                 	db	1
  2765  009D2D  01                 	db	1
  2766  009D2E  01                 	db	1
  2767  009D2F  01                 	db	1
  2768  009D30  01                 	db	1
  2769  009D31  01                 	db	1
  2770  009D32  01                 	db	1
  2771  009D33  01                 	db	1
  2772  009D34  01                 	db	1
  2773  009D35  01                 	db	1
  2774  009D36  01                 	db	1
  2775  009D37  01                 	db	1
  2776  009D38  01                 	db	1
  2777  009D39  01                 	db	1
  2778  009D3A  01                 	db	1
  2779  009D3B  01                 	db	1
  2780  009D3C  01                 	db	1
  2781  009D3D  01                 	db	1
  2782  009D3E  01                 	db	1
  2783  009D3F  01                 	db	1
  2784  009D40  01                 	db	1
  2785  009D41  01                 	db	1
  2786  009D42  01                 	db	1
  2787  009D43  01                 	db	1
  2788  009D44  01                 	db	1
  2789  009D45  01                 	db	1
  2790  009D46  01                 	db	1
  2791  009D47  01                 	db	1
  2792  009D48  01                 	db	1
  2793  009D49  01                 	db	1
  2794  009D4A  01                 	db	1
  2795  009D4B  01                 	db	1
  2796  009D4C  01                 	db	1
  2797  009D4D  01                 	db	1
  2798  009D4E  01                 	db	1
  2799  009D4F  01                 	db	1
  2800  009D50  01                 	db	1
  2801  009D51  01                 	db	1
  2802  009D52  01                 	db	1
  2803  009D53  01                 	db	1
  2804  009D54  01                 	db	1
  2805  009D55  01                 	db	1
  2806  009D56  01                 	db	1
  2807  009D57  01                 	db	1
  2808  009D58  01                 	db	1
  2809  009D59  01                 	db	1
  2810  009D5A  01                 	db	1
  2811  009D5B  01                 	db	1
  2812  009D5C  01                 	db	1
  2813  009D5D  01                 	db	1
  2814  009D5E  01                 	db	1
  2815  009D5F  01                 	db	1
  2816  009D60  01                 	db	1
  2817  009D61  01                 	db	1
  2818  009D62  01                 	db	1
  2819  009D63  01                 	db	1
  2820  009D64  01                 	db	1
  2821  009D65  01                 	db	1
  2822  009D66  01                 	db	1
  2823  009D67  01                 	db	1
  2824  009D68  01                 	db	1
  2825  009D69  01                 	db	1
  2826  009D6A  01                 	db	1
  2827  009D6B  01                 	db	1
  2828  009D6C  01                 	db	1
  2829  009D6D  01                 	db	1
  2830  009D6E  01                 	db	1
  2831  009D6F  01                 	db	1
  2832  009D70  01                 	db	1
  2833  009D71  01                 	db	1
  2834  009D72  01                 	db	1
  2835  009D73  01                 	db	1
  2836  009D74  01                 	db	1
  2837  009D75  01                 	db	1
  2838  009D76  01                 	db	1
  2839  009D77  01                 	db	1
  2840  009D78  01                 	db	1
  2841  009D79  01                 	db	1
  2842  009D7A  01                 	db	1
  2843  009D7B  01                 	db	1
  2844  009D7C  01                 	db	1
  2845  009D7D  01                 	db	1
  2846  009D7E  01                 	db	1
  2847  009D7F  01                 	db	1
  2848  009D80  01                 	db	1
  2849  009D81  01                 	db	1
  2850  009D82  01                 	db	1
  2851  009D83  01                 	db	1
  2852  009D84  01                 	db	1
  2853  009D85  01                 	db	1
  2854  009D86  01                 	db	1
  2855  009D87  01                 	db	1
  2856  009D88  01                 	db	1
  2857  009D89  01                 	db	1
  2858  009D8A  01                 	db	1
  2859  009D8B  01                 	db	1
  2860  009D8C  01                 	db	1
  2861  009D8D  01                 	db	1
  2862  009D8E  01                 	db	1
  2863  009D8F  01                 	db	1
  2864  009D90  01                 	db	1
  2865  009D91  01                 	db	1
  2866  009D92  01                 	db	1
  2867  009D93  01                 	db	1
  2868  009D94  01                 	db	1
  2869  009D95  01                 	db	1
  2870  009D96  01                 	db	1
  2871  009D97  01                 	db	1
  2872  009D98  01                 	db	1
  2873  009D99  01                 	db	1
  2874  009D9A  01                 	db	1
  2875  009D9B  01                 	db	1
  2876  009D9C  01                 	db	1
  2877  009D9D  01                 	db	1
  2878  009D9E  01                 	db	1
  2879  009D9F  01                 	db	1
  2880  009DA0  01                 	db	1
  2881  009DA1  01                 	db	1
  2882  009DA2  01                 	db	1
  2883  009DA3  01                 	db	1
  2884  009DA4  01                 	db	1
  2885  009DA5  01                 	db	1
  2886  009DA6  01                 	db	1
  2887  009DA7  01                 	db	1
  2888  009DA8  01                 	db	1
  2889  009DA9  01                 	db	1
  2890  009DAA  01                 	db	1
  2891  009DAB  00                 	db	0
  2892  009DAC  00                 	db	0
  2893  009DAD  00                 	db	0
  2894  009DAE  00                 	db	0
  2895  009DAF  00                 	db	0
  2896  009DB0  00                 	db	0
  2897  009DB1  00                 	db	0
  2898  009DB2  00                 	db	0
  2899  009DB3  00                 	db	0
  2900  009DB4  00                 	db	0
  2901  009DB5  00                 	db	0
  2902  009DB6  00                 	db	0
  2903  009DB7  00                 	db	0
  2904  009DB8  00                 	db	0
  2905  009DB9  00                 	db	0
  2906  009DBA  00                 	db	0
  2907  009DBB  00                 	db	0
  2908  009DBC  00                 	db	0
  2909  009DBD  00                 	db	0
  2910  009DBE  00                 	db	0
  2911  009DBF  00                 	db	0
  2912  009DC0  00                 	db	0
  2913  009DC1  00                 	db	0
  2914  009DC2  00                 	db	0
  2915  009DC3  00                 	db	0
  2916  009DC4  00                 	db	0
  2917  009DC5  00                 	db	0
  2918  009DC6  00                 	db	0
  2919  009DC7  00                 	db	0
  2920  009DC8  00                 	db	0
  2921  009DC9  00                 	db	0
  2922  009DCA  00                 	db	0
  2923  009DCB  00                 	db	0
  2924  009DCC  00                 	db	0
  2925  009DCD  00                 	db	0
  2926  009DCE  00                 	db	0
  2927  009DCF  00                 	db	0
  2928  009DD0  00                 	db	0
  2929  009DD1  00                 	db	0
  2930  009DD2  00                 	db	0
  2931  009DD3  00                 	db	0
  2932  009DD4  00                 	db	0
  2933  009DD5  00                 	db	0
  2934  009DD6  00                 	db	0
  2935  009DD7  00                 	db	0
  2936  009DD8  00                 	db	0
  2937  009DD9  00                 	db	0
  2938  009DDA  00                 	db	0
  2939  009DDB  00                 	db	0
  2940  009DDC  00                 	db	0
  2941  009DDD  00                 	db	0
  2942  009DDE  00                 	db	0
  2943  009DDF  00                 	db	0
  2944  009DE0  00                 	db	0
  2945  009DE1  00                 	db	0
  2946  009DE2  00                 	db	0
  2947  009DE3  00                 	db	0
  2948  009DE4                     __end_of_motor_prescaler_lookup:
  2949                           	opt stack 0
  2950  009DE4                     _USB_SD_Ptr:
  2951                           	opt stack 0
  2952  009DE4  FA                 	db	low _sd000
  2953  009DE5  A2                 	db	high _sd000
  2954  009DE6  FE                 	db	low _sd001
  2955  009DE7  A0                 	db	high _sd001
  2956  009DE8  32                 	db	low _sd002
  2957  009DE9  A1                 	db	high _sd002
  2958  009DEA  A1                 	db	low _sd003
  2959  009DEB  A1                 	db	high _sd003
  2960  009DEC                     __end_of_USB_SD_Ptr:
  2961                           	opt stack 0
  2962  009DEC                     _USB_CD_Ptr:
  2963                           	opt stack 0
  2964  009DEC  BE                 	db	low _configDescriptor1
  2965  009DED  A0                 	db	high _configDescriptor1
  2966  009DEE                     __end_of_USB_CD_Ptr:
  2967                           	opt stack 0
  2968  009DEE                     _dc_manual:
  2969                           	opt stack 0
  2970  009DEE  4D                 	db	77
  2971  009DEF  61                 	db	97
  2972  009DF0  6E                 	db	110
  2973  009DF1  75                 	db	117
  2974  009DF2  61                 	db	97
  2975  009DF3  6C                 	db	108
  2976  009DF4  20                 	db	32
  2977  009DF5  4D                 	db	77
  2978  009DF6  6F                 	db	111
  2979  009DF7  64                 	db	100
  2980  009DF8  65                 	db	101
  2981  009DF9  20                 	db	32
  2982  009DFA  20                 	db	32
  2983  009DFB  20                 	db	32
  2984  009DFC  20                 	db	32
  2985  009DFD  20                 	db	32
  2986  009DFE  20                 	db	32
  2987  009DFF  20                 	db	32
  2988  009E00  20                 	db	32
  2989  009E01  20                 	db	32
  2990  009E02  43                 	db	67
  2991  009E03  75                 	db	117
  2992  009E04  72                 	db	114
  2993  009E05  72                 	db	114
  2994  009E06  65                 	db	101
  2995  009E07  6E                 	db	110
  2996  009E08  74                 	db	116
  2997  009E09  20                 	db	32
  2998  009E0A  70                 	db	112
  2999  009E0B  6F                 	db	111
  3000  009E0C  73                 	db	115
  3001  009E0D  3A                 	db	58
  3002  009E0E  20                 	db	32
  3003  009E0F  20                 	db	32
  3004  009E10  20                 	db	32
  3005  009E11  20                 	db	32
  3006  009E12  20                 	db	32
  3007  009E13  20                 	db	32
  3008  009E14  20                 	db	32
  3009  009E15  01                 	db	1
  3010  009E16  54                 	db	84
  3011  009E17  75                 	db	117
  3012  009E18  72                 	db	114
  3013  009E19  6E                 	db	110
  3014  009E1A  20                 	db	32
  3015  009E1B  43                 	db	67
  3016  009E1C  43                 	db	67
  3017  009E1D  57                 	db	87
  3018  009E1E  20                 	db	32
  3019  009E1F  00                 	db	0
  3020  009E20  20                 	db	32
  3021  009E21  53                 	db	83
  3022  009E22  70                 	db	112
  3023  009E23  65                 	db	101
  3024  009E24  65                 	db	101
  3025  009E25  64                 	db	100
  3026  009E26  20                 	db	32
  3027  009E27  20                 	db	32
  3028  009E28  20                 	db	32
  3029  009E29  20                 	db	32
  3030  009E2A  53                 	db	83
  3031  009E2B  74                 	db	116
  3032  009E2C  61                 	db	97
  3033  009E2D  72                 	db	114
  3034  009E2E  74                 	db	116
  3035  009E2F  20                 	db	32
  3036  009E30  20                 	db	32
  3037  009E31  20                 	db	32
  3038  009E32  20                 	db	32
  3039  009E33  00                 	db	0
  3040  009E34  20                 	db	32
  3041  009E35  20                 	db	32
  3042  009E36  20                 	db	32
  3043  009E37  20                 	db	32
  3044  009E38  20                 	db	32
  3045  009E39  20                 	db	32
  3046  009E3A  20                 	db	32
  3047  009E3B  20                 	db	32
  3048  009E3C  20                 	db	32
  3049  009E3D  20                 	db	32
  3050  009E3E                     __end_of_dc_manual:
  3051                           	opt stack 0
  3052  009E3E                     _dc_zero:
  3053                           	opt stack 0
  3054  009E3E  52                 	db	82
  3055  009E3F  65                 	db	101
  3056  009E40  74                 	db	116
  3057  009E41  75                 	db	117
  3058  009E42  72                 	db	114
  3059  009E43  6E                 	db	110
  3060  009E44  20                 	db	32
  3061  009E45  74                 	db	116
  3062  009E46  6F                 	db	111
  3063  009E47  20                 	db	32
  3064  009E48  5A                 	db	90
  3065  009E49  65                 	db	101
  3066  009E4A  72                 	db	114
  3067  009E4B  6F                 	db	111
  3068  009E4C  3F                 	db	63
  3069  009E4D  20                 	db	32
  3070  009E4E  20                 	db	32
  3071  009E4F  20                 	db	32
  3072  009E50  20                 	db	32
  3073  009E51  20                 	db	32
  3074  009E52  43                 	db	67
  3075  009E53  75                 	db	117
  3076  009E54  72                 	db	114
  3077  009E55  72                 	db	114
  3078  009E56  65                 	db	101
  3079  009E57  6E                 	db	110
  3080  009E58  74                 	db	116
  3081  009E59  20                 	db	32
  3082  009E5A  70                 	db	112
  3083  009E5B  6F                 	db	111
  3084  009E5C  73                 	db	115
  3085  009E5D  3A                 	db	58
  3086  009E5E  20                 	db	32
  3087  009E5F  20                 	db	32
  3088  009E60  20                 	db	32
  3089  009E61  20                 	db	32
  3090  009E62  20                 	db	32
  3091  009E63  20                 	db	32
  3092  009E64  20                 	db	32
  3093  009E65  20                 	db	32
  3094  009E66  20                 	db	32
  3095  009E67  20                 	db	32
  3096  009E68  20                 	db	32
  3097  009E69  20                 	db	32
  3098  009E6A  20                 	db	32
  3099  009E6B  20                 	db	32
  3100  009E6C  20                 	db	32
  3101  009E6D  20                 	db	32
  3102  009E6E  20                 	db	32
  3103  009E6F  20                 	db	32
  3104  009E70  20                 	db	32
  3105  009E71  20                 	db	32
  3106  009E72  20                 	db	32
  3107  009E73  20                 	db	32
  3108  009E74  20                 	db	32
  3109  009E75  20                 	db	32
  3110  009E76  20                 	db	32
  3111  009E77  20                 	db	32
  3112  009E78  20                 	db	32
  3113  009E79  20                 	db	32
  3114  009E7A  20                 	db	32
  3115  009E7B  59                 	db	89
  3116  009E7C  65                 	db	101
  3117  009E7D  73                 	db	115
  3118  009E7E  20                 	db	32
  3119  009E7F  20                 	db	32
  3120  009E80  20                 	db	32
  3121  009E81  20                 	db	32
  3122  009E82  20                 	db	32
  3123  009E83  20                 	db	32
  3124  009E84  20                 	db	32
  3125  009E85  20                 	db	32
  3126  009E86  20                 	db	32
  3127  009E87  20                 	db	32
  3128  009E88  20                 	db	32
  3129  009E89  20                 	db	32
  3130  009E8A  4E                 	db	78
  3131  009E8B  6F                 	db	111
  3132  009E8C  20                 	db	32
  3133  009E8D  20                 	db	32
  3134  009E8E                     __end_of_dc_zero:
  3135                           	opt stack 0
  3136  009E8E                     _dc_arc2:
  3137                           	opt stack 0
  3138  009E8E  41                 	db	65
  3139  009E8F  72                 	db	114
  3140  009E90  63                 	db	99
  3141  009E91  3A                 	db	58
  3142  009E92  20                 	db	32
  3143  009E93  53                 	db	83
  3144  009E94  69                 	db	105
  3145  009E95  7A                 	db	122
  3146  009E96  65                 	db	101
  3147  009E97  3D                 	db	61
  3148  009E98  20                 	db	32
  3149  009E99  20                 	db	32
  3150  009E9A  20                 	db	32
  3151  009E9B  20                 	db	32
  3152  009E9C  20                 	db	32
  3153  009E9D  20                 	db	32
  3154  009E9E  20                 	db	32
  3155  009E9F  20                 	db	32
  3156  009EA0  20                 	db	32
  3157  009EA1  20                 	db	32
  3158  009EA2  43                 	db	67
  3159  009EA3  75                 	db	117
  3160  009EA4  72                 	db	114
  3161  009EA5  72                 	db	114
  3162  009EA6  65                 	db	101
  3163  009EA7  6E                 	db	110
  3164  009EA8  74                 	db	116
  3165  009EA9  20                 	db	32
  3166  009EAA  70                 	db	112
  3167  009EAB  6F                 	db	111
  3168  009EAC  73                 	db	115
  3169  009EAD  3A                 	db	58
  3170  009EAE  20                 	db	32
  3171  009EAF  20                 	db	32
  3172  009EB0  20                 	db	32
  3173  009EB1  20                 	db	32
  3174  009EB2  20                 	db	32
  3175  009EB3  20                 	db	32
  3176  009EB4  20                 	db	32
  3177  009EB5  01                 	db	1
  3178  009EB6  54                 	db	84
  3179  009EB7  75                 	db	117
  3180  009EB8  72                 	db	114
  3181  009EB9  6E                 	db	110
  3182  009EBA  20                 	db	32
  3183  009EBB  43                 	db	67
  3184  009EBC  43                 	db	67
  3185  009EBD  57                 	db	87
  3186  009EBE  20                 	db	32
  3187  009EBF  00                 	db	0
  3188  009EC0  20                 	db	32
  3189  009EC1  53                 	db	83
  3190  009EC2  70                 	db	112
  3191  009EC3  65                 	db	101
  3192  009EC4  65                 	db	101
  3193  009EC5  64                 	db	100
  3194  009EC6  20                 	db	32
  3195  009EC7  20                 	db	32
  3196  009EC8  20                 	db	32
  3197  009EC9  20                 	db	32
  3198  009ECA  53                 	db	83
  3199  009ECB  74                 	db	116
  3200  009ECC  61                 	db	97
  3201  009ECD  72                 	db	114
  3202  009ECE  74                 	db	116
  3203  009ECF  20                 	db	32
  3204  009ED0  20                 	db	32
  3205  009ED1  20                 	db	32
  3206  009ED2  20                 	db	32
  3207  009ED3  00                 	db	0
  3208  009ED4  20                 	db	32
  3209  009ED5  20                 	db	32
  3210  009ED6  20                 	db	32
  3211  009ED7  20                 	db	32
  3212  009ED8  20                 	db	32
  3213  009ED9  20                 	db	32
  3214  009EDA  20                 	db	32
  3215  009EDB  20                 	db	32
  3216  009EDC  20                 	db	32
  3217  009EDD  20                 	db	32
  3218  009EDE                     __end_of_dc_arc2:
  3219                           	opt stack 0
  3220  009EDE                     _dc_arc1:
  3221                           	opt stack 0
  3222  009EDE  41                 	db	65
  3223  009EDF  72                 	db	114
  3224  009EE0  63                 	db	99
  3225  009EE1  3A                 	db	58
  3226  009EE2  20                 	db	32
  3227  009EE3  53                 	db	83
  3228  009EE4  65                 	db	101
  3229  009EE5  74                 	db	116
  3230  009EE6  20                 	db	32
  3231  009EE7  61                 	db	97
  3232  009EE8  72                 	db	114
  3233  009EE9  63                 	db	99
  3234  009EEA  20                 	db	32
  3235  009EEB  73                 	db	115
  3236  009EEC  69                 	db	105
  3237  009EED  7A                 	db	122
  3238  009EEE  65                 	db	101
  3239  009EEF  20                 	db	32
  3240  009EF0  20                 	db	32
  3241  009EF1  20                 	db	32
  3242  009EF2  41                 	db	65
  3243  009EF3  72                 	db	114
  3244  009EF4  63                 	db	99
  3245  009EF5  20                 	db	32
  3246  009EF6  73                 	db	115
  3247  009EF7  69                 	db	105
  3248  009EF8  7A                 	db	122
  3249  009EF9  65                 	db	101
  3250  009EFA  3A                 	db	58
  3251  009EFB  20                 	db	32
  3252  009EFC  20                 	db	32
  3253  009EFD  20                 	db	32
  3254  009EFE  20                 	db	32
  3255  009EFF  20                 	db	32
  3256  009F00  20                 	db	32
  3257  009F01  20                 	db	32
  3258  009F02  20                 	db	32
  3259  009F03  20                 	db	32
  3260  009F04  20                 	db	32
  3261  009F05  20                 	db	32
  3262  009F06  53                 	db	83
  3263  009F07  74                 	db	116
  3264  009F08  65                 	db	101
  3265  009F09  70                 	db	112
  3266  009F0A  20                 	db	32
  3267  009F0B  73                 	db	115
  3268  009F0C  69                 	db	105
  3269  009F0D  7A                 	db	122
  3270  009F0E  65                 	db	101
  3271  009F0F  20                 	db	32
  3272  009F10  00                 	db	0
  3273  009F11  20                 	db	32
  3274  009F12  20                 	db	32
  3275  009F13  43                 	db	67
  3276  009F14  6F                 	db	111
  3277  009F15  6E                 	db	110
  3278  009F16  66                 	db	102
  3279  009F17  69                 	db	105
  3280  009F18  72                 	db	114
  3281  009F19  6D                 	db	109
  3282  009F1A  20                 	db	32
  3283  009F1B  20                 	db	32
  3284  009F1C  20                 	db	32
  3285  009F1D  20                 	db	32
  3286  009F1E  20                 	db	32
  3287  009F1F  20                 	db	32
  3288  009F20  20                 	db	32
  3289  009F21  20                 	db	32
  3290  009F22  20                 	db	32
  3291  009F23  20                 	db	32
  3292  009F24  00                 	db	0
  3293  009F25  20                 	db	32
  3294  009F26  20                 	db	32
  3295  009F27  43                 	db	67
  3296  009F28  61                 	db	97
  3297  009F29  6E                 	db	110
  3298  009F2A  63                 	db	99
  3299  009F2B  65                 	db	101
  3300  009F2C  6C                 	db	108
  3301  009F2D  20                 	db	32
  3302  009F2E                     __end_of_dc_arc1:
  3303                           	opt stack 0
  3304  009F2E                     _dc_divide2:
  3305                           	opt stack 0
  3306  009F2E  44                 	db	68
  3307  009F2F  69                 	db	105
  3308  009F30  76                 	db	118
  3309  009F31  69                 	db	105
  3310  009F32  64                 	db	100
  3311  009F33  65                 	db	101
  3312  009F34  3A                 	db	58
  3313  009F35  20                 	db	32
  3314  009F36  20                 	db	32
  3315  009F37  20                 	db	32
  3316  009F38  20                 	db	32
  3317  009F39  20                 	db	32
  3318  009F3A  20                 	db	32
  3319  009F3B  20                 	db	32
  3320  009F3C  20                 	db	32
  3321  009F3D  20                 	db	32
  3322  009F3E  20                 	db	32
  3323  009F3F  20                 	db	32
  3324  009F40  20                 	db	32
  3325  009F41  20                 	db	32
  3326  009F42  50                 	db	80
  3327  009F43  6F                 	db	111
  3328  009F44  73                 	db	115
  3329  009F45  3A                 	db	58
  3330  009F46  20                 	db	32
  3331  009F47  20                 	db	32
  3332  009F48  20                 	db	32
  3333  009F49  20                 	db	32
  3334  009F4A  20                 	db	32
  3335  009F4B  20                 	db	32
  3336  009F4C  20                 	db	32
  3337  009F4D  20                 	db	32
  3338  009F4E  20                 	db	32
  3339  009F4F  20                 	db	32
  3340  009F50  20                 	db	32
  3341  009F51  20                 	db	32
  3342  009F52  20                 	db	32
  3343  009F53  20                 	db	32
  3344  009F54  20                 	db	32
  3345  009F55  20                 	db	32
  3346  009F56  4A                 	db	74
  3347  009F57  75                 	db	117
  3348  009F58  6D                 	db	109
  3349  009F59  70                 	db	112
  3350  009F5A  20                 	db	32
  3351  009F5B  73                 	db	115
  3352  009F5C  69                 	db	105
  3353  009F5D  7A                 	db	122
  3354  009F5E  65                 	db	101
  3355  009F5F  3A                 	db	58
  3356  009F60  20                 	db	32
  3357  009F61  20                 	db	32
  3358  009F62  20                 	db	32
  3359  009F63  20                 	db	32
  3360  009F64  20                 	db	32
  3361  009F65  20                 	db	32
  3362  009F66  20                 	db	32
  3363  009F67  20                 	db	32
  3364  009F68  20                 	db	32
  3365  009F69  20                 	db	32
  3366  009F6A  50                 	db	80
  3367  009F6B  72                 	db	114
  3368  009F6C  65                 	db	101
  3369  009F6D  73                 	db	115
  3370  009F6E  73                 	db	115
  3371  009F6F  54                 	db	84
  3372  009F70  6F                 	db	111
  3373  009F71  4A                 	db	74
  3374  009F72  75                 	db	117
  3375  009F73  6D                 	db	109
  3376  009F74  70                 	db	112
  3377  009F75  20                 	db	32
  3378  009F76  00                 	db	0
  3379  009F77  20                 	db	32
  3380  009F78  43                 	db	67
  3381  009F79  61                 	db	97
  3382  009F7A  6E                 	db	110
  3383  009F7B  63                 	db	99
  3384  009F7C  65                 	db	101
  3385  009F7D  6C                 	db	108
  3386  009F7E                     __end_of_dc_divide2:
  3387                           	opt stack 0
  3388  009F7E                     _dc_divide1:
  3389                           	opt stack 0
  3390  009F7E  44                 	db	68
  3391  009F7F  69                 	db	105
  3392  009F80  76                 	db	118
  3393  009F81  69                 	db	105
  3394  009F82  64                 	db	100
  3395  009F83  65                 	db	101
  3396  009F84  3A                 	db	58
  3397  009F85  20                 	db	32
  3398  009F86  53                 	db	83
  3399  009F87  65                 	db	101
  3400  009F88  74                 	db	116
  3401  009F89  20                 	db	32
  3402  009F8A  64                 	db	100
  3403  009F8B  69                 	db	105
  3404  009F8C  76                 	db	118
  3405  009F8D  69                 	db	105
  3406  009F8E  73                 	db	115
  3407  009F8F  69                 	db	105
  3408  009F90  6F                 	db	111
  3409  009F91  6E                 	db	110
  3410  009F92  20                 	db	32
  3411  009F93  20                 	db	32
  3412  009F94  20                 	db	32
  3413  009F95  20                 	db	32
  3414  009F96  20                 	db	32
  3415  009F97  20                 	db	32
  3416  009F98  20                 	db	32
  3417  009F99  20                 	db	32
  3418  009F9A  20                 	db	32
  3419  009F9B  20                 	db	32
  3420  009F9C  20                 	db	32
  3421  009F9D  20                 	db	32
  3422  009F9E  20                 	db	32
  3423  009F9F  20                 	db	32
  3424  009FA0  20                 	db	32
  3425  009FA1  20                 	db	32
  3426  009FA2  20                 	db	32
  3427  009FA3  20                 	db	32
  3428  009FA4  20                 	db	32
  3429  009FA5  20                 	db	32
  3430  009FA6  20                 	db	32
  3431  009FA7  20                 	db	32
  3432  009FA8  20                 	db	32
  3433  009FA9  2F                 	db	47
  3434  009FAA  73                 	db	115
  3435  009FAB  74                 	db	116
  3436  009FAC  65                 	db	101
  3437  009FAD  70                 	db	112
  3438  009FAE  20                 	db	32
  3439  009FAF  20                 	db	32
  3440  009FB0  00                 	db	0
  3441  009FB1  20                 	db	32
  3442  009FB2  20                 	db	32
  3443  009FB3  43                 	db	67
  3444  009FB4  6F                 	db	111
  3445  009FB5  6E                 	db	110
  3446  009FB6  66                 	db	102
  3447  009FB7  69                 	db	105
  3448  009FB8  72                 	db	114
  3449  009FB9  6D                 	db	109
  3450  009FBA  31                 	db	49
  3451  009FBB  32                 	db	50
  3452  009FBC  33                 	db	51
  3453  009FBD  34                 	db	52
  3454  009FBE  20                 	db	32
  3455  009FBF  20                 	db	32
  3456  009FC0  20                 	db	32
  3457  009FC1  20                 	db	32
  3458  009FC2  20                 	db	32
  3459  009FC3  20                 	db	32
  3460  009FC4  00                 	db	0
  3461  009FC5  20                 	db	32
  3462  009FC6  20                 	db	32
  3463  009FC7  43                 	db	67
  3464  009FC8  61                 	db	97
  3465  009FC9  6E                 	db	110
  3466  009FCA  63                 	db	99
  3467  009FCB  65                 	db	101
  3468  009FCC  6C                 	db	108
  3469  009FCD  20                 	db	32
  3470  009FCE                     __end_of_dc_divide1:
  3471                           	opt stack 0
  3472  009FCE                     _dc_setup2:
  3473                           	opt stack 0
  3474  009FCE  53                 	db	83
  3475  009FCF  65                 	db	101
  3476  009FD0  74                 	db	116
  3477  009FD1  75                 	db	117
  3478  009FD2  70                 	db	112
  3479  009FD3  3A                 	db	58
  3480  009FD4  20                 	db	32
  3481  009FD5  53                 	db	83
  3482  009FD6  65                 	db	101
  3483  009FD7  74                 	db	116
  3484  009FD8  20                 	db	32
  3485  009FD9  64                 	db	100
  3486  009FDA  69                 	db	105
  3487  009FDB  72                 	db	114
  3488  009FDC  65                 	db	101
  3489  009FDD  63                 	db	99
  3490  009FDE  74                 	db	116
  3491  009FDF  69                 	db	105
  3492  009FE0  6F                 	db	111
  3493  009FE1  6E                 	db	110
  3494  009FE2  20                 	db	32
  3495  009FE3  20                 	db	32
  3496  009FE4  20                 	db	32
  3497  009FE5  20                 	db	32
  3498  009FE6  20                 	db	32
  3499  009FE7  20                 	db	32
  3500  009FE8  20                 	db	32
  3501  009FE9  20                 	db	32
  3502  009FEA  20                 	db	32
  3503  009FEB  20                 	db	32
  3504  009FEC  20                 	db	32
  3505  009FED  20                 	db	32
  3506  009FEE  20                 	db	32
  3507  009FEF  20                 	db	32
  3508  009FF0  20                 	db	32
  3509  009FF1  20                 	db	32
  3510  009FF2  20                 	db	32
  3511  009FF3  20                 	db	32
  3512  009FF4  20                 	db	32
  3513  009FF5  20                 	db	32
  3514  009FF6  20                 	db	32
  3515  009FF7  43                 	db	67
  3516  009FF8  6F                 	db	111
  3517  009FF9  75                 	db	117
  3518  009FFA  6E                 	db	110
  3519  009FFB  74                 	db	116
  3520  009FFC  65                 	db	101
  3521  009FFD  72                 	db	114
  3522  009FFE  43                 	db	67
  3523  009FFF  6C                 	db	108
  3524  00A000  6F                 	db	111
  3525  00A001  63                 	db	99
  3526  00A002  6B                 	db	107
  3527  00A003  77                 	db	119
  3528  00A004  69                 	db	105
  3529  00A005  73                 	db	115
  3530  00A006  65                 	db	101
  3531  00A007  20                 	db	32
  3532  00A008  20                 	db	32
  3533  00A009  20                 	db	32
  3534  00A00A  20                 	db	32
  3535  00A00B  43                 	db	67
  3536  00A00C  6C                 	db	108
  3537  00A00D  6F                 	db	111
  3538  00A00E  63                 	db	99
  3539  00A00F  6B                 	db	107
  3540  00A010  77                 	db	119
  3541  00A011  69                 	db	105
  3542  00A012  73                 	db	115
  3543  00A013  65                 	db	101
  3544  00A014  20                 	db	32
  3545  00A015  20                 	db	32
  3546  00A016  20                 	db	32
  3547  00A017  20                 	db	32
  3548  00A018  20                 	db	32
  3549  00A019  20                 	db	32
  3550  00A01A  20                 	db	32
  3551  00A01B  20                 	db	32
  3552  00A01C  20                 	db	32
  3553  00A01D  20                 	db	32
  3554  00A01E                     __end_of_dc_setup2:
  3555                           	opt stack 0
  3556  00A01E                     _dc_setup1:
  3557                           	opt stack 0
  3558  00A01E  53                 	db	83
  3559  00A01F  65                 	db	101
  3560  00A020  74                 	db	116
  3561  00A021  75                 	db	117
  3562  00A022  70                 	db	112
  3563  00A023  3A                 	db	58
  3564  00A024  20                 	db	32
  3565  00A025  53                 	db	83
  3566  00A026  65                 	db	101
  3567  00A027  74                 	db	116
  3568  00A028  20                 	db	32
  3569  00A029  7A                 	db	122
  3570  00A02A  65                 	db	101
  3571  00A02B  72                 	db	114
  3572  00A02C  6F                 	db	111
  3573  00A02D  20                 	db	32
  3574  00A02E  70                 	db	112
  3575  00A02F  6F                 	db	111
  3576  00A030  73                 	db	115
  3577  00A031  2E                 	db	46
  3578  00A032  20                 	db	32
  3579  00A033  20                 	db	32
  3580  00A034  20                 	db	32
  3581  00A035  20                 	db	32
  3582  00A036  20                 	db	32
  3583  00A037  20                 	db	32
  3584  00A038  20                 	db	32
  3585  00A039  20                 	db	32
  3586  00A03A  20                 	db	32
  3587  00A03B  20                 	db	32
  3588  00A03C  20                 	db	32
  3589  00A03D  20                 	db	32
  3590  00A03E  20                 	db	32
  3591  00A03F  20                 	db	32
  3592  00A040  20                 	db	32
  3593  00A041  20                 	db	32
  3594  00A042  20                 	db	32
  3595  00A043  20                 	db	32
  3596  00A044  20                 	db	32
  3597  00A045  20                 	db	32
  3598  00A046  53                 	db	83
  3599  00A047  74                 	db	116
  3600  00A048  65                 	db	101
  3601  00A049  70                 	db	112
  3602  00A04A  20                 	db	32
  3603  00A04B  73                 	db	115
  3604  00A04C  69                 	db	105
  3605  00A04D  7A                 	db	122
  3606  00A04E  65                 	db	101
  3607  00A04F  20                 	db	32
  3608  00A050  00                 	db	0
  3609  00A051  20                 	db	32
  3610  00A052  20                 	db	32
  3611  00A053  43                 	db	67
  3612  00A054  6F                 	db	111
  3613  00A055  6E                 	db	110
  3614  00A056  66                 	db	102
  3615  00A057  69                 	db	105
  3616  00A058  72                 	db	114
  3617  00A059  6D                 	db	109
  3618  00A05A  20                 	db	32
  3619  00A05B  78                 	db	120
  3620  00A05C  2E                 	db	46
  3621  00A05D  78                 	db	120
  3622  00A05E  78                 	db	120
  3623  00A05F  01                 	db	1
  3624  00A060  20                 	db	32
  3625  00A061  20                 	db	32
  3626  00A062  20                 	db	32
  3627  00A063  20                 	db	32
  3628  00A064  00                 	db	0
  3629  00A065  20                 	db	32
  3630  00A066  20                 	db	32
  3631  00A067  43                 	db	67
  3632  00A068  61                 	db	97
  3633  00A069  6E                 	db	110
  3634  00A06A  63                 	db	99
  3635  00A06B  65                 	db	101
  3636  00A06C  6C                 	db	108
  3637  00A06D  20                 	db	32
  3638  00A06E                     __end_of_dc_setup1:
  3639                           	opt stack 0
  3640  00A06E                     _dc_main:
  3641                           	opt stack 0
  3642  00A06E  4D                 	db	77
  3643  00A06F  61                 	db	97
  3644  00A070  69                 	db	105
  3645  00A071  6E                 	db	110
  3646  00A072  20                 	db	32
  3647  00A073  4D                 	db	77
  3648  00A074  65                 	db	101
  3649  00A075  6E                 	db	110
  3650  00A076  75                 	db	117
  3651  00A077  3A                 	db	58
  3652  00A078  20                 	db	32
  3653  00A079  20                 	db	32
  3654  00A07A  20                 	db	32
  3655  00A07B  20                 	db	32
  3656  00A07C  20                 	db	32
  3657  00A07D  20                 	db	32
  3658  00A07E  20                 	db	32
  3659  00A07F  20                 	db	32
  3660  00A080  20                 	db	32
  3661  00A081  20                 	db	32
  3662  00A082  20                 	db	32
  3663  00A083  53                 	db	83
  3664  00A084  65                 	db	101
  3665  00A085  74                 	db	116
  3666  00A086  75                 	db	117
  3667  00A087  70                 	db	112
  3668  00A088  20                 	db	32
  3669  00A089  20                 	db	32
  3670  00A08A  20                 	db	32
  3671  00A08B  20                 	db	32
  3672  00A08C  44                 	db	68
  3673  00A08D  69                 	db	105
  3674  00A08E  76                 	db	118
  3675  00A08F  69                 	db	105
  3676  00A090  64                 	db	100
  3677  00A091  65                 	db	101
  3678  00A092  20                 	db	32
  3679  00A093  20                 	db	32
  3680  00A094  20                 	db	32
  3681  00A095  20                 	db	32
  3682  00A096  20                 	db	32
  3683  00A097  41                 	db	65
  3684  00A098  72                 	db	114
  3685  00A099  63                 	db	99
  3686  00A09A  20                 	db	32
  3687  00A09B  20                 	db	32
  3688  00A09C  20                 	db	32
  3689  00A09D  20                 	db	32
  3690  00A09E  20                 	db	32
  3691  00A09F  20                 	db	32
  3692  00A0A0  4D                 	db	77
  3693  00A0A1  61                 	db	97
  3694  00A0A2  6E                 	db	110
  3695  00A0A3  75                 	db	117
  3696  00A0A4  61                 	db	97
  3697  00A0A5  6C                 	db	108
  3698  00A0A6  20                 	db	32
  3699  00A0A7  20                 	db	32
  3700  00A0A8  20                 	db	32
  3701  00A0A9  20                 	db	32
  3702  00A0AA  20                 	db	32
  3703  00A0AB  47                 	db	71
  3704  00A0AC  6F                 	db	111
  3705  00A0AD  32                 	db	50
  3706  00A0AE  5A                 	db	90
  3707  00A0AF  65                 	db	101
  3708  00A0B0  72                 	db	114
  3709  00A0B1  6F                 	db	111
  3710  00A0B2  20                 	db	32
  3711  00A0B3  20                 	db	32
  3712  00A0B4  20                 	db	32
  3713  00A0B5  20                 	db	32
  3714  00A0B6  20                 	db	32
  3715  00A0B7  20                 	db	32
  3716  00A0B8  20                 	db	32
  3717  00A0B9  20                 	db	32
  3718  00A0BA  20                 	db	32
  3719  00A0BB  20                 	db	32
  3720  00A0BC  20                 	db	32
  3721  00A0BD  20                 	db	32
  3722  00A0BE                     __end_of_dc_main:
  3723                           	opt stack 0
  3724  00A0BE                     _configDescriptor1:
  3725                           	opt stack 0
  3726  00A0BE  09                 	db	9
  3727  00A0BF  02                 	db	2
  3728  00A0C0  40                 	db	64
  3729  00A0C1  00                 	db	0
  3730  00A0C2  02                 	db	2
  3731  00A0C3  01                 	db	1
  3732  00A0C4  00                 	db	0
  3733  00A0C5  C0                 	db	192
  3734  00A0C6  32                 	db	50
  3735  00A0C7  09                 	db	9
  3736  00A0C8  04                 	db	4
  3737  00A0C9  00                 	db	0
  3738  00A0CA  00                 	db	0
  3739  00A0CB  02                 	db	2
  3740  00A0CC  03                 	db	3
  3741  00A0CD  00                 	db	0
  3742  00A0CE  00                 	db	0
  3743  00A0CF  00                 	db	0
  3744  00A0D0  09                 	db	9
  3745  00A0D1  21                 	db	33
  3746  00A0D2  11                 	db	17
  3747  00A0D3  01                 	db	1
  3748  00A0D4  00                 	db	0
  3749  00A0D5  01                 	db	1
  3750  00A0D6  22                 	db	34
  3751  00A0D7  1D                 	db	29
  3752  00A0D8  00                 	db	0
  3753  00A0D9  07                 	db	7
  3754  00A0DA  05                 	db	5
  3755  00A0DB  81                 	db	129
  3756  00A0DC  03                 	db	3
  3757  00A0DD  40                 	db	64
  3758  00A0DE  00                 	db	0
  3759  00A0DF  01                 	db	1
  3760  00A0E0  07                 	db	7
  3761  00A0E1  05                 	db	5
  3762  00A0E2  01                 	db	1
  3763  00A0E3  03                 	db	3
  3764  00A0E4  40                 	db	64
  3765  00A0E5  00                 	db	0
  3766  00A0E6  01                 	db	1
  3767  00A0E7  09                 	db	9
  3768  00A0E8  04                 	db	4
  3769  00A0E9  01                 	db	1
  3770  00A0EA  00                 	db	0
  3771  00A0EB  02                 	db	2
  3772  00A0EC  08                 	db	8
  3773  00A0ED  06                 	db	6
  3774  00A0EE  50                 	db	80
  3775  00A0EF  00                 	db	0
  3776  00A0F0  07                 	db	7
  3777  00A0F1  05                 	db	5
  3778  00A0F2  82                 	db	130
  3779  00A0F3  02                 	db	2
  3780  00A0F4  40                 	db	64
  3781  00A0F5  00                 	db	0
  3782  00A0F6  01                 	db	1
  3783  00A0F7  07                 	db	7
  3784  00A0F8  05                 	db	5
  3785  00A0F9  02                 	db	2
  3786  00A0FA  02                 	db	2
  3787  00A0FB  40                 	db	64
  3788  00A0FC  00                 	db	0
  3789  00A0FD  01                 	db	1
  3790  00A0FE                     __end_of_configDescriptor1:
  3791                           	opt stack 0
  3792  00A0FE                     _sd001:
  3793                           	opt stack 0
  3794  00A0FE  34                 	db	52
  3795  00A0FF  03                 	db	3
  3796  00A100  0053               	dw	83
  3797  00A102  006F               	dw	111
  3798  00A104  006C               	dw	108
  3799  00A106  0064               	dw	100
  3800  00A108  0065               	dw	101
  3801  00A10A  0072               	dw	114
  3802  00A10C  006E               	dw	110
  3803  00A10E  0065               	dw	101
  3804  00A110  0072               	dw	114
  3805  00A112  0064               	dw	100
  3806  00A114  002E               	dw	46
  3807  00A116  0063               	dw	99
  3808  00A118  006F               	dw	111
  3809  00A11A  006D               	dw	109
  3810  00A11C  0020               	dw	32
  3811  00A11E  0020               	dw	32
  3812  00A120  0020               	dw	32
  3813  00A122  0020               	dw	32
  3814  00A124  0020               	dw	32
  3815  00A126  0020               	dw	32
  3816  00A128  0020               	dw	32
  3817  00A12A  0020               	dw	32
  3818  00A12C  0020               	dw	32
  3819  00A12E  0020               	dw	32
  3820  00A130  0020               	dw	32
  3821  00A132                     __end_of_sd001:
  3822                           	opt stack 0
  3823  00A132                     _sd002:
  3824                           	opt stack 0
  3825  00A132  2E                 	db	46
  3826  00A133  03                 	db	3
  3827  00A134  0053               	dw	83
  3828  00A136  0074               	dw	116
  3829  00A138  0065               	dw	101
  3830  00A13A  0070               	dw	112
  3831  00A13C  0070               	dw	112
  3832  00A13E  0065               	dw	101
  3833  00A140  0072               	dw	114
  3834  00A142  004D               	dw	77
  3835  00A144  006F               	dw	111
  3836  00A146  0074               	dw	116
  3837  00A148  006F               	dw	111
  3838  00A14A  0072               	dw	114
  3839  00A14C  0043               	dw	67
  3840  00A14E  006F               	dw	111
  3841  00A150  006E               	dw	110
  3842  00A152  0074               	dw	116
  3843  00A154  0072               	dw	114
  3844  00A156  006F               	dw	111
  3845  00A158  006C               	dw	108
  3846  00A15A  006C               	dw	108
  3847  00A15C  0065               	dw	101
  3848  00A15E  0072               	dw	114
  3849  00A160                     __end_of_sd002:
  3850                           	opt stack 0
  3851  00A160                     _inq_resp:
  3852                           	opt stack 0
  3853  00A160  00                 	db	0
  3854  00A161  80                 	db	128
  3855  00A162  04                 	db	4
  3856  00A163  02                 	db	2
  3857  00A164  20                 	db	32
  3858  00A165  00                 	db	0
  3859  00A166  00                 	db	0
  3860  00A167  00                 	db	0
  3861  00A168  4D                 	db	77
  3862  00A169  69                 	db	105
  3863  00A16A  63                 	db	99
  3864  00A16B  72                 	db	114
  3865  00A16C  6F                 	db	111
  3866  00A16D  63                 	db	99
  3867  00A16E  68                 	db	104
  3868  00A16F  70                 	db	112
  3869  00A170  4D                 	db	77
  3870  00A171  61                 	db	97
  3871  00A172  73                 	db	115
  3872  00A173  73                 	db	115
  3873  00A174  20                 	db	32
  3874  00A175  53                 	db	83
  3875  00A176  74                 	db	116
  3876  00A177  6F                 	db	111
  3877  00A178  72                 	db	114
  3878  00A179  61                 	db	97
  3879  00A17A  67                 	db	103
  3880  00A17B  65                 	db	101
  3881  00A17C  20                 	db	32
  3882  00A17D  20                 	db	32
  3883  00A17E  20                 	db	32
  3884  00A17F  20                 	db	32
  3885  00A180  30                 	db	48
  3886  00A181  30                 	db	48
  3887  00A182  30                 	db	48
  3888  00A183  31                 	db	49
  3889  00A184                     __end_of_inq_resp:
  3890                           	opt stack 0
  3891  00A184                     _hid_rpt01:
  3892                           	opt stack 0
  3893  00A184  06                 	db	6
  3894  00A185  00                 	db	0
  3895  00A186  FF                 	db	255
  3896  00A187  09                 	db	9
  3897  00A188  01                 	db	1
  3898  00A189  A1                 	db	161
  3899  00A18A  01                 	db	1
  3900  00A18B  19                 	db	25
  3901  00A18C  01                 	db	1
  3902  00A18D  29                 	db	41
  3903  00A18E  40                 	db	64
  3904  00A18F  15                 	db	21
  3905  00A190  00                 	db	0
  3906  00A191  26                 	db	38
  3907  00A192  FF                 	db	255
  3908  00A193  00                 	db	0
  3909  00A194  75                 	db	117
  3910  00A195  08                 	db	8
  3911  00A196  95                 	db	149
  3912  00A197  40                 	db	64
  3913  00A198  81                 	db	129
  3914  00A199  00                 	db	0
  3915  00A19A  19                 	db	25
  3916  00A19B  01                 	db	1
  3917  00A19C  29                 	db	41
  3918  00A19D  40                 	db	64
  3919  00A19E  91                 	db	145
  3920  00A19F  00                 	db	0
  3921  00A1A0  C0                 	db	192
  3922  00A1A1                     __end_of_hid_rpt01:
  3923                           	opt stack 0
  3924  00A1A1                     _sd003:
  3925                           	opt stack 0
  3926  00A1A1  1A                 	db	26
  3927  00A1A2  03                 	db	3
  3928  00A1A3  0031               	dw	49
  3929  00A1A5  0032               	dw	50
  3930  00A1A7  0033               	dw	51
  3931  00A1A9  0034               	dw	52
  3932  00A1AB  0035               	dw	53
  3933  00A1AD  0036               	dw	54
  3934  00A1AF  0037               	dw	55
  3935  00A1B1  0038               	dw	56
  3936  00A1B3  0039               	dw	57
  3937  00A1B5  0030               	dw	48
  3938  00A1B7  0039               	dw	57
  3939  00A1B9  0039               	dw	57
  3940  00A1BB                     __end_of_sd003:
  3941                           	opt stack 0
  3942  00A1BB                     _overshoot_cost_in_steps_string:
  3943                           	opt stack 0
  3944  00A1BB  4F                 	db	79
  3945  00A1BC  56                 	db	86
  3946  00A1BD  45                 	db	69
  3947  00A1BE  52                 	db	82
  3948  00A1BF  53                 	db	83
  3949  00A1C0  48                 	db	72
  3950  00A1C1  4F                 	db	79
  3951  00A1C2  4F                 	db	79
  3952  00A1C3  54                 	db	84
  3953  00A1C4  5F                 	db	95
  3954  00A1C5  43                 	db	67
  3955  00A1C6  4F                 	db	79
  3956  00A1C7  53                 	db	83
  3957  00A1C8  54                 	db	84
  3958  00A1C9  5F                 	db	95
  3959  00A1CA  49                 	db	73
  3960  00A1CB  4E                 	db	78
  3961  00A1CC  5F                 	db	95
  3962  00A1CD  53                 	db	83
  3963  00A1CE  54                 	db	84
  3964  00A1CF  45                 	db	69
  3965  00A1D0  50                 	db	80
  3966  00A1D1  53                 	db	83
  3967  00A1D2  00                 	db	0
  3968  00A1D3                     __end_of_overshoot_cost_in_steps_string:
  3969                           	opt stack 0
  3970  00A1D3                     _position_display_180_string:
  3971                           	opt stack 0
  3972  00A1D3  50                 	db	80
  3973  00A1D4  4F                 	db	79
  3974  00A1D5  53                 	db	83
  3975  00A1D6  49                 	db	73
  3976  00A1D7  54                 	db	84
  3977  00A1D8  49                 	db	73
  3978  00A1D9  4F                 	db	79
  3979  00A1DA  4E                 	db	78
  3980  00A1DB  5F                 	db	95
  3981  00A1DC  44                 	db	68
  3982  00A1DD  49                 	db	73
  3983  00A1DE  53                 	db	83
  3984  00A1DF  50                 	db	80
  3985  00A1E0  4C                 	db	76
  3986  00A1E1  41                 	db	65
  3987  00A1E2  59                 	db	89
  3988  00A1E3  5F                 	db	95
  3989  00A1E4  31                 	db	49
  3990  00A1E5  38                 	db	56
  3991  00A1E6  30                 	db	48
  3992  00A1E7  00                 	db	0
  3993  00A1E8                     __end_of_position_display_180_string:
  3994                           	opt stack 0
  3995  00A1E8                     _maximum_speed_manual_string:
  3996                           	opt stack 0
  3997  00A1E8  4D                 	db	77
  3998  00A1E9  41                 	db	65
  3999  00A1EA  58                 	db	88
  4000  00A1EB  49                 	db	73
  4001  00A1EC  4D                 	db	77
  4002  00A1ED  55                 	db	85
  4003  00A1EE  4D                 	db	77
  4004  00A1EF  5F                 	db	95
  4005  00A1F0  53                 	db	83
  4006  00A1F1  50                 	db	80
  4007  00A1F2  45                 	db	69
  4008  00A1F3  45                 	db	69
  4009  00A1F4  44                 	db	68
  4010  00A1F5  5F                 	db	95
  4011  00A1F6  4D                 	db	77
  4012  00A1F7  41                 	db	65
  4013  00A1F8  4E                 	db	78
  4014  00A1F9  55                 	db	85
  4015  00A1FA  41                 	db	65
  4016  00A1FB  4C                 	db	76
  4017  00A1FC  00                 	db	0
  4018  00A1FD                     __end_of_maximum_speed_manual_string:
  4019                           	opt stack 0
  4020  00A1FD                     _initial_speed_manual_string:
  4021                           	opt stack 0
  4022  00A1FD  49                 	db	73
  4023  00A1FE  4E                 	db	78
  4024  00A1FF  49                 	db	73
  4025  00A200  54                 	db	84
  4026  00A201  49                 	db	73
  4027  00A202  41                 	db	65
  4028  00A203  4C                 	db	76
  4029  00A204  5F                 	db	95
  4030  00A205  53                 	db	83
  4031  00A206  50                 	db	80
  4032  00A207  45                 	db	69
  4033  00A208  45                 	db	69
  4034  00A209  44                 	db	68
  4035  00A20A  5F                 	db	95
  4036  00A20B  4D                 	db	77
  4037  00A20C  41                 	db	65
  4038  00A20D  4E                 	db	78
  4039  00A20E  55                 	db	85
  4040  00A20F  41                 	db	65
  4041  00A210  4C                 	db	76
  4042  00A211  00                 	db	0
  4043  00A212                     __end_of_initial_speed_manual_string:
  4044                           	opt stack 0
  4045  00A212                     _full_circle_in_steps_string:
  4046                           	opt stack 0
  4047  00A212  46                 	db	70
  4048  00A213  55                 	db	85
  4049  00A214  4C                 	db	76
  4050  00A215  4C                 	db	76
  4051  00A216  5F                 	db	95
  4052  00A217  43                 	db	67
  4053  00A218  49                 	db	73
  4054  00A219  52                 	db	82
  4055  00A21A  43                 	db	67
  4056  00A21B  4C                 	db	76
  4057  00A21C  45                 	db	69
  4058  00A21D  5F                 	db	95
  4059  00A21E  49                 	db	73
  4060  00A21F  4E                 	db	78
  4061  00A220  5F                 	db	95
  4062  00A221  53                 	db	83
  4063  00A222  54                 	db	84
  4064  00A223  45                 	db	69
  4065  00A224  50                 	db	80
  4066  00A225  53                 	db	83
  4067  00A226  00                 	db	0
  4068  00A227                     __end_of_full_circle_in_steps_string:
  4069                           	opt stack 0
  4070  00A227                     _overshoot_in_steps_string:
  4071                           	opt stack 0
  4072  00A227  4F                 	db	79
  4073  00A228  56                 	db	86
  4074  00A229  45                 	db	69
  4075  00A22A  52                 	db	82
  4076  00A22B  53                 	db	83
  4077  00A22C  48                 	db	72
  4078  00A22D  4F                 	db	79
  4079  00A22E  4F                 	db	79
  4080  00A22F  54                 	db	84
  4081  00A230  5F                 	db	95
  4082  00A231  49                 	db	73
  4083  00A232  4E                 	db	78
  4084  00A233  5F                 	db	95
  4085  00A234  53                 	db	83
  4086  00A235  54                 	db	84
  4087  00A236  45                 	db	69
  4088  00A237  50                 	db	80
  4089  00A238  53                 	db	83
  4090  00A239  00                 	db	0
  4091  00A23A                     __end_of_overshoot_in_steps_string:
  4092                           	opt stack 0
  4093  00A23A                     _maximum_speed_arc_string:
  4094                           	opt stack 0
  4095  00A23A  4D                 	db	77
  4096  00A23B  41                 	db	65
  4097  00A23C  58                 	db	88
  4098  00A23D  49                 	db	73
  4099  00A23E  4D                 	db	77
  4100  00A23F  55                 	db	85
  4101  00A240  4D                 	db	77
  4102  00A241  5F                 	db	95
  4103  00A242  53                 	db	83
  4104  00A243  50                 	db	80
  4105  00A244  45                 	db	69
  4106  00A245  45                 	db	69
  4107  00A246  44                 	db	68
  4108  00A247  5F                 	db	95
  4109  00A248  41                 	db	65
  4110  00A249  52                 	db	82
  4111  00A24A  43                 	db	67
  4112  00A24B  00                 	db	0
  4113  00A24C                     __end_of_maximum_speed_arc_string:
  4114                           	opt stack 0
  4115  00A24C                     _initial_speed_arc_string:
  4116                           	opt stack 0
  4117  00A24C  49                 	db	73
  4118  00A24D  4E                 	db	78
  4119  00A24E  49                 	db	73
  4120  00A24F  54                 	db	84
  4121  00A250  49                 	db	73
  4122  00A251  41                 	db	65
  4123  00A252  4C                 	db	76
  4124  00A253  5F                 	db	95
  4125  00A254  53                 	db	83
  4126  00A255  50                 	db	80
  4127  00A256  45                 	db	69
  4128  00A257  45                 	db	69
  4129  00A258  44                 	db	68
  4130  00A259  5F                 	db	95
  4131  00A25A  41                 	db	65
  4132  00A25B  52                 	db	82
  4133  00A25C  43                 	db	67
  4134  00A25D  00                 	db	0
  4135  00A25E                     __end_of_initial_speed_arc_string:
  4136                           	opt stack 0
  4137  00A25E                     _inverse_direction_string:
  4138                           	opt stack 0
  4139  00A25E  49                 	db	73
  4140  00A25F  4E                 	db	78
  4141  00A260  56                 	db	86
  4142  00A261  45                 	db	69
  4143  00A262  52                 	db	82
  4144  00A263  53                 	db	83
  4145  00A264  45                 	db	69
  4146  00A265  5F                 	db	95
  4147  00A266  44                 	db	68
  4148  00A267  49                 	db	73
  4149  00A268  52                 	db	82
  4150  00A269  45                 	db	69
  4151  00A26A  43                 	db	67
  4152  00A26B  54                 	db	84
  4153  00A26C  49                 	db	73
  4154  00A26D  4F                 	db	79
  4155  00A26E  4E                 	db	78
  4156  00A26F  00                 	db	0
  4157  00A270                     __end_of_inverse_direction_string:
  4158                           	opt stack 0
  4159  00A270                     _device_dsc:
  4160                           	opt stack 0
  4161  00A270  12                 	db	18
  4162  00A271  01                 	db	1
  4163  00A272  0200               	dw	512
  4164  00A274  00                 	db	0
  4165  00A275  00                 	db	0
  4166  00A276  00                 	db	0
  4167  00A277  08                 	db	8
  4168  00A278  04D8               	dw	1240
  4169  00A27A  EDCF               	dw	60879
  4170  00A27C  0100               	dw	256
  4171  00A27E  01                 	db	1
  4172  00A27F  02                 	db	2
  4173  00A280  00                 	db	0
  4174  00A281  01                 	db	1
  4175  00A282                     __end_of_device_dsc:
  4176                           	opt stack 0
  4177  00A282                     _use_ccw_limit_string:
  4178                           	opt stack 0
  4179  00A282  55                 	db	85
  4180  00A283  53                 	db	83
  4181  00A284  45                 	db	69
  4182  00A285  5F                 	db	95
  4183  00A286  43                 	db	67
  4184  00A287  43                 	db	67
  4185  00A288  57                 	db	87
  4186  00A289  5F                 	db	95
  4187  00A28A  4C                 	db	76
  4188  00A28B  49                 	db	73
  4189  00A28C  4D                 	db	77
  4190  00A28D  49                 	db	73
  4191  00A28E  54                 	db	84
  4192  00A28F  00                 	db	0
  4193  00A290                     __end_of_use_ccw_limit_string:
  4194                           	opt stack 0
  4195  00A290                     _beep_duration_string:
  4196                           	opt stack 0
  4197  00A290  42                 	db	66
  4198  00A291  45                 	db	69
  4199  00A292  45                 	db	69
  4200  00A293  50                 	db	80
  4201  00A294  5F                 	db	95
  4202  00A295  44                 	db	68
  4203  00A296  55                 	db	85
  4204  00A297  52                 	db	82
  4205  00A298  41                 	db	65
  4206  00A299  54                 	db	84
  4207  00A29A  49                 	db	73
  4208  00A29B  4F                 	db	79
  4209  00A29C  4E                 	db	78
  4210  00A29D  00                 	db	0
  4211  00A29E                     __end_of_beep_duration_string:
  4212                           	opt stack 0
  4213  00A29E                     _maximum_speed_string:
  4214                           	opt stack 0
  4215  00A29E  4D                 	db	77
  4216  00A29F  41                 	db	65
  4217  00A2A0  58                 	db	88
  4218  00A2A1  49                 	db	73
  4219  00A2A2  4D                 	db	77
  4220  00A2A3  55                 	db	85
  4221  00A2A4  4D                 	db	77
  4222  00A2A5  5F                 	db	95
  4223  00A2A6  53                 	db	83
  4224  00A2A7  50                 	db	80
  4225  00A2A8  45                 	db	69
  4226  00A2A9  45                 	db	69
  4227  00A2AA  44                 	db	68
  4228  00A2AB  00                 	db	0
  4229  00A2AC                     __end_of_maximum_speed_string:
  4230                           	opt stack 0
  4231  00A2AC                     _minimum_speed_string:
  4232                           	opt stack 0
  4233  00A2AC  4D                 	db	77
  4234  00A2AD  49                 	db	73
  4235  00A2AE  4E                 	db	78
  4236  00A2AF  49                 	db	73
  4237  00A2B0  4D                 	db	77
  4238  00A2B1  55                 	db	85
  4239  00A2B2  4D                 	db	77
  4240  00A2B3  5F                 	db	95
  4241  00A2B4  53                 	db	83
  4242  00A2B5  50                 	db	80
  4243  00A2B6  45                 	db	69
  4244  00A2B7  45                 	db	69
  4245  00A2B8  44                 	db	68
  4246  00A2B9  00                 	db	0
  4247  00A2BA                     __end_of_minimum_speed_string:
  4248                           	opt stack 0
  4249  00A2BA                     _use_cw_limit_string:
  4250                           	opt stack 0
  4251  00A2BA  55                 	db	85
  4252  00A2BB  53                 	db	83
  4253  00A2BC  45                 	db	69
  4254  00A2BD  5F                 	db	95
  4255  00A2BE  43                 	db	67
  4256  00A2BF  57                 	db	87
  4257  00A2C0  5F                 	db	95
  4258  00A2C1  4C                 	db	76
  4259  00A2C2  49                 	db	73
  4260  00A2C3  4D                 	db	77
  4261  00A2C4  49                 	db	73
  4262  00A2C5  54                 	db	84
  4263  00A2C6  00                 	db	0
  4264  00A2C7                     __end_of_use_cw_limit_string:
  4265                           	opt stack 0
  4266  00A2C7                     _ccw_limit_string:
  4267                           	opt stack 0
  4268  00A2C7  43                 	db	67
  4269  00A2C8  43                 	db	67
  4270  00A2C9  57                 	db	87
  4271  00A2CA  5F                 	db	95
  4272  00A2CB  4C                 	db	76
  4273  00A2CC  49                 	db	73
  4274  00A2CD  4D                 	db	77
  4275  00A2CE  49                 	db	73
  4276  00A2CF  54                 	db	84
  4277  00A2D0  00                 	db	0
  4278  00A2D1                     __end_of_ccw_limit_string:
  4279                           	opt stack 0
  4280  00A2D1                     _cw_limit_string:
  4281                           	opt stack 0
  4282  00A2D1  43                 	db	67
  4283  00A2D2  57                 	db	87
  4284  00A2D3  5F                 	db	95
  4285  00A2D4  4C                 	db	76
  4286  00A2D5  49                 	db	73
  4287  00A2D6  4D                 	db	77
  4288  00A2D7  49                 	db	73
  4289  00A2D8  54                 	db	84
  4290  00A2D9  00                 	db	0
  4291  00A2DA                     __end_of_cw_limit_string:
  4292                           	opt stack 0
  4293  00A2DA                     _bit_pattern_ae:
  4294                           	opt stack 0
  4295  00A2DA  0A                 	db	10
  4296  00A2DB  00                 	db	0
  4297  00A2DC  0E                 	db	14
  4298  00A2DD  01                 	db	1
  4299  00A2DE  0F                 	db	15
  4300  00A2DF  11                 	db	17
  4301  00A2E0  0F                 	db	15
  4302  00A2E1  00                 	db	0
  4303  00A2E2                     __end_of_bit_pattern_ae:
  4304                           	opt stack 0
  4305  00A2E2                     _bit_pattern_degree:
  4306                           	opt stack 0
  4307  00A2E2  18                 	db	24
  4308  00A2E3  18                 	db	24
  4309  00A2E4  00                 	db	0
  4310  00A2E5  00                 	db	0
  4311  00A2E6  00                 	db	0
  4312  00A2E7  00                 	db	0
  4313  00A2E8  00                 	db	0
  4314  00A2E9  00                 	db	0
  4315  00A2EA                     __end_of_bit_pattern_degree:
  4316                           	opt stack 0
  4317  00A2EA                     _bit_pattern_verticalbar:
  4318                           	opt stack 0
  4319  00A2EA  04                 	db	4
  4320  00A2EB  04                 	db	4
  4321  00A2EC  04                 	db	4
  4322  00A2ED  04                 	db	4
  4323  00A2EE  04                 	db	4
  4324  00A2EF  04                 	db	4
  4325  00A2F0  04                 	db	4
  4326  00A2F1  04                 	db	4
  4327  00A2F2                     __end_of_bit_pattern_verticalbar:
  4328                           	opt stack 0
  4329  00A2F2                     _flash_command_pagesize_528:
  4330                           	opt stack 0
  4331  00A2F2  3D                 	db	61
  4332  00A2F3  2A                 	db	42
  4333  00A2F4  80                 	db	128
  4334  00A2F5  A7                 	db	167
  4335  00A2F6                     __end_of_flash_command_pagesize_528:
  4336                           	opt stack 0
  4337  00A2F6                     _flash_command_pagesize_512:
  4338                           	opt stack 0
  4339  00A2F6  3D                 	db	61
  4340  00A2F7  2A                 	db	42
  4341  00A2F8  80                 	db	128
  4342  00A2F9  A6                 	db	166
  4343  00A2FA                     __end_of_flash_command_pagesize_512:
  4344                           	opt stack 0
  4345  00A2FA                     _sd000:
  4346                           	opt stack 0
  4347  00A2FA  04                 	db	4
  4348  00A2FB  03                 	db	3
  4349  00A2FC  0409               	dw	1033
  4350  00A2FE                     __end_of_sd000:
  4351                           	opt stack 0
  4352  0000                     _RPINR22	set	3837
  4353  0000                     _RPOR23	set	3799
  4354  0000                     _RPOR21	set	3797
  4355  0000                     _RPINR21	set	3836
  4356  0000                     _RPOR4	set	3780
  4357  0000                     _PPSCONbits	set	3775
  4358  0000                     _CCPTMRS0bits	set	3922
  4359  0000                     _ANCON0bits	set	3912
  4360  0000                     _ANCON1bits	set	3913
  4361  0000                     _UEP0bits	set	3878
  4362  0000                     _UIEbits	set	3894
  4363  0000                     _UADDR	set	3896
  4364  0000                     _UIE	set	3894
  4365  0000                     _UEIE	set	3895
  4366  0000                     _UCFG	set	3897
  4367  0000                     _UEP1	set	3879
  4368  0000                     _UEP0	set	3878
  4369  0000                     _ADRESL	set	4035
  4370  0000                     _ADRESH	set	4036
  4371  0000                     _ADCON1bits	set	4033
  4372  0000                     _ADCON0bits	set	4034
  4373  0000                     _PORTA	set	3968
  4374  0000                     _PORTE	set	3972
  4375  0000                     _TMR2	set	4044
  4376  0000                     _PIE1bits	set	3997
  4377  0000                     _CCPR1L	set	4027
  4378  0000                     _PR2	set	4043
  4379  0000                     _T2CONbits	set	4042
  4380  0000                     _CCP1CONbits	set	4026
  4381  0000                     _RXADDRL	set	3945
  4382  0000                     _RXADDRH	set	3944
  4383  0000                     _DMABCL	set	3943
  4384  0000                     _DMABCH	set	3942
  4385  0000                     _TXADDRL	set	3947
  4386  0000                     _TXADDRH	set	3946
  4387  0000                     _DMACON2bits	set	3974
  4388  0000                     _DMACON1bits	set	3976
  4389  0000                     _SSP2CON1bits	set	3954
  4390  0000                     _SSP2STATbits	set	3955
  4391  0000                     _PORTDbits	set	3971
  4392  0000                     _PORTEbits	set	3972
  4393  0000                     _SSP1BUF	set	4041
  4394  0000                     _SSP1CON2bits	set	4037
  4395  0000                     _SSP1CON1bits	set	4038
  4396  0000                     _SSP1ADD	set	4040
  4397  0000                     _SSP1STATbits	set	4039
  4398  0000                     _PORTAbits	set	3968
  4399  0000                     _T0CONbits	set	4053
  4400  0000                     _TRISEbits	set	3990
  4401  0000                     _EECON2	set	4007
  4402  0000                     _LATBbits	set	3978
  4403  0000                     _LATAbits	set	3977
  4404  0000                     _TRISAbits	set	3986
  4405  0000                     _LATCbits	set	3979
  4406  0000                     _TRISCbits	set	3988
  4407  0000                     _TRISBbits	set	3987
  4408  0000                     _LATDbits	set	3980
  4409  0000                     _TRISDbits	set	3989
  4410  0000                     _TMR0L	set	4054
  4411  0000                     _TMR0H	set	4055
  4412  0000                     _PIR1bits	set	3998
  4413  0000                     _OSCCON	set	4051
  4414  0000                     _OSCTUNEbits	set	3995
  4415  0000                     _INTCONbits	set	4082
  4416  0000                     _IPR2bits	set	4002
  4417  0000                     _RCONbits	set	4048
  4418  0000                     _UCON	set	3941
  4419  0000                     _USTAT	set	3940
  4420  0000                     _PIR2bits	set	4001
  4421  0000                     _UIRbits	set	3938
  4422  0000                     _UCONbits	set	3941
  4423  0000                     _UIR	set	3938
  4424  0000                     _UEIR	set	3939
  4425  0000                     _PIE2bits	set	4000
  4426  00A2FE                     
  4427                           ; BSR set to: 1
  4428  00A2FE  68                 	db	104	;'h'
  4429  00A2FF  65                 	db	101	;'e'
  4430  00A300  6C                 	db	108	;'l'
  4431  00A301  6C                 	db	108	;'l'
  4432  00A302  6F                 	db	111	;'o'
  4433  00A303  20                 	db	32
  4434  00A304  77                 	db	119	;'w'
  4435  00A305  6F                 	db	111	;'o'
  4436  00A306  72                 	db	114	;'r'
  4437  00A307  6C                 	db	108	;'l'
  4438  00A308  64                 	db	100	;'d'
  4439  00A309  21                 	db	33
  4440  00A30A  00                 	db	0
  4441  00A30B                     
  4442                           ; BSR set to: 1
  4443  00A30B  53                 	db	83	;'S'
  4444  00A30C  74                 	db	116	;'t'
  4445  00A30D  65                 	db	101	;'e'
  4446  00A30E  70                 	db	112	;'p'
  4447  00A30F  70                 	db	112	;'p'
  4448  00A310  65                 	db	101	;'e'
  4449  00A311  72                 	db	114	;'r'
  4450  00A312  43                 	db	67	;'C'
  4451  00A313  74                 	db	116	;'t'
  4452  00A314  72                 	db	114	;'r'
  4453  00A315  6C                 	db	108	;'l'
  4454  00A316  00                 	db	0
  4455  00A317                     
  4456                           ; BSR set to: 1
  4457  00A317  46                 	db	70	;'F'
  4458  00A318  49                 	db	73	;'I'
  4459  00A319  4C                 	db	76	;'L'
  4460  00A31A  45                 	db	69	;'E'
  4461  00A31B  20                 	db	32
  4462  00A31C  20                 	db	32
  4463  00A31D  20                 	db	32
  4464  00A31E  20                 	db	32
  4465  00A31F  00                 	db	0
  4466  00A320                     STR_7:
  4467                           
  4468                           ; BSR set to: 1
  4469  00A320  4D                 	db	77	;'M'
  4470  00A321  53                 	db	83	;'S'
  4471  00A322  44                 	db	68	;'D'
  4472  00A323  4F                 	db	79	;'O'
  4473  00A324  53                 	db	83	;'S'
  4474  00A325  35                 	db	53	;'5'
  4475  00A326  2E                 	db	46
  4476  00A327  30                 	db	48	;'0'
  4477  00A328  00                 	db	0
  4478  00A329                     STR_1:
  4479                           
  4480                           ; BSR set to: 1
  4481  00A329  20                 	db	32
  4482  00A32A  20                 	db	32
  4483  00A32B  20                 	db	32
  4484  00A32C  20                 	db	32
  4485  00A32D  20                 	db	32
  4486  00A32E  20                 	db	32
  4487  00A32F  20                 	db	32
  4488  00A330  20                 	db	32
  4489  00A331  00                 	db	0
  4490  00A332                     STR_2:
  4491                           
  4492                           ; BSR set to: 1
  4493  00A332  43                 	db	67	;'C'
  4494  00A333  61                 	db	97	;'a'
  4495  00A334  6E                 	db	110	;'n'
  4496  00A335  63                 	db	99	;'c'
  4497  00A336  65                 	db	101	;'e'
  4498  00A337  6C                 	db	108	;'l'
  4499  00A338  00                 	db	0
  4500  00A339                     STR_6:
  4501                           
  4502                           ; BSR set to: 1
  4503  00A339  53                 	db	83	;'S'
  4504  00A33A  74                 	db	116	;'t'
  4505  00A33B  6F                 	db	111	;'o'
  4506  00A33C  70                 	db	112	;'p'
  4507  00A33D  20                 	db	32
  4508  00A33E  00                 	db	0
  4509  00A33F                     
  4510                           ; BSR set to: 1
  4511  00A33F  54                 	db	84	;'T'
  4512  00A340  58                 	db	88	;'X'
  4513  00A341  54                 	db	84	;'T'
  4514  00A342  00                 	db	0
  4515  0000                     
  4516                           ; #config settings
  4517  00A343  00                 	db	0	; dummy byte at the end
  4518  0000                     
  4519                           	psect	cinit
  4520  013D58                     __pcinit:
  4521                           	opt stack 0
  4522  013D58                     start_initialization:
  4523                           	opt stack 0
  4524  013D58                     __initialization:
  4525                           	opt stack 0
  4526                           
  4527                           ; Initialize objects allocated to BANK4 (80 bytes)
  4528                           ; load TBLPTR registers with __pidataBANK4
  4529  013D58  0E3A               	movlw	low __pidataBANK4
  4530  013D5A  6EF6               	movwf	tblptrl,c
  4531  013D5C  0E52               	movlw	high __pidataBANK4
  4532  013D5E  6EF7               	movwf	tblptrh,c
  4533  013D60  0E01               	movlw	low (__pidataBANK4 shr (0+16))
  4534  013D62  6EF8               	movwf	tblptru,c
  4535  013D64  EE04  F000         	lfsr	0,__pdataBANK4
  4536  013D68  EE10 F050          	lfsr	1,80
  4537  013D6C                     copy_data0:
  4538  013D6C  0009               	tblrd		*+
  4539  013D6E  CFF5 FFEE          	movff	tablat,postinc0
  4540  013D72  50E5               	movf	postdec1,w,c
  4541  013D74  50E1               	movf	fsr1l,w,c
  4542  013D76  E1FA               	bnz	copy_data0
  4543                           
  4544                           ; Initialize objects allocated to BANK2 (77 bytes)
  4545                           ; load TBLPTR registers with __pidataBANK2
  4546  013D78  0E1A               	movlw	low __pidataBANK2
  4547  013D7A  6EF6               	movwf	tblptrl,c
  4548  013D7C  0E54               	movlw	high __pidataBANK2
  4549  013D7E  6EF7               	movwf	tblptrh,c
  4550  013D80  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  4551  013D82  6EF8               	movwf	tblptru,c
  4552  013D84  EE02  F09D         	lfsr	0,__pdataBANK2
  4553  013D88  EE10 F04D          	lfsr	1,77
  4554  013D8C                     copy_data1:
  4555  013D8C  0009               	tblrd		*+
  4556  013D8E  CFF5 FFEE          	movff	tablat,postinc0
  4557  013D92  50E5               	movf	postdec1,w,c
  4558  013D94  50E1               	movf	fsr1l,w,c
  4559  013D96  E1FA               	bnz	copy_data1
  4560                           
  4561                           ; Clear objects allocated to BIGRAMll (1024 bytes)
  4562  013D98  EE08  F000         	lfsr	0,__pbssBIGRAMll
  4563  013D9C  EE14 F000          	lfsr	1,1024
  4564  013DA0                     clear_0:
  4565  013DA0  6AEE               	clrf	postinc0,c
  4566  013DA2  50E5               	movf	postdec1,w,c
  4567  013DA4  50E1               	movf	fsr1l,w,c
  4568  013DA6  E1FC               	bnz	clear_0
  4569  013DA8  50E2               	movf	fsr1h,w,c
  4570  013DAA  E1FA               	bnz	clear_0
  4571                           
  4572                           ; Clear objects allocated to BANK3 (192 bytes)
  4573  013DAC  EE03  F000         	lfsr	0,__pbssBANK3
  4574  013DB0  0EC0               	movlw	192
  4575  013DB2                     clear_1:
  4576  013DB2  6AEE               	clrf	postinc0,c
  4577  013DB4  06E8               	decf	wreg,f,c
  4578  013DB6  E1FD               	bnz	clear_1
  4579                           
  4580                           ; Clear objects allocated to BANK2 (157 bytes)
  4581  013DB8  EE02  F000         	lfsr	0,__pbssBANK2
  4582  013DBC  0E9D               	movlw	157
  4583  013DBE                     clear_2:
  4584  013DBE  6AEE               	clrf	postinc0,c
  4585  013DC0  06E8               	decf	wreg,f,c
  4586  013DC2  E1FD               	bnz	clear_2
  4587                           
  4588                           ; Clear objects allocated to BANK1 (196 bytes)
  4589  013DC4  EE01  F000         	lfsr	0,__pbssBANK1
  4590  013DC8  0EC4               	movlw	196
  4591  013DCA                     clear_3:
  4592  013DCA  6AEE               	clrf	postinc0,c
  4593  013DCC  06E8               	decf	wreg,f,c
  4594  013DCE  E1FD               	bnz	clear_3
  4595                           
  4596                           ; Clear objects allocated to BANK0 (1 bytes)
  4597  013DD0  0100               	movlb	0
  4598  013DD2  6BFF               	clrf	__pbssBANK0& (0+255),b
  4599                           
  4600                           ; Clear objects allocated to COMRAM (8 bytes)
  4601  013DD4  EE00  F057         	lfsr	0,__pbssCOMRAM
  4602  013DD8  0E08               	movlw	8
  4603  013DDA                     clear_4:
  4604  013DDA  6AEE               	clrf	postinc0,c
  4605  013DDC  06E8               	decf	wreg,f,c
  4606  013DDE  E1FD               	bnz	clear_4
  4607  013DE0                     end_of_initialization:
  4608                           	opt stack 0
  4609  013DE0                     __end_of__initialization:
  4610                           	opt stack 0
  4611  013DE0  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4612  013DE2  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4613  013DE4  0100               	movlb	0
  4614  013DE6  EF83  F09D         	goto	_main	;jump to C main() function
  4615                           tblptru	equ	0xFF8
  4616                           tblptrh	equ	0xFF7
  4617                           tblptrl	equ	0xFF6
  4618                           tablat	equ	0xFF5
  4619                           postinc0	equ	0xFEE
  4620                           wreg	equ	0xFE8
  4621                           postdec1	equ	0xFE5
  4622                           fsr1h	equ	0xFE2
  4623                           fsr1l	equ	0xFE1
  4624                           
  4625                           	psect	bssCOMRAM
  4626  000057                     __pbssCOMRAM:
  4627                           	opt stack 0
  4628  000057                     _motor_current_speed:
  4629                           	opt stack 0
  4630  000057                     	ds	2
  4631  000059                     _pBDTEntryEP0OutNext:
  4632                           	opt stack 0
  4633  000059                     	ds	2
  4634  00005B                     _pBDTEntryEP0OutCurrent:
  4635                           	opt stack 0
  4636  00005B                     	ds	2
  4637  00005D                     _USBDeviceState:
  4638                           	opt stack 0
  4639  00005D                     	ds	1
  4640  00005E                     _USTATcopy:
  4641                           	opt stack 0
  4642  00005E                     	ds	1
  4643                           tblptru	equ	0xFF8
  4644                           tblptrh	equ	0xFF7
  4645                           tblptrl	equ	0xFF6
  4646                           tablat	equ	0xFF5
  4647                           postinc0	equ	0xFEE
  4648                           wreg	equ	0xFE8
  4649                           postdec1	equ	0xFE5
  4650                           fsr1h	equ	0xFE2
  4651                           fsr1l	equ	0xFE1
  4652                           
  4653                           	psect	bssBANK0
  4654  0000FF                     __pbssBANK0:
  4655                           	opt stack 0
  4656  0000FF                     _controlTransferState:
  4657                           	opt stack 0
  4658  0000FF                     	ds	1
  4659                           tblptru	equ	0xFF8
  4660                           tblptrh	equ	0xFF7
  4661                           tblptrl	equ	0xFF6
  4662                           tablat	equ	0xFF5
  4663                           postinc0	equ	0xFEE
  4664                           wreg	equ	0xFE8
  4665                           postdec1	equ	0xFE5
  4666                           fsr1h	equ	0xFE2
  4667                           fsr1l	equ	0xFE1
  4668                           
  4669                           	psect	bssBANK1
  4670  000100                     __pbssBANK1:
  4671                           	opt stack 0
  4672  000100                     _outPipes:
  4673                           	opt stack 0
  4674  000100                     	ds	9
  4675  000109                     _inPipes:
  4676                           	opt stack 0
  4677  000109                     	ds	6
  4678  00010F                     _pBDTEntryIn:
  4679                           	opt stack 0
  4680  00010F                     	ds	6
  4681  000115                     _pBDTEntryOut:
  4682                           	opt stack 0
  4683  000115                     	ds	6
  4684  00011B                     _motor_final_stepcount:
  4685                           	opt stack 0
  4686  00011B                     	ds	4
  4687  00011F                     _motor_current_stepcount:
  4688                           	opt stack 0
  4689  00011F                     	ds	4
  4690  000123                     _LBA:
  4691                           	opt stack 0
  4692  000123                     	ds	4
  4693  000127                     _USB1msTickCount:
  4694                           	opt stack 0
  4695  000127                     	ds	4
  4696  00012B                     _config_external:
  4697                           	opt stack 0
  4698  00012B                     	ds	3
  4699  00012E                     _config_internal:
  4700                           	opt stack 0
  4701  00012E                     	ds	3
  4702  000131                     _ep_data_out:
  4703                           	opt stack 0
  4704  000131                     	ds	3
  4705  000134                     _ep_data_in:
  4706                           	opt stack 0
  4707  000134                     	ds	3
  4708  000137                     _motor_maximum_speed:
  4709                           	opt stack 0
  4710  000137                     	ds	2
  4711  000139                     _USBInHandle:
  4712                           	opt stack 0
  4713  000139                     	ds	2
  4714  00013B                     _USBOutHandle:
  4715                           	opt stack 0
  4716  00013B                     	ds	2
  4717  00013D                     _TransferLength:
  4718                           	opt stack 0
  4719  00013D                     	ds	2
  4720  00013F                     _USBMSDInHandle:
  4721                           	opt stack 0
  4722  00013F                     	ds	2
  4723  000141                     _USBMSDOutHandle:
  4724                           	opt stack 0
  4725  000141                     	ds	2
  4726  000143                     _ptrNextData:
  4727                           	opt stack 0
  4728  000143                     	ds	2
  4729  000145                     _pDst:
  4730                           	opt stack 0
  4731  000145                     	ds	2
  4732  000147                     _enc2:
  4733                           	opt stack 0
  4734  000147                     	ds	1
  4735  000148                     _enc1:
  4736                           	opt stack 0
  4737  000148                     	ds	1
  4738  000149                     _motor_mode:
  4739                           	opt stack 0
  4740  000149                     	ds	1
  4741  00014A                     _motor_direction:
  4742                           	opt stack 0
  4743  00014A                     	ds	1
  4744  00014B                     _motor_move_type:
  4745                           	opt stack 0
  4746  00014B                     	ds	1
  4747  00014C                     _motor_cue_write_index:
  4748                           	opt stack 0
  4749  00014C                     	ds	1
  4750  00014D                     _motor_cue_read_index:
  4751                           	opt stack 0
  4752  00014D                     	ds	1
  4753  00014E                     _active_configuration:
  4754                           	opt stack 0
  4755  00014E                     	ds	1
  4756  00014F                     _power_state:
  4757                           	opt stack 0
  4758  00014F                     	ds	1
  4759  000150                     _MSDCBWValid:
  4760                           	opt stack 0
  4761  000150                     	ds	1
  4762  000151                     _MSDHostNoData:
  4763                           	opt stack 0
  4764  000151                     	ds	1
  4765  000152                     _SoftDetach:
  4766                           	opt stack 0
  4767  000152                     	ds	1
  4768  000153                     _gblCBWLength:
  4769                           	opt stack 0
  4770  000153                     	ds	1
  4771  000154                     _MSDRetryAttempt:
  4772                           	opt stack 0
  4773  000154                     	ds	1
  4774  000155                     _MSDWriteState:
  4775                           	opt stack 0
  4776  000155                     	ds	1
  4777  000156                     _MSDReadState:
  4778                           	opt stack 0
  4779  000156                     	ds	1
  4780  000157                     _MSDCommandState:
  4781                           	opt stack 0
  4782  000157                     	ds	1
  4783  000158                     _MSD_State:
  4784                           	opt stack 0
  4785  000158                     	ds	1
  4786  000159                     _USBTicksSinceSuspendEnd:
  4787                           	opt stack 0
  4788  000159                     	ds	1
  4789  00015A                     _USBDeferOUTDataStagePackets:
  4790                           	opt stack 0
  4791  00015A                     	ds	1
  4792  00015B                     _USBDeferINDataStagePackets:
  4793                           	opt stack 0
  4794  00015B                     	ds	1
  4795  00015C                     _USBStatusStageEnabledFlag2:
  4796                           	opt stack 0
  4797  00015C                     	ds	1
  4798  00015D                     _USBStatusStageEnabledFlag1:
  4799                           	opt stack 0
  4800  00015D                     	ds	1
  4801  00015E                     _USBDeferStatusStagePacket:
  4802                           	opt stack 0
  4803  00015E                     	ds	1
  4804  00015F                     _USBStatusStageTimeoutCounter:
  4805                           	opt stack 0
  4806  00015F                     	ds	1
  4807  000160                     _BothEP0OutUOWNsSet:
  4808                           	opt stack 0
  4809  000160                     	ds	1
  4810  000161                     _endpoint_number:
  4811                           	opt stack 0
  4812  000161                     	ds	1
  4813  000162                     _USBBusIsSuspended:
  4814                           	opt stack 0
  4815  000162                     	ds	1
  4816  000163                     _RemoteWakeup:
  4817                           	opt stack 0
  4818  000163                     	ds	1
  4819  000164                     _shortPacketStatus:
  4820                           	opt stack 0
  4821  000164                     	ds	1
  4822  000165                     _os:
  4823                           	opt stack 0
  4824  000165                     	ds	49
  4825  000196                     _config:
  4826                           	opt stack 0
  4827  000196                     	ds	41
  4828  0001BF                     _USBAlternateInterface:
  4829                           	opt stack 0
  4830  0001BF                     	ds	2
  4831  0001C1                     _active_protocol:
  4832                           	opt stack 0
  4833  0001C1                     	ds	1
  4834  0001C2                     _idle_rate:
  4835                           	opt stack 0
  4836  0001C2                     	ds	1
  4837  0001C3                     _USBActiveConfiguration:
  4838                           	opt stack 0
  4839  0001C3                     	ds	1
  4840                           tblptru	equ	0xFF8
  4841                           tblptrh	equ	0xFF7
  4842                           tblptrl	equ	0xFF6
  4843                           tablat	equ	0xFF5
  4844                           postinc0	equ	0xFEE
  4845                           wreg	equ	0xFE8
  4846                           postdec1	equ	0xFE5
  4847                           fsr1h	equ	0xFE2
  4848                           fsr1l	equ	0xFE1
  4849                           
  4850                           	psect	bssBANK2
  4851  000200                     __pbssBANK2:
  4852                           	opt stack 0
  4853  000200                     _gblCBW:
  4854                           	opt stack 0
  4855  000200                     	ds	31
  4856  00021F                     _gblSenseData:
  4857                           	opt stack 0
  4858  00021F                     	ds	18
  4859  000231                     _params:
  4860                           	opt stack 0
  4861  000231                     	ds	7
  4862  000238                     _motor_next_speed_check:
  4863                           	opt stack 0
  4864  000238                     	ds	4
  4865  00023C                     _gblBLKLen:
  4866                           	opt stack 0
  4867  00023C                     	ds	4
  4868  000240                     _gblNumBLKS:
  4869                           	opt stack 0
  4870  000240                     	ds	4
  4871  000244                     _gblMediaPresent:
  4872                           	opt stack 0
  4873  000244                     	ds	2
  4874  000246                     _MSBBufferIndex:
  4875                           	opt stack 0
  4876  000246                     	ds	2
  4877  000248                     _display_content:
  4878                           	opt stack 0
  4879  000248                     	ds	80
  4880  000298                     _mediaInformation:
  4881                           	opt stack 0
  4882  000298                     	ds	5
  4883                           tblptru	equ	0xFF8
  4884                           tblptrh	equ	0xFF7
  4885                           tblptrl	equ	0xFF6
  4886                           tablat	equ	0xFF5
  4887                           postinc0	equ	0xFEE
  4888                           wreg	equ	0xFE8
  4889                           postdec1	equ	0xFE5
  4890                           fsr1h	equ	0xFE2
  4891                           fsr1l	equ	0xFE1
  4892                           
  4893                           	psect	dataBANK2
  4894  00029D                     __pdataBANK2:
  4895                           	opt stack 0
  4896  00029D                     _LUN:
  4897                           	opt stack 0
  4898  00029D                     	ds	29
  4899  0002BA                     i2c_display_init@F7093:
  4900                           	opt stack 0
  4901  0002BA                     	ds	9
  4902  0002C3                     __i2c_display_send_init_sequence@F7090:
  4903                           	opt stack 0
  4904  0002C3                     	ds	9
  4905  0002CC                     	ds	8
  4906  0002D4                     _configFile_used_name:
  4907                           	opt stack 0
  4908  0002D4                     	ds	8
  4909  0002DC                     _configFile_name:
  4910                           	opt stack 0
  4911  0002DC                     	ds	8
  4912  0002E4                     _configFile_used_extention:
  4913                           	opt stack 0
  4914  0002E4                     	ds	3
  4915  0002E7                     _configFile_extention:
  4916                           	opt stack 0
  4917  0002E7                     	ds	3
  4918                           tblptru	equ	0xFF8
  4919                           tblptrh	equ	0xFF7
  4920                           tblptrl	equ	0xFF6
  4921                           tablat	equ	0xFF5
  4922                           postinc0	equ	0xFEE
  4923                           wreg	equ	0xFE8
  4924                           postdec1	equ	0xFE5
  4925                           fsr1h	equ	0xFE2
  4926                           fsr1l	equ	0xFE1
  4927                           
  4928                           	psect	bssBANK3
  4929  000300                     __pbssBANK3:
  4930                           	opt stack 0
  4931  000300                     _motor_command_cue:
  4932                           	opt stack 0
  4933  000300                     	ds	64
  4934  000340                     _ToSendDataBuffer:
  4935                           	opt stack 0
  4936  000340                     	ds	64
  4937  000380                     _ReceivedDataBuffer:
  4938                           	opt stack 0
  4939  000380                     	ds	64
  4940                           tblptru	equ	0xFF8
  4941                           tblptrh	equ	0xFF7
  4942                           tblptrl	equ	0xFF6
  4943                           tablat	equ	0xFF5
  4944                           postinc0	equ	0xFEE
  4945                           wreg	equ	0xFE8
  4946                           postdec1	equ	0xFE5
  4947                           fsr1h	equ	0xFE2
  4948                           fsr1l	equ	0xFE1
  4949                           
  4950                           	psect	dataBANK4
  4951  000400                     __pdataBANK4:
  4952                           	opt stack 0
  4953  000400                     _dc_startup:
  4954                           	opt stack 0
  4955  000400                     	ds	80
  4956                           tblptru	equ	0xFF8
  4957                           tblptrh	equ	0xFF7
  4958                           tblptrl	equ	0xFF6
  4959                           tablat	equ	0xFF5
  4960                           postinc0	equ	0xFEE
  4961                           wreg	equ	0xFE8
  4962                           postdec1	equ	0xFE5
  4963                           fsr1h	equ	0xFE2
  4964                           fsr1l	equ	0xFE1
  4965                           
  4966                           	psect	bssBIGRAMll
  4967  000800                     __pbssBIGRAMll:
  4968                           	opt stack 0
  4969  000800                     _ConfigFile_buffer:
  4970                           	opt stack 0
  4971  000800                     	ds	512
  4972  000A00                     _buffer:
  4973                           	opt stack 0
  4974  000A00                     	ds	512
  4975                           tblptru	equ	0xFF8
  4976                           tblptrh	equ	0xFF7
  4977                           tblptrl	equ	0xFF6
  4978                           tablat	equ	0xFF5
  4979                           postinc0	equ	0xFEE
  4980                           wreg	equ	0xFE8
  4981                           postdec1	equ	0xFE5
  4982                           fsr1h	equ	0xFE2
  4983                           fsr1l	equ	0xFE1
  4984                           
  4985                           	psect	cstackBANK1
  4986  0001C4                     __pcstackBANK1:
  4987                           	opt stack 0
  4988  0001C4                     ??_configFile_read:
  4989                           
  4990                           ; 1 bytes @ 0x0
  4991  0001C4                     	ds	8
  4992  0001CC                     configFile_read@item_string:
  4993                           	opt stack 0
  4994                           
  4995                           ; 31 bytes @ 0x8
  4996  0001CC                     	ds	31
  4997  0001EB                     configFile_read@value_string:
  4998                           	opt stack 0
  4999                           
  5000                           ; 12 bytes @ 0x27
  5001  0001EB                     	ds	12
  5002  0001F7                     configFile_read@file_size:
  5003                           	opt stack 0
  5004                           
  5005                           ; 4 bytes @ 0x33
  5006  0001F7                     	ds	4
  5007  0001FB                     configFile_read@file_number:
  5008                           	opt stack 0
  5009                           
  5010                           ; 1 bytes @ 0x37
  5011  0001FB                     	ds	1
  5012  0001FC                     configFile_read@position:
  5013                           	opt stack 0
  5014                           
  5015                           ; 4 bytes @ 0x38
  5016  0001FC                     	ds	4
  5017                           tblptru	equ	0xFF8
  5018                           tblptrh	equ	0xFF7
  5019                           tblptrl	equ	0xFF6
  5020                           tablat	equ	0xFF5
  5021                           postinc0	equ	0xFEE
  5022                           wreg	equ	0xFE8
  5023                           postdec1	equ	0xFE5
  5024                           fsr1h	equ	0xFE2
  5025                           fsr1l	equ	0xFE1
  5026                           
  5027                           	psect	cstackBANK0
  5028  000060                     __pcstackBANK0:
  5029                           	opt stack 0
  5030  000060                     ??_motor_stop:
  5031  000060                     ??_isdigit:
  5032  000060                     ??__i2c_wait_idle:
  5033  000060                     ??__display_clear:
  5034  000060                     ??__divide_jump_size_increment:
  5035  000060                     ??__divide_jump_size_decrement:
  5036  000060                     ?_USBTransferOnePacket:
  5037                           	opt stack 0
  5038  000060                     ?_ExternalFlash_MediaInitialize:
  5039                           	opt stack 0
  5040  000060                     ?_ExternalFlash_SectorSizeRead:
  5041                           	opt stack 0
  5042  000060                     ?_strlen:
  5043                           	opt stack 0
  5044  000060                     ?_strncmp:
  5045                           	opt stack 0
  5046  000060                     ?__sector_from_file_number:
  5047                           	opt stack 0
  5048  000060                     ?__offset_from_file_number:
  5049                           	opt stack 0
  5050  000060                     ?__data_sector_from_cluster:
  5051                           	opt stack 0
  5052  000060                     ?__fat_sector_from_cluster:
  5053                           	opt stack 0
  5054  000060                     ?__fat_offset_from_cluster:
  5055                           	opt stack 0
  5056  000060                     ?__cluster_from_sector_and_offset:
  5057                           	opt stack 0
  5058  000060                     ?__get_available_offset_from_buffer:
  5059                           	opt stack 0
  5060  000060                     ?__read_value_from_offset:
  5061                           	opt stack 0
  5062  000060                     ?__get_time:
  5063                           	opt stack 0
  5064  000060                     ?__get_date:
  5065                           	opt stack 0
  5066  000060                     ?__encoder_next_setup_stepsize:
  5067                           	opt stack 0
  5068  000060                     ?__encoder_next_arc_step_size:
  5069                           	opt stack 0
  5070  000060                     ?___wmul:
  5071                           	opt stack 0
  5072  000060                     ?___lwdiv:
  5073                           	opt stack 0
  5074  000060                     ?___lwmod:
  5075                           	opt stack 0
  5076  000060                     ?_ExternalFlash_CapacityRead:
  5077                           	opt stack 0
  5078  000060                     ?__motor_calculate_distance:
  5079                           	opt stack 0
  5080  000060                     ?__display_position_in_degrees:
  5081                           	opt stack 0
  5082  000060                     ?___lmul:
  5083                           	opt stack 0
  5084  000060                     ?___lldiv:
  5085                           	opt stack 0
  5086  000060                     ?___aldiv:
  5087                           	opt stack 0
  5088  000060                     ?___almod:
  5089                           	opt stack 0
  5090  000060                     ?___fltol:
  5091                           	opt stack 0
  5092  000060                     ?___llmod:
  5093                           	opt stack 0
  5094  000060                     USBTransferOnePacket@dir:
  5095                           	opt stack 0
  5096  000060                     USBStallEndpoint@dir:
  5097                           	opt stack 0
  5098  000060                     __i2c_send@dat:
  5099                           	opt stack 0
  5100  000060                     display_get_character@position:
  5101                           	opt stack 0
  5102  000060                     __encoder_next_divide_step_size@old_stepsize:
  5103                           	opt stack 0
  5104  000060                     toupper@c:
  5105                           	opt stack 0
  5106  000060                     MSDComputeDeviceInAndResidue@DiExpected:
  5107                           	opt stack 0
  5108  000060                     SYSTEM_Initialize@pll_startup_counter:
  5109                           	opt stack 0
  5110  000060                     ExternalFlash_MediaInitialize@config:
  5111                           	opt stack 0
  5112  000060                     ExternalFlash_SectorSizeRead@config:
  5113                           	opt stack 0
  5114  000060                     ExternalFlash_CapacityRead@config:
  5115                           	opt stack 0
  5116  000060                     ExternalFlash_MediaDetect@config:
  5117                           	opt stack 0
  5118  000060                     ExternalFlash_WriteProtectStateGet@config:
  5119                           	opt stack 0
  5120  000060                     __data_sector_from_cluster@fat_cluster:
  5121                           	opt stack 0
  5122  000060                     __fat_sector_from_cluster@cluster:
  5123                           	opt stack 0
  5124  000060                     __fat_offset_from_cluster@cluster:
  5125                           	opt stack 0
  5126  000060                     __cluster_from_sector_and_offset@sector:
  5127                           	opt stack 0
  5128  000060                     __get_available_offset_from_buffer@minimum_offset:
  5129                           	opt stack 0
  5130  000060                     __read_value_from_offset@offset:
  5131                           	opt stack 0
  5132  000060                     __write_value_to_offset@offset:
  5133                           	opt stack 0
  5134  000060                     __get_mbr@idx:
  5135                           	opt stack 0
  5136  000060                     __get_fbr@idx:
  5137                           	opt stack 0
  5138  000060                     spi_tx@data:
  5139                           	opt stack 0
  5140  000060                     spi_tx_tx@command:
  5141                           	opt stack 0
  5142  000060                     spi_tx_rx@command:
  5143                           	opt stack 0
  5144  000060                     __fill_buffer_get_mode_details@outBuffer:
  5145                           	opt stack 0
  5146  000060                     motor_change_speed@new_speed:
  5147                           	opt stack 0
  5148  000060                     __encoder_next_setup_stepsize@old_stepsize:
  5149                           	opt stack 0
  5150  000060                     __encoder_next_arc_step_size@old_stepsize:
  5151                           	opt stack 0
  5152  000060                     __get_item@item_string:
  5153                           	opt stack 0
  5154  000060                     ___wmul@multiplier:
  5155                           	opt stack 0
  5156  000060                     ___lwdiv@dividend:
  5157                           	opt stack 0
  5158  000060                     ___lwmod@dividend:
  5159                           	opt stack 0
  5160  000060                     memcpy@d1:
  5161                           	opt stack 0
  5162  000060                     memset@p1:
  5163                           	opt stack 0
  5164  000060                     strlen@s:
  5165                           	opt stack 0
  5166  000060                     strncmp@s1:
  5167                           	opt stack 0
  5168  000060                     __spi_init@details:
  5169                           	opt stack 0
  5170  000060                     __motor_run@distance_in_steps:
  5171                           	opt stack 0
  5172  000060                     __motor_schedule_command@distance_in_steps:
  5173                           	opt stack 0
  5174  000060                     __motor_calculate_distance@target_position:
  5175                           	opt stack 0
  5176  000060                     ___lmul@multiplier:
  5177                           	opt stack 0
  5178  000060                     ___lldiv@dividend:
  5179                           	opt stack 0
  5180  000060                     ___aldiv@dividend:
  5181                           	opt stack 0
  5182  000060                     ___almod@dividend:
  5183                           	opt stack 0
  5184  000060                     ___fltol@f1:
  5185                           	opt stack 0
  5186  000060                     ___llmod@dividend:
  5187                           	opt stack 0
  5188                           
  5189                           ; 4 bytes @ 0x0
  5190  000060                     	ds	1
  5191  000061                     ??_USBStallEndpoint:
  5192  000061                     ??_display_get_character:
  5193  000061                     ?_stricmp:
  5194                           	opt stack 0
  5195  000061                     _isdigit$8442:
  5196                           	opt stack 0
  5197  000061                     USBTransferOnePacket@data:
  5198                           	opt stack 0
  5199  000061                     stricmp@s1:
  5200                           	opt stack 0
  5201                           
  5202                           ; 2 bytes @ 0x1
  5203  000061                     	ds	1
  5204  000062                     ??_MSDComputeDeviceInAndResidue:
  5205  000062                     ??_strlen:
  5206  000062                     ??__fill_buffer_get_mode_details:
  5207  000062                     ??__get_mbr:
  5208  000062                     ??__get_fbr:
  5209  000062                     ??__encoder_next_setup_stepsize:
  5210  000062                     ??__encoder_next_arc_step_size:
  5211  000062                     __display_clear@row:
  5212                           	opt stack 0
  5213  000062                     __sector_from_file_number@file_number:
  5214                           	opt stack 0
  5215  000062                     __offset_from_file_number@file_number:
  5216                           	opt stack 0
  5217  000062                     isdigit@c:
  5218                           	opt stack 0
  5219  000062                     SYSTEM_Initialize@pll_startup_counter_3143:
  5220                           	opt stack 0
  5221  000062                     __cluster_from_sector_and_offset@offset:
  5222                           	opt stack 0
  5223  000062                     __get_available_offset_from_buffer@buffer:
  5224                           	opt stack 0
  5225  000062                     __read_value_from_offset@buffer:
  5226                           	opt stack 0
  5227  000062                     __write_value_to_offset@buffer:
  5228                           	opt stack 0
  5229  000062                     spi_tx@length:
  5230                           	opt stack 0
  5231  000062                     spi_tx_tx@command_length:
  5232                           	opt stack 0
  5233  000062                     spi_tx_rx@command_length:
  5234                           	opt stack 0
  5235  000062                     motor_set_manual_speed@new_speed:
  5236                           	opt stack 0
  5237  000062                     __get_item@value_string:
  5238                           	opt stack 0
  5239  000062                     ___wmul@multiplicand:
  5240                           	opt stack 0
  5241  000062                     ___lwdiv@divisor:
  5242                           	opt stack 0
  5243  000062                     ___lwmod@divisor:
  5244                           	opt stack 0
  5245  000062                     memcpy@s1:
  5246                           	opt stack 0
  5247  000062                     memset@c:
  5248                           	opt stack 0
  5249  000062                     strncmp@s2:
  5250                           	opt stack 0
  5251                           
  5252                           ; 2 bytes @ 0x2
  5253  000062                     	ds	1
  5254  000063                     USBTransferOnePacket@len:
  5255                           	opt stack 0
  5256  000063                     __display_clear@col:
  5257                           	opt stack 0
  5258  000063                     display_get_character@line:
  5259                           	opt stack 0
  5260  000063                     spi_init@configuration:
  5261                           	opt stack 0
  5262  000063                     __sector_from_file_number@sector:
  5263                           	opt stack 0
  5264  000063                     __offset_from_file_number@offset:
  5265                           	opt stack 0
  5266  000063                     stricmp@s2:
  5267                           	opt stack 0
  5268                           
  5269                           ; 2 bytes @ 0x3
  5270  000063                     	ds	1
  5271  000064                     ??_USBTransferOnePacket:
  5272  000064                     ??_spi_tx:
  5273  000064                     ??__motor_calculate_distance:
  5274  000064                     ??__get_available_offset_from_buffer:
  5275  000064                     ??__read_value_from_offset:
  5276  000064                     ??___fltol:
  5277  000064                     SYSTEM_Initialize@state:
  5278                           	opt stack 0
  5279  000064                     ___lwmod@counter:
  5280                           	opt stack 0
  5281  000064                     __write_value_to_offset@value:
  5282                           	opt stack 0
  5283  000064                     spi_tx_tx@data:
  5284                           	opt stack 0
  5285  000064                     spi_tx_rx@data:
  5286                           	opt stack 0
  5287  000064                     __fill_buffer_get_display@outBuffer:
  5288                           	opt stack 0
  5289  000064                     __motor_run@speed:
  5290                           	opt stack 0
  5291  000064                     __motor_schedule_command@speed:
  5292                           	opt stack 0
  5293  000064                     motor_set_manual_speed@old_speed:
  5294                           	opt stack 0
  5295  000064                     __get_item@buffer:
  5296                           	opt stack 0
  5297  000064                     ___wmul@product:
  5298                           	opt stack 0
  5299  000064                     ___lwdiv@quotient:
  5300                           	opt stack 0
  5301  000064                     memcpy@n:
  5302                           	opt stack 0
  5303  000064                     memset@n:
  5304                           	opt stack 0
  5305  000064                     strlen@cp:
  5306                           	opt stack 0
  5307  000064                     strncmp@len:
  5308                           	opt stack 0
  5309  000064                     __display_position_in_degrees@position:
  5310                           	opt stack 0
  5311  000064                     ___lmul@multiplicand:
  5312                           	opt stack 0
  5313  000064                     ___lldiv@divisor:
  5314                           	opt stack 0
  5315  000064                     ___aldiv@divisor:
  5316                           	opt stack 0
  5317  000064                     ___almod@divisor:
  5318                           	opt stack 0
  5319  000064                     ___llmod@divisor:
  5320                           	opt stack 0
  5321                           
  5322                           ; 4 bytes @ 0x4
  5323  000064                     	ds	1
  5324  000065                     ??_stricmp:
  5325  000065                     USBStallEndpoint@ep:
  5326                           	opt stack 0
  5327  000065                     __i2c_eeprom_busy@busy:
  5328                           	opt stack 0
  5329  000065                     __i2c_write@data:
  5330                           	opt stack 0
  5331  000065                     __i2c_read@data:
  5332                           	opt stack 0
  5333  000065                     i2c_display_write_fixed@data:
  5334                           	opt stack 0
  5335                           
  5336                           ; 2 bytes @ 0x5
  5337  000065                     	ds	1
  5338  000066                     ??_strncmp:
  5339  000066                     ??__write_value_to_offset:
  5340  000066                     ??__get_item:
  5341  000066                     ?_atoi:
  5342                           	opt stack 0
  5343  000066                     __fill_buffer_get_display@secondHalf:
  5344                           	opt stack 0
  5345  000066                     __motor_run@type:
  5346                           	opt stack 0
  5347  000066                     __motor_schedule_command@type:
  5348                           	opt stack 0
  5349  000066                     ___lwdiv@counter:
  5350                           	opt stack 0
  5351  000066                     stricmp@r:
  5352                           	opt stack 0
  5353  000066                     USBStallEndpoint@p:
  5354                           	opt stack 0
  5355  000066                     __get_available_offset_from_buffer@offset:
  5356                           	opt stack 0
  5357  000066                     spi_tx_tx@data_length:
  5358                           	opt stack 0
  5359  000066                     spi_tx_rx@data_length:
  5360                           	opt stack 0
  5361  000066                     __parse_set_manual_speed@data:
  5362                           	opt stack 0
  5363  000066                     atoi@s:
  5364                           	opt stack 0
  5365  000066                     memcpy@d:
  5366                           	opt stack 0
  5367  000066                     memset@p:
  5368                           	opt stack 0
  5369                           
  5370                           ; 2 bytes @ 0x6
  5371  000066                     	ds	1
  5372  000067                     ??__fill_buffer_get_display:
  5373  000067                     ??__motor_run:
  5374  000067                     __i2c_write@length:
  5375                           	opt stack 0
  5376  000067                     __i2c_read@length:
  5377                           	opt stack 0
  5378  000067                     i2c_display_write_fixed@length:
  5379                           	opt stack 0
  5380  000067                     __motor_schedule_command@direction:
  5381                           	opt stack 0
  5382  000067                     __read_value_from_offset@value:
  5383                           	opt stack 0
  5384  000067                     utoa@buf:
  5385                           	opt stack 0
  5386                           
  5387                           ; 2 bytes @ 0x7
  5388  000067                     	ds	1
  5389  000068                     ??_spi_tx_rx:
  5390  000068                     ??_spi_tx_tx:
  5391  000068                     ??_atoi:
  5392  000068                     ??__i2c_read:
  5393  000068                     USBDeviceInit@i:
  5394                           	opt stack 0
  5395  000068                     USBTransferOnePacket@ep:
  5396                           	opt stack 0
  5397  000068                     MSDErrorHandler@ErrorCase:
  5398                           	opt stack 0
  5399  000068                     __i2c_write@slave_address:
  5400                           	opt stack 0
  5401  000068                     i2c_display_write_fixed@pos:
  5402                           	opt stack 0
  5403  000068                     __flash_wakeup@command:
  5404                           	opt stack 0
  5405  000068                     __motor_move_back_forth@return_value_1:
  5406                           	opt stack 0
  5407  000068                     __motor_calculate_distance@direction:
  5408                           	opt stack 0
  5409  000068                     ___aldiv@counter:
  5410                           	opt stack 0
  5411  000068                     ___almod@counter:
  5412                           	opt stack 0
  5413  000068                     ___fltol@sign1:
  5414                           	opt stack 0
  5415  000068                     ___llmod@counter:
  5416                           	opt stack 0
  5417  000068                     __parse_set_manual_speed@out_buffer:
  5418                           	opt stack 0
  5419  000068                     memcpy@s:
  5420                           	opt stack 0
  5421  000068                     ___lmul@product:
  5422                           	opt stack 0
  5423  000068                     ___lldiv@quotient:
  5424                           	opt stack 0
  5425                           
  5426                           ; 4 bytes @ 0x8
  5427  000068                     	ds	1
  5428  000069                     MSDErrorHandler@OldMSD_State:
  5429                           	opt stack 0
  5430  000069                     __i2c_write@cntr:
  5431                           	opt stack 0
  5432  000069                     __motor_move_back_forth@return_value_2:
  5433                           	opt stack 0
  5434  000069                     __get_item@value_ctr:
  5435                           	opt stack 0
  5436  000069                     ___aldiv@sign:
  5437                           	opt stack 0
  5438  000069                     ___almod@sign:
  5439                           	opt stack 0
  5440  000069                     ___fltol@exp1:
  5441                           	opt stack 0
  5442  000069                     USBTransferOnePacket@handle:
  5443                           	opt stack 0
  5444  000069                     utoa@val:
  5445                           	opt stack 0
  5446  000069                     __motor_calculate_distance@distance:
  5447                           	opt stack 0
  5448                           
  5449                           ; 4 bytes @ 0x9
  5450  000069                     	ds	1
  5451  00006A                     ??_i2c_display_init:
  5452  00006A                     ?___xxtofl:
  5453                           	opt stack 0
  5454  00006A                     __ic2_display_set_ddram_address@address:
  5455                           	opt stack 0
  5456  00006A                     motor_set_zero@direction:
  5457                           	opt stack 0
  5458  00006A                     __get_item@item_ctr:
  5459                           	opt stack 0
  5460  00006A                     atoi@sign:
  5461                           	opt stack 0
  5462  00006A                     memcpy@tmp:
  5463                           	opt stack 0
  5464  00006A                     __parse_set_manual_speed@out_idx_ptr:
  5465                           	opt stack 0
  5466  00006A                     __ic2_display_set_cgram_address@data_array:
  5467                           	opt stack 0
  5468  00006A                     MSDCheckForErrorCases@DeviceBytes:
  5469                           	opt stack 0
  5470  00006A                     ___aldiv@quotient:
  5471                           	opt stack 0
  5472  00006A                     ___xxtofl@val:
  5473                           	opt stack 0
  5474                           
  5475                           ; 4 bytes @ 0xA
  5476  00006A                     	ds	1
  5477  00006B                     __motor_run@direction:
  5478                           	opt stack 0
  5479  00006B                     __ic2_display_set_ddram_address@data_array:
  5480                           	opt stack 0
  5481  00006B                     __fill_buffer_get_status@outBuffer:
  5482                           	opt stack 0
  5483  00006B                     atoi@a:
  5484                           	opt stack 0
  5485  00006B                     utoa@base:
  5486                           	opt stack 0
  5487  00006B                     i2c_display_init@init_sequence:
  5488                           	opt stack 0
  5489                           
  5490                           ; 9 bytes @ 0xB
  5491  00006B                     	ds	1
  5492  00006C                     ??__parse_set_manual_speed:
  5493  00006C                     ?__flash_get_status:
  5494                           	opt stack 0
  5495  00006C                     ?__motor_distance_to_limit:
  5496                           	opt stack 0
  5497  00006C                     ?_atol:
  5498                           	opt stack 0
  5499  00006C                     __fill_buffer_get_display@cntr:
  5500                           	opt stack 0
  5501  00006C                     ___lldiv@counter:
  5502                           	opt stack 0
  5503  00006C                     atol@s:
  5504                           	opt stack 0
  5505                           
  5506                           ; 2 bytes @ 0xC
  5507  00006C                     	ds	1
  5508  00006D                     __ic2_display_set_cgram_address@address:
  5509                           	opt stack 0
  5510  00006D                     i2c_display_cursor@position:
  5511                           	opt stack 0
  5512  00006D                     __fill_buffer_get_display@line:
  5513                           	opt stack 0
  5514  00006D                     __parse_set_manual_speed@new_speed:
  5515                           	opt stack 0
  5516  00006D                     utoa@v:
  5517                           	opt stack 0
  5518  00006D                     ultoa@buf:
  5519                           	opt stack 0
  5520                           
  5521                           ; 2 bytes @ 0xD
  5522  00006D                     	ds	1
  5523  00006E                     ??___xxtofl:
  5524  00006E                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  5525                           	opt stack 0
  5526  00006E                     i2c_display_cursor@line:
  5527                           	opt stack 0
  5528  00006E                     __flash_get_status@command:
  5529                           	opt stack 0
  5530  00006E                     __fill_buffer_get_display@start_line:
  5531                           	opt stack 0
  5532  00006E                     i2c_display_program_custom_character@bit_pattern:
  5533                           	opt stack 0
  5534                           
  5535                           ; 2 bytes @ 0xE
  5536  00006E                     	ds	1
  5537  00006F                     MSDCheckForErrorCases@MSDErrorCase:
  5538                           	opt stack 0
  5539  00006F                     __i2c_read@slave_address:
  5540                           	opt stack 0
  5541  00006F                     i2c_display_cursor@address:
  5542                           	opt stack 0
  5543  00006F                     __fill_buffer_get_display@position:
  5544                           	opt stack 0
  5545  00006F                     utoa@c:
  5546                           	opt stack 0
  5547  00006F                     __flash_get_status@status:
  5548                           	opt stack 0
  5549  00006F                     ultoa@val:
  5550                           	opt stack 0
  5551                           
  5552                           ; 4 bytes @ 0xF
  5553  00006F                     	ds	1
  5554  000070                     ??__motor_distance_to_limit:
  5555  000070                     ??_atol:
  5556  000070                     ??_i2c_display_program_custom_character:
  5557  000070                     MSDCheckForErrorCases@DeviceNoData:
  5558                           	opt stack 0
  5559  000070                     __i2c_read@cntr:
  5560                           	opt stack 0
  5561  000070                     display_update@line:
  5562                           	opt stack 0
  5563  000070                     api_prepare@inBuffer:
  5564                           	opt stack 0
  5565  000070                     itoa@buf:
  5566                           	opt stack 0
  5567                           
  5568                           ; 2 bytes @ 0x10
  5569  000070                     	ds	1
  5570  000071                     i2c_eeprom_read@address:
  5571                           	opt stack 0
  5572  000071                     __flash_is_busy@status:
  5573                           	opt stack 0
  5574                           
  5575                           ; 2 bytes @ 0x11
  5576  000071                     	ds	1
  5577  000072                     ___xxtofl@sign:
  5578                           	opt stack 0
  5579  000072                     api_prepare@outBuffer:
  5580                           	opt stack 0
  5581  000072                     itoa@val:
  5582                           	opt stack 0
  5583                           
  5584                           ; 2 bytes @ 0x12
  5585  000072                     	ds	1
  5586  000073                     ___xxtofl@exp:
  5587                           	opt stack 0
  5588  000073                     i2c_eeprom_read@data:
  5589                           	opt stack 0
  5590  000073                     __flash_copy_page_to_buffer@page:
  5591                           	opt stack 0
  5592  000073                     __flash_compare_page_to_buffer@page:
  5593                           	opt stack 0
  5594  000073                     __flash_write_to_buffer@start:
  5595                           	opt stack 0
  5596  000073                     __flash_write_page_from_buffer@page:
  5597                           	opt stack 0
  5598  000073                     __flash_partial_read@page:
  5599                           	opt stack 0
  5600  000073                     ultoa@base:
  5601                           	opt stack 0
  5602  000073                     __flash_set_page_size@command:
  5603                           	opt stack 0
  5604                           
  5605                           ; 4 bytes @ 0x13
  5606  000073                     	ds	1
  5607  000074                     api_prepare@command:
  5608                           	opt stack 0
  5609  000074                     atol@sign:
  5610                           	opt stack 0
  5611  000074                     itoa@base:
  5612                           	opt stack 0
  5613  000074                     __motor_distance_to_limit@distance_to_limit_in_steps:
  5614                           	opt stack 0
  5615  000074                     ___xxtofl@arg:
  5616                           	opt stack 0
  5617  000074                     i2c_display_program_custom_character@data_array:
  5618                           	opt stack 0
  5619                           
  5620                           ; 11 bytes @ 0x14
  5621  000074                     	ds	1
  5622  000075                     i2c_eeprom_read@length:
  5623                           	opt stack 0
  5624  000075                     __flash_copy_page_to_buffer@buffer:
  5625                           	opt stack 0
  5626  000075                     __flash_compare_page_to_buffer@buffer:
  5627                           	opt stack 0
  5628  000075                     __flash_write_page_from_buffer@buffer:
  5629                           	opt stack 0
  5630  000075                     __flash_write_to_buffer@data:
  5631                           	opt stack 0
  5632  000075                     __flash_partial_read@start:
  5633                           	opt stack 0
  5634  000075                     atol@a:
  5635                           	opt stack 0
  5636  000075                     ultoa@v:
  5637                           	opt stack 0
  5638                           
  5639                           ; 4 bytes @ 0x15
  5640  000075                     	ds	1
  5641  000076                     ??_i2c_eeprom_read:
  5642  000076                     ??__flash_copy_page_to_buffer:
  5643  000076                     ??__flash_compare_page_to_buffer:
  5644  000076                     ??__flash_write_page_from_buffer:
  5645  000076                     itoa@cp:
  5646                           	opt stack 0
  5647                           
  5648                           ; 2 bytes @ 0x16
  5649  000076                     	ds	1
  5650  000077                     i2c_eeprom_read@addr:
  5651                           	opt stack 0
  5652  000077                     __flash_set_page_size@size:
  5653                           	opt stack 0
  5654  000077                     __flash_write_to_buffer@data_length:
  5655                           	opt stack 0
  5656  000077                     __flash_partial_read@length:
  5657                           	opt stack 0
  5658                           
  5659                           ; 2 bytes @ 0x17
  5660  000077                     	ds	1
  5661  000078                     ?___fldiv:
  5662                           	opt stack 0
  5663  000078                     ?___flmul:
  5664                           	opt stack 0
  5665  000078                     ?___flneg:
  5666                           	opt stack 0
  5667  000078                     i2c_eeprom_read@slave_address:
  5668                           	opt stack 0
  5669  000078                     __motor_distance_to_limit@direction:
  5670                           	opt stack 0
  5671  000078                     __display_padded_itoa@value:
  5672                           	opt stack 0
  5673  000078                     __display_itoa_u16@value:
  5674                           	opt stack 0
  5675  000078                     ___flge@ff1:
  5676                           	opt stack 0
  5677  000078                     ___flneg@f1:
  5678                           	opt stack 0
  5679  000078                     ___fldiv@b:
  5680                           	opt stack 0
  5681  000078                     ___flmul@b:
  5682                           	opt stack 0
  5683                           
  5684                           ; 4 bytes @ 0x18
  5685  000078                     	ds	1
  5686  000079                     __flash_write_to_buffer@buffer:
  5687                           	opt stack 0
  5688  000079                     atol@c:
  5689                           	opt stack 0
  5690  000079                     ultoa@c:
  5691                           	opt stack 0
  5692  000079                     __flash_compare_page_to_buffer@status:
  5693                           	opt stack 0
  5694  000079                     __flash_partial_read@data:
  5695                           	opt stack 0
  5696  000079                     __flash_copy_page_to_buffer@command:
  5697                           	opt stack 0
  5698  000079                     __flash_write_page_from_buffer@command:
  5699                           	opt stack 0
  5700  000079                     __motor_distance_to_limit@absolute_position_in_steps:
  5701                           	opt stack 0
  5702  000079                     i2c_eeprom_recover_position@buffer:
  5703                           	opt stack 0
  5704                           
  5705                           ; 11 bytes @ 0x19
  5706  000079                     	ds	1
  5707  00007A                     __display_padded_itoa@length:
  5708                           	opt stack 0
  5709  00007A                     __display_itoa_u16@text:
  5710                           	opt stack 0
  5711  00007A                     ltoa@buf:
  5712                           	opt stack 0
  5713  00007A                     __flash_write_to_buffer@command:
  5714                           	opt stack 0
  5715                           
  5716                           ; 4 bytes @ 0x1A
  5717  00007A                     	ds	1
  5718  00007B                     ??__flash_partial_read:
  5719  00007B                     __display_padded_itoa@text:
  5720                           	opt stack 0
  5721  00007B                     __flash_compare_page_to_buffer@command:
  5722                           	opt stack 0
  5723                           
  5724                           ; 4 bytes @ 0x1B
  5725  00007B                     	ds	1
  5726  00007C                     ?___fladd:
  5727                           	opt stack 0
  5728  00007C                     __display_start@cntr:
  5729                           	opt stack 0
  5730  00007C                     ___flge@ff2:
  5731                           	opt stack 0
  5732  00007C                     ___fladd@b:
  5733                           	opt stack 0
  5734  00007C                     ___fldiv@a:
  5735                           	opt stack 0
  5736  00007C                     ___flmul@a:
  5737                           	opt stack 0
  5738  00007C                     ltoa@val:
  5739                           	opt stack 0
  5740                           
  5741                           ; 4 bytes @ 0x1C
  5742  00007C                     	ds	1
  5743  00007D                     ??__display_padded_itoa:
  5744  00007D                     __motor_move_steps@distance_in_steps:
  5745                           	opt stack 0
  5746  00007D                     __motor_decide_direction@target_position_in_steps:
  5747                           	opt stack 0
  5748                           
  5749                           ; 4 bytes @ 0x1D
  5750  00007D                     	ds	2
  5751  00007F                     i2c_display_program_custom_character@address:
  5752                           	opt stack 0
  5753  00007F                     flash_sector_write@page:
  5754                           	opt stack 0
  5755  00007F                     flash_partial_write@page:
  5756                           	opt stack 0
  5757  00007F                     __flash_partial_read@command:
  5758                           	opt stack 0
  5759                           
  5760                           ; 4 bytes @ 0x1F
  5761  00007F                     	ds	1
  5762  000080                     ??___fldiv:
  5763  000080                     ??___flmul:
  5764  000080                     ??___flge:
  5765  000080                     i2c_display_program_custom_character@cntr:
  5766                           	opt stack 0
  5767  000080                     ltoa@base:
  5768                           	opt stack 0
  5769  000080                     ___fladd@a:
  5770                           	opt stack 0
  5771                           
  5772                           ; 4 bytes @ 0x20
  5773  000080                     	ds	1
  5774  000081                     __motor_decide_direction@overshoot:
  5775                           	opt stack 0
  5776  000081                     flash_sector_write@data:
  5777                           	opt stack 0
  5778  000081                     flash_partial_write@start:
  5779                           	opt stack 0
  5780  000081                     __motor_move_steps@speed:
  5781                           	opt stack 0
  5782                           
  5783                           ; 2 bytes @ 0x21
  5784  000081                     	ds	1
  5785  000082                     ltoa@cp:
  5786                           	opt stack 0
  5787  000082                     __motor_decide_direction@distance_to_limit_cw:
  5788                           	opt stack 0
  5789  000082                     __display_padded_itoa@tmp:
  5790                           	opt stack 0
  5791                           
  5792                           ; 10 bytes @ 0x22
  5793  000082                     	ds	1
  5794  000083                     flash_sector_write@match:
  5795                           	opt stack 0
  5796  000083                     __motor_move_steps@overshoot:
  5797                           	opt stack 0
  5798  000083                     flash_partial_write@length:
  5799                           	opt stack 0
  5800  000083                     __flash_partial_read@address:
  5801                           	opt stack 0
  5802                           
  5803                           ; 4 bytes @ 0x23
  5804  000083                     	ds	1
  5805  000084                     ??___fladd:
  5806  000084                     __motor_move_steps@type:
  5807                           	opt stack 0
  5808  000084                     ___flmul@sign:
  5809                           	opt stack 0
  5810  000084                     ExternalFlash_SectorWrite@config:
  5811                           	opt stack 0
  5812  000084                     fat_restore_mbr_fbr@cntr:
  5813                           	opt stack 0
  5814  000084                     __add_item@item_string:
  5815                           	opt stack 0
  5816  000084                     ___fldiv@rem:
  5817                           	opt stack 0
  5818                           
  5819                           ; 4 bytes @ 0x24
  5820  000084                     	ds	1
  5821  000085                     __motor_move_steps@return_value_1:
  5822                           	opt stack 0
  5823  000085                     flash_partial_write@data:
  5824                           	opt stack 0
  5825  000085                     ___flmul@grs:
  5826                           	opt stack 0
  5827                           
  5828                           ; 4 bytes @ 0x25
  5829  000085                     	ds	1
  5830  000086                     __motor_move_steps@return_value_2:
  5831                           	opt stack 0
  5832  000086                     ExternalFlash_SectorWrite@sector_addr:
  5833                           	opt stack 0
  5834  000086                     __motor_decide_direction@distance_to_limit_ccw:
  5835                           	opt stack 0
  5836  000086                     __add_item@value:
  5837                           	opt stack 0
  5838                           
  5839                           ; 4 bytes @ 0x26
  5840  000086                     	ds	1
  5841  000087                     flash_partial_write@match:
  5842                           	opt stack 0
  5843  000087                     flash_sector_read@page:
  5844                           	opt stack 0
  5845  000087                     flash_partial_read@page:
  5846                           	opt stack 0
  5847  000087                     __motor_move_steps@distance_to_limit:
  5848                           	opt stack 0
  5849                           
  5850                           ; 4 bytes @ 0x27
  5851  000087                     	ds	1
  5852  000088                     ___fldiv@sign:
  5853                           	opt stack 0
  5854  000088                     __write_root@data:
  5855                           	opt stack 0
  5856                           
  5857                           ; 2 bytes @ 0x28
  5858  000088                     	ds	1
  5859  000089                     ___flmul@aexp:
  5860                           	opt stack 0
  5861  000089                     flash_sector_read@data:
  5862                           	opt stack 0
  5863  000089                     flash_partial_read@start:
  5864                           	opt stack 0
  5865  000089                     ___fldiv@new_exp:
  5866                           	opt stack 0
  5867                           
  5868                           ; 2 bytes @ 0x29
  5869  000089                     	ds	1
  5870  00008A                     ___flmul@bexp:
  5871                           	opt stack 0
  5872  00008A                     ExternalFlash_SectorWrite@buffer:
  5873                           	opt stack 0
  5874  00008A                     __write_root@sector:
  5875                           	opt stack 0
  5876  00008A                     __add_item@buffer:
  5877                           	opt stack 0
  5878  00008A                     __motor_decide_direction@distance_to_target_cw:
  5879                           	opt stack 0
  5880                           
  5881                           ; 4 bytes @ 0x2A
  5882  00008A                     	ds	1
  5883  00008B                     ??_fat_get_format_status:
  5884  00008B                     ?__get_available_cluster:
  5885                           	opt stack 0
  5886  00008B                     __motor_move_steps@direction:
  5887                           	opt stack 0
  5888  00008B                     flash_partial_read@length:
  5889                           	opt stack 0
  5890  00008B                     ExternalFlash_SectorRead@config:
  5891                           	opt stack 0
  5892  00008B                     __get_available_cluster@first_sector:
  5893                           	opt stack 0
  5894  00008B                     fat_find_file@name:
  5895                           	opt stack 0
  5896  00008B                     ___fldiv@grs:
  5897                           	opt stack 0
  5898  00008B                     ___flmul@prod:
  5899                           	opt stack 0
  5900                           
  5901                           ; 4 bytes @ 0x2B
  5902  00008B                     	ds	1
  5903  00008C                     ??__add_item:
  5904  00008C                     __display_padded_itoa@len:
  5905                           	opt stack 0
  5906  00008C                     ExternalFlash_SectorWrite@allowWriteToZero:
  5907                           	opt stack 0
  5908  00008C                     ___fladd@signs:
  5909                           	opt stack 0
  5910  00008C                     __write_root@offset:
  5911                           	opt stack 0
  5912  00008C                     motor_move_endless@speed:
  5913                           	opt stack 0
  5914  00008C                     motor_move_steps@distance:
  5915                           	opt stack 0
  5916                           
  5917                           ; 4 bytes @ 0x2C
  5918  00008C                     	ds	1
  5919  00008D                     __display_padded_itoa@pos:
  5920                           	opt stack 0
  5921  00008D                     ___fladd@aexp:
  5922                           	opt stack 0
  5923  00008D                     flash_partial_read@data:
  5924                           	opt stack 0
  5925  00008D                     ExternalFlash_SectorWrite@page:
  5926                           	opt stack 0
  5927  00008D                     __get_available_cluster@skip_sector:
  5928                           	opt stack 0
  5929  00008D                     fat_find_file@extension:
  5930                           	opt stack 0
  5931  00008D                     fat_get_format_status@cntr:
  5932                           	opt stack 0
  5933  00008D                     ExternalFlash_SectorRead@sector_addr:
  5934                           	opt stack 0
  5935                           
  5936                           ; 4 bytes @ 0x2D
  5937  00008D                     	ds	1
  5938  00008E                     __display_padded_itoa@padding:
  5939                           	opt stack 0
  5940  00008E                     __write_root@file_number:
  5941                           	opt stack 0
  5942  00008E                     motor_move_endless@direction:
  5943                           	opt stack 0
  5944  00008E                     __add_item@length:
  5945                           	opt stack 0
  5946  00008E                     ___fladd@bexp:
  5947                           	opt stack 0
  5948  00008E                     __motor_decide_direction@distance_to_target_ccw:
  5949                           	opt stack 0
  5950                           
  5951                           ; 4 bytes @ 0x2E
  5952  00008E                     	ds	1
  5953  00008F                     ??_MSDWriteHandler:
  5954  00008F                     ??_fat_find_file:
  5955  00008F                     ?__read_fat:
  5956                           	opt stack 0
  5957  00008F                     ___fladd@grs:
  5958                           	opt stack 0
  5959  00008F                     ___fldiv@bexp:
  5960                           	opt stack 0
  5961  00008F                     __display_signed_itoa@value:
  5962                           	opt stack 0
  5963  00008F                     __get_available_cluster@cluster:
  5964                           	opt stack 0
  5965  00008F                     __root_is_available@root_sector:
  5966                           	opt stack 0
  5967  00008F                     __read_fat@cluster:
  5968                           	opt stack 0
  5969  00008F                     fat_get_file_information@data:
  5970                           	opt stack 0
  5971  00008F                     ___flmul@temp:
  5972                           	opt stack 0
  5973                           
  5974                           ; 2 bytes @ 0x2F
  5975  00008F                     	ds	1
  5976  000090                     ___fldiv@aexp:
  5977                           	opt stack 0
  5978  000090                     motor_move_steps@speed:
  5979                           	opt stack 0
  5980                           
  5981                           ; 2 bytes @ 0x30
  5982  000090                     	ds	1
  5983  000091                     ??_adc_read_temperature:
  5984  000091                     ?__motor_get_speed_in_degrees:
  5985                           	opt stack 0
  5986  000091                     ?__steps_from_degrees:
  5987                           	opt stack 0
  5988  000091                     ?__motor_steps_from_degrees_int:
  5989                           	opt stack 0
  5990  000091                     ?__step_position_from_divide_position:
  5991                           	opt stack 0
  5992  000091                     fat_find_file@file_number:
  5993                           	opt stack 0
  5994  000091                     __display_signed_itoa@text:
  5995                           	opt stack 0
  5996  000091                     ExternalFlash_SectorRead@buffer:
  5997                           	opt stack 0
  5998  000091                     __get_available_cluster@offset:
  5999                           	opt stack 0
  6000  000091                     __root_is_available@offset:
  6001                           	opt stack 0
  6002  000091                     __read_fat@sector:
  6003                           	opt stack 0
  6004  000091                     __motor_steps_from_degrees_int@degrees:
  6005                           	opt stack 0
  6006  000091                     __motor_get_speed_in_degrees@speed_index:
  6007                           	opt stack 0
  6008  000091                     __step_position_from_divide_position@divide_position:
  6009                           	opt stack 0
  6010  000091                     motor_calculate_position_in_degrees@tmp:
  6011                           	opt stack 0
  6012  000091                     __steps_from_degrees@degrees:
  6013                           	opt stack 0
  6014                           
  6015                           ; 4 bytes @ 0x31
  6016  000091                     	ds	1
  6017  000092                     motor_move_steps@overshoot:
  6018                           	opt stack 0
  6019  000092                     fat_find_file@sector:
  6020                           	opt stack 0
  6021  000092                     fat_get_file_information@root_sector:
  6022                           	opt stack 0
  6023  000092                     motor_goto_steps@position:
  6024                           	opt stack 0
  6025                           
  6026                           ; 4 bytes @ 0x32
  6027  000092                     	ds	1
  6028  000093                     ??__motor_get_speed_in_degrees:
  6029  000093                     __root_is_available@file_number:
  6030                           	opt stack 0
  6031  000093                     motor_move_steps@direction:
  6032                           	opt stack 0
  6033  000093                     ExternalFlash_SectorRead@page:
  6034                           	opt stack 0
  6035  000093                     __get_available_cluster@sector:
  6036                           	opt stack 0
  6037  000093                     __read_fat@offset:
  6038                           	opt stack 0
  6039  000093                     adc_read_temperature@adc_result:
  6040                           	opt stack 0
  6041                           
  6042                           ; 2 bytes @ 0x33
  6043  000093                     	ds	1
  6044  000094                     __root_is_available@first_byte:
  6045                           	opt stack 0
  6046  000094                     motor_arc_move@direction:
  6047                           	opt stack 0
  6048  000094                     fat_find_file@offset:
  6049                           	opt stack 0
  6050  000094                     fat_get_file_information@offset:
  6051                           	opt stack 0
  6052  000094                     __parse_jump_steps@data:
  6053                           	opt stack 0
  6054  000094                     __parse_jump_steps_with_overshoot@data:
  6055                           	opt stack 0
  6056                           
  6057                           ; 2 bytes @ 0x34
  6058  000094                     	ds	1
  6059  000095                     ??_MSDReadHandler:
  6060  000095                     ?__make_cluster_chain:
  6061                           	opt stack 0
  6062  000095                     ?_fat_get_file_size:
  6063                           	opt stack 0
  6064  000095                     __get_available_root_entry@file_number:
  6065                           	opt stack 0
  6066  000095                     __make_cluster_chain@first_cluster:
  6067                           	opt stack 0
  6068  000095                     __read_fat@value:
  6069                           	opt stack 0
  6070  000095                     __motor_steps_from_degrees_int@temp:
  6071                           	opt stack 0
  6072  000095                     __motor_get_speed_in_degrees@speed:
  6073                           	opt stack 0
  6074  000095                     __step_position_from_divide_position@target_position:
  6075                           	opt stack 0
  6076  000095                     motor_arc_move@arc_in_steps:
  6077                           	opt stack 0
  6078  000095                     adc_read_temperature@temperature:
  6079                           	opt stack 0
  6080  000095                     __steps_from_degrees@temp:
  6081                           	opt stack 0
  6082                           
  6083                           ; 4 bytes @ 0x35
  6084  000095                     	ds	1
  6085  000096                     fat_get_file_information@file_number:
  6086                           	opt stack 0
  6087  000096                     __parse_jump_steps@out_buffer:
  6088                           	opt stack 0
  6089  000096                     __parse_jump_steps_with_overshoot@out_buffer:
  6090                           	opt stack 0
  6091  000096                     motor_goto_steps@speed:
  6092                           	opt stack 0
  6093                           
  6094                           ; 2 bytes @ 0x36
  6095  000096                     	ds	1
  6096  000097                     ?__find_nth_cluster:
  6097                           	opt stack 0
  6098  000097                     __find_nth_cluster@cluster:
  6099                           	opt stack 0
  6100  000097                     __make_cluster_chain@number_of_clusters:
  6101                           	opt stack 0
  6102                           
  6103                           ; 2 bytes @ 0x37
  6104  000097                     	ds	1
  6105  000098                     motor_goto_steps@overshoot:
  6106                           	opt stack 0
  6107  000098                     __parse_jump_steps@out_idx_ptr:
  6108                           	opt stack 0
  6109  000098                     __parse_jump_steps_with_overshoot@out_idx_ptr:
  6110                           	opt stack 0
  6111                           
  6112                           ; 2 bytes @ 0x38
  6113  000098                     	ds	1
  6114  000099                     ??_MSDProcessCommandMediaPresent:
  6115  000099                     ??__make_cluster_chain:
  6116  000099                     __find_nth_cluster@n:
  6117                           	opt stack 0
  6118  000099                     fat_get_file_size@sector:
  6119                           	opt stack 0
  6120  000099                     motor_move_degrees_int@distance:
  6121                           	opt stack 0
  6122  000099                     __parse_item@item_string:
  6123                           	opt stack 0
  6124  000099                     __motor_get_speed_in_degrees@lookup:
  6125                           	opt stack 0
  6126  000099                     motor_goto_steps@distance_in_steps:
  6127                           	opt stack 0
  6128                           
  6129                           ; 4 bytes @ 0x39
  6130  000099                     	ds	1
  6131  00009A                     ??__parse_jump_steps:
  6132  00009A                     ??__parse_jump_steps_with_overshoot:
  6133                           
  6134                           ; 1 bytes @ 0x3A
  6135  00009A                     	ds	1
  6136  00009B                     __parse_jump_steps@return_value:
  6137                           	opt stack 0
  6138  00009B                     __parse_jump_steps_with_overshoot@return_value:
  6139                           	opt stack 0
  6140  00009B                     _MSDProcessCommandMediaPresent$2606:
  6141                           	opt stack 0
  6142  00009B                     __find_nth_cluster@offset:
  6143                           	opt stack 0
  6144  00009B                     __make_cluster_chain@next_offset:
  6145                           	opt stack 0
  6146  00009B                     fat_get_file_size@offset:
  6147                           	opt stack 0
  6148  00009B                     motor_move_degrees_int@speed:
  6149                           	opt stack 0
  6150  00009B                     __parse_item@value_string:
  6151                           	opt stack 0
  6152                           
  6153                           ; 2 bytes @ 0x3B
  6154  00009B                     	ds	1
  6155  00009C                     __parse_jump_steps@number_of_steps:
  6156                           	opt stack 0
  6157  00009C                     __parse_jump_steps_with_overshoot@number_of_steps:
  6158                           	opt stack 0
  6159                           
  6160                           ; 4 bytes @ 0x3C
  6161  00009C                     	ds	1
  6162  00009D                     ?_motor_speed_from_index:
  6163                           	opt stack 0
  6164  00009D                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  6165                           	opt stack 0
  6166  00009D                     motor_move_degrees_int@overshoot:
  6167                           	opt stack 0
  6168  00009D                     motor_goto_steps@direction:
  6169                           	opt stack 0
  6170  00009D                     __find_nth_cluster@sector_in_buffer:
  6171                           	opt stack 0
  6172  00009D                     __make_cluster_chain@minimum_sector:
  6173                           	opt stack 0
  6174  00009D                     motor_speed_from_index@speed_index:
  6175                           	opt stack 0
  6176  00009D                     fat_get_file_size@file_size:
  6177                           	opt stack 0
  6178                           
  6179                           ; 4 bytes @ 0x3D
  6180  00009D                     	ds	1
  6181  00009E                     ??_motor_divide_jump:
  6182  00009E                     __parse_command_short@cmd:
  6183                           	opt stack 0
  6184  00009E                     MSDProcessCommandMediaPresent@sectorSize:
  6185                           	opt stack 0
  6186  00009E                     motor_divide_jump_to_nearest@nearest_position_in_steps:
  6187                           	opt stack 0
  6188  00009E                     motor_move_degrees_int@distance_in_steps:
  6189                           	opt stack 0
  6190                           
  6191                           ; 4 bytes @ 0x3E
  6192  00009E                     	ds	1
  6193  00009F                     __display_itoa@value:
  6194                           	opt stack 0
  6195  00009F                     __find_nth_cluster@sector:
  6196                           	opt stack 0
  6197  00009F                     __make_cluster_chain@different_sector_cluster:
  6198                           	opt stack 0
  6199  00009F                     motor_divide_jump@target_position_in_steps:
  6200                           	opt stack 0
  6201                           
  6202                           ; 4 bytes @ 0x3F
  6203  00009F                     	ds	1
  6204  0000A0                     __parse_command_long@data:
  6205                           	opt stack 0
  6206                           
  6207                           ; 2 bytes @ 0x40
  6208  0000A0                     	ds	1
  6209  0000A1                     __display_itoa@decimals:
  6210                           	opt stack 0
  6211  0000A1                     __make_cluster_chain@data_changed:
  6212                           	opt stack 0
  6213  0000A1                     fat_get_file_size@file_number:
  6214                           	opt stack 0
  6215  0000A1                     fat_read_from_file_fast@start_byte:
  6216                           	opt stack 0
  6217  0000A1                     fat_modify_file@start_byte:
  6218                           	opt stack 0
  6219                           
  6220                           ; 4 bytes @ 0x41
  6221  0000A1                     	ds	1
  6222  0000A2                     motor_move_degrees_int@direction:
  6223                           	opt stack 0
  6224  0000A2                     __display_itoa@text:
  6225                           	opt stack 0
  6226  0000A2                     __make_cluster_chain@remaining_clusters:
  6227                           	opt stack 0
  6228  0000A2                     __parse_command_long@out_buffer:
  6229                           	opt stack 0
  6230  0000A2                     motor_divide_jump_to_nearest@nearest_divide_position:
  6231                           	opt stack 0
  6232  0000A2                     MSDProcessCommandMediaPresent@capacity:
  6233                           	opt stack 0
  6234                           
  6235                           ; 4 bytes @ 0x42
  6236  0000A2                     	ds	1
  6237  0000A3                     motor_divide_jump@target_divide_position:
  6238                           	opt stack 0
  6239                           
  6240                           ; 2 bytes @ 0x43
  6241  0000A3                     	ds	1
  6242  0000A4                     ??__display_itoa:
  6243  0000A4                     __make_cluster_chain@sector:
  6244                           	opt stack 0
  6245  0000A4                     __parse_command_long@out_idx_ptr:
  6246                           	opt stack 0
  6247  0000A4                     motor_divide_jump_to_nearest@divide_position_float:
  6248                           	opt stack 0
  6249                           
  6250                           ; 4 bytes @ 0x44
  6251  0000A4                     	ds	1
  6252  0000A5                     fat_modify_file@length:
  6253                           	opt stack 0
  6254  0000A5                     fat_read_from_file_fast@length:
  6255                           	opt stack 0
  6256                           
  6257                           ; 4 bytes @ 0x45
  6258  0000A5                     	ds	1
  6259  0000A6                     MSDProcessCommandMediaPresent@i:
  6260                           	opt stack 0
  6261  0000A6                     __parse_command_long@length:
  6262                           	opt stack 0
  6263  0000A6                     __make_cluster_chain@sector_in_buffer:
  6264                           	opt stack 0
  6265                           
  6266                           ; 2 bytes @ 0x46
  6267  0000A6                     	ds	1
  6268  0000A7                     ??_MSDProcessCommand:
  6269  0000A7                     fat_modify_file@data:
  6270                           	opt stack 0
  6271  0000A7                     api_parse@inBuffer:
  6272                           	opt stack 0
  6273                           
  6274                           ; 2 bytes @ 0x47
  6275  0000A7                     	ds	1
  6276  0000A8                     ??_encoder_statemachine:
  6277  0000A8                     __make_cluster_chain@offset:
  6278                           	opt stack 0
  6279                           
  6280                           ; 2 bytes @ 0x48
  6281  0000A8                     	ds	1
  6282  0000A9                     ??_fat_modify_file:
  6283  0000A9                     api_parse@receivedDataLength:
  6284                           	opt stack 0
  6285  0000A9                     fat_read_from_file_fast@data:
  6286                           	opt stack 0
  6287                           
  6288                           ; 2 bytes @ 0x49
  6289  0000A9                     	ds	1
  6290  0000AA                     __make_cluster_chain@next_cluster:
  6291                           	opt stack 0
  6292  0000AA                     api_parse@outBuffer:
  6293                           	opt stack 0
  6294  0000AA                     __display_itoa@tmp:
  6295                           	opt stack 0
  6296                           
  6297                           ; 10 bytes @ 0x4A
  6298  0000AA                     	ds	1
  6299  0000AB                     fat_read_from_file_fast@cluster:
  6300                           	opt stack 0
  6301                           
  6302                           ; 2 bytes @ 0x4B
  6303  0000AB                     	ds	1
  6304  0000AC                     ??_api_parse:
  6305  0000AC                     ??_MSDTasks:
  6306  0000AC                     fat_create_file@name:
  6307                           	opt stack 0
  6308  0000AC                     fat_resize_file@new_file_size:
  6309                           	opt stack 0
  6310                           
  6311                           ; 4 bytes @ 0x4C
  6312  0000AC                     	ds	1
  6313  0000AD                     _MSDTasks$2588:
  6314                           	opt stack 0
  6315  0000AD                     fat_read_from_file_fast@cluster_number:
  6316                           	opt stack 0
  6317                           
  6318                           ; 2 bytes @ 0x4D
  6319  0000AD                     	ds	1
  6320  0000AE                     fat_create_file@extension:
  6321                           	opt stack 0
  6322  0000AE                     api_parse@out_idx_ptr:
  6323                           	opt stack 0
  6324                           
  6325                           ; 2 bytes @ 0x4E
  6326  0000AE                     	ds	1
  6327  0000AF                     ??_fat_read_from_file_fast:
  6328  0000AF                     _MSDTasks$2589:
  6329                           	opt stack 0
  6330                           
  6331                           ; 2 bytes @ 0x4F
  6332  0000AF                     	ds	1
  6333  0000B0                     ??_fat_resize_file:
  6334  0000B0                     api_parse@out_idx:
  6335                           	opt stack 0
  6336  0000B0                     fat_create_file@size:
  6337                           	opt stack 0
  6338                           
  6339                           ; 4 bytes @ 0x50
  6340  0000B0                     	ds	1
  6341  0000B1                     MSDTasks@i:
  6342                           	opt stack 0
  6343  0000B1                     api_parse@in_idx:
  6344                           	opt stack 0
  6345                           
  6346                           ; 1 bytes @ 0x51
  6347  0000B1                     	ds	1
  6348  0000B2                     
  6349                           ; 1 bytes @ 0x52
  6350  0000B2                     	ds	2
  6351  0000B4                     ??_fat_create_file:
  6352  0000B4                     __display_itoa@len:
  6353                           	opt stack 0
  6354  0000B4                     fat_resize_file@old_number_of_clusters:
  6355                           	opt stack 0
  6356                           
  6357                           ; 2 bytes @ 0x54
  6358  0000B4                     	ds	1
  6359  0000B5                     __display_itoa@missing:
  6360                           	opt stack 0
  6361  0000B5                     fat_modify_file@sector:
  6362                           	opt stack 0
  6363                           
  6364                           ; 2 bytes @ 0x55
  6365  0000B5                     	ds	1
  6366  0000B6                     __display_itoa@pos:
  6367                           	opt stack 0
  6368  0000B6                     fat_resize_file@new_number_of_clusters:
  6369                           	opt stack 0
  6370                           
  6371                           ; 2 bytes @ 0x56
  6372  0000B6                     	ds	1
  6373  0000B7                     fat_modify_file@file_number:
  6374                           	opt stack 0
  6375  0000B7                     __display_itoa_long@value:
  6376                           	opt stack 0
  6377                           
  6378                           ; 4 bytes @ 0x57
  6379  0000B7                     	ds	1
  6380  0000B8                     fat_modify_file@return_code:
  6381                           	opt stack 0
  6382  0000B8                     fat_create_file@number_of_clusters:
  6383                           	opt stack 0
  6384  0000B8                     fat_resize_file@first_cluster:
  6385                           	opt stack 0
  6386                           
  6387                           ; 2 bytes @ 0x58
  6388  0000B8                     	ds	1
  6389  0000B9                     fat_modify_file@cluster:
  6390                           	opt stack 0
  6391                           
  6392                           ; 2 bytes @ 0x59
  6393  0000B9                     	ds	1
  6394  0000BA                     fat_resize_file@file_number:
  6395                           	opt stack 0
  6396  0000BA                     fat_create_file@first_cluster:
  6397                           	opt stack 0
  6398                           
  6399                           ; 2 bytes @ 0x5A
  6400  0000BA                     	ds	1
  6401  0000BB                     __display_itoa_long@decimals:
  6402                           	opt stack 0
  6403  0000BB                     fat_read_from_file_fast@sector:
  6404                           	opt stack 0
  6405  0000BB                     fat_modify_file@offset:
  6406                           	opt stack 0
  6407  0000BB                     fat_resize_file@root:
  6408                           	opt stack 0
  6409                           
  6410                           ; 32 bytes @ 0x5B
  6411  0000BB                     	ds	1
  6412  0000BC                     fat_create_file@file_number:
  6413                           	opt stack 0
  6414  0000BC                     __display_itoa_long@text:
  6415                           	opt stack 0
  6416                           
  6417                           ; 2 bytes @ 0x5C
  6418  0000BC                     	ds	1
  6419  0000BD                     fat_read_from_file_fast@working_cluster:
  6420                           	opt stack 0
  6421  0000BD                     fat_modify_file@number_of_bytes:
  6422                           	opt stack 0
  6423  0000BD                     fat_create_file@root_entry:
  6424                           	opt stack 0
  6425                           
  6426                           ; 32 bytes @ 0x5D
  6427  0000BD                     	ds	1
  6428  0000BE                     ??__display_itoa_long:
  6429                           
  6430                           ; 1 bytes @ 0x5E
  6431  0000BE                     	ds	1
  6432  0000BF                     fat_read_from_file_fast@offset:
  6433                           	opt stack 0
  6434  0000BF                     fat_modify_file@position:
  6435                           	opt stack 0
  6436                           
  6437                           ; 4 bytes @ 0x5F
  6438  0000BF                     	ds	2
  6439  0000C1                     fat_read_from_file_fast@needed_cluster:
  6440                           	opt stack 0
  6441                           
  6442                           ; 2 bytes @ 0x61
  6443  0000C1                     	ds	1
  6444  0000C2                     __display_itoa_long@length:
  6445                           	opt stack 0
  6446                           
  6447                           ; 1 bytes @ 0x62
  6448  0000C2                     	ds	1
  6449  0000C3                     __display_itoa_long@short_value:
  6450                           	opt stack 0
  6451  0000C3                     fat_read_from_file_fast@read_length:
  6452                           	opt stack 0
  6453  0000C3                     fat_modify_file@root:
  6454                           	opt stack 0
  6455                           
  6456                           ; 32 bytes @ 0x63
  6457  0000C3                     	ds	2
  6458  0000C5                     __display_itoa_long@last_digit:
  6459                           	opt stack 0
  6460  0000C5                     fat_read_from_file_fast@position:
  6461                           	opt stack 0
  6462                           
  6463                           ; 4 bytes @ 0x65
  6464  0000C5                     	ds	1
  6465  0000C6                     ??_display_prepare:
  6466                           
  6467                           ; 1 bytes @ 0x66
  6468  0000C6                     	ds	2
  6469  0000C8                     display_prepare@temp:
  6470                           	opt stack 0
  6471                           
  6472                           ; 10 bytes @ 0x68
  6473  0000C8                     	ds	1
  6474  0000C9                     fat_read_from_file@start_byte:
  6475                           	opt stack 0
  6476                           
  6477                           ; 4 bytes @ 0x69
  6478  0000C9                     	ds	4
  6479  0000CD                     fat_read_from_file@length:
  6480                           	opt stack 0
  6481                           
  6482                           ; 4 bytes @ 0x6D
  6483  0000CD                     	ds	4
  6484  0000D1                     fat_read_from_file@data:
  6485                           	opt stack 0
  6486                           
  6487                           ; 2 bytes @ 0x71
  6488  0000D1                     	ds	1
  6489  0000D2                     display_prepare@space:
  6490                           	opt stack 0
  6491                           
  6492                           ; 1 bytes @ 0x72
  6493  0000D2                     	ds	1
  6494  0000D3                     ??_fat_read_from_file:
  6495  0000D3                     display_prepare@cntr:
  6496                           	opt stack 0
  6497                           
  6498                           ; 1 bytes @ 0x73
  6499  0000D3                     	ds	4
  6500  0000D7                     fat_read_from_file@file_number:
  6501                           	opt stack 0
  6502                           
  6503                           ; 1 bytes @ 0x77
  6504  0000D7                     	ds	1
  6505  0000D8                     fat_read_from_file@return_code:
  6506                           	opt stack 0
  6507                           
  6508                           ; 1 bytes @ 0x78
  6509  0000D8                     	ds	1
  6510  0000D9                     fat_read_from_file@cluster:
  6511                           	opt stack 0
  6512                           
  6513                           ; 2 bytes @ 0x79
  6514  0000D9                     	ds	2
  6515  0000DB                     fat_read_from_file@cluster_number:
  6516                           	opt stack 0
  6517                           
  6518                           ; 2 bytes @ 0x7B
  6519  0000DB                     	ds	2
  6520  0000DD                     fat_read_from_file@root:
  6521                           	opt stack 0
  6522                           
  6523                           ; 32 bytes @ 0x7D
  6524  0000DD                     	ds	6
  6525  0000E3                     ??_configFile_write:
  6526                           
  6527                           ; 1 bytes @ 0x83
  6528  0000E3                     	ds	1
  6529  0000E4                     configFile_write@file_number:
  6530                           	opt stack 0
  6531                           
  6532                           ; 1 bytes @ 0x84
  6533  0000E4                     	ds	1
  6534  0000E5                     configFile_write@file_size:
  6535                           	opt stack 0
  6536                           
  6537                           ; 4 bytes @ 0x85
  6538  0000E5                     	ds	24
  6539  0000FD                     ??_system_init:
  6540                           
  6541                           ; 1 bytes @ 0x9D
  6542  0000FD                     	ds	1
  6543  0000FE                     main@startup_timer:
  6544                           	opt stack 0
  6545                           
  6546                           ; 1 bytes @ 0x9E
  6547  0000FE                     	ds	1
  6548                           tblptru	equ	0xFF8
  6549                           tblptrh	equ	0xFF7
  6550                           tblptrl	equ	0xFF6
  6551                           tablat	equ	0xFF5
  6552                           postinc0	equ	0xFEE
  6553                           wreg	equ	0xFE8
  6554                           postdec1	equ	0xFE5
  6555                           fsr1h	equ	0xFE2
  6556                           fsr1l	equ	0xFE1
  6557                           
  6558                           	psect	cstackCOMRAM
  6559  000001                     __pcstackCOMRAM:
  6560                           	opt stack 0
  6561  000001                     ??_USBStdGetDscHandler:
  6562  000001                     ??_USBStdGetStatusHandler:
  6563  000001                     ??i2__i2c_wait_idle:
  6564  000001                     ?i2_USBTransferOnePacket:
  6565                           	opt stack 0
  6566  000001                     ?i2_ExternalFlash_MediaInitialize:
  6567                           	opt stack 0
  6568  000001                     USBConfigureEndpoint@direction:
  6569                           	opt stack 0
  6570  000001                     USBCtrlTrfTxService@byteToSend:
  6571                           	opt stack 0
  6572  000001                     USBCtrlTrfRxService@i:
  6573                           	opt stack 0
  6574  000001                     i2USBTransferOnePacket@dir:
  6575                           	opt stack 0
  6576  000001                     i2USBStallEndpoint@dir:
  6577                           	opt stack 0
  6578  000001                     i2__i2c_send@dat:
  6579                           	opt stack 0
  6580  000001                     i2SYSTEM_Initialize@pll_startup_counter:
  6581                           	opt stack 0
  6582  000001                     i2ExternalFlash_MediaInitialize@config:
  6583                           	opt stack 0
  6584  000001                     i2ExternalFlash_MediaDetect@config:
  6585                           	opt stack 0
  6586  000001                     i2memcpy@d1:
  6587                           	opt stack 0
  6588  000001                     i2memset@p1:
  6589                           	opt stack 0
  6590                           
  6591                           ; 2 bytes @ 0x0
  6592  000001                     	ds	1
  6593  000002                     ??_USBConfigureEndpoint:
  6594  000002                     ??i2_USBStallEndpoint:
  6595  000002                     USBCtrlTrfRxService@byteToRead:
  6596                           	opt stack 0
  6597  000002                     USBCtrlTrfInHandler@lastDTS:
  6598                           	opt stack 0
  6599  000002                     USBStdGetStatusHandler@p:
  6600                           	opt stack 0
  6601  000002                     i2USBTransferOnePacket@data:
  6602                           	opt stack 0
  6603                           
  6604                           ; 2 bytes @ 0x1
  6605  000002                     	ds	1
  6606  000003                     i2SYSTEM_Initialize@pll_startup_counter_3143:
  6607                           	opt stack 0
  6608  000003                     i2memcpy@s1:
  6609                           	opt stack 0
  6610  000003                     i2memset@c:
  6611                           	opt stack 0
  6612                           
  6613                           ; 2 bytes @ 0x2
  6614  000003                     	ds	1
  6615  000004                     i2USBTransferOnePacket@len:
  6616                           	opt stack 0
  6617                           
  6618                           ; 1 bytes @ 0x3
  6619  000004                     	ds	1
  6620  000005                     ??i2_USBTransferOnePacket:
  6621  000005                     i2SYSTEM_Initialize@state:
  6622                           	opt stack 0
  6623  000005                     i2memcpy@n:
  6624                           	opt stack 0
  6625  000005                     i2memset@n:
  6626                           	opt stack 0
  6627                           
  6628                           ; 2 bytes @ 0x4
  6629  000005                     	ds	1
  6630  000006                     USBConfigureEndpoint@EPNum:
  6631                           	opt stack 0
  6632  000006                     i2USBStallEndpoint@ep:
  6633                           	opt stack 0
  6634  000006                     i2__i2c_eeprom_busy@busy:
  6635                           	opt stack 0
  6636  000006                     i2__i2c_write@data:
  6637                           	opt stack 0
  6638                           
  6639                           ; 2 bytes @ 0x5
  6640  000006                     	ds	1
  6641  000007                     USBConfigureEndpoint@handle:
  6642                           	opt stack 0
  6643  000007                     i2USBStallEndpoint@p:
  6644                           	opt stack 0
  6645  000007                     i2memcpy@d:
  6646                           	opt stack 0
  6647  000007                     i2memset@p:
  6648                           	opt stack 0
  6649                           
  6650                           ; 2 bytes @ 0x6
  6651  000007                     	ds	1
  6652  000008                     i2__i2c_write@length:
  6653                           	opt stack 0
  6654                           
  6655                           ; 1 bytes @ 0x7
  6656  000008                     	ds	1
  6657  000009                     USBEnableEndpoint@options:
  6658                           	opt stack 0
  6659  000009                     i2USBDeviceInit@i:
  6660                           	opt stack 0
  6661  000009                     i2USBTransferOnePacket@ep:
  6662                           	opt stack 0
  6663  000009                     i2__i2c_write@slave_address:
  6664                           	opt stack 0
  6665  000009                     i2memcpy@s:
  6666                           	opt stack 0
  6667                           
  6668                           ; 2 bytes @ 0x8
  6669  000009                     	ds	1
  6670  00000A                     i2__i2c_write@cntr:
  6671                           	opt stack 0
  6672  00000A                     USBEnableEndpoint@p:
  6673                           	opt stack 0
  6674  00000A                     i2USBTransferOnePacket@handle:
  6675                           	opt stack 0
  6676                           
  6677                           ; 2 bytes @ 0x9
  6678  00000A                     	ds	1
  6679  00000B                     i2memcpy@tmp:
  6680                           	opt stack 0
  6681  00000B                     i2c_eeprom_write@address:
  6682                           	opt stack 0
  6683                           
  6684                           ; 2 bytes @ 0xA
  6685  00000B                     	ds	1
  6686  00000C                     ??_USBMSDInit:
  6687  00000C                     USBEnableEndpoint@ep:
  6688                           	opt stack 0
  6689  00000C                     _USBCheckMSDRequest$2534:
  6690                           	opt stack 0
  6691  00000C                     MSDTransferTerminated@handle:
  6692                           	opt stack 0
  6693                           
  6694                           ; 2 bytes @ 0xB
  6695  00000C                     	ds	1
  6696  00000D                     i2c_eeprom_write@data:
  6697                           	opt stack 0
  6698                           
  6699                           ; 2 bytes @ 0xC
  6700  00000D                     	ds	1
  6701  00000E                     _USBCheckMSDRequest$2535:
  6702                           	opt stack 0
  6703  00000E                     _MSDTransferTerminated$2623:
  6704                           	opt stack 0
  6705                           
  6706                           ; 2 bytes @ 0xD
  6707  00000E                     	ds	1
  6708  00000F                     i2c_eeprom_write@length:
  6709                           	opt stack 0
  6710                           
  6711                           ; 1 bytes @ 0xE
  6712  00000F                     	ds	1
  6713  000010                     ??_i2c_eeprom_write:
  6714  000010                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  6715                           	opt stack 0
  6716                           
  6717                           ; 2 bytes @ 0xF
  6718  000010                     	ds	2
  6719  000012                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  6720                           	opt stack 0
  6721                           
  6722                           ; 2 bytes @ 0x11
  6723  000012                     	ds	1
  6724  000013                     i2c_eeprom_write@dat:
  6725                           	opt stack 0
  6726                           
  6727                           ; 17 bytes @ 0x12
  6728  000013                     	ds	1
  6729  000014                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  6730                           	opt stack 0
  6731                           
  6732                           ; 2 bytes @ 0x13
  6733  000014                     	ds	2
  6734  000016                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  6735                           
  6736                           ; 1 bytes @ 0x15
  6737  000016                     	ds	2
  6738  000018                     ??_USBStdFeatureReqHandler:
  6739  000018                     USBStdSetCfgHandler@i:
  6740                           	opt stack 0
  6741                           
  6742                           ; 1 bytes @ 0x17
  6743  000018                     	ds	1
  6744  000019                     USBStdFeatureReqHandler@pUEP:
  6745                           	opt stack 0
  6746                           
  6747                           ; 2 bytes @ 0x18
  6748  000019                     	ds	2
  6749  00001B                     USBStdFeatureReqHandler@current_ep_data:
  6750                           	opt stack 0
  6751                           
  6752                           ; 1 bytes @ 0x1A
  6753  00001B                     	ds	1
  6754  00001C                     USBStdFeatureReqHandler@p:
  6755                           	opt stack 0
  6756                           
  6757                           ; 2 bytes @ 0x1B
  6758  00001C                     	ds	2
  6759  00001E                     ??_USBCtrlEPService:
  6760  00001E                     
  6761                           ; 1 bytes @ 0x1D
  6762  00001E                     	ds	1
  6763  00001F                     USBDeviceTasks@i:
  6764                           	opt stack 0
  6765                           
  6766                           ; 1 bytes @ 0x1E
  6767  00001F                     	ds	5
  6768  000024                     i2c_eeprom_write@slave_address:
  6769                           	opt stack 0
  6770                           
  6771                           ; 1 bytes @ 0x23
  6772  000024                     	ds	1
  6773  000025                     i2c_eeprom_write@cntr:
  6774                           	opt stack 0
  6775                           
  6776                           ; 1 bytes @ 0x24
  6777  000025                     	ds	1
  6778  000026                     i2c_eeprom_save_position@buffer:
  6779                           	opt stack 0
  6780                           
  6781                           ; 11 bytes @ 0x25
  6782  000026                     	ds	11
  6783  000031                     ??_motor_isr:
  6784                           
  6785                           ; 1 bytes @ 0x30
  6786  000031                     	ds	16
  6787  000041                     motor_isr@steps_until_standstill:
  6788                           	opt stack 0
  6789                           
  6790                           ; 2 bytes @ 0x40
  6791  000041                     	ds	2
  6792  000043                     motor_isr@steps_until_standstill_if_accelerate:
  6793                           	opt stack 0
  6794                           
  6795                           ; 2 bytes @ 0x42
  6796  000043                     	ds	2
  6797  000045                     motor_isr@steps_remaining:
  6798                           	opt stack 0
  6799                           
  6800                           ; 4 bytes @ 0x44
  6801  000045                     	ds	4
  6802  000049                     ??_SYS_InterruptHigh:
  6803                           
  6804                           ; 1 bytes @ 0x48
  6805  000049                     	ds	14
  6806                           tblptru	equ	0xFF8
  6807                           tblptrh	equ	0xFF7
  6808                           tblptrl	equ	0xFF6
  6809                           tablat	equ	0xFF5
  6810                           postinc0	equ	0xFEE
  6811                           wreg	equ	0xFE8
  6812                           postdec1	equ	0xFE5
  6813                           fsr1h	equ	0xFE2
  6814                           fsr1l	equ	0xFE1
  6815                           
  6816 ;;
  6817 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  6818 ;;
  6819 ;; *************** function _main *****************
  6820 ;; Defined at:
  6821 ;;		line 49 in file "main.c"
  6822 ;; Parameters:    Size  Location     Type
  6823 ;;		None
  6824 ;; Auto vars:     Size  Location     Type
  6825 ;;  startup_time    1  158[BANK0 ] unsigned char 
  6826 ;; Return value:  Size  Location     Type
  6827 ;;                  1    wreg      void 
  6828 ;; Registers used:
  6829 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  6830 ;; Tracked objects:
  6831 ;;		On entry : 0/0
  6832 ;;		On exit  : 0/0
  6833 ;;		Unchanged: 0/0
  6834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6836 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6838 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6839 ;;Total ram usage:        1 bytes
  6840 ;; Hardware stack levels required when called:   22
  6841 ;; This function calls:
  6842 ;;		_APP_DeviceCustomHIDTasks
  6843 ;;		_APP_DeviceMSDTasks
  6844 ;;		_SYSTEM_Initialize
  6845 ;;		_USBDeviceAttach
  6846 ;;		_USBDeviceInit
  6847 ;;		_adc_read_temperature
  6848 ;;		_display_prepare
  6849 ;;		_display_update
  6850 ;;		_encoder_statemachine
  6851 ;;		_motor_calculate_position_in_degrees
  6852 ;;		_motor_process_cue
  6853 ;;		_system_init
  6854 ;; This function is called by:
  6855 ;;		Startup code after reset
  6856 ;; This function uses a non-reentrant model
  6857 ;;
  6858                           
  6859                           	psect	text0
  6860  013B06                     __ptext0:
  6861                           	opt stack 0
  6862  013B06                     _main:
  6863                           	opt stack 9
  6864                           
  6865                           ;main.c: 51: uint8_t startup_timer;;main.c: 55: system_init();
  6866                           
  6867                           ;incstack = 0
  6868  013B06  EC2C  F07C         	call	_system_init	;wreg free
  6869                           
  6870                           ;main.c: 57: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  6871  013B0A  0E00               	movlw	0
  6872  013B0C  EC93  F0A6         	call	_SYSTEM_Initialize
  6873                           
  6874                           ;main.c: 59: USBDeviceInit();
  6875  013B10  EC94  F07F         	call	_USBDeviceInit	;wreg free
  6876                           
  6877                           ;main.c: 60: USBDeviceAttach();
  6878  013B14  EC20  F0AD         	call	_USBDeviceAttach	;wreg free
  6879                           
  6880                           ;main.c: 63: startup_timer = 150;
  6881  013B18  0E96               	movlw	150
  6882  013B1A  0100               	movlb	0	; () banked
  6883  013B1C  6FFE               	movwf	main@startup_timer& (0+255),b
  6884                           
  6885                           ;main.c: 64: while(startup_timer)
  6886  013B1E  D00D               	goto	l863
  6887  013B20                     
  6888                           ; BSR set to: 0
  6889                           ;main.c: 65: {;main.c: 67: APP_DeviceMSDTasks();
  6890                           
  6891                           ; BSR set to: 0
  6892  013B20  ECD2  F0AF         	call	_APP_DeviceMSDTasks	;wreg free
  6893                           
  6894                           ;main.c: 69: if(!os.done)
  6895  013B24  0101               	movlb	1	; () banked
  6896  013B26  5167               	movf	(_os+2)& (0+255),w,b	;volatile
  6897  013B28  A4D8               	btfss	status,2,c
  6898  013B2A  D007               	goto	l863
  6899                           
  6900                           ; BSR set to: 1
  6901                           ;main.c: 70: {;main.c: 72: APP_DeviceCustomHIDTasks();
  6902  013B2C  EC0D  F09B         	call	_APP_DeviceCustomHIDTasks	;wreg free
  6903                           
  6904                           ;main.c: 74: --startup_timer;
  6905  013B30  0100               	movlb	0	; () banked
  6906  013B32  07FE               	decf	main@startup_timer& (0+255),f,b
  6907                           
  6908                           ; BSR set to: 0
  6909                           ;main.c: 75: os.done = 1;
  6910  013B34  0E01               	movlw	1
  6911  013B36  0101               	movlb	1	; () banked
  6912  013B38  6F67               	movwf	(_os+2)& (0+255),b	;volatile
  6913  013B3A                     l863:
  6914                           
  6915                           ; BSR set to: 1
  6916                           
  6917                           ; BSR set to: 1
  6918  013B3A  0100               	movlb	0	; () banked
  6919  013B3C  51FE               	movf	main@startup_timer& (0+255),w,b
  6920  013B3E  A4D8               	btfss	status,2,c
  6921  013B40  D7EF               	goto	l862
  6922  013B42                     u19420:
  6923                           
  6924                           ;main.c: 81: {;main.c: 83: APP_DeviceMSDTasks();
  6925                           
  6926                           ; BSR set to: 0
  6927                           
  6928                           ;main.c: 76: };main.c: 78: };main.c: 80: while(1)
  6929                           
  6930                           ; BSR set to: 0
  6931  013B42  ECD2  F0AF         	call	_APP_DeviceMSDTasks	;wreg free
  6932                           
  6933                           ;main.c: 85: if(!os.done)
  6934  013B46  0101               	movlb	1	; () banked
  6935  013B48  5167               	movf	(_os+2)& (0+255),w,b	;volatile
  6936  013B4A  A4D8               	btfss	status,2,c
  6937  013B4C  D7FA               	goto	u19420
  6938                           
  6939                           ; BSR set to: 1
  6940  013B4E  0004               	clrwdt		;# 
  6941                           
  6942                           ;main.c: 91: APP_DeviceCustomHIDTasks();
  6943  013B50  EC0D  F09B         	call	_APP_DeviceCustomHIDTasks	;wreg free
  6944                           
  6945                           ;main.c: 94: encoder_statemachine();
  6946  013B54  ECE6  F057         	call	_encoder_statemachine	;wreg free
  6947                           
  6948                           ;main.c: 97: motor_process_cue();
  6949  013B58  EC05  F09C         	call	_motor_process_cue	;wreg free
  6950                           
  6951                           ;main.c: 100: adc_read_temperature();
  6952  013B5C  EC55  F075         	call	_adc_read_temperature	;wreg free
  6953                           
  6954                           ;main.c: 103: switch(os.timeSlot)
  6955  013B60  D008               	goto	l867
  6956  013B62                     
  6957                           ;main.c: 114: motor_calculate_position_in_degrees();
  6958  013B62  EC12  F093         	call	_motor_calculate_position_in_degrees	;wreg free
  6959  013B66                     
  6960                           ;main.c: 117: display_prepare();
  6961  013B66  ECA2  F051         	call	_display_prepare	;wreg free
  6962                           
  6963                           ;main.c: 118: break;
  6964  013B6A  D014               	goto	l869
  6965  013B6C                     
  6966                           ;main.c: 121: display_update();
  6967  013B6C  EC65  F0AC         	call	_display_update	;wreg free
  6968                           
  6969                           ;main.c: 123: }
  6970                           
  6971                           ;main.c: 122: break;
  6972  013B70  D011               	goto	l869
  6973  013B72                     l867:
  6974  013B72  0101               	movlb	1	; () banked
  6975  013B74  5166               	movf	(_os+1)& (0+255),w,b	;volatile
  6976                           
  6977                           ; Switch size 1, requested type "space"
  6978                           ; Number of cases is 5, Range of values is 0 to 7
  6979                           ; switch strategies available:
  6980                           ; Name         Instructions Cycles
  6981                           ; simple_byte           16     9 (average)
  6982                           ;	Chosen strategy is simple_byte
  6983  013B76  0A00               	xorlw	0	; case 0
  6984  013B78  B4D8               	btfsc	status,2,c
  6985  013B7A  D00C               	goto	l869
  6986  013B7C  0A01               	xorlw	1	; case 1
  6987  013B7E  B4D8               	btfsc	status,2,c
  6988  013B80  D009               	goto	l869
  6989  013B82  0A04               	xorlw	4	; case 5
  6990  013B84  B4D8               	btfsc	status,2,c
  6991  013B86  D7ED               	goto	l871
  6992  013B88  0A03               	xorlw	3	; case 6
  6993  013B8A  B4D8               	btfsc	status,2,c
  6994  013B8C  D7EC               	goto	l872
  6995  013B8E  0A01               	xorlw	1	; case 7
  6996  013B90  B4D8               	btfsc	status,2,c
  6997  013B92  D7EC               	goto	l873
  6998  013B94                     l869:
  6999                           
  7000                           ;main.c: 125: os.done = 1;
  7001                           
  7002                           ; BSR set to: 1
  7003  013B94  0E01               	movlw	1
  7004  013B96  0101               	movlb	1	; () banked
  7005  013B98  6F67               	movwf	(_os+2)& (0+255),b	;volatile
  7006                           
  7007                           ; BSR set to: 1
  7008                           
  7009                           ; BSR set to: 1
  7010  013B9A  D7D3               	goto	u19420
  7011  013B9C                     __end_of_main:
  7012                           	opt stack 0
  7013                           tblptru	equ	0xFF8
  7014                           tblptrh	equ	0xFF7
  7015                           tblptrl	equ	0xFF6
  7016                           tablat	equ	0xFF5
  7017                           postinc0	equ	0xFEE
  7018                           wreg	equ	0xFE8
  7019                           postdec1	equ	0xFE5
  7020                           fsr1h	equ	0xFE2
  7021                           fsr1l	equ	0xFE1
  7022                           status	equ	0xFD8
  7023                           
  7024 ;; *************** function _system_init *****************
  7025 ;; Defined at:
  7026 ;;		line 177 in file "os.c"
  7027 ;; Parameters:    Size  Location     Type
  7028 ;;		None
  7029 ;; Auto vars:     Size  Location     Type
  7030 ;;		None
  7031 ;; Return value:  Size  Location     Type
  7032 ;;                  1    wreg      void 
  7033 ;; Registers used:
  7034 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7035 ;; Tracked objects:
  7036 ;;		On entry : 0/0
  7037 ;;		On exit  : 0/0
  7038 ;;		Unchanged: 0/0
  7039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7042 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7043 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7044 ;;Total ram usage:        1 bytes
  7045 ;; Hardware stack levels used:    1
  7046 ;; Hardware stack levels required when called:   20
  7047 ;; This function calls:
  7048 ;;		__backlight_init
  7049 ;;		__system_pin_setup
  7050 ;;		__system_timer0_init
  7051 ;;		_adc_init
  7052 ;;		_configFile_read
  7053 ;;		_configFile_readDefault
  7054 ;;		_configFile_write
  7055 ;;		_display_init
  7056 ;;		_display_update
  7057 ;;		_encoder_init
  7058 ;;		_fat_init
  7059 ;;		_flash_init
  7060 ;;		_i2c_eeprom_recover_position
  7061 ;;		_i2c_init
  7062 ;;		_motor_calculate_position_in_degrees
  7063 ;;		_motor_init
  7064 ;; This function is called by:
  7065 ;;		_main
  7066 ;; This function uses a non-reentrant model
  7067 ;;
  7068                           
  7069                           	psect	text1
  7070  00F858                     __ptext1:
  7071                           	opt stack 0
  7072  00F858                     _system_init:
  7073                           	opt stack 10
  7074                           
  7075                           ;os.c: 180: _system_pin_setup();
  7076                           
  7077                           ; BSR set to: 1
  7078                           ;incstack = 0
  7079  00F858  EC4D  F0A4         	call	__system_pin_setup	;wreg free
  7080                           
  7081                           ;os.c: 183: adc_init();
  7082  00F85C  EC46  F0A7         	call	_adc_init	;wreg free
  7083                           
  7084                           ;os.c: 186: flash_init();
  7085  00F860  ECF3  F0AF         	call	_flash_init	;wreg free
  7086                           
  7087                           ;os.c: 189: fat_init();
  7088  00F864  ECDB  F0AF         	call	_fat_init	;wreg free
  7089                           
  7090                           ;os.c: 192: encoder_init();
  7091  00F868  ECD6  F0AE         	call	_encoder_init	;wreg free
  7092                           
  7093                           ;os.c: 195: i2c_init();
  7094  00F86C  EC6F  F0AF         	call	_i2c_init	;wreg free
  7095                           
  7096                           ;os.c: 198: display_init();
  7097  00F870  EC0F  F0AC         	call	_display_init	;wreg free
  7098                           
  7099                           ;os.c: 199: display_update();
  7100  00F874  EC65  F0AC         	call	_display_update	;wreg free
  7101                           
  7102                           ;os.c: 200: _backlight_init();
  7103  00F878  EC4A  F0B0         	call	__backlight_init	;wreg free
  7104                           
  7105                           ;os.c: 203: motor_init();
  7106  00F87C  EC60  F0AF         	call	_motor_init	;wreg free
  7107                           
  7108                           ;os.c: 206: configFile_readDefault();
  7109  00F880  EC8B  F0A2         	call	_configFile_readDefault	;wreg free
  7110                           
  7111                           ;os.c: 209: configFile_read();
  7112  00F884  ECCA  F079         	call	_configFile_read	;wreg free
  7113                           
  7114                           ;os.c: 212: configFile_write();
  7115  00F888  ECEC  F060         	call	_configFile_write	;wreg free
  7116                           
  7117                           ;os.c: 215: os.subTimeSlot = 0;
  7118  00F88C  0E00               	movlw	0
  7119  00F88E  0101               	movlb	1	; () banked
  7120  00F890  6F65               	movwf	_os& (0+255),b	;volatile
  7121                           
  7122                           ; BSR set to: 1
  7123                           ;os.c: 216: os.timeSlot = 0;
  7124  00F892  0E00               	movlw	0
  7125  00F894  6F66               	movwf	(_os+1)& (0+255),b	;volatile
  7126                           
  7127                           ; BSR set to: 1
  7128                           ;os.c: 217: os.done = 0;
  7129  00F896  0E00               	movlw	0
  7130  00F898  6F67               	movwf	(_os+2)& (0+255),b	;volatile
  7131                           
  7132                           ; BSR set to: 1
  7133                           ;os.c: 218: os.encoder1Count = 0;
  7134  00F89A  0E00               	movlw	0
  7135  00F89C  6F68               	movwf	(_os+3)& (0+255),b	;volatile
  7136                           
  7137                           ; BSR set to: 1
  7138                           ;os.c: 219: os.button1 = 0;
  7139  00F89E  0E00               	movlw	0
  7140  00F8A0  6F69               	movwf	(_os+4)& (0+255),b	;volatile
  7141                           
  7142                           ; BSR set to: 1
  7143                           ;os.c: 220: os.encoder2Count = 0;
  7144  00F8A2  0E00               	movlw	0
  7145  00F8A4  6F6A               	movwf	(_os+5)& (0+255),b	;volatile
  7146                           
  7147                           ; BSR set to: 1
  7148                           ;os.c: 221: os.button2 = 0;
  7149  00F8A6  0E00               	movlw	0
  7150  00F8A8  6F6B               	movwf	(_os+6)& (0+255),b	;volatile
  7151                           
  7152                           ; BSR set to: 1
  7153                           ;os.c: 222: os.current_position_in_steps = 0;
  7154  00F8AA  0E00               	movlw	0
  7155  00F8AC  6F6C               	movwf	(_os+7)& (0+255),b	;volatile
  7156  00F8AE  0E00               	movlw	0
  7157  00F8B0  6F6D               	movwf	(_os+8)& (0+255),b	;volatile
  7158  00F8B2  0E00               	movlw	0
  7159  00F8B4  6F6E               	movwf	(_os+9)& (0+255),b	;volatile
  7160  00F8B6  0E00               	movlw	0
  7161  00F8B8  6F6F               	movwf	(_os+10)& (0+255),b	;volatile
  7162                           
  7163                           ; BSR set to: 1
  7164                           ;os.c: 223: os.absolute_position = 0;
  7165  00F8BA  0E00               	movlw	0
  7166  00F8BC  6F71               	movwf	(_os+12)& (0+255),b	;volatile
  7167  00F8BE  0E00               	movlw	0
  7168  00F8C0  6F70               	movwf	(_os+11)& (0+255),b	;volatile
  7169                           
  7170                           ; BSR set to: 1
  7171                           ;os.c: 224: os.current_position_in_degrees = 0;
  7172  00F8C2  0E00               	movlw	0
  7173  00F8C4  6F73               	movwf	(_os+14)& (0+255),b	;volatile
  7174  00F8C6  0E00               	movlw	0
  7175  00F8C8  6F72               	movwf	(_os+13)& (0+255),b	;volatile
  7176                           
  7177                           ; BSR set to: 1
  7178                           ;os.c: 225: os.displayState = DISPLAY_STATE_MAIN_SETUP;
  7179  00F8CA  0E01               	movlw	1
  7180  00F8CC  6F74               	movwf	(_os+15)& (0+255),b	;volatile
  7181                           
  7182                           ; BSR set to: 1
  7183                           ;os.c: 226: os.busy = 0;
  7184  00F8CE  0E00               	movlw	0
  7185  00F8D0  6F75               	movwf	(_os+16)& (0+255),b	;volatile
  7186                           
  7187                           ; BSR set to: 1
  7188                           ;os.c: 227: os.setup_step_size = 0;
  7189  00F8D2  0E00               	movlw	0
  7190  00F8D4  6F77               	movwf	(_os+18)& (0+255),b	;volatile
  7191  00F8D6  0E00               	movlw	0
  7192  00F8D8  6F76               	movwf	(_os+17)& (0+255),b	;volatile
  7193                           
  7194                           ; BSR set to: 1
  7195                           ;os.c: 228: os.approach_direction = MOTOR_DIRECTION_CW;
  7196  00F8DA  0E01               	movlw	1
  7197  00F8DC  6F78               	movwf	(_os+19)& (0+255),b	;volatile
  7198                           
  7199                           ; BSR set to: 1
  7200                           ;os.c: 229: os.division = 36;
  7201  00F8DE  0E00               	movlw	0
  7202  00F8E0  6F7A               	movwf	(_os+21)& (0+255),b	;volatile
  7203  00F8E2  0E24               	movlw	36
  7204  00F8E4  6F79               	movwf	(_os+20)& (0+255),b	;volatile
  7205                           
  7206                           ; BSR set to: 1
  7207                           ;os.c: 230: os.divide_step_size = 10;
  7208  00F8E6  0E0A               	movlw	10
  7209  00F8E8  6F7B               	movwf	(_os+22)& (0+255),b	;volatile
  7210                           
  7211                           ; BSR set to: 1
  7212                           ;os.c: 231: os.divide_position = 0;
  7213  00F8EA  0E00               	movlw	0
  7214  00F8EC  6F7D               	movwf	(_os+24)& (0+255),b	;volatile
  7215  00F8EE  0E00               	movlw	0
  7216  00F8F0  6F7C               	movwf	(_os+23)& (0+255),b	;volatile
  7217                           
  7218                           ; BSR set to: 1
  7219                           ;os.c: 232: os.divide_jump_size = 1;
  7220  00F8F2  0E00               	movlw	0
  7221  00F8F4  6F7F               	movwf	(_os+26)& (0+255),b	;volatile
  7222  00F8F6  0E01               	movlw	1
  7223  00F8F8  6F7E               	movwf	(_os+25)& (0+255),b	;volatile
  7224                           
  7225                           ; BSR set to: 1
  7226                           ;os.c: 233: os.arc_step_size = 1000;
  7227  00F8FA  0E03               	movlw	3
  7228  00F8FC  6F81               	movwf	(_os+28)& (0+255),b	;volatile
  7229  00F8FE  0EE8               	movlw	232
  7230  00F900  6F80               	movwf	(_os+27)& (0+255),b	;volatile
  7231                           
  7232                           ; BSR set to: 1
  7233                           ;os.c: 234: os.arc_size = 1000;
  7234  00F902  0EE8               	movlw	232
  7235  00F904  6F82               	movwf	(_os+29)& (0+255),b	;volatile
  7236  00F906  0E03               	movlw	3
  7237  00F908  6F83               	movwf	(_os+30)& (0+255),b	;volatile
  7238  00F90A  0E00               	movlw	0
  7239  00F90C  6F84               	movwf	(_os+31)& (0+255),b	;volatile
  7240  00F90E  0E00               	movlw	0
  7241  00F910  6F85               	movwf	(_os+32)& (0+255),b	;volatile
  7242                           
  7243                           ; BSR set to: 1
  7244                           ;os.c: 235: os.arc_speed = config.initial_speed_arc;
  7245  00F912  C1A3  F186         	movff	_config+13,_os+33	;volatile
  7246  00F916  C1A4  F187         	movff	_config+14,_os+34	;volatile
  7247                           
  7248                           ; BSR set to: 1
  7249                           ;os.c: 236: os.arc_direction = MOTOR_DIRECTION_CW;
  7250  00F91A  0E01               	movlw	1
  7251  00F91C  6F88               	movwf	(_os+35)& (0+255),b	;volatile
  7252                           
  7253                           ; BSR set to: 1
  7254                           ;os.c: 237: os.manual_speed = config.initial_speed_manual;
  7255  00F91E  C1A7  F189         	movff	_config+17,_os+36	;volatile
  7256  00F922  C1A8  F18A         	movff	_config+18,_os+37	;volatile
  7257                           
  7258                           ; BSR set to: 1
  7259                           ;os.c: 238: os.manual_direction = MOTOR_DIRECTION_CW;
  7260  00F926  0E01               	movlw	1
  7261  00F928  6F8B               	movwf	(_os+38)& (0+255),b	;volatile
  7262                           
  7263                           ; BSR set to: 1
  7264                           ;os.c: 239: os.beep_count = 0;
  7265  00F92A  0E00               	movlw	0
  7266  00F92C  6F8C               	movwf	(_os+39)& (0+255),b	;volatile
  7267                           
  7268                           ; BSR set to: 1
  7269                           ;os.c: 240: os.temperature[0] = 0;
  7270  00F92E  0E00               	movlw	0
  7271  00F930  6F8E               	movwf	(_os+41)& (0+255),b	;volatile
  7272  00F932  0E00               	movlw	0
  7273  00F934  6F8D               	movwf	(_os+40)& (0+255),b	;volatile
  7274                           
  7275                           ; BSR set to: 1
  7276                           ;os.c: 241: os.temperature[1] = 0;
  7277  00F936  0E00               	movlw	0
  7278  00F938  6F90               	movwf	(_os+43)& (0+255),b	;volatile
  7279  00F93A  0E00               	movlw	0
  7280  00F93C  6F8F               	movwf	(_os+42)& (0+255),b	;volatile
  7281                           
  7282                           ; BSR set to: 1
  7283                           ;os.c: 242: os.external_temperature_adc_sum = 0;
  7284  00F93E  0E00               	movlw	0
  7285  00F940  6F92               	movwf	(_os+45)& (0+255),b	;volatile
  7286  00F942  0E00               	movlw	0
  7287  00F944  6F91               	movwf	(_os+44)& (0+255),b	;volatile
  7288                           
  7289                           ; BSR set to: 1
  7290                           ;os.c: 243: os.external_temperature_count = 0;
  7291  00F946  0E00               	movlw	0
  7292  00F948  6F93               	movwf	(_os+46)& (0+255),b	;volatile
  7293                           
  7294                           ; BSR set to: 1
  7295                           ;os.c: 244: os.fan_on = 0;
  7296  00F94A  0E00               	movlw	0
  7297  00F94C  6F94               	movwf	(_os+47)& (0+255),b	;volatile
  7298                           
  7299                           ; BSR set to: 1
  7300                           ;os.c: 245: os.brake_on = 0;
  7301  00F94E  0E00               	movlw	0
  7302  00F950  6F95               	movwf	(_os+48)& (0+255),b	;volatile
  7303                           
  7304                           ; BSR set to: 1
  7305                           ;os.c: 248: i2c_eeprom_recover_position();
  7306  00F952  EC9F  F09C         	call	_i2c_eeprom_recover_position	;wreg free
  7307                           
  7308                           ;os.c: 249: if(os.current_position_in_steps>config.full_circle_in_steps)
  7309  00F956  0101               	movlb	1	; () banked
  7310  00F958  516C               	movf	(_os+7)& (0+255),w,b	;volatile
  7311  00F95A  5D96               	subwf	_config& (0+255),w,b
  7312  00F95C  516D               	movf	(_os+8)& (0+255),w,b	;volatile
  7313  00F95E  5997               	subwfb	(_config+1)& (0+255),w,b
  7314  00F960  516E               	movf	(_os+9)& (0+255),w,b	;volatile
  7315  00F962  5998               	subwfb	(_config+2)& (0+255),w,b
  7316  00F964  516F               	movf	(_os+10)& (0+255),w,b	;volatile
  7317  00F966  5999               	subwfb	(_config+3)& (0+255),w,b
  7318  00F968  B0D8               	btfsc	status,0,c
  7319  00F96A  D00C               	goto	l1082
  7320                           
  7321                           ; BSR set to: 1
  7322                           ;os.c: 250: {;os.c: 251: os.current_position_in_steps = 0;
  7323  00F96C  0E00               	movlw	0
  7324  00F96E  6F6C               	movwf	(_os+7)& (0+255),b	;volatile
  7325  00F970  0E00               	movlw	0
  7326  00F972  6F6D               	movwf	(_os+8)& (0+255),b	;volatile
  7327  00F974  0E00               	movlw	0
  7328  00F976  6F6E               	movwf	(_os+9)& (0+255),b	;volatile
  7329  00F978  0E00               	movlw	0
  7330  00F97A  6F6F               	movwf	(_os+10)& (0+255),b	;volatile
  7331                           
  7332                           ;os.c: 252: os.absolute_position = 0;
  7333  00F97C  0E00               	movlw	0
  7334  00F97E  6F71               	movwf	(_os+12)& (0+255),b	;volatile
  7335  00F980  0E00               	movlw	0
  7336  00F982  6F70               	movwf	(_os+11)& (0+255),b	;volatile
  7337  00F984                     l1082:
  7338                           
  7339                           ; BSR set to: 1
  7340                           ;os.c: 253: };os.c: 254: motor_calculate_position_in_degrees();
  7341                           
  7342                           ; BSR set to: 1
  7343  00F984  EC12  F093         	call	_motor_calculate_position_in_degrees	;wreg free
  7344                           
  7345                           ;os.c: 255: if(os.division>3600 || os.divide_position>=os.division)
  7346  00F988  0101               	movlb	1	; () banked
  7347  00F98A  BF7A               	btfsc	(_os+21)& (0+255),7,b	;volatile
  7348  00F98C  D006               	goto	u17720
  7349  00F98E  0E11               	movlw	17
  7350  00F990  5D79               	subwf	(_os+20)& (0+255),w,b	;volatile
  7351  00F992  0E0E               	movlw	14
  7352  00F994  597A               	subwfb	(_os+21)& (0+255),w,b	;volatile
  7353  00F996  B0D8               	btfsc	status,0,c
  7354  00F998  D00D               	goto	u17730
  7355  00F99A                     u17720:
  7356                           
  7357                           ; BSR set to: 1
  7358  00F99A  5179               	movf	(_os+20)& (0+255),w,b	;volatile
  7359  00F99C  5D7C               	subwf	(_os+23)& (0+255),w,b	;volatile
  7360  00F99E  517D               	movf	(_os+24)& (0+255),w,b	;volatile
  7361  00F9A0  0A80               	xorlw	128
  7362  00F9A2  0100               	movlb	0	; () banked
  7363  00F9A4  6FFD               	movwf	??_system_init& (0+255),b
  7364  00F9A6  0101               	movlb	1	; () banked
  7365  00F9A8  517A               	movf	(_os+21)& (0+255),w,b	;volatile
  7366  00F9AA  0A80               	xorlw	128
  7367  00F9AC  0100               	movlb	0	; () banked
  7368  00F9AE  59FD               	subwfb	??_system_init& (0+255),w,b
  7369  00F9B0  A0D8               	btfss	status,0,c
  7370  00F9B2  D009               	goto	l1083
  7371  00F9B4                     u17730:
  7372                           
  7373                           ;os.c: 256: {;os.c: 257: os.division = 36;
  7374                           
  7375                           ; BSR set to: 0
  7376  00F9B4  0E00               	movlw	0
  7377  00F9B6  0101               	movlb	1	; () banked
  7378  00F9B8  6F7A               	movwf	(_os+21)& (0+255),b	;volatile
  7379  00F9BA  0E24               	movlw	36
  7380  00F9BC  6F79               	movwf	(_os+20)& (0+255),b	;volatile
  7381                           
  7382                           ;os.c: 258: os.divide_position = 0;
  7383  00F9BE  0E00               	movlw	0
  7384  00F9C0  6F7D               	movwf	(_os+24)& (0+255),b	;volatile
  7385  00F9C2  0E00               	movlw	0
  7386  00F9C4  6F7C               	movwf	(_os+23)& (0+255),b	;volatile
  7387  00F9C6                     l1083:
  7388                           
  7389                           ;os.c: 259: };os.c: 262: _system_timer0_init();
  7390                           
  7391                           ; BSR set to: 1
  7392  00F9C6  ECF5  F0AD         	call	__system_timer0_init	;wreg free
  7393  00F9CA  0012               	return		;funcret
  7394  00F9CC                     __end_of_system_init:
  7395                           	opt stack 0
  7396                           tblptru	equ	0xFF8
  7397                           tblptrh	equ	0xFF7
  7398                           tblptrl	equ	0xFF6
  7399                           tablat	equ	0xFF5
  7400                           postinc0	equ	0xFEE
  7401                           wreg	equ	0xFE8
  7402                           postdec1	equ	0xFE5
  7403                           fsr1h	equ	0xFE2
  7404                           fsr1l	equ	0xFE1
  7405                           status	equ	0xFD8
  7406                           
  7407 ;; *************** function _motor_init *****************
  7408 ;; Defined at:
  7409 ;;		line 646 in file "motor.c"
  7410 ;; Parameters:    Size  Location     Type
  7411 ;;		None
  7412 ;; Auto vars:     Size  Location     Type
  7413 ;;		None
  7414 ;; Return value:  Size  Location     Type
  7415 ;;                  1    wreg      void 
  7416 ;; Registers used:
  7417 ;;		wreg, status,2
  7418 ;; Tracked objects:
  7419 ;;		On entry : 0/0
  7420 ;;		On exit  : 0/0
  7421 ;;		Unchanged: 0/0
  7422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7427 ;;Total ram usage:        0 bytes
  7428 ;; Hardware stack levels used:    1
  7429 ;; Hardware stack levels required when called:   10
  7430 ;; This function calls:
  7431 ;;		Nothing
  7432 ;; This function is called by:
  7433 ;;		_system_init
  7434 ;; This function uses a non-reentrant model
  7435 ;;
  7436                           
  7437                           	psect	text2
  7438  015EC0                     __ptext2:
  7439                           	opt stack 0
  7440  015EC0                     _motor_init:
  7441                           	opt stack 19
  7442                           
  7443                           ;motor.c: 649: motor_cue_read_index = 0;
  7444                           
  7445                           ;incstack = 0
  7446  015EC0  0E00               	movlw	0
  7447  015EC2  0101               	movlb	1	; () banked
  7448  015EC4  6F4D               	movwf	_motor_cue_read_index& (0+255),b
  7449                           
  7450                           ;motor.c: 650: motor_cue_write_index = 0;
  7451  015EC6  0E00               	movlw	0
  7452  015EC8  6F4C               	movwf	_motor_cue_write_index& (0+255),b
  7453                           
  7454                           ; BSR set to: 1
  7455                           ;motor.c: 656: CCPTMRS0bits.C2TSEL = 0b000;
  7456  015ECA  010F               	movlb	15	; () banked
  7457  015ECC  9752               	bcf	82,3,b	;volatile
  7458  015ECE  9952               	bcf	82,4,b	;volatile
  7459  015ED0  9B52               	bcf	82,5,b	;volatile
  7460                           
  7461                           ;motor.c: 661: CCP1CONbits.P1M = 0b00;
  7462  015ED2  0E3F               	movlw	-193
  7463  015ED4  16BA               	andwf	4026,f,c	;volatile
  7464                           
  7465                           ;motor.c: 664: CCP1CONbits.DC1B = 0b00;
  7466  015ED6  0ECF               	movlw	-49
  7467  015ED8  16BA               	andwf	4026,f,c	;volatile
  7468                           
  7469                           ; BSR set to: 15
  7470                           ;motor.c: 667: LATBbits.LB0 = 0;
  7471  015EDA  908A               	bcf	3978,0,c	;volatile
  7472                           
  7473                           ; BSR set to: 15
  7474  015EDC  0012               	return		;funcret
  7475  015EDE                     __end_of_motor_init:
  7476                           	opt stack 0
  7477                           tblptru	equ	0xFF8
  7478                           tblptrh	equ	0xFF7
  7479                           tblptrl	equ	0xFF6
  7480                           tablat	equ	0xFF5
  7481                           postinc0	equ	0xFEE
  7482                           wreg	equ	0xFE8
  7483                           postdec1	equ	0xFE5
  7484                           fsr1h	equ	0xFE2
  7485                           fsr1l	equ	0xFE1
  7486                           status	equ	0xFD8
  7487                           
  7488 ;; *************** function _motor_calculate_position_in_degrees *****************
  7489 ;; Defined at:
  7490 ;;		line 548 in file "motor.c"
  7491 ;; Parameters:    Size  Location     Type
  7492 ;;		None
  7493 ;; Auto vars:     Size  Location     Type
  7494 ;;  tmp             4   49[BANK0 ] float 
  7495 ;; Return value:  Size  Location     Type
  7496 ;;                  1    wreg      void 
  7497 ;; Registers used:
  7498 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7499 ;; Tracked objects:
  7500 ;;		On entry : 0/0
  7501 ;;		On exit  : 0/0
  7502 ;;		Unchanged: 0/0
  7503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7505 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7507 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7508 ;;Total ram usage:        4 bytes
  7509 ;; Hardware stack levels used:    1
  7510 ;; Hardware stack levels required when called:   11
  7511 ;; This function calls:
  7512 ;;		___fldiv
  7513 ;;		___flmul
  7514 ;;		___fltol
  7515 ;;		___xxtofl
  7516 ;; This function is called by:
  7517 ;;		_main
  7518 ;;		_system_init
  7519 ;; This function uses a non-reentrant model
  7520 ;;
  7521                           
  7522                           	psect	text3
  7523  012624                     __ptext3:
  7524                           	opt stack 0
  7525  012624                     _motor_calculate_position_in_degrees:
  7526                           	opt stack 18
  7527                           
  7528                           ;motor.c: 550: float tmp;;motor.c: 552: tmp = (float) os.current_position_in_steps;
  7529                           
  7530                           ; BSR set to: 15
  7531                           ;incstack = 0
  7532  012624  C16C  F06A         	movff	_os+7,___xxtofl@val	;volatile
  7533  012628  C16D  F06B         	movff	_os+8,___xxtofl@val+1	;volatile
  7534  01262C  C16E  F06C         	movff	_os+9,___xxtofl@val+2	;volatile
  7535  012630  C16F  F06D         	movff	_os+10,___xxtofl@val+3	;volatile
  7536  012634  0E00               	movlw	0
  7537  012636  EC24  F082         	call	___xxtofl
  7538  01263A  C06A  F091         	movff	?___xxtofl,motor_calculate_position_in_degrees@tmp
  7539  01263E  C06B  F092         	movff	?___xxtofl+1,motor_calculate_position_in_degrees@tmp+1
  7540  012642  C06C  F093         	movff	?___xxtofl+2,motor_calculate_position_in_degrees@tmp+2
  7541  012646  C06D  F094         	movff	?___xxtofl+3,motor_calculate_position_in_degrees@tmp+3
  7542                           
  7543                           ;motor.c: 553: tmp *= 36000;
  7544  01264A  C091  F078         	movff	motor_calculate_position_in_degrees@tmp,___flmul@b
  7545  01264E  C092  F079         	movff	motor_calculate_position_in_degrees@tmp+1,___flmul@b+1
  7546  012652  C093  F07A         	movff	motor_calculate_position_in_degrees@tmp+2,___flmul@b+2
  7547  012656  C094  F07B         	movff	motor_calculate_position_in_degrees@tmp+3,___flmul@b+3
  7548  01265A  0E00               	movlw	0
  7549  01265C  0100               	movlb	0	; () banked
  7550  01265E  6F7C               	movwf	___flmul@a& (0+255),b
  7551  012660  0EA0               	movlw	160
  7552  012662  6F7D               	movwf	(___flmul@a+1)& (0+255),b
  7553  012664  0E0C               	movlw	12
  7554  012666  6F7E               	movwf	(___flmul@a+2)& (0+255),b
  7555  012668  0E47               	movlw	71
  7556  01266A  6F7F               	movwf	(___flmul@a+3)& (0+255),b
  7557  01266C  ECDB  F064         	call	___flmul	;wreg free
  7558  012670  C078  F091         	movff	?___flmul,motor_calculate_position_in_degrees@tmp
  7559  012674  C079  F092         	movff	?___flmul+1,motor_calculate_position_in_degrees@tmp+1
  7560  012678  C07A  F093         	movff	?___flmul+2,motor_calculate_position_in_degrees@tmp+2
  7561  01267C  C07B  F094         	movff	?___flmul+3,motor_calculate_position_in_degrees@tmp+3
  7562                           
  7563                           ;motor.c: 554: tmp /= config.full_circle_in_steps;
  7564  012680  C091  F078         	movff	motor_calculate_position_in_degrees@tmp,___fldiv@b
  7565  012684  C092  F079         	movff	motor_calculate_position_in_degrees@tmp+1,___fldiv@b+1
  7566  012688  C093  F07A         	movff	motor_calculate_position_in_degrees@tmp+2,___fldiv@b+2
  7567  01268C  C094  F07B         	movff	motor_calculate_position_in_degrees@tmp+3,___fldiv@b+3
  7568  012690  C196  F06A         	movff	_config,___xxtofl@val
  7569  012694  C197  F06B         	movff	_config+1,___xxtofl@val+1
  7570  012698  C198  F06C         	movff	_config+2,___xxtofl@val+2
  7571  01269C  C199  F06D         	movff	_config+3,___xxtofl@val+3
  7572  0126A0  0E00               	movlw	0
  7573  0126A2  EC24  F082         	call	___xxtofl
  7574  0126A6  C06A  F07C         	movff	?___xxtofl,___fldiv@a
  7575  0126AA  C06B  F07D         	movff	?___xxtofl+1,___fldiv@a+1
  7576  0126AE  C06C  F07E         	movff	?___xxtofl+2,___fldiv@a+2
  7577  0126B2  C06D  F07F         	movff	?___xxtofl+3,___fldiv@a+3
  7578  0126B6  EC03  F06B         	call	___fldiv	;wreg free
  7579  0126BA  C078  F091         	movff	?___fldiv,motor_calculate_position_in_degrees@tmp
  7580  0126BE  C079  F092         	movff	?___fldiv+1,motor_calculate_position_in_degrees@tmp+1
  7581  0126C2  C07A  F093         	movff	?___fldiv+2,motor_calculate_position_in_degrees@tmp+2
  7582  0126C6  C07B  F094         	movff	?___fldiv+3,motor_calculate_position_in_degrees@tmp+3
  7583                           
  7584                           ;motor.c: 556: os.current_position_in_degrees = (uint16_t) tmp;
  7585  0126CA  C091  F060         	movff	motor_calculate_position_in_degrees@tmp,___fltol@f1
  7586  0126CE  C092  F061         	movff	motor_calculate_position_in_degrees@tmp+1,___fltol@f1+1
  7587  0126D2  C093  F062         	movff	motor_calculate_position_in_degrees@tmp+2,___fltol@f1+2
  7588  0126D6  C094  F063         	movff	motor_calculate_position_in_degrees@tmp+3,___fltol@f1+3
  7589  0126DA  EC81  F093         	call	___fltol	;wreg free
  7590  0126DE  C060  F172         	movff	?___fltol,_os+13	;volatile
  7591  0126E2  C061  F173         	movff	?___fltol+1,_os+14	;volatile
  7592                           
  7593                           ;motor.c: 557: if(os.current_position_in_degrees==36000)
  7594  0126E6  0EA0               	movlw	160
  7595  0126E8  0101               	movlb	1	; () banked
  7596  0126EA  1972               	xorwf	(_os+13)& (0+255),w,b	;volatile
  7597  0126EC  E109               	bnz	l2547
  7598  0126EE  0E8C               	movlw	140
  7599  0126F0  1973               	xorwf	(_os+14)& (0+255),w,b	;volatile
  7600  0126F2  A4D8               	btfss	status,2,c
  7601  0126F4  0012               	return	
  7602                           
  7603                           ; BSR set to: 1
  7604                           ;motor.c: 558: {;motor.c: 560: os.current_position_in_degrees = 0;
  7605  0126F6  0E00               	movlw	0
  7606  0126F8  6F73               	movwf	(_os+14)& (0+255),b	;volatile
  7607  0126FA  0E00               	movlw	0
  7608  0126FC  6F72               	movwf	(_os+13)& (0+255),b	;volatile
  7609  0126FE  0012               	return	
  7610  012700                     l2547:
  7611                           
  7612                           ; BSR set to: 1
  7613  012700  0012               	return		;funcret
  7614  012702                     __end_of_motor_calculate_position_in_degrees:
  7615                           	opt stack 0
  7616                           tblptru	equ	0xFF8
  7617                           tblptrh	equ	0xFF7
  7618                           tblptrl	equ	0xFF6
  7619                           tablat	equ	0xFF5
  7620                           postinc0	equ	0xFEE
  7621                           wreg	equ	0xFE8
  7622                           postdec1	equ	0xFE5
  7623                           fsr1h	equ	0xFE2
  7624                           fsr1l	equ	0xFE1
  7625                           status	equ	0xFD8
  7626                           
  7627 ;; *************** function _i2c_init *****************
  7628 ;; Defined at:
  7629 ;;		line 26 in file "i2c.c"
  7630 ;; Parameters:    Size  Location     Type
  7631 ;;		None
  7632 ;; Auto vars:     Size  Location     Type
  7633 ;;		None
  7634 ;; Return value:  Size  Location     Type
  7635 ;;                  1    wreg      void 
  7636 ;; Registers used:
  7637 ;;		wreg, status,2
  7638 ;; Tracked objects:
  7639 ;;		On entry : 0/0
  7640 ;;		On exit  : 0/0
  7641 ;;		Unchanged: 0/0
  7642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7647 ;;Total ram usage:        0 bytes
  7648 ;; Hardware stack levels used:    1
  7649 ;; Hardware stack levels required when called:   10
  7650 ;; This function calls:
  7651 ;;		Nothing
  7652 ;; This function is called by:
  7653 ;;		_system_init
  7654 ;; This function uses a non-reentrant model
  7655 ;;
  7656                           
  7657                           	psect	text4
  7658  015EDE                     __ptext4:
  7659                           	opt stack 0
  7660  015EDE                     _i2c_init:
  7661                           	opt stack 19
  7662                           
  7663                           ;i2c.c: 28: TRISBbits.TRISB5 = 1;
  7664                           
  7665                           ; BSR set to: 1
  7666                           ;incstack = 0
  7667  015EDE  8A93               	bsf	3987,5,c	;volatile
  7668                           
  7669                           ;i2c.c: 29: TRISBbits.TRISB4 = 1;
  7670  015EE0  8893               	bsf	3987,4,c	;volatile
  7671                           
  7672                           ;i2c.c: 31: SSP1STATbits.SMP = 1;
  7673  015EE2  8EC7               	bsf	4039,7,c	;volatile
  7674                           
  7675                           ;i2c.c: 32: SSP1STATbits.CKE = 0;
  7676  015EE4  9CC7               	bcf	4039,6,c	;volatile
  7677                           
  7678                           ;i2c.c: 34: SSP1ADD = 119;
  7679  015EE6  0E77               	movlw	119
  7680  015EE8  6EC8               	movwf	4040,c	;volatile
  7681                           
  7682                           ;i2c.c: 36: SSP1CON1bits.WCOL = 0;
  7683  015EEA  9EC6               	bcf	4038,7,c	;volatile
  7684                           
  7685                           ;i2c.c: 37: SSP1CON1bits.SSPOV = 0;
  7686  015EEC  9CC6               	bcf	4038,6,c	;volatile
  7687                           
  7688                           ;i2c.c: 38: SSP1CON1bits.SSPM = 0b1000;
  7689  015EEE  50C6               	movf	4038,w,c	;volatile
  7690  015EF0  0BF0               	andlw	-16
  7691  015EF2  0908               	iorlw	8
  7692  015EF4  6EC6               	movwf	4038,c	;volatile
  7693                           
  7694                           ;i2c.c: 39: SSP1CON1bits.SSPEN = 1;
  7695  015EF6  8AC6               	bsf	4038,5,c	;volatile
  7696  015EF8  0012               	return		;funcret
  7697  015EFA                     __end_of_i2c_init:
  7698                           	opt stack 0
  7699                           tblptru	equ	0xFF8
  7700                           tblptrh	equ	0xFF7
  7701                           tblptrl	equ	0xFF6
  7702                           tablat	equ	0xFF5
  7703                           postinc0	equ	0xFEE
  7704                           wreg	equ	0xFE8
  7705                           postdec1	equ	0xFE5
  7706                           fsr1h	equ	0xFE2
  7707                           fsr1l	equ	0xFE1
  7708                           status	equ	0xFD8
  7709                           
  7710 ;; *************** function _i2c_eeprom_recover_position *****************
  7711 ;; Defined at:
  7712 ;;		line 316 in file "i2c.c"
  7713 ;; Parameters:    Size  Location     Type
  7714 ;;		None
  7715 ;; Auto vars:     Size  Location     Type
  7716 ;;  buffer         11   25[BANK0 ] unsigned char [11]
  7717 ;; Return value:  Size  Location     Type
  7718 ;;                  1    wreg      void 
  7719 ;; Registers used:
  7720 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7721 ;; Tracked objects:
  7722 ;;		On entry : 0/0
  7723 ;;		On exit  : 0/0
  7724 ;;		Unchanged: 0/0
  7725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7727 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7729 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7730 ;;Total ram usage:       11 bytes
  7731 ;; Hardware stack levels used:    1
  7732 ;; Hardware stack levels required when called:   13
  7733 ;; This function calls:
  7734 ;;		_i2c_eeprom_read
  7735 ;;		_memcpy
  7736 ;; This function is called by:
  7737 ;;		_system_init
  7738 ;; This function uses a non-reentrant model
  7739 ;;
  7740                           
  7741                           	psect	text5
  7742  01393E                     __ptext5:
  7743                           	opt stack 0
  7744  01393E                     _i2c_eeprom_recover_position:
  7745                           	opt stack 16
  7746                           
  7747                           ;i2c.c: 318: uint8_t buffer[11];;i2c.c: 324: i2c_eeprom_read(0x200, &buffer[0], 11);
  7748                           
  7749                           ;incstack = 0
  7750  01393E  0E02               	movlw	2
  7751  013940  0100               	movlb	0	; () banked
  7752  013942  6F72               	movwf	(i2c_eeprom_read@address+1)& (0+255),b
  7753  013944  0E00               	movlw	0
  7754  013946  6F71               	movwf	i2c_eeprom_read@address& (0+255),b
  7755  013948  0E79               	movlw	low i2c_eeprom_recover_position@buffer
  7756  01394A  6F73               	movwf	i2c_eeprom_read@data& (0+255),b
  7757  01394C  0E00               	movlw	high i2c_eeprom_recover_position@buffer
  7758  01394E  6F74               	movwf	(i2c_eeprom_read@data+1)& (0+255),b
  7759  013950  0E0B               	movlw	11
  7760  013952  6F75               	movwf	i2c_eeprom_read@length& (0+255),b
  7761  013954  ECF6  F0A7         	call	_i2c_eeprom_read	;wreg free
  7762                           
  7763                           ;i2c.c: 327: memcpy(&os.current_position_in_steps, &buffer[0], 4);
  7764  013958  0E6C               	movlw	low (_os+7)
  7765  01395A  0100               	movlb	0	; () banked
  7766  01395C  6F60               	movwf	memcpy@d1& (0+255),b
  7767  01395E  0E01               	movlw	high (_os+7)
  7768  013960  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  7769  013962  0E79               	movlw	low i2c_eeprom_recover_position@buffer
  7770  013964  6F62               	movwf	memcpy@s1& (0+255),b
  7771  013966  0E00               	movlw	high i2c_eeprom_recover_position@buffer
  7772  013968  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  7773  01396A  0E00               	movlw	0
  7774  01396C  6F65               	movwf	(memcpy@n+1)& (0+255),b
  7775  01396E  0E04               	movlw	4
  7776  013970  6F64               	movwf	memcpy@n& (0+255),b
  7777  013972  ECAC  F0A5         	call	_memcpy	;wreg free
  7778                           
  7779                           ;i2c.c: 328: memcpy(&os.absolute_position, &buffer[4], 2);
  7780  013976  0E70               	movlw	low (_os+11)
  7781  013978  0100               	movlb	0	; () banked
  7782  01397A  6F60               	movwf	memcpy@d1& (0+255),b
  7783  01397C  0E01               	movlw	high (_os+11)
  7784  01397E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  7785  013980  0E7D               	movlw	low (i2c_eeprom_recover_position@buffer+4)
  7786  013982  6F62               	movwf	memcpy@s1& (0+255),b
  7787  013984  0E00               	movlw	high (i2c_eeprom_recover_position@buffer+4)
  7788  013986  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  7789  013988  0E00               	movlw	0
  7790  01398A  6F65               	movwf	(memcpy@n+1)& (0+255),b
  7791  01398C  0E02               	movlw	2
  7792  01398E  6F64               	movwf	memcpy@n& (0+255),b
  7793  013990  ECAC  F0A5         	call	_memcpy	;wreg free
  7794                           
  7795                           ;i2c.c: 329: os.approach_direction = buffer[6];
  7796  013994  C07F  F178         	movff	i2c_eeprom_recover_position@buffer+6,_os+19	;volatile
  7797                           
  7798                           ;i2c.c: 330: memcpy(&os.division, &buffer[7], 2);
  7799  013998  0E79               	movlw	low (_os+20)
  7800  01399A  0100               	movlb	0	; () banked
  7801  01399C  6F60               	movwf	memcpy@d1& (0+255),b
  7802  01399E  0E01               	movlw	high (_os+20)
  7803  0139A0  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  7804  0139A2  0E80               	movlw	low (i2c_eeprom_recover_position@buffer+7)
  7805  0139A4  6F62               	movwf	memcpy@s1& (0+255),b
  7806  0139A6  0E00               	movlw	high (i2c_eeprom_recover_position@buffer+7)
  7807  0139A8  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  7808  0139AA  0E00               	movlw	0
  7809  0139AC  6F65               	movwf	(memcpy@n+1)& (0+255),b
  7810  0139AE  0E02               	movlw	2
  7811  0139B0  6F64               	movwf	memcpy@n& (0+255),b
  7812  0139B2  ECAC  F0A5         	call	_memcpy	;wreg free
  7813                           
  7814                           ;i2c.c: 331: memcpy(&os.divide_position, &buffer[9], 2);
  7815  0139B6  0E7C               	movlw	low (_os+23)
  7816  0139B8  0100               	movlb	0	; () banked
  7817  0139BA  6F60               	movwf	memcpy@d1& (0+255),b
  7818  0139BC  0E01               	movlw	high (_os+23)
  7819  0139BE  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  7820  0139C0  0E82               	movlw	low (i2c_eeprom_recover_position@buffer+9)
  7821  0139C2  6F62               	movwf	memcpy@s1& (0+255),b
  7822  0139C4  0E00               	movlw	high (i2c_eeprom_recover_position@buffer+9)
  7823  0139C6  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  7824  0139C8  0E00               	movlw	0
  7825  0139CA  6F65               	movwf	(memcpy@n+1)& (0+255),b
  7826  0139CC  0E02               	movlw	2
  7827  0139CE  6F64               	movwf	memcpy@n& (0+255),b
  7828  0139D0  ECAC  F0A5         	call	_memcpy	;wreg free
  7829  0139D4  0012               	return		;funcret
  7830  0139D6                     __end_of_i2c_eeprom_recover_position:
  7831                           	opt stack 0
  7832                           tblptru	equ	0xFF8
  7833                           tblptrh	equ	0xFF7
  7834                           tblptrl	equ	0xFF6
  7835                           tablat	equ	0xFF5
  7836                           postinc0	equ	0xFEE
  7837                           wreg	equ	0xFE8
  7838                           postdec1	equ	0xFE5
  7839                           fsr1h	equ	0xFE2
  7840                           fsr1l	equ	0xFE1
  7841                           status	equ	0xFD8
  7842                           
  7843 ;; *************** function _i2c_eeprom_read *****************
  7844 ;; Defined at:
  7845 ;;		line 277 in file "i2c.c"
  7846 ;; Parameters:    Size  Location     Type
  7847 ;;  address         2   17[BANK0 ] unsigned int 
  7848 ;;  data            2   19[BANK0 ] PTR unsigned char 
  7849 ;;		 -> i2c_eeprom_recover_position@buffer(11), i2c_eeprom_readInt16@data(2), i2c_eeprom_readUint32@data(4), i2c_eeprom_
      +readUint16@data(2), 
  7850 ;;  length          1   21[BANK0 ] unsigned char 
  7851 ;; Auto vars:     Size  Location     Type
  7852 ;;  slave_addres    1   24[BANK0 ] unsigned char 
  7853 ;;  addr            1   23[BANK0 ] unsigned char 
  7854 ;; Return value:  Size  Location     Type
  7855 ;;                  1    wreg      void 
  7856 ;; Registers used:
  7857 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7858 ;; Tracked objects:
  7859 ;;		On entry : 0/0
  7860 ;;		On exit  : 0/0
  7861 ;;		Unchanged: 0/0
  7862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7863 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7864 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7865 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7866 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7867 ;;Total ram usage:        8 bytes
  7868 ;; Hardware stack levels used:    1
  7869 ;; Hardware stack levels required when called:   12
  7870 ;; This function calls:
  7871 ;;		__i2c_eeprom_busy
  7872 ;;		__i2c_read
  7873 ;;		__i2c_write
  7874 ;; This function is called by:
  7875 ;;		_i2c_eeprom_recover_position
  7876 ;;		_i2c_eeprom_readUint16
  7877 ;;		_i2c_eeprom_readUint32
  7878 ;;		_i2c_eeprom_readInt16
  7879 ;; This function uses a non-reentrant model
  7880 ;;
  7881                           
  7882                           	psect	text6
  7883  014FEC                     __ptext6:
  7884                           	opt stack 0
  7885  014FEC                     _i2c_eeprom_read:
  7886                           	opt stack 16
  7887                           
  7888                           ;i2c.c: 279: uint8_t slave_address;;i2c.c: 280: uint8_t addr;;i2c.c: 281: addr = address
      +                           & 0xFF;
  7889                           
  7890                           ;incstack = 0
  7891  014FEC  C071  F077         	movff	i2c_eeprom_read@address,i2c_eeprom_read@addr
  7892                           
  7893                           ;i2c.c: 282: address &= 0b0000011100000000;
  7894  014FF0  0100               	movlb	0	; () banked
  7895  014FF2  0E00               	movlw	0
  7896  014FF4  1771               	andwf	i2c_eeprom_read@address& (0+255),f,b
  7897  014FF6  0E07               	movlw	7
  7898  014FF8  1772               	andwf	(i2c_eeprom_read@address+1)& (0+255),f,b
  7899                           
  7900                           ;i2c.c: 283: address >>= 7;
  7901  014FFA  0E07               	movlw	7
  7902  014FFC  6F76               	movwf	??_i2c_eeprom_read& (0+255),b
  7903  014FFE                     u15185:
  7904  014FFE  90D8               	bcf	status,0,c
  7905  015000  3372               	rrcf	(i2c_eeprom_read@address+1)& (0+255),f,b
  7906  015002  3371               	rrcf	i2c_eeprom_read@address& (0+255),f,b
  7907  015004  2F76               	decfsz	??_i2c_eeprom_read& (0+255),f,b
  7908  015006  D7FB               	goto	u15185
  7909                           
  7910                           ;i2c.c: 284: slave_address = 0b10100000 | address;
  7911  015008  5171               	movf	i2c_eeprom_read@address& (0+255),w,b
  7912  01500A  09A0               	iorlw	160
  7913  01500C  6F78               	movwf	i2c_eeprom_read@slave_address& (0+255),b
  7914  01500E                     
  7915                           ; BSR set to: 0
  7916                           
  7917                           ; BSR set to: 0
  7918  01500E  EC60  F0AE         	call	__i2c_eeprom_busy	;wreg free
  7919  015012  0900               	iorlw	0
  7920  015014  A4D8               	btfss	status,2,c
  7921  015016  D7FB               	goto	l1224
  7922                           
  7923                           ;i2c.c: 289: _i2c_write(slave_address, &addr, 1);
  7924  015018  0E77               	movlw	low i2c_eeprom_read@addr
  7925  01501A  0100               	movlb	0	; () banked
  7926  01501C  6F65               	movwf	__i2c_write@data& (0+255),b
  7927  01501E  0E00               	movlw	high i2c_eeprom_read@addr
  7928  015020  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  7929  015022  0E01               	movlw	1
  7930  015024  6F67               	movwf	__i2c_write@length& (0+255),b
  7931  015026  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
  7932  015028  EC6D  F0A9         	call	__i2c_write
  7933                           
  7934                           ;i2c.c: 290: _i2c_read(slave_address, &data[0], length);
  7935  01502C  C073  F065         	movff	i2c_eeprom_read@data,__i2c_read@data
  7936  015030  C074  F066         	movff	i2c_eeprom_read@data+1,__i2c_read@data+1
  7937  015034  C075  F067         	movff	i2c_eeprom_read@length,__i2c_read@length
  7938  015038  0100               	movlb	0	; () banked
  7939  01503A  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
  7940  01503C  ECCE  F09D         	call	__i2c_read
  7941  015040  0012               	return		;funcret
  7942  015042                     __end_of_i2c_eeprom_read:
  7943                           	opt stack 0
  7944                           tblptru	equ	0xFF8
  7945                           tblptrh	equ	0xFF7
  7946                           tblptrl	equ	0xFF6
  7947                           tablat	equ	0xFF5
  7948                           postinc0	equ	0xFEE
  7949                           wreg	equ	0xFE8
  7950                           postdec1	equ	0xFE5
  7951                           fsr1h	equ	0xFE2
  7952                           fsr1l	equ	0xFE1
  7953                           status	equ	0xFD8
  7954                           
  7955 ;; *************** function __i2c_read *****************
  7956 ;; Defined at:
  7957 ;;		line 105 in file "i2c.c"
  7958 ;; Parameters:    Size  Location     Type
  7959 ;;  slave_addres    1    wreg     unsigned char 
  7960 ;;  data            2    5[BANK0 ] PTR unsigned char 
  7961 ;;		 -> i2c_eeprom_recover_position@buffer(11), i2c_eeprom_readInt16@data(2), i2c_eeprom_readUint32@data(4), i2c_eeprom_
      +readUint16@data(2), 
  7962 ;;		 -> i2c_eeprom_readByte@addr(1), 
  7963 ;;  length          1    7[BANK0 ] unsigned char 
  7964 ;; Auto vars:     Size  Location     Type
  7965 ;;  slave_addres    1   15[BANK0 ] unsigned char 
  7966 ;;  cntr            1   16[BANK0 ] unsigned char 
  7967 ;; Return value:  Size  Location     Type
  7968 ;;                  1    wreg      void 
  7969 ;; Registers used:
  7970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7971 ;; Tracked objects:
  7972 ;;		On entry : 0/0
  7973 ;;		On exit  : 0/0
  7974 ;;		Unchanged: 0/0
  7975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7976 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7977 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7978 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7979 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7980 ;;Total ram usage:       12 bytes
  7981 ;; Hardware stack levels used:    1
  7982 ;; Hardware stack levels required when called:   11
  7983 ;; This function calls:
  7984 ;;		__i2c_acknowledge
  7985 ;;		__i2c_get
  7986 ;;		__i2c_not_acknowledge
  7987 ;;		__i2c_send
  7988 ;;		__i2c_start
  7989 ;;		__i2c_stop
  7990 ;;		__i2c_wait_idle
  7991 ;; This function is called by:
  7992 ;;		_i2c_eeprom_read
  7993 ;;		_i2c_eeprom_readByte
  7994 ;; This function uses a non-reentrant model
  7995 ;;
  7996                           
  7997                           	psect	text7
  7998  013B9C                     __ptext7:
  7999                           	opt stack 0
  8000  013B9C                     __i2c_read:
  8001                           	opt stack 16
  8002                           
  8003                           ;incstack = 0
  8004                           ;__i2c_read@slave_address stored from wreg
  8005  013B9C  0100               	movlb	0	; () banked
  8006  013B9E  6F6F               	movwf	__i2c_read@slave_address& (0+255),b
  8007                           
  8008                           ;i2c.c: 107: uint8_t cntr;;i2c.c: 109: _i2c_wait_idle();
  8009  013BA0  ECB6  F0A4         	call	__i2c_wait_idle	;wreg free
  8010                           
  8011                           ;i2c.c: 110: _i2c_start();
  8012  013BA4  EC3A  F0B0         	call	__i2c_start	;wreg free
  8013                           
  8014                           ;i2c.c: 111: _i2c_wait_idle();
  8015  013BA8  ECB6  F0A4         	call	__i2c_wait_idle	;wreg free
  8016                           
  8017                           ;i2c.c: 112: _i2c_send(slave_address | 0x01);
  8018  013BAC  0100               	movlb	0	; () banked
  8019  013BAE  516F               	movf	__i2c_read@slave_address& (0+255),w,b
  8020  013BB0  0901               	iorlw	1
  8021  013BB2  EC27  F0B0         	call	__i2c_send
  8022                           
  8023                           ;i2c.c: 113: _i2c_wait_idle();
  8024  013BB6  ECB6  F0A4         	call	__i2c_wait_idle	;wreg free
  8025                           
  8026                           ;i2c.c: 123: for(cntr=0; cntr<length-1; ++cntr)
  8027  013BBA  0E00               	movlw	0
  8028  013BBC  0100               	movlb	0	; () banked
  8029  013BBE  6F70               	movwf	__i2c_read@cntr& (0+255),b
  8030  013BC0  D00F               	goto	l1169
  8031  013BC2                     
  8032                           ; BSR set to: 0
  8033                           ;i2c.c: 124: {;i2c.c: 125: data[cntr] = _i2c_get();
  8034                           
  8035                           ; BSR set to: 0
  8036  013BC2  5170               	movf	__i2c_read@cntr& (0+255),w,b
  8037  013BC4  0D01               	mullw	1
  8038  013BC6  50F3               	movf	prodl,w,c
  8039  013BC8  2565               	addwf	__i2c_read@data& (0+255),w,b
  8040  013BCA  6ED9               	movwf	fsr2l,c
  8041  013BCC  50F4               	movf	prodh,w,c
  8042  013BCE  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
  8043  013BD0  6EDA               	movwf	fsr2h,c
  8044  013BD2  EC1D  F0B0         	call	__i2c_get	;wreg free
  8045  013BD6  6EDF               	movwf	indf2,c
  8046                           
  8047                           ;i2c.c: 126: _i2c_acknowledge();
  8048  013BD8  EC22  F0B0         	call	__i2c_acknowledge	;wreg free
  8049  013BDC  0100               	movlb	0	; () banked
  8050  013BDE  2B70               	incf	__i2c_read@cntr& (0+255),f,b
  8051  013BE0                     l1169:
  8052                           
  8053                           ; BSR set to: 0
  8054                           
  8055                           ; BSR set to: 0
  8056  013BE0  0EFF               	movlw	255
  8057  013BE2  6F68               	movwf	??__i2c_read& (0+255),b
  8058  013BE4  0EFF               	movlw	255
  8059  013BE6  6F69               	movwf	(??__i2c_read+1)& (0+255),b
  8060  013BE8  5167               	movf	__i2c_read@length& (0+255),w,b
  8061  013BEA  6F6A               	movwf	(??__i2c_read+2)& (0+255),b
  8062  013BEC  6B6B               	clrf	(??__i2c_read+3)& (0+255),b
  8063  013BEE  5168               	movf	??__i2c_read& (0+255),w,b
  8064  013BF0  276A               	addwf	(??__i2c_read+2)& (0+255),f,b
  8065  013BF2  5169               	movf	(??__i2c_read+1)& (0+255),w,b
  8066  013BF4  236B               	addwfc	(??__i2c_read+3)& (0+255),f,b
  8067  013BF6  5170               	movf	__i2c_read@cntr& (0+255),w,b
  8068  013BF8  6F6C               	movwf	(??__i2c_read+4)& (0+255),b
  8069  013BFA  6B6D               	clrf	(??__i2c_read+5)& (0+255),b
  8070  013BFC  516A               	movf	(??__i2c_read+2)& (0+255),w,b
  8071  013BFE  5D6C               	subwf	(??__i2c_read+4)& (0+255),w,b
  8072  013C00  516D               	movf	(??__i2c_read+5)& (0+255),w,b
  8073  013C02  0A80               	xorlw	128
  8074  013C04  6F6E               	movwf	(??__i2c_read+6)& (0+255),b
  8075  013C06  516B               	movf	(??__i2c_read+3)& (0+255),w,b
  8076  013C08  0A80               	xorlw	128
  8077  013C0A  596E               	subwfb	(??__i2c_read+6)& (0+255),w,b
  8078  013C0C  A0D8               	btfss	status,0,c
  8079  013C0E  D7D9               	goto	l1170
  8080                           
  8081                           ; BSR set to: 0
  8082                           ;i2c.c: 127: };i2c.c: 128: data[cntr] = _i2c_get();
  8083                           
  8084                           ; BSR set to: 0
  8085  013C10  5170               	movf	__i2c_read@cntr& (0+255),w,b
  8086  013C12  0D01               	mullw	1
  8087  013C14  50F3               	movf	prodl,w,c
  8088  013C16  2565               	addwf	__i2c_read@data& (0+255),w,b
  8089  013C18  6ED9               	movwf	fsr2l,c
  8090  013C1A  50F4               	movf	prodh,w,c
  8091  013C1C  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
  8092  013C1E  6EDA               	movwf	fsr2h,c
  8093  013C20  EC1D  F0B0         	call	__i2c_get	;wreg free
  8094  013C24  6EDF               	movwf	indf2,c
  8095                           
  8096                           ;i2c.c: 129: _i2c_not_acknowledge();
  8097  013C26  EC18  F0B0         	call	__i2c_not_acknowledge	;wreg free
  8098                           
  8099                           ;i2c.c: 131: _i2c_stop();
  8100  013C2A  EC36  F0B0         	call	__i2c_stop	;wreg free
  8101  013C2E  0012               	return		;funcret
  8102  013C30                     __end_of__i2c_read:
  8103                           	opt stack 0
  8104                           tblptru	equ	0xFF8
  8105                           tblptrh	equ	0xFF7
  8106                           tblptrl	equ	0xFF6
  8107                           tablat	equ	0xFF5
  8108                           prodh	equ	0xFF4
  8109                           prodl	equ	0xFF3
  8110                           postinc0	equ	0xFEE
  8111                           wreg	equ	0xFE8
  8112                           postdec1	equ	0xFE5
  8113                           fsr1h	equ	0xFE2
  8114                           fsr1l	equ	0xFE1
  8115                           indf2	equ	0xFDF
  8116                           fsr2h	equ	0xFDA
  8117                           fsr2l	equ	0xFD9
  8118                           status	equ	0xFD8
  8119                           
  8120 ;; *************** function __i2c_not_acknowledge *****************
  8121 ;; Defined at:
  8122 ;;		line 78 in file "i2c.c"
  8123 ;; Parameters:    Size  Location     Type
  8124 ;;		None
  8125 ;; Auto vars:     Size  Location     Type
  8126 ;;		None
  8127 ;; Return value:  Size  Location     Type
  8128 ;;                  1    wreg      void 
  8129 ;; Registers used:
  8130 ;;		None
  8131 ;; Tracked objects:
  8132 ;;		On entry : 0/0
  8133 ;;		On exit  : 0/0
  8134 ;;		Unchanged: 0/0
  8135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8140 ;;Total ram usage:        0 bytes
  8141 ;; Hardware stack levels used:    1
  8142 ;; Hardware stack levels required when called:   10
  8143 ;; This function calls:
  8144 ;;		Nothing
  8145 ;; This function is called by:
  8146 ;;		__i2c_read
  8147 ;;		_i2c_adc_read
  8148 ;; This function uses a non-reentrant model
  8149 ;;
  8150                           
  8151                           	psect	text8
  8152  016030                     __ptext8:
  8153                           	opt stack 0
  8154  016030                     __i2c_not_acknowledge:
  8155                           	opt stack 16
  8156                           
  8157                           ;i2c.c: 80: SSP1CON2bits.ACKDT = 1;
  8158                           
  8159                           ;incstack = 0
  8160  016030  8AC5               	bsf	4037,5,c	;volatile
  8161                           
  8162                           ;i2c.c: 81: SSP1CON2bits.ACKEN = 1;
  8163  016032  88C5               	bsf	4037,4,c	;volatile
  8164  016034  A8C5               	btfss	4037,4,c	;volatile
  8165  016036  0012               	return	
  8166  016038  D7FD               	goto	l1158
  8167  01603A                     __end_of__i2c_not_acknowledge:
  8168                           	opt stack 0
  8169                           tblptru	equ	0xFF8
  8170                           tblptrh	equ	0xFF7
  8171                           tblptrl	equ	0xFF6
  8172                           tablat	equ	0xFF5
  8173                           prodh	equ	0xFF4
  8174                           prodl	equ	0xFF3
  8175                           postinc0	equ	0xFEE
  8176                           wreg	equ	0xFE8
  8177                           postdec1	equ	0xFE5
  8178                           fsr1h	equ	0xFE2
  8179                           fsr1l	equ	0xFE1
  8180                           indf2	equ	0xFDF
  8181                           fsr2h	equ	0xFDA
  8182                           fsr2l	equ	0xFD9
  8183                           status	equ	0xFD8
  8184                           
  8185 ;; *************** function __i2c_get *****************
  8186 ;; Defined at:
  8187 ;;		line 58 in file "i2c.c"
  8188 ;; Parameters:    Size  Location     Type
  8189 ;;		None
  8190 ;; Auto vars:     Size  Location     Type
  8191 ;;		None
  8192 ;; Return value:  Size  Location     Type
  8193 ;;                  1    wreg      unsigned char 
  8194 ;; Registers used:
  8195 ;;		wreg, status,2
  8196 ;; Tracked objects:
  8197 ;;		On entry : 0/0
  8198 ;;		On exit  : 0/0
  8199 ;;		Unchanged: 0/0
  8200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8205 ;;Total ram usage:        0 bytes
  8206 ;; Hardware stack levels used:    1
  8207 ;; Hardware stack levels required when called:   10
  8208 ;; This function calls:
  8209 ;;		Nothing
  8210 ;; This function is called by:
  8211 ;;		__i2c_read
  8212 ;;		_i2c_adc_read
  8213 ;; This function uses a non-reentrant model
  8214 ;;
  8215                           
  8216                           	psect	text9
  8217  01603A                     __ptext9:
  8218                           	opt stack 0
  8219  01603A                     __i2c_get:
  8220                           	opt stack 16
  8221                           
  8222                           ;i2c.c: 60: SSP1CON2bits.RCEN = 1 ;
  8223                           
  8224                           ;incstack = 0
  8225  01603A  86C5               	bsf	4037,3,c	;volatile
  8226  01603C  B6C5               	btfsc	4037,3,c	;volatile
  8227  01603E  D7FE               	goto	l1140
  8228                           
  8229                           ;i2c.c: 62: return SSP1BUF;
  8230  016040  50C9               	movf	4041,w,c	;volatile
  8231  016042  0012               	return	
  8232  016044                     __end_of__i2c_get:
  8233                           	opt stack 0
  8234                           tblptru	equ	0xFF8
  8235                           tblptrh	equ	0xFF7
  8236                           tblptrl	equ	0xFF6
  8237                           tablat	equ	0xFF5
  8238                           prodh	equ	0xFF4
  8239                           prodl	equ	0xFF3
  8240                           postinc0	equ	0xFEE
  8241                           wreg	equ	0xFE8
  8242                           postdec1	equ	0xFE5
  8243                           fsr1h	equ	0xFE2
  8244                           fsr1l	equ	0xFE1
  8245                           indf2	equ	0xFDF
  8246                           fsr2h	equ	0xFDA
  8247                           fsr2l	equ	0xFD9
  8248                           status	equ	0xFD8
  8249                           
  8250 ;; *************** function __i2c_acknowledge *****************
  8251 ;; Defined at:
  8252 ;;		line 71 in file "i2c.c"
  8253 ;; Parameters:    Size  Location     Type
  8254 ;;		None
  8255 ;; Auto vars:     Size  Location     Type
  8256 ;;		None
  8257 ;; Return value:  Size  Location     Type
  8258 ;;                  1    wreg      void 
  8259 ;; Registers used:
  8260 ;;		None
  8261 ;; Tracked objects:
  8262 ;;		On entry : 0/0
  8263 ;;		On exit  : 0/0
  8264 ;;		Unchanged: 0/0
  8265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8270 ;;Total ram usage:        0 bytes
  8271 ;; Hardware stack levels used:    1
  8272 ;; Hardware stack levels required when called:   10
  8273 ;; This function calls:
  8274 ;;		Nothing
  8275 ;; This function is called by:
  8276 ;;		__i2c_read
  8277 ;;		_i2c_adc_read
  8278 ;; This function uses a non-reentrant model
  8279 ;;
  8280                           
  8281                           	psect	text10
  8282  016044                     __ptext10:
  8283                           	opt stack 0
  8284  016044                     __i2c_acknowledge:
  8285                           	opt stack 16
  8286                           
  8287                           ;i2c.c: 73: SSP1CON2bits.ACKDT = 0;
  8288                           
  8289                           ;incstack = 0
  8290  016044  9AC5               	bcf	4037,5,c	;volatile
  8291                           
  8292                           ;i2c.c: 74: SSP1CON2bits.ACKEN = 1;
  8293  016046  88C5               	bsf	4037,4,c	;volatile
  8294  016048  A8C5               	btfss	4037,4,c	;volatile
  8295  01604A  0012               	return	
  8296  01604C  D7FD               	goto	l1152
  8297  01604E                     __end_of__i2c_acknowledge:
  8298                           	opt stack 0
  8299                           tblptru	equ	0xFF8
  8300                           tblptrh	equ	0xFF7
  8301                           tblptrl	equ	0xFF6
  8302                           tablat	equ	0xFF5
  8303                           prodh	equ	0xFF4
  8304                           prodl	equ	0xFF3
  8305                           postinc0	equ	0xFEE
  8306                           wreg	equ	0xFE8
  8307                           postdec1	equ	0xFE5
  8308                           fsr1h	equ	0xFE2
  8309                           fsr1l	equ	0xFE1
  8310                           indf2	equ	0xFDF
  8311                           fsr2h	equ	0xFDA
  8312                           fsr2l	equ	0xFD9
  8313                           status	equ	0xFD8
  8314                           
  8315 ;; *************** function __i2c_eeprom_busy *****************
  8316 ;; Defined at:
  8317 ;;		line 171 in file "i2c.c"
  8318 ;; Parameters:    Size  Location     Type
  8319 ;;		None
  8320 ;; Auto vars:     Size  Location     Type
  8321 ;;  busy            1    5[BANK0 ] unsigned char 
  8322 ;; Return value:  Size  Location     Type
  8323 ;;                  1    wreg      unsigned char 
  8324 ;; Registers used:
  8325 ;;		wreg, status,2, status,0, cstack
  8326 ;; Tracked objects:
  8327 ;;		On entry : 0/0
  8328 ;;		On exit  : 0/0
  8329 ;;		Unchanged: 0/0
  8330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8332 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8334 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8335 ;;Total ram usage:        1 bytes
  8336 ;; Hardware stack levels used:    1
  8337 ;; Hardware stack levels required when called:   11
  8338 ;; This function calls:
  8339 ;;		__i2c_send
  8340 ;;		__i2c_start
  8341 ;;		__i2c_stop
  8342 ;;		__i2c_wait_idle
  8343 ;; This function is called by:
  8344 ;;		_i2c_eeprom_read
  8345 ;;		_i2c_eeprom_writeByte
  8346 ;;		_i2c_eeprom_readByte
  8347 ;; This function uses a non-reentrant model
  8348 ;;
  8349                           
  8350                           	psect	text11
  8351  015CC0                     __ptext11:
  8352                           	opt stack 0
  8353  015CC0                     __i2c_eeprom_busy:
  8354                           	opt stack 16
  8355                           
  8356                           ;i2c.c: 173: uint8_t busy;;i2c.c: 174: _i2c_wait_idle();
  8357                           
  8358                           ;incstack = 0
  8359  015CC0  ECB6  F0A4         	call	__i2c_wait_idle	;wreg free
  8360                           
  8361                           ;i2c.c: 175: _i2c_start();
  8362  015CC4  EC3A  F0B0         	call	__i2c_start	;wreg free
  8363                           
  8364                           ;i2c.c: 176: _i2c_wait_idle();
  8365  015CC8  ECB6  F0A4         	call	__i2c_wait_idle	;wreg free
  8366                           
  8367                           ;i2c.c: 177: _i2c_send(0b10100000);
  8368  015CCC  0EA0               	movlw	160
  8369  015CCE  EC27  F0B0         	call	__i2c_send
  8370                           
  8371                           ;i2c.c: 178: _i2c_wait_idle();
  8372  015CD2  ECB6  F0A4         	call	__i2c_wait_idle	;wreg free
  8373                           
  8374                           ;i2c.c: 182: busy = SSP1CON2bits.ACKSTAT;
  8375  015CD6  0E00               	movlw	0
  8376  015CD8  BCC5               	btfsc	4037,6,c	;volatile
  8377  015CDA  0E01               	movlw	1
  8378  015CDC  0100               	movlb	0	; () banked
  8379  015CDE  6F65               	movwf	__i2c_eeprom_busy@busy& (0+255),b
  8380                           
  8381                           ; BSR set to: 0
  8382                           ;i2c.c: 183: _i2c_stop();
  8383  015CE0  EC36  F0B0         	call	__i2c_stop	;wreg free
  8384                           
  8385                           ;i2c.c: 185: return 0;
  8386  015CE4  0E00               	movlw	0
  8387  015CE6  0012               	return	
  8388  015CE8                     __end_of__i2c_eeprom_busy:
  8389                           	opt stack 0
  8390                           tblptru	equ	0xFF8
  8391                           tblptrh	equ	0xFF7
  8392                           tblptrl	equ	0xFF6
  8393                           tablat	equ	0xFF5
  8394                           prodh	equ	0xFF4
  8395                           prodl	equ	0xFF3
  8396                           postinc0	equ	0xFEE
  8397                           wreg	equ	0xFE8
  8398                           postdec1	equ	0xFE5
  8399                           fsr1h	equ	0xFE2
  8400                           fsr1l	equ	0xFE1
  8401                           indf2	equ	0xFDF
  8402                           fsr2h	equ	0xFDA
  8403                           fsr2l	equ	0xFD9
  8404                           status	equ	0xFD8
  8405                           
  8406 ;; *************** function _flash_init *****************
  8407 ;; Defined at:
  8408 ;;		line 361 in file "flash.c"
  8409 ;; Parameters:    Size  Location     Type
  8410 ;;		None
  8411 ;; Auto vars:     Size  Location     Type
  8412 ;;		None
  8413 ;; Return value:  Size  Location     Type
  8414 ;;                  1    wreg      void 
  8415 ;; Registers used:
  8416 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8417 ;; Tracked objects:
  8418 ;;		On entry : 0/0
  8419 ;;		On exit  : 0/0
  8420 ;;		Unchanged: 0/0
  8421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8426 ;;Total ram usage:        0 bytes
  8427 ;; Hardware stack levels used:    1
  8428 ;; Hardware stack levels required when called:   14
  8429 ;; This function calls:
  8430 ;;		__flash_set_page_size
  8431 ;;		_spi_init
  8432 ;; This function is called by:
  8433 ;;		_system_init
  8434 ;; This function uses a non-reentrant model
  8435 ;;
  8436                           
  8437                           	psect	text12
  8438  015FE6                     __ptext12:
  8439                           	opt stack 0
  8440  015FE6                     _flash_init:
  8441                           	opt stack 15
  8442                           
  8443                           ;flash.c: 364: spi_init(SPI_CONFIGURATION_INTERNAL);
  8444                           
  8445                           ;incstack = 0
  8446  015FE6  0E00               	movlw	0
  8447  015FE8  EC74  F0AB         	call	_spi_init
  8448                           
  8449                           ;flash.c: 367: _flash_set_page_size(FLASH_PAGE_SIZE_512);
  8450  015FEC  0E00               	movlw	0
  8451  015FEE  EC73  F0A3         	call	__flash_set_page_size
  8452  015FF2  0012               	return		;funcret
  8453  015FF4                     __end_of_flash_init:
  8454                           	opt stack 0
  8455                           tblptru	equ	0xFF8
  8456                           tblptrh	equ	0xFF7
  8457                           tblptrl	equ	0xFF6
  8458                           tablat	equ	0xFF5
  8459                           prodh	equ	0xFF4
  8460                           prodl	equ	0xFF3
  8461                           postinc0	equ	0xFEE
  8462                           wreg	equ	0xFE8
  8463                           postdec1	equ	0xFE5
  8464                           fsr1h	equ	0xFE2
  8465                           fsr1l	equ	0xFE1
  8466                           indf2	equ	0xFDF
  8467                           fsr2h	equ	0xFDA
  8468                           fsr2l	equ	0xFD9
  8469                           status	equ	0xFD8
  8470                           
  8471 ;; *************** function _spi_init *****************
  8472 ;; Defined at:
  8473 ;;		line 89 in file "spi.c"
  8474 ;; Parameters:    Size  Location     Type
  8475 ;;  configuratio    1    wreg     enum E6878
  8476 ;; Auto vars:     Size  Location     Type
  8477 ;;  configuratio    1    3[BANK0 ] enum E6878
  8478 ;; Return value:  Size  Location     Type
  8479 ;;                  1    wreg      void 
  8480 ;; Registers used:
  8481 ;;		wreg, status,2, status,0, cstack
  8482 ;; Tracked objects:
  8483 ;;		On entry : 0/0
  8484 ;;		On exit  : 0/0
  8485 ;;		Unchanged: 0/0
  8486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8488 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8490 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8491 ;;Total ram usage:        1 bytes
  8492 ;; Hardware stack levels used:    1
  8493 ;; Hardware stack levels required when called:   11
  8494 ;; This function calls:
  8495 ;;		__spi_init
  8496 ;; This function is called by:
  8497 ;;		_flash_init
  8498 ;; This function uses a non-reentrant model
  8499 ;;
  8500                           
  8501                           	psect	text13
  8502  0156E8                     __ptext13:
  8503                           	opt stack 0
  8504  0156E8                     _spi_init:
  8505                           	opt stack 17
  8506                           
  8507                           ;incstack = 0
  8508                           ;spi_init@configuration stored from wreg
  8509  0156E8  0100               	movlb	0	; () banked
  8510  0156EA  6F63               	movwf	spi_init@configuration& (0+255),b
  8511                           
  8512                           ;spi.c: 91: switch(configuration)
  8513  0156EC  D012               	goto	l2191
  8514  0156EE                     
  8515                           ;spi.c: 94: _spi_init(config_internal);
  8516  0156EE  C12E  F060         	movff	_config_internal,__spi_init@details
  8517  0156F2  C12F  F061         	movff	_config_internal+1,__spi_init@details+1
  8518  0156F6  C130  F062         	movff	_config_internal+2,__spi_init@details+2
  8519  0156FA  EC49  F0AC         	call	__spi_init	;wreg free
  8520                           
  8521                           ;spi.c: 95: break;
  8522  0156FE  D011               	goto	l2193
  8523  015700                     
  8524                           ;spi.c: 98: _spi_init(config_external);
  8525  015700  C12B  F060         	movff	_config_external,__spi_init@details
  8526  015704  C12C  F061         	movff	_config_external+1,__spi_init@details+1
  8527  015708  C12D  F062         	movff	_config_external+2,__spi_init@details+2
  8528  01570C  EC49  F0AC         	call	__spi_init	;wreg free
  8529                           
  8530                           ;spi.c: 100: }
  8531                           
  8532                           ;spi.c: 99: break;
  8533  015710  D008               	goto	l2193
  8534  015712                     l2191:
  8535  015712  0100               	movlb	0	; () banked
  8536  015714  5163               	movf	spi_init@configuration& (0+255),w,b
  8537                           
  8538                           ; Switch size 1, requested type "space"
  8539                           ; Number of cases is 2, Range of values is 0 to 1
  8540                           ; switch strategies available:
  8541                           ; Name         Instructions Cycles
  8542                           ; simple_byte            7     4 (average)
  8543                           ;	Chosen strategy is simple_byte
  8544  015716  0A00               	xorlw	0	; case 0
  8545  015718  B4D8               	btfsc	status,2,c
  8546  01571A  D7E9               	goto	l2192
  8547  01571C  0A01               	xorlw	1	; case 1
  8548  01571E  B4D8               	btfsc	status,2,c
  8549  015720  D7EF               	goto	l2194
  8550  015722                     l2193:
  8551                           
  8552                           ;spi.c: 102: active_configuration = configuration;
  8553  015722  C063  F14E         	movff	spi_init@configuration,_active_configuration
  8554  015726  0012               	return		;funcret
  8555  015728                     __end_of_spi_init:
  8556                           	opt stack 0
  8557                           tblptru	equ	0xFF8
  8558                           tblptrh	equ	0xFF7
  8559                           tblptrl	equ	0xFF6
  8560                           tablat	equ	0xFF5
  8561                           prodh	equ	0xFF4
  8562                           prodl	equ	0xFF3
  8563                           postinc0	equ	0xFEE
  8564                           wreg	equ	0xFE8
  8565                           postdec1	equ	0xFE5
  8566                           fsr1h	equ	0xFE2
  8567                           fsr1l	equ	0xFE1
  8568                           indf2	equ	0xFDF
  8569                           fsr2h	equ	0xFDA
  8570                           fsr2l	equ	0xFD9
  8571                           status	equ	0xFD8
  8572                           
  8573 ;; *************** function __spi_init *****************
  8574 ;; Defined at:
  8575 ;;		line 24 in file "spi.c"
  8576 ;; Parameters:    Size  Location     Type
  8577 ;;  details         3    0[BANK0 ] struct .
  8578 ;; Auto vars:     Size  Location     Type
  8579 ;;		None
  8580 ;; Return value:  Size  Location     Type
  8581 ;;                  1    wreg      void 
  8582 ;; Registers used:
  8583 ;;		wreg, status,2
  8584 ;; Tracked objects:
  8585 ;;		On entry : 0/0
  8586 ;;		On exit  : 0/0
  8587 ;;		Unchanged: 0/0
  8588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8589 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8592 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8593 ;;Total ram usage:        3 bytes
  8594 ;; Hardware stack levels used:    1
  8595 ;; Hardware stack levels required when called:   10
  8596 ;; This function calls:
  8597 ;;		Nothing
  8598 ;; This function is called by:
  8599 ;;		_spi_init
  8600 ;; This function uses a non-reentrant model
  8601 ;;
  8602                           
  8603                           	psect	text14
  8604  015892                     __ptext14:
  8605                           	opt stack 0
  8606  015892                     __spi_init:
  8607                           	opt stack 17
  8608                           
  8609                           ;spi.c: 30: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  8610                           
  8611                           ;incstack = 0
  8612  015892  0E55               	movlw	85
  8613  015894  6EA7               	movwf	4007,c	;volsfr
  8614  015896  0EAA               	movlw	170
  8615  015898  6EA7               	movwf	4007,c	;volsfr
  8616  01589A  010E               	movlb	14	; () banked
  8617  01589C  91BF               	bcf	191,0,b	;volatile
  8618                           
  8619                           ;spi.c: 31: RPINR21 = 22;
  8620  01589E  0E16               	movlw	22
  8621  0158A0  6FFC               	movwf	252,b	;volatile
  8622                           
  8623                           ;spi.c: 32: RPOR21 = 10;
  8624  0158A2  0E0A               	movlw	10
  8625  0158A4  6FD5               	movwf	213,b	;volatile
  8626                           
  8627                           ;spi.c: 34: RPOR23 = 11;
  8628  0158A6  0E0B               	movlw	11
  8629  0158A8  6FD7               	movwf	215,b	;volatile
  8630                           
  8631                           ;spi.c: 35: RPINR22 = 23;
  8632  0158AA  0E17               	movlw	23
  8633  0158AC  6FFD               	movwf	253,b	;volatile
  8634                           
  8635                           ;spi.c: 36: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  8636  0158AE  0E55               	movlw	85
  8637  0158B0  6EA7               	movwf	4007,c	;volsfr
  8638  0158B2  0EAA               	movlw	170
  8639  0158B4  6EA7               	movwf	4007,c	;volsfr
  8640                           
  8641                           ; BSR set to: 14
  8642  0158B6  81BF               	bsf	191,0,b	;volatile
  8643                           
  8644                           ; BSR set to: 14
  8645                           ;spi.c: 39: SSP2STATbits.SMP = 1;
  8646  0158B8  8E73               	bsf	3955,7,c	;volatile
  8647                           
  8648                           ; BSR set to: 14
  8649                           ;spi.c: 40: SSP2STATbits.CKE = 1;
  8650  0158BA  8C73               	bsf	3955,6,c	;volatile
  8651                           
  8652                           ; BSR set to: 14
  8653                           ;spi.c: 41: SSP2CON1bits.CKP = 0;
  8654  0158BC  9872               	bcf	3954,4,c	;volatile
  8655                           
  8656                           ; BSR set to: 14
  8657                           ;spi.c: 42: SSP2CON1bits.SSPM =0b0000;
  8658  0158BE  9072               	bcf	3954,0,c	;volatile
  8659  0158C0  9272               	bcf	3954,1,c	;volatile
  8660  0158C2  9472               	bcf	3954,2,c	;volatile
  8661  0158C4  9672               	bcf	3954,3,c	;volatile
  8662                           
  8663                           ; BSR set to: 14
  8664                           ;spi.c: 43: SSP2CON1bits.SSPEN = 1;
  8665  0158C6  8A72               	bsf	3954,5,c	;volatile
  8666                           
  8667                           ; BSR set to: 14
  8668  0158C8  0012               	return		;funcret
  8669  0158CA                     __end_of__spi_init:
  8670                           	opt stack 0
  8671                           tblptru	equ	0xFF8
  8672                           tblptrh	equ	0xFF7
  8673                           tblptrl	equ	0xFF6
  8674                           tablat	equ	0xFF5
  8675                           prodh	equ	0xFF4
  8676                           prodl	equ	0xFF3
  8677                           postinc0	equ	0xFEE
  8678                           wreg	equ	0xFE8
  8679                           postdec1	equ	0xFE5
  8680                           fsr1h	equ	0xFE2
  8681                           fsr1l	equ	0xFE1
  8682                           indf2	equ	0xFDF
  8683                           fsr2h	equ	0xFDA
  8684                           fsr2l	equ	0xFD9
  8685                           status	equ	0xFD8
  8686                           
  8687 ;; *************** function __flash_set_page_size *****************
  8688 ;; Defined at:
  8689 ;;		line 99 in file "flash.c"
  8690 ;; Parameters:    Size  Location     Type
  8691 ;;  size            1    wreg     enum E7054
  8692 ;; Auto vars:     Size  Location     Type
  8693 ;;  size            1   23[BANK0 ] enum E7054
  8694 ;;  command         4   19[BANK0 ] unsigned char [4]
  8695 ;; Return value:  Size  Location     Type
  8696 ;;                  1    wreg      void 
  8697 ;; Registers used:
  8698 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8699 ;; Tracked objects:
  8700 ;;		On entry : 0/0
  8701 ;;		On exit  : 0/0
  8702 ;;		Unchanged: 0/0
  8703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8705 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8707 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8708 ;;Total ram usage:        5 bytes
  8709 ;; Hardware stack levels used:    1
  8710 ;; Hardware stack levels required when called:   13
  8711 ;; This function calls:
  8712 ;;		__flash_is_busy
  8713 ;;		_memcpy
  8714 ;;		_spi_tx
  8715 ;; This function is called by:
  8716 ;;		_flash_init
  8717 ;; This function uses a non-reentrant model
  8718 ;;
  8719                           
  8720                           	psect	text15
  8721  0146E6                     __ptext15:
  8722                           	opt stack 0
  8723  0146E6                     __flash_set_page_size:
  8724                           	opt stack 15
  8725                           
  8726                           ; BSR set to: 14
  8727                           ;incstack = 0
  8728                           ;__flash_set_page_size@size stored from wreg
  8729  0146E6  0100               	movlb	0	; () banked
  8730  0146E8  6F77               	movwf	__flash_set_page_size@size& (0+255),b
  8731  0146EA                     
  8732                           ;flash.c: 101: uint8_t command[4];;flash.c: 104: while(_flash_is_busy());
  8733  0146EA  ECFA  F0AE         	call	__flash_is_busy	;wreg free
  8734  0146EE  0900               	iorlw	0
  8735  0146F0  A4D8               	btfss	status,2,c
  8736  0146F2  D7FB               	goto	l16242
  8737                           
  8738                           ;flash.c: 107: if(size==FLASH_PAGE_SIZE_512)
  8739  0146F4  0100               	movlb	0	; () banked
  8740  0146F6  5177               	movf	__flash_set_page_size@size& (0+255),w,b
  8741  0146F8  A4D8               	btfss	status,2,c
  8742  0146FA  D00E               	goto	l1544
  8743                           
  8744                           ; BSR set to: 0
  8745                           ;flash.c: 108: memcpy(command, flash_command_pagesize_512, 4);
  8746  0146FC  0E73               	movlw	low __flash_set_page_size@command
  8747  0146FE  6F60               	movwf	memcpy@d1& (0+255),b
  8748  014700  0E00               	movlw	high __flash_set_page_size@command
  8749  014702  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  8750  014704  0EF6               	movlw	low _flash_command_pagesize_512
  8751  014706  6F62               	movwf	memcpy@s1& (0+255),b
  8752  014708  0EA2               	movlw	high _flash_command_pagesize_512
  8753  01470A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  8754  01470C  0E00               	movlw	0
  8755  01470E  6F65               	movwf	(memcpy@n+1)& (0+255),b
  8756  014710  0E04               	movlw	4
  8757  014712  6F64               	movwf	memcpy@n& (0+255),b
  8758  014714  ECAC  F0A5         	call	_memcpy	;wreg free
  8759  014718                     l1544:
  8760                           
  8761                           ;flash.c: 109: if(size==FLASH_PAGE_SIZE_528)
  8762  014718  0100               	movlb	0	; () banked
  8763  01471A  0577               	decf	__flash_set_page_size@size& (0+255),w,b
  8764  01471C  A4D8               	btfss	status,2,c
  8765  01471E  D00E               	goto	l1545
  8766                           
  8767                           ; BSR set to: 0
  8768                           ;flash.c: 110: memcpy(command, flash_command_pagesize_528, 4);
  8769  014720  0E73               	movlw	low __flash_set_page_size@command
  8770  014722  6F60               	movwf	memcpy@d1& (0+255),b
  8771  014724  0E00               	movlw	high __flash_set_page_size@command
  8772  014726  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  8773  014728  0EF2               	movlw	low _flash_command_pagesize_528
  8774  01472A  6F62               	movwf	memcpy@s1& (0+255),b
  8775  01472C  0EA2               	movlw	high _flash_command_pagesize_528
  8776  01472E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  8777  014730  0E00               	movlw	0
  8778  014732  6F65               	movwf	(memcpy@n+1)& (0+255),b
  8779  014734  0E04               	movlw	4
  8780  014736  6F64               	movwf	memcpy@n& (0+255),b
  8781  014738  ECAC  F0A5         	call	_memcpy	;wreg free
  8782  01473C                     l1545:
  8783                           
  8784                           ;flash.c: 113: spi_tx(command, 4);
  8785  01473C  0E73               	movlw	low __flash_set_page_size@command
  8786  01473E  0100               	movlb	0	; () banked
  8787  014740  6F60               	movwf	spi_tx@data& (0+255),b
  8788  014742  0E00               	movlw	high __flash_set_page_size@command
  8789  014744  6F61               	movwf	(spi_tx@data+1)& (0+255),b
  8790  014746  0E00               	movlw	0
  8791  014748  6F63               	movwf	(spi_tx@length+1)& (0+255),b
  8792  01474A  0E04               	movlw	4
  8793  01474C  6F62               	movwf	spi_tx@length& (0+255),b
  8794  01474E  ECED  F0A6         	call	_spi_tx	;wreg free
  8795  014752  0012               	return		;funcret
  8796  014754                     __end_of__flash_set_page_size:
  8797                           	opt stack 0
  8798                           tblptru	equ	0xFF8
  8799                           tblptrh	equ	0xFF7
  8800                           tblptrl	equ	0xFF6
  8801                           tablat	equ	0xFF5
  8802                           prodh	equ	0xFF4
  8803                           prodl	equ	0xFF3
  8804                           postinc0	equ	0xFEE
  8805                           wreg	equ	0xFE8
  8806                           postdec1	equ	0xFE5
  8807                           fsr1h	equ	0xFE2
  8808                           fsr1l	equ	0xFE1
  8809                           indf2	equ	0xFDF
  8810                           fsr2h	equ	0xFDA
  8811                           fsr2l	equ	0xFD9
  8812                           status	equ	0xFD8
  8813                           
  8814 ;; *************** function _fat_init *****************
  8815 ;; Defined at:
  8816 ;;		line 1404 in file "fat16.c"
  8817 ;; Parameters:    Size  Location     Type
  8818 ;;		None
  8819 ;; Auto vars:     Size  Location     Type
  8820 ;;		None
  8821 ;; Return value:  Size  Location     Type
  8822 ;;                  1    wreg      void 
  8823 ;; Registers used:
  8824 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8825 ;; Tracked objects:
  8826 ;;		On entry : 0/0
  8827 ;;		On exit  : 0/0
  8828 ;;		Unchanged: 0/0
  8829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8834 ;;Total ram usage:        0 bytes
  8835 ;; Hardware stack levels used:    1
  8836 ;; Hardware stack levels required when called:   16
  8837 ;; This function calls:
  8838 ;;		_fat_get_format_status
  8839 ;;		_fat_restore_mbr_fbr
  8840 ;; This function is called by:
  8841 ;;		_system_init
  8842 ;; This function uses a non-reentrant model
  8843 ;;
  8844                           
  8845                           	psect	text16
  8846  015FB6                     __ptext16:
  8847                           	opt stack 0
  8848  015FB6                     _fat_init:
  8849                           	opt stack 13
  8850                           
  8851                           ;fat16.c: 1407: if(fat_get_format_status()==DRIVE_NOT_FORMATED)
  8852                           
  8853                           ;incstack = 0
  8854  015FB6  EC60  F099         	call	_fat_get_format_status	;wreg free
  8855  015FBA  0900               	iorlw	0
  8856  015FBC  A4D8               	btfss	status,2,c
  8857  015FBE  0012               	return	
  8858                           
  8859                           ;fat16.c: 1408: {;fat16.c: 1416: fat_restore_mbr_fbr();
  8860  015FC0  ECF5  F09E         	call	_fat_restore_mbr_fbr	;wreg free
  8861  015FC4  0012               	return	
  8862  015FC6                     __end_of_fat_init:
  8863                           	opt stack 0
  8864                           tblptru	equ	0xFF8
  8865                           tblptrh	equ	0xFF7
  8866                           tblptrl	equ	0xFF6
  8867                           tablat	equ	0xFF5
  8868                           prodh	equ	0xFF4
  8869                           prodl	equ	0xFF3
  8870                           postinc0	equ	0xFEE
  8871                           wreg	equ	0xFE8
  8872                           postdec1	equ	0xFE5
  8873                           fsr1h	equ	0xFE2
  8874                           fsr1l	equ	0xFE1
  8875                           indf2	equ	0xFDF
  8876                           fsr2h	equ	0xFDA
  8877                           fsr2l	equ	0xFD9
  8878                           status	equ	0xFD8
  8879                           
  8880 ;; *************** function _fat_restore_mbr_fbr *****************
  8881 ;; Defined at:
  8882 ;;		line 1321 in file "fat16.c"
  8883 ;; Parameters:    Size  Location     Type
  8884 ;;		None
  8885 ;; Auto vars:     Size  Location     Type
  8886 ;;  cntr            2   36[BANK0 ] unsigned int 
  8887 ;; Return value:  Size  Location     Type
  8888 ;;                  1    wreg      unsigned char 
  8889 ;; Registers used:
  8890 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8891 ;; Tracked objects:
  8892 ;;		On entry : 0/0
  8893 ;;		On exit  : 0/0
  8894 ;;		Unchanged: 0/0
  8895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8897 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8899 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8900 ;;Total ram usage:        2 bytes
  8901 ;; Hardware stack levels used:    1
  8902 ;; Hardware stack levels required when called:   15
  8903 ;; This function calls:
  8904 ;;		__get_fbr
  8905 ;;		__get_mbr
  8906 ;;		_flash_sector_write
  8907 ;; This function is called by:
  8908 ;;		_fat_init
  8909 ;; This function uses a non-reentrant model
  8910 ;;
  8911                           
  8912                           	psect	text17
  8913  013DEA                     __ptext17:
  8914                           	opt stack 0
  8915  013DEA                     _fat_restore_mbr_fbr:
  8916                           	opt stack 13
  8917                           
  8918                           ;fat16.c: 1323: uint16_t cntr;;fat16.c: 1326: for(cntr=0; cntr<512; ++cntr)
  8919                           
  8920                           ;incstack = 0
  8921  013DEA  0E00               	movlw	0
  8922  013DEC  0100               	movlb	0	; () banked
  8923  013DEE  6F85               	movwf	(fat_restore_mbr_fbr@cntr+1)& (0+255),b
  8924  013DF0  0E00               	movlw	0
  8925  013DF2  6F84               	movwf	fat_restore_mbr_fbr@cntr& (0+255),b
  8926  013DF4                     l16472:
  8927                           
  8928                           ; BSR set to: 0
  8929  013DF4  0E02               	movlw	2
  8930  013DF6  5D85               	subwf	(fat_restore_mbr_fbr@cntr+1)& (0+255),w,b
  8931  013DF8  B0D8               	btfsc	status,0,c
  8932  013DFA  D011               	goto	u15690
  8933                           
  8934                           ; BSR set to: 0
  8935                           ;fat16.c: 1327: {;fat16.c: 1328: buffer[cntr] = _get_mbr(cntr);
  8936                           
  8937                           ; BSR set to: 0
  8938                           
  8939                           ; BSR set to: 0
  8940  013DFC  0E00               	movlw	low _buffer
  8941  013DFE  2584               	addwf	fat_restore_mbr_fbr@cntr& (0+255),w,b
  8942  013E00  6ED9               	movwf	fsr2l,c
  8943  013E02  0E0A               	movlw	high _buffer
  8944  013E04  2185               	addwfc	(fat_restore_mbr_fbr@cntr+1)& (0+255),w,b
  8945  013E06  6EDA               	movwf	fsr2h,c
  8946  013E08  C084  F060         	movff	fat_restore_mbr_fbr@cntr,__get_mbr@idx
  8947  013E0C  C085  F061         	movff	fat_restore_mbr_fbr@cntr+1,__get_mbr@idx+1
  8948  013E10  ECCB  F094         	call	__get_mbr	;wreg free
  8949  013E14  6EDF               	movwf	indf2,c
  8950  013E16  0100               	movlb	0	; () banked
  8951  013E18  4B84               	infsnz	fat_restore_mbr_fbr@cntr& (0+255),f,b
  8952  013E1A  2B85               	incf	(fat_restore_mbr_fbr@cntr+1)& (0+255),f,b
  8953  013E1C  D7EB               	goto	l16472
  8954  013E1E                     u15690:
  8955                           
  8956                           ; BSR set to: 0
  8957                           ;fat16.c: 1329: };fat16.c: 1330: flash_sector_write(0, buffer);
  8958                           
  8959                           ; BSR set to: 0
  8960  013E1E  0E00               	movlw	0
  8961  013E20  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  8962  013E22  0E00               	movlw	0
  8963  013E24  6F7F               	movwf	flash_sector_write@page& (0+255),b
  8964  013E26  0E00               	movlw	low _buffer
  8965  013E28  6F81               	movwf	flash_sector_write@data& (0+255),b
  8966  013E2A  0E0A               	movlw	high _buffer
  8967  013E2C  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  8968  013E2E  ECBD  F0A9         	call	_flash_sector_write	;wreg free
  8969                           
  8970                           ;fat16.c: 1333: for(cntr=0; cntr<512; ++cntr)
  8971  013E32  0E00               	movlw	0
  8972  013E34  0100               	movlb	0	; () banked
  8973  013E36  6F85               	movwf	(fat_restore_mbr_fbr@cntr+1)& (0+255),b
  8974  013E38  0E00               	movlw	0
  8975  013E3A  6F84               	movwf	fat_restore_mbr_fbr@cntr& (0+255),b
  8976  013E3C                     l16486:
  8977                           
  8978                           ; BSR set to: 0
  8979  013E3C  0E02               	movlw	2
  8980  013E3E  5D85               	subwf	(fat_restore_mbr_fbr@cntr+1)& (0+255),w,b
  8981  013E40  B0D8               	btfsc	status,0,c
  8982  013E42  D011               	goto	u15710
  8983                           
  8984                           ; BSR set to: 0
  8985                           ;fat16.c: 1334: {;fat16.c: 1335: buffer[cntr] = _get_fbr(cntr);
  8986                           
  8987                           ; BSR set to: 0
  8988                           
  8989                           ; BSR set to: 0
  8990  013E44  0E00               	movlw	low _buffer
  8991  013E46  2584               	addwf	fat_restore_mbr_fbr@cntr& (0+255),w,b
  8992  013E48  6ED9               	movwf	fsr2l,c
  8993  013E4A  0E0A               	movlw	high _buffer
  8994  013E4C  2185               	addwfc	(fat_restore_mbr_fbr@cntr+1)& (0+255),w,b
  8995  013E4E  6EDA               	movwf	fsr2h,c
  8996  013E50  C084  F060         	movff	fat_restore_mbr_fbr@cntr,__get_fbr@idx
  8997  013E54  C085  F061         	movff	fat_restore_mbr_fbr@cntr+1,__get_fbr@idx+1
  8998  013E58  ECA2  F06D         	call	__get_fbr	;wreg free
  8999  013E5C  6EDF               	movwf	indf2,c
  9000  013E5E  0100               	movlb	0	; () banked
  9001  013E60  4B84               	infsnz	fat_restore_mbr_fbr@cntr& (0+255),f,b
  9002  013E62  2B85               	incf	(fat_restore_mbr_fbr@cntr+1)& (0+255),f,b
  9003  013E64  D7EB               	goto	l16486
  9004  013E66                     u15710:
  9005                           
  9006                           ; BSR set to: 0
  9007                           ;fat16.c: 1336: };fat16.c: 1337: flash_sector_write(1, buffer);
  9008                           
  9009                           ; BSR set to: 0
  9010  013E66  0E00               	movlw	0
  9011  013E68  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  9012  013E6A  0E01               	movlw	1
  9013  013E6C  6F7F               	movwf	flash_sector_write@page& (0+255),b
  9014  013E6E  0E00               	movlw	low _buffer
  9015  013E70  6F81               	movwf	flash_sector_write@data& (0+255),b
  9016  013E72  0E0A               	movlw	high _buffer
  9017  013E74  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  9018  013E76  ECBD  F0A9         	call	_flash_sector_write	;wreg free
  9019  013E7A  0012               	return	
  9020  013E7C                     __end_of_fat_restore_mbr_fbr:
  9021                           	opt stack 0
  9022                           tblptru	equ	0xFF8
  9023                           tblptrh	equ	0xFF7
  9024                           tblptrl	equ	0xFF6
  9025                           tablat	equ	0xFF5
  9026                           prodh	equ	0xFF4
  9027                           prodl	equ	0xFF3
  9028                           postinc0	equ	0xFEE
  9029                           wreg	equ	0xFE8
  9030                           postdec1	equ	0xFE5
  9031                           fsr1h	equ	0xFE2
  9032                           fsr1l	equ	0xFE1
  9033                           indf2	equ	0xFDF
  9034                           fsr2h	equ	0xFDA
  9035                           fsr2l	equ	0xFD9
  9036                           status	equ	0xFD8
  9037                           
  9038 ;; *************** function _fat_get_format_status *****************
  9039 ;; Defined at:
  9040 ;;		line 1293 in file "fat16.c"
  9041 ;; Parameters:    Size  Location     Type
  9042 ;;		None
  9043 ;; Auto vars:     Size  Location     Type
  9044 ;;  cntr            2   45[BANK0 ] unsigned int 
  9045 ;; Return value:  Size  Location     Type
  9046 ;;                  1    wreg      enum E7028
  9047 ;; Registers used:
  9048 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9049 ;; Tracked objects:
  9050 ;;		On entry : 0/0
  9051 ;;		On exit  : 0/0
  9052 ;;		Unchanged: 0/0
  9053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9055 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9056 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9057 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9058 ;;Total ram usage:        4 bytes
  9059 ;; Hardware stack levels used:    1
  9060 ;; Hardware stack levels required when called:   15
  9061 ;; This function calls:
  9062 ;;		__get_fbr
  9063 ;;		__get_mbr
  9064 ;;		_flash_sector_read
  9065 ;; This function is called by:
  9066 ;;		_fat_init
  9067 ;; This function uses a non-reentrant model
  9068 ;;
  9069                           
  9070                           	psect	text18
  9071  0132C0                     __ptext18:
  9072                           	opt stack 0
  9073  0132C0                     _fat_get_format_status:
  9074                           	opt stack 13
  9075                           
  9076                           ;fat16.c: 1295: uint16_t cntr;;fat16.c: 1298: flash_sector_read(0, buffer);
  9077                           
  9078                           ;incstack = 0
  9079  0132C0  0E00               	movlw	0
  9080  0132C2  0100               	movlb	0	; () banked
  9081  0132C4  6F88               	movwf	(flash_sector_read@page+1)& (0+255),b
  9082  0132C6  0E00               	movlw	0
  9083  0132C8  6F87               	movwf	flash_sector_read@page& (0+255),b
  9084  0132CA  0E00               	movlw	low _buffer
  9085  0132CC  6F89               	movwf	flash_sector_read@data& (0+255),b
  9086  0132CE  0E0A               	movlw	high _buffer
  9087  0132D0  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
  9088  0132D2  EC9C  F0AE         	call	_flash_sector_read	;wreg free
  9089                           
  9090                           ;fat16.c: 1299: for(cntr=0; cntr<512; ++cntr)
  9091  0132D6  0E00               	movlw	0
  9092  0132D8  0100               	movlb	0	; () banked
  9093  0132DA  6F8E               	movwf	(fat_get_format_status@cntr+1)& (0+255),b
  9094  0132DC  0E00               	movlw	0
  9095  0132DE  6F8D               	movwf	fat_get_format_status@cntr& (0+255),b
  9096  0132E0                     l16434:
  9097                           
  9098                           ; BSR set to: 0
  9099  0132E0  0E02               	movlw	2
  9100  0132E2  5D8E               	subwf	(fat_get_format_status@cntr+1)& (0+255),w,b
  9101  0132E4  B0D8               	btfsc	status,0,c
  9102  0132E6  D017               	goto	u15640
  9103                           
  9104                           ; BSR set to: 0
  9105                           ;fat16.c: 1300: {;fat16.c: 1301: if(buffer[cntr] != _get_mbr(cntr))
  9106                           
  9107                           ; BSR set to: 0
  9108                           
  9109                           ; BSR set to: 0
  9110  0132E8  0E00               	movlw	low _buffer
  9111  0132EA  258D               	addwf	fat_get_format_status@cntr& (0+255),w,b
  9112  0132EC  6ED9               	movwf	fsr2l,c
  9113  0132EE  0E0A               	movlw	high _buffer
  9114  0132F0  218E               	addwfc	(fat_get_format_status@cntr+1)& (0+255),w,b
  9115  0132F2  6EDA               	movwf	fsr2h,c
  9116  0132F4  C08D  F060         	movff	fat_get_format_status@cntr,__get_mbr@idx
  9117  0132F8  C08E  F061         	movff	fat_get_format_status@cntr+1,__get_mbr@idx+1
  9118  0132FC  ECCB  F094         	call	__get_mbr	;wreg free
  9119  013300  0100               	movlb	0	; () banked
  9120  013302  6F8C               	movwf	(??_fat_get_format_status+1)& (0+255),b
  9121  013304  50DE               	movf	postinc2,w,c
  9122  013306  198C               	xorwf	(??_fat_get_format_status+1)& (0+255),w,b
  9123  013308  B4D8               	btfsc	status,2,c
  9124  01330A  D002               	goto	l2068
  9125                           
  9126                           ; BSR set to: 0
  9127                           ;fat16.c: 1302: {;fat16.c: 1303: return DRIVE_NOT_FORMATED;
  9128  01330C  0E00               	movlw	0
  9129                           
  9130                           ; BSR set to: 0
  9131  01330E  0012               	return	
  9132  013310                     l2068:
  9133                           
  9134                           ; BSR set to: 0
  9135                           
  9136                           ; BSR set to: 0
  9137  013310  4B8D               	infsnz	fat_get_format_status@cntr& (0+255),f,b
  9138  013312  2B8E               	incf	(fat_get_format_status@cntr+1)& (0+255),f,b
  9139  013314  D7E5               	goto	l16434
  9140  013316                     u15640:
  9141                           
  9142                           ; BSR set to: 0
  9143                           ;fat16.c: 1304: };fat16.c: 1305: };fat16.c: 1308: flash_sector_read(1, buffer);
  9144                           
  9145                           ; BSR set to: 0
  9146  013316  0E00               	movlw	0
  9147  013318  6F88               	movwf	(flash_sector_read@page+1)& (0+255),b
  9148  01331A  0E01               	movlw	1
  9149  01331C  6F87               	movwf	flash_sector_read@page& (0+255),b
  9150  01331E  0E00               	movlw	low _buffer
  9151  013320  6F89               	movwf	flash_sector_read@data& (0+255),b
  9152  013322  0E0A               	movlw	high _buffer
  9153  013324  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
  9154  013326  EC9C  F0AE         	call	_flash_sector_read	;wreg free
  9155                           
  9156                           ;fat16.c: 1309: for(cntr=0; cntr<512; ++cntr)
  9157  01332A  0E00               	movlw	0
  9158  01332C  0100               	movlb	0	; () banked
  9159  01332E  6F8E               	movwf	(fat_get_format_status@cntr+1)& (0+255),b
  9160  013330  0E00               	movlw	0
  9161  013332  6F8D               	movwf	fat_get_format_status@cntr& (0+255),b
  9162  013334                     l16452:
  9163                           
  9164                           ; BSR set to: 0
  9165  013334  0E02               	movlw	2
  9166  013336  5D8E               	subwf	(fat_get_format_status@cntr+1)& (0+255),w,b
  9167  013338  B0D8               	btfsc	status,0,c
  9168  01333A  D017               	goto	u15670
  9169                           
  9170                           ; BSR set to: 0
  9171                           ;fat16.c: 1310: {;fat16.c: 1311: if(buffer[cntr] != _get_fbr(cntr))
  9172                           
  9173                           ; BSR set to: 0
  9174                           
  9175                           ; BSR set to: 0
  9176  01333C  0E00               	movlw	low _buffer
  9177  01333E  258D               	addwf	fat_get_format_status@cntr& (0+255),w,b
  9178  013340  6ED9               	movwf	fsr2l,c
  9179  013342  0E0A               	movlw	high _buffer
  9180  013344  218E               	addwfc	(fat_get_format_status@cntr+1)& (0+255),w,b
  9181  013346  6EDA               	movwf	fsr2h,c
  9182  013348  C08D  F060         	movff	fat_get_format_status@cntr,__get_fbr@idx
  9183  01334C  C08E  F061         	movff	fat_get_format_status@cntr+1,__get_fbr@idx+1
  9184  013350  ECA2  F06D         	call	__get_fbr	;wreg free
  9185  013354  0100               	movlb	0	; () banked
  9186  013356  6F8C               	movwf	(??_fat_get_format_status+1)& (0+255),b
  9187  013358  50DE               	movf	postinc2,w,c
  9188  01335A  198C               	xorwf	(??_fat_get_format_status+1)& (0+255),w,b
  9189  01335C  B4D8               	btfsc	status,2,c
  9190  01335E  D002               	goto	l2072
  9191                           
  9192                           ; BSR set to: 0
  9193                           ;fat16.c: 1312: {;fat16.c: 1313: return DRIVE_NOT_FORMATED;
  9194  013360  0E00               	movlw	0
  9195                           
  9196                           ; BSR set to: 0
  9197  013362  0012               	return	
  9198  013364                     l2072:
  9199                           
  9200                           ; BSR set to: 0
  9201                           
  9202                           ; BSR set to: 0
  9203  013364  4B8D               	infsnz	fat_get_format_status@cntr& (0+255),f,b
  9204  013366  2B8E               	incf	(fat_get_format_status@cntr+1)& (0+255),f,b
  9205  013368  D7E5               	goto	l16452
  9206  01336A                     u15670:
  9207                           
  9208                           ; BSR set to: 0
  9209                           ;fat16.c: 1314: };fat16.c: 1315: };fat16.c: 1318: return DRIVE_FORMATED;
  9210                           
  9211                           ; BSR set to: 0
  9212  01336A  0E01               	movlw	1
  9213  01336C  0012               	return	
  9214  01336E                     __end_of_fat_get_format_status:
  9215                           	opt stack 0
  9216                           tblptru	equ	0xFF8
  9217                           tblptrh	equ	0xFF7
  9218                           tblptrl	equ	0xFF6
  9219                           tablat	equ	0xFF5
  9220                           prodh	equ	0xFF4
  9221                           prodl	equ	0xFF3
  9222                           postinc0	equ	0xFEE
  9223                           wreg	equ	0xFE8
  9224                           postdec1	equ	0xFE5
  9225                           fsr1h	equ	0xFE2
  9226                           fsr1l	equ	0xFE1
  9227                           indf2	equ	0xFDF
  9228                           postinc2	equ	0xFDE
  9229                           fsr2h	equ	0xFDA
  9230                           fsr2l	equ	0xFD9
  9231                           status	equ	0xFD8
  9232                           
  9233 ;; *************** function __get_mbr *****************
  9234 ;; Defined at:
  9235 ;;		line 1038 in file "fat16.c"
  9236 ;; Parameters:    Size  Location     Type
  9237 ;;  idx             2    0[BANK0 ] unsigned int 
  9238 ;; Auto vars:     Size  Location     Type
  9239 ;;		None
  9240 ;; Return value:  Size  Location     Type
  9241 ;;                  1    wreg      unsigned char 
  9242 ;; Registers used:
  9243 ;;		wreg, status,2, status,0
  9244 ;; Tracked objects:
  9245 ;;		On entry : 0/0
  9246 ;;		On exit  : 0/0
  9247 ;;		Unchanged: 0/0
  9248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9249 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9251 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9252 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9253 ;;Total ram usage:        4 bytes
  9254 ;; Hardware stack levels used:    1
  9255 ;; Hardware stack levels required when called:   10
  9256 ;; This function calls:
  9257 ;;		Nothing
  9258 ;; This function is called by:
  9259 ;;		_fat_get_format_status
  9260 ;;		_fat_restore_mbr_fbr
  9261 ;;		_fat_format
  9262 ;; This function uses a non-reentrant model
  9263 ;;
  9264                           
  9265                           	psect	text19
  9266  012996                     __ptext19:
  9267                           	opt stack 0
  9268  012996                     __get_mbr:
  9269                           	opt stack 17
  9270                           
  9271                           ;fat16.c: 1040: switch (idx)
  9272                           
  9273                           ; BSR set to: 0
  9274                           ;incstack = 0
  9275  012996  D026               	goto	l1940
  9276  012998                     
  9277                           ;fat16.c: 1043: return 0x80;
  9278  012998  0E80               	movlw	128
  9279  01299A  0012               	return	
  9280  01299C                     
  9281                           ;fat16.c: 1045: return 0;
  9282  01299C  0E00               	movlw	0
  9283  01299E  0012               	return	
  9284  0129A0                     
  9285                           ;fat16.c: 1047: return 2;
  9286  0129A0  0E02               	movlw	2
  9287  0129A2  0012               	return	
  9288  0129A4                     
  9289                           ;fat16.c: 1049: return 0;
  9290  0129A4  0E00               	movlw	0
  9291  0129A6  0012               	return	
  9292  0129A8                     
  9293                           ;fat16.c: 1051: return 0x04;
  9294  0129A8  0E04               	movlw	4
  9295  0129AA  0012               	return	
  9296  0129AC                     
  9297                           ;fat16.c: 1053: return 2;
  9298  0129AC  0E02               	movlw	2
  9299  0129AE  0012               	return	
  9300  0129B0                     
  9301                           ;fat16.c: 1055: return 3;
  9302  0129B0  0E03               	movlw	3
  9303  0129B2  0012               	return	
  9304  0129B4                     
  9305                           ;fat16.c: 1057: return 8;
  9306  0129B4  0E08               	movlw	8
  9307  0129B6  0012               	return	
  9308  0129B8                     
  9309                           ;fat16.c: 1059: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xF
      +                          F));
  9310  0129B8  0E01               	movlw	1
  9311  0129BA  0012               	return	
  9312  0129BC                     
  9313                           ;fat16.c: 1061: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8
      +                          )&0xFF));
  9314  0129BC  0E00               	movlw	0
  9315  0129BE  0012               	return	
  9316  0129C0                     
  9317                           ;fat16.c: 1063: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF)
      +                          ))&0xFF));
  9318  0129C0  0E00               	movlw	0
  9319  0129C2  0012               	return	
  9320  0129C4                     
  9321                           ;fat16.c: 1065: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  9322  0129C4  0E00               	movlw	0
  9323  0129C6  0012               	return	
  9324  0129C8                     
  9325                           ;fat16.c: 1067: return ((unsigned char)((((unsigned short)((((uint32_t)8191))&0xFFFF)))&
      +                          0xFF));
  9326  0129C8  0EFF               	movlw	255
  9327  0129CA  0012               	return	
  9328  0129CC                     
  9329                           ;fat16.c: 1069: return ((unsigned char)(((((unsigned short)((((uint32_t)8191))&0xFFFF)))
      +                          >>8)&0xFF));
  9330  0129CC  0E1F               	movlw	31
  9331  0129CE  0012               	return	
  9332  0129D0                     
  9333                           ;fat16.c: 1071: return ((unsigned char)((((unsigned short)(((((uint32_t)8191))>>16)&0xFF
      +                          FF)))&0xFF));
  9334  0129D0  0E00               	movlw	0
  9335  0129D2  0012               	return	
  9336  0129D4                     
  9337                           ;fat16.c: 1073: return ((unsigned char)(((((unsigned short)(((((uint32_t)8191))>>16)&0xF
      +                          FFF)))>>8)&0xFF));
  9338  0129D4  0E00               	movlw	0
  9339  0129D6  0012               	return	
  9340  0129D8                     
  9341                           ;fat16.c: 1075: return ((unsigned char)((((uint16_t)0X55AA)>>8)&0xFF));
  9342  0129D8  0E55               	movlw	85
  9343  0129DA  0012               	return	
  9344  0129DC                     
  9345                           ;fat16.c: 1077: return ((unsigned char)(((uint16_t)0X55AA)&0xFF));
  9346  0129DC  0EAA               	movlw	170
  9347  0129DE  0012               	return	
  9348  0129E0                     
  9349                           ;fat16.c: 1079: return 0X00;
  9350  0129E0  0E00               	movlw	0
  9351                           
  9352                           ;fat16.c: 1080: }
  9353  0129E2  0012               	return	
  9354  0129E4                     l1940:
  9355  0129E4  C060  F062         	movff	__get_mbr@idx,??__get_mbr
  9356  0129E8  C061  F063         	movff	__get_mbr@idx+1,??__get_mbr+1
  9357                           
  9358                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9359                           ; Switch size 1, requested type "space"
  9360                           ; Number of cases is 1, Range of values is 1 to 1
  9361                           ; switch strategies available:
  9362                           ; Name         Instructions Cycles
  9363                           ; simple_byte            4     3 (average)
  9364                           ;	Chosen strategy is simple_byte
  9365  0129EC  0100               	movlb	0	; () banked
  9366  0129EE  5163               	movf	(??__get_mbr+1)& (0+255),w,b
  9367  0129F0  0A01               	xorlw	1	; case 1
  9368  0129F2  A4D8               	btfss	status,2,c
  9369  0129F4  D7F5               	goto	l1960
  9370                           
  9371                           ; BSR set to: 0
  9372                           ; Switch size 1, requested type "space"
  9373                           ; Number of cases is 18, Range of values is 190 to 255
  9374                           ; switch strategies available:
  9375                           ; Name         Instructions Cycles
  9376                           ; simple_byte           55    28 (average)
  9377                           ;	Chosen strategy is simple_byte
  9378  0129F6  5162               	movf	??__get_mbr& (0+255),w,b
  9379  0129F8  0ABE               	xorlw	190	; case 190
  9380  0129FA  B4D8               	btfsc	status,2,c
  9381  0129FC  D7CD               	goto	l1941
  9382  0129FE  0A01               	xorlw	1	; case 191
  9383  012A00  B4D8               	btfsc	status,2,c
  9384  012A02  D7CC               	goto	l1943
  9385  012A04  0A7F               	xorlw	127	; case 192
  9386  012A06  B4D8               	btfsc	status,2,c
  9387  012A08  D7CB               	goto	l1944
  9388  012A0A  0A01               	xorlw	1	; case 193
  9389  012A0C  B4D8               	btfsc	status,2,c
  9390  012A0E  D7CA               	goto	l1945
  9391  012A10  0A03               	xorlw	3	; case 194
  9392  012A12  B4D8               	btfsc	status,2,c
  9393  012A14  D7C9               	goto	l1946
  9394  012A16  0A01               	xorlw	1	; case 195
  9395  012A18  B4D8               	btfsc	status,2,c
  9396  012A1A  D7C8               	goto	l1947
  9397  012A1C  0A07               	xorlw	7	; case 196
  9398  012A1E  B4D8               	btfsc	status,2,c
  9399  012A20  D7C7               	goto	l1948
  9400  012A22  0A01               	xorlw	1	; case 197
  9401  012A24  B4D8               	btfsc	status,2,c
  9402  012A26  D7C6               	goto	l1949
  9403  012A28  0A03               	xorlw	3	; case 198
  9404  012A2A  B4D8               	btfsc	status,2,c
  9405  012A2C  D7C5               	goto	l1950
  9406  012A2E  0A01               	xorlw	1	; case 199
  9407  012A30  B4D8               	btfsc	status,2,c
  9408  012A32  D7C4               	goto	l1951
  9409  012A34  0A0F               	xorlw	15	; case 200
  9410  012A36  B4D8               	btfsc	status,2,c
  9411  012A38  D7C3               	goto	l1952
  9412  012A3A  0A01               	xorlw	1	; case 201
  9413  012A3C  B4D8               	btfsc	status,2,c
  9414  012A3E  D7C2               	goto	l1953
  9415  012A40  0A03               	xorlw	3	; case 202
  9416  012A42  B4D8               	btfsc	status,2,c
  9417  012A44  D7C1               	goto	l1954
  9418  012A46  0A01               	xorlw	1	; case 203
  9419  012A48  B4D8               	btfsc	status,2,c
  9420  012A4A  D7C0               	goto	l1955
  9421  012A4C  0A07               	xorlw	7	; case 204
  9422  012A4E  B4D8               	btfsc	status,2,c
  9423  012A50  D7BF               	goto	l1956
  9424  012A52  0A01               	xorlw	1	; case 205
  9425  012A54  B4D8               	btfsc	status,2,c
  9426  012A56  D7BE               	goto	l1957
  9427  012A58  0A33               	xorlw	51	; case 254
  9428  012A5A  B4D8               	btfsc	status,2,c
  9429  012A5C  D7BD               	goto	l1958
  9430  012A5E  0A01               	xorlw	1	; case 255
  9431  012A60  B4D8               	btfsc	status,2,c
  9432  012A62  D7BC               	goto	l1959
  9433  012A64  D7BD               	goto	l1960
  9434  012A66                     __end_of__get_mbr:
  9435                           	opt stack 0
  9436                           tblptru	equ	0xFF8
  9437                           tblptrh	equ	0xFF7
  9438                           tblptrl	equ	0xFF6
  9439                           tablat	equ	0xFF5
  9440                           prodh	equ	0xFF4
  9441                           prodl	equ	0xFF3
  9442                           postinc0	equ	0xFEE
  9443                           wreg	equ	0xFE8
  9444                           postdec1	equ	0xFE5
  9445                           fsr1h	equ	0xFE2
  9446                           fsr1l	equ	0xFE1
  9447                           indf2	equ	0xFDF
  9448                           postinc2	equ	0xFDE
  9449                           fsr2h	equ	0xFDA
  9450                           fsr2l	equ	0xFD9
  9451                           status	equ	0xFD8
  9452                           
  9453 ;; *************** function __get_fbr *****************
  9454 ;; Defined at:
  9455 ;;		line 1083 in file "fat16.c"
  9456 ;; Parameters:    Size  Location     Type
  9457 ;;  idx             2    0[BANK0 ] unsigned int 
  9458 ;; Auto vars:     Size  Location     Type
  9459 ;;		None
  9460 ;; Return value:  Size  Location     Type
  9461 ;;                  1    wreg      unsigned char 
  9462 ;; Registers used:
  9463 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  9464 ;; Tracked objects:
  9465 ;;		On entry : 0/0
  9466 ;;		On exit  : 0/0
  9467 ;;		Unchanged: 0/0
  9468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9469 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9471 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9472 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9473 ;;Total ram usage:        4 bytes
  9474 ;; Hardware stack levels used:    1
  9475 ;; Hardware stack levels required when called:   10
  9476 ;; This function calls:
  9477 ;;		Nothing
  9478 ;; This function is called by:
  9479 ;;		_fat_get_format_status
  9480 ;;		_fat_restore_mbr_fbr
  9481 ;;		_fat_format
  9482 ;; This function uses a non-reentrant model
  9483 ;;
  9484                           
  9485                           	psect	text20
  9486  00DB44                     __ptext20:
  9487                           	opt stack 0
  9488  00DB44                     __get_fbr:
  9489                           	opt stack 17
  9490                           
  9491                           ;fat16.c: 1085: switch (idx)
  9492                           
  9493                           ;incstack = 0
  9494  00DB44  D098               	goto	l1964
  9495  00DB46                     
  9496                           ;fat16.c: 1088: return 0xEB;
  9497  00DB46  0EEB               	movlw	235
  9498  00DB48  0012               	return	
  9499  00DB4A                     
  9500                           ;fat16.c: 1090: return 0x3C;
  9501  00DB4A  0E3C               	movlw	60
  9502  00DB4C  0012               	return	
  9503  00DB4E                     
  9504                           ;fat16.c: 1092: return 0x90;
  9505  00DB4E  0E90               	movlw	144
  9506  00DB50  0012               	return	
  9507  00DB52                     
  9508                           ;fat16.c: 1094: return "MSDOS5.0"[0];
  9509  00DB52  0E20               	movlw	low STR_7
  9510  00DB54  6EF6               	movwf	tblptrl,c
  9511  00DB56                     	if	1	;There is more than 1 active tblptr byte
  9512  00DB56  0EA3               	movlw	high STR_7
  9513  00DB58  6EF7               	movwf	tblptrh,c
  9514  00DB5A                     	endif
  9515  00DB5A                     	if	1	;There are 3 active tblptr bytes
  9516  00DB5A  0E00               	movlw	low (STR_7 shr (0+16))
  9517  00DB5C  6EF8               	movwf	tblptru,c
  9518  00DB5E                     	endif
  9519  00DB5E  0008               	tblrd		*
  9520  00DB60  50F5               	movf	tablat,w,c
  9521  00DB62  0012               	return	
  9522  00DB64                     
  9523                           ;fat16.c: 1096: return "MSDOS5.0"[1];
  9524  00DB64  0E21               	movlw	low (STR_7+1)
  9525  00DB66  6EF6               	movwf	tblptrl,c
  9526  00DB68  0EA3               	movlw	high (STR_7+1)
  9527  00DB6A  6EF7               	movwf	tblptrh,c
  9528  00DB6C                     	if	0	;tblptru may be non-zero
  9529  00DB6C                     	endif
  9530  00DB6C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9531  00DB6C  0E00               	movlw	low (__mediumconst shr (0+16))
  9532  00DB6E  6EF8               	movwf	tblptru,c
  9533  00DB70                     	endif
  9534  00DB70  0008               	tblrd		*
  9535  00DB72  50F5               	movf	tablat,w,c
  9536  00DB74  0012               	return	
  9537  00DB76                     
  9538                           ;fat16.c: 1098: return "MSDOS5.0"[2];
  9539  00DB76  0E22               	movlw	low (STR_7+2)
  9540  00DB78  6EF6               	movwf	tblptrl,c
  9541  00DB7A  0EA3               	movlw	high (STR_7+2)
  9542  00DB7C  6EF7               	movwf	tblptrh,c
  9543  00DB7E                     	if	0	;tblptru may be non-zero
  9544  00DB7E                     	endif
  9545  00DB7E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9546  00DB7E  0E00               	movlw	low (__mediumconst shr (0+16))
  9547  00DB80  6EF8               	movwf	tblptru,c
  9548  00DB82                     	endif
  9549  00DB82  0008               	tblrd		*
  9550  00DB84  50F5               	movf	tablat,w,c
  9551  00DB86  0012               	return	
  9552  00DB88                     
  9553                           ;fat16.c: 1100: return "MSDOS5.0"[3];
  9554  00DB88  0E23               	movlw	low (STR_7+3)
  9555  00DB8A  6EF6               	movwf	tblptrl,c
  9556  00DB8C  0EA3               	movlw	high (STR_7+3)
  9557  00DB8E  6EF7               	movwf	tblptrh,c
  9558  00DB90                     	if	0	;tblptru may be non-zero
  9559  00DB90                     	endif
  9560  00DB90                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9561  00DB90  0E00               	movlw	low (__mediumconst shr (0+16))
  9562  00DB92  6EF8               	movwf	tblptru,c
  9563  00DB94                     	endif
  9564  00DB94  0008               	tblrd		*
  9565  00DB96  50F5               	movf	tablat,w,c
  9566  00DB98  0012               	return	
  9567  00DB9A                     
  9568                           ;fat16.c: 1102: return "MSDOS5.0"[4];
  9569  00DB9A  0E24               	movlw	low (STR_7+4)
  9570  00DB9C  6EF6               	movwf	tblptrl,c
  9571  00DB9E  0EA3               	movlw	high (STR_7+4)
  9572  00DBA0  6EF7               	movwf	tblptrh,c
  9573  00DBA2                     	if	0	;tblptru may be non-zero
  9574  00DBA2                     	endif
  9575  00DBA2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9576  00DBA2  0E00               	movlw	low (__mediumconst shr (0+16))
  9577  00DBA4  6EF8               	movwf	tblptru,c
  9578  00DBA6                     	endif
  9579  00DBA6  0008               	tblrd		*
  9580  00DBA8  50F5               	movf	tablat,w,c
  9581  00DBAA  0012               	return	
  9582  00DBAC                     
  9583                           ;fat16.c: 1104: return "MSDOS5.0"[5];
  9584  00DBAC  0E25               	movlw	low (STR_7+5)
  9585  00DBAE  6EF6               	movwf	tblptrl,c
  9586  00DBB0  0EA3               	movlw	high (STR_7+5)
  9587  00DBB2  6EF7               	movwf	tblptrh,c
  9588  00DBB4                     	if	0	;tblptru may be non-zero
  9589  00DBB4                     	endif
  9590  00DBB4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9591  00DBB4  0E00               	movlw	low (__mediumconst shr (0+16))
  9592  00DBB6  6EF8               	movwf	tblptru,c
  9593  00DBB8                     	endif
  9594  00DBB8  0008               	tblrd		*
  9595  00DBBA  50F5               	movf	tablat,w,c
  9596  00DBBC  0012               	return	
  9597  00DBBE                     
  9598                           ;fat16.c: 1106: return "MSDOS5.0"[6];
  9599  00DBBE  0E26               	movlw	low (STR_7+6)
  9600  00DBC0  6EF6               	movwf	tblptrl,c
  9601  00DBC2  0EA3               	movlw	high (STR_7+6)
  9602  00DBC4  6EF7               	movwf	tblptrh,c
  9603  00DBC6                     	if	0	;tblptru may be non-zero
  9604  00DBC6                     	endif
  9605  00DBC6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9606  00DBC6  0E00               	movlw	low (__mediumconst shr (0+16))
  9607  00DBC8  6EF8               	movwf	tblptru,c
  9608  00DBCA                     	endif
  9609  00DBCA  0008               	tblrd		*
  9610  00DBCC  50F5               	movf	tablat,w,c
  9611  00DBCE  0012               	return	
  9612  00DBD0                     
  9613                           ;fat16.c: 1108: return "MSDOS5.0"[7];
  9614  00DBD0  0E27               	movlw	low (STR_7+7)
  9615  00DBD2  6EF6               	movwf	tblptrl,c
  9616  00DBD4  0EA3               	movlw	high (STR_7+7)
  9617  00DBD6  6EF7               	movwf	tblptrh,c
  9618  00DBD8                     	if	0	;tblptru may be non-zero
  9619  00DBD8                     	endif
  9620  00DBD8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9621  00DBD8  0E00               	movlw	low (__mediumconst shr (0+16))
  9622  00DBDA  6EF8               	movwf	tblptru,c
  9623  00DBDC                     	endif
  9624  00DBDC  0008               	tblrd		*
  9625  00DBDE  50F5               	movf	tablat,w,c
  9626  00DBE0  0012               	return	
  9627  00DBE2                     
  9628                           ;fat16.c: 1110: return ((unsigned char)((((uint16_t)512))&0xFF));
  9629  00DBE2  0E00               	movlw	0
  9630  00DBE4  0012               	return	
  9631  00DBE6                     
  9632                           ;fat16.c: 1112: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
  9633  00DBE6  0E02               	movlw	2
  9634  00DBE8  0012               	return	
  9635  00DBEA                     
  9636                           ;fat16.c: 1114: return 1;
  9637  00DBEA  0E01               	movlw	1
  9638  00DBEC  0012               	return	
  9639  00DBEE                     
  9640                           ;fat16.c: 1116: return ((unsigned char)((((uint16_t)1))&0xFF));
  9641  00DBEE  0E01               	movlw	1
  9642  00DBF0  0012               	return	
  9643  00DBF2                     
  9644                           ;fat16.c: 1118: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
  9645  00DBF2  0E00               	movlw	0
  9646  00DBF4  0012               	return	
  9647  00DBF6                     
  9648                           ;fat16.c: 1120: return 1;
  9649  00DBF6  0E01               	movlw	1
  9650  00DBF8  0012               	return	
  9651  00DBFA                     
  9652                           ;fat16.c: 1122: return ((unsigned char)((((uint16_t)64))&0xFF));
  9653  00DBFA  0E40               	movlw	64
  9654  00DBFC  0012               	return	
  9655  00DBFE                     
  9656                           ;fat16.c: 1124: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
  9657  00DBFE  0E00               	movlw	0
  9658  00DC00  0012               	return	
  9659  00DC02                     
  9660                           ;fat16.c: 1126: return ((unsigned char)((((uint16_t)8191))&0xFF));
  9661  00DC02  0EFF               	movlw	255
  9662  00DC04  0012               	return	
  9663  00DC06                     
  9664                           ;fat16.c: 1128: return ((unsigned char)(((((uint16_t)8191))>>8)&0xFF));
  9665  00DC06  0E1F               	movlw	31
  9666  00DC08  0012               	return	
  9667  00DC0A                     
  9668                           ;fat16.c: 1130: return 0XF8;
  9669  00DC0A  0EF8               	movlw	248
  9670  00DC0C  0012               	return	
  9671  00DC0E                     
  9672                           ;fat16.c: 1132: return ((unsigned char)((((uint16_t)32))&0xFF));
  9673  00DC0E  0E20               	movlw	32
  9674  00DC10  0012               	return	
  9675  00DC12                     
  9676                           ;fat16.c: 1134: return ((unsigned char)(((((uint16_t)32))>>8)&0xFF));
  9677  00DC12  0E00               	movlw	0
  9678  00DC14  0012               	return	
  9679  00DC16                     
  9680                           ;fat16.c: 1136: return ((unsigned char)((((uint16_t)63))&0xFF));
  9681  00DC16  0E3F               	movlw	63
  9682  00DC18  0012               	return	
  9683  00DC1A                     
  9684                           ;fat16.c: 1138: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
  9685  00DC1A  0E00               	movlw	0
  9686  00DC1C  0012               	return	
  9687  00DC1E                     
  9688                           ;fat16.c: 1140: return ((unsigned char)((((uint16_t)16))&0xFF));
  9689  00DC1E  0E10               	movlw	16
  9690  00DC20  0012               	return	
  9691  00DC22                     
  9692                           ;fat16.c: 1142: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
  9693  00DC22  0E00               	movlw	0
  9694  00DC24  0012               	return	
  9695  00DC26                     
  9696                           ;fat16.c: 1144: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xF
      +                          F));
  9697  00DC26  0E00               	movlw	0
  9698  00DC28  0012               	return	
  9699  00DC2A                     
  9700                           ;fat16.c: 1146: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8
      +                          )&0xFF));
  9701  00DC2A  0E00               	movlw	0
  9702  00DC2C  0012               	return	
  9703  00DC2E                     
  9704                           ;fat16.c: 1148: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))&0xFF));
  9705  00DC2E  0E00               	movlw	0
  9706  00DC30  0012               	return	
  9707  00DC32                     
  9708                           ;fat16.c: 1150: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  9709  00DC32  0E00               	movlw	0
  9710  00DC34  0012               	return	
  9711  00DC36                     
  9712                           ;fat16.c: 1152: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
  9713  00DC36  0E01               	movlw	1
  9714  00DC38  0012               	return	
  9715  00DC3A                     
  9716                           ;fat16.c: 1154: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
  9717  00DC3A  0E00               	movlw	0
  9718  00DC3C  0012               	return	
  9719  00DC3E                     
  9720                           ;fat16.c: 1156: return ((unsigned char)((((unsigned short)((((uint32_t)34))&0xFFFF)))&0x
      +                          FF));
  9721  00DC3E  0E22               	movlw	34
  9722  00DC40  0012               	return	
  9723  00DC42                     
  9724                           ;fat16.c: 1158: return ((unsigned char)(((((unsigned short)((((uint32_t)34))&0xFFFF)))>>
      +                          8)&0xFF));
  9725  00DC42  0E00               	movlw	0
  9726  00DC44  0012               	return	
  9727  00DC46                     
  9728                           ;fat16.c: 1162: return ((unsigned char)(((((unsigned short)(((((uint32_t)34))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
  9729                           
  9730                           ;fat16.c: 1161: case 0x2F:
  9731  00DC46  0E00               	movlw	0
  9732  00DC48  0012               	return	
  9733  00DC4A                     
  9734                           ;fat16.c: 1164: return 'F';
  9735  00DC4A  0E46               	movlw	70
  9736  00DC4C  0012               	return	
  9737  00DC4E                     
  9738                           ;fat16.c: 1166: return 'A';
  9739  00DC4E  0E41               	movlw	65
  9740  00DC50  0012               	return	
  9741  00DC52                     
  9742                           ;fat16.c: 1168: return 'T';
  9743  00DC52  0E54               	movlw	84
  9744  00DC54  0012               	return	
  9745  00DC56                     
  9746                           ;fat16.c: 1170: return '1';
  9747  00DC56  0E31               	movlw	49
  9748  00DC58  0012               	return	
  9749  00DC5A                     
  9750                           ;fat16.c: 1172: return '6';
  9751  00DC5A  0E36               	movlw	54
  9752  00DC5C  0012               	return	
  9753  00DC5E                     
  9754                           ;fat16.c: 1174: return ' ';
  9755  00DC5E  0E20               	movlw	32
  9756  00DC60  0012               	return	
  9757  00DC62                     
  9758                           ;fat16.c: 1176: return ' ';
  9759  00DC62  0E20               	movlw	32
  9760  00DC64  0012               	return	
  9761  00DC66                     
  9762                           ;fat16.c: 1178: return ' ';
  9763  00DC66  0E20               	movlw	32
  9764  00DC68  0012               	return	
  9765  00DC6A                     
  9766                           ;fat16.c: 1180: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
  9767  00DC6A  0E55               	movlw	85
  9768  00DC6C  0012               	return	
  9769  00DC6E                     
  9770                           ;fat16.c: 1182: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
  9771  00DC6E  0EAA               	movlw	170
  9772  00DC70  0012               	return	
  9773  00DC72                     
  9774                           ;fat16.c: 1184: return 0X00;
  9775  00DC72  0E00               	movlw	0
  9776                           
  9777                           ;fat16.c: 1185: }
  9778  00DC74  0012               	return	
  9779  00DC76                     l1964:
  9780  00DC76  C060  F062         	movff	__get_fbr@idx,??__get_fbr
  9781  00DC7A  C061  F063         	movff	__get_fbr@idx+1,??__get_fbr+1
  9782                           
  9783                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  9784                           ; Switch size 1, requested type "space"
  9785                           ; Number of cases is 2, Range of values is 0 to 1
  9786                           ; switch strategies available:
  9787                           ; Name         Instructions Cycles
  9788                           ; simple_byte            7     4 (average)
  9789                           ;	Chosen strategy is simple_byte
  9790  00DC7E  0100               	movlb	0	; () banked
  9791  00DC80  5163               	movf	(??__get_fbr+1)& (0+255),w,b
  9792  00DC82  0A00               	xorlw	0	; case 0
  9793  00DC84  B4D8               	btfsc	status,2,c
  9794  00DC86  D004               	goto	l20116
  9795  00DC88  0A01               	xorlw	1	; case 1
  9796  00DC8A  B4D8               	btfsc	status,2,c
  9797  00DC8C  D08D               	goto	l20118
  9798  00DC8E  D7F1               	goto	l2014
  9799  00DC90                     l20116:
  9800                           
  9801                           ; BSR set to: 0
  9802                           ; Switch size 1, requested type "space"
  9803                           ; Number of cases is 46, Range of values is 0 to 61
  9804                           ; switch strategies available:
  9805                           ; Name         Instructions Cycles
  9806                           ; simple_byte          139    70 (average)
  9807                           ;	Chosen strategy is simple_byte
  9808  00DC90  5162               	movf	??__get_fbr& (0+255),w,b
  9809  00DC92  0A00               	xorlw	0	; case 0
  9810  00DC94  B4D8               	btfsc	status,2,c
  9811  00DC96  D757               	goto	l1965
  9812  00DC98  0A01               	xorlw	1	; case 1
  9813  00DC9A  B4D8               	btfsc	status,2,c
  9814  00DC9C  D756               	goto	l1967
  9815  00DC9E  0A03               	xorlw	3	; case 2
  9816  00DCA0  B4D8               	btfsc	status,2,c
  9817  00DCA2  D755               	goto	l1968
  9818  00DCA4  0A01               	xorlw	1	; case 3
  9819  00DCA6  B4D8               	btfsc	status,2,c
  9820  00DCA8  D754               	goto	l1969
  9821  00DCAA  0A07               	xorlw	7	; case 4
  9822  00DCAC  B4D8               	btfsc	status,2,c
  9823  00DCAE  D75A               	goto	l1970
  9824  00DCB0  0A01               	xorlw	1	; case 5
  9825  00DCB2  B4D8               	btfsc	status,2,c
  9826  00DCB4  D760               	goto	l1971
  9827  00DCB6  0A03               	xorlw	3	; case 6
  9828  00DCB8  B4D8               	btfsc	status,2,c
  9829  00DCBA  D766               	goto	l1972
  9830  00DCBC  0A01               	xorlw	1	; case 7
  9831  00DCBE  B4D8               	btfsc	status,2,c
  9832  00DCC0  D76C               	goto	l1973
  9833  00DCC2  0A0F               	xorlw	15	; case 8
  9834  00DCC4  B4D8               	btfsc	status,2,c
  9835  00DCC6  D772               	goto	l1974
  9836  00DCC8  0A01               	xorlw	1	; case 9
  9837  00DCCA  B4D8               	btfsc	status,2,c
  9838  00DCCC  D778               	goto	l1975
  9839  00DCCE  0A03               	xorlw	3	; case 10
  9840  00DCD0  B4D8               	btfsc	status,2,c
  9841  00DCD2  D77E               	goto	l1976
  9842  00DCD4  0A01               	xorlw	1	; case 11
  9843  00DCD6  B4D8               	btfsc	status,2,c
  9844  00DCD8  D784               	goto	l1977
  9845  00DCDA  0A07               	xorlw	7	; case 12
  9846  00DCDC  B4D8               	btfsc	status,2,c
  9847  00DCDE  D783               	goto	l1978
  9848  00DCE0  0A01               	xorlw	1	; case 13
  9849  00DCE2  B4D8               	btfsc	status,2,c
  9850  00DCE4  D782               	goto	l1979
  9851  00DCE6  0A03               	xorlw	3	; case 14
  9852  00DCE8  B4D8               	btfsc	status,2,c
  9853  00DCEA  D781               	goto	l1980
  9854  00DCEC  0A01               	xorlw	1	; case 15
  9855  00DCEE  B4D8               	btfsc	status,2,c
  9856  00DCF0  D780               	goto	l1981
  9857  00DCF2  0A1F               	xorlw	31	; case 16
  9858  00DCF4  B4D8               	btfsc	status,2,c
  9859  00DCF6  D77F               	goto	l1982
  9860  00DCF8  0A01               	xorlw	1	; case 17
  9861  00DCFA  B4D8               	btfsc	status,2,c
  9862  00DCFC  D77E               	goto	l1983
  9863  00DCFE  0A03               	xorlw	3	; case 18
  9864  00DD00  B4D8               	btfsc	status,2,c
  9865  00DD02  D77D               	goto	l1984
  9866  00DD04  0A01               	xorlw	1	; case 19
  9867  00DD06  B4D8               	btfsc	status,2,c
  9868  00DD08  D77C               	goto	l1985
  9869  00DD0A  0A07               	xorlw	7	; case 20
  9870  00DD0C  B4D8               	btfsc	status,2,c
  9871  00DD0E  D77B               	goto	l1986
  9872  00DD10  0A01               	xorlw	1	; case 21
  9873  00DD12  B4D8               	btfsc	status,2,c
  9874  00DD14  D77A               	goto	l1987
  9875  00DD16  0A03               	xorlw	3	; case 22
  9876  00DD18  B4D8               	btfsc	status,2,c
  9877  00DD1A  D779               	goto	l1988
  9878  00DD1C  0A01               	xorlw	1	; case 23
  9879  00DD1E  B4D8               	btfsc	status,2,c
  9880  00DD20  D778               	goto	l1989
  9881  00DD22  0A0F               	xorlw	15	; case 24
  9882  00DD24  B4D8               	btfsc	status,2,c
  9883  00DD26  D777               	goto	l1990
  9884  00DD28  0A01               	xorlw	1	; case 25
  9885  00DD2A  B4D8               	btfsc	status,2,c
  9886  00DD2C  D776               	goto	l1991
  9887  00DD2E  0A03               	xorlw	3	; case 26
  9888  00DD30  B4D8               	btfsc	status,2,c
  9889  00DD32  D775               	goto	l1992
  9890  00DD34  0A01               	xorlw	1	; case 27
  9891  00DD36  B4D8               	btfsc	status,2,c
  9892  00DD38  D774               	goto	l1993
  9893  00DD3A  0A07               	xorlw	7	; case 28
  9894  00DD3C  B4D8               	btfsc	status,2,c
  9895  00DD3E  D773               	goto	l1994
  9896  00DD40  0A01               	xorlw	1	; case 29
  9897  00DD42  B4D8               	btfsc	status,2,c
  9898  00DD44  D772               	goto	l1995
  9899  00DD46  0A03               	xorlw	3	; case 30
  9900  00DD48  B4D8               	btfsc	status,2,c
  9901  00DD4A  D771               	goto	l1996
  9902  00DD4C  0A01               	xorlw	1	; case 31
  9903  00DD4E  B4D8               	btfsc	status,2,c
  9904  00DD50  D770               	goto	l1997
  9905  00DD52  0A37               	xorlw	55	; case 40
  9906  00DD54  B4D8               	btfsc	status,2,c
  9907  00DD56  D76F               	goto	l1998
  9908  00DD58  0A01               	xorlw	1	; case 41
  9909  00DD5A  B4D8               	btfsc	status,2,c
  9910  00DD5C  D76E               	goto	l1999
  9911  00DD5E  0A05               	xorlw	5	; case 44
  9912  00DD60  B4D8               	btfsc	status,2,c
  9913  00DD62  D76D               	goto	l2000
  9914  00DD64  0A01               	xorlw	1	; case 45
  9915  00DD66  B4D8               	btfsc	status,2,c
  9916  00DD68  D76C               	goto	l2001
  9917  00DD6A  0A03               	xorlw	3	; case 46
  9918  00DD6C  B4D8               	btfsc	status,2,c
  9919  00DD6E  D76B               	goto	l2002
  9920  00DD70  0A01               	xorlw	1	; case 47
  9921  00DD72  B4D8               	btfsc	status,2,c
  9922  00DD74  D768               	goto	l2002
  9923  00DD76  0A19               	xorlw	25	; case 54
  9924  00DD78  B4D8               	btfsc	status,2,c
  9925  00DD7A  D767               	goto	l2004
  9926  00DD7C  0A01               	xorlw	1	; case 55
  9927  00DD7E  B4D8               	btfsc	status,2,c
  9928  00DD80  D766               	goto	l2005
  9929  00DD82  0A0F               	xorlw	15	; case 56
  9930  00DD84  B4D8               	btfsc	status,2,c
  9931  00DD86  D765               	goto	l2006
  9932  00DD88  0A01               	xorlw	1	; case 57
  9933  00DD8A  B4D8               	btfsc	status,2,c
  9934  00DD8C  D764               	goto	l2007
  9935  00DD8E  0A03               	xorlw	3	; case 58
  9936  00DD90  B4D8               	btfsc	status,2,c
  9937  00DD92  D763               	goto	l2008
  9938  00DD94  0A01               	xorlw	1	; case 59
  9939  00DD96  B4D8               	btfsc	status,2,c
  9940  00DD98  D762               	goto	l2009
  9941  00DD9A  0A07               	xorlw	7	; case 60
  9942  00DD9C  B4D8               	btfsc	status,2,c
  9943  00DD9E  D761               	goto	l2010
  9944  00DDA0  0A01               	xorlw	1	; case 61
  9945  00DDA2  B4D8               	btfsc	status,2,c
  9946  00DDA4  D760               	goto	l2011
  9947  00DDA6  D765               	goto	l2014
  9948  00DDA8                     l20118:
  9949                           
  9950                           ; BSR set to: 0
  9951                           ; Switch size 1, requested type "space"
  9952                           ; Number of cases is 2, Range of values is 254 to 255
  9953                           ; switch strategies available:
  9954                           ; Name         Instructions Cycles
  9955                           ; simple_byte            7     4 (average)
  9956                           ;	Chosen strategy is simple_byte
  9957  00DDA8  5162               	movf	??__get_fbr& (0+255),w,b
  9958  00DDAA  0AFE               	xorlw	254	; case 254
  9959  00DDAC  B4D8               	btfsc	status,2,c
  9960  00DDAE  D75D               	goto	l2012
  9961  00DDB0  0A01               	xorlw	1	; case 255
  9962  00DDB2  B4D8               	btfsc	status,2,c
  9963  00DDB4  D75C               	goto	l2013
  9964  00DDB6  D75D               	goto	l2014
  9965  00DDB8                     __end_of__get_fbr:
  9966                           	opt stack 0
  9967                           tblptru	equ	0xFF8
  9968                           tblptrh	equ	0xFF7
  9969                           tblptrl	equ	0xFF6
  9970                           tablat	equ	0xFF5
  9971                           prodh	equ	0xFF4
  9972                           prodl	equ	0xFF3
  9973                           postinc0	equ	0xFEE
  9974                           wreg	equ	0xFE8
  9975                           postdec1	equ	0xFE5
  9976                           fsr1h	equ	0xFE2
  9977                           fsr1l	equ	0xFE1
  9978                           indf2	equ	0xFDF
  9979                           postinc2	equ	0xFDE
  9980                           fsr2h	equ	0xFDA
  9981                           fsr2l	equ	0xFD9
  9982                           status	equ	0xFD8
  9983                           
  9984 ;; *************** function _encoder_init *****************
  9985 ;; Defined at:
  9986 ;;		line 92 in file "encoder.c"
  9987 ;; Parameters:    Size  Location     Type
  9988 ;;		None
  9989 ;; Auto vars:     Size  Location     Type
  9990 ;;		None
  9991 ;; Return value:  Size  Location     Type
  9992 ;;                  1    wreg      void 
  9993 ;; Registers used:
  9994 ;;		wreg, status,2, status,0
  9995 ;; Tracked objects:
  9996 ;;		On entry : 0/0
  9997 ;;		On exit  : 0/0
  9998 ;;		Unchanged: 0/0
  9999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10004 ;;Total ram usage:        0 bytes
 10005 ;; Hardware stack levels used:    1
 10006 ;; Hardware stack levels required when called:   10
 10007 ;; This function calls:
 10008 ;;		Nothing
 10009 ;; This function is called by:
 10010 ;;		_system_init
 10011 ;; This function uses a non-reentrant model
 10012 ;;
 10013                           
 10014                           	psect	text21
 10015  015DAC                     __ptext21:
 10016                           	opt stack 0
 10017  015DAC                     _encoder_init:
 10018                           	opt stack 19
 10019                           
 10020                           ;encoder.c: 94: enc1 = PORTE & 0b00000111;
 10021                           
 10022                           ;incstack = 0
 10023  015DAC  5084               	movf	3972,w,c	;volatile
 10024  015DAE  0B07               	andlw	7
 10025  015DB0  0101               	movlb	1	; () banked
 10026  015DB2  6F48               	movwf	_enc1& (0+255),b
 10027                           
 10028                           ;encoder.c: 95: enc2 = PORTA & 0b00000111;
 10029  015DB4  5080               	movf	3968,w,c	;volatile
 10030  015DB6  0B07               	andlw	7
 10031  015DB8  6F47               	movwf	_enc2& (0+255),b
 10032                           
 10033                           ; BSR set to: 1
 10034                           ;encoder.c: 96: os.encoder1Count = 0;
 10035  015DBA  0E00               	movlw	0
 10036  015DBC  6F68               	movwf	(_os+3)& (0+255),b	;volatile
 10037                           
 10038                           ; BSR set to: 1
 10039                           ;encoder.c: 97: os.encoder2Count = 0;
 10040  015DBE  0E00               	movlw	0
 10041  015DC0  6F6A               	movwf	(_os+5)& (0+255),b	;volatile
 10042                           
 10043                           ; BSR set to: 1
 10044                           ;encoder.c: 98: os.button1 = 0;
 10045  015DC2  0E00               	movlw	0
 10046  015DC4  6F69               	movwf	(_os+4)& (0+255),b	;volatile
 10047                           
 10048                           ; BSR set to: 1
 10049                           ;encoder.c: 99: os.button2 = 0;
 10050  015DC6  0E00               	movlw	0
 10051  015DC8  6F6B               	movwf	(_os+6)& (0+255),b	;volatile
 10052                           
 10053                           ; BSR set to: 1
 10054                           ;encoder.c: 100: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 10055  015DCA  0E01               	movlw	1
 10056  015DCC  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 10057                           
 10058                           ; BSR set to: 1
 10059  015DCE  0012               	return		;funcret
 10060  015DD0                     __end_of_encoder_init:
 10061                           	opt stack 0
 10062                           tblptru	equ	0xFF8
 10063                           tblptrh	equ	0xFF7
 10064                           tblptrl	equ	0xFF6
 10065                           tablat	equ	0xFF5
 10066                           prodh	equ	0xFF4
 10067                           prodl	equ	0xFF3
 10068                           postinc0	equ	0xFEE
 10069                           wreg	equ	0xFE8
 10070                           postdec1	equ	0xFE5
 10071                           fsr1h	equ	0xFE2
 10072                           fsr1l	equ	0xFE1
 10073                           indf2	equ	0xFDF
 10074                           postinc2	equ	0xFDE
 10075                           fsr2h	equ	0xFDA
 10076                           fsr2l	equ	0xFD9
 10077                           status	equ	0xFD8
 10078                           
 10079 ;; *************** function _display_update *****************
 10080 ;; Defined at:
 10081 ;;		line 636 in file "display.c"
 10082 ;; Parameters:    Size  Location     Type
 10083 ;;		None
 10084 ;; Auto vars:     Size  Location     Type
 10085 ;;  line            1   16[BANK0 ] unsigned char 
 10086 ;; Return value:  Size  Location     Type
 10087 ;;                  1    wreg      void 
 10088 ;; Registers used:
 10089 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10090 ;; Tracked objects:
 10091 ;;		On entry : 0/0
 10092 ;;		On exit  : 0/0
 10093 ;;		Unchanged: 0/0
 10094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10096 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10098 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10099 ;;Total ram usage:        1 bytes
 10100 ;; Hardware stack levels used:    1
 10101 ;; Hardware stack levels required when called:   14
 10102 ;; This function calls:
 10103 ;;		_i2c_display_cursor
 10104 ;;		_i2c_display_write_fixed
 10105 ;; This function is called by:
 10106 ;;		_main
 10107 ;;		_system_init
 10108 ;; This function uses a non-reentrant model
 10109 ;;
 10110                           
 10111                           	psect	text22
 10112  0158CA                     __ptext22:
 10113                           	opt stack 0
 10114  0158CA                     _display_update:
 10115                           	opt stack 15
 10116                           
 10117                           ;display.c: 638: uint8_t line;;display.c: 639: for(line=0; line<4; ++line)
 10118                           
 10119                           ; BSR set to: 1
 10120                           ;incstack = 0
 10121  0158CA  0E00               	movlw	0
 10122  0158CC  0100               	movlb	0	; () banked
 10123  0158CE  6F70               	movwf	display_update@line& (0+255),b
 10124  0158D0                     l17218:
 10125                           
 10126                           ; BSR set to: 0
 10127  0158D0  0E03               	movlw	3
 10128  0158D2  6570               	cpfsgt	display_update@line& (0+255),b
 10129  0158D4  D001               	goto	l1507
 10130  0158D6  0012               	return	
 10131  0158D8                     l1507:
 10132                           
 10133                           ; BSR set to: 0
 10134                           ;display.c: 640: {;display.c: 641: i2c_display_cursor(line, 0);
 10135                           
 10136                           ; BSR set to: 0
 10137  0158D8  0E00               	movlw	0
 10138  0158DA  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 10139  0158DC  5170               	movf	display_update@line& (0+255),w,b
 10140  0158DE  EC0C  F0AF         	call	_i2c_display_cursor
 10141                           
 10142                           ;display.c: 642: i2c_display_write_fixed(display_content[line], 20);
 10143  0158E2  0100               	movlb	0	; () banked
 10144  0158E4  5170               	movf	display_update@line& (0+255),w,b
 10145  0158E6  0D14               	mullw	20
 10146  0158E8  0E48               	movlw	low _display_content
 10147  0158EA  24F3               	addwf	prodl,w,c
 10148  0158EC  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 10149  0158EE  0E02               	movlw	high _display_content
 10150  0158F0  20F4               	addwfc	prodh,w,c
 10151  0158F2  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 10152  0158F4  0E14               	movlw	20
 10153  0158F6  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 10154  0158F8  EC4C  F0A8         	call	_i2c_display_write_fixed	;wreg free
 10155  0158FC  0100               	movlb	0	; () banked
 10156  0158FE  2B70               	incf	display_update@line& (0+255),f,b
 10157  015900  D7E7               	goto	l17218
 10158  015902                     __end_of_display_update:
 10159                           	opt stack 0
 10160                           tblptru	equ	0xFF8
 10161                           tblptrh	equ	0xFF7
 10162                           tblptrl	equ	0xFF6
 10163                           tablat	equ	0xFF5
 10164                           prodh	equ	0xFF4
 10165                           prodl	equ	0xFF3
 10166                           postinc0	equ	0xFEE
 10167                           wreg	equ	0xFE8
 10168                           postdec1	equ	0xFE5
 10169                           fsr1h	equ	0xFE2
 10170                           fsr1l	equ	0xFE1
 10171                           indf2	equ	0xFDF
 10172                           postinc2	equ	0xFDE
 10173                           fsr2h	equ	0xFDA
 10174                           fsr2l	equ	0xFD9
 10175                           status	equ	0xFD8
 10176                           
 10177 ;; *************** function _i2c_display_write_fixed *****************
 10178 ;; Defined at:
 10179 ;;		line 479 in file "i2c.c"
 10180 ;; Parameters:    Size  Location     Type
 10181 ;;  data            2    5[BANK0 ] PTR unsigned char 
 10182 ;;		 -> display_content(80), 
 10183 ;;  length          1    7[BANK0 ] unsigned char 
 10184 ;; Auto vars:     Size  Location     Type
 10185 ;;  pos             1    8[BANK0 ] unsigned char 
 10186 ;; Return value:  Size  Location     Type
 10187 ;;                  1    wreg      void 
 10188 ;; Registers used:
 10189 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10190 ;; Tracked objects:
 10191 ;;		On entry : 0/0
 10192 ;;		On exit  : 0/0
 10193 ;;		Unchanged: 0/0
 10194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10195 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10196 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10198 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10199 ;;Total ram usage:        4 bytes
 10200 ;; Hardware stack levels used:    1
 10201 ;; Hardware stack levels required when called:   11
 10202 ;; This function calls:
 10203 ;;		__i2c_send
 10204 ;;		__i2c_start
 10205 ;;		__i2c_stop
 10206 ;;		__i2c_wait_idle
 10207 ;; This function is called by:
 10208 ;;		_display_update
 10209 ;; This function uses a non-reentrant model
 10210 ;;
 10211                           
 10212                           	psect	text23
 10213  015098                     __ptext23:
 10214                           	opt stack 0
 10215  015098                     _i2c_display_write_fixed:
 10216                           	opt stack 17
 10217                           
 10218                           ;i2c.c: 481: uint8_t pos;;i2c.c: 486: _i2c_wait_idle();
 10219                           
 10220                           ; BSR set to: 0
 10221                           ;incstack = 0
 10222  015098  ECB6  F0A4         	call	__i2c_wait_idle	;wreg free
 10223                           
 10224                           ;i2c.c: 487: _i2c_start();
 10225  01509C  EC3A  F0B0         	call	__i2c_start	;wreg free
 10226                           
 10227                           ;i2c.c: 488: _i2c_wait_idle();
 10228  0150A0  ECB6  F0A4         	call	__i2c_wait_idle	;wreg free
 10229                           
 10230                           ;i2c.c: 489: _i2c_send(0b01111000);
 10231  0150A4  0E78               	movlw	120
 10232  0150A6  EC27  F0B0         	call	__i2c_send
 10233                           
 10234                           ;i2c.c: 490: _i2c_wait_idle();
 10235  0150AA  ECB6  F0A4         	call	__i2c_wait_idle	;wreg free
 10236                           
 10237                           ;i2c.c: 491: _i2c_send(0b01000000);
 10238  0150AE  0E40               	movlw	64
 10239  0150B0  EC27  F0B0         	call	__i2c_send
 10240                           
 10241                           ;i2c.c: 492: _i2c_wait_idle();
 10242  0150B4  ECB6  F0A4         	call	__i2c_wait_idle	;wreg free
 10243                           
 10244                           ;i2c.c: 495: for(pos=0; pos<length; ++pos)
 10245  0150B8  0E00               	movlw	0
 10246  0150BA  0100               	movlb	0	; () banked
 10247  0150BC  6F68               	movwf	i2c_display_write_fixed@pos& (0+255),b
 10248  0150BE  D00F               	goto	l1260
 10249  0150C0                     
 10250                           ; BSR set to: 0
 10251                           ;i2c.c: 496: {;i2c.c: 497: _i2c_send(data[pos]);
 10252                           
 10253                           ; BSR set to: 0
 10254  0150C0  5168               	movf	i2c_display_write_fixed@pos& (0+255),w,b
 10255  0150C2  0D01               	mullw	1
 10256  0150C4  50F3               	movf	prodl,w,c
 10257  0150C6  2565               	addwf	i2c_display_write_fixed@data& (0+255),w,b
 10258  0150C8  6ED9               	movwf	fsr2l,c
 10259  0150CA  50F4               	movf	prodh,w,c
 10260  0150CC  2166               	addwfc	(i2c_display_write_fixed@data+1)& (0+255),w,b
 10261  0150CE  6EDA               	movwf	fsr2h,c
 10262  0150D0  50DF               	movf	indf2,w,c
 10263  0150D2  EC27  F0B0         	call	__i2c_send
 10264                           
 10265                           ;i2c.c: 498: _i2c_wait_idle();
 10266  0150D6  ECB6  F0A4         	call	__i2c_wait_idle	;wreg free
 10267  0150DA  0100               	movlb	0	; () banked
 10268  0150DC  2B68               	incf	i2c_display_write_fixed@pos& (0+255),f,b
 10269  0150DE                     l1260:
 10270                           
 10271                           ; BSR set to: 0
 10272                           
 10273                           ; BSR set to: 0
 10274  0150DE  5167               	movf	i2c_display_write_fixed@length& (0+255),w,b
 10275  0150E0  5D68               	subwf	i2c_display_write_fixed@pos& (0+255),w,b
 10276  0150E2  A0D8               	btfss	status,0,c
 10277  0150E4  D7ED               	goto	l1261
 10278                           
 10279                           ; BSR set to: 0
 10280                           ;i2c.c: 499: };i2c.c: 501: _i2c_stop();
 10281                           
 10282                           ; BSR set to: 0
 10283  0150E6  EC36  F0B0         	call	__i2c_stop	;wreg free
 10284  0150EA  0012               	return		;funcret
 10285  0150EC                     __end_of_i2c_display_write_fixed:
 10286                           	opt stack 0
 10287                           tblptru	equ	0xFF8
 10288                           tblptrh	equ	0xFF7
 10289                           tblptrl	equ	0xFF6
 10290                           tablat	equ	0xFF5
 10291                           prodh	equ	0xFF4
 10292                           prodl	equ	0xFF3
 10293                           postinc0	equ	0xFEE
 10294                           wreg	equ	0xFE8
 10295                           postdec1	equ	0xFE5
 10296                           fsr1h	equ	0xFE2
 10297                           fsr1l	equ	0xFE1
 10298                           indf2	equ	0xFDF
 10299                           postinc2	equ	0xFDE
 10300                           fsr2h	equ	0xFDA
 10301                           fsr2l	equ	0xFD9
 10302                           status	equ	0xFD8
 10303                           
 10304 ;; *************** function _i2c_display_cursor *****************
 10305 ;; Defined at:
 10306 ;;		line 439 in file "i2c.c"
 10307 ;; Parameters:    Size  Location     Type
 10308 ;;  line            1    wreg     unsigned char 
 10309 ;;  position        1   13[BANK0 ] unsigned char 
 10310 ;; Auto vars:     Size  Location     Type
 10311 ;;  line            1   14[BANK0 ] unsigned char 
 10312 ;;  address         1   15[BANK0 ] unsigned char 
 10313 ;; Return value:  Size  Location     Type
 10314 ;;                  1    wreg      void 
 10315 ;; Registers used:
 10316 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10317 ;; Tracked objects:
 10318 ;;		On entry : 0/0
 10319 ;;		On exit  : 0/0
 10320 ;;		Unchanged: 0/0
 10321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10322 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10323 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10325 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10326 ;;Total ram usage:        3 bytes
 10327 ;; Hardware stack levels used:    1
 10328 ;; Hardware stack levels required when called:   13
 10329 ;; This function calls:
 10330 ;;		__ic2_display_set_ddram_address
 10331 ;; This function is called by:
 10332 ;;		_display_update
 10333 ;; This function uses a non-reentrant model
 10334 ;;
 10335                           
 10336                           	psect	text24
 10337  015E18                     __ptext24:
 10338                           	opt stack 0
 10339  015E18                     _i2c_display_cursor:
 10340                           	opt stack 15
 10341                           
 10342                           ;incstack = 0
 10343                           ;i2c_display_cursor@line stored from wreg
 10344  015E18  0100               	movlb	0	; () banked
 10345  015E1A  6F6E               	movwf	i2c_display_cursor@line& (0+255),b
 10346                           
 10347                           ;i2c.c: 441: uint8_t address;;i2c.c: 444: line &= 0b11;
 10348  015E1C  0E03               	movlw	3
 10349  015E1E  0100               	movlb	0	; () banked
 10350  015E20  176E               	andwf	i2c_display_cursor@line& (0+255),f,b
 10351                           
 10352                           ;i2c.c: 445: address = line<<5;
 10353  015E22  396E               	swapf	i2c_display_cursor@line& (0+255),w,b
 10354  015E24  46E8               	rlncf	wreg,f,c
 10355  015E26  0BE0               	andlw	224
 10356  015E28  6F6F               	movwf	i2c_display_cursor@address& (0+255),b
 10357                           
 10358                           ;i2c.c: 446: position &= 0b11111;
 10359  015E2A  0E1F               	movlw	31
 10360  015E2C  176D               	andwf	i2c_display_cursor@position& (0+255),f,b
 10361                           
 10362                           ;i2c.c: 447: address |= position;
 10363  015E2E  516D               	movf	i2c_display_cursor@position& (0+255),w,b
 10364  015E30  136F               	iorwf	i2c_display_cursor@address& (0+255),f,b
 10365                           
 10366                           ; BSR set to: 0
 10367                           ;i2c.c: 453: _ic2_display_set_ddram_address(address);
 10368  015E32  516F               	movf	i2c_display_cursor@address& (0+255),w,b
 10369  015E34  ECE8  F0AE         	call	__ic2_display_set_ddram_address
 10370  015E38  0012               	return		;funcret
 10371  015E3A                     __end_of_i2c_display_cursor:
 10372                           	opt stack 0
 10373                           tblptru	equ	0xFF8
 10374                           tblptrh	equ	0xFF7
 10375                           tblptrl	equ	0xFF6
 10376                           tablat	equ	0xFF5
 10377                           prodh	equ	0xFF4
 10378                           prodl	equ	0xFF3
 10379                           postinc0	equ	0xFEE
 10380                           wreg	equ	0xFE8
 10381                           postdec1	equ	0xFE5
 10382                           fsr1h	equ	0xFE2
 10383                           fsr1l	equ	0xFE1
 10384                           indf2	equ	0xFDF
 10385                           postinc2	equ	0xFDE
 10386                           fsr2h	equ	0xFDA
 10387                           fsr2l	equ	0xFD9
 10388                           status	equ	0xFD8
 10389                           
 10390 ;; *************** function __ic2_display_set_ddram_address *****************
 10391 ;; Defined at:
 10392 ;;		line 410 in file "i2c.c"
 10393 ;; Parameters:    Size  Location     Type
 10394 ;;  address         1    wreg     unsigned char 
 10395 ;; Auto vars:     Size  Location     Type
 10396 ;;  address         1   10[BANK0 ] unsigned char 
 10397 ;;  data_array      2   11[BANK0 ] unsigned char [2]
 10398 ;; Return value:  Size  Location     Type
 10399 ;;                  1    wreg      void 
 10400 ;; Registers used:
 10401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10402 ;; Tracked objects:
 10403 ;;		On entry : 0/0
 10404 ;;		On exit  : 0/0
 10405 ;;		Unchanged: 0/0
 10406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10408 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10410 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10411 ;;Total ram usage:        3 bytes
 10412 ;; Hardware stack levels used:    1
 10413 ;; Hardware stack levels required when called:   12
 10414 ;; This function calls:
 10415 ;;		__i2c_write
 10416 ;; This function is called by:
 10417 ;;		_i2c_display_cursor
 10418 ;; This function uses a non-reentrant model
 10419 ;;
 10420                           
 10421                           	psect	text25
 10422  015DD0                     __ptext25:
 10423                           	opt stack 0
 10424  015DD0                     __ic2_display_set_ddram_address:
 10425                           	opt stack 15
 10426                           
 10427                           ;incstack = 0
 10428                           ;__ic2_display_set_ddram_address@address stored from wreg
 10429  015DD0  0100               	movlb	0	; () banked
 10430  015DD2  6F6A               	movwf	__ic2_display_set_ddram_address@address& (0+255),b
 10431                           
 10432                           ;i2c.c: 412: uint8_t data_array[2];;i2c.c: 413: data_array[0] = 0b00000000;
 10433  015DD4  0E00               	movlw	0
 10434  015DD6  0100               	movlb	0	; () banked
 10435  015DD8  6F6B               	movwf	__ic2_display_set_ddram_address@data_array& (0+255),b
 10436                           
 10437                           ; BSR set to: 0
 10438                           ;i2c.c: 414: data_array[1] = 0b10000000 | address;
 10439  015DDA  516A               	movf	__ic2_display_set_ddram_address@address& (0+255),w,b
 10440  015DDC  0980               	iorlw	128
 10441  015DDE  6F6C               	movwf	(__ic2_display_set_ddram_address@data_array+1)& (0+255),b
 10442                           
 10443                           ; BSR set to: 0
 10444                           ;i2c.c: 420: _i2c_write(0b01111000, &data_array[0], 2);
 10445  015DE0  0E6B               	movlw	low __ic2_display_set_ddram_address@data_array
 10446  015DE2  6F65               	movwf	__i2c_write@data& (0+255),b
 10447  015DE4  0E00               	movlw	high __ic2_display_set_ddram_address@data_array
 10448  015DE6  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10449  015DE8  0E02               	movlw	2
 10450  015DEA  6F67               	movwf	__i2c_write@length& (0+255),b
 10451  015DEC  0E78               	movlw	120
 10452  015DEE  EC6D  F0A9         	call	__i2c_write
 10453  015DF2  0012               	return		;funcret
 10454  015DF4                     __end_of__ic2_display_set_ddram_address:
 10455                           	opt stack 0
 10456                           tblptru	equ	0xFF8
 10457                           tblptrh	equ	0xFF7
 10458                           tblptrl	equ	0xFF6
 10459                           tablat	equ	0xFF5
 10460                           prodh	equ	0xFF4
 10461                           prodl	equ	0xFF3
 10462                           postinc0	equ	0xFEE
 10463                           wreg	equ	0xFE8
 10464                           postdec1	equ	0xFE5
 10465                           fsr1h	equ	0xFE2
 10466                           fsr1l	equ	0xFE1
 10467                           indf2	equ	0xFDF
 10468                           postinc2	equ	0xFDE
 10469                           fsr2h	equ	0xFDA
 10470                           fsr2l	equ	0xFD9
 10471                           status	equ	0xFD8
 10472                           
 10473 ;; *************** function _display_init *****************
 10474 ;; Defined at:
 10475 ;;		line 274 in file "display.c"
 10476 ;; Parameters:    Size  Location     Type
 10477 ;;		None
 10478 ;; Auto vars:     Size  Location     Type
 10479 ;;		None
 10480 ;; Return value:  Size  Location     Type
 10481 ;;                  1    wreg      void 
 10482 ;; Registers used:
 10483 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10484 ;; Tracked objects:
 10485 ;;		On entry : 0/0
 10486 ;;		On exit  : 0/0
 10487 ;;		Unchanged: 0/0
 10488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10493 ;;Total ram usage:        0 bytes
 10494 ;; Hardware stack levels used:    1
 10495 ;; Hardware stack levels required when called:   15
 10496 ;; This function calls:
 10497 ;;		__display_start
 10498 ;;		_i2c_display_init
 10499 ;;		_i2c_display_program_custom_character
 10500 ;; This function is called by:
 10501 ;;		_system_init
 10502 ;; This function uses a non-reentrant model
 10503 ;;
 10504                           
 10505                           	psect	text26
 10506  01581E                     __ptext26:
 10507                           	opt stack 0
 10508  01581E                     _display_init:
 10509                           	opt stack 14
 10510                           
 10511                           ;display.c: 276: i2c_display_init();
 10512                           
 10513                           ;incstack = 0
 10514  01581E  EC45  F0A9         	call	_i2c_display_init	;wreg free
 10515                           
 10516                           ;display.c: 277: i2c_display_program_custom_character(0x00, bit_pattern_verticalbar);
 10517  015822  0EEA               	movlw	low _bit_pattern_verticalbar
 10518  015824  0100               	movlb	0	; () banked
 10519  015826  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 10520  015828  0EA2               	movlw	high _bit_pattern_verticalbar
 10521  01582A  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 10522  01582C  0E00               	movlw	0
 10523  01582E  EC58  F0A1         	call	_i2c_display_program_custom_character
 10524                           
 10525                           ;display.c: 278: i2c_display_program_custom_character(0x01, bit_pattern_degree);
 10526  015832  0EE2               	movlw	low _bit_pattern_degree
 10527  015834  0100               	movlb	0	; () banked
 10528  015836  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 10529  015838  0EA2               	movlw	high _bit_pattern_degree
 10530  01583A  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 10531  01583C  0E01               	movlw	1
 10532  01583E  EC58  F0A1         	call	_i2c_display_program_custom_character
 10533                           
 10534                           ;display.c: 279: i2c_display_program_custom_character(0x02, bit_pattern_ae);
 10535  015842  0EDA               	movlw	low _bit_pattern_ae
 10536  015844  0100               	movlb	0	; () banked
 10537  015846  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 10538  015848  0EA2               	movlw	high _bit_pattern_ae
 10539  01584A  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 10540  01584C  0E02               	movlw	2
 10541  01584E  EC58  F0A1         	call	_i2c_display_program_custom_character
 10542                           
 10543                           ;display.c: 281: _display_start();
 10544  015852  EC07  F099         	call	__display_start	;wreg free
 10545  015856  0012               	return		;funcret
 10546  015858                     __end_of_display_init:
 10547                           	opt stack 0
 10548                           tblptru	equ	0xFF8
 10549                           tblptrh	equ	0xFF7
 10550                           tblptrl	equ	0xFF6
 10551                           tablat	equ	0xFF5
 10552                           prodh	equ	0xFF4
 10553                           prodl	equ	0xFF3
 10554                           postinc0	equ	0xFEE
 10555                           wreg	equ	0xFE8
 10556                           postdec1	equ	0xFE5
 10557                           fsr1h	equ	0xFE2
 10558                           fsr1l	equ	0xFE1
 10559                           indf2	equ	0xFDF
 10560                           postinc2	equ	0xFDE
 10561                           fsr2h	equ	0xFDA
 10562                           fsr2l	equ	0xFD9
 10563                           status	equ	0xFD8
 10564                           
 10565 ;; *************** function _i2c_display_program_custom_character *****************
 10566 ;; Defined at:
 10567 ;;		line 504 in file "i2c.c"
 10568 ;; Parameters:    Size  Location     Type
 10569 ;;  address         1    wreg     unsigned char 
 10570 ;;  bit_pattern     2   14[BANK0 ] PTR unsigned char 
 10571 ;;		 -> bit_pattern_ae(8), bit_pattern_degree(8), bit_pattern_verticalbar(8), 
 10572 ;; Auto vars:     Size  Location     Type
 10573 ;;  address         1   31[BANK0 ] unsigned char 
 10574 ;;  data_array     11   20[BANK0 ] unsigned char [11]
 10575 ;;  cntr            1   32[BANK0 ] unsigned char 
 10576 ;; Return value:  Size  Location     Type
 10577 ;;                  1    wreg      void 
 10578 ;; Registers used:
 10579 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10580 ;; Tracked objects:
 10581 ;;		On entry : 0/0
 10582 ;;		On exit  : 0/0
 10583 ;;		Unchanged: 0/0
 10584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10585 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10586 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10587 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10588 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10589 ;;Total ram usage:       19 bytes
 10590 ;; Hardware stack levels used:    1
 10591 ;; Hardware stack levels required when called:   13
 10592 ;; This function calls:
 10593 ;;		__i2c_write
 10594 ;;		__ic2_display_set_cgram_address
 10595 ;; This function is called by:
 10596 ;;		_display_init
 10597 ;; This function uses a non-reentrant model
 10598 ;;
 10599                           
 10600                           	psect	text27
 10601  0142B0                     __ptext27:
 10602                           	opt stack 0
 10603  0142B0                     _i2c_display_program_custom_character:
 10604                           	opt stack 15
 10605                           
 10606                           ;incstack = 0
 10607                           ;i2c_display_program_custom_character@address stored from wreg
 10608  0142B0  0100               	movlb	0	; () banked
 10609  0142B2  6F7F               	movwf	i2c_display_program_custom_character@address& (0+255),b
 10610                           
 10611                           ;i2c.c: 506: uint8_t cntr;;i2c.c: 507: uint8_t data_array[11];;i2c.c: 510: _ic2_display_
      +                          set_cgram_address(address<<3);
 10612  0142B4  0100               	movlb	0	; () banked
 10613  0142B6  397F               	swapf	i2c_display_program_custom_character@address& (0+255),w,b
 10614  0142B8  42E8               	rrncf	wreg,f,c
 10615  0142BA  0BF8               	andlw	248
 10616  0142BC  EC21  F0AE         	call	__ic2_display_set_cgram_address
 10617                           
 10618                           ;i2c.c: 513: data_array[0] = 0b01000000;
 10619  0142C0  0E40               	movlw	64
 10620  0142C2  0100               	movlb	0	; () banked
 10621  0142C4  6F74               	movwf	i2c_display_program_custom_character@data_array& (0+255),b
 10622                           
 10623                           ; BSR set to: 0
 10624                           ;i2c.c: 514: for(cntr=0; cntr<8; ++cntr)
 10625  0142C6  0E00               	movlw	0
 10626  0142C8  6F80               	movwf	i2c_display_program_custom_character@cntr& (0+255),b
 10627  0142CA                     l16126:
 10628                           
 10629                           ; BSR set to: 0
 10630  0142CA  0E07               	movlw	7
 10631  0142CC  6580               	cpfsgt	i2c_display_program_custom_character@cntr& (0+255),b
 10632  0142CE  D001               	goto	l1266
 10633  0142D0  D023               	goto	u15230
 10634  0142D2                     l1266:
 10635                           
 10636                           ; BSR set to: 0
 10637                           ;i2c.c: 515: {;i2c.c: 516: data_array[cntr+1] = bit_pattern[cntr] & 0b00011111;
 10638                           
 10639                           ; BSR set to: 0
 10640  0142D2  5180               	movf	i2c_display_program_custom_character@cntr& (0+255),w,b
 10641  0142D4  6F70               	movwf	??_i2c_display_program_custom_character& (0+255),b
 10642  0142D6  6B71               	clrf	(??_i2c_display_program_custom_character+1)& (0+255),b
 10643  0142D8  0E01               	movlw	1
 10644  0142DA  2770               	addwf	??_i2c_display_program_custom_character& (0+255),f,b
 10645  0142DC  0E00               	movlw	0
 10646  0142DE  2371               	addwfc	(??_i2c_display_program_custom_character+1)& (0+255),f,b
 10647  0142E0  0E74               	movlw	low i2c_display_program_custom_character@data_array
 10648  0142E2  2570               	addwf	??_i2c_display_program_custom_character& (0+255),w,b
 10649  0142E4  6ED9               	movwf	fsr2l,c
 10650  0142E6  0E00               	movlw	high i2c_display_program_custom_character@data_array
 10651  0142E8  2171               	addwfc	(??_i2c_display_program_custom_character+1)& (0+255),w,b
 10652  0142EA  6EDA               	movwf	fsr2h,c
 10653  0142EC  5180               	movf	i2c_display_program_custom_character@cntr& (0+255),w,b
 10654  0142EE  0D01               	mullw	1
 10655  0142F0  C06E  F072         	movff	i2c_display_program_custom_character@bit_pattern,??_i2c_display_program_custom_ch
      +                          aracter+2
 10656  0142F4  C06F  F073         	movff	i2c_display_program_custom_character@bit_pattern+1,??_i2c_display_program_custom_
      +                          character+3
 10657  0142F8  50F3               	movf	prodl,w,c
 10658  0142FA  2772               	addwf	(??_i2c_display_program_custom_character+2)& (0+255),f,b
 10659  0142FC  50F4               	movf	prodh,w,c
 10660  0142FE  2373               	addwfc	(??_i2c_display_program_custom_character+3)& (0+255),f,b
 10661  014300  C072  FFF6         	movff	??_i2c_display_program_custom_character+2,tblptrl
 10662  014304  C073  FFF7         	movff	??_i2c_display_program_custom_character+3,tblptrh
 10663  014308                     	if	0	;tblptru may be non-zero
 10664  014308                     	endif
 10665  014308                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10666  014308  0E00               	movlw	low (__mediumconst shr (0+16))
 10667  01430A  6EF8               	movwf	tblptru,c
 10668  01430C                     	endif
 10669  01430C  0008               	tblrd		*
 10670  01430E  50F5               	movf	tablat,w,c
 10671  014310  0B1F               	andlw	31
 10672  014312  6EDF               	movwf	indf2,c
 10673                           
 10674                           ; BSR set to: 0
 10675  014314  2B80               	incf	i2c_display_program_custom_character@cntr& (0+255),f,b
 10676  014316  D7D9               	goto	l16126
 10677  014318                     u15230:
 10678                           
 10679                           ; BSR set to: 0
 10680                           ;i2c.c: 517: };i2c.c: 518: _i2c_write(0b01111000, data_array, 9);
 10681                           
 10682                           ; BSR set to: 0
 10683  014318  0E74               	movlw	low i2c_display_program_custom_character@data_array
 10684  01431A  6F65               	movwf	__i2c_write@data& (0+255),b
 10685  01431C  0E00               	movlw	high i2c_display_program_custom_character@data_array
 10686  01431E  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10687  014320  0E09               	movlw	9
 10688  014322  6F67               	movwf	__i2c_write@length& (0+255),b
 10689  014324  0E78               	movlw	120
 10690  014326  EC6D  F0A9         	call	__i2c_write
 10691  01432A  0012               	return		;funcret
 10692  01432C                     __end_of_i2c_display_program_custom_character:
 10693                           	opt stack 0
 10694                           tblptru	equ	0xFF8
 10695                           tblptrh	equ	0xFF7
 10696                           tblptrl	equ	0xFF6
 10697                           tablat	equ	0xFF5
 10698                           prodh	equ	0xFF4
 10699                           prodl	equ	0xFF3
 10700                           postinc0	equ	0xFEE
 10701                           wreg	equ	0xFE8
 10702                           postdec1	equ	0xFE5
 10703                           fsr1h	equ	0xFE2
 10704                           fsr1l	equ	0xFE1
 10705                           indf2	equ	0xFDF
 10706                           postinc2	equ	0xFDE
 10707                           fsr2h	equ	0xFDA
 10708                           fsr2l	equ	0xFD9
 10709                           status	equ	0xFD8
 10710                           
 10711 ;; *************** function __ic2_display_set_cgram_address *****************
 10712 ;; Defined at:
 10713 ;;		line 423 in file "i2c.c"
 10714 ;; Parameters:    Size  Location     Type
 10715 ;;  address         1    wreg     unsigned char 
 10716 ;; Auto vars:     Size  Location     Type
 10717 ;;  address         1   13[BANK0 ] unsigned char 
 10718 ;;  data_array      3   10[BANK0 ] unsigned char [3]
 10719 ;; Return value:  Size  Location     Type
 10720 ;;                  1    wreg      void 
 10721 ;; Registers used:
 10722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10723 ;; Tracked objects:
 10724 ;;		On entry : 0/0
 10725 ;;		On exit  : 0/0
 10726 ;;		Unchanged: 0/0
 10727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10729 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10731 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10732 ;;Total ram usage:        4 bytes
 10733 ;; Hardware stack levels used:    1
 10734 ;; Hardware stack levels required when called:   12
 10735 ;; This function calls:
 10736 ;;		__i2c_write
 10737 ;; This function is called by:
 10738 ;;		_i2c_display_program_custom_character
 10739 ;; This function uses a non-reentrant model
 10740 ;;
 10741                           
 10742                           	psect	text28
 10743  015C42                     __ptext28:
 10744                           	opt stack 0
 10745  015C42                     __ic2_display_set_cgram_address:
 10746                           	opt stack 15
 10747                           
 10748                           ;incstack = 0
 10749                           ;__ic2_display_set_cgram_address@address stored from wreg
 10750  015C42  0100               	movlb	0	; () banked
 10751  015C44  6F6D               	movwf	__ic2_display_set_cgram_address@address& (0+255),b
 10752                           
 10753                           ;i2c.c: 425: uint8_t data_array[3];;i2c.c: 430: address &= 0b001111111;
 10754  015C46  0100               	movlb	0	; () banked
 10755  015C48  9F6D               	bcf	__ic2_display_set_cgram_address@address& (0+255),7,b
 10756                           
 10757                           ; BSR set to: 0
 10758                           ;i2c.c: 431: data_array[0] = 0b00000000;
 10759  015C4A  0E00               	movlw	0
 10760  015C4C  6F6A               	movwf	__ic2_display_set_cgram_address@data_array& (0+255),b
 10761                           
 10762                           ; BSR set to: 0
 10763                           ;i2c.c: 432: data_array[1] = 0b00111000;
 10764  015C4E  0E38               	movlw	56
 10765  015C50  6F6B               	movwf	(__ic2_display_set_cgram_address@data_array+1)& (0+255),b
 10766                           
 10767                           ;i2c.c: 433: data_array[2] = 0b01000000 | address;
 10768  015C52  516D               	movf	__ic2_display_set_cgram_address@address& (0+255),w,b
 10769  015C54  0940               	iorlw	64
 10770  015C56  6F6C               	movwf	(__ic2_display_set_cgram_address@data_array+2)& (0+255),b
 10771                           
 10772                           ; BSR set to: 0
 10773                           ;i2c.c: 436: _i2c_write(0b01111000, data_array, 3);
 10774  015C58  0E6A               	movlw	low __ic2_display_set_cgram_address@data_array
 10775  015C5A  6F65               	movwf	__i2c_write@data& (0+255),b
 10776  015C5C  0E00               	movlw	high __ic2_display_set_cgram_address@data_array
 10777  015C5E  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10778  015C60  0E03               	movlw	3
 10779  015C62  6F67               	movwf	__i2c_write@length& (0+255),b
 10780  015C64  0E78               	movlw	120
 10781  015C66  EC6D  F0A9         	call	__i2c_write
 10782  015C6A  0012               	return		;funcret
 10783  015C6C                     __end_of__ic2_display_set_cgram_address:
 10784                           	opt stack 0
 10785                           tblptru	equ	0xFF8
 10786                           tblptrh	equ	0xFF7
 10787                           tblptrl	equ	0xFF6
 10788                           tablat	equ	0xFF5
 10789                           prodh	equ	0xFF4
 10790                           prodl	equ	0xFF3
 10791                           postinc0	equ	0xFEE
 10792                           wreg	equ	0xFE8
 10793                           postdec1	equ	0xFE5
 10794                           fsr1h	equ	0xFE2
 10795                           fsr1l	equ	0xFE1
 10796                           indf2	equ	0xFDF
 10797                           postinc2	equ	0xFDE
 10798                           fsr2h	equ	0xFDA
 10799                           fsr2l	equ	0xFD9
 10800                           status	equ	0xFD8
 10801                           
 10802 ;; *************** function _i2c_display_init *****************
 10803 ;; Defined at:
 10804 ;;		line 381 in file "i2c.c"
 10805 ;; Parameters:    Size  Location     Type
 10806 ;;		None
 10807 ;; Auto vars:     Size  Location     Type
 10808 ;;  init_sequenc    9   11[BANK0 ] unsigned char [9]
 10809 ;; Return value:  Size  Location     Type
 10810 ;;                  1    wreg      void 
 10811 ;; Registers used:
 10812 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10813 ;; Tracked objects:
 10814 ;;		On entry : 0/0
 10815 ;;		On exit  : 0/0
 10816 ;;		Unchanged: 0/0
 10817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10819 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10820 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10821 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10822 ;;Total ram usage:       10 bytes
 10823 ;; Hardware stack levels used:    1
 10824 ;; Hardware stack levels required when called:   12
 10825 ;; This function calls:
 10826 ;;		__i2c_write
 10827 ;; This function is called by:
 10828 ;;		_display_init
 10829 ;; This function uses a non-reentrant model
 10830 ;;
 10831                           
 10832                           	psect	text29
 10833  01528A                     __ptext29:
 10834                           	opt stack 0
 10835  01528A                     _i2c_display_init:
 10836                           	opt stack 16
 10837                           
 10838                           ;i2c.c: 383: uint8_t init_sequence[9] = {;i2c.c: 384: 0x3A,;i2c.c: 386: 0b00011110,;i2c.
      +                          c: 387: 0x39,;i2c.c: 389: 0b00001100,;i2c.c: 390: 0x74,;i2c.c: 391: 0b1011100,;i2c.c: 39
      +                          2: 0x6d,;i2c.c: 393: 0x0c,;i2c.c: 394: 0x01;i2c.c: 395: };
 10839                           
 10840                           ;incstack = 0
 10841  01528A  EE22  F0BA         	lfsr	2,i2c_display_init@F7093
 10842  01528E  EE10  F06B         	lfsr	1,i2c_display_init@init_sequence
 10843  015292  0E08               	movlw	8
 10844  015294                     u15201:
 10845  015294  CFDB FFE3          	movff	plusw2,plusw1
 10846  015298  06E8               	decf	wreg,f,c
 10847  01529A  E2FC               	bc	u15201
 10848                           
 10849                           ;i2c.c: 398: LATAbits.LA3 = 0;
 10850  01529C  9689               	bcf	3977,3,c	;volatile
 10851                           
 10852                           ;i2c.c: 399: _delay((unsigned long)((10)*(8000000/4000.0)));
 10853  01529E  0E1A               	movlw	26
 10854  0152A0  0100               	movlb	0	; () banked
 10855  0152A2  6F6A               	movwf	??_i2c_display_init& (0+255),b
 10856  0152A4  0EF8               	movlw	248
 10857  0152A6                     u20047:
 10858  0152A6  2EE8               	decfsz	wreg,f,c
 10859  0152A8  D7FE               	bra	u20047
 10860  0152AA  2F6A               	decfsz	??_i2c_display_init& (0+255),f,b
 10861  0152AC  D7FC               	bra	u20047
 10862  0152AE  F000               	nop	
 10863                           
 10864                           ;i2c.c: 400: LATAbits.LA3 = 1;
 10865  0152B0  8689               	bsf	3977,3,c	;volatile
 10866                           
 10867                           ;i2c.c: 401: _delay((unsigned long)((50)*(8000000/4000.0)));
 10868  0152B2  0E82               	movlw	130
 10869  0152B4  0100               	movlb	0	; () banked
 10870  0152B6  6F6A               	movwf	??_i2c_display_init& (0+255),b
 10871  0152B8  0EDD               	movlw	221
 10872  0152BA                     u20057:
 10873  0152BA  2EE8               	decfsz	wreg,f,c
 10874  0152BC  D7FE               	bra	u20057
 10875  0152BE  2F6A               	decfsz	??_i2c_display_init& (0+255),f,b
 10876  0152C0  D7FC               	bra	u20057
 10877  0152C2  D000               	nop2	
 10878                           
 10879                           ;i2c.c: 407: _i2c_write(0b01111000, &init_sequence[0], 9);
 10880  0152C4  0E6B               	movlw	low i2c_display_init@init_sequence
 10881  0152C6  0100               	movlb	0	; () banked
 10882  0152C8  6F65               	movwf	__i2c_write@data& (0+255),b
 10883  0152CA  0E00               	movlw	high i2c_display_init@init_sequence
 10884  0152CC  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10885  0152CE  0E09               	movlw	9
 10886  0152D0  6F67               	movwf	__i2c_write@length& (0+255),b
 10887  0152D2  0E78               	movlw	120
 10888  0152D4  EC6D  F0A9         	call	__i2c_write
 10889  0152D8  0012               	return		;funcret
 10890  0152DA                     __end_of_i2c_display_init:
 10891                           	opt stack 0
 10892                           tblptru	equ	0xFF8
 10893                           tblptrh	equ	0xFF7
 10894                           tblptrl	equ	0xFF6
 10895                           tablat	equ	0xFF5
 10896                           prodh	equ	0xFF4
 10897                           prodl	equ	0xFF3
 10898                           postinc0	equ	0xFEE
 10899                           wreg	equ	0xFE8
 10900                           postdec1	equ	0xFE5
 10901                           plusw1	equ	0xFE3
 10902                           fsr1h	equ	0xFE2
 10903                           fsr1l	equ	0xFE1
 10904                           indf2	equ	0xFDF
 10905                           postinc2	equ	0xFDE
 10906                           plusw2	equ	0xFDB
 10907                           fsr2h	equ	0xFDA
 10908                           fsr2l	equ	0xFD9
 10909                           status	equ	0xFD8
 10910                           
 10911 ;; *************** function __i2c_write *****************
 10912 ;; Defined at:
 10913 ;;		line 86 in file "i2c.c"
 10914 ;; Parameters:    Size  Location     Type
 10915 ;;  slave_addres    1    wreg     unsigned char 
 10916 ;;  data            2    5[BANK0 ] PTR unsigned char 
 10917 ;;		 -> i2c_display_program_custom_character@data_array(11), _ic2_display_set_cgram_address@data_array(3), _ic2_display_
      +set_ddram_address@data_array(2), i2c_display_init@init_sequence(9), 
 10918 ;;		 -> _i2c_display_send_init_sequence@init_sequence(9), i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_
      +readByte@addr(1), 
 10919 ;;		 -> i2c_eeprom_writeByte@dat(2), i2c_adc_start@configuration_byte(1), 
 10920 ;;  length          1    7[BANK0 ] unsigned char 
 10921 ;; Auto vars:     Size  Location     Type
 10922 ;;  slave_addres    1    8[BANK0 ] unsigned char 
 10923 ;;  cntr            1    9[BANK0 ] unsigned char 
 10924 ;; Return value:  Size  Location     Type
 10925 ;;                  1    wreg      void 
 10926 ;; Registers used:
 10927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10928 ;; Tracked objects:
 10929 ;;		On entry : 0/0
 10930 ;;		On exit  : 0/0
 10931 ;;		Unchanged: 0/0
 10932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10933 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10934 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10936 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10937 ;;Total ram usage:        5 bytes
 10938 ;; Hardware stack levels used:    1
 10939 ;; Hardware stack levels required when called:   11
 10940 ;; This function calls:
 10941 ;;		__i2c_send
 10942 ;;		__i2c_start
 10943 ;;		__i2c_stop
 10944 ;;		__i2c_wait_idle
 10945 ;; This function is called by:
 10946 ;;		_i2c_eeprom_read
 10947 ;;		_i2c_display_init
 10948 ;;		__ic2_display_set_ddram_address
 10949 ;;		__ic2_display_set_cgram_address
 10950 ;;		_i2c_display_program_custom_character
 10951 ;;		_i2c_adc_start
 10952 ;;		_i2c_eeprom_writeByte
 10953 ;;		_i2c_eeprom_readByte
 10954 ;;		__i2c_display_send_init_sequence
 10955 ;; This function uses a non-reentrant model
 10956 ;;
 10957                           
 10958                           	psect	text30
 10959  0152DA                     __ptext30:
 10960                           	opt stack 0
 10961  0152DA                     __i2c_write:
 10962                           	opt stack 16
 10963                           
 10964                           ;incstack = 0
 10965                           ;__i2c_write@slave_address stored from wreg
 10966  0152DA  0100               	movlb	0	; () banked
 10967  0152DC  6F68               	movwf	__i2c_write@slave_address& (0+255),b
 10968                           
 10969                           ;i2c.c: 88: uint8_t cntr;;i2c.c: 90: _i2c_wait_idle();
 10970  0152DE  ECB6  F0A4         	call	__i2c_wait_idle	;wreg free
 10971                           
 10972                           ;i2c.c: 91: _i2c_start();
 10973  0152E2  EC3A  F0B0         	call	__i2c_start	;wreg free
 10974                           
 10975                           ;i2c.c: 92: _i2c_wait_idle();
 10976  0152E6  ECB6  F0A4         	call	__i2c_wait_idle	;wreg free
 10977                           
 10978                           ;i2c.c: 93: _i2c_send(slave_address);
 10979  0152EA  0100               	movlb	0	; () banked
 10980  0152EC  5168               	movf	__i2c_write@slave_address& (0+255),w,b
 10981  0152EE  EC27  F0B0         	call	__i2c_send
 10982                           
 10983                           ;i2c.c: 94: _i2c_wait_idle();
 10984  0152F2  ECB6  F0A4         	call	__i2c_wait_idle	;wreg free
 10985                           
 10986                           ;i2c.c: 96: for(cntr=0; cntr<length; ++cntr)
 10987  0152F6  0E00               	movlw	0
 10988  0152F8  0100               	movlb	0	; () banked
 10989  0152FA  6F69               	movwf	__i2c_write@cntr& (0+255),b
 10990  0152FC  D00F               	goto	l1163
 10991  0152FE                     
 10992                           ; BSR set to: 0
 10993                           ;i2c.c: 97: {;i2c.c: 98: _i2c_send(data[cntr]);
 10994                           
 10995                           ; BSR set to: 0
 10996  0152FE  5169               	movf	__i2c_write@cntr& (0+255),w,b
 10997  015300  0D01               	mullw	1
 10998  015302  50F3               	movf	prodl,w,c
 10999  015304  2565               	addwf	__i2c_write@data& (0+255),w,b
 11000  015306  6ED9               	movwf	fsr2l,c
 11001  015308  50F4               	movf	prodh,w,c
 11002  01530A  2166               	addwfc	(__i2c_write@data+1)& (0+255),w,b
 11003  01530C  6EDA               	movwf	fsr2h,c
 11004  01530E  50DF               	movf	indf2,w,c
 11005  015310  EC27  F0B0         	call	__i2c_send
 11006                           
 11007                           ;i2c.c: 99: _i2c_wait_idle();
 11008  015314  ECB6  F0A4         	call	__i2c_wait_idle	;wreg free
 11009  015318  0100               	movlb	0	; () banked
 11010  01531A  2B69               	incf	__i2c_write@cntr& (0+255),f,b
 11011  01531C                     l1163:
 11012                           
 11013                           ; BSR set to: 0
 11014                           
 11015                           ; BSR set to: 0
 11016  01531C  5167               	movf	__i2c_write@length& (0+255),w,b
 11017  01531E  5D69               	subwf	__i2c_write@cntr& (0+255),w,b
 11018  015320  A0D8               	btfss	status,0,c
 11019  015322  D7ED               	goto	l1164
 11020                           
 11021                           ; BSR set to: 0
 11022                           ;i2c.c: 100: };i2c.c: 102: _i2c_stop();
 11023                           
 11024                           ; BSR set to: 0
 11025  015324  EC36  F0B0         	call	__i2c_stop	;wreg free
 11026  015328  0012               	return		;funcret
 11027  01532A                     __end_of__i2c_write:
 11028                           	opt stack 0
 11029                           tblptru	equ	0xFF8
 11030                           tblptrh	equ	0xFF7
 11031                           tblptrl	equ	0xFF6
 11032                           tablat	equ	0xFF5
 11033                           prodh	equ	0xFF4
 11034                           prodl	equ	0xFF3
 11035                           postinc0	equ	0xFEE
 11036                           wreg	equ	0xFE8
 11037                           postdec1	equ	0xFE5
 11038                           plusw1	equ	0xFE3
 11039                           fsr1h	equ	0xFE2
 11040                           fsr1l	equ	0xFE1
 11041                           indf2	equ	0xFDF
 11042                           postinc2	equ	0xFDE
 11043                           plusw2	equ	0xFDB
 11044                           fsr2h	equ	0xFDA
 11045                           fsr2l	equ	0xFD9
 11046                           status	equ	0xFD8
 11047                           
 11048 ;; *************** function __i2c_wait_idle *****************
 11049 ;; Defined at:
 11050 ;;		line 42 in file "i2c.c"
 11051 ;; Parameters:    Size  Location     Type
 11052 ;;		None
 11053 ;; Auto vars:     Size  Location     Type
 11054 ;;		None
 11055 ;; Return value:  Size  Location     Type
 11056 ;;                  1    wreg      void 
 11057 ;; Registers used:
 11058 ;;		wreg, status,2, status,0
 11059 ;; Tracked objects:
 11060 ;;		On entry : 0/0
 11061 ;;		On exit  : 0/0
 11062 ;;		Unchanged: 0/0
 11063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11066 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11067 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11068 ;;Total ram usage:        5 bytes
 11069 ;; Hardware stack levels used:    1
 11070 ;; Hardware stack levels required when called:   10
 11071 ;; This function calls:
 11072 ;;		Nothing
 11073 ;; This function is called by:
 11074 ;;		__i2c_write
 11075 ;;		__i2c_read
 11076 ;;		__i2c_eeprom_busy
 11077 ;;		_i2c_display_write_fixed
 11078 ;;		_i2c_adc_read
 11079 ;;		_i2c_display_write
 11080 ;; This function uses a non-reentrant model
 11081 ;;
 11082                           
 11083                           	psect	text31
 11084  01496C                     __ptext31:
 11085                           	opt stack 0
 11086  01496C                     __i2c_wait_idle:
 11087                           	opt stack 16
 11088                           
 11089                           ;i2c.c: 44: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 11090                           
 11091                           ;incstack = 0
 11092  01496C  A4C7               	btfss	4039,2,c	;volatile
 11093  01496E  D004               	goto	u11490
 11094  014970  0100               	movlb	0	; () banked
 11095  014972  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 11096  014974  2B60               	incf	??__i2c_wait_idle& (0+255),f,b
 11097  014976  D002               	goto	u11498
 11098  014978                     u11490:
 11099  014978  0100               	movlb	0	; () banked
 11100  01497A  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 11101  01497C                     u11498:
 11102  01497C  A0C5               	btfss	4037,0,c	;volatile
 11103  01497E  D003               	goto	u11500
 11104  014980  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 11105  014982  2B61               	incf	(??__i2c_wait_idle+1)& (0+255),f,b
 11106  014984  D002               	goto	u11508
 11107  014986                     u11500:
 11108  014986  0100               	movlb	0	; () banked
 11109  014988  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 11110  01498A                     u11508:
 11111  01498A  A2C5               	btfss	4037,1,c	;volatile
 11112  01498C  D003               	goto	u11510
 11113  01498E  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 11114  014990  2B62               	incf	(??__i2c_wait_idle+2)& (0+255),f,b
 11115  014992  D002               	goto	u11518
 11116  014994                     u11510:
 11117  014994  0100               	movlb	0	; () banked
 11118  014996  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 11119  014998                     u11518:
 11120  014998  A4C5               	btfss	4037,2,c	;volatile
 11121  01499A  D003               	goto	u11520
 11122  01499C  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 11123  01499E  2B63               	incf	(??__i2c_wait_idle+3)& (0+255),f,b
 11124  0149A0  D002               	goto	u11528
 11125  0149A2                     u11520:
 11126  0149A2  0100               	movlb	0	; () banked
 11127  0149A4  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 11128  0149A6                     u11528:
 11129  0149A6  A6C5               	btfss	4037,3,c	;volatile
 11130  0149A8  D003               	goto	u11530
 11131  0149AA  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 11132  0149AC  2B64               	incf	(??__i2c_wait_idle+4)& (0+255),f,b
 11133  0149AE  D002               	goto	u11538
 11134  0149B0                     u11530:
 11135  0149B0  0100               	movlb	0	; () banked
 11136  0149B2  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 11137  0149B4                     u11538:
 11138  0149B4  A8C5               	btfss	4037,4,c	;volatile
 11139  0149B6  D002               	goto	u11540
 11140  0149B8  0E01               	movlw	1
 11141  0149BA  D001               	goto	u11546
 11142  0149BC                     u11540:
 11143  0149BC  0E00               	movlw	0
 11144  0149BE                     u11546:
 11145  0149BE  1164               	iorwf	(??__i2c_wait_idle+4)& (0+255),w,b
 11146  0149C0  1163               	iorwf	(??__i2c_wait_idle+3)& (0+255),w,b
 11147  0149C2  1162               	iorwf	(??__i2c_wait_idle+2)& (0+255),w,b
 11148  0149C4  1161               	iorwf	(??__i2c_wait_idle+1)& (0+255),w,b
 11149  0149C6  1160               	iorwf	??__i2c_wait_idle& (0+255),w,b
 11150  0149C8  0900               	iorlw	0
 11151  0149CA  B4D8               	btfsc	status,2,c
 11152  0149CC  0012               	return	
 11153  0149CE  D7CE               	goto	__i2c_wait_idle
 11154  0149D0                     __end_of__i2c_wait_idle:
 11155                           	opt stack 0
 11156                           tblptru	equ	0xFF8
 11157                           tblptrh	equ	0xFF7
 11158                           tblptrl	equ	0xFF6
 11159                           tablat	equ	0xFF5
 11160                           prodh	equ	0xFF4
 11161                           prodl	equ	0xFF3
 11162                           postinc0	equ	0xFEE
 11163                           wreg	equ	0xFE8
 11164                           postdec1	equ	0xFE5
 11165                           plusw1	equ	0xFE3
 11166                           fsr1h	equ	0xFE2
 11167                           fsr1l	equ	0xFE1
 11168                           indf2	equ	0xFDF
 11169                           postinc2	equ	0xFDE
 11170                           plusw2	equ	0xFDB
 11171                           fsr2h	equ	0xFDA
 11172                           fsr2l	equ	0xFD9
 11173                           status	equ	0xFD8
 11174                           
 11175 ;; *************** function __i2c_stop *****************
 11176 ;; Defined at:
 11177 ;;		line 65 in file "i2c.c"
 11178 ;; Parameters:    Size  Location     Type
 11179 ;;		None
 11180 ;; Auto vars:     Size  Location     Type
 11181 ;;		None
 11182 ;; Return value:  Size  Location     Type
 11183 ;;                  1    wreg      void 
 11184 ;; Registers used:
 11185 ;;		None
 11186 ;; Tracked objects:
 11187 ;;		On entry : 0/0
 11188 ;;		On exit  : 0/0
 11189 ;;		Unchanged: 0/0
 11190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11195 ;;Total ram usage:        0 bytes
 11196 ;; Hardware stack levels used:    1
 11197 ;; Hardware stack levels required when called:   10
 11198 ;; This function calls:
 11199 ;;		Nothing
 11200 ;; This function is called by:
 11201 ;;		__i2c_write
 11202 ;;		__i2c_read
 11203 ;;		__i2c_eeprom_busy
 11204 ;;		_i2c_display_write_fixed
 11205 ;;		_i2c_adc_read
 11206 ;;		_i2c_display_write
 11207 ;; This function uses a non-reentrant model
 11208 ;;
 11209                           
 11210                           	psect	text32
 11211  01606C                     __ptext32:
 11212                           	opt stack 0
 11213  01606C                     __i2c_stop:
 11214                           	opt stack 16
 11215                           
 11216                           ;i2c.c: 67: SSP1CON2bits.PEN = 1;
 11217                           
 11218                           ; BSR set to: 0
 11219                           ;incstack = 0
 11220  01606C  84C5               	bsf	4037,2,c	;volatile
 11221  01606E  A4C5               	btfss	4037,2,c	;volatile
 11222  016070  0012               	return	
 11223  016072  D7FD               	goto	l1146
 11224  016074                     __end_of__i2c_stop:
 11225                           	opt stack 0
 11226                           tblptru	equ	0xFF8
 11227                           tblptrh	equ	0xFF7
 11228                           tblptrl	equ	0xFF6
 11229                           tablat	equ	0xFF5
 11230                           prodh	equ	0xFF4
 11231                           prodl	equ	0xFF3
 11232                           postinc0	equ	0xFEE
 11233                           wreg	equ	0xFE8
 11234                           postdec1	equ	0xFE5
 11235                           plusw1	equ	0xFE3
 11236                           fsr1h	equ	0xFE2
 11237                           fsr1l	equ	0xFE1
 11238                           indf2	equ	0xFDF
 11239                           postinc2	equ	0xFDE
 11240                           plusw2	equ	0xFDB
 11241                           fsr2h	equ	0xFDA
 11242                           fsr2l	equ	0xFD9
 11243                           status	equ	0xFD8
 11244                           
 11245 ;; *************** function __i2c_start *****************
 11246 ;; Defined at:
 11247 ;;		line 47 in file "i2c.c"
 11248 ;; Parameters:    Size  Location     Type
 11249 ;;		None
 11250 ;; Auto vars:     Size  Location     Type
 11251 ;;		None
 11252 ;; Return value:  Size  Location     Type
 11253 ;;                  1    wreg      void 
 11254 ;; Registers used:
 11255 ;;		None
 11256 ;; Tracked objects:
 11257 ;;		On entry : 0/0
 11258 ;;		On exit  : 0/0
 11259 ;;		Unchanged: 0/0
 11260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11265 ;;Total ram usage:        0 bytes
 11266 ;; Hardware stack levels used:    1
 11267 ;; Hardware stack levels required when called:   10
 11268 ;; This function calls:
 11269 ;;		Nothing
 11270 ;; This function is called by:
 11271 ;;		__i2c_write
 11272 ;;		__i2c_read
 11273 ;;		__i2c_eeprom_busy
 11274 ;;		_i2c_display_write_fixed
 11275 ;;		_i2c_adc_read
 11276 ;;		_i2c_display_write
 11277 ;; This function uses a non-reentrant model
 11278 ;;
 11279                           
 11280                           	psect	text33
 11281  016074                     __ptext33:
 11282                           	opt stack 0
 11283  016074                     __i2c_start:
 11284                           	opt stack 16
 11285                           
 11286                           ;i2c.c: 49: SSP1CON2bits.SEN=1;
 11287                           
 11288                           ;incstack = 0
 11289  016074  80C5               	bsf	4037,0,c	;volatile
 11290  016076  A0C5               	btfss	4037,0,c	;volatile
 11291  016078  0012               	return	
 11292  01607A  D7FD               	goto	l1131
 11293  01607C                     __end_of__i2c_start:
 11294                           	opt stack 0
 11295                           tblptru	equ	0xFF8
 11296                           tblptrh	equ	0xFF7
 11297                           tblptrl	equ	0xFF6
 11298                           tablat	equ	0xFF5
 11299                           prodh	equ	0xFF4
 11300                           prodl	equ	0xFF3
 11301                           postinc0	equ	0xFEE
 11302                           wreg	equ	0xFE8
 11303                           postdec1	equ	0xFE5
 11304                           plusw1	equ	0xFE3
 11305                           fsr1h	equ	0xFE2
 11306                           fsr1l	equ	0xFE1
 11307                           indf2	equ	0xFDF
 11308                           postinc2	equ	0xFDE
 11309                           plusw2	equ	0xFDB
 11310                           fsr2h	equ	0xFDA
 11311                           fsr2l	equ	0xFD9
 11312                           status	equ	0xFD8
 11313                           
 11314 ;; *************** function __i2c_send *****************
 11315 ;; Defined at:
 11316 ;;		line 53 in file "i2c.c"
 11317 ;; Parameters:    Size  Location     Type
 11318 ;;  dat             1    wreg     unsigned char 
 11319 ;; Auto vars:     Size  Location     Type
 11320 ;;  dat             1    0[BANK0 ] unsigned char 
 11321 ;; Return value:  Size  Location     Type
 11322 ;;                  1    wreg      void 
 11323 ;; Registers used:
 11324 ;;		wreg
 11325 ;; Tracked objects:
 11326 ;;		On entry : 0/0
 11327 ;;		On exit  : 0/0
 11328 ;;		Unchanged: 0/0
 11329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11331 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11333 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11334 ;;Total ram usage:        1 bytes
 11335 ;; Hardware stack levels used:    1
 11336 ;; Hardware stack levels required when called:   10
 11337 ;; This function calls:
 11338 ;;		Nothing
 11339 ;; This function is called by:
 11340 ;;		__i2c_write
 11341 ;;		__i2c_read
 11342 ;;		__i2c_eeprom_busy
 11343 ;;		_i2c_display_write_fixed
 11344 ;;		_i2c_adc_read
 11345 ;;		_i2c_display_write
 11346 ;; This function uses a non-reentrant model
 11347 ;;
 11348                           
 11349                           	psect	text34
 11350  01604E                     __ptext34:
 11351                           	opt stack 0
 11352  01604E                     __i2c_send:
 11353                           	opt stack 16
 11354                           
 11355                           ;incstack = 0
 11356                           ;__i2c_send@dat stored from wreg
 11357  01604E  0100               	movlb	0	; () banked
 11358  016050  6F60               	movwf	__i2c_send@dat& (0+255),b
 11359                           
 11360                           ;i2c.c: 55: SSP1BUF = dat;
 11361  016052  C060  FFC9         	movff	__i2c_send@dat,4041	;volatile
 11362  016056  0012               	return		;funcret
 11363  016058                     __end_of__i2c_send:
 11364                           	opt stack 0
 11365                           tblptru	equ	0xFF8
 11366                           tblptrh	equ	0xFF7
 11367                           tblptrl	equ	0xFF6
 11368                           tablat	equ	0xFF5
 11369                           prodh	equ	0xFF4
 11370                           prodl	equ	0xFF3
 11371                           postinc0	equ	0xFEE
 11372                           wreg	equ	0xFE8
 11373                           postdec1	equ	0xFE5
 11374                           plusw1	equ	0xFE3
 11375                           fsr1h	equ	0xFE2
 11376                           fsr1l	equ	0xFE1
 11377                           indf2	equ	0xFDF
 11378                           postinc2	equ	0xFDE
 11379                           plusw2	equ	0xFDB
 11380                           fsr2h	equ	0xFDA
 11381                           fsr2l	equ	0xFD9
 11382                           status	equ	0xFD8
 11383                           
 11384 ;; *************** function __display_start *****************
 11385 ;; Defined at:
 11386 ;;		line 284 in file "display.c"
 11387 ;; Parameters:    Size  Location     Type
 11388 ;;		None
 11389 ;; Auto vars:     Size  Location     Type
 11390 ;;  cntr            1   28[BANK0 ] unsigned char 
 11391 ;; Return value:  Size  Location     Type
 11392 ;;                  1    wreg      void 
 11393 ;; Registers used:
 11394 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11395 ;; Tracked objects:
 11396 ;;		On entry : 0/0
 11397 ;;		On exit  : 0/0
 11398 ;;		Unchanged: 0/0
 11399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11401 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11403 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11404 ;;Total ram usage:        1 bytes
 11405 ;; Hardware stack levels used:    1
 11406 ;; Hardware stack levels required when called:   14
 11407 ;; This function calls:
 11408 ;;		__display_itoa_u16
 11409 ;;		_memcpy
 11410 ;; This function is called by:
 11411 ;;		_display_init
 11412 ;; This function uses a non-reentrant model
 11413 ;;
 11414                           
 11415                           	psect	text35
 11416  01320E                     __ptext35:
 11417                           	opt stack 0
 11418  01320E                     __display_start:
 11419                           	opt stack 14
 11420                           
 11421                           ;display.c: 286: uint8_t cntr;;display.c: 287: memcpy(display_content, dc_startup, sizeo
      +                          f display_content);
 11422                           
 11423                           ;incstack = 0
 11424  01320E  0E48               	movlw	low _display_content
 11425  013210  0100               	movlb	0	; () banked
 11426  013212  6F60               	movwf	memcpy@d1& (0+255),b
 11427  013214  0E02               	movlw	high _display_content
 11428  013216  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 11429  013218  0E00               	movlw	low _dc_startup
 11430  01321A  6F62               	movwf	memcpy@s1& (0+255),b
 11431  01321C  0E04               	movlw	high _dc_startup
 11432  01321E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 11433  013220  0E00               	movlw	0
 11434  013222  6F65               	movwf	(memcpy@n+1)& (0+255),b
 11435  013224  0E50               	movlw	80
 11436  013226  6F64               	movwf	memcpy@n& (0+255),b
 11437  013228  ECAC  F0A5         	call	_memcpy	;wreg free
 11438                           
 11439                           ;display.c: 288: cntr = 6;
 11440  01322C  0E06               	movlw	6
 11441  01322E  0100               	movlb	0	; () banked
 11442  013230  6F7C               	movwf	__display_start@cntr& (0+255),b
 11443                           
 11444                           ; BSR set to: 0
 11445                           ;display.c: 289: cntr += _display_itoa_u16(0x00, &display_content[2][cntr]);
 11446  013232  0E00               	movlw	0
 11447  013234  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 11448  013236  0E00               	movlw	0
 11449  013238  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 11450  01323A  517C               	movf	__display_start@cntr& (0+255),w,b
 11451  01323C  0D01               	mullw	1
 11452  01323E  0E70               	movlw	low (_display_content+40)
 11453  013240  24F3               	addwf	prodl,w,c
 11454  013242  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 11455  013244  0E02               	movlw	high (_display_content+40)
 11456  013246  20F4               	addwfc	prodh,w,c
 11457  013248  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 11458  01324A  ECAD  F098         	call	__display_itoa_u16	;wreg free
 11459  01324E  0100               	movlb	0	; () banked
 11460  013250  277C               	addwf	__display_start@cntr& (0+255),f,b
 11461                           
 11462                           ; BSR set to: 0
 11463                           ;display.c: 290: display_content[2][cntr++] = '.';
 11464  013252  517C               	movf	__display_start@cntr& (0+255),w,b
 11465  013254  0D01               	mullw	1
 11466  013256  0E70               	movlw	low (_display_content+40)
 11467  013258  24F3               	addwf	prodl,w,c
 11468  01325A  6ED9               	movwf	fsr2l,c
 11469  01325C  0E02               	movlw	high (_display_content+40)
 11470  01325E  20F4               	addwfc	prodh,w,c
 11471  013260  6EDA               	movwf	fsr2h,c
 11472  013262  0E2E               	movlw	46
 11473  013264  6EDF               	movwf	indf2,c
 11474                           
 11475                           ; BSR set to: 0
 11476  013266  2B7C               	incf	__display_start@cntr& (0+255),f,b
 11477                           
 11478                           ; BSR set to: 0
 11479                           ;display.c: 291: cntr += _display_itoa_u16(0x06, &display_content[2][cntr]);
 11480  013268  0E00               	movlw	0
 11481  01326A  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 11482  01326C  0E06               	movlw	6
 11483  01326E  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 11484  013270  517C               	movf	__display_start@cntr& (0+255),w,b
 11485  013272  0D01               	mullw	1
 11486  013274  0E70               	movlw	low (_display_content+40)
 11487  013276  24F3               	addwf	prodl,w,c
 11488  013278  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 11489  01327A  0E02               	movlw	high (_display_content+40)
 11490  01327C  20F4               	addwfc	prodh,w,c
 11491  01327E  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 11492  013280  ECAD  F098         	call	__display_itoa_u16	;wreg free
 11493  013284  0100               	movlb	0	; () banked
 11494  013286  277C               	addwf	__display_start@cntr& (0+255),f,b
 11495                           
 11496                           ; BSR set to: 0
 11497                           ;display.c: 292: display_content[2][cntr++] = '.';
 11498  013288  517C               	movf	__display_start@cntr& (0+255),w,b
 11499  01328A  0D01               	mullw	1
 11500  01328C  0E70               	movlw	low (_display_content+40)
 11501  01328E  24F3               	addwf	prodl,w,c
 11502  013290  6ED9               	movwf	fsr2l,c
 11503  013292  0E02               	movlw	high (_display_content+40)
 11504  013294  20F4               	addwfc	prodh,w,c
 11505  013296  6EDA               	movwf	fsr2h,c
 11506  013298  0E2E               	movlw	46
 11507  01329A  6EDF               	movwf	indf2,c
 11508                           
 11509                           ; BSR set to: 0
 11510  01329C  2B7C               	incf	__display_start@cntr& (0+255),f,b
 11511                           
 11512                           ; BSR set to: 0
 11513                           ;display.c: 293: cntr += _display_itoa_u16(0x04, &display_content[2][cntr]);
 11514  01329E  0E00               	movlw	0
 11515  0132A0  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 11516  0132A2  0E04               	movlw	4
 11517  0132A4  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 11518  0132A6  517C               	movf	__display_start@cntr& (0+255),w,b
 11519  0132A8  0D01               	mullw	1
 11520  0132AA  0E70               	movlw	low (_display_content+40)
 11521  0132AC  24F3               	addwf	prodl,w,c
 11522  0132AE  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 11523  0132B0  0E02               	movlw	high (_display_content+40)
 11524  0132B2  20F4               	addwfc	prodh,w,c
 11525  0132B4  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 11526  0132B6  ECAD  F098         	call	__display_itoa_u16	;wreg free
 11527  0132BA  0100               	movlb	0	; () banked
 11528  0132BC  277C               	addwf	__display_start@cntr& (0+255),f,b
 11529                           
 11530                           ; BSR set to: 0
 11531  0132BE  0012               	return		;funcret
 11532  0132C0                     __end_of__display_start:
 11533                           	opt stack 0
 11534                           tblptru	equ	0xFF8
 11535                           tblptrh	equ	0xFF7
 11536                           tblptrl	equ	0xFF6
 11537                           tablat	equ	0xFF5
 11538                           prodh	equ	0xFF4
 11539                           prodl	equ	0xFF3
 11540                           postinc0	equ	0xFEE
 11541                           wreg	equ	0xFE8
 11542                           postdec1	equ	0xFE5
 11543                           plusw1	equ	0xFE3
 11544                           fsr1h	equ	0xFE2
 11545                           fsr1l	equ	0xFE1
 11546                           indf2	equ	0xFDF
 11547                           postinc2	equ	0xFDE
 11548                           plusw2	equ	0xFDB
 11549                           fsr2h	equ	0xFDA
 11550                           fsr2l	equ	0xFD9
 11551                           status	equ	0xFD8
 11552                           
 11553 ;; *************** function __display_itoa_u16 *****************
 11554 ;; Defined at:
 11555 ;;		line 227 in file "display.c"
 11556 ;; Parameters:    Size  Location     Type
 11557 ;;  value           2   24[BANK0 ] unsigned int 
 11558 ;;  text            2   26[BANK0 ] PTR unsigned char 
 11559 ;;		 -> display_content(80), 
 11560 ;; Auto vars:     Size  Location     Type
 11561 ;;		None
 11562 ;; Return value:  Size  Location     Type
 11563 ;;                  1    wreg      unsigned char 
 11564 ;; Registers used:
 11565 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11566 ;; Tracked objects:
 11567 ;;		On entry : 0/0
 11568 ;;		On exit  : 0/0
 11569 ;;		Unchanged: 0/0
 11570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11571 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11574 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11575 ;;Total ram usage:        4 bytes
 11576 ;; Hardware stack levels used:    1
 11577 ;; Hardware stack levels required when called:   13
 11578 ;; This function calls:
 11579 ;;		_itoa
 11580 ;; This function is called by:
 11581 ;;		__display_start
 11582 ;; This function uses a non-reentrant model
 11583 ;;
 11584                           
 11585                           	psect	text36
 11586  01315A                     __ptext36:
 11587                           	opt stack 0
 11588  01315A                     __display_itoa_u16:
 11589                           	opt stack 14
 11590                           
 11591                           ;display.c: 229: itoa(text, value, 10);
 11592                           
 11593                           ; BSR set to: 0
 11594                           ;incstack = 0
 11595  01315A  C07A  F070         	movff	__display_itoa_u16@text,itoa@buf
 11596  01315E  C07B  F071         	movff	__display_itoa_u16@text+1,itoa@buf+1
 11597  013162  C078  F072         	movff	__display_itoa_u16@value,itoa@val
 11598  013166  C079  F073         	movff	__display_itoa_u16@value+1,itoa@val+1
 11599  01316A  0E00               	movlw	0
 11600  01316C  0100               	movlb	0	; () banked
 11601  01316E  6F75               	movwf	(itoa@base+1)& (0+255),b
 11602  013170  0E0A               	movlw	10
 11603  013172  6F74               	movwf	itoa@base& (0+255),b
 11604  013174  EC0E  F0AB         	call	_itoa	;wreg free
 11605                           
 11606                           ;display.c: 230: if(value>9999)
 11607  013178  0E10               	movlw	16
 11608  01317A  0100               	movlb	0	; () banked
 11609  01317C  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 11610  01317E  0E27               	movlw	39
 11611  013180  5979               	subwfb	(__display_itoa_u16@value+1)& (0+255),w,b
 11612  013182  A0D8               	btfss	status,0,c
 11613  013184  D00A               	goto	l1376
 11614                           
 11615                           ; BSR set to: 0
 11616                           ;display.c: 231: {;display.c: 232: *(text+5) = ' ';
 11617  013186  EE20 F005          	lfsr	2,5
 11618  01318A  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11619  01318C  26D9               	addwf	fsr2l,f,c
 11620  01318E  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11621  013190  22DA               	addwfc	fsr2h,f,c
 11622  013192  0E20               	movlw	32
 11623  013194  6EDF               	movwf	indf2,c
 11624                           
 11625                           ; BSR set to: 0
 11626                           ;display.c: 233: return 5;
 11627  013196  0E05               	movlw	5
 11628                           
 11629                           ; BSR set to: 0
 11630                           ;display.c: 234: }
 11631                           
 11632                           ; BSR set to: 0
 11633  013198  0012               	return	
 11634  01319A                     l1376:
 11635                           
 11636                           ; BSR set to: 0
 11637                           ;display.c: 235: else if (value>999)
 11638                           
 11639                           ; BSR set to: 0
 11640  01319A  0EE8               	movlw	232
 11641  01319C  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 11642  01319E  0E03               	movlw	3
 11643  0131A0  5979               	subwfb	(__display_itoa_u16@value+1)& (0+255),w,b
 11644  0131A2  A0D8               	btfss	status,0,c
 11645  0131A4  D00A               	goto	l1379
 11646                           
 11647                           ; BSR set to: 0
 11648                           ;display.c: 236: {;display.c: 237: *(text+4) = ' ';
 11649  0131A6  EE20 F004          	lfsr	2,4
 11650  0131AA  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11651  0131AC  26D9               	addwf	fsr2l,f,c
 11652  0131AE  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11653  0131B0  22DA               	addwfc	fsr2h,f,c
 11654  0131B2  0E20               	movlw	32
 11655  0131B4  6EDF               	movwf	indf2,c
 11656                           
 11657                           ; BSR set to: 0
 11658                           ;display.c: 238: return 4;
 11659  0131B6  0E04               	movlw	4
 11660                           
 11661                           ; BSR set to: 0
 11662                           ;display.c: 239: }
 11663                           
 11664                           ; BSR set to: 0
 11665  0131B8  0012               	return	
 11666  0131BA                     l1379:
 11667                           
 11668                           ; BSR set to: 0
 11669                           ;display.c: 240: else if (value>99)
 11670                           
 11671                           ; BSR set to: 0
 11672  0131BA  5179               	movf	(__display_itoa_u16@value+1)& (0+255),w,b
 11673  0131BC  E104               	bnz	u13910
 11674  0131BE  0E64               	movlw	100
 11675  0131C0  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 11676  0131C2  A0D8               	btfss	status,0,c
 11677  0131C4  D00A               	goto	l1381
 11678  0131C6                     u13910:
 11679                           
 11680                           ; BSR set to: 0
 11681                           ;display.c: 241: {;display.c: 242: *(text+3) = ' ';
 11682  0131C6  EE20 F003          	lfsr	2,3
 11683  0131CA  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11684  0131CC  26D9               	addwf	fsr2l,f,c
 11685  0131CE  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11686  0131D0  22DA               	addwfc	fsr2h,f,c
 11687  0131D2  0E20               	movlw	32
 11688  0131D4  6EDF               	movwf	indf2,c
 11689                           
 11690                           ; BSR set to: 0
 11691                           ;display.c: 243: return 3;
 11692  0131D6  0E03               	movlw	3
 11693                           
 11694                           ; BSR set to: 0
 11695                           ;display.c: 244: }
 11696                           
 11697                           ; BSR set to: 0
 11698  0131D8  0012               	return	
 11699  0131DA                     l1381:
 11700                           
 11701                           ; BSR set to: 0
 11702                           ;display.c: 245: else if (value>9)
 11703                           
 11704                           ; BSR set to: 0
 11705  0131DA  5179               	movf	(__display_itoa_u16@value+1)& (0+255),w,b
 11706  0131DC  E104               	bnz	u13920
 11707  0131DE  0E0A               	movlw	10
 11708  0131E0  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 11709  0131E2  A0D8               	btfss	status,0,c
 11710  0131E4  D00A               	goto	l1383
 11711  0131E6                     u13920:
 11712                           
 11713                           ; BSR set to: 0
 11714                           ;display.c: 246: {;display.c: 247: *(text+2) = ' ';
 11715  0131E6  EE20 F002          	lfsr	2,2
 11716  0131EA  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11717  0131EC  26D9               	addwf	fsr2l,f,c
 11718  0131EE  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11719  0131F0  22DA               	addwfc	fsr2h,f,c
 11720  0131F2  0E20               	movlw	32
 11721  0131F4  6EDF               	movwf	indf2,c
 11722                           
 11723                           ; BSR set to: 0
 11724                           ;display.c: 248: return 2;
 11725  0131F6  0E02               	movlw	2
 11726                           
 11727                           ; BSR set to: 0
 11728                           ;display.c: 249: }
 11729                           
 11730                           ; BSR set to: 0
 11731  0131F8  0012               	return	
 11732  0131FA                     l1383:
 11733                           
 11734                           ; BSR set to: 0
 11735                           ;display.c: 250: else;display.c: 251: {;display.c: 252: *(text+1) = ' ';
 11736                           
 11737                           ; BSR set to: 0
 11738  0131FA  EE20 F001          	lfsr	2,1
 11739  0131FE  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11740  013200  26D9               	addwf	fsr2l,f,c
 11741  013202  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11742  013204  22DA               	addwfc	fsr2h,f,c
 11743  013206  0E20               	movlw	32
 11744  013208  6EDF               	movwf	indf2,c
 11745                           
 11746                           ; BSR set to: 0
 11747                           ;display.c: 253: return 1;
 11748  01320A  0E01               	movlw	1
 11749                           
 11750                           ; BSR set to: 0
 11751                           
 11752                           ; BSR set to: 0
 11753                           
 11754                           ; BSR set to: 0
 11755                           
 11756                           ; BSR set to: 0
 11757  01320C  0012               	return	
 11758  01320E                     __end_of__display_itoa_u16:
 11759                           	opt stack 0
 11760                           tblptru	equ	0xFF8
 11761                           tblptrh	equ	0xFF7
 11762                           tblptrl	equ	0xFF6
 11763                           tablat	equ	0xFF5
 11764                           prodh	equ	0xFF4
 11765                           prodl	equ	0xFF3
 11766                           postinc0	equ	0xFEE
 11767                           wreg	equ	0xFE8
 11768                           postdec1	equ	0xFE5
 11769                           plusw1	equ	0xFE3
 11770                           fsr1h	equ	0xFE2
 11771                           fsr1l	equ	0xFE1
 11772                           indf2	equ	0xFDF
 11773                           postinc2	equ	0xFDE
 11774                           plusw2	equ	0xFDB
 11775                           fsr2h	equ	0xFDA
 11776                           fsr2l	equ	0xFD9
 11777                           status	equ	0xFD8
 11778                           
 11779 ;; *************** function _configFile_write *****************
 11780 ;; Defined at:
 11781 ;;		line 313 in file "config_file.c"
 11782 ;; Parameters:    Size  Location     Type
 11783 ;;		None
 11784 ;; Auto vars:     Size  Location     Type
 11785 ;;  file_size       4  133[BANK0 ] unsigned long 
 11786 ;;  file_number     1  132[BANK0 ] unsigned char 
 11787 ;; Return value:  Size  Location     Type
 11788 ;;                  1    wreg      void 
 11789 ;; Registers used:
 11790 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11791 ;; Tracked objects:
 11792 ;;		On entry : 0/0
 11793 ;;		On exit  : 0/0
 11794 ;;		Unchanged: 0/0
 11795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11797 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11798 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11799 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11800 ;;Total ram usage:        6 bytes
 11801 ;; Hardware stack levels used:    1
 11802 ;; Hardware stack levels required when called:   18
 11803 ;; This function calls:
 11804 ;;		__add_item
 11805 ;;		_fat_create_file
 11806 ;;		_fat_find_file
 11807 ;;		_fat_modify_file
 11808 ;;		_fat_resize_file
 11809 ;; This function is called by:
 11810 ;;		_system_init
 11811 ;; This function uses a non-reentrant model
 11812 ;;
 11813                           
 11814                           	psect	text37
 11815  00C1D8                     __ptext37:
 11816                           	opt stack 0
 11817  00C1D8                     _configFile_write:
 11818                           	opt stack 11
 11819                           
 11820                           ;config_file.c: 315: uint8_t file_number;;config_file.c: 316: uint32_t file_size;;config
      +                          _file.c: 318: file_size = 0;
 11821                           
 11822                           ; BSR set to: 0
 11823                           ;incstack = 0
 11824  00C1D8  0E00               	movlw	0
 11825  00C1DA  0100               	movlb	0	; () banked
 11826  00C1DC  6FE5               	movwf	configFile_write@file_size& (0+255),b
 11827  00C1DE  0E00               	movlw	0
 11828  00C1E0  6FE6               	movwf	(configFile_write@file_size+1)& (0+255),b
 11829  00C1E2  0E00               	movlw	0
 11830  00C1E4  6FE7               	movwf	(configFile_write@file_size+2)& (0+255),b
 11831  00C1E6  0E00               	movlw	0
 11832  00C1E8  6FE8               	movwf	(configFile_write@file_size+3)& (0+255),b
 11833                           
 11834                           ; BSR set to: 0
 11835                           ;config_file.c: 319: file_size += _add_item(&full_circle_in_steps_string, (int32_t) conf
      +                          ig.full_circle_in_steps, &ConfigFile_buffer[file_size]);
 11836  00C1EA  0E12               	movlw	low _full_circle_in_steps_string
 11837  00C1EC  6F84               	movwf	__add_item@item_string& (0+255),b
 11838  00C1EE  0EA2               	movlw	high _full_circle_in_steps_string
 11839  00C1F0  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11840  00C1F2  C196  F086         	movff	_config,__add_item@value
 11841  00C1F6  C197  F087         	movff	_config+1,__add_item@value+1
 11842  00C1FA  C198  F088         	movff	_config+2,__add_item@value+2
 11843  00C1FE  C199  F089         	movff	_config+3,__add_item@value+3
 11844  00C202  0E00               	movlw	low _ConfigFile_buffer
 11845  00C204  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11846  00C206  6F8A               	movwf	__add_item@buffer& (0+255),b
 11847  00C208  0E08               	movlw	high _ConfigFile_buffer
 11848  00C20A  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11849  00C20C  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11850  00C20E  ECA3  F08D         	call	__add_item	;wreg free
 11851  00C212  0100               	movlb	0	; () banked
 11852  00C214  6FE3               	movwf	??_configFile_write& (0+255),b
 11853  00C216  51E3               	movf	??_configFile_write& (0+255),w,b
 11854  00C218  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11855  00C21A  0E00               	movlw	0
 11856  00C21C  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11857  00C21E  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11858  00C220  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11859                           
 11860                           ; BSR set to: 0
 11861                           ;config_file.c: 320: file_size += _add_item(&inverse_direction_string, (int32_t) config.
      +                          inverse_direction, &ConfigFile_buffer[file_size]);
 11862  00C222  0E5E               	movlw	low _inverse_direction_string
 11863  00C224  6F84               	movwf	__add_item@item_string& (0+255),b
 11864  00C226  0EA2               	movlw	high _inverse_direction_string
 11865  00C228  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11866  00C22A  0101               	movlb	1	; () banked
 11867  00C22C  519A               	movf	(_config+4)& (0+255),w,b
 11868  00C22E  0100               	movlb	0	; () banked
 11869  00C230  6F86               	movwf	__add_item@value& (0+255),b
 11870  00C232  6B87               	clrf	(__add_item@value+1)& (0+255),b
 11871  00C234  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11872  00C236  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11873  00C238  0E00               	movlw	low _ConfigFile_buffer
 11874  00C23A  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11875  00C23C  6F8A               	movwf	__add_item@buffer& (0+255),b
 11876  00C23E  0E08               	movlw	high _ConfigFile_buffer
 11877  00C240  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11878  00C242  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11879  00C244  ECA3  F08D         	call	__add_item	;wreg free
 11880  00C248  0100               	movlb	0	; () banked
 11881  00C24A  6FE3               	movwf	??_configFile_write& (0+255),b
 11882  00C24C  51E3               	movf	??_configFile_write& (0+255),w,b
 11883  00C24E  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11884  00C250  0E00               	movlw	0
 11885  00C252  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11886  00C254  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11887  00C256  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11888                           
 11889                           ; BSR set to: 0
 11890                           ;config_file.c: 321: file_size += _add_item(&overshoot_in_steps_string, (int32_t) config
      +                          .overshoot_in_steps, &ConfigFile_buffer[file_size]);
 11891  00C258  0E27               	movlw	low _overshoot_in_steps_string
 11892  00C25A  6F84               	movwf	__add_item@item_string& (0+255),b
 11893  00C25C  0EA2               	movlw	high _overshoot_in_steps_string
 11894  00C25E  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11895  00C260  C19B  F086         	movff	_config+5,__add_item@value
 11896  00C264  C19C  F087         	movff	_config+6,__add_item@value+1
 11897  00C268  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11898  00C26A  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11899  00C26C  0E00               	movlw	low _ConfigFile_buffer
 11900  00C26E  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11901  00C270  6F8A               	movwf	__add_item@buffer& (0+255),b
 11902  00C272  0E08               	movlw	high _ConfigFile_buffer
 11903  00C274  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11904  00C276  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11905  00C278  ECA3  F08D         	call	__add_item	;wreg free
 11906  00C27C  0100               	movlb	0	; () banked
 11907  00C27E  6FE3               	movwf	??_configFile_write& (0+255),b
 11908  00C280  51E3               	movf	??_configFile_write& (0+255),w,b
 11909  00C282  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11910  00C284  0E00               	movlw	0
 11911  00C286  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11912  00C288  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11913  00C28A  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11914                           
 11915                           ; BSR set to: 0
 11916                           ;config_file.c: 322: file_size += _add_item(&overshoot_cost_in_steps_string, (int32_t) c
      +                          onfig.overshoot_cost_in_steps, &ConfigFile_buffer[file_size]);
 11917  00C28C  0EBB               	movlw	low _overshoot_cost_in_steps_string
 11918  00C28E  6F84               	movwf	__add_item@item_string& (0+255),b
 11919  00C290  0EA1               	movlw	high _overshoot_cost_in_steps_string
 11920  00C292  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11921  00C294  C19D  F086         	movff	_config+7,__add_item@value
 11922  00C298  C19E  F087         	movff	_config+8,__add_item@value+1
 11923  00C29C  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11924  00C29E  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11925  00C2A0  0E00               	movlw	low _ConfigFile_buffer
 11926  00C2A2  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11927  00C2A4  6F8A               	movwf	__add_item@buffer& (0+255),b
 11928  00C2A6  0E08               	movlw	high _ConfigFile_buffer
 11929  00C2A8  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11930  00C2AA  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11931  00C2AC  ECA3  F08D         	call	__add_item	;wreg free
 11932  00C2B0  0100               	movlb	0	; () banked
 11933  00C2B2  6FE3               	movwf	??_configFile_write& (0+255),b
 11934  00C2B4  51E3               	movf	??_configFile_write& (0+255),w,b
 11935  00C2B6  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11936  00C2B8  0E00               	movlw	0
 11937  00C2BA  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11938  00C2BC  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11939  00C2BE  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11940                           
 11941                           ; BSR set to: 0
 11942                           ;config_file.c: 323: file_size += _add_item(&minimum_speed_string, (int32_t) config.mini
      +                          mum_speed, &ConfigFile_buffer[file_size]);
 11943  00C2C0  0EAC               	movlw	low _minimum_speed_string
 11944  00C2C2  6F84               	movwf	__add_item@item_string& (0+255),b
 11945  00C2C4  0EA2               	movlw	high _minimum_speed_string
 11946  00C2C6  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11947  00C2C8  C19F  F086         	movff	_config+9,__add_item@value
 11948  00C2CC  C1A0  F087         	movff	_config+10,__add_item@value+1
 11949  00C2D0  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11950  00C2D2  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11951  00C2D4  0E00               	movlw	low _ConfigFile_buffer
 11952  00C2D6  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11953  00C2D8  6F8A               	movwf	__add_item@buffer& (0+255),b
 11954  00C2DA  0E08               	movlw	high _ConfigFile_buffer
 11955  00C2DC  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11956  00C2DE  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11957  00C2E0  ECA3  F08D         	call	__add_item	;wreg free
 11958  00C2E4  0100               	movlb	0	; () banked
 11959  00C2E6  6FE3               	movwf	??_configFile_write& (0+255),b
 11960  00C2E8  51E3               	movf	??_configFile_write& (0+255),w,b
 11961  00C2EA  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11962  00C2EC  0E00               	movlw	0
 11963  00C2EE  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11964  00C2F0  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11965  00C2F2  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11966                           
 11967                           ; BSR set to: 0
 11968                           ;config_file.c: 324: file_size += _add_item(&maximum_speed_string, (int32_t) config.maxi
      +                          mum_speed, &ConfigFile_buffer[file_size]);
 11969  00C2F4  0E9E               	movlw	low _maximum_speed_string
 11970  00C2F6  6F84               	movwf	__add_item@item_string& (0+255),b
 11971  00C2F8  0EA2               	movlw	high _maximum_speed_string
 11972  00C2FA  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11973  00C2FC  C1A1  F086         	movff	_config+11,__add_item@value
 11974  00C300  C1A2  F087         	movff	_config+12,__add_item@value+1
 11975  00C304  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11976  00C306  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11977  00C308  0E00               	movlw	low _ConfigFile_buffer
 11978  00C30A  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11979  00C30C  6F8A               	movwf	__add_item@buffer& (0+255),b
 11980  00C30E  0E08               	movlw	high _ConfigFile_buffer
 11981  00C310  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11982  00C312  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11983  00C314  ECA3  F08D         	call	__add_item	;wreg free
 11984  00C318  0100               	movlb	0	; () banked
 11985  00C31A  6FE3               	movwf	??_configFile_write& (0+255),b
 11986  00C31C  51E3               	movf	??_configFile_write& (0+255),w,b
 11987  00C31E  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11988  00C320  0E00               	movlw	0
 11989  00C322  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11990  00C324  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11991  00C326  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11992                           
 11993                           ; BSR set to: 0
 11994                           ;config_file.c: 325: file_size += _add_item(&initial_speed_arc_string, (int32_t) config.
      +                          initial_speed_arc, &ConfigFile_buffer[file_size]);
 11995  00C328  0E4C               	movlw	low _initial_speed_arc_string
 11996  00C32A  6F84               	movwf	__add_item@item_string& (0+255),b
 11997  00C32C  0EA2               	movlw	high _initial_speed_arc_string
 11998  00C32E  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11999  00C330  C1A3  F086         	movff	_config+13,__add_item@value
 12000  00C334  C1A4  F087         	movff	_config+14,__add_item@value+1
 12001  00C338  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12002  00C33A  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12003  00C33C  0E00               	movlw	low _ConfigFile_buffer
 12004  00C33E  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12005  00C340  6F8A               	movwf	__add_item@buffer& (0+255),b
 12006  00C342  0E08               	movlw	high _ConfigFile_buffer
 12007  00C344  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12008  00C346  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12009  00C348  ECA3  F08D         	call	__add_item	;wreg free
 12010  00C34C  0100               	movlb	0	; () banked
 12011  00C34E  6FE3               	movwf	??_configFile_write& (0+255),b
 12012  00C350  51E3               	movf	??_configFile_write& (0+255),w,b
 12013  00C352  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12014  00C354  0E00               	movlw	0
 12015  00C356  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12016  00C358  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12017  00C35A  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12018                           
 12019                           ; BSR set to: 0
 12020                           ;config_file.c: 326: file_size += _add_item(&maximum_speed_arc_string, (int32_t) config.
      +                          maximum_speed_arc, &ConfigFile_buffer[file_size]);
 12021  00C35C  0E3A               	movlw	low _maximum_speed_arc_string
 12022  00C35E  6F84               	movwf	__add_item@item_string& (0+255),b
 12023  00C360  0EA2               	movlw	high _maximum_speed_arc_string
 12024  00C362  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12025  00C364  C1A5  F086         	movff	_config+15,__add_item@value
 12026  00C368  C1A6  F087         	movff	_config+16,__add_item@value+1
 12027  00C36C  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12028  00C36E  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12029  00C370  0E00               	movlw	low _ConfigFile_buffer
 12030  00C372  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12031  00C374  6F8A               	movwf	__add_item@buffer& (0+255),b
 12032  00C376  0E08               	movlw	high _ConfigFile_buffer
 12033  00C378  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12034  00C37A  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12035  00C37C  ECA3  F08D         	call	__add_item	;wreg free
 12036  00C380  0100               	movlb	0	; () banked
 12037  00C382  6FE3               	movwf	??_configFile_write& (0+255),b
 12038  00C384  51E3               	movf	??_configFile_write& (0+255),w,b
 12039  00C386  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12040  00C388  0E00               	movlw	0
 12041  00C38A  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12042  00C38C  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12043  00C38E  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12044                           
 12045                           ; BSR set to: 0
 12046                           ;config_file.c: 327: file_size += _add_item(&initial_speed_manual_string, (int32_t) conf
      +                          ig.initial_speed_manual, &ConfigFile_buffer[file_size]);
 12047  00C390  0EFD               	movlw	low _initial_speed_manual_string
 12048  00C392  6F84               	movwf	__add_item@item_string& (0+255),b
 12049  00C394  0EA1               	movlw	high _initial_speed_manual_string
 12050  00C396  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12051  00C398  C1A7  F086         	movff	_config+17,__add_item@value
 12052  00C39C  C1A8  F087         	movff	_config+18,__add_item@value+1
 12053  00C3A0  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12054  00C3A2  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12055  00C3A4  0E00               	movlw	low _ConfigFile_buffer
 12056  00C3A6  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12057  00C3A8  6F8A               	movwf	__add_item@buffer& (0+255),b
 12058  00C3AA  0E08               	movlw	high _ConfigFile_buffer
 12059  00C3AC  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12060  00C3AE  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12061  00C3B0  ECA3  F08D         	call	__add_item	;wreg free
 12062  00C3B4  0100               	movlb	0	; () banked
 12063  00C3B6  6FE3               	movwf	??_configFile_write& (0+255),b
 12064  00C3B8  51E3               	movf	??_configFile_write& (0+255),w,b
 12065  00C3BA  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12066  00C3BC  0E00               	movlw	0
 12067  00C3BE  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12068  00C3C0  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12069  00C3C2  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12070                           
 12071                           ; BSR set to: 0
 12072                           ;config_file.c: 328: file_size += _add_item(&maximum_speed_manual_string, (int32_t) conf
      +                          ig.maximum_speed_manual, &ConfigFile_buffer[file_size]);
 12073  00C3C4  0EE8               	movlw	low _maximum_speed_manual_string
 12074  00C3C6  6F84               	movwf	__add_item@item_string& (0+255),b
 12075  00C3C8  0EA1               	movlw	high _maximum_speed_manual_string
 12076  00C3CA  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12077  00C3CC  C1A9  F086         	movff	_config+19,__add_item@value
 12078  00C3D0  C1AA  F087         	movff	_config+20,__add_item@value+1
 12079  00C3D4  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12080  00C3D6  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12081  00C3D8  0E00               	movlw	low _ConfigFile_buffer
 12082  00C3DA  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12083  00C3DC  6F8A               	movwf	__add_item@buffer& (0+255),b
 12084  00C3DE  0E08               	movlw	high _ConfigFile_buffer
 12085  00C3E0  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12086  00C3E2  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12087  00C3E4  ECA3  F08D         	call	__add_item	;wreg free
 12088  00C3E8  0100               	movlb	0	; () banked
 12089  00C3EA  6FE3               	movwf	??_configFile_write& (0+255),b
 12090  00C3EC  51E3               	movf	??_configFile_write& (0+255),w,b
 12091  00C3EE  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12092  00C3F0  0E00               	movlw	0
 12093  00C3F2  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12094  00C3F4  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12095  00C3F6  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12096                           
 12097                           ; BSR set to: 0
 12098                           ;config_file.c: 329: file_size += _add_item(&use_ccw_limit_string, (int32_t) config.use_
      +                          ccw_limit, &ConfigFile_buffer[file_size]);
 12099  00C3F8  0E82               	movlw	low _use_ccw_limit_string
 12100  00C3FA  6F84               	movwf	__add_item@item_string& (0+255),b
 12101  00C3FC  0EA2               	movlw	high _use_ccw_limit_string
 12102  00C3FE  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12103  00C400  0101               	movlb	1	; () banked
 12104  00C402  51B5               	movf	(_config+31)& (0+255),w,b
 12105  00C404  0100               	movlb	0	; () banked
 12106  00C406  6F86               	movwf	__add_item@value& (0+255),b
 12107  00C408  6B87               	clrf	(__add_item@value+1)& (0+255),b
 12108  00C40A  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12109  00C40C  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12110  00C40E  0E00               	movlw	low _ConfigFile_buffer
 12111  00C410  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12112  00C412  6F8A               	movwf	__add_item@buffer& (0+255),b
 12113  00C414  0E08               	movlw	high _ConfigFile_buffer
 12114  00C416  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12115  00C418  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12116  00C41A  ECA3  F08D         	call	__add_item	;wreg free
 12117  00C41E  0100               	movlb	0	; () banked
 12118  00C420  6FE3               	movwf	??_configFile_write& (0+255),b
 12119  00C422  51E3               	movf	??_configFile_write& (0+255),w,b
 12120  00C424  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12121  00C426  0E00               	movlw	0
 12122  00C428  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12123  00C42A  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12124  00C42C  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12125                           
 12126                           ; BSR set to: 0
 12127                           ;config_file.c: 330: file_size += _add_item(&ccw_limit_string, (int32_t) config.ccw_limi
      +                          t, &ConfigFile_buffer[file_size]);
 12128  00C42E  0EC7               	movlw	low _ccw_limit_string
 12129  00C430  6F84               	movwf	__add_item@item_string& (0+255),b
 12130  00C432  0EA2               	movlw	high _ccw_limit_string
 12131  00C434  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12132  00C436  C1B6  F086         	movff	_config+32,__add_item@value
 12133  00C43A  C1B7  F087         	movff	_config+33,__add_item@value+1
 12134  00C43E  C1B8  F088         	movff	_config+34,__add_item@value+2
 12135  00C442  C1B9  F089         	movff	_config+35,__add_item@value+3
 12136  00C446  0E00               	movlw	low _ConfigFile_buffer
 12137  00C448  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12138  00C44A  6F8A               	movwf	__add_item@buffer& (0+255),b
 12139  00C44C  0E08               	movlw	high _ConfigFile_buffer
 12140  00C44E  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12141  00C450  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12142  00C452  ECA3  F08D         	call	__add_item	;wreg free
 12143  00C456  0100               	movlb	0	; () banked
 12144  00C458  6FE3               	movwf	??_configFile_write& (0+255),b
 12145  00C45A  51E3               	movf	??_configFile_write& (0+255),w,b
 12146  00C45C  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12147  00C45E  0E00               	movlw	0
 12148  00C460  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12149  00C462  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12150  00C464  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12151                           
 12152                           ; BSR set to: 0
 12153                           ;config_file.c: 331: file_size += _add_item(&use_cw_limit_string, (int32_t) config.use_c
      +                          w_limit, &ConfigFile_buffer[file_size]);
 12154  00C466  0EBA               	movlw	low _use_cw_limit_string
 12155  00C468  6F84               	movwf	__add_item@item_string& (0+255),b
 12156  00C46A  0EA2               	movlw	high _use_cw_limit_string
 12157  00C46C  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12158  00C46E  0101               	movlb	1	; () banked
 12159  00C470  51AC               	movf	(_config+22)& (0+255),w,b
 12160  00C472  0100               	movlb	0	; () banked
 12161  00C474  6F86               	movwf	__add_item@value& (0+255),b
 12162  00C476  6B87               	clrf	(__add_item@value+1)& (0+255),b
 12163  00C478  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12164  00C47A  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12165  00C47C  0E00               	movlw	low _ConfigFile_buffer
 12166  00C47E  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12167  00C480  6F8A               	movwf	__add_item@buffer& (0+255),b
 12168  00C482  0E08               	movlw	high _ConfigFile_buffer
 12169  00C484  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12170  00C486  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12171  00C488  ECA3  F08D         	call	__add_item	;wreg free
 12172  00C48C  0100               	movlb	0	; () banked
 12173  00C48E  6FE3               	movwf	??_configFile_write& (0+255),b
 12174  00C490  51E3               	movf	??_configFile_write& (0+255),w,b
 12175  00C492  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12176  00C494  0E00               	movlw	0
 12177  00C496  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12178  00C498  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12179  00C49A  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12180                           
 12181                           ; BSR set to: 0
 12182                           ;config_file.c: 332: file_size += _add_item(&cw_limit_string, (int32_t) config.cw_limit,
      +                           &ConfigFile_buffer[file_size]);
 12183  00C49C  0ED1               	movlw	low _cw_limit_string
 12184  00C49E  6F84               	movwf	__add_item@item_string& (0+255),b
 12185  00C4A0  0EA2               	movlw	high _cw_limit_string
 12186  00C4A2  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12187  00C4A4  C1AD  F086         	movff	_config+23,__add_item@value
 12188  00C4A8  C1AE  F087         	movff	_config+24,__add_item@value+1
 12189  00C4AC  C1AF  F088         	movff	_config+25,__add_item@value+2
 12190  00C4B0  C1B0  F089         	movff	_config+26,__add_item@value+3
 12191  00C4B4  0E00               	movlw	low _ConfigFile_buffer
 12192  00C4B6  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12193  00C4B8  6F8A               	movwf	__add_item@buffer& (0+255),b
 12194  00C4BA  0E08               	movlw	high _ConfigFile_buffer
 12195  00C4BC  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12196  00C4BE  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12197  00C4C0  ECA3  F08D         	call	__add_item	;wreg free
 12198  00C4C4  0100               	movlb	0	; () banked
 12199  00C4C6  6FE3               	movwf	??_configFile_write& (0+255),b
 12200  00C4C8  51E3               	movf	??_configFile_write& (0+255),w,b
 12201  00C4CA  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12202  00C4CC  0E00               	movlw	0
 12203  00C4CE  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12204  00C4D0  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12205  00C4D2  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12206                           
 12207                           ; BSR set to: 0
 12208                           ;config_file.c: 333: file_size += _add_item(&beep_duration_string, (int32_t) config.beep
      +                          _duration, &ConfigFile_buffer[file_size]);
 12209  00C4D4  0E90               	movlw	low _beep_duration_string
 12210  00C4D6  6F84               	movwf	__add_item@item_string& (0+255),b
 12211  00C4D8  0EA2               	movlw	high _beep_duration_string
 12212  00C4DA  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12213  00C4DC  0101               	movlb	1	; () banked
 12214  00C4DE  51AB               	movf	(_config+21)& (0+255),w,b
 12215  00C4E0  0100               	movlb	0	; () banked
 12216  00C4E2  6F86               	movwf	__add_item@value& (0+255),b
 12217  00C4E4  6B87               	clrf	(__add_item@value+1)& (0+255),b
 12218  00C4E6  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12219  00C4E8  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12220  00C4EA  0E00               	movlw	low _ConfigFile_buffer
 12221  00C4EC  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12222  00C4EE  6F8A               	movwf	__add_item@buffer& (0+255),b
 12223  00C4F0  0E08               	movlw	high _ConfigFile_buffer
 12224  00C4F2  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12225  00C4F4  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12226  00C4F6  ECA3  F08D         	call	__add_item	;wreg free
 12227  00C4FA  0100               	movlb	0	; () banked
 12228  00C4FC  6FE3               	movwf	??_configFile_write& (0+255),b
 12229  00C4FE  51E3               	movf	??_configFile_write& (0+255),w,b
 12230  00C500  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12231  00C502  0E00               	movlw	0
 12232  00C504  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12233  00C506  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12234  00C508  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12235                           
 12236                           ; BSR set to: 0
 12237                           ;config_file.c: 334: file_size += _add_item(&position_display_180_string, (int32_t) conf
      +                          ig.position_display_180, &ConfigFile_buffer[file_size]);
 12238  00C50A  0ED3               	movlw	low _position_display_180_string
 12239  00C50C  6F84               	movwf	__add_item@item_string& (0+255),b
 12240  00C50E  0EA1               	movlw	high _position_display_180_string
 12241  00C510  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12242  00C512  0101               	movlb	1	; () banked
 12243  00C514  51BE               	movf	(_config+40)& (0+255),w,b
 12244  00C516  0100               	movlb	0	; () banked
 12245  00C518  6F86               	movwf	__add_item@value& (0+255),b
 12246  00C51A  6B87               	clrf	(__add_item@value+1)& (0+255),b
 12247  00C51C  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12248  00C51E  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12249  00C520  0E00               	movlw	low _ConfigFile_buffer
 12250  00C522  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12251  00C524  6F8A               	movwf	__add_item@buffer& (0+255),b
 12252  00C526  0E08               	movlw	high _ConfigFile_buffer
 12253  00C528  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12254  00C52A  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12255  00C52C  ECA3  F08D         	call	__add_item	;wreg free
 12256  00C530  0100               	movlb	0	; () banked
 12257  00C532  6FE3               	movwf	??_configFile_write& (0+255),b
 12258  00C534  51E3               	movf	??_configFile_write& (0+255),w,b
 12259  00C536  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12260  00C538  0E00               	movlw	0
 12261  00C53A  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12262  00C53C  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12263  00C53E  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12264                           
 12265                           ; BSR set to: 0
 12266                           ;config_file.c: 337: file_number = fat_find_file(&configFile_used_name, &configFile_used
      +                          _extention);
 12267  00C540  0ED4               	movlw	low _configFile_used_name
 12268  00C542  6F8B               	movwf	fat_find_file@name& (0+255),b
 12269  00C544  0E02               	movlw	high _configFile_used_name
 12270  00C546  6F8C               	movwf	(fat_find_file@name+1)& (0+255),b
 12271  00C548  0EE4               	movlw	low _configFile_used_extention
 12272  00C54A  6F8D               	movwf	fat_find_file@extension& (0+255),b
 12273  00C54C  0E02               	movlw	high _configFile_used_extention
 12274  00C54E  6F8E               	movwf	(fat_find_file@extension+1)& (0+255),b
 12275  00C550  EC86  F08F         	call	_fat_find_file	;wreg free
 12276  00C554  0100               	movlb	0	; () banked
 12277  00C556  6FE4               	movwf	configFile_write@file_number& (0+255),b
 12278                           
 12279                           ; BSR set to: 0
 12280                           ;config_file.c: 338: if(file_number==0xFF)
 12281  00C558  29E4               	incf	configFile_write@file_number& (0+255),w,b
 12282  00C55A  A4D8               	btfss	status,2,c
 12283  00C55C  D015               	goto	l3087
 12284                           
 12285                           ; BSR set to: 0
 12286                           ;config_file.c: 339: {;config_file.c: 340: file_number = fat_create_file(&configFile_use
      +                          d_name, &configFile_used_extention, file_size);
 12287  00C55E  0ED4               	movlw	low _configFile_used_name
 12288  00C560  6FAC               	movwf	fat_create_file@name& (0+255),b
 12289  00C562  0E02               	movlw	high _configFile_used_name
 12290  00C564  6FAD               	movwf	(fat_create_file@name+1)& (0+255),b
 12291  00C566  0EE4               	movlw	low _configFile_used_extention
 12292  00C568  6FAE               	movwf	fat_create_file@extension& (0+255),b
 12293  00C56A  0E02               	movlw	high _configFile_used_extention
 12294  00C56C  6FAF               	movwf	(fat_create_file@extension+1)& (0+255),b
 12295  00C56E  C0E5  F0B0         	movff	configFile_write@file_size,fat_create_file@size
 12296  00C572  C0E6  F0B1         	movff	configFile_write@file_size+1,fat_create_file@size+1
 12297  00C576  C0E7  F0B2         	movff	configFile_write@file_size+2,fat_create_file@size+2
 12298  00C57A  C0E8  F0B3         	movff	configFile_write@file_size+3,fat_create_file@size+3
 12299  00C57E  EC66  F083         	call	_fat_create_file	;wreg free
 12300  00C582  0100               	movlb	0	; () banked
 12301  00C584  6FE4               	movwf	configFile_write@file_number& (0+255),b
 12302                           
 12303                           ;config_file.c: 341: }
 12304  00C586  D00B               	goto	l3088
 12305  00C588                     l3087:
 12306                           
 12307                           ; BSR set to: 0
 12308                           ;config_file.c: 342: else;config_file.c: 343: {;config_file.c: 344: fat_resize_file(file
      +                          _number, file_size);
 12309                           
 12310                           ; BSR set to: 0
 12311  00C588  C0E5  F0AC         	movff	configFile_write@file_size,fat_resize_file@new_file_size
 12312  00C58C  C0E6  F0AD         	movff	configFile_write@file_size+1,fat_resize_file@new_file_size+1
 12313  00C590  C0E7  F0AE         	movff	configFile_write@file_size+2,fat_resize_file@new_file_size+2
 12314  00C594  C0E8  F0AF         	movff	configFile_write@file_size+3,fat_resize_file@new_file_size+3
 12315  00C598  51E4               	movf	configFile_write@file_number& (0+255),w,b
 12316  00C59A  EC27  F08C         	call	_fat_resize_file
 12317  00C59E                     l3088:
 12318                           
 12319                           ;config_file.c: 345: };config_file.c: 348: fat_modify_file(file_number, 0, file_size, &C
      +                          onfigFile_buffer[0]);
 12320  00C59E  0E00               	movlw	0
 12321  00C5A0  0100               	movlb	0	; () banked
 12322  00C5A2  6FA1               	movwf	fat_modify_file@start_byte& (0+255),b
 12323  00C5A4  0E00               	movlw	0
 12324  00C5A6  6FA2               	movwf	(fat_modify_file@start_byte+1)& (0+255),b
 12325  00C5A8  0E00               	movlw	0
 12326  00C5AA  6FA3               	movwf	(fat_modify_file@start_byte+2)& (0+255),b
 12327  00C5AC  0E00               	movlw	0
 12328  00C5AE  6FA4               	movwf	(fat_modify_file@start_byte+3)& (0+255),b
 12329  00C5B0  C0E5  F0A5         	movff	configFile_write@file_size,fat_modify_file@length
 12330  00C5B4  C0E6  F0A6         	movff	configFile_write@file_size+1,fat_modify_file@length+1
 12331  00C5B8  0E00               	movlw	low _ConfigFile_buffer
 12332  00C5BA  6FA7               	movwf	fat_modify_file@data& (0+255),b
 12333  00C5BC  0E08               	movlw	high _ConfigFile_buffer
 12334  00C5BE  6FA8               	movwf	(fat_modify_file@data+1)& (0+255),b
 12335  00C5C0  51E4               	movf	configFile_write@file_number& (0+255),w,b
 12336  00C5C2  EC0F  F070         	call	_fat_modify_file
 12337  00C5C6  0012               	return		;funcret
 12338  00C5C8                     __end_of_configFile_write:
 12339                           	opt stack 0
 12340                           tblptru	equ	0xFF8
 12341                           tblptrh	equ	0xFF7
 12342                           tblptrl	equ	0xFF6
 12343                           tablat	equ	0xFF5
 12344                           prodh	equ	0xFF4
 12345                           prodl	equ	0xFF3
 12346                           postinc0	equ	0xFEE
 12347                           wreg	equ	0xFE8
 12348                           postdec1	equ	0xFE5
 12349                           plusw1	equ	0xFE3
 12350                           fsr1h	equ	0xFE2
 12351                           fsr1l	equ	0xFE1
 12352                           indf2	equ	0xFDF
 12353                           postinc2	equ	0xFDE
 12354                           plusw2	equ	0xFDB
 12355                           fsr2h	equ	0xFDA
 12356                           fsr2l	equ	0xFD9
 12357                           status	equ	0xFD8
 12358                           
 12359 ;; *************** function _fat_resize_file *****************
 12360 ;; Defined at:
 12361 ;;		line 911 in file "fat16.c"
 12362 ;; Parameters:    Size  Location     Type
 12363 ;;  file_number     1    wreg     unsigned char 
 12364 ;;  new_file_siz    4   76[BANK0 ] unsigned long 
 12365 ;; Auto vars:     Size  Location     Type
 12366 ;;  file_number     1   90[BANK0 ] unsigned char 
 12367 ;;  root           32   91[BANK0 ] struct .
 12368 ;;  first_cluste    2   88[BANK0 ] unsigned int 
 12369 ;;  new_number_o    2   86[BANK0 ] unsigned int 
 12370 ;;  old_number_o    2   84[BANK0 ] unsigned int 
 12371 ;; Return value:  Size  Location     Type
 12372 ;;                  1    wreg      unsigned char 
 12373 ;; Registers used:
 12374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12375 ;; Tracked objects:
 12376 ;;		On entry : 0/0
 12377 ;;		On exit  : 0/0
 12378 ;;		Unchanged: 0/0
 12379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12380 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12381 ;;      Locals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12382 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12383 ;;      Totals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12384 ;;Total ram usage:       47 bytes
 12385 ;; Hardware stack levels used:    1
 12386 ;; Hardware stack levels required when called:   17
 12387 ;; This function calls:
 12388 ;;		__make_cluster_chain
 12389 ;;		__root_is_available
 12390 ;;		__write_root
 12391 ;;		_fat_get_file_information
 12392 ;; This function is called by:
 12393 ;;		_configFile_write
 12394 ;;		_fat_append_to_file
 12395 ;; This function uses a non-reentrant model
 12396 ;;
 12397                           
 12398                           	psect	text38
 12399  01184E                     __ptext38:
 12400                           	opt stack 0
 12401  01184E                     _fat_resize_file:
 12402                           	opt stack 11
 12403                           
 12404                           ;incstack = 0
 12405                           ;fat_resize_file@file_number stored from wreg
 12406  01184E  0100               	movlb	0	; () banked
 12407  011850  6FBA               	movwf	fat_resize_file@file_number& (0+255),b
 12408                           
 12409                           ;fat16.c: 913: rootEntry_t root;;fat16.c: 914: uint16_t old_number_of_clusters;;fat16.c:
      +                           915: uint16_t new_number_of_clusters;;fat16.c: 916: uint16_t first_cluster;;fat16.c: 91
      +                          9: if(file_number>=64)
 12410  011852  0E3F               	movlw	63
 12411  011854  0100               	movlb	0	; () banked
 12412  011856  65BA               	cpfsgt	fat_resize_file@file_number& (0+255),b
 12413  011858  D002               	goto	l1922
 12414                           
 12415                           ; BSR set to: 0
 12416                           ;fat16.c: 920: {;fat16.c: 922: return 0xFF;
 12417  01185A  0EFF               	movlw	255
 12418                           
 12419                           ; BSR set to: 0
 12420  01185C  0012               	return	
 12421  01185E                     l1922:
 12422                           
 12423                           ; BSR set to: 0
 12424                           ;fat16.c: 923: };fat16.c: 926: if(_root_is_available(file_number))
 12425                           
 12426                           ; BSR set to: 0
 12427  01185E  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 12428  011860  EC17  F0A4         	call	__root_is_available
 12429  011864  0900               	iorlw	0
 12430  011866  B4D8               	btfsc	status,2,c
 12431  011868  D002               	goto	l1924
 12432                           
 12433                           ;fat16.c: 927: {;fat16.c: 929: return 0xFE;
 12434  01186A  0EFE               	movlw	254
 12435  01186C  0012               	return	
 12436  01186E                     l1924:
 12437                           
 12438                           ;fat16.c: 930: };fat16.c: 933: fat_get_file_information(file_number, &root);
 12439  01186E  0EBB               	movlw	low fat_resize_file@root
 12440  011870  0100               	movlb	0	; () banked
 12441  011872  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 12442  011874  0E00               	movlw	high fat_resize_file@root
 12443  011876  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 12444  011878  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 12445  01187A  ECD4  F0A1         	call	_fat_get_file_information
 12446                           
 12447                           ;fat16.c: 936: old_number_of_clusters = (root.fileSize+512-1)>>9;
 12448  01187E  EE20  F0D7         	lfsr	2,fat_resize_file@root+28
 12449  011882  0EFF               	movlw	255
 12450  011884  24DE               	addwf	postinc2,w,c
 12451  011886  0100               	movlb	0	; () banked
 12452  011888  6FB0               	movwf	??_fat_resize_file& (0+255),b
 12453  01188A  0E01               	movlw	1
 12454  01188C  20DE               	addwfc	postinc2,w,c
 12455  01188E  6FB1               	movwf	(??_fat_resize_file+1)& (0+255),b
 12456  011890  0E00               	movlw	0
 12457  011892  20DE               	addwfc	postinc2,w,c
 12458  011894  6FB2               	movwf	(??_fat_resize_file+2)& (0+255),b
 12459  011896  0E00               	movlw	0
 12460  011898  20DE               	addwfc	postinc2,w,c
 12461  01189A  6FB3               	movwf	(??_fat_resize_file+3)& (0+255),b
 12462  01189C  0E0A               	movlw	10
 12463  01189E  D005               	goto	u15480
 12464  0118A0                     u15485:
 12465  0118A0  90D8               	bcf	status,0,c
 12466  0118A2  33B3               	rrcf	(??_fat_resize_file+3)& (0+255),f,b
 12467  0118A4  33B2               	rrcf	(??_fat_resize_file+2)& (0+255),f,b
 12468  0118A6  33B1               	rrcf	(??_fat_resize_file+1)& (0+255),f,b
 12469  0118A8  33B0               	rrcf	??_fat_resize_file& (0+255),f,b
 12470  0118AA                     u15480:
 12471  0118AA  2EE8               	decfsz	wreg,f,c
 12472  0118AC  D7F9               	goto	u15485
 12473  0118AE  C0B0  F0B4         	movff	??_fat_resize_file,fat_resize_file@old_number_of_clusters
 12474  0118B2  C0B1  F0B5         	movff	??_fat_resize_file+1,fat_resize_file@old_number_of_clusters+1
 12475                           
 12476                           ; BSR set to: 0
 12477                           ;fat16.c: 937: new_number_of_clusters = (new_file_size+512-1)>>9;
 12478  0118B6  0EFF               	movlw	255
 12479  0118B8  25AC               	addwf	fat_resize_file@new_file_size& (0+255),w,b
 12480  0118BA  6FB0               	movwf	??_fat_resize_file& (0+255),b
 12481  0118BC  0E01               	movlw	1
 12482  0118BE  21AD               	addwfc	(fat_resize_file@new_file_size+1)& (0+255),w,b
 12483  0118C0  6FB1               	movwf	(??_fat_resize_file+1)& (0+255),b
 12484  0118C2  0E00               	movlw	0
 12485  0118C4  21AE               	addwfc	(fat_resize_file@new_file_size+2)& (0+255),w,b
 12486  0118C6  6FB2               	movwf	(??_fat_resize_file+2)& (0+255),b
 12487  0118C8  0E00               	movlw	0
 12488  0118CA  21AF               	addwfc	(fat_resize_file@new_file_size+3)& (0+255),w,b
 12489  0118CC  6FB3               	movwf	(??_fat_resize_file+3)& (0+255),b
 12490  0118CE  0E0A               	movlw	10
 12491  0118D0  D005               	goto	u15490
 12492  0118D2                     u15495:
 12493  0118D2  90D8               	bcf	status,0,c
 12494  0118D4  33B3               	rrcf	(??_fat_resize_file+3)& (0+255),f,b
 12495  0118D6  33B2               	rrcf	(??_fat_resize_file+2)& (0+255),f,b
 12496  0118D8  33B1               	rrcf	(??_fat_resize_file+1)& (0+255),f,b
 12497  0118DA  33B0               	rrcf	??_fat_resize_file& (0+255),f,b
 12498  0118DC                     u15490:
 12499  0118DC  2EE8               	decfsz	wreg,f,c
 12500  0118DE  D7F9               	goto	u15495
 12501  0118E0  C0B0  F0B6         	movff	??_fat_resize_file,fat_resize_file@new_number_of_clusters
 12502  0118E4  C0B1  F0B7         	movff	??_fat_resize_file+1,fat_resize_file@new_number_of_clusters+1
 12503                           
 12504                           ; BSR set to: 0
 12505                           ;fat16.c: 940: if(old_number_of_clusters!=new_number_of_clusters)
 12506  0118E8  51B6               	movf	fat_resize_file@new_number_of_clusters& (0+255),w,b
 12507  0118EA  19B4               	xorwf	fat_resize_file@old_number_of_clusters& (0+255),w,b
 12508  0118EC  E104               	bnz	u15500
 12509  0118EE  51B7               	movf	(fat_resize_file@new_number_of_clusters+1)& (0+255),w,b
 12510  0118F0  19B5               	xorwf	(fat_resize_file@old_number_of_clusters+1)& (0+255),w,b
 12511  0118F2  B4D8               	btfsc	status,2,c
 12512  0118F4  D01A               	goto	l1925
 12513  0118F6                     u15500:
 12514                           
 12515                           ; BSR set to: 0
 12516                           ;fat16.c: 941: {;fat16.c: 942: first_cluster = _make_cluster_chain(root.firstCluster, ne
      +                          w_number_of_clusters);
 12517  0118F6  C0D5  F095         	movff	fat_resize_file@root+26,__make_cluster_chain@first_cluster
 12518  0118FA  C0D6  F096         	movff	fat_resize_file@root+27,__make_cluster_chain@first_cluster+1
 12519  0118FE  C0B6  F097         	movff	fat_resize_file@new_number_of_clusters,__make_cluster_chain@number_of_clusters
 12520  011902  C0B7  F098         	movff	fat_resize_file@new_number_of_clusters+1,__make_cluster_chain@number_of_clusters+
      +                          1
 12521  011906  EC98  F069         	call	__make_cluster_chain	;wreg free
 12522  01190A  C095  F0B8         	movff	?__make_cluster_chain,fat_resize_file@first_cluster
 12523  01190E  C096  F0B9         	movff	?__make_cluster_chain+1,fat_resize_file@first_cluster+1
 12524                           
 12525                           ;fat16.c: 943: if(first_cluster==0xFFFF)
 12526  011912  0100               	movlb	0	; () banked
 12527  011914  29B8               	incf	fat_resize_file@first_cluster& (0+255),w,b
 12528  011916  E105               	bnz	l1926
 12529  011918  29B9               	incf	(fat_resize_file@first_cluster+1)& (0+255),w,b
 12530  01191A  A4D8               	btfss	status,2,c
 12531  01191C  D002               	goto	l1926
 12532                           
 12533                           ; BSR set to: 0
 12534                           ;fat16.c: 944: {;fat16.c: 946: return 0xFD;
 12535  01191E  0EFD               	movlw	253
 12536                           
 12537                           ; BSR set to: 0
 12538  011920  0012               	return	
 12539  011922                     l1926:
 12540                           
 12541                           ; BSR set to: 0
 12542                           ;fat16.c: 947: };fat16.c: 950: root.firstCluster = first_cluster;
 12543  011922  C0B8  F0D5         	movff	fat_resize_file@first_cluster,fat_resize_file@root+26
 12544  011926  C0B9  F0D6         	movff	fat_resize_file@first_cluster+1,fat_resize_file@root+27
 12545  01192A                     l1925:
 12546                           
 12547                           ; BSR set to: 0
 12548                           ;fat16.c: 951: };fat16.c: 954: root.fileSize = new_file_size;
 12549  01192A  C0AC  F0D7         	movff	fat_resize_file@new_file_size,fat_resize_file@root+28
 12550  01192E  C0AD  F0D8         	movff	fat_resize_file@new_file_size+1,fat_resize_file@root+29
 12551  011932  C0AE  F0D9         	movff	fat_resize_file@new_file_size+2,fat_resize_file@root+30
 12552  011936  C0AF  F0DA         	movff	fat_resize_file@new_file_size+3,fat_resize_file@root+31
 12553                           
 12554                           ; BSR set to: 0
 12555                           ;fat16.c: 957: _write_root(file_number, &root);
 12556  01193A  0EBB               	movlw	low fat_resize_file@root
 12557  01193C  6F88               	movwf	__write_root@data& (0+255),b
 12558  01193E  0E00               	movlw	high fat_resize_file@root
 12559  011940  6F89               	movwf	(__write_root@data+1)& (0+255),b
 12560  011942  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 12561  011944  EC34  F0AA         	call	__write_root
 12562                           
 12563                           ;fat16.c: 960: return 0x00;
 12564  011948  0E00               	movlw	0
 12565  01194A  0012               	return	
 12566  01194C                     __end_of_fat_resize_file:
 12567                           	opt stack 0
 12568                           tblptru	equ	0xFF8
 12569                           tblptrh	equ	0xFF7
 12570                           tblptrl	equ	0xFF6
 12571                           tablat	equ	0xFF5
 12572                           prodh	equ	0xFF4
 12573                           prodl	equ	0xFF3
 12574                           postinc0	equ	0xFEE
 12575                           wreg	equ	0xFE8
 12576                           postdec1	equ	0xFE5
 12577                           plusw1	equ	0xFE3
 12578                           fsr1h	equ	0xFE2
 12579                           fsr1l	equ	0xFE1
 12580                           indf2	equ	0xFDF
 12581                           postinc2	equ	0xFDE
 12582                           plusw2	equ	0xFDB
 12583                           fsr2h	equ	0xFDA
 12584                           fsr2l	equ	0xFD9
 12585                           status	equ	0xFD8
 12586                           
 12587 ;; *************** function _fat_modify_file *****************
 12588 ;; Defined at:
 12589 ;;		line 963 in file "fat16.c"
 12590 ;; Parameters:    Size  Location     Type
 12591 ;;  file_number     1    wreg     unsigned char 
 12592 ;;  start_byte      4   65[BANK0 ] unsigned long 
 12593 ;;  length          2   69[BANK0 ] unsigned int 
 12594 ;;  data            2   71[BANK0 ] PTR unsigned char 
 12595 ;;		 -> ConfigFile_buffer(512), 
 12596 ;; Auto vars:     Size  Location     Type
 12597 ;;  file_number     1   87[BANK0 ] unsigned char 
 12598 ;;  root           32   99[BANK0 ] struct .
 12599 ;;  position        4   95[BANK0 ] unsigned long 
 12600 ;;  number_of_by    2   93[BANK0 ] unsigned int 
 12601 ;;  offset          2   91[BANK0 ] unsigned int 
 12602 ;;  cluster         2   89[BANK0 ] unsigned int 
 12603 ;;  sector          2   85[BANK0 ] unsigned int 
 12604 ;;  return_code     1   88[BANK0 ] unsigned char 
 12605 ;; Return value:  Size  Location     Type
 12606 ;;                  1    wreg      unsigned char 
 12607 ;; Registers used:
 12608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12609 ;; Tracked objects:
 12610 ;;		On entry : 0/0
 12611 ;;		On exit  : 0/0
 12612 ;;		Unchanged: 0/0
 12613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12614 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12615 ;;      Locals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12616 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12617 ;;      Totals:         0      66       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12618 ;;Total ram usage:       66 bytes
 12619 ;; Hardware stack levels used:    1
 12620 ;; Hardware stack levels required when called:   17
 12621 ;; This function calls:
 12622 ;;		__data_sector_from_cluster
 12623 ;;		__find_nth_cluster
 12624 ;;		__read_fat
 12625 ;;		_fat_get_file_information
 12626 ;;		_flash_partial_write
 12627 ;; This function is called by:
 12628 ;;		_configFile_write
 12629 ;;		_fat_append_to_file
 12630 ;; This function uses a non-reentrant model
 12631 ;;
 12632                           
 12633                           	psect	text39
 12634  00E01E                     __ptext39:
 12635                           	opt stack 0
 12636  00E01E                     _fat_modify_file:
 12637                           	opt stack 11
 12638                           
 12639                           ;incstack = 0
 12640                           ;fat_modify_file@file_number stored from wreg
 12641  00E01E  0100               	movlb	0	; () banked
 12642  00E020  6FB7               	movwf	fat_modify_file@file_number& (0+255),b
 12643                           
 12644                           ;fat16.c: 965: rootEntry_t root;;fat16.c: 966: uint16_t cluster;;fat16.c: 967: uint32_t 
      +                          position;;fat16.c: 968: uint16_t offset;;fat16.c: 969: uint16_t sector;;fat16.c: 970: ui
      +                          nt16_t number_of_bytes;;fat16.c: 971: uint8_t return_code;;fat16.c: 974: return_code = f
      +                          at_get_file_information(file_number, &root);
 12645  00E022  0EC3               	movlw	low fat_modify_file@root
 12646  00E024  0100               	movlb	0	; () banked
 12647  00E026  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 12648  00E028  0E00               	movlw	high fat_modify_file@root
 12649  00E02A  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 12650  00E02C  51B7               	movf	fat_modify_file@file_number& (0+255),w,b
 12651  00E02E  ECD4  F0A1         	call	_fat_get_file_information
 12652  00E032  0100               	movlb	0	; () banked
 12653  00E034  6FB8               	movwf	fat_modify_file@return_code& (0+255),b
 12654                           
 12655                           ; BSR set to: 0
 12656                           ;fat16.c: 975: if(return_code!=0x00)
 12657  00E036  51B8               	movf	fat_modify_file@return_code& (0+255),w,b
 12658  00E038  A4D8               	btfss	status,2,c
 12659  00E03A  0012               	return	
 12660                           
 12661                           ; BSR set to: 0
 12662                           ;fat16.c: 979: };fat16.c: 982: if(start_byte>root.fileSize)
 12663                           
 12664                           ; BSR set to: 0
 12665                           
 12666                           ; BSR set to: 0
 12667                           ;fat16.c: 976: {;fat16.c: 978: return return_code;;	Return value of _fat_modify_file is 
      +                          never used
 12668  00E03C  51A1               	movf	fat_modify_file@start_byte& (0+255),w,b
 12669  00E03E  5DDF               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 12670  00E040  51A2               	movf	(fat_modify_file@start_byte+1)& (0+255),w,b
 12671  00E042  59E0               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 12672  00E044  51A3               	movf	(fat_modify_file@start_byte+2)& (0+255),w,b
 12673  00E046  59E1               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 12674  00E048  51A4               	movf	(fat_modify_file@start_byte+3)& (0+255),w,b
 12675  00E04A  59E2               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 12676  00E04C  A0D8               	btfss	status,0,c
 12677  00E04E  0012               	return	
 12678                           
 12679                           ; BSR set to: 0
 12680                           ;fat16.c: 986: };fat16.c: 988: if((start_byte+length) > root.fileSize)
 12681                           
 12682                           ; BSR set to: 0
 12683                           
 12684                           ; BSR set to: 0
 12685                           ;fat16.c: 983: {;fat16.c: 985: return 0xF0;;	Return value of _fat_modify_file is never u
      +                          sed
 12686  00E050  51A5               	movf	fat_modify_file@length& (0+255),w,b
 12687  00E052  25A1               	addwf	fat_modify_file@start_byte& (0+255),w,b
 12688  00E054  6FA9               	movwf	??_fat_modify_file& (0+255),b
 12689  00E056  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 12690  00E058  21A2               	addwfc	(fat_modify_file@start_byte+1)& (0+255),w,b
 12691  00E05A  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 12692  00E05C  0E00               	movlw	0
 12693  00E05E  21A3               	addwfc	(fat_modify_file@start_byte+2)& (0+255),w,b
 12694  00E060  6FAB               	movwf	(??_fat_modify_file+2)& (0+255),b
 12695  00E062  0E00               	movlw	0
 12696  00E064  21A4               	addwfc	(fat_modify_file@start_byte+3)& (0+255),w,b
 12697  00E066  6FAC               	movwf	(??_fat_modify_file+3)& (0+255),b
 12698  00E068  51A9               	movf	??_fat_modify_file& (0+255),w,b
 12699  00E06A  5DDF               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 12700  00E06C  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 12701  00E06E  59E0               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 12702  00E070  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 12703  00E072  59E1               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 12704  00E074  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 12705  00E076  59E2               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 12706  00E078  B0D8               	btfsc	status,0,c
 12707  00E07A  D00E               	goto	l1932
 12708                           
 12709                           ; BSR set to: 0
 12710                           ;fat16.c: 989: {;fat16.c: 991: length = root.fileSize - start_byte;
 12711  00E07C  C0A1  F0A9         	movff	fat_modify_file@start_byte,??_fat_modify_file
 12712  00E080  C0A2  F0AA         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 12713  00E084  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 12714  00E086  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 12715  00E088  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 12716  00E08A  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 12717  00E08C  51DF               	movf	(fat_modify_file@root+28)& (0+255),w,b
 12718  00E08E  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 12719  00E090  6FA5               	movwf	fat_modify_file@length& (0+255),b
 12720  00E092  51E0               	movf	(fat_modify_file@root+29)& (0+255),w,b
 12721  00E094  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 12722  00E096  6FA6               	movwf	(fat_modify_file@length+1)& (0+255),b
 12723  00E098                     l1932:
 12724                           
 12725                           ; BSR set to: 0
 12726                           ;fat16.c: 992: };fat16.c: 995: cluster = _find_nth_cluster(root.firstCluster, (start_byt
      +                          e>>9));
 12727                           
 12728                           ; BSR set to: 0
 12729  00E098  C0DD  F097         	movff	fat_modify_file@root+26,__find_nth_cluster@cluster
 12730  00E09C  C0DE  F098         	movff	fat_modify_file@root+27,__find_nth_cluster@cluster+1
 12731  00E0A0  C0A1  F0A9         	movff	fat_modify_file@start_byte,??_fat_modify_file
 12732  00E0A4  C0A2  F0AA         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 12733  00E0A8  C0A3  F0AB         	movff	fat_modify_file@start_byte+2,??_fat_modify_file+2
 12734  00E0AC  C0A4  F0AC         	movff	fat_modify_file@start_byte+3,??_fat_modify_file+3
 12735  00E0B0  0E0A               	movlw	10
 12736  00E0B2  D005               	goto	u15550
 12737  00E0B4                     u15555:
 12738  00E0B4  90D8               	bcf	status,0,c
 12739  00E0B6  33AC               	rrcf	(??_fat_modify_file+3)& (0+255),f,b
 12740  00E0B8  33AB               	rrcf	(??_fat_modify_file+2)& (0+255),f,b
 12741  00E0BA  33AA               	rrcf	(??_fat_modify_file+1)& (0+255),f,b
 12742  00E0BC  33A9               	rrcf	??_fat_modify_file& (0+255),f,b
 12743  00E0BE                     u15550:
 12744  00E0BE  2EE8               	decfsz	wreg,f,c
 12745  00E0C0  D7F9               	goto	u15555
 12746  00E0C2  C0A9  F099         	movff	??_fat_modify_file,__find_nth_cluster@n
 12747  00E0C6  C0AA  F09A         	movff	??_fat_modify_file+1,__find_nth_cluster@n+1
 12748  00E0CA  EC61  F09B         	call	__find_nth_cluster	;wreg free
 12749  00E0CE  C097  F0B9         	movff	?__find_nth_cluster,fat_modify_file@cluster
 12750  00E0D2  C098  F0BA         	movff	?__find_nth_cluster+1,fat_modify_file@cluster+1
 12751                           
 12752                           ;fat16.c: 998: position = start_byte & 0xFFFFFE00;
 12753  00E0D6  0E00               	movlw	0
 12754  00E0D8  0100               	movlb	0	; () banked
 12755  00E0DA  15A1               	andwf	fat_modify_file@start_byte& (0+255),w,b
 12756  00E0DC  6FBF               	movwf	fat_modify_file@position& (0+255),b
 12757  00E0DE  0EFE               	movlw	254
 12758  00E0E0  15A2               	andwf	(fat_modify_file@start_byte+1)& (0+255),w,b
 12759  00E0E2  6FC0               	movwf	(fat_modify_file@position+1)& (0+255),b
 12760  00E0E4  0EFF               	movlw	255
 12761  00E0E6  15A3               	andwf	(fat_modify_file@start_byte+2)& (0+255),w,b
 12762  00E0E8  6FC1               	movwf	(fat_modify_file@position+2)& (0+255),b
 12763  00E0EA  0EFF               	movlw	255
 12764  00E0EC  15A4               	andwf	(fat_modify_file@start_byte+3)& (0+255),w,b
 12765  00E0EE  6FC2               	movwf	(fat_modify_file@position+3)& (0+255),b
 12766                           
 12767                           ; BSR set to: 0
 12768                           ;fat16.c: 1001: offset = (uint16_t) (start_byte-position);
 12769  00E0F0  C0BF  F0A9         	movff	fat_modify_file@position,??_fat_modify_file
 12770  00E0F4  C0C0  F0AA         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 12771  00E0F8  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 12772  00E0FA  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 12773  00E0FC  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 12774  00E0FE  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 12775  00E100  51A1               	movf	fat_modify_file@start_byte& (0+255),w,b
 12776  00E102  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 12777  00E104  6FBB               	movwf	fat_modify_file@offset& (0+255),b
 12778  00E106  51A2               	movf	(fat_modify_file@start_byte+1)& (0+255),w,b
 12779  00E108  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 12780  00E10A  6FBC               	movwf	(fat_modify_file@offset+1)& (0+255),b
 12781                           
 12782                           ; BSR set to: 0
 12783                           ;fat16.c: 1004: position = 0;
 12784  00E10C  0E00               	movlw	0
 12785  00E10E  6FBF               	movwf	fat_modify_file@position& (0+255),b
 12786  00E110  0E00               	movlw	0
 12787  00E112  6FC0               	movwf	(fat_modify_file@position+1)& (0+255),b
 12788  00E114  0E00               	movlw	0
 12789  00E116  6FC1               	movwf	(fat_modify_file@position+2)& (0+255),b
 12790  00E118  0E00               	movlw	0
 12791  00E11A  6FC2               	movwf	(fat_modify_file@position+3)& (0+255),b
 12792                           
 12793                           ;fat16.c: 1005: while(position < length)
 12794  00E11C  D089               	goto	l1933
 12795  00E11E                     
 12796                           ; BSR set to: 0
 12797                           ;fat16.c: 1006: {;fat16.c: 1008: if(offset==512)
 12798                           
 12799                           ; BSR set to: 0
 12800  00E11E  0E02               	movlw	2
 12801  00E120  19BC               	xorwf	(fat_modify_file@offset+1)& (0+255),w,b
 12802  00E122  11BB               	iorwf	fat_modify_file@offset& (0+255),w,b
 12803  00E124  A4D8               	btfss	status,2,c
 12804  00E126  D00F               	goto	l1935
 12805                           
 12806                           ; BSR set to: 0
 12807                           ;fat16.c: 1009: {;fat16.c: 1011: cluster = _read_fat(cluster);
 12808  00E128  C0B9  F08F         	movff	fat_modify_file@cluster,__read_fat@cluster
 12809  00E12C  C0BA  F090         	movff	fat_modify_file@cluster+1,__read_fat@cluster+1
 12810  00E130  EC1A  F0A7         	call	__read_fat	;wreg free
 12811  00E134  C08F  F0B9         	movff	?__read_fat,fat_modify_file@cluster
 12812  00E138  C090  F0BA         	movff	?__read_fat+1,fat_modify_file@cluster+1
 12813                           
 12814                           ;fat16.c: 1013: offset = 0;
 12815  00E13C  0E00               	movlw	0
 12816  00E13E  0100               	movlb	0	; () banked
 12817  00E140  6FBC               	movwf	(fat_modify_file@offset+1)& (0+255),b
 12818  00E142  0E00               	movlw	0
 12819  00E144  6FBB               	movwf	fat_modify_file@offset& (0+255),b
 12820  00E146                     l1935:
 12821                           
 12822                           ; BSR set to: 0
 12823                           ;fat16.c: 1014: };fat16.c: 1017: sector = _data_sector_from_cluster(cluster);
 12824                           
 12825                           ; BSR set to: 0
 12826  00E146  C0B9  F060         	movff	fat_modify_file@cluster,__data_sector_from_cluster@fat_cluster
 12827  00E14A  C0BA  F061         	movff	fat_modify_file@cluster+1,__data_sector_from_cluster@fat_cluster+1
 12828  00E14E  ECE3  F0AF         	call	__data_sector_from_cluster	;wreg free
 12829  00E152  C060  F0B5         	movff	?__data_sector_from_cluster,fat_modify_file@sector
 12830  00E156  C061  F0B6         	movff	?__data_sector_from_cluster+1,fat_modify_file@sector+1
 12831                           
 12832                           ;fat16.c: 1020: number_of_bytes = 512 - offset;
 12833  00E15A  C0BB  F0A9         	movff	fat_modify_file@offset,??_fat_modify_file
 12834  00E15E  C0BC  F0AA         	movff	fat_modify_file@offset+1,??_fat_modify_file+1
 12835  00E162  0100               	movlb	0	; () banked
 12836  00E164  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 12837  00E166  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 12838  00E168  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 12839  00E16A  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 12840  00E16C  0E00               	movlw	0
 12841  00E16E  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 12842  00E170  6FBD               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 12843  00E172  0E02               	movlw	2
 12844  00E174  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 12845  00E176  6FBE               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 12846                           
 12847                           ; BSR set to: 0
 12848                           ;fat16.c: 1021: if(number_of_bytes > (length-position))
 12849  00E178  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 12850  00E17A  6FA9               	movwf	??_fat_modify_file& (0+255),b
 12851  00E17C  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 12852  00E17E  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 12853  00E180  6BAB               	clrf	(??_fat_modify_file+2)& (0+255),b
 12854  00E182  6BAC               	clrf	(??_fat_modify_file+3)& (0+255),b
 12855  00E184  C0BF  F0AD         	movff	fat_modify_file@position,??_fat_modify_file+4
 12856  00E188  C0C0  F0AE         	movff	fat_modify_file@position+1,??_fat_modify_file+5
 12857  00E18C  C0C1  F0AF         	movff	fat_modify_file@position+2,??_fat_modify_file+6
 12858  00E190  C0C2  F0B0         	movff	fat_modify_file@position+3,??_fat_modify_file+7
 12859  00E194  1FAD               	comf	(??_fat_modify_file+4)& (0+255),f,b
 12860  00E196  1FAE               	comf	(??_fat_modify_file+5)& (0+255),f,b
 12861  00E198  1FAF               	comf	(??_fat_modify_file+6)& (0+255),f,b
 12862  00E19A  1FB0               	comf	(??_fat_modify_file+7)& (0+255),f,b
 12863  00E19C  2BAD               	incf	(??_fat_modify_file+4)& (0+255),f,b
 12864  00E19E  0E00               	movlw	0
 12865  00E1A0  23AE               	addwfc	(??_fat_modify_file+5)& (0+255),f,b
 12866  00E1A2  23AF               	addwfc	(??_fat_modify_file+6)& (0+255),f,b
 12867  00E1A4  23B0               	addwfc	(??_fat_modify_file+7)& (0+255),f,b
 12868  00E1A6  51A5               	movf	fat_modify_file@length& (0+255),w,b
 12869  00E1A8  25AD               	addwf	(??_fat_modify_file+4)& (0+255),w,b
 12870  00E1AA  6FB1               	movwf	(??_fat_modify_file+8)& (0+255),b
 12871  00E1AC  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 12872  00E1AE  21AE               	addwfc	(??_fat_modify_file+5)& (0+255),w,b
 12873  00E1B0  6FB2               	movwf	(??_fat_modify_file+9)& (0+255),b
 12874  00E1B2  0E00               	movlw	0
 12875  00E1B4  21AF               	addwfc	(??_fat_modify_file+6)& (0+255),w,b
 12876  00E1B6  6FB3               	movwf	(??_fat_modify_file+10)& (0+255),b
 12877  00E1B8  0E00               	movlw	0
 12878  00E1BA  21B0               	addwfc	(??_fat_modify_file+7)& (0+255),w,b
 12879  00E1BC  6FB4               	movwf	(??_fat_modify_file+11)& (0+255),b
 12880  00E1BE  51A9               	movf	??_fat_modify_file& (0+255),w,b
 12881  00E1C0  5DB1               	subwf	(??_fat_modify_file+8)& (0+255),w,b
 12882  00E1C2  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 12883  00E1C4  59B2               	subwfb	(??_fat_modify_file+9)& (0+255),w,b
 12884  00E1C6  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 12885  00E1C8  59B3               	subwfb	(??_fat_modify_file+10)& (0+255),w,b
 12886  00E1CA  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 12887  00E1CC  59B4               	subwfb	(??_fat_modify_file+11)& (0+255),w,b
 12888  00E1CE  B0D8               	btfsc	status,0,c
 12889  00E1D0  D00E               	goto	l1936
 12890                           
 12891                           ; BSR set to: 0
 12892                           ;fat16.c: 1022: {;fat16.c: 1023: number_of_bytes = length - position;
 12893  00E1D2  C0BF  F0A9         	movff	fat_modify_file@position,??_fat_modify_file
 12894  00E1D6  C0C0  F0AA         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 12895  00E1DA  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 12896  00E1DC  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 12897  00E1DE  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 12898  00E1E0  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 12899  00E1E2  51A5               	movf	fat_modify_file@length& (0+255),w,b
 12900  00E1E4  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 12901  00E1E6  6FBD               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 12902  00E1E8  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 12903  00E1EA  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 12904  00E1EC  6FBE               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 12905  00E1EE                     l1936:
 12906                           
 12907                           ; BSR set to: 0
 12908                           ;fat16.c: 1024: };fat16.c: 1027: flash_partial_write(sector, offset, number_of_bytes, &d
      +                          ata[position]);
 12909                           
 12910                           ; BSR set to: 0
 12911  00E1EE  C0B5  F07F         	movff	fat_modify_file@sector,flash_partial_write@page
 12912  00E1F2  C0B6  F080         	movff	fat_modify_file@sector+1,flash_partial_write@page+1
 12913  00E1F6  C0BB  F081         	movff	fat_modify_file@offset,flash_partial_write@start
 12914  00E1FA  C0BC  F082         	movff	fat_modify_file@offset+1,flash_partial_write@start+1
 12915  00E1FE  C0BD  F083         	movff	fat_modify_file@number_of_bytes,flash_partial_write@length
 12916  00E202  C0BE  F084         	movff	fat_modify_file@number_of_bytes+1,flash_partial_write@length+1
 12917  00E206  51BF               	movf	fat_modify_file@position& (0+255),w,b
 12918  00E208  25A7               	addwf	fat_modify_file@data& (0+255),w,b
 12919  00E20A  6F85               	movwf	flash_partial_write@data& (0+255),b
 12920  00E20C  51C0               	movf	(fat_modify_file@position+1)& (0+255),w,b
 12921  00E20E  21A8               	addwfc	(fat_modify_file@data+1)& (0+255),w,b
 12922  00E210  6F86               	movwf	(flash_partial_write@data+1)& (0+255),b
 12923  00E212  ECE1  F0A3         	call	_flash_partial_write	;wreg free
 12924                           
 12925                           ;fat16.c: 1030: position += number_of_bytes;
 12926  00E216  0100               	movlb	0	; () banked
 12927  00E218  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 12928  00E21A  27BF               	addwf	fat_modify_file@position& (0+255),f,b
 12929  00E21C  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 12930  00E21E  23C0               	addwfc	(fat_modify_file@position+1)& (0+255),f,b
 12931  00E220  0E00               	movlw	0
 12932  00E222  23C1               	addwfc	(fat_modify_file@position+2)& (0+255),f,b
 12933  00E224  0E00               	movlw	0
 12934  00E226  23C2               	addwfc	(fat_modify_file@position+3)& (0+255),f,b
 12935                           
 12936                           ; BSR set to: 0
 12937                           ;fat16.c: 1031: offset += number_of_bytes;
 12938  00E228  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 12939  00E22A  27BB               	addwf	fat_modify_file@offset& (0+255),f,b
 12940  00E22C  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 12941  00E22E  23BC               	addwfc	(fat_modify_file@offset+1)& (0+255),f,b
 12942  00E230                     l1933:
 12943                           
 12944                           ; BSR set to: 0
 12945                           
 12946                           ; BSR set to: 0
 12947  00E230  51A5               	movf	fat_modify_file@length& (0+255),w,b
 12948  00E232  6FA9               	movwf	??_fat_modify_file& (0+255),b
 12949  00E234  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 12950  00E236  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 12951  00E238  6BAB               	clrf	(??_fat_modify_file+2)& (0+255),b
 12952  00E23A  6BAC               	clrf	(??_fat_modify_file+3)& (0+255),b
 12953  00E23C  51A9               	movf	??_fat_modify_file& (0+255),w,b
 12954  00E23E  5DBF               	subwf	fat_modify_file@position& (0+255),w,b
 12955  00E240  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 12956  00E242  59C0               	subwfb	(fat_modify_file@position+1)& (0+255),w,b
 12957  00E244  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 12958  00E246  59C1               	subwfb	(fat_modify_file@position+2)& (0+255),w,b
 12959  00E248  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 12960  00E24A  59C2               	subwfb	(fat_modify_file@position+3)& (0+255),w,b
 12961  00E24C  B0D8               	btfsc	status,0,c
 12962  00E24E  0012               	return	
 12963  00E250  D766               	goto	l1934
 12964  00E252                     __end_of_fat_modify_file:
 12965                           	opt stack 0
 12966                           tblptru	equ	0xFF8
 12967                           tblptrh	equ	0xFF7
 12968                           tblptrl	equ	0xFF6
 12969                           tablat	equ	0xFF5
 12970                           prodh	equ	0xFF4
 12971                           prodl	equ	0xFF3
 12972                           postinc0	equ	0xFEE
 12973                           wreg	equ	0xFE8
 12974                           postdec1	equ	0xFE5
 12975                           plusw1	equ	0xFE3
 12976                           fsr1h	equ	0xFE2
 12977                           fsr1l	equ	0xFE1
 12978                           indf2	equ	0xFDF
 12979                           postinc2	equ	0xFDE
 12980                           plusw2	equ	0xFDB
 12981                           fsr2h	equ	0xFDA
 12982                           fsr2l	equ	0xFD9
 12983                           status	equ	0xFD8
 12984                           
 12985 ;; *************** function _fat_create_file *****************
 12986 ;; Defined at:
 12987 ;;		line 587 in file "fat16.c"
 12988 ;; Parameters:    Size  Location     Type
 12989 ;;  name            2   76[BANK0 ] PTR unsigned char 
 12990 ;;		 -> configFile_used_name(8), 
 12991 ;;  extension       2   78[BANK0 ] PTR unsigned char 
 12992 ;;		 -> configFile_used_extention(3), 
 12993 ;;  size            4   80[BANK0 ] unsigned long 
 12994 ;; Auto vars:     Size  Location     Type
 12995 ;;  root_entry     32   93[BANK0 ] struct .
 12996 ;;  first_cluste    2   90[BANK0 ] unsigned int 
 12997 ;;  number_of_cl    2   88[BANK0 ] unsigned int 
 12998 ;;  file_number     1   92[BANK0 ] unsigned char 
 12999 ;; Return value:  Size  Location     Type
 13000 ;;                  1    wreg      unsigned char 
 13001 ;; Registers used:
 13002 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13003 ;; Tracked objects:
 13004 ;;		On entry : 0/0
 13005 ;;		On exit  : 0/0
 13006 ;;		Unchanged: 0/0
 13007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13008 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13009 ;;      Locals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13010 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13011 ;;      Totals:         0      49       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13012 ;;Total ram usage:       49 bytes
 13013 ;; Hardware stack levels used:    1
 13014 ;; Hardware stack levels required when called:   17
 13015 ;; This function calls:
 13016 ;;		__get_available_root_entry
 13017 ;;		__get_date
 13018 ;;		__get_time
 13019 ;;		__make_cluster_chain
 13020 ;;		__write_root
 13021 ;;		_fat_find_file
 13022 ;;		_memcpy
 13023 ;; This function is called by:
 13024 ;;		_configFile_write
 13025 ;;		_fat_copy_file
 13026 ;; This function uses a non-reentrant model
 13027 ;;
 13028                           
 13029                           	psect	text40
 13030  0106CC                     __ptext40:
 13031                           	opt stack 0
 13032  0106CC                     _fat_create_file:
 13033                           	opt stack 11
 13034                           
 13035                           ;fat16.c: 589: rootEntry_t root_entry;;fat16.c: 590: uint8_t file_number;;fat16.c: 591: 
      +                          uint16_t number_of_clusters;;fat16.c: 592: uint16_t first_cluster;;fat16.c: 596: if(fat_
      +                          find_file(name, extension) != 0xFF)
 13036                           
 13037                           ; BSR set to: 0
 13038                           ;incstack = 0
 13039  0106CC  C0AC  F08B         	movff	fat_create_file@name,fat_find_file@name
 13040  0106D0  C0AD  F08C         	movff	fat_create_file@name+1,fat_find_file@name+1
 13041  0106D4  C0AE  F08D         	movff	fat_create_file@extension,fat_find_file@extension
 13042  0106D8  C0AF  F08E         	movff	fat_create_file@extension+1,fat_find_file@extension+1
 13043  0106DC  EC86  F08F         	call	_fat_find_file	;wreg free
 13044  0106E0  0AFF               	xorlw	255
 13045  0106E2  B4D8               	btfsc	status,2,c
 13046  0106E4  D002               	goto	l1871
 13047                           
 13048                           ;fat16.c: 597: {;fat16.c: 600: return 0xFF;
 13049  0106E6  0EFF               	movlw	255
 13050  0106E8  0012               	return	
 13051  0106EA                     l1871:
 13052                           
 13053                           ;fat16.c: 601: };fat16.c: 605: file_number = _get_available_root_entry();
 13054  0106EA  EC36  F0AE         	call	__get_available_root_entry	;wreg free
 13055  0106EE  0100               	movlb	0	; () banked
 13056  0106F0  6FBC               	movwf	fat_create_file@file_number& (0+255),b
 13057                           
 13058                           ; BSR set to: 0
 13059                           ;fat16.c: 606: if(file_number == 0xFF)
 13060  0106F2  29BC               	incf	fat_create_file@file_number& (0+255),w,b
 13061  0106F4  A4D8               	btfss	status,2,c
 13062  0106F6  D002               	goto	l1873
 13063                           
 13064                           ; BSR set to: 0
 13065                           ;fat16.c: 607: {;fat16.c: 610: return 0xFE;
 13066  0106F8  0EFE               	movlw	254
 13067                           
 13068                           ; BSR set to: 0
 13069  0106FA  0012               	return	
 13070  0106FC                     l1873:
 13071                           
 13072                           ; BSR set to: 0
 13073                           ;fat16.c: 611: };fat16.c: 614: number_of_clusters = (size + 512 - 1) >> 9;
 13074                           
 13075                           ; BSR set to: 0
 13076  0106FC  0EFF               	movlw	255
 13077  0106FE  25B0               	addwf	fat_create_file@size& (0+255),w,b
 13078  010700  6FB4               	movwf	??_fat_create_file& (0+255),b
 13079  010702  0E01               	movlw	1
 13080  010704  21B1               	addwfc	(fat_create_file@size+1)& (0+255),w,b
 13081  010706  6FB5               	movwf	(??_fat_create_file+1)& (0+255),b
 13082  010708  0E00               	movlw	0
 13083  01070A  21B2               	addwfc	(fat_create_file@size+2)& (0+255),w,b
 13084  01070C  6FB6               	movwf	(??_fat_create_file+2)& (0+255),b
 13085  01070E  0E00               	movlw	0
 13086  010710  21B3               	addwfc	(fat_create_file@size+3)& (0+255),w,b
 13087  010712  6FB7               	movwf	(??_fat_create_file+3)& (0+255),b
 13088  010714  0E0A               	movlw	10
 13089  010716  D005               	goto	u15440
 13090  010718                     u15445:
 13091  010718  90D8               	bcf	status,0,c
 13092  01071A  33B7               	rrcf	(??_fat_create_file+3)& (0+255),f,b
 13093  01071C  33B6               	rrcf	(??_fat_create_file+2)& (0+255),f,b
 13094  01071E  33B5               	rrcf	(??_fat_create_file+1)& (0+255),f,b
 13095  010720  33B4               	rrcf	??_fat_create_file& (0+255),f,b
 13096  010722                     u15440:
 13097  010722  2EE8               	decfsz	wreg,f,c
 13098  010724  D7F9               	goto	u15445
 13099  010726  C0B4  F0B8         	movff	??_fat_create_file,fat_create_file@number_of_clusters
 13100  01072A  C0B5  F0B9         	movff	??_fat_create_file+1,fat_create_file@number_of_clusters+1
 13101                           
 13102                           ; BSR set to: 0
 13103                           ;fat16.c: 617: first_cluster = _make_cluster_chain(0x0000, number_of_clusters);
 13104  01072E  0E00               	movlw	0
 13105  010730  6F96               	movwf	(__make_cluster_chain@first_cluster+1)& (0+255),b
 13106  010732  0E00               	movlw	0
 13107  010734  6F95               	movwf	__make_cluster_chain@first_cluster& (0+255),b
 13108  010736  C0B8  F097         	movff	fat_create_file@number_of_clusters,__make_cluster_chain@number_of_clusters
 13109  01073A  C0B9  F098         	movff	fat_create_file@number_of_clusters+1,__make_cluster_chain@number_of_clusters+1
 13110  01073E  EC98  F069         	call	__make_cluster_chain	;wreg free
 13111  010742  C095  F0BA         	movff	?__make_cluster_chain,fat_create_file@first_cluster
 13112  010746  C096  F0BB         	movff	?__make_cluster_chain+1,fat_create_file@first_cluster+1
 13113                           
 13114                           ;fat16.c: 620: if(first_cluster == 0xFFFF)
 13115  01074A  0100               	movlb	0	; () banked
 13116  01074C  29BA               	incf	fat_create_file@first_cluster& (0+255),w,b
 13117  01074E  E105               	bnz	l16300
 13118  010750  29BB               	incf	(fat_create_file@first_cluster+1)& (0+255),w,b
 13119  010752  A4D8               	btfss	status,2,c
 13120  010754  D002               	goto	l1874
 13121                           
 13122                           ; BSR set to: 0
 13123                           ;fat16.c: 621: {;fat16.c: 624: return 0xFD;
 13124  010756  0EFD               	movlw	253
 13125                           
 13126                           ; BSR set to: 0
 13127  010758  0012               	return	
 13128  01075A                     l1874:
 13129  01075A                     l16300:
 13130                           
 13131                           ; BSR set to: 0
 13132                           ;fat16.c: 625: };fat16.c: 628: memcpy(root_entry.fileName, name, 8);
 13133  01075A  0EBD               	movlw	low fat_create_file@root_entry
 13134  01075C  6F60               	movwf	memcpy@d1& (0+255),b
 13135  01075E  0E00               	movlw	high fat_create_file@root_entry
 13136  010760  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13137  010762  C0AC  F062         	movff	fat_create_file@name,memcpy@s1
 13138  010766  C0AD  F063         	movff	fat_create_file@name+1,memcpy@s1+1
 13139  01076A  0E00               	movlw	0
 13140  01076C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13141  01076E  0E08               	movlw	8
 13142  010770  6F64               	movwf	memcpy@n& (0+255),b
 13143  010772  ECAC  F0A5         	call	_memcpy	;wreg free
 13144                           
 13145                           ;fat16.c: 629: memcpy(root_entry.fileExtension, extension, 3);
 13146  010776  0EC5               	movlw	low (fat_create_file@root_entry+8)
 13147  010778  0100               	movlb	0	; () banked
 13148  01077A  6F60               	movwf	memcpy@d1& (0+255),b
 13149  01077C  0E00               	movlw	high (fat_create_file@root_entry+8)
 13150  01077E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13151  010780  C0AE  F062         	movff	fat_create_file@extension,memcpy@s1
 13152  010784  C0AF  F063         	movff	fat_create_file@extension+1,memcpy@s1+1
 13153  010788  0E00               	movlw	0
 13154  01078A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13155  01078C  0E03               	movlw	3
 13156  01078E  6F64               	movwf	memcpy@n& (0+255),b
 13157  010790  ECAC  F0A5         	call	_memcpy	;wreg free
 13158                           
 13159                           ;fat16.c: 630: root_entry.attributes = 0x00;
 13160  010794  0E00               	movlw	0
 13161  010796  0100               	movlb	0	; () banked
 13162  010798  6FC8               	movwf	(fat_create_file@root_entry+11)& (0+255),b
 13163                           
 13164                           ; BSR set to: 0
 13165                           ;fat16.c: 631: root_entry.reserved1 = 0x00;
 13166  01079A  0E00               	movlw	0
 13167  01079C  6FC9               	movwf	(fat_create_file@root_entry+12)& (0+255),b
 13168                           
 13169                           ; BSR set to: 0
 13170                           ;fat16.c: 632: root_entry.secondFractions = 0x00;
 13171  01079E  0E00               	movlw	0
 13172  0107A0  6FCA               	movwf	(fat_create_file@root_entry+13)& (0+255),b
 13173                           
 13174                           ; BSR set to: 0
 13175                           ;fat16.c: 633: root_entry.createdTime = _get_time();
 13176  0107A2  ECFA  F0AF         	call	__get_time	;wreg free
 13177  0107A6  C060  F0CB         	movff	?__get_time,fat_create_file@root_entry+14
 13178  0107AA  C061  F0CC         	movff	?__get_time+1,fat_create_file@root_entry+15
 13179                           
 13180                           ;fat16.c: 634: root_entry.createdDate = _get_date();
 13181  0107AE  EC00  F0B0         	call	__get_date	;wreg free
 13182  0107B2  C060  F0CD         	movff	?__get_date,fat_create_file@root_entry+16
 13183  0107B6  C061  F0CE         	movff	?__get_date+1,fat_create_file@root_entry+17
 13184                           
 13185                           ;fat16.c: 635: root_entry.lastAccessDate = root_entry.createdDate;
 13186  0107BA  C0CD  F0CF         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+18
 13187  0107BE  C0CE  F0D0         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+19
 13188                           
 13189                           ;fat16.c: 636: root_entry.reserved2 = 0x00;
 13190  0107C2  0E00               	movlw	0
 13191  0107C4  0100               	movlb	0	; () banked
 13192  0107C6  6FD2               	movwf	(fat_create_file@root_entry+21)& (0+255),b
 13193  0107C8  0E00               	movlw	0
 13194  0107CA  6FD1               	movwf	(fat_create_file@root_entry+20)& (0+255),b
 13195                           
 13196                           ; BSR set to: 0
 13197                           ;fat16.c: 637: root_entry.modifiedTime = root_entry.createdTime;
 13198  0107CC  C0CB  F0D3         	movff	fat_create_file@root_entry+14,fat_create_file@root_entry+22
 13199  0107D0  C0CC  F0D4         	movff	fat_create_file@root_entry+15,fat_create_file@root_entry+23
 13200                           
 13201                           ; BSR set to: 0
 13202                           ;fat16.c: 638: root_entry.modifiedDate = root_entry.createdDate;
 13203  0107D4  C0CD  F0D5         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+24
 13204  0107D8  C0CE  F0D6         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+25
 13205                           
 13206                           ; BSR set to: 0
 13207                           ;fat16.c: 639: root_entry.firstCluster = first_cluster;
 13208  0107DC  C0BA  F0D7         	movff	fat_create_file@first_cluster,fat_create_file@root_entry+26
 13209  0107E0  C0BB  F0D8         	movff	fat_create_file@first_cluster+1,fat_create_file@root_entry+27
 13210                           
 13211                           ; BSR set to: 0
 13212                           ;fat16.c: 640: root_entry.fileSize = size;
 13213  0107E4  C0B0  F0D9         	movff	fat_create_file@size,fat_create_file@root_entry+28
 13214  0107E8  C0B1  F0DA         	movff	fat_create_file@size+1,fat_create_file@root_entry+29
 13215  0107EC  C0B2  F0DB         	movff	fat_create_file@size+2,fat_create_file@root_entry+30
 13216  0107F0  C0B3  F0DC         	movff	fat_create_file@size+3,fat_create_file@root_entry+31
 13217                           
 13218                           ; BSR set to: 0
 13219                           ;fat16.c: 643: _write_root(file_number, &root_entry);
 13220  0107F4  0EBD               	movlw	low fat_create_file@root_entry
 13221  0107F6  6F88               	movwf	__write_root@data& (0+255),b
 13222  0107F8  0E00               	movlw	high fat_create_file@root_entry
 13223  0107FA  6F89               	movwf	(__write_root@data+1)& (0+255),b
 13224  0107FC  51BC               	movf	fat_create_file@file_number& (0+255),w,b
 13225  0107FE  EC34  F0AA         	call	__write_root
 13226                           
 13227                           ;fat16.c: 645: return file_number;
 13228  010802  0100               	movlb	0	; () banked
 13229  010804  51BC               	movf	fat_create_file@file_number& (0+255),w,b
 13230  010806  0012               	return	
 13231  010808                     __end_of_fat_create_file:
 13232                           	opt stack 0
 13233                           tblptru	equ	0xFF8
 13234                           tblptrh	equ	0xFF7
 13235                           tblptrl	equ	0xFF6
 13236                           tablat	equ	0xFF5
 13237                           prodh	equ	0xFF4
 13238                           prodl	equ	0xFF3
 13239                           postinc0	equ	0xFEE
 13240                           wreg	equ	0xFE8
 13241                           postdec1	equ	0xFE5
 13242                           plusw1	equ	0xFE3
 13243                           fsr1h	equ	0xFE2
 13244                           fsr1l	equ	0xFE1
 13245                           indf2	equ	0xFDF
 13246                           postinc2	equ	0xFDE
 13247                           plusw2	equ	0xFDB
 13248                           fsr2h	equ	0xFDA
 13249                           fsr2l	equ	0xFD9
 13250                           status	equ	0xFD8
 13251                           
 13252 ;; *************** function __write_root *****************
 13253 ;; Defined at:
 13254 ;;		line 474 in file "fat16.c"
 13255 ;; Parameters:    Size  Location     Type
 13256 ;;  file_number     1    wreg     unsigned char 
 13257 ;;  data            2   40[BANK0 ] PTR struct .
 13258 ;;		 -> fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 13259 ;; Auto vars:     Size  Location     Type
 13260 ;;  file_number     1   46[BANK0 ] unsigned char 
 13261 ;;  offset          2   44[BANK0 ] unsigned int 
 13262 ;;  sector          2   42[BANK0 ] unsigned int 
 13263 ;; Return value:  Size  Location     Type
 13264 ;;                  1    wreg      void 
 13265 ;; Registers used:
 13266 ;;		wreg, status,2, status,0, cstack
 13267 ;; Tracked objects:
 13268 ;;		On entry : 0/0
 13269 ;;		On exit  : 0/0
 13270 ;;		Unchanged: 0/0
 13271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13272 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13273 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13275 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13276 ;;Total ram usage:        7 bytes
 13277 ;; Hardware stack levels used:    1
 13278 ;; Hardware stack levels required when called:   15
 13279 ;; This function calls:
 13280 ;;		__offset_from_file_number
 13281 ;;		__sector_from_file_number
 13282 ;;		_flash_partial_write
 13283 ;; This function is called by:
 13284 ;;		_fat_create_file
 13285 ;;		_fat_resize_file
 13286 ;;		_fat_rename_file
 13287 ;; This function uses a non-reentrant model
 13288 ;;
 13289                           
 13290                           	psect	text41
 13291  015468                     __ptext41:
 13292                           	opt stack 0
 13293  015468                     __write_root:
 13294                           	opt stack 12
 13295                           
 13296                           ;incstack = 0
 13297                           ;__write_root@file_number stored from wreg
 13298  015468  0100               	movlb	0	; () banked
 13299  01546A  6F8E               	movwf	__write_root@file_number& (0+255),b
 13300                           
 13301                           ;fat16.c: 476: uint16_t sector;;fat16.c: 477: uint16_t offset;;fat16.c: 480: sector = _s
      +                          ector_from_file_number(file_number);
 13302  01546C  0100               	movlb	0	; () banked
 13303  01546E  518E               	movf	__write_root@file_number& (0+255),w,b
 13304  015470  EC39  F0AD         	call	__sector_from_file_number
 13305  015474  C060  F08A         	movff	?__sector_from_file_number,__write_root@sector
 13306  015478  C061  F08B         	movff	?__sector_from_file_number+1,__write_root@sector+1
 13307                           
 13308                           ;fat16.c: 481: offset = _offset_from_file_number(file_number);
 13309  01547C  0100               	movlb	0	; () banked
 13310  01547E  518E               	movf	__write_root@file_number& (0+255),w,b
 13311  015480  EC4B  F0AE         	call	__offset_from_file_number
 13312  015484  C060  F08C         	movff	?__offset_from_file_number,__write_root@offset
 13313  015488  C061  F08D         	movff	?__offset_from_file_number+1,__write_root@offset+1
 13314                           
 13315                           ;fat16.c: 484: flash_partial_write(sector, offset, 32, data);
 13316  01548C  C08A  F07F         	movff	__write_root@sector,flash_partial_write@page
 13317  015490  C08B  F080         	movff	__write_root@sector+1,flash_partial_write@page+1
 13318  015494  C08C  F081         	movff	__write_root@offset,flash_partial_write@start
 13319  015498  C08D  F082         	movff	__write_root@offset+1,flash_partial_write@start+1
 13320  01549C  0E00               	movlw	0
 13321  01549E  0100               	movlb	0	; () banked
 13322  0154A0  6F84               	movwf	(flash_partial_write@length+1)& (0+255),b
 13323  0154A2  0E20               	movlw	32
 13324  0154A4  6F83               	movwf	flash_partial_write@length& (0+255),b
 13325  0154A6  C088  F085         	movff	__write_root@data,flash_partial_write@data
 13326  0154AA  C089  F086         	movff	__write_root@data+1,flash_partial_write@data+1
 13327  0154AE  ECE1  F0A3         	call	_flash_partial_write	;wreg free
 13328  0154B2  0012               	return		;funcret
 13329  0154B4                     __end_of__write_root:
 13330                           	opt stack 0
 13331                           tblptru	equ	0xFF8
 13332                           tblptrh	equ	0xFF7
 13333                           tblptrl	equ	0xFF6
 13334                           tablat	equ	0xFF5
 13335                           prodh	equ	0xFF4
 13336                           prodl	equ	0xFF3
 13337                           postinc0	equ	0xFEE
 13338                           wreg	equ	0xFE8
 13339                           postdec1	equ	0xFE5
 13340                           plusw1	equ	0xFE3
 13341                           fsr1h	equ	0xFE2
 13342                           fsr1l	equ	0xFE1
 13343                           indf2	equ	0xFDF
 13344                           postinc2	equ	0xFDE
 13345                           plusw2	equ	0xFDB
 13346                           fsr2h	equ	0xFDA
 13347                           fsr2l	equ	0xFD9
 13348                           status	equ	0xFD8
 13349                           
 13350 ;; *************** function _flash_partial_write *****************
 13351 ;; Defined at:
 13352 ;;		line 460 in file "flash.c"
 13353 ;; Parameters:    Size  Location     Type
 13354 ;;  page            2   31[BANK0 ] unsigned int 
 13355 ;;  start           2   33[BANK0 ] unsigned int 
 13356 ;;  length          2   35[BANK0 ] unsigned int 
 13357 ;;  data            2   37[BANK0 ] PTR unsigned char 
 13358 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 13359 ;;		 -> _delete_root@deleted_value(1), 
 13360 ;; Auto vars:     Size  Location     Type
 13361 ;;  match           1   39[BANK0 ] enum E7062
 13362 ;; Return value:  Size  Location     Type
 13363 ;;                  1    wreg      void 
 13364 ;; Registers used:
 13365 ;;		wreg, status,2, status,0, cstack
 13366 ;; Tracked objects:
 13367 ;;		On entry : 0/0
 13368 ;;		On exit  : 0/0
 13369 ;;		Unchanged: 0/0
 13370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13371 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13372 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13374 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13375 ;;Total ram usage:        9 bytes
 13376 ;; Hardware stack levels used:    1
 13377 ;; Hardware stack levels required when called:   14
 13378 ;; This function calls:
 13379 ;;		__flash_compare_page_to_buffer
 13380 ;;		__flash_copy_page_to_buffer
 13381 ;;		__flash_is_busy
 13382 ;;		__flash_write_page_from_buffer
 13383 ;;		__flash_write_to_buffer
 13384 ;; This function is called by:
 13385 ;;		__write_root
 13386 ;;		_fat_modify_file
 13387 ;;		__delete_root
 13388 ;; This function uses a non-reentrant model
 13389 ;;
 13390                           
 13391                           	psect	text42
 13392  0147C2                     __ptext42:
 13393                           	opt stack 0
 13394  0147C2                     _flash_partial_write:
 13395                           	opt stack 12
 13396                           
 13397                           ;flash.c: 462: flashMatchResult_t match;;flash.c: 465: while(_flash_is_busy());
 13398                           
 13399                           ;incstack = 0
 13400  0147C2  ECFA  F0AE         	call	__flash_is_busy	;wreg free
 13401  0147C6  0900               	iorlw	0
 13402  0147C8  A4D8               	btfss	status,2,c
 13403  0147CA  D7FB               	goto	_flash_partial_write
 13404                           
 13405                           ;flash.c: 468: _flash_copy_page_to_buffer(page, FLASH_BUFFER_1);
 13406  0147CC  C07F  F073         	movff	flash_partial_write@page,__flash_copy_page_to_buffer@page
 13407  0147D0  C080  F074         	movff	flash_partial_write@page+1,__flash_copy_page_to_buffer@page+1
 13408  0147D4  0E00               	movlw	0
 13409  0147D6  0100               	movlb	0	; () banked
 13410  0147D8  6F75               	movwf	__flash_copy_page_to_buffer@buffer& (0+255),b
 13411  0147DA  EC39  F0A6         	call	__flash_copy_page_to_buffer	;wreg free
 13412                           
 13413                           ;flash.c: 471: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_1);
 13414  0147DE  C081  F073         	movff	flash_partial_write@start,__flash_write_to_buffer@start
 13415  0147E2  C082  F074         	movff	flash_partial_write@start+1,__flash_write_to_buffer@start+1
 13416  0147E6  C085  F075         	movff	flash_partial_write@data,__flash_write_to_buffer@data
 13417  0147EA  C086  F076         	movff	flash_partial_write@data+1,__flash_write_to_buffer@data+1
 13418  0147EE  C083  F077         	movff	flash_partial_write@length,__flash_write_to_buffer@data_length
 13419  0147F2  C084  F078         	movff	flash_partial_write@length+1,__flash_write_to_buffer@data_length+1
 13420  0147F6  0E00               	movlw	0
 13421  0147F8  0100               	movlb	0	; () banked
 13422  0147FA  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 13423  0147FC  ECF4  F0A8         	call	__flash_write_to_buffer	;wreg free
 13424                           
 13425                           ;flash.c: 474: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 13426  014800  C07F  F073         	movff	flash_partial_write@page,__flash_compare_page_to_buffer@page
 13427  014804  C080  F074         	movff	flash_partial_write@page+1,__flash_compare_page_to_buffer@page+1
 13428  014808  0E00               	movlw	0
 13429  01480A  0100               	movlb	0	; () banked
 13430  01480C  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 13431  01480E  EC96  F0A1         	call	__flash_compare_page_to_buffer	;wreg free
 13432  014812  0100               	movlb	0	; () banked
 13433  014814  6F87               	movwf	flash_partial_write@match& (0+255),b
 13434                           
 13435                           ; BSR set to: 0
 13436                           ;flash.c: 477: if(match==DATA_DOES_NOT_MATCH)
 13437  014816  0587               	decf	flash_partial_write@match& (0+255),w,b
 13438  014818  A4D8               	btfss	status,2,c
 13439  01481A  0012               	return	
 13440                           
 13441                           ; BSR set to: 0
 13442                           ;flash.c: 478: {;flash.c: 479: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 13443  01481C  C07F  F073         	movff	flash_partial_write@page,__flash_write_page_from_buffer@page
 13444  014820  C080  F074         	movff	flash_partial_write@page+1,__flash_write_page_from_buffer@page+1
 13445  014824  0E00               	movlw	0
 13446  014826  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 13447  014828  ECC0  F0A6         	call	__flash_write_page_from_buffer	;wreg free
 13448  01482C  0012               	return	
 13449  01482E                     __end_of_flash_partial_write:
 13450                           	opt stack 0
 13451                           tblptru	equ	0xFF8
 13452                           tblptrh	equ	0xFF7
 13453                           tblptrl	equ	0xFF6
 13454                           tablat	equ	0xFF5
 13455                           prodh	equ	0xFF4
 13456                           prodl	equ	0xFF3
 13457                           postinc0	equ	0xFEE
 13458                           wreg	equ	0xFE8
 13459                           postdec1	equ	0xFE5
 13460                           plusw1	equ	0xFE3
 13461                           fsr1h	equ	0xFE2
 13462                           fsr1l	equ	0xFE1
 13463                           indf2	equ	0xFDF
 13464                           postinc2	equ	0xFDE
 13465                           plusw2	equ	0xFDB
 13466                           fsr2h	equ	0xFDA
 13467                           fsr2l	equ	0xFD9
 13468                           status	equ	0xFD8
 13469                           
 13470 ;; *************** function __flash_copy_page_to_buffer *****************
 13471 ;; Defined at:
 13472 ;;		line 154 in file "flash.c"
 13473 ;; Parameters:    Size  Location     Type
 13474 ;;  page            2   19[BANK0 ] unsigned int 
 13475 ;;  buffer          1   21[BANK0 ] enum E7058
 13476 ;; Auto vars:     Size  Location     Type
 13477 ;;  command         4   25[BANK0 ] unsigned char [4]
 13478 ;; Return value:  Size  Location     Type
 13479 ;;                  1    wreg      void 
 13480 ;; Registers used:
 13481 ;;		wreg, status,2, status,0, cstack
 13482 ;; Tracked objects:
 13483 ;;		On entry : 0/0
 13484 ;;		On exit  : 0/0
 13485 ;;		Unchanged: 0/0
 13486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13487 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13488 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13489 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13490 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13491 ;;Total ram usage:       10 bytes
 13492 ;; Hardware stack levels used:    1
 13493 ;; Hardware stack levels required when called:   13
 13494 ;; This function calls:
 13495 ;;		__flash_is_busy
 13496 ;;		_spi_tx
 13497 ;; This function is called by:
 13498 ;;		_flash_partial_write
 13499 ;;		_flash_copy_page_to_buffer
 13500 ;; This function uses a non-reentrant model
 13501 ;;
 13502                           
 13503                           	psect	text43
 13504  014C72                     __ptext43:
 13505                           	opt stack 0
 13506  014C72                     __flash_copy_page_to_buffer:
 13507                           	opt stack 12
 13508                           
 13509                           ;flash.c: 156: uint8_t command[4];;flash.c: 159: while(_flash_is_busy());
 13510                           
 13511                           ;incstack = 0
 13512  014C72  ECFA  F0AE         	call	__flash_is_busy	;wreg free
 13513  014C76  0900               	iorlw	0
 13514  014C78  A4D8               	btfss	status,2,c
 13515  014C7A  D7FB               	goto	__flash_copy_page_to_buffer
 13516                           
 13517                           ;flash.c: 162: if(buffer==FLASH_BUFFER_1)
 13518  014C7C  0100               	movlb	0	; () banked
 13519  014C7E  5175               	movf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 13520  014C80  A4D8               	btfss	status,2,c
 13521  014C82  D002               	goto	l1562
 13522                           
 13523                           ; BSR set to: 0
 13524                           ;flash.c: 163: command[0] = 0x53;
 13525  014C84  0E53               	movlw	83
 13526  014C86  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 13527  014C88                     l1562:
 13528                           
 13529                           ; BSR set to: 0
 13530                           ;flash.c: 164: if(buffer==FLASH_BUFFER_2)
 13531                           
 13532                           ; BSR set to: 0
 13533  014C88  0575               	decf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 13534  014C8A  A4D8               	btfss	status,2,c
 13535  014C8C  D002               	goto	l1563
 13536                           
 13537                           ; BSR set to: 0
 13538                           ;flash.c: 165: command[0] = 0x55;
 13539  014C8E  0E55               	movlw	85
 13540  014C90  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 13541  014C92                     l1563:
 13542                           
 13543                           ; BSR set to: 0
 13544                           ;flash.c: 167: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 13545                           
 13546                           ; BSR set to: 0
 13547  014C92  C073  F076         	movff	__flash_copy_page_to_buffer@page,??__flash_copy_page_to_buffer
 13548  014C96  C074  F077         	movff	__flash_copy_page_to_buffer@page+1,??__flash_copy_page_to_buffer+1
 13549  014C9A  0E07               	movlw	7
 13550  014C9C  6F78               	movwf	(??__flash_copy_page_to_buffer+2)& (0+255),b
 13551  014C9E                     u11615:
 13552  014C9E  90D8               	bcf	status,0,c
 13553  014CA0  3377               	rrcf	(??__flash_copy_page_to_buffer+1)& (0+255),f,b
 13554  014CA2  3376               	rrcf	??__flash_copy_page_to_buffer& (0+255),f,b
 13555  014CA4  2F78               	decfsz	(??__flash_copy_page_to_buffer+2)& (0+255),f,b
 13556  014CA6  D7FB               	goto	u11615
 13557  014CA8  5176               	movf	??__flash_copy_page_to_buffer& (0+255),w,b
 13558  014CAA  6F7A               	movwf	(__flash_copy_page_to_buffer@command+1)& (0+255),b
 13559                           
 13560                           ; BSR set to: 0
 13561                           ;flash.c: 168: command[2] = ((unsigned char)((page<<1)&0xFF));
 13562  014CAC  5173               	movf	__flash_copy_page_to_buffer@page& (0+255),w,b
 13563  014CAE  2573               	addwf	__flash_copy_page_to_buffer@page& (0+255),w,b
 13564  014CB0  6F7B               	movwf	(__flash_copy_page_to_buffer@command+2)& (0+255),b
 13565                           
 13566                           ;flash.c: 169: command[3] = 0x00;
 13567  014CB2  0E00               	movlw	0
 13568  014CB4  6F7C               	movwf	(__flash_copy_page_to_buffer@command+3)& (0+255),b
 13569                           
 13570                           ; BSR set to: 0
 13571                           ;flash.c: 172: spi_tx(command, 4);
 13572  014CB6  0E79               	movlw	low __flash_copy_page_to_buffer@command
 13573  014CB8  6F60               	movwf	spi_tx@data& (0+255),b
 13574  014CBA  0E00               	movlw	high __flash_copy_page_to_buffer@command
 13575  014CBC  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 13576  014CBE  0E00               	movlw	0
 13577  014CC0  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 13578  014CC2  0E04               	movlw	4
 13579  014CC4  6F62               	movwf	spi_tx@length& (0+255),b
 13580  014CC6  ECED  F0A6         	call	_spi_tx	;wreg free
 13581  014CCA  0012               	return		;funcret
 13582  014CCC                     __end_of__flash_copy_page_to_buffer:
 13583                           	opt stack 0
 13584                           tblptru	equ	0xFF8
 13585                           tblptrh	equ	0xFF7
 13586                           tblptrl	equ	0xFF6
 13587                           tablat	equ	0xFF5
 13588                           prodh	equ	0xFF4
 13589                           prodl	equ	0xFF3
 13590                           postinc0	equ	0xFEE
 13591                           wreg	equ	0xFE8
 13592                           postdec1	equ	0xFE5
 13593                           plusw1	equ	0xFE3
 13594                           fsr1h	equ	0xFE2
 13595                           fsr1l	equ	0xFE1
 13596                           indf2	equ	0xFDF
 13597                           postinc2	equ	0xFDE
 13598                           plusw2	equ	0xFDB
 13599                           fsr2h	equ	0xFDA
 13600                           fsr2l	equ	0xFD9
 13601                           status	equ	0xFD8
 13602                           
 13603 ;; *************** function __make_cluster_chain *****************
 13604 ;; Defined at:
 13605 ;;		line 214 in file "fat16.c"
 13606 ;; Parameters:    Size  Location     Type
 13607 ;;  first_cluste    2   53[BANK0 ] unsigned int 
 13608 ;;  number_of_cl    2   55[BANK0 ] unsigned int 
 13609 ;; Auto vars:     Size  Location     Type
 13610 ;;  next_cluster    2   74[BANK0 ] unsigned int 
 13611 ;;  offset          2   72[BANK0 ] unsigned int 
 13612 ;;  sector_in_bu    2   70[BANK0 ] unsigned int 
 13613 ;;  sector          2   68[BANK0 ] unsigned int 
 13614 ;;  remaining_cl    2   66[BANK0 ] unsigned int 
 13615 ;;  different_se    2   63[BANK0 ] unsigned int 
 13616 ;;  minimum_sect    2   61[BANK0 ] unsigned int 
 13617 ;;  next_offset     2   59[BANK0 ] unsigned int 
 13618 ;;  data_changed    1   65[BANK0 ] unsigned char 
 13619 ;; Return value:  Size  Location     Type
 13620 ;;                  2   53[BANK0 ] unsigned int 
 13621 ;; Registers used:
 13622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13623 ;; Tracked objects:
 13624 ;;		On entry : 0/0
 13625 ;;		On exit  : 0/0
 13626 ;;		Unchanged: 0/0
 13627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13628 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13629 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13630 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13631 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13632 ;;Total ram usage:       23 bytes
 13633 ;; Hardware stack levels used:    1
 13634 ;; Hardware stack levels required when called:   16
 13635 ;; This function calls:
 13636 ;;		__fat_offset_from_cluster
 13637 ;;		__fat_sector_from_cluster
 13638 ;;		__get_available_cluster
 13639 ;;		__get_available_offset_from_buffer
 13640 ;;		__read_value_from_offset
 13641 ;;		__write_value_to_offset
 13642 ;;		_flash_sector_read
 13643 ;;		_flash_sector_write
 13644 ;; This function is called by:
 13645 ;;		_fat_create_file
 13646 ;;		_fat_resize_file
 13647 ;;		_fat_delete_file
 13648 ;; This function uses a non-reentrant model
 13649 ;;
 13650                           
 13651                           	psect	text44
 13652  00D330                     __ptext44:
 13653                           	opt stack 0
 13654  00D330                     __make_cluster_chain:
 13655                           	opt stack 11
 13656                           
 13657                           ;fat16.c: 216: uint16_t remaining_clusters;;fat16.c: 217: uint16_t minimum_sector;;fat16
      +                          .c: 218: uint16_t sector;;fat16.c: 219: uint16_t offset;;fat16.c: 220: uint16_t next_off
      +                          set;;fat16.c: 221: uint16_t sector_in_buffer;;fat16.c: 222: uint16_t next_cluster;;fat16
      +                          .c: 223: uint16_t different_sector_cluster;;fat16.c: 224: uint8_t data_changed;;fat16.c:
      +                           227: sector_in_buffer = 0;
 13658                           
 13659                           ;incstack = 0
 13660  00D330  0E00               	movlw	0
 13661  00D332  0100               	movlb	0	; () banked
 13662  00D334  6FA7               	movwf	(__make_cluster_chain@sector_in_buffer+1)& (0+255),b
 13663  00D336  0E00               	movlw	0
 13664  00D338  6FA6               	movwf	__make_cluster_chain@sector_in_buffer& (0+255),b
 13665                           
 13666                           ; BSR set to: 0
 13667                           ;fat16.c: 228: remaining_clusters = number_of_clusters;
 13668  00D33A  C097  F0A2         	movff	__make_cluster_chain@number_of_clusters,__make_cluster_chain@remaining_clusters
 13669  00D33E  C098  F0A3         	movff	__make_cluster_chain@number_of_clusters+1,__make_cluster_chain@remaining_clusters
      +                          +1
 13670                           
 13671                           ;fat16.c: 229: minimum_sector = 2;
 13672  00D342  0E00               	movlw	0
 13673  00D344  6F9E               	movwf	(__make_cluster_chain@minimum_sector+1)& (0+255),b
 13674  00D346  0E02               	movlw	2
 13675  00D348  6F9D               	movwf	__make_cluster_chain@minimum_sector& (0+255),b
 13676                           
 13677                           ;fat16.c: 230: data_changed = 0;
 13678  00D34A  0E00               	movlw	0
 13679  00D34C  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 13680                           
 13681                           ; BSR set to: 0
 13682                           ;fat16.c: 233: if((first_cluster==0) && (number_of_clusters>0))
 13683  00D34E  5195               	movf	__make_cluster_chain@first_cluster& (0+255),w,b
 13684  00D350  1196               	iorwf	(__make_cluster_chain@first_cluster+1)& (0+255),w,b
 13685  00D352  A4D8               	btfss	status,2,c
 13686  00D354  D024               	goto	l1796
 13687                           
 13688                           ; BSR set to: 0
 13689  00D356  5197               	movf	__make_cluster_chain@number_of_clusters& (0+255),w,b
 13690  00D358  1198               	iorwf	(__make_cluster_chain@number_of_clusters+1)& (0+255),w,b
 13691  00D35A  B4D8               	btfsc	status,2,c
 13692  00D35C  D020               	goto	l1796
 13693                           
 13694                           ; BSR set to: 0
 13695                           ;fat16.c: 234: {;fat16.c: 235: first_cluster = _get_available_cluster(minimum_sector, 0)
      +                          ;
 13696  00D35E  C09D  F08B         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 13697  00D362  C09E  F08C         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 13698  00D366  0E00               	movlw	0
 13699  00D368  6F8E               	movwf	(__get_available_cluster@skip_sector+1)& (0+255),b
 13700  00D36A  0E00               	movlw	0
 13701  00D36C  6F8D               	movwf	__get_available_cluster@skip_sector& (0+255),b
 13702  00D36E  EC9B  F095         	call	__get_available_cluster	;wreg free
 13703  00D372  C08B  F095         	movff	?__get_available_cluster,__make_cluster_chain@first_cluster
 13704  00D376  C08C  F096         	movff	?__get_available_cluster+1,__make_cluster_chain@first_cluster+1
 13705                           
 13706                           ;fat16.c: 237: minimum_sector = _fat_sector_from_cluster(first_cluster);
 13707  00D37A  C095  F060         	movff	__make_cluster_chain@first_cluster,__fat_sector_from_cluster@cluster
 13708  00D37E  C096  F061         	movff	__make_cluster_chain@first_cluster+1,__fat_sector_from_cluster@cluster+1
 13709  00D382  EC7D  F0AF         	call	__fat_sector_from_cluster	;wreg free
 13710  00D386  C060  F09D         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 13711  00D38A  C061  F09E         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 13712                           
 13713                           ;fat16.c: 238: if(first_cluster == 0)
 13714  00D38E  0100               	movlb	0	; () banked
 13715  00D390  5195               	movf	__make_cluster_chain@first_cluster& (0+255),w,b
 13716  00D392  1196               	iorwf	(__make_cluster_chain@first_cluster+1)& (0+255),w,b
 13717  00D394  A4D8               	btfss	status,2,c
 13718  00D396  D003               	goto	l1796
 13719                           
 13720                           ; BSR set to: 0
 13721                           ;fat16.c: 239: {;fat16.c: 240: return 0xFFFF;
 13722  00D398  6995               	setf	?__make_cluster_chain& (0+255),b
 13723  00D39A  6996               	setf	(?__make_cluster_chain+1)& (0+255),b
 13724  00D39C  0012               	return	
 13725  00D39E                     l1796:
 13726                           
 13727                           ; BSR set to: 0
 13728                           ;fat16.c: 241: };fat16.c: 242: };fat16.c: 243: next_cluster = first_cluster;
 13729                           
 13730                           ; BSR set to: 0
 13731  00D39E  C095  F0AA         	movff	__make_cluster_chain@first_cluster,__make_cluster_chain@next_cluster
 13732  00D3A2  C096  F0AB         	movff	__make_cluster_chain@first_cluster+1,__make_cluster_chain@next_cluster+1
 13733                           
 13734                           ;fat16.c: 246: while ((remaining_clusters > 0) || ((next_cluster>=2) && (next_cluster<=8
      +                          153)))
 13735  00D3A6  D103               	goto	l1813
 13736  00D3A8                     
 13737                           ; BSR set to: 0
 13738                           ;fat16.c: 247: {;fat16.c: 260: sector = _fat_sector_from_cluster(next_cluster);
 13739                           
 13740                           ; BSR set to: 0
 13741  00D3A8  C0AA  F060         	movff	__make_cluster_chain@next_cluster,__fat_sector_from_cluster@cluster
 13742  00D3AC  C0AB  F061         	movff	__make_cluster_chain@next_cluster+1,__fat_sector_from_cluster@cluster+1
 13743  00D3B0  EC7D  F0AF         	call	__fat_sector_from_cluster	;wreg free
 13744  00D3B4  C060  F0A4         	movff	?__fat_sector_from_cluster,__make_cluster_chain@sector
 13745  00D3B8  C061  F0A5         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@sector+1
 13746                           
 13747                           ;fat16.c: 261: offset = _fat_offset_from_cluster(next_cluster);
 13748  00D3BC  C0AA  F060         	movff	__make_cluster_chain@next_cluster,__fat_offset_from_cluster@cluster
 13749  00D3C0  C0AB  F061         	movff	__make_cluster_chain@next_cluster+1,__fat_offset_from_cluster@cluster+1
 13750  00D3C4  EC8A  F0AF         	call	__fat_offset_from_cluster	;wreg free
 13751  00D3C8  C060  F0A8         	movff	?__fat_offset_from_cluster,__make_cluster_chain@offset
 13752  00D3CC  C061  F0A9         	movff	?__fat_offset_from_cluster+1,__make_cluster_chain@offset+1
 13753                           
 13754                           ;fat16.c: 264: if(sector != sector_in_buffer)
 13755  00D3D0  0100               	movlb	0	; () banked
 13756  00D3D2  51A6               	movf	__make_cluster_chain@sector_in_buffer& (0+255),w,b
 13757  00D3D4  19A4               	xorwf	__make_cluster_chain@sector& (0+255),w,b
 13758  00D3D6  E104               	bnz	u13960
 13759  00D3D8  51A7               	movf	(__make_cluster_chain@sector_in_buffer+1)& (0+255),w,b
 13760  00D3DA  19A5               	xorwf	(__make_cluster_chain@sector+1)& (0+255),w,b
 13761  00D3DC  B4D8               	btfsc	status,2,c
 13762  00D3DE  D037               	goto	l1800
 13763  00D3E0                     u13960:
 13764                           
 13765                           ; BSR set to: 0
 13766                           ;fat16.c: 265: {;fat16.c: 267: if(data_changed)
 13767  00D3E0  51A1               	movf	__make_cluster_chain@data_changed& (0+255),w,b
 13768  00D3E2  B4D8               	btfsc	status,2,c
 13769  00D3E4  D00A               	goto	l1801
 13770                           
 13771                           ; BSR set to: 0
 13772                           ;fat16.c: 268: {;fat16.c: 269: flash_sector_write(sector_in_buffer, buffer);
 13773  00D3E6  C0A6  F07F         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 13774  00D3EA  C0A7  F080         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 13775  00D3EE  0E00               	movlw	low _buffer
 13776  00D3F0  6F81               	movwf	flash_sector_write@data& (0+255),b
 13777  00D3F2  0E0A               	movlw	high _buffer
 13778  00D3F4  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 13779  00D3F6  ECBD  F0A9         	call	_flash_sector_write	;wreg free
 13780  00D3FA                     l1801:
 13781                           
 13782                           ;fat16.c: 270: };fat16.c: 273: different_sector_cluster = _get_available_cluster(minimum
      +                          _sector, sector);
 13783  00D3FA  C09D  F08B         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 13784  00D3FE  C09E  F08C         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 13785  00D402  C0A4  F08D         	movff	__make_cluster_chain@sector,__get_available_cluster@skip_sector
 13786  00D406  C0A5  F08E         	movff	__make_cluster_chain@sector+1,__get_available_cluster@skip_sector+1
 13787  00D40A  EC9B  F095         	call	__get_available_cluster	;wreg free
 13788  00D40E  C08B  F09F         	movff	?__get_available_cluster,__make_cluster_chain@different_sector_cluster
 13789  00D412  C08C  F0A0         	movff	?__get_available_cluster+1,__make_cluster_chain@different_sector_cluster+1
 13790                           
 13791                           ;fat16.c: 276: minimum_sector = _fat_sector_from_cluster(different_sector_cluster);
 13792  00D416  C09F  F060         	movff	__make_cluster_chain@different_sector_cluster,__fat_sector_from_cluster@cluster
 13793  00D41A  C0A0  F061         	movff	__make_cluster_chain@different_sector_cluster+1,__fat_sector_from_cluster@cluster
      +                          +1
 13794  00D41E  EC7D  F0AF         	call	__fat_sector_from_cluster	;wreg free
 13795  00D422  C060  F09D         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 13796  00D426  C061  F09E         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 13797                           
 13798                           ;fat16.c: 279: flash_sector_read(sector, buffer);
 13799  00D42A  C0A4  F087         	movff	__make_cluster_chain@sector,flash_sector_read@page
 13800  00D42E  C0A5  F088         	movff	__make_cluster_chain@sector+1,flash_sector_read@page+1
 13801  00D432  0E00               	movlw	low _buffer
 13802  00D434  0100               	movlb	0	; () banked
 13803  00D436  6F89               	movwf	flash_sector_read@data& (0+255),b
 13804  00D438  0E0A               	movlw	high _buffer
 13805  00D43A  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 13806  00D43C  EC9C  F0AE         	call	_flash_sector_read	;wreg free
 13807                           
 13808                           ;fat16.c: 280: sector_in_buffer = sector;
 13809  00D440  C0A4  F0A6         	movff	__make_cluster_chain@sector,__make_cluster_chain@sector_in_buffer
 13810  00D444  C0A5  F0A7         	movff	__make_cluster_chain@sector+1,__make_cluster_chain@sector_in_buffer+1
 13811                           
 13812                           ;fat16.c: 281: data_changed = 0;
 13813  00D448  0E00               	movlw	0
 13814  00D44A  0100               	movlb	0	; () banked
 13815  00D44C  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 13816  00D44E                     l1800:
 13817                           
 13818                           ; BSR set to: 0
 13819                           ;fat16.c: 282: };fat16.c: 285: if(remaining_clusters > 1)
 13820                           
 13821                           ; BSR set to: 0
 13822  00D44E  51A3               	movf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 13823  00D450  E104               	bnz	u13980
 13824  00D452  0E02               	movlw	2
 13825  00D454  5DA2               	subwf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 13826  00D456  A0D8               	btfss	status,0,c
 13827  00D458  D05E               	goto	l1802
 13828  00D45A                     u13980:
 13829                           
 13830                           ; BSR set to: 0
 13831                           ;fat16.c: 286: {;fat16.c: 288: next_cluster = _read_value_from_offset(offset, buffer);
 13832  00D45A  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 13833  00D45E  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 13834  00D462  0E00               	movlw	low _buffer
 13835  00D464  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 13836  00D466  0E0A               	movlw	high _buffer
 13837  00D468  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 13838  00D46A  ECA4  F0AA         	call	__read_value_from_offset	;wreg free
 13839  00D46E  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 13840  00D472  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 13841                           
 13842                           ;fat16.c: 291: if((next_cluster < 2) || (next_cluster > 8153))
 13843  00D476  0100               	movlb	0	; () banked
 13844  00D478  51AB               	movf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13845  00D47A  E104               	bnz	u13990
 13846  00D47C  0E02               	movlw	2
 13847  00D47E  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 13848  00D480  A0D8               	btfss	status,0,c
 13849  00D482  D006               	goto	u14000
 13850  00D484                     u13990:
 13851                           
 13852                           ; BSR set to: 0
 13853  00D484  0EDA               	movlw	218
 13854  00D486  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 13855  00D488  0E1F               	movlw	31
 13856  00D48A  59AB               	subwfb	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13857  00D48C  A0D8               	btfss	status,0,c
 13858  00D48E  D06B               	goto	l1812
 13859  00D490                     u14000:
 13860                           
 13861                           ; BSR set to: 0
 13862                           ;fat16.c: 292: {;fat16.c: 294: next_offset = _get_available_offset_from_buffer(offset+2,
      +                           buffer);
 13863                           
 13864                           ; BSR set to: 0
 13865  00D490  0E02               	movlw	2
 13866  00D492  25A8               	addwf	__make_cluster_chain@offset& (0+255),w,b
 13867  00D494  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 13868  00D496  0E00               	movlw	0
 13869  00D498  21A9               	addwfc	(__make_cluster_chain@offset+1)& (0+255),w,b
 13870  00D49A  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 13871  00D49C  0E00               	movlw	low _buffer
 13872  00D49E  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 13873  00D4A0  0E0A               	movlw	high _buffer
 13874  00D4A2  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 13875  00D4A4  ECDC  F0A5         	call	__get_available_offset_from_buffer	;wreg free
 13876  00D4A8  C060  F09B         	movff	?__get_available_offset_from_buffer,__make_cluster_chain@next_offset
 13877  00D4AC  C061  F09C         	movff	?__get_available_offset_from_buffer+1,__make_cluster_chain@next_offset+1
 13878                           
 13879                           ;fat16.c: 296: if(next_offset != 0xFFFF)
 13880  00D4B0  0100               	movlb	0	; () banked
 13881  00D4B2  299B               	incf	__make_cluster_chain@next_offset& (0+255),w,b
 13882  00D4B4  E103               	bnz	u14010
 13883  00D4B6  299C               	incf	(__make_cluster_chain@next_offset+1)& (0+255),w,b
 13884  00D4B8  B4D8               	btfsc	status,2,c
 13885  00D4BA  D013               	goto	l1806
 13886  00D4BC                     u14010:
 13887                           
 13888                           ; BSR set to: 0
 13889                           ;fat16.c: 297: {;fat16.c: 299: next_cluster = sector_in_buffer - 2;
 13890  00D4BC  0EFE               	movlw	254
 13891  00D4BE  25A6               	addwf	__make_cluster_chain@sector_in_buffer& (0+255),w,b
 13892  00D4C0  6FAA               	movwf	__make_cluster_chain@next_cluster& (0+255),b
 13893  00D4C2  0EFF               	movlw	255
 13894  00D4C4  21A7               	addwfc	(__make_cluster_chain@sector_in_buffer+1)& (0+255),w,b
 13895  00D4C6  6FAB               	movwf	(__make_cluster_chain@next_cluster+1)& (0+255),b
 13896                           
 13897                           ; BSR set to: 0
 13898                           ;fat16.c: 300: next_cluster <<= 8;
 13899  00D4C8  51AA               	movf	__make_cluster_chain@next_cluster& (0+255),w,b
 13900  00D4CA  6FAB               	movwf	(__make_cluster_chain@next_cluster+1)& (0+255),b
 13901  00D4CC  6BAA               	clrf	__make_cluster_chain@next_cluster& (0+255),b
 13902                           
 13903                           ; BSR set to: 0
 13904                           ;fat16.c: 301: next_cluster |= (next_offset>>1);
 13905  00D4CE  90D8               	bcf	status,0,c
 13906  00D4D0  319C               	rrcf	(__make_cluster_chain@next_offset+1)& (0+255),w,b
 13907  00D4D2  6F9A               	movwf	(??__make_cluster_chain+1)& (0+255),b
 13908  00D4D4  319B               	rrcf	__make_cluster_chain@next_offset& (0+255),w,b
 13909  00D4D6  6F99               	movwf	??__make_cluster_chain& (0+255),b
 13910  00D4D8  5199               	movf	??__make_cluster_chain& (0+255),w,b
 13911  00D4DA  13AA               	iorwf	__make_cluster_chain@next_cluster& (0+255),f,b
 13912  00D4DC  519A               	movf	(??__make_cluster_chain+1)& (0+255),w,b
 13913  00D4DE  13AB               	iorwf	(__make_cluster_chain@next_cluster+1)& (0+255),f,b
 13914                           
 13915                           ;fat16.c: 302: }
 13916  00D4E0  D00B               	goto	l1809
 13917  00D4E2                     l1806:
 13918                           
 13919                           ; BSR set to: 0
 13920                           ;fat16.c: 303: else;fat16.c: 304: {;fat16.c: 305: if(different_sector_cluster == 0x0000)
 13921                           
 13922                           ; BSR set to: 0
 13923  00D4E2  519F               	movf	__make_cluster_chain@different_sector_cluster& (0+255),w,b
 13924  00D4E4  11A0               	iorwf	(__make_cluster_chain@different_sector_cluster+1)& (0+255),w,b
 13925  00D4E6  A4D8               	btfss	status,2,c
 13926  00D4E8  D003               	goto	l1808
 13927                           
 13928                           ; BSR set to: 0
 13929                           ;fat16.c: 306: {;fat16.c: 308: return 0xFFFF;
 13930  00D4EA  6995               	setf	?__make_cluster_chain& (0+255),b
 13931  00D4EC  6996               	setf	(?__make_cluster_chain+1)& (0+255),b
 13932  00D4EE  0012               	return	
 13933  00D4F0                     l1808:
 13934                           
 13935                           ; BSR set to: 0
 13936                           ;fat16.c: 310: else;fat16.c: 311: {;fat16.c: 313: next_cluster = different_sector_cluste
      +                          r;
 13937  00D4F0  C09F  F0AA         	movff	__make_cluster_chain@different_sector_cluster,__make_cluster_chain@next_cluster
 13938  00D4F4  C0A0  F0AB         	movff	__make_cluster_chain@different_sector_cluster+1,__make_cluster_chain@next_cluster
      +                          +1
 13939  00D4F8                     l1809:
 13940                           
 13941                           ; BSR set to: 0
 13942                           ;fat16.c: 314: };fat16.c: 315: };fat16.c: 317: _write_value_to_offset(offset, buffer, ne
      +                          xt_cluster);
 13943                           
 13944                           ; BSR set to: 0
 13945                           
 13946                           ; BSR set to: 0
 13947  00D4F8  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 13948  00D4FC  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 13949  00D500  0E00               	movlw	low _buffer
 13950  00D502  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 13951  00D504  0E0A               	movlw	high _buffer
 13952  00D506  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 13953  00D508  C0AA  F064         	movff	__make_cluster_chain@next_cluster,__write_value_to_offset@value
 13954  00D50C  C0AB  F065         	movff	__make_cluster_chain@next_cluster+1,__write_value_to_offset@value+1
 13955  00D510  EC9D  F0AC         	call	__write_value_to_offset	;wreg free
 13956  00D514  D025               	goto	L86
 13957  00D516                     l1802:
 13958                           
 13959                           ; BSR set to: 0
 13960                           ;fat16.c: 327: else if(remaining_clusters == 1)
 13961                           
 13962                           ; BSR set to: 0
 13963  00D516  05A2               	decf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 13964  00D518  11A3               	iorwf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 13965  00D51A  A4D8               	btfss	status,2,c
 13966  00D51C  D028               	goto	l1811
 13967                           
 13968                           ; BSR set to: 0
 13969                           ;fat16.c: 328: {;fat16.c: 330: next_cluster = _read_value_from_offset(offset, buffer);
 13970  00D51E  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 13971  00D522  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 13972  00D526  0E00               	movlw	low _buffer
 13973  00D528  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 13974  00D52A  0E0A               	movlw	high _buffer
 13975  00D52C  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 13976  00D52E  ECA4  F0AA         	call	__read_value_from_offset	;wreg free
 13977  00D532  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 13978  00D536  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 13979                           
 13980                           ;fat16.c: 332: if(next_cluster != 0xFFFF)
 13981  00D53A  0100               	movlb	0	; () banked
 13982  00D53C  29AA               	incf	__make_cluster_chain@next_cluster& (0+255),w,b
 13983  00D53E  E103               	bnz	u14040
 13984  00D540  29AB               	incf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13985  00D542  B4D8               	btfsc	status,2,c
 13986  00D544  D010               	goto	l1812
 13987  00D546                     u14040:
 13988                           
 13989                           ; BSR set to: 0
 13990                           ;fat16.c: 333: {;fat16.c: 335: _write_value_to_offset(offset, buffer, 0xFFFF);
 13991  00D546  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 13992  00D54A  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 13993  00D54E  0E00               	movlw	low _buffer
 13994  00D550  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 13995  00D552  0E0A               	movlw	high _buffer
 13996  00D554  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 13997  00D556  0EFF               	movlw	255
 13998  00D558  6F65               	movwf	(__write_value_to_offset@value+1)& (0+255),b
 13999  00D55A  6964               	setf	__write_value_to_offset@value& (0+255),b
 14000  00D55C  EC9D  F0AC         	call	__write_value_to_offset	;wreg free
 14001  00D560                     L86:
 14002                           
 14003                           ;fat16.c: 337: data_changed = 1;
 14004  00D560  0E01               	movlw	1
 14005  00D562  0100               	movlb	0	; () banked
 14006  00D564  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 14007  00D566                     l1812:
 14008                           
 14009                           ; BSR set to: 0
 14010                           ;fat16.c: 338: };fat16.c: 341: --remaining_clusters;
 14011                           
 14012                           ; BSR set to: 0
 14013  00D566  07A2               	decf	__make_cluster_chain@remaining_clusters& (0+255),f,b
 14014  00D568  A0D8               	btfss	status,0,c
 14015  00D56A  07A3               	decf	(__make_cluster_chain@remaining_clusters+1)& (0+255),f,b
 14016                           
 14017                           ;fat16.c: 342: }
 14018  00D56C  D020               	goto	l1813
 14019  00D56E                     l1811:
 14020                           
 14021                           ; BSR set to: 0
 14022                           ;fat16.c: 345: else;fat16.c: 346: {;fat16.c: 348: next_cluster = _read_value_from_offset
      +                          (offset, buffer);
 14023                           
 14024                           ; BSR set to: 0
 14025  00D56E  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 14026  00D572  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 14027  00D576  0E00               	movlw	low _buffer
 14028  00D578  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 14029  00D57A  0E0A               	movlw	high _buffer
 14030  00D57C  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 14031  00D57E  ECA4  F0AA         	call	__read_value_from_offset	;wreg free
 14032  00D582  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 14033  00D586  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 14034                           
 14035                           ;fat16.c: 351: _write_value_to_offset(offset, buffer, 0x0000);
 14036  00D58A  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 14037  00D58E  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 14038  00D592  0E00               	movlw	low _buffer
 14039  00D594  0100               	movlb	0	; () banked
 14040  00D596  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 14041  00D598  0E0A               	movlw	high _buffer
 14042  00D59A  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 14043  00D59C  0E00               	movlw	0
 14044  00D59E  6F65               	movwf	(__write_value_to_offset@value+1)& (0+255),b
 14045  00D5A0  0E00               	movlw	0
 14046  00D5A2  6F64               	movwf	__write_value_to_offset@value& (0+255),b
 14047  00D5A4  EC9D  F0AC         	call	__write_value_to_offset	;wreg free
 14048                           
 14049                           ;fat16.c: 353: data_changed = 1;
 14050  00D5A8  0E01               	movlw	1
 14051  00D5AA  0100               	movlb	0	; () banked
 14052  00D5AC  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 14053  00D5AE                     l1813:
 14054                           
 14055                           ; BSR set to: 0
 14056                           
 14057                           ; BSR set to: 0
 14058                           
 14059                           ; BSR set to: 0
 14060                           
 14061                           ; BSR set to: 0
 14062  00D5AE  51A2               	movf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 14063  00D5B0  11A3               	iorwf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 14064  00D5B2  A4D8               	btfss	status,2,c
 14065  00D5B4  D6F9               	goto	l1799
 14066                           
 14067                           ; BSR set to: 0
 14068  00D5B6  51AB               	movf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 14069  00D5B8  E104               	bnz	u14060
 14070  00D5BA  0E02               	movlw	2
 14071  00D5BC  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 14072  00D5BE  A0D8               	btfss	status,0,c
 14073  00D5C0  D006               	goto	u14070
 14074  00D5C2                     u14060:
 14075                           
 14076                           ; BSR set to: 0
 14077  00D5C2  0EDA               	movlw	218
 14078  00D5C4  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 14079  00D5C6  0E1F               	movlw	31
 14080  00D5C8  59AB               	subwfb	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 14081  00D5CA  A0D8               	btfss	status,0,c
 14082  00D5CC  D6ED               	goto	l1799
 14083  00D5CE                     u14070:
 14084                           
 14085                           ; BSR set to: 0
 14086                           ;fat16.c: 354: };fat16.c: 356: };fat16.c: 359: if(data_changed)
 14087                           
 14088                           ; BSR set to: 0
 14089                           
 14090                           ; BSR set to: 0
 14091  00D5CE  51A1               	movf	__make_cluster_chain@data_changed& (0+255),w,b
 14092  00D5D0  B4D8               	btfsc	status,2,c
 14093  00D5D2  D00A               	goto	l1817
 14094                           
 14095                           ; BSR set to: 0
 14096                           ;fat16.c: 360: {;fat16.c: 361: flash_sector_write(sector_in_buffer, buffer);
 14097  00D5D4  C0A6  F07F         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 14098  00D5D8  C0A7  F080         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 14099  00D5DC  0E00               	movlw	low _buffer
 14100  00D5DE  6F81               	movwf	flash_sector_write@data& (0+255),b
 14101  00D5E0  0E0A               	movlw	high _buffer
 14102  00D5E2  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 14103  00D5E4  ECBD  F0A9         	call	_flash_sector_write	;wreg free
 14104  00D5E8                     l1817:
 14105                           
 14106                           ;fat16.c: 362: };fat16.c: 365: if(number_of_clusters>0)
 14107  00D5E8  0100               	movlb	0	; () banked
 14108  00D5EA  5197               	movf	__make_cluster_chain@number_of_clusters& (0+255),w,b
 14109  00D5EC  1198               	iorwf	(__make_cluster_chain@number_of_clusters+1)& (0+255),w,b
 14110  00D5EE  B4D8               	btfsc	status,2,c
 14111  00D5F0  D005               	goto	l1818
 14112                           
 14113                           ; BSR set to: 0
 14114                           ;fat16.c: 366: {;fat16.c: 367: return first_cluster;
 14115  00D5F2  C095  F095         	movff	__make_cluster_chain@first_cluster,?__make_cluster_chain
 14116  00D5F6  C096  F096         	movff	__make_cluster_chain@first_cluster+1,?__make_cluster_chain+1
 14117                           
 14118                           ; BSR set to: 0
 14119                           ;fat16.c: 368: }
 14120  00D5FA  0012               	return	
 14121  00D5FC                     l1818:
 14122                           
 14123                           ; BSR set to: 0
 14124                           ;fat16.c: 369: else;fat16.c: 370: {;fat16.c: 371: return 0x0000;
 14125                           
 14126                           ; BSR set to: 0
 14127  00D5FC  0E00               	movlw	0
 14128  00D5FE  6F96               	movwf	(?__make_cluster_chain+1)& (0+255),b
 14129  00D600  0E00               	movlw	0
 14130  00D602  6F95               	movwf	?__make_cluster_chain& (0+255),b
 14131                           
 14132                           ; BSR set to: 0
 14133  00D604  0012               	return	
 14134  00D606                     __end_of__make_cluster_chain:
 14135                           	opt stack 0
 14136                           tblptru	equ	0xFF8
 14137                           tblptrh	equ	0xFF7
 14138                           tblptrl	equ	0xFF6
 14139                           tablat	equ	0xFF5
 14140                           prodh	equ	0xFF4
 14141                           prodl	equ	0xFF3
 14142                           postinc0	equ	0xFEE
 14143                           wreg	equ	0xFE8
 14144                           postdec1	equ	0xFE5
 14145                           plusw1	equ	0xFE3
 14146                           fsr1h	equ	0xFE2
 14147                           fsr1l	equ	0xFE1
 14148                           indf2	equ	0xFDF
 14149                           postinc2	equ	0xFDE
 14150                           plusw2	equ	0xFDB
 14151                           fsr2h	equ	0xFDA
 14152                           fsr2l	equ	0xFD9
 14153                           status	equ	0xFD8
 14154                           
 14155 ;; *************** function __write_value_to_offset *****************
 14156 ;; Defined at:
 14157 ;;		line 124 in file "fat16.c"
 14158 ;; Parameters:    Size  Location     Type
 14159 ;;  offset          2    0[BANK0 ] unsigned int 
 14160 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 14161 ;;		 -> buffer(512), 
 14162 ;;  value           2    4[BANK0 ] unsigned int 
 14163 ;; Auto vars:     Size  Location     Type
 14164 ;;		None
 14165 ;; Return value:  Size  Location     Type
 14166 ;;                  1    wreg      void 
 14167 ;; Registers used:
 14168 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14169 ;; Tracked objects:
 14170 ;;		On entry : 0/0
 14171 ;;		On exit  : 0/0
 14172 ;;		Unchanged: 0/0
 14173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14174 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14176 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14177 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14178 ;;Total ram usage:        8 bytes
 14179 ;; Hardware stack levels used:    1
 14180 ;; Hardware stack levels required when called:   10
 14181 ;; This function calls:
 14182 ;;		Nothing
 14183 ;; This function is called by:
 14184 ;;		__make_cluster_chain
 14185 ;; This function uses a non-reentrant model
 14186 ;;
 14187                           
 14188                           	psect	text45
 14189  01593A                     __ptext45:
 14190                           	opt stack 0
 14191  01593A                     __write_value_to_offset:
 14192                           	opt stack 16
 14193                           
 14194                           ;fat16.c: 126: buffer[offset] = (uint8_t) (value & 0xFF);
 14195                           
 14196                           ; BSR set to: 0
 14197                           ;incstack = 0
 14198  01593A  0100               	movlb	0	; () banked
 14199  01593C  5160               	movf	__write_value_to_offset@offset& (0+255),w,b
 14200  01593E  2562               	addwf	__write_value_to_offset@buffer& (0+255),w,b
 14201  015940  6ED9               	movwf	fsr2l,c
 14202  015942  5161               	movf	(__write_value_to_offset@offset+1)& (0+255),w,b
 14203  015944  2163               	addwfc	(__write_value_to_offset@buffer+1)& (0+255),w,b
 14204  015946  6EDA               	movwf	fsr2h,c
 14205  015948  C064  FFDF         	movff	__write_value_to_offset@value,indf2
 14206                           
 14207                           ; BSR set to: 0
 14208                           ;fat16.c: 127: value >>= 8;
 14209  01594C  5165               	movf	(__write_value_to_offset@value+1)& (0+255),w,b
 14210  01594E  6F64               	movwf	__write_value_to_offset@value& (0+255),b
 14211  015950  6B65               	clrf	(__write_value_to_offset@value+1)& (0+255),b
 14212                           
 14213                           ; BSR set to: 0
 14214                           ;fat16.c: 128: buffer[offset+1] = (uint8_t) (value & 0xFF);
 14215  015952  0E01               	movlw	1
 14216  015954  2560               	addwf	__write_value_to_offset@offset& (0+255),w,b
 14217  015956  6F66               	movwf	??__write_value_to_offset& (0+255),b
 14218  015958  0E00               	movlw	0
 14219  01595A  2161               	addwfc	(__write_value_to_offset@offset+1)& (0+255),w,b
 14220  01595C  6F67               	movwf	(??__write_value_to_offset+1)& (0+255),b
 14221  01595E  5166               	movf	??__write_value_to_offset& (0+255),w,b
 14222  015960  2562               	addwf	__write_value_to_offset@buffer& (0+255),w,b
 14223  015962  6ED9               	movwf	fsr2l,c
 14224  015964  5167               	movf	(??__write_value_to_offset+1)& (0+255),w,b
 14225  015966  2163               	addwfc	(__write_value_to_offset@buffer+1)& (0+255),w,b
 14226  015968  6EDA               	movwf	fsr2h,c
 14227  01596A  C064  FFDF         	movff	__write_value_to_offset@value,indf2
 14228                           
 14229                           ; BSR set to: 0
 14230  01596E  0012               	return		;funcret
 14231  015970                     __end_of__write_value_to_offset:
 14232                           	opt stack 0
 14233                           tblptru	equ	0xFF8
 14234                           tblptrh	equ	0xFF7
 14235                           tblptrl	equ	0xFF6
 14236                           tablat	equ	0xFF5
 14237                           prodh	equ	0xFF4
 14238                           prodl	equ	0xFF3
 14239                           postinc0	equ	0xFEE
 14240                           wreg	equ	0xFE8
 14241                           postdec1	equ	0xFE5
 14242                           plusw1	equ	0xFE3
 14243                           fsr1h	equ	0xFE2
 14244                           fsr1l	equ	0xFE1
 14245                           indf2	equ	0xFDF
 14246                           postinc2	equ	0xFDE
 14247                           plusw2	equ	0xFDB
 14248                           fsr2h	equ	0xFDA
 14249                           fsr2l	equ	0xFD9
 14250                           status	equ	0xFD8
 14251                           
 14252 ;; *************** function __get_available_cluster *****************
 14253 ;; Defined at:
 14254 ;;		line 131 in file "fat16.c"
 14255 ;; Parameters:    Size  Location     Type
 14256 ;;  first_sector    2   43[BANK0 ] unsigned int 
 14257 ;;  skip_sector     2   45[BANK0 ] unsigned int 
 14258 ;; Auto vars:     Size  Location     Type
 14259 ;;  sector          2   51[BANK0 ] unsigned int 
 14260 ;;  offset          2   49[BANK0 ] unsigned int 
 14261 ;;  cluster         2   47[BANK0 ] unsigned int 
 14262 ;; Return value:  Size  Location     Type
 14263 ;;                  2   43[BANK0 ] unsigned int 
 14264 ;; Registers used:
 14265 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14266 ;; Tracked objects:
 14267 ;;		On entry : 0/0
 14268 ;;		On exit  : 0/0
 14269 ;;		Unchanged: 0/0
 14270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14271 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14272 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14274 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14275 ;;Total ram usage:       10 bytes
 14276 ;; Hardware stack levels used:    1
 14277 ;; Hardware stack levels required when called:   15
 14278 ;; This function calls:
 14279 ;;		__cluster_from_sector_and_offset
 14280 ;;		__get_available_offset_from_buffer
 14281 ;;		_flash_sector_read
 14282 ;; This function is called by:
 14283 ;;		__make_cluster_chain
 14284 ;; This function uses a non-reentrant model
 14285 ;;
 14286                           
 14287                           	psect	text46
 14288  012B36                     __ptext46:
 14289                           	opt stack 0
 14290  012B36                     __get_available_cluster:
 14291                           	opt stack 11
 14292                           
 14293                           ;fat16.c: 133: uint16_t cluster;;fat16.c: 134: uint16_t sector;;fat16.c: 135: uint16_t o
      +                          ffset;;fat16.c: 138: for (sector=first_sector; sector<=33; ++sector)
 14294                           
 14295                           ; BSR set to: 0
 14296                           ;incstack = 0
 14297  012B36  C08B  F093         	movff	__get_available_cluster@first_sector,__get_available_cluster@sector
 14298  012B3A  C08C  F094         	movff	__get_available_cluster@first_sector+1,__get_available_cluster@sector+1
 14299  012B3E  0100               	movlb	0	; () banked
 14300  012B40  5194               	movf	(__get_available_cluster@sector+1)& (0+255),w,b
 14301  012B42  E15B               	bnz	l14030
 14302  012B44  0E22               	movlw	34
 14303  012B46  5D93               	subwf	__get_available_cluster@sector& (0+255),w,b
 14304  012B48  B0D8               	btfsc	status,0,c
 14305  012B4A  D057               	goto	u12680
 14306                           
 14307                           ; BSR set to: 0
 14308                           ;fat16.c: 139: {;fat16.c: 141: if(sector == skip_sector)
 14309                           
 14310                           ; BSR set to: 0
 14311                           
 14312                           ; BSR set to: 0
 14313  012B4C  518D               	movf	__get_available_cluster@skip_sector& (0+255),w,b
 14314  012B4E  1993               	xorwf	__get_available_cluster@sector& (0+255),w,b
 14315  012B50  E104               	bnz	l14006
 14316  012B52  518E               	movf	(__get_available_cluster@skip_sector+1)& (0+255),w,b
 14317  012B54  1994               	xorwf	(__get_available_cluster@sector+1)& (0+255),w,b
 14318  012B56  B4D8               	btfsc	status,2,c
 14319  012B58  D04D               	goto	l1784
 14320  012B5A                     l14006:
 14321                           
 14322                           ; BSR set to: 0
 14323                           ;fat16.c: 144: };fat16.c: 147: flash_sector_read(sector, buffer);
 14324  012B5A  C093  F087         	movff	__get_available_cluster@sector,flash_sector_read@page
 14325  012B5E  C094  F088         	movff	__get_available_cluster@sector+1,flash_sector_read@page+1
 14326  012B62  0E00               	movlw	low _buffer
 14327  012B64  6F89               	movwf	flash_sector_read@data& (0+255),b
 14328  012B66  0E0A               	movlw	high _buffer
 14329  012B68  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 14330  012B6A  EC9C  F0AE         	call	_flash_sector_read	;wreg free
 14331                           
 14332                           ;fat16.c: 150: if(sector == 2)
 14333  012B6E  0E02               	movlw	2
 14334  012B70  0100               	movlb	0	; () banked
 14335  012B72  1993               	xorwf	__get_available_cluster@sector& (0+255),w,b
 14336  012B74  1194               	iorwf	(__get_available_cluster@sector+1)& (0+255),w,b
 14337  012B76  A4D8               	btfss	status,2,c
 14338  012B78  D00B               	goto	l1779
 14339                           
 14340                           ; BSR set to: 0
 14341                           ;fat16.c: 151: {;fat16.c: 153: offset = _get_available_offset_from_buffer(4, buffer);
 14342  012B7A  0E00               	movlw	0
 14343  012B7C  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 14344  012B7E  0E04               	movlw	4
 14345  012B80  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 14346  012B82  0E00               	movlw	low _buffer
 14347  012B84  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 14348  012B86  0E0A               	movlw	high _buffer
 14349  012B88  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 14350  012B8A  ECDC  F0A5         	call	__get_available_offset_from_buffer	;wreg free
 14351  012B8E  D00B               	goto	L1
 14352  012B90                     l1779:
 14353                           
 14354                           ;fat16.c: 155: else;fat16.c: 156: {;fat16.c: 157: offset = _get_available_offset_from_bu
      +                          ffer(0, buffer);
 14355  012B90  0E00               	movlw	0
 14356  012B92  0100               	movlb	0	; () banked
 14357  012B94  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 14358  012B96  0E00               	movlw	0
 14359  012B98  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 14360  012B9A  0E00               	movlw	low _buffer
 14361  012B9C  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 14362  012B9E  0E0A               	movlw	high _buffer
 14363  012BA0  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 14364  012BA2  ECDC  F0A5         	call	__get_available_offset_from_buffer	;wreg free
 14365  012BA6                     L1:
 14366  012BA6  C060  F091         	movff	?__get_available_offset_from_buffer,__get_available_cluster@offset
 14367  012BAA  C061  F092         	movff	?__get_available_offset_from_buffer+1,__get_available_cluster@offset+1
 14368                           
 14369                           ;fat16.c: 158: };fat16.c: 161: if(offset != 0xFFFF)
 14370  012BAE  0100               	movlb	0	; () banked
 14371  012BB0  2991               	incf	__get_available_cluster@offset& (0+255),w,b
 14372  012BB2  E103               	bnz	u12660
 14373  012BB4  2992               	incf	(__get_available_cluster@offset+1)& (0+255),w,b
 14374  012BB6  B4D8               	btfsc	status,2,c
 14375  012BB8  D01D               	goto	l1784
 14376  012BBA                     u12660:
 14377                           
 14378                           ; BSR set to: 0
 14379                           ;fat16.c: 162: {;fat16.c: 164: cluster = _cluster_from_sector_and_offset(sector, offset)
      +                          ;
 14380  012BBA  C093  F060         	movff	__get_available_cluster@sector,__cluster_from_sector_and_offset@sector
 14381  012BBE  C094  F061         	movff	__get_available_cluster@sector+1,__cluster_from_sector_and_offset@sector+1
 14382  012BC2  C091  F062         	movff	__get_available_cluster@offset,__cluster_from_sector_and_offset@offset
 14383  012BC6  C092  F063         	movff	__get_available_cluster@offset+1,__cluster_from_sector_and_offset@offset+1
 14384  012BCA  EC74  F0AE         	call	__cluster_from_sector_and_offset	;wreg free
 14385  012BCE  C060  F08F         	movff	?__cluster_from_sector_and_offset,__get_available_cluster@cluster
 14386  012BD2  C061  F090         	movff	?__cluster_from_sector_and_offset+1,__get_available_cluster@cluster+1
 14387                           
 14388                           ;fat16.c: 166: if(cluster > 8191)
 14389  012BD6  0E20               	movlw	32
 14390  012BD8  0100               	movlb	0	; () banked
 14391  012BDA  5D90               	subwf	(__get_available_cluster@cluster+1)& (0+255),w,b
 14392  012BDC  A0D8               	btfss	status,0,c
 14393  012BDE  D005               	goto	l1782
 14394                           
 14395                           ; BSR set to: 0
 14396                           ;fat16.c: 167: {;fat16.c: 169: return 0x0000;
 14397  012BE0  0E00               	movlw	0
 14398  012BE2  6F8C               	movwf	(?__get_available_cluster+1)& (0+255),b
 14399  012BE4  0E00               	movlw	0
 14400  012BE6  6F8B               	movwf	?__get_available_cluster& (0+255),b
 14401                           
 14402                           ; BSR set to: 0
 14403  012BE8  0012               	return	
 14404  012BEA                     l1782:
 14405                           
 14406                           ; BSR set to: 0
 14407                           ;fat16.c: 171: else;fat16.c: 172: {;fat16.c: 174: return cluster;
 14408  012BEA  C08F  F08B         	movff	__get_available_cluster@cluster,?__get_available_cluster
 14409  012BEE  C090  F08C         	movff	__get_available_cluster@cluster+1,?__get_available_cluster+1
 14410  012BF2  0012               	return	
 14411  012BF4                     l1784:
 14412                           
 14413                           ; BSR set to: 0
 14414                           
 14415                           ; BSR set to: 0
 14416                           
 14417                           ; BSR set to: 0
 14418                           
 14419                           ; BSR set to: 0
 14420  012BF4  4B93               	infsnz	__get_available_cluster@sector& (0+255),f,b
 14421  012BF6  2B94               	incf	(__get_available_cluster@sector+1)& (0+255),f,b
 14422  012BF8  D7A3               	goto	L2
 14423  012BFA                     u12680:
 14424  012BFA                     l14030:
 14425                           
 14426                           ; BSR set to: 0
 14427                           ;fat16.c: 175: };fat16.c: 176: };fat16.c: 177: };fat16.c: 180: return 0x0000;
 14428  012BFA  0E00               	movlw	0
 14429  012BFC  6F8C               	movwf	(?__get_available_cluster+1)& (0+255),b
 14430  012BFE  0E00               	movlw	0
 14431  012C00  6F8B               	movwf	?__get_available_cluster& (0+255),b
 14432  012C02  0012               	return	
 14433  012C04                     __end_of__get_available_cluster:
 14434                           	opt stack 0
 14435                           tblptru	equ	0xFF8
 14436                           tblptrh	equ	0xFF7
 14437                           tblptrl	equ	0xFF6
 14438                           tablat	equ	0xFF5
 14439                           prodh	equ	0xFF4
 14440                           prodl	equ	0xFF3
 14441                           postinc0	equ	0xFEE
 14442                           wreg	equ	0xFE8
 14443                           postdec1	equ	0xFE5
 14444                           plusw1	equ	0xFE3
 14445                           fsr1h	equ	0xFE2
 14446                           fsr1l	equ	0xFE1
 14447                           indf2	equ	0xFDF
 14448                           postinc2	equ	0xFDE
 14449                           plusw2	equ	0xFDB
 14450                           fsr2h	equ	0xFDA
 14451                           fsr2l	equ	0xFD9
 14452                           status	equ	0xFD8
 14453                           
 14454 ;; *************** function __get_available_offset_from_buffer *****************
 14455 ;; Defined at:
 14456 ;;		line 99 in file "fat16.c"
 14457 ;; Parameters:    Size  Location     Type
 14458 ;;  minimum_offs    2    0[BANK0 ] unsigned int 
 14459 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 14460 ;;		 -> buffer(512), 
 14461 ;; Auto vars:     Size  Location     Type
 14462 ;;  offset          2    6[BANK0 ] unsigned int 
 14463 ;; Return value:  Size  Location     Type
 14464 ;;                  2    0[BANK0 ] unsigned int 
 14465 ;; Registers used:
 14466 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14467 ;; Tracked objects:
 14468 ;;		On entry : 0/0
 14469 ;;		On exit  : 0/0
 14470 ;;		Unchanged: 0/0
 14471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14472 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14473 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14474 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14475 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14476 ;;Total ram usage:        8 bytes
 14477 ;; Hardware stack levels used:    1
 14478 ;; Hardware stack levels required when called:   10
 14479 ;; This function calls:
 14480 ;;		Nothing
 14481 ;; This function is called by:
 14482 ;;		__get_available_cluster
 14483 ;;		__make_cluster_chain
 14484 ;; This function uses a non-reentrant model
 14485 ;;
 14486                           
 14487                           	psect	text47
 14488  014BB8                     __ptext47:
 14489                           	opt stack 0
 14490  014BB8                     __get_available_offset_from_buffer:
 14491                           	opt stack 16
 14492                           
 14493                           ;fat16.c: 101: uint16_t offset;;fat16.c: 103: for(offset = minimum_offset; offset<512; o
      +                          ffset += 2)
 14494                           
 14495                           ; BSR set to: 0
 14496                           ;incstack = 0
 14497  014BB8  C060  F066         	movff	__get_available_offset_from_buffer@minimum_offset,__get_available_offset_from_buf
      +                          fer@offset
 14498  014BBC  C061  F067         	movff	__get_available_offset_from_buffer@minimum_offset+1,__get_available_offset_from_b
      +                          uffer@offset+1
 14499  014BC0  0E02               	movlw	2
 14500  014BC2  0100               	movlb	0	; () banked
 14501  014BC4  D022               	goto	L3
 14502  014BC6                     
 14503                           ; BSR set to: 0
 14504                           ;fat16.c: 104: {;fat16.c: 105: if((buffer[offset] == 0x00) && (buffer[offset + 1] == 0x0
      +                          0))
 14505                           
 14506                           ; BSR set to: 0
 14507  014BC6  5166               	movf	__get_available_offset_from_buffer@offset& (0+255),w,b
 14508  014BC8  2562               	addwf	__get_available_offset_from_buffer@buffer& (0+255),w,b
 14509  014BCA  6ED9               	movwf	fsr2l,c
 14510  014BCC  5167               	movf	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 14511  014BCE  2163               	addwfc	(__get_available_offset_from_buffer@buffer+1)& (0+255),w,b
 14512  014BD0  6EDA               	movwf	fsr2h,c
 14513  014BD2  50DF               	movf	indf2,w,c
 14514  014BD4  A4D8               	btfss	status,2,c
 14515  014BD6  D014               	goto	l1765
 14516                           
 14517                           ; BSR set to: 0
 14518  014BD8  0E01               	movlw	1
 14519  014BDA  2566               	addwf	__get_available_offset_from_buffer@offset& (0+255),w,b
 14520  014BDC  6F64               	movwf	??__get_available_offset_from_buffer& (0+255),b
 14521  014BDE  0E00               	movlw	0
 14522  014BE0  2167               	addwfc	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 14523  014BE2  6F65               	movwf	(??__get_available_offset_from_buffer+1)& (0+255),b
 14524  014BE4  5164               	movf	??__get_available_offset_from_buffer& (0+255),w,b
 14525  014BE6  2562               	addwf	__get_available_offset_from_buffer@buffer& (0+255),w,b
 14526  014BE8  6ED9               	movwf	fsr2l,c
 14527  014BEA  5165               	movf	(??__get_available_offset_from_buffer+1)& (0+255),w,b
 14528  014BEC  2163               	addwfc	(__get_available_offset_from_buffer@buffer+1)& (0+255),w,b
 14529  014BEE  6EDA               	movwf	fsr2h,c
 14530  014BF0  50DF               	movf	indf2,w,c
 14531  014BF2  A4D8               	btfss	status,2,c
 14532  014BF4  D005               	goto	l1765
 14533                           
 14534                           ; BSR set to: 0
 14535                           ;fat16.c: 106: {;fat16.c: 107: return offset;
 14536  014BF6  C066  F060         	movff	__get_available_offset_from_buffer@offset,?__get_available_offset_from_buffer
 14537  014BFA  C067  F061         	movff	__get_available_offset_from_buffer@offset+1,?__get_available_offset_from_buffer+1
 14538  014BFE  0012               	return	
 14539  014C00                     l1765:
 14540                           
 14541                           ; BSR set to: 0
 14542                           
 14543                           ; BSR set to: 0
 14544  014C00  0E02               	movlw	2
 14545  014C02  2766               	addwf	__get_available_offset_from_buffer@offset& (0+255),f,b
 14546  014C04  0E00               	movlw	0
 14547  014C06  2367               	addwfc	(__get_available_offset_from_buffer@offset+1)& (0+255),f,b
 14548  014C08  0E02               	movlw	2
 14549  014C0A                     L3:
 14550  014C0A  5D67               	subwf	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 14551  014C0C  A0D8               	btfss	status,0,c
 14552  014C0E  D7DB               	goto	l1763
 14553                           
 14554                           ; BSR set to: 0
 14555                           ;fat16.c: 108: };fat16.c: 109: };fat16.c: 112: return 0xFFFF;
 14556  014C10  6960               	setf	?__get_available_offset_from_buffer& (0+255),b
 14557  014C12  6961               	setf	(?__get_available_offset_from_buffer+1)& (0+255),b
 14558                           
 14559                           ; BSR set to: 0
 14560  014C14  0012               	return		;funcret
 14561  014C16                     __end_of__get_available_offset_from_buffer:
 14562                           	opt stack 0
 14563                           tblptru	equ	0xFF8
 14564                           tblptrh	equ	0xFF7
 14565                           tblptrl	equ	0xFF6
 14566                           tablat	equ	0xFF5
 14567                           prodh	equ	0xFF4
 14568                           prodl	equ	0xFF3
 14569                           postinc0	equ	0xFEE
 14570                           wreg	equ	0xFE8
 14571                           postdec1	equ	0xFE5
 14572                           plusw1	equ	0xFE3
 14573                           fsr1h	equ	0xFE2
 14574                           fsr1l	equ	0xFE1
 14575                           indf2	equ	0xFDF
 14576                           postinc2	equ	0xFDE
 14577                           plusw2	equ	0xFDB
 14578                           fsr2h	equ	0xFDA
 14579                           fsr2l	equ	0xFD9
 14580                           status	equ	0xFD8
 14581                           
 14582 ;; *************** function __cluster_from_sector_and_offset *****************
 14583 ;; Defined at:
 14584 ;;		line 90 in file "fat16.c"
 14585 ;; Parameters:    Size  Location     Type
 14586 ;;  sector          2    0[BANK0 ] unsigned int 
 14587 ;;  offset          2    2[BANK0 ] unsigned int 
 14588 ;; Auto vars:     Size  Location     Type
 14589 ;;		None
 14590 ;; Return value:  Size  Location     Type
 14591 ;;                  2    0[BANK0 ] unsigned int 
 14592 ;; Registers used:
 14593 ;;		wreg, status,2, status,0
 14594 ;; Tracked objects:
 14595 ;;		On entry : 0/0
 14596 ;;		On exit  : 0/0
 14597 ;;		Unchanged: 0/0
 14598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14599 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14602 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14603 ;;Total ram usage:        4 bytes
 14604 ;; Hardware stack levels used:    1
 14605 ;; Hardware stack levels required when called:   10
 14606 ;; This function calls:
 14607 ;;		Nothing
 14608 ;; This function is called by:
 14609 ;;		__get_available_cluster
 14610 ;; This function uses a non-reentrant model
 14611 ;;
 14612                           
 14613                           	psect	text48
 14614  015CE8                     __ptext48:
 14615                           	opt stack 0
 14616  015CE8                     __cluster_from_sector_and_offset:
 14617                           	opt stack 15
 14618                           
 14619                           ;fat16.c: 92: offset >>= 1;
 14620                           
 14621                           ; BSR set to: 0
 14622                           ;incstack = 0
 14623  015CE8  0100               	movlb	0	; () banked
 14624  015CEA  90D8               	bcf	status,0,c
 14625  015CEC  3363               	rrcf	(__cluster_from_sector_and_offset@offset+1)& (0+255),f,b
 14626  015CEE  3362               	rrcf	__cluster_from_sector_and_offset@offset& (0+255),f,b
 14627                           
 14628                           ; BSR set to: 0
 14629                           ;fat16.c: 93: sector -= 2;
 14630  015CF0  0E02               	movlw	2
 14631  015CF2  5F60               	subwf	__cluster_from_sector_and_offset@sector& (0+255),f,b
 14632  015CF4  0E00               	movlw	0
 14633  015CF6  5B61               	subwfb	(__cluster_from_sector_and_offset@sector+1)& (0+255),f,b
 14634                           
 14635                           ; BSR set to: 0
 14636                           ;fat16.c: 94: sector <<= 8;
 14637  015CF8  5160               	movf	__cluster_from_sector_and_offset@sector& (0+255),w,b
 14638  015CFA  6F61               	movwf	(__cluster_from_sector_and_offset@sector+1)& (0+255),b
 14639  015CFC  6B60               	clrf	__cluster_from_sector_and_offset@sector& (0+255),b
 14640                           
 14641                           ; BSR set to: 0
 14642                           ;fat16.c: 95: sector |= offset;
 14643  015CFE  5162               	movf	__cluster_from_sector_and_offset@offset& (0+255),w,b
 14644  015D00  1360               	iorwf	__cluster_from_sector_and_offset@sector& (0+255),f,b
 14645  015D02  5163               	movf	(__cluster_from_sector_and_offset@offset+1)& (0+255),w,b
 14646  015D04  1361               	iorwf	(__cluster_from_sector_and_offset@sector+1)& (0+255),f,b
 14647                           
 14648                           ; BSR set to: 0
 14649                           ;fat16.c: 96: return sector;
 14650  015D06  C060  F060         	movff	__cluster_from_sector_and_offset@sector,?__cluster_from_sector_and_offset
 14651  015D0A  C061  F061         	movff	__cluster_from_sector_and_offset@sector+1,?__cluster_from_sector_and_offset+1
 14652  015D0E  0012               	return	
 14653  015D10                     __end_of__cluster_from_sector_and_offset:
 14654                           	opt stack 0
 14655                           tblptru	equ	0xFF8
 14656                           tblptrh	equ	0xFF7
 14657                           tblptrl	equ	0xFF6
 14658                           tablat	equ	0xFF5
 14659                           prodh	equ	0xFF4
 14660                           prodl	equ	0xFF3
 14661                           postinc0	equ	0xFEE
 14662                           wreg	equ	0xFE8
 14663                           postdec1	equ	0xFE5
 14664                           plusw1	equ	0xFE3
 14665                           fsr1h	equ	0xFE2
 14666                           fsr1l	equ	0xFE1
 14667                           indf2	equ	0xFDF
 14668                           postinc2	equ	0xFDE
 14669                           plusw2	equ	0xFDB
 14670                           fsr2h	equ	0xFDA
 14671                           fsr2l	equ	0xFD9
 14672                           status	equ	0xFD8
 14673                           
 14674 ;; *************** function __get_time *****************
 14675 ;; Defined at:
 14676 ;;		line 377 in file "fat16.c"
 14677 ;; Parameters:    Size  Location     Type
 14678 ;;		None
 14679 ;; Auto vars:     Size  Location     Type
 14680 ;;		None
 14681 ;; Return value:  Size  Location     Type
 14682 ;;                  2    0[BANK0 ] unsigned int 
 14683 ;; Registers used:
 14684 ;;		wreg, status,2
 14685 ;; Tracked objects:
 14686 ;;		On entry : 0/0
 14687 ;;		On exit  : 0/0
 14688 ;;		Unchanged: 0/0
 14689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14690 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14693 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14694 ;;Total ram usage:        2 bytes
 14695 ;; Hardware stack levels used:    1
 14696 ;; Hardware stack levels required when called:   10
 14697 ;; This function calls:
 14698 ;;		Nothing
 14699 ;; This function is called by:
 14700 ;;		_fat_create_file
 14701 ;; This function uses a non-reentrant model
 14702 ;;
 14703                           
 14704                           	psect	text49
 14705  015FF4                     __ptext49:
 14706                           	opt stack 0
 14707  015FF4                     __get_time:
 14708                           	opt stack 17
 14709                           
 14710                           ;fat16.c: 389: return 0x0000;
 14711                           
 14712                           ; BSR set to: 0
 14713                           ;incstack = 0
 14714  015FF4  0E00               	movlw	0
 14715  015FF6  0100               	movlb	0	; () banked
 14716  015FF8  6F61               	movwf	(?__get_time+1)& (0+255),b
 14717  015FFA  0E00               	movlw	0
 14718  015FFC  6F60               	movwf	?__get_time& (0+255),b
 14719  015FFE  0012               	return	
 14720  016000                     __end_of__get_time:
 14721                           	opt stack 0
 14722                           tblptru	equ	0xFF8
 14723                           tblptrh	equ	0xFF7
 14724                           tblptrl	equ	0xFF6
 14725                           tablat	equ	0xFF5
 14726                           prodh	equ	0xFF4
 14727                           prodl	equ	0xFF3
 14728                           postinc0	equ	0xFEE
 14729                           wreg	equ	0xFE8
 14730                           postdec1	equ	0xFE5
 14731                           plusw1	equ	0xFE3
 14732                           fsr1h	equ	0xFE2
 14733                           fsr1l	equ	0xFE1
 14734                           indf2	equ	0xFDF
 14735                           postinc2	equ	0xFDE
 14736                           plusw2	equ	0xFDB
 14737                           fsr2h	equ	0xFDA
 14738                           fsr2l	equ	0xFD9
 14739                           status	equ	0xFD8
 14740                           
 14741 ;; *************** function __get_date *****************
 14742 ;; Defined at:
 14743 ;;		line 393 in file "fat16.c"
 14744 ;; Parameters:    Size  Location     Type
 14745 ;;		None
 14746 ;; Auto vars:     Size  Location     Type
 14747 ;;		None
 14748 ;; Return value:  Size  Location     Type
 14749 ;;                  2    0[BANK0 ] unsigned int 
 14750 ;; Registers used:
 14751 ;;		wreg, status,2
 14752 ;; Tracked objects:
 14753 ;;		On entry : 0/0
 14754 ;;		On exit  : 0/0
 14755 ;;		Unchanged: 0/0
 14756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14757 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14760 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14761 ;;Total ram usage:        2 bytes
 14762 ;; Hardware stack levels used:    1
 14763 ;; Hardware stack levels required when called:   10
 14764 ;; This function calls:
 14765 ;;		Nothing
 14766 ;; This function is called by:
 14767 ;;		_fat_create_file
 14768 ;; This function uses a non-reentrant model
 14769 ;;
 14770                           
 14771                           	psect	text50
 14772  016000                     __ptext50:
 14773                           	opt stack 0
 14774  016000                     __get_date:
 14775                           	opt stack 17
 14776                           
 14777                           ;fat16.c: 405: return 0x0000;
 14778                           
 14779                           ; BSR set to: 0
 14780                           ;incstack = 0
 14781  016000  0E00               	movlw	0
 14782  016002  0100               	movlb	0	; () banked
 14783  016004  6F61               	movwf	(?__get_date+1)& (0+255),b
 14784  016006  0E00               	movlw	0
 14785  016008  6F60               	movwf	?__get_date& (0+255),b
 14786  01600A  0012               	return	
 14787  01600C                     __end_of__get_date:
 14788                           	opt stack 0
 14789                           tblptru	equ	0xFF8
 14790                           tblptrh	equ	0xFF7
 14791                           tblptrl	equ	0xFF6
 14792                           tablat	equ	0xFF5
 14793                           prodh	equ	0xFF4
 14794                           prodl	equ	0xFF3
 14795                           postinc0	equ	0xFEE
 14796                           wreg	equ	0xFE8
 14797                           postdec1	equ	0xFE5
 14798                           plusw1	equ	0xFE3
 14799                           fsr1h	equ	0xFE2
 14800                           fsr1l	equ	0xFE1
 14801                           indf2	equ	0xFDF
 14802                           postinc2	equ	0xFDE
 14803                           plusw2	equ	0xFDB
 14804                           fsr2h	equ	0xFDA
 14805                           fsr2l	equ	0xFD9
 14806                           status	equ	0xFD8
 14807                           
 14808 ;; *************** function __get_available_root_entry *****************
 14809 ;; Defined at:
 14810 ;;		line 443 in file "fat16.c"
 14811 ;; Parameters:    Size  Location     Type
 14812 ;;		None
 14813 ;; Auto vars:     Size  Location     Type
 14814 ;;  file_number     1   53[BANK0 ] unsigned char 
 14815 ;; Return value:  Size  Location     Type
 14816 ;;                  1    wreg      unsigned char 
 14817 ;; Registers used:
 14818 ;;		wreg, status,2, status,0, cstack
 14819 ;; Tracked objects:
 14820 ;;		On entry : 0/0
 14821 ;;		On exit  : 0/0
 14822 ;;		Unchanged: 0/0
 14823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14825 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14827 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14828 ;;Total ram usage:        1 bytes
 14829 ;; Hardware stack levels used:    1
 14830 ;; Hardware stack levels required when called:   16
 14831 ;; This function calls:
 14832 ;;		__root_is_available
 14833 ;; This function is called by:
 14834 ;;		_fat_create_file
 14835 ;; This function uses a non-reentrant model
 14836 ;;
 14837                           
 14838                           	psect	text51
 14839  015C6C                     __ptext51:
 14840                           	opt stack 0
 14841  015C6C                     __get_available_root_entry:
 14842                           	opt stack 11
 14843                           
 14844                           ;fat16.c: 445: uint8_t file_number;;fat16.c: 447: for(file_number=0; file_number<64; ++f
      +                          ile_number)
 14845                           
 14846                           ; BSR set to: 0
 14847                           ;incstack = 0
 14848  015C6C  0E00               	movlw	0
 14849  015C6E  0100               	movlb	0	; () banked
 14850  015C70  6F95               	movwf	__get_available_root_entry@file_number& (0+255),b
 14851  015C72                     l15024:
 14852                           
 14853                           ; BSR set to: 0
 14854  015C72  0E3F               	movlw	63
 14855  015C74  6595               	cpfsgt	__get_available_root_entry@file_number& (0+255),b
 14856  015C76  D001               	goto	l1836
 14857  015C78  D00C               	goto	u14120
 14858  015C7A                     l1836:
 14859                           
 14860                           ; BSR set to: 0
 14861                           ;fat16.c: 448: {;fat16.c: 449: if(_root_is_available(file_number))
 14862                           
 14863                           ; BSR set to: 0
 14864  015C7A  5195               	movf	__get_available_root_entry@file_number& (0+255),w,b
 14865  015C7C  EC17  F0A4         	call	__root_is_available
 14866  015C80  0900               	iorlw	0
 14867  015C82  B4D8               	btfsc	status,2,c
 14868  015C84  D003               	goto	l1838
 14869                           
 14870                           ;fat16.c: 450: {;fat16.c: 451: return file_number;
 14871  015C86  0100               	movlb	0	; () banked
 14872  015C88  5195               	movf	__get_available_root_entry@file_number& (0+255),w,b
 14873                           
 14874                           ; BSR set to: 0
 14875  015C8A  0012               	return	
 14876  015C8C                     l1838:
 14877                           
 14878                           ; BSR set to: 0
 14879  015C8C  0100               	movlb	0	; () banked
 14880  015C8E  2B95               	incf	__get_available_root_entry@file_number& (0+255),f,b
 14881  015C90  D7F0               	goto	l15024
 14882  015C92                     u14120:
 14883                           
 14884                           ; BSR set to: 0
 14885                           ;fat16.c: 452: };fat16.c: 453: };fat16.c: 454: return 0xFF;
 14886                           
 14887                           ; BSR set to: 0
 14888  015C92  0EFF               	movlw	255
 14889  015C94  0012               	return	
 14890  015C96                     __end_of__get_available_root_entry:
 14891                           	opt stack 0
 14892                           tblptru	equ	0xFF8
 14893                           tblptrh	equ	0xFF7
 14894                           tblptrl	equ	0xFF6
 14895                           tablat	equ	0xFF5
 14896                           prodh	equ	0xFF4
 14897                           prodl	equ	0xFF3
 14898                           postinc0	equ	0xFEE
 14899                           wreg	equ	0xFE8
 14900                           postdec1	equ	0xFE5
 14901                           plusw1	equ	0xFE3
 14902                           fsr1h	equ	0xFE2
 14903                           fsr1l	equ	0xFE1
 14904                           indf2	equ	0xFDF
 14905                           postinc2	equ	0xFDE
 14906                           plusw2	equ	0xFDB
 14907                           fsr2h	equ	0xFDA
 14908                           fsr2l	equ	0xFD9
 14909                           status	equ	0xFD8
 14910                           
 14911 ;; *************** function __add_item *****************
 14912 ;; Defined at:
 14913 ;;		line 42 in file "config_file.c"
 14914 ;; Parameters:    Size  Location     Type
 14915 ;;  item_string     2   36[BANK0 ] PTR unsigned char 
 14916 ;;		 -> position_display_180_string(21), ccw_limit_string(10), use_ccw_limit_string(14), cw_limit_string(9), 
 14917 ;;		 -> use_cw_limit_string(13), beep_duration_string(14), maximum_speed_manual_string(21), initial_speed_manual_string(
      +21), 
 14918 ;;		 -> maximum_speed_arc_string(18), initial_speed_arc_string(18), maximum_speed_string(14), minimum_speed_string(14), 
 14919 ;;		 -> overshoot_cost_in_steps_string(24), inverse_direction_string(18), overshoot_in_steps_string(19), full_circle_in_
      +steps_string(21), 
 14920 ;;  value           4   38[BANK0 ] long 
 14921 ;;  buffer          2   42[BANK0 ] PTR unsigned char 
 14922 ;;		 -> ConfigFile_buffer(512), 
 14923 ;; Auto vars:     Size  Location     Type
 14924 ;;  length          1   46[BANK0 ] unsigned char 
 14925 ;; Return value:  Size  Location     Type
 14926 ;;                  1    wreg      unsigned char 
 14927 ;; Registers used:
 14928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14929 ;; Tracked objects:
 14930 ;;		On entry : 0/0
 14931 ;;		On exit  : 0/0
 14932 ;;		Unchanged: 0/0
 14933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14934 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14935 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14936 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14937 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14938 ;;Total ram usage:       11 bytes
 14939 ;; Hardware stack levels used:    1
 14940 ;; Hardware stack levels required when called:   13
 14941 ;; This function calls:
 14942 ;;		_ltoa
 14943 ;; This function is called by:
 14944 ;;		_configFile_write
 14945 ;; This function uses a non-reentrant model
 14946 ;;
 14947                           
 14948                           	psect	text52
 14949  011B46                     __ptext52:
 14950                           	opt stack 0
 14951  011B46                     __add_item:
 14952                           	opt stack 15
 14953                           
 14954                           ;config_file.c: 44: uint8_t length = 0;
 14955                           
 14956                           ; BSR set to: 0
 14957                           ;incstack = 0
 14958  011B46  0E00               	movlw	0
 14959  011B48  0100               	movlb	0	; () banked
 14960  011B4A  6F8E               	movwf	__add_item@length& (0+255),b
 14961                           
 14962                           ;config_file.c: 47: while(item_string[length])
 14963  011B4C  D01C               	goto	l3026
 14964  011B4E                     
 14965                           ; BSR set to: 0
 14966                           ;config_file.c: 48: {;config_file.c: 49: buffer[length] = item_string[length];
 14967                           
 14968                           ; BSR set to: 0
 14969  011B4E  518E               	movf	__add_item@length& (0+255),w,b
 14970  011B50  0D01               	mullw	1
 14971  011B52  C084  F08C         	movff	__add_item@item_string,??__add_item
 14972  011B56  C085  F08D         	movff	__add_item@item_string+1,??__add_item+1
 14973  011B5A  50F3               	movf	prodl,w,c
 14974  011B5C  278C               	addwf	??__add_item& (0+255),f,b
 14975  011B5E  50F4               	movf	prodh,w,c
 14976  011B60  238D               	addwfc	(??__add_item+1)& (0+255),f,b
 14977  011B62  C08C  FFF6         	movff	??__add_item,tblptrl
 14978  011B66  C08D  FFF7         	movff	??__add_item+1,tblptrh
 14979  011B6A                     	if	0	;tblptru may be non-zero
 14980  011B6A                     	endif
 14981  011B6A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14982  011B6A  0E00               	movlw	low (__mediumconst shr (0+16))
 14983  011B6C  6EF8               	movwf	tblptru,c
 14984  011B6E                     	endif
 14985  011B6E  518E               	movf	__add_item@length& (0+255),w,b
 14986  011B70  0D01               	mullw	1
 14987  011B72  50F3               	movf	prodl,w,c
 14988  011B74  258A               	addwf	__add_item@buffer& (0+255),w,b
 14989  011B76  6ED9               	movwf	fsr2l,c
 14990  011B78  50F4               	movf	prodh,w,c
 14991  011B7A  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14992  011B7C  6EDA               	movwf	fsr2h,c
 14993  011B7E  0008               	tblrd		*
 14994  011B80  CFF5 FFDF          	movff	tablat,indf2
 14995                           
 14996                           ; BSR set to: 0
 14997                           ;config_file.c: 50: ++length;
 14998  011B84  2B8E               	incf	__add_item@length& (0+255),f,b
 14999  011B86                     l3026:
 15000                           
 15001                           ; BSR set to: 0
 15002                           
 15003                           ; BSR set to: 0
 15004  011B86  518E               	movf	__add_item@length& (0+255),w,b
 15005  011B88  0D01               	mullw	1
 15006  011B8A  C084  F08C         	movff	__add_item@item_string,??__add_item
 15007  011B8E  C085  F08D         	movff	__add_item@item_string+1,??__add_item+1
 15008  011B92  50F3               	movf	prodl,w,c
 15009  011B94  278C               	addwf	??__add_item& (0+255),f,b
 15010  011B96  50F4               	movf	prodh,w,c
 15011  011B98  238D               	addwfc	(??__add_item+1)& (0+255),f,b
 15012  011B9A  C08C  FFF6         	movff	??__add_item,tblptrl
 15013  011B9E  C08D  FFF7         	movff	??__add_item+1,tblptrh
 15014  011BA2                     	if	0	;tblptru may be non-zero
 15015  011BA2                     	endif
 15016  011BA2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15017  011BA2  0E00               	movlw	low (__mediumconst shr (0+16))
 15018  011BA4  6EF8               	movwf	tblptru,c
 15019  011BA6                     	endif
 15020  011BA6  0008               	tblrd		*
 15021  011BA8  50F5               	movf	tablat,w,c
 15022  011BAA  0900               	iorlw	0
 15023  011BAC  A4D8               	btfss	status,2,c
 15024  011BAE  D7CF               	goto	l3027
 15025                           
 15026                           ; BSR set to: 0
 15027                           ;config_file.c: 51: };config_file.c: 54: buffer[length++] = '=';
 15028                           
 15029                           ; BSR set to: 0
 15030  011BB0  518E               	movf	__add_item@length& (0+255),w,b
 15031  011BB2  0D01               	mullw	1
 15032  011BB4  50F3               	movf	prodl,w,c
 15033  011BB6  258A               	addwf	__add_item@buffer& (0+255),w,b
 15034  011BB8  6ED9               	movwf	fsr2l,c
 15035  011BBA  50F4               	movf	prodh,w,c
 15036  011BBC  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 15037  011BBE  6EDA               	movwf	fsr2h,c
 15038  011BC0  0E3D               	movlw	61
 15039  011BC2  6EDF               	movwf	indf2,c
 15040                           
 15041                           ; BSR set to: 0
 15042  011BC4  2B8E               	incf	__add_item@length& (0+255),f,b
 15043                           
 15044                           ; BSR set to: 0
 15045                           ;config_file.c: 57: ltoa(&buffer[length], value, 10);
 15046  011BC6  518E               	movf	__add_item@length& (0+255),w,b
 15047  011BC8  0D01               	mullw	1
 15048  011BCA  50F3               	movf	prodl,w,c
 15049  011BCC  258A               	addwf	__add_item@buffer& (0+255),w,b
 15050  011BCE  6F7A               	movwf	ltoa@buf& (0+255),b
 15051  011BD0  50F4               	movf	prodh,w,c
 15052  011BD2  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 15053  011BD4  6F7B               	movwf	(ltoa@buf+1)& (0+255),b
 15054  011BD6  C086  F07C         	movff	__add_item@value,ltoa@val
 15055  011BDA  C087  F07D         	movff	__add_item@value+1,ltoa@val+1
 15056  011BDE  C088  F07E         	movff	__add_item@value+2,ltoa@val+2
 15057  011BE2  C089  F07F         	movff	__add_item@value+3,ltoa@val+3
 15058  011BE6  0E00               	movlw	0
 15059  011BE8  6F81               	movwf	(ltoa@base+1)& (0+255),b
 15060  011BEA  0E0A               	movlw	10
 15061  011BEC  6F80               	movwf	ltoa@base& (0+255),b
 15062  011BEE  EC76  F0A8         	call	_ltoa	;wreg free
 15063                           
 15064                           ;config_file.c: 58: while(buffer[length])
 15065  011BF2  D002               	goto	l3029
 15066  011BF4                     
 15067                           ;config_file.c: 59: {;config_file.c: 60: ++length;
 15068  011BF4  0100               	movlb	0	; () banked
 15069  011BF6  2B8E               	incf	__add_item@length& (0+255),f,b
 15070  011BF8                     l3029:
 15071                           
 15072                           ; BSR set to: 0
 15073  011BF8  0100               	movlb	0	; () banked
 15074  011BFA  518E               	movf	__add_item@length& (0+255),w,b
 15075  011BFC  0D01               	mullw	1
 15076  011BFE  50F3               	movf	prodl,w,c
 15077  011C00  258A               	addwf	__add_item@buffer& (0+255),w,b
 15078  011C02  6ED9               	movwf	fsr2l,c
 15079  011C04  50F4               	movf	prodh,w,c
 15080  011C06  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 15081  011C08  6EDA               	movwf	fsr2h,c
 15082  011C0A  50DF               	movf	indf2,w,c
 15083  011C0C  A4D8               	btfss	status,2,c
 15084  011C0E  D7F2               	goto	l3030
 15085                           
 15086                           ; BSR set to: 0
 15087                           ;config_file.c: 61: };config_file.c: 64: buffer[length++] = '\r';
 15088                           
 15089                           ; BSR set to: 0
 15090  011C10  518E               	movf	__add_item@length& (0+255),w,b
 15091  011C12  0D01               	mullw	1
 15092  011C14  50F3               	movf	prodl,w,c
 15093  011C16  258A               	addwf	__add_item@buffer& (0+255),w,b
 15094  011C18  6ED9               	movwf	fsr2l,c
 15095  011C1A  50F4               	movf	prodh,w,c
 15096  011C1C  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 15097  011C1E  6EDA               	movwf	fsr2h,c
 15098  011C20  0E0D               	movlw	13
 15099  011C22  6EDF               	movwf	indf2,c
 15100                           
 15101                           ; BSR set to: 0
 15102  011C24  2B8E               	incf	__add_item@length& (0+255),f,b
 15103                           
 15104                           ; BSR set to: 0
 15105                           ;config_file.c: 65: buffer[length++] = '\n';
 15106  011C26  518E               	movf	__add_item@length& (0+255),w,b
 15107  011C28  0D01               	mullw	1
 15108  011C2A  50F3               	movf	prodl,w,c
 15109  011C2C  258A               	addwf	__add_item@buffer& (0+255),w,b
 15110  011C2E  6ED9               	movwf	fsr2l,c
 15111  011C30  50F4               	movf	prodh,w,c
 15112  011C32  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 15113  011C34  6EDA               	movwf	fsr2h,c
 15114  011C36  0E0A               	movlw	10
 15115  011C38  6EDF               	movwf	indf2,c
 15116  011C3A  2B8E               	incf	__add_item@length& (0+255),f,b
 15117                           
 15118                           ; BSR set to: 0
 15119                           ;config_file.c: 68: return length;
 15120  011C3C  518E               	movf	__add_item@length& (0+255),w,b
 15121  011C3E  0012               	return	
 15122  011C40                     __end_of__add_item:
 15123                           	opt stack 0
 15124                           tblptru	equ	0xFF8
 15125                           tblptrh	equ	0xFF7
 15126                           tblptrl	equ	0xFF6
 15127                           tablat	equ	0xFF5
 15128                           prodh	equ	0xFF4
 15129                           prodl	equ	0xFF3
 15130                           postinc0	equ	0xFEE
 15131                           wreg	equ	0xFE8
 15132                           postdec1	equ	0xFE5
 15133                           plusw1	equ	0xFE3
 15134                           fsr1h	equ	0xFE2
 15135                           fsr1l	equ	0xFE1
 15136                           indf2	equ	0xFDF
 15137                           postinc2	equ	0xFDE
 15138                           plusw2	equ	0xFDB
 15139                           fsr2h	equ	0xFDA
 15140                           fsr2l	equ	0xFD9
 15141                           status	equ	0xFD8
 15142                           
 15143 ;; *************** function _ltoa *****************
 15144 ;; Defined at:
 15145 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\ltoa.c"
 15146 ;; Parameters:    Size  Location     Type
 15147 ;;  buf             2   26[BANK0 ] PTR unsigned char 
 15148 ;;		 -> ConfigFile_buffer(512), 
 15149 ;;  val             4   28[BANK0 ] long 
 15150 ;;  base            2   32[BANK0 ] int 
 15151 ;; Auto vars:     Size  Location     Type
 15152 ;;  cp              2   34[BANK0 ] PTR unsigned char 
 15153 ;;		 -> ConfigFile_buffer(512), 
 15154 ;; Return value:  Size  Location     Type
 15155 ;;                  2   26[BANK0 ] PTR unsigned char 
 15156 ;; Registers used:
 15157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15158 ;; Tracked objects:
 15159 ;;		On entry : 0/0
 15160 ;;		On exit  : 0/0
 15161 ;;		Unchanged: 0/0
 15162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15163 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15164 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15166 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15167 ;;Total ram usage:       10 bytes
 15168 ;; Hardware stack levels used:    1
 15169 ;; Hardware stack levels required when called:   12
 15170 ;; This function calls:
 15171 ;;		_ultoa
 15172 ;; This function is called by:
 15173 ;;		__add_item
 15174 ;; This function uses a non-reentrant model
 15175 ;;
 15176                           
 15177                           	psect	text53
 15178  0150EC                     __ptext53:
 15179                           	opt stack 0
 15180  0150EC                     _ltoa:
 15181                           	opt stack 15
 15182                           
 15183                           ; BSR set to: 0
 15184                           ;incstack = 0
 15185  0150EC  C07A  F082         	movff	ltoa@buf,ltoa@cp
 15186  0150F0  C07B  F083         	movff	ltoa@buf+1,ltoa@cp+1
 15187  0150F4  0100               	movlb	0	; () banked
 15188  0150F6  AF7F               	btfss	(ltoa@val+3)& (0+255),7,b
 15189  0150F8  D010               	goto	l3804
 15190                           
 15191                           ; BSR set to: 0
 15192  0150FA  C07A  FFD9         	movff	ltoa@buf,fsr2l
 15193  0150FE  C07B  FFDA         	movff	ltoa@buf+1,fsr2h
 15194  015102  0E2D               	movlw	45
 15195  015104  6EDF               	movwf	indf2,c
 15196                           
 15197                           ; BSR set to: 0
 15198  015106  4B7A               	infsnz	ltoa@buf& (0+255),f,b
 15199  015108  2B7B               	incf	(ltoa@buf+1)& (0+255),f,b
 15200                           
 15201                           ; BSR set to: 0
 15202  01510A  1F7F               	comf	(ltoa@val+3)& (0+255),f,b
 15203  01510C  1F7E               	comf	(ltoa@val+2)& (0+255),f,b
 15204  01510E  1F7D               	comf	(ltoa@val+1)& (0+255),f,b
 15205  015110  6D7C               	negf	ltoa@val& (0+255),b
 15206  015112  0E00               	movlw	0
 15207  015114  237D               	addwfc	(ltoa@val+1)& (0+255),f,b
 15208  015116  237E               	addwfc	(ltoa@val+2)& (0+255),f,b
 15209  015118  237F               	addwfc	(ltoa@val+3)& (0+255),f,b
 15210  01511A                     l3804:
 15211                           
 15212                           ; BSR set to: 0
 15213                           
 15214                           ; BSR set to: 0
 15215  01511A  C07A  F06D         	movff	ltoa@buf,ultoa@buf
 15216  01511E  C07B  F06E         	movff	ltoa@buf+1,ultoa@buf+1
 15217  015122  C07C  F06F         	movff	ltoa@val,ultoa@val
 15218  015126  C07D  F070         	movff	ltoa@val+1,ultoa@val+1
 15219  01512A  C07E  F071         	movff	ltoa@val+2,ultoa@val+2
 15220  01512E  C07F  F072         	movff	ltoa@val+3,ultoa@val+3
 15221  015132  C080  F073         	movff	ltoa@base,ultoa@base
 15222  015136  C081  F074         	movff	ltoa@base+1,ultoa@base+1
 15223  01513A  ECA6  F08C         	call	_ultoa	;wreg free
 15224  01513E  0012               	return	
 15225  015140                     __end_of_ltoa:
 15226                           	opt stack 0
 15227                           tblptru	equ	0xFF8
 15228                           tblptrh	equ	0xFF7
 15229                           tblptrl	equ	0xFF6
 15230                           tablat	equ	0xFF5
 15231                           prodh	equ	0xFF4
 15232                           prodl	equ	0xFF3
 15233                           postinc0	equ	0xFEE
 15234                           wreg	equ	0xFE8
 15235                           postdec1	equ	0xFE5
 15236                           plusw1	equ	0xFE3
 15237                           fsr1h	equ	0xFE2
 15238                           fsr1l	equ	0xFE1
 15239                           indf2	equ	0xFDF
 15240                           postinc2	equ	0xFDE
 15241                           plusw2	equ	0xFDB
 15242                           fsr2h	equ	0xFDA
 15243                           fsr2l	equ	0xFD9
 15244                           status	equ	0xFD8
 15245                           
 15246 ;; *************** function _ultoa *****************
 15247 ;; Defined at:
 15248 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\ltoa.c"
 15249 ;; Parameters:    Size  Location     Type
 15250 ;;  buf             2   13[BANK0 ] PTR unsigned char 
 15251 ;;		 -> ConfigFile_buffer(512), 
 15252 ;;  val             4   15[BANK0 ] unsigned long 
 15253 ;;  base            2   19[BANK0 ] int 
 15254 ;; Auto vars:     Size  Location     Type
 15255 ;;  v               4   21[BANK0 ] unsigned long 
 15256 ;;  c               1   25[BANK0 ] unsigned char 
 15257 ;; Return value:  Size  Location     Type
 15258 ;;                  2   13[BANK0 ] PTR unsigned char 
 15259 ;; Registers used:
 15260 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15261 ;; Tracked objects:
 15262 ;;		On entry : 0/0
 15263 ;;		On exit  : 0/0
 15264 ;;		Unchanged: 0/0
 15265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15266 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15267 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15269 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15270 ;;Total ram usage:       13 bytes
 15271 ;; Hardware stack levels used:    1
 15272 ;; Hardware stack levels required when called:   11
 15273 ;; This function calls:
 15274 ;;		___lldiv
 15275 ;;		___llmod
 15276 ;; This function is called by:
 15277 ;;		_ltoa
 15278 ;; This function uses a non-reentrant model
 15279 ;;
 15280                           
 15281                           	psect	text54
 15282  01194C                     __ptext54:
 15283                           	opt stack 0
 15284  01194C                     _ultoa:
 15285                           	opt stack 15
 15286                           
 15287                           ;incstack = 0
 15288  01194C  C06F  F075         	movff	ultoa@val,ultoa@v
 15289  011950  C070  F076         	movff	ultoa@val+1,ultoa@v+1
 15290  011954  C071  F077         	movff	ultoa@val+2,ultoa@v+2
 15291  011958  C072  F078         	movff	ultoa@val+3,ultoa@v+3
 15292  01195C  C075  F060         	movff	ultoa@v,___lldiv@dividend
 15293  011960  C076  F061         	movff	ultoa@v+1,___lldiv@dividend+1
 15294  011964  C077  F062         	movff	ultoa@v+2,___lldiv@dividend+2
 15295  011968  C078  F063         	movff	ultoa@v+3,___lldiv@dividend+3
 15296  01196C  C073  F064         	movff	ultoa@base,___lldiv@divisor
 15297  011970  C074  F065         	movff	ultoa@base+1,___lldiv@divisor+1
 15298  011974  0100               	movlb	0	; () banked
 15299  011976  0E00               	movlw	0
 15300  011978  BF65               	btfsc	(___lldiv@divisor+1)& (0+255),7,b
 15301  01197A  0EFF               	movlw	-1
 15302  01197C  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 15303  01197E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 15304  011980  EC53  F0A0         	call	___lldiv	;wreg free
 15305  011984  C060  F075         	movff	?___lldiv,ultoa@v
 15306  011988  C061  F076         	movff	?___lldiv+1,ultoa@v+1
 15307  01198C  C062  F077         	movff	?___lldiv+2,ultoa@v+2
 15308  011990  C063  F078         	movff	?___lldiv+3,ultoa@v+3
 15309  011994  0100               	movlb	0	; () banked
 15310  011996  4B6D               	infsnz	ultoa@buf& (0+255),f,b
 15311  011998  2B6E               	incf	(ultoa@buf+1)& (0+255),f,b
 15312                           
 15313                           ; BSR set to: 0
 15314  01199A  5175               	movf	ultoa@v& (0+255),w,b
 15315  01199C  1176               	iorwf	(ultoa@v+1)& (0+255),w,b
 15316  01199E  1177               	iorwf	(ultoa@v+2)& (0+255),w,b
 15317  0119A0  1178               	iorwf	(ultoa@v+3)& (0+255),w,b
 15318  0119A2  A4D8               	btfss	status,2,c
 15319  0119A4  D7DB               	goto	l3808
 15320                           
 15321                           ; BSR set to: 0
 15322                           
 15323                           ; BSR set to: 0
 15324  0119A6  C06D  FFD9         	movff	ultoa@buf,fsr2l
 15325  0119AA  C06E  FFDA         	movff	ultoa@buf+1,fsr2h
 15326  0119AE  0E00               	movlw	0
 15327  0119B0  6EDF               	movwf	indf2,c
 15328                           
 15329                           ; BSR set to: 0
 15330  0119B2  076D               	decf	ultoa@buf& (0+255),f,b
 15331  0119B4  A0D8               	btfss	status,0,c
 15332  0119B6  076E               	decf	(ultoa@buf+1)& (0+255),f,b
 15333  0119B8                     
 15334                           ; BSR set to: 0
 15335                           
 15336                           ; BSR set to: 0
 15337  0119B8  C06F  F060         	movff	ultoa@val,___llmod@dividend
 15338  0119BC  C070  F061         	movff	ultoa@val+1,___llmod@dividend+1
 15339  0119C0  C071  F062         	movff	ultoa@val+2,___llmod@dividend+2
 15340  0119C4  C072  F063         	movff	ultoa@val+3,___llmod@dividend+3
 15341  0119C8  C073  F064         	movff	ultoa@base,___llmod@divisor
 15342  0119CC  C074  F065         	movff	ultoa@base+1,___llmod@divisor+1
 15343  0119D0  0E00               	movlw	0
 15344  0119D2  BF65               	btfsc	(___llmod@divisor+1)& (0+255),7,b
 15345  0119D4  0EFF               	movlw	-1
 15346  0119D6  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
 15347  0119D8  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
 15348  0119DA  EC82  F0A4         	call	___llmod	;wreg free
 15349  0119DE  0100               	movlb	0	; () banked
 15350  0119E0  5160               	movf	?___llmod& (0+255),w,b
 15351  0119E2  6F79               	movwf	ultoa@c& (0+255),b
 15352                           
 15353                           ; BSR set to: 0
 15354  0119E4  C06F  F060         	movff	ultoa@val,___lldiv@dividend
 15355  0119E8  C070  F061         	movff	ultoa@val+1,___lldiv@dividend+1
 15356  0119EC  C071  F062         	movff	ultoa@val+2,___lldiv@dividend+2
 15357  0119F0  C072  F063         	movff	ultoa@val+3,___lldiv@dividend+3
 15358  0119F4  C073  F064         	movff	ultoa@base,___lldiv@divisor
 15359  0119F8  C074  F065         	movff	ultoa@base+1,___lldiv@divisor+1
 15360  0119FC  0E00               	movlw	0
 15361  0119FE  BF65               	btfsc	(___lldiv@divisor+1)& (0+255),7,b
 15362  011A00  0EFF               	movlw	-1
 15363  011A02  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 15364  011A04  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 15365  011A06  EC53  F0A0         	call	___lldiv	;wreg free
 15366  011A0A  C060  F06F         	movff	?___lldiv,ultoa@val
 15367  011A0E  C061  F070         	movff	?___lldiv+1,ultoa@val+1
 15368  011A12  C062  F071         	movff	?___lldiv+2,ultoa@val+2
 15369  011A16  C063  F072         	movff	?___lldiv+3,ultoa@val+3
 15370  011A1A  0E09               	movlw	9
 15371  011A1C  0100               	movlb	0	; () banked
 15372  011A1E  6579               	cpfsgt	ultoa@c& (0+255),b
 15373  011A20  D002               	goto	l3811
 15374                           
 15375                           ; BSR set to: 0
 15376  011A22  0E07               	movlw	7
 15377  011A24  2779               	addwf	ultoa@c& (0+255),f,b
 15378  011A26                     l3811:
 15379                           
 15380                           ; BSR set to: 0
 15381  011A26  0E30               	movlw	48
 15382  011A28  2779               	addwf	ultoa@c& (0+255),f,b
 15383                           
 15384                           ; BSR set to: 0
 15385  011A2A  C06D  FFD9         	movff	ultoa@buf,fsr2l
 15386  011A2E  C06E  FFDA         	movff	ultoa@buf+1,fsr2h
 15387  011A32  C079  FFDF         	movff	ultoa@c,indf2
 15388                           
 15389                           ; BSR set to: 0
 15390  011A36  076D               	decf	ultoa@buf& (0+255),f,b
 15391  011A38  A0D8               	btfss	status,0,c
 15392  011A3A  076E               	decf	(ultoa@buf+1)& (0+255),f,b
 15393                           
 15394                           ; BSR set to: 0
 15395  011A3C  516F               	movf	ultoa@val& (0+255),w,b
 15396  011A3E  1170               	iorwf	(ultoa@val+1)& (0+255),w,b
 15397  011A40  1171               	iorwf	(ultoa@val+2)& (0+255),w,b
 15398  011A42  1172               	iorwf	(ultoa@val+3)& (0+255),w,b
 15399  011A44  B4D8               	btfsc	status,2,c
 15400  011A46  0012               	return	
 15401  011A48  D7B7               	goto	l3810
 15402  011A4A                     __end_of_ultoa:
 15403                           	opt stack 0
 15404                           tblptru	equ	0xFF8
 15405                           tblptrh	equ	0xFF7
 15406                           tblptrl	equ	0xFF6
 15407                           tablat	equ	0xFF5
 15408                           prodh	equ	0xFF4
 15409                           prodl	equ	0xFF3
 15410                           postinc0	equ	0xFEE
 15411                           wreg	equ	0xFE8
 15412                           postdec1	equ	0xFE5
 15413                           plusw1	equ	0xFE3
 15414                           fsr1h	equ	0xFE2
 15415                           fsr1l	equ	0xFE1
 15416                           indf2	equ	0xFDF
 15417                           postinc2	equ	0xFDE
 15418                           plusw2	equ	0xFDB
 15419                           fsr2h	equ	0xFDA
 15420                           fsr2l	equ	0xFD9
 15421                           status	equ	0xFD8
 15422                           
 15423 ;; *************** function ___llmod *****************
 15424 ;; Defined at:
 15425 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\llmod.c"
 15426 ;; Parameters:    Size  Location     Type
 15427 ;;  dividend        4    0[BANK0 ] unsigned long 
 15428 ;;  divisor         4    4[BANK0 ] unsigned long 
 15429 ;; Auto vars:     Size  Location     Type
 15430 ;;  counter         1    8[BANK0 ] unsigned char 
 15431 ;; Return value:  Size  Location     Type
 15432 ;;                  4    0[BANK0 ] unsigned long 
 15433 ;; Registers used:
 15434 ;;		wreg, status,2, status,0
 15435 ;; Tracked objects:
 15436 ;;		On entry : 0/0
 15437 ;;		On exit  : 0/0
 15438 ;;		Unchanged: 0/0
 15439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15440 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15441 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15443 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15444 ;;Total ram usage:        9 bytes
 15445 ;; Hardware stack levels used:    1
 15446 ;; Hardware stack levels required when called:   10
 15447 ;; This function calls:
 15448 ;;		Nothing
 15449 ;; This function is called by:
 15450 ;;		_ultoa
 15451 ;; This function uses a non-reentrant model
 15452 ;;
 15453                           
 15454                           	psect	text55
 15455  014904                     __ptext55:
 15456                           	opt stack 0
 15457  014904                     ___llmod:
 15458                           	opt stack 15
 15459                           
 15460                           ; BSR set to: 0
 15461                           ;incstack = 0
 15462  014904  0100               	movlb	0	; () banked
 15463  014906  5164               	movf	___llmod@divisor& (0+255),w,b
 15464  014908  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 15465  01490A  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 15466  01490C  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 15467  01490E  B4D8               	btfsc	status,2,c
 15468  014910  D024               	goto	l3506
 15469                           
 15470                           ; BSR set to: 0
 15471  014912  0E01               	movlw	1
 15472  014914  6F68               	movwf	___llmod@counter& (0+255),b
 15473  014916  D006               	goto	l3501
 15474  014918                     
 15475                           ; BSR set to: 0
 15476                           
 15477                           ; BSR set to: 0
 15478  014918  90D8               	bcf	status,0,c
 15479  01491A  3764               	rlcf	___llmod@divisor& (0+255),f,b
 15480  01491C  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 15481  01491E  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 15482  014920  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 15483  014922  2B68               	incf	___llmod@counter& (0+255),f,b
 15484  014924                     l3501:
 15485                           
 15486                           ; BSR set to: 0
 15487                           
 15488                           ; BSR set to: 0
 15489  014924  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
 15490  014926  D7F8               	goto	l3502
 15491  014928                     u11910:
 15492                           
 15493                           ; BSR set to: 0
 15494                           
 15495                           ; BSR set to: 0
 15496                           
 15497                           ; BSR set to: 0
 15498  014928  5164               	movf	___llmod@divisor& (0+255),w,b
 15499  01492A  5D60               	subwf	___llmod@dividend& (0+255),w,b
 15500  01492C  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 15501  01492E  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 15502  014930  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 15503  014932  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 15504  014934  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 15505  014936  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 15506  014938  A0D8               	btfss	status,0,c
 15507  01493A  D008               	goto	l3505
 15508                           
 15509                           ; BSR set to: 0
 15510  01493C  5164               	movf	___llmod@divisor& (0+255),w,b
 15511  01493E  5F60               	subwf	___llmod@dividend& (0+255),f,b
 15512  014940  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 15513  014942  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 15514  014944  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 15515  014946  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 15516  014948  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 15517  01494A  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 15518  01494C                     l3505:
 15519                           
 15520                           ; BSR set to: 0
 15521                           
 15522                           ; BSR set to: 0
 15523  01494C  90D8               	bcf	status,0,c
 15524  01494E  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 15525  014950  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 15526  014952  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 15527  014954  3364               	rrcf	___llmod@divisor& (0+255),f,b
 15528                           
 15529                           ; BSR set to: 0
 15530  014956  2F68               	decfsz	___llmod@counter& (0+255),f,b
 15531  014958  D7E7               	goto	u11910
 15532  01495A                     l3506:
 15533                           
 15534                           ; BSR set to: 0
 15535                           
 15536                           ; BSR set to: 0
 15537  01495A  C060  F060         	movff	___llmod@dividend,?___llmod
 15538  01495E  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
 15539  014962  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
 15540  014966  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
 15541                           
 15542                           ; BSR set to: 0
 15543  01496A  0012               	return		;funcret
 15544  01496C                     __end_of___llmod:
 15545                           	opt stack 0
 15546                           tblptru	equ	0xFF8
 15547                           tblptrh	equ	0xFF7
 15548                           tblptrl	equ	0xFF6
 15549                           tablat	equ	0xFF5
 15550                           prodh	equ	0xFF4
 15551                           prodl	equ	0xFF3
 15552                           postinc0	equ	0xFEE
 15553                           wreg	equ	0xFE8
 15554                           postdec1	equ	0xFE5
 15555                           plusw1	equ	0xFE3
 15556                           fsr1h	equ	0xFE2
 15557                           fsr1l	equ	0xFE1
 15558                           indf2	equ	0xFDF
 15559                           postinc2	equ	0xFDE
 15560                           plusw2	equ	0xFDB
 15561                           fsr2h	equ	0xFDA
 15562                           fsr2l	equ	0xFD9
 15563                           status	equ	0xFD8
 15564                           
 15565 ;; *************** function ___lldiv *****************
 15566 ;; Defined at:
 15567 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
 15568 ;; Parameters:    Size  Location     Type
 15569 ;;  dividend        4    0[BANK0 ] unsigned long 
 15570 ;;  divisor         4    4[BANK0 ] unsigned long 
 15571 ;; Auto vars:     Size  Location     Type
 15572 ;;  quotient        4    8[BANK0 ] unsigned long 
 15573 ;;  counter         1   12[BANK0 ] unsigned char 
 15574 ;; Return value:  Size  Location     Type
 15575 ;;                  4    0[BANK0 ] unsigned long 
 15576 ;; Registers used:
 15577 ;;		wreg, status,2, status,0
 15578 ;; Tracked objects:
 15579 ;;		On entry : 0/0
 15580 ;;		On exit  : 0/0
 15581 ;;		Unchanged: 0/0
 15582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15583 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15584 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15586 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15587 ;;Total ram usage:       13 bytes
 15588 ;; Hardware stack levels used:    1
 15589 ;; Hardware stack levels required when called:   10
 15590 ;; This function calls:
 15591 ;;		Nothing
 15592 ;; This function is called by:
 15593 ;;		_ultoa
 15594 ;; This function uses a non-reentrant model
 15595 ;;
 15596                           
 15597                           	psect	text56
 15598  0140A6                     __ptext56:
 15599                           	opt stack 0
 15600  0140A6                     ___lldiv:
 15601                           	opt stack 15
 15602                           
 15603                           ; BSR set to: 0
 15604                           ;incstack = 0
 15605  0140A6  0E00               	movlw	0
 15606  0140A8  0100               	movlb	0	; () banked
 15607  0140AA  6F68               	movwf	___lldiv@quotient& (0+255),b
 15608  0140AC  0E00               	movlw	0
 15609  0140AE  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 15610  0140B0  0E00               	movlw	0
 15611  0140B2  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 15612  0140B4  0E00               	movlw	0
 15613  0140B6  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 15614                           
 15615                           ; BSR set to: 0
 15616  0140B8  5164               	movf	___lldiv@divisor& (0+255),w,b
 15617  0140BA  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 15618  0140BC  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 15619  0140BE  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 15620  0140C0  B4D8               	btfsc	status,2,c
 15621  0140C2  D02A               	goto	l3125
 15622                           
 15623                           ; BSR set to: 0
 15624  0140C4  0E01               	movlw	1
 15625  0140C6  6F6C               	movwf	___lldiv@counter& (0+255),b
 15626  0140C8  D006               	goto	l3120
 15627  0140CA                     
 15628                           ; BSR set to: 0
 15629                           
 15630                           ; BSR set to: 0
 15631  0140CA  90D8               	bcf	status,0,c
 15632  0140CC  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 15633  0140CE  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 15634  0140D0  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 15635  0140D2  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 15636  0140D4  2B6C               	incf	___lldiv@counter& (0+255),f,b
 15637  0140D6                     l3120:
 15638                           
 15639                           ; BSR set to: 0
 15640                           
 15641                           ; BSR set to: 0
 15642  0140D6  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 15643  0140D8  D7F8               	goto	l3121
 15644  0140DA                     u11880:
 15645                           
 15646                           ; BSR set to: 0
 15647                           
 15648                           ; BSR set to: 0
 15649                           
 15650                           ; BSR set to: 0
 15651  0140DA  90D8               	bcf	status,0,c
 15652  0140DC  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 15653  0140DE  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 15654  0140E0  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 15655  0140E2  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 15656                           
 15657                           ; BSR set to: 0
 15658  0140E4  5164               	movf	___lldiv@divisor& (0+255),w,b
 15659  0140E6  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 15660  0140E8  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 15661  0140EA  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 15662  0140EC  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 15663  0140EE  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 15664  0140F0  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 15665  0140F2  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 15666  0140F4  A0D8               	btfss	status,0,c
 15667  0140F6  D009               	goto	l3124
 15668                           
 15669                           ; BSR set to: 0
 15670  0140F8  5164               	movf	___lldiv@divisor& (0+255),w,b
 15671  0140FA  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 15672  0140FC  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 15673  0140FE  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 15674  014100  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 15675  014102  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 15676  014104  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 15677  014106  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 15678                           
 15679                           ; BSR set to: 0
 15680  014108  8168               	bsf	___lldiv@quotient& (0+255),0,b
 15681  01410A                     l3124:
 15682                           
 15683                           ; BSR set to: 0
 15684                           
 15685                           ; BSR set to: 0
 15686  01410A  90D8               	bcf	status,0,c
 15687  01410C  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 15688  01410E  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 15689  014110  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 15690  014112  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 15691                           
 15692                           ; BSR set to: 0
 15693  014114  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 15694  014116  D7E1               	goto	u11880
 15695  014118                     l3125:
 15696                           
 15697                           ; BSR set to: 0
 15698                           
 15699                           ; BSR set to: 0
 15700  014118  C068  F060         	movff	___lldiv@quotient,?___lldiv
 15701  01411C  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 15702  014120  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 15703  014124  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 15704                           
 15705                           ; BSR set to: 0
 15706  014128  0012               	return		;funcret
 15707  01412A                     __end_of___lldiv:
 15708                           	opt stack 0
 15709                           tblptru	equ	0xFF8
 15710                           tblptrh	equ	0xFF7
 15711                           tblptrl	equ	0xFF6
 15712                           tablat	equ	0xFF5
 15713                           prodh	equ	0xFF4
 15714                           prodl	equ	0xFF3
 15715                           postinc0	equ	0xFEE
 15716                           wreg	equ	0xFE8
 15717                           postdec1	equ	0xFE5
 15718                           plusw1	equ	0xFE3
 15719                           fsr1h	equ	0xFE2
 15720                           fsr1l	equ	0xFE1
 15721                           indf2	equ	0xFDF
 15722                           postinc2	equ	0xFDE
 15723                           plusw2	equ	0xFDB
 15724                           fsr2h	equ	0xFDA
 15725                           fsr2l	equ	0xFD9
 15726                           status	equ	0xFD8
 15727                           
 15728 ;; *************** function _configFile_readDefault *****************
 15729 ;; Defined at:
 15730 ;;		line 251 in file "config_file.c"
 15731 ;; Parameters:    Size  Location     Type
 15732 ;;		None
 15733 ;; Auto vars:     Size  Location     Type
 15734 ;;		None
 15735 ;; Return value:  Size  Location     Type
 15736 ;;                  1    wreg      void 
 15737 ;; Registers used:
 15738 ;;		wreg, status,2
 15739 ;; Tracked objects:
 15740 ;;		On entry : 0/0
 15741 ;;		On exit  : 0/0
 15742 ;;		Unchanged: 0/0
 15743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15748 ;;Total ram usage:        0 bytes
 15749 ;; Hardware stack levels used:    1
 15750 ;; Hardware stack levels required when called:   10
 15751 ;; This function calls:
 15752 ;;		Nothing
 15753 ;; This function is called by:
 15754 ;;		_system_init
 15755 ;; This function uses a non-reentrant model
 15756 ;;
 15757                           
 15758                           	psect	text57
 15759  014516                     __ptext57:
 15760                           	opt stack 0
 15761  014516                     _configFile_readDefault:
 15762                           	opt stack 19
 15763                           
 15764                           ;config_file.c: 253: config.full_circle_in_steps = 576000;
 15765                           
 15766                           ; BSR set to: 0
 15767                           ;incstack = 0
 15768  014516  0E00               	movlw	0
 15769  014518  0101               	movlb	1	; () banked
 15770  01451A  6F96               	movwf	_config& (0+255),b
 15771  01451C  0ECA               	movlw	202
 15772  01451E  6F97               	movwf	(_config+1)& (0+255),b
 15773  014520  0E08               	movlw	8
 15774  014522  6F98               	movwf	(_config+2)& (0+255),b
 15775  014524  0E00               	movlw	0
 15776  014526  6F99               	movwf	(_config+3)& (0+255),b
 15777                           
 15778                           ;config_file.c: 254: config.inverse_direction = 1;
 15779  014528  0E01               	movlw	1
 15780  01452A  6F9A               	movwf	(_config+4)& (0+255),b
 15781                           
 15782                           ;config_file.c: 255: config.overshoot_in_steps = 6400;
 15783  01452C  0E19               	movlw	25
 15784  01452E  6F9C               	movwf	(_config+6)& (0+255),b
 15785  014530  0E00               	movlw	0
 15786  014532  6F9B               	movwf	(_config+5)& (0+255),b
 15787                           
 15788                           ;config_file.c: 256: config.overshoot_cost_in_steps = 3000;
 15789  014534  0E0B               	movlw	11
 15790  014536  6F9E               	movwf	(_config+8)& (0+255),b
 15791  014538  0EB8               	movlw	184
 15792  01453A  6F9D               	movwf	(_config+7)& (0+255),b
 15793                           
 15794                           ;config_file.c: 257: config.minimum_speed = 1;
 15795  01453C  0E00               	movlw	0
 15796  01453E  6FA0               	movwf	(_config+10)& (0+255),b
 15797  014540  0E01               	movlw	1
 15798  014542  6F9F               	movwf	(_config+9)& (0+255),b
 15799                           
 15800                           ;config_file.c: 258: config.maximum_speed = 380;
 15801  014544  0E01               	movlw	1
 15802  014546  6FA2               	movwf	(_config+12)& (0+255),b
 15803  014548  0E7C               	movlw	124
 15804  01454A  6FA1               	movwf	(_config+11)& (0+255),b
 15805                           
 15806                           ;config_file.c: 259: config.maximum_speed_arc = 305;
 15807  01454C  0E01               	movlw	1
 15808  01454E  6FA6               	movwf	(_config+16)& (0+255),b
 15809  014550  0E31               	movlw	49
 15810  014552  6FA5               	movwf	(_config+15)& (0+255),b
 15811                           
 15812                           ;config_file.c: 260: config.maximum_speed_manual = 305;
 15813  014554  0E01               	movlw	1
 15814  014556  6FAA               	movwf	(_config+20)& (0+255),b
 15815  014558  0E31               	movlw	49
 15816  01455A  6FA9               	movwf	(_config+19)& (0+255),b
 15817                           
 15818                           ;config_file.c: 261: config.use_ccw_limit = 0;
 15819  01455C  0E00               	movlw	0
 15820  01455E  6FB5               	movwf	(_config+31)& (0+255),b
 15821                           
 15822                           ;config_file.c: 262: config.ccw_limit = 35500;
 15823  014560  0EAC               	movlw	172
 15824  014562  6FB6               	movwf	(_config+32)& (0+255),b
 15825  014564  0E8A               	movlw	138
 15826  014566  6FB7               	movwf	(_config+33)& (0+255),b
 15827  014568  0E00               	movlw	0
 15828  01456A  6FB8               	movwf	(_config+34)& (0+255),b
 15829  01456C  0E00               	movlw	0
 15830  01456E  6FB9               	movwf	(_config+35)& (0+255),b
 15831                           
 15832                           ;config_file.c: 263: config.use_cw_limit = 0;
 15833  014570  0E00               	movlw	0
 15834  014572  6FAC               	movwf	(_config+22)& (0+255),b
 15835                           
 15836                           ;config_file.c: 264: config.cw_limit = 500;
 15837  014574  0EF4               	movlw	244
 15838  014576  6FAD               	movwf	(_config+23)& (0+255),b
 15839  014578  0E01               	movlw	1
 15840  01457A  6FAE               	movwf	(_config+24)& (0+255),b
 15841  01457C  0E00               	movlw	0
 15842  01457E  6FAF               	movwf	(_config+25)& (0+255),b
 15843  014580  0E00               	movlw	0
 15844  014582  6FB0               	movwf	(_config+26)& (0+255),b
 15845                           
 15846                           ;config_file.c: 265: config.beep_duration = 10;
 15847  014584  0E0A               	movlw	10
 15848  014586  6FAB               	movwf	(_config+21)& (0+255),b
 15849                           
 15850                           ;config_file.c: 266: config.position_display_180 = 0;
 15851  014588  0E00               	movlw	0
 15852  01458A  6FBE               	movwf	(_config+40)& (0+255),b
 15853                           
 15854                           ; BSR set to: 1
 15855  01458C  0012               	return		;funcret
 15856  01458E                     __end_of_configFile_readDefault:
 15857                           	opt stack 0
 15858                           tblptru	equ	0xFF8
 15859                           tblptrh	equ	0xFF7
 15860                           tblptrl	equ	0xFF6
 15861                           tablat	equ	0xFF5
 15862                           prodh	equ	0xFF4
 15863                           prodl	equ	0xFF3
 15864                           postinc0	equ	0xFEE
 15865                           wreg	equ	0xFE8
 15866                           postdec1	equ	0xFE5
 15867                           plusw1	equ	0xFE3
 15868                           fsr1h	equ	0xFE2
 15869                           fsr1l	equ	0xFE1
 15870                           indf2	equ	0xFDF
 15871                           postinc2	equ	0xFDE
 15872                           plusw2	equ	0xFDB
 15873                           fsr2h	equ	0xFDA
 15874                           fsr2l	equ	0xFD9
 15875                           status	equ	0xFD8
 15876                           
 15877 ;; *************** function _configFile_read *****************
 15878 ;; Defined at:
 15879 ;;		line 270 in file "config_file.c"
 15880 ;; Parameters:    Size  Location     Type
 15881 ;;		None
 15882 ;; Auto vars:     Size  Location     Type
 15883 ;;  item_string    31    8[BANK1 ] unsigned char [31]
 15884 ;;  value_string   12   39[BANK1 ] unsigned char [12]
 15885 ;;  position        4   56[BANK1 ] unsigned long 
 15886 ;;  file_size       4   51[BANK1 ] unsigned long 
 15887 ;;  file_number     1   55[BANK1 ] unsigned char 
 15888 ;; Return value:  Size  Location     Type
 15889 ;;                  1    wreg      void 
 15890 ;; Registers used:
 15891 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15892 ;; Tracked objects:
 15893 ;;		On entry : 0/0
 15894 ;;		On exit  : 0/0
 15895 ;;		Unchanged: 0/0
 15896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15898 ;;      Locals:         0       0      52       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15899 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15900 ;;      Totals:         0       0      60       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15901 ;;Total ram usage:       60 bytes
 15902 ;; Hardware stack levels used:    1
 15903 ;; Hardware stack levels required when called:   19
 15904 ;; This function calls:
 15905 ;;		__get_item
 15906 ;;		__parse_item
 15907 ;;		_fat_find_file
 15908 ;;		_fat_get_file_size
 15909 ;;		_fat_read_from_file
 15910 ;; This function is called by:
 15911 ;;		_system_init
 15912 ;; This function uses a non-reentrant model
 15913 ;;
 15914                           
 15915                           	psect	text58
 15916  00F394                     __ptext58:
 15917                           	opt stack 0
 15918  00F394                     _configFile_read:
 15919                           	opt stack 10
 15920                           
 15921                           ;config_file.c: 272: uint8_t file_number;;config_file.c: 273: uint32_t file_size;;config
      +                          _file.c: 274: uint32_t position;;config_file.c: 275: char item_string[31];;config_file.c
      +                          : 276: char value_string[12];;config_file.c: 279: file_number = fat_find_file(&configFil
      +                          e_name, &configFile_extention);
 15922                           
 15923                           ; BSR set to: 1
 15924                           ;incstack = 0
 15925  00F394  0EDC               	movlw	low _configFile_name
 15926  00F396  0100               	movlb	0	; () banked
 15927  00F398  6F8B               	movwf	fat_find_file@name& (0+255),b
 15928  00F39A  0E02               	movlw	high _configFile_name
 15929  00F39C  6F8C               	movwf	(fat_find_file@name+1)& (0+255),b
 15930  00F39E  0EE7               	movlw	low _configFile_extention
 15931  00F3A0  6F8D               	movwf	fat_find_file@extension& (0+255),b
 15932  00F3A2  0E02               	movlw	high _configFile_extention
 15933  00F3A4  6F8E               	movwf	(fat_find_file@extension+1)& (0+255),b
 15934  00F3A6  EC86  F08F         	call	_fat_find_file	;wreg free
 15935  00F3AA  0101               	movlb	1	; () banked
 15936  00F3AC  6FFB               	movwf	configFile_read@file_number& (0+255),b
 15937                           
 15938                           ; BSR set to: 1
 15939                           ;config_file.c: 280: if(file_number==0xFF)
 15940  00F3AE  29FB               	incf	configFile_read@file_number& (0+255),w,b
 15941  00F3B0  B4D8               	btfsc	status,2,c
 15942  00F3B2  0012               	return	
 15943                           
 15944                           ; BSR set to: 1
 15945                           ;config_file.c: 284: };config_file.c: 287: file_size = fat_get_file_size(file_number);
 15946                           
 15947                           ; BSR set to: 1
 15948                           
 15949                           ; BSR set to: 1
 15950                           ;config_file.c: 281: {;config_file.c: 283: return;
 15951  00F3B4  51FB               	movf	configFile_read@file_number& (0+255),w,b
 15952  00F3B6  EC11  F0A2         	call	_fat_get_file_size
 15953  00F3BA  C095  F1F7         	movff	?_fat_get_file_size,configFile_read@file_size
 15954  00F3BE  C096  F1F8         	movff	?_fat_get_file_size+1,configFile_read@file_size+1
 15955  00F3C2  C097  F1F9         	movff	?_fat_get_file_size+2,configFile_read@file_size+2
 15956  00F3C6  C098  F1FA         	movff	?_fat_get_file_size+3,configFile_read@file_size+3
 15957                           
 15958                           ;config_file.c: 290: position = 0;
 15959  00F3CA  0E00               	movlw	0
 15960  00F3CC  0101               	movlb	1	; () banked
 15961  00F3CE  6FFC               	movwf	configFile_read@position& (0+255),b
 15962  00F3D0  0E00               	movlw	0
 15963  00F3D2  6FFD               	movwf	(configFile_read@position+1)& (0+255),b
 15964  00F3D4  0E00               	movlw	0
 15965  00F3D6  6FFE               	movwf	(configFile_read@position+2)& (0+255),b
 15966  00F3D8  0E00               	movlw	0
 15967  00F3DA  6FFF               	movwf	(configFile_read@position+3)& (0+255),b
 15968                           
 15969                           ;config_file.c: 291: while((file_size-position)>3)
 15970  00F3DC  D086               	goto	l3080
 15971  00F3DE                     
 15972                           ; BSR set to: 1
 15973                           ;config_file.c: 292: {;config_file.c: 293: if((position+45) > file_size)
 15974                           
 15975                           ; BSR set to: 1
 15976  00F3DE  0E2D               	movlw	45
 15977  00F3E0  25FC               	addwf	configFile_read@position& (0+255),w,b
 15978  00F3E2  6FC4               	movwf	??_configFile_read& (0+255),b
 15979  00F3E4  0E00               	movlw	0
 15980  00F3E6  21FD               	addwfc	(configFile_read@position+1)& (0+255),w,b
 15981  00F3E8  6FC5               	movwf	(??_configFile_read+1)& (0+255),b
 15982  00F3EA  0E00               	movlw	0
 15983  00F3EC  21FE               	addwfc	(configFile_read@position+2)& (0+255),w,b
 15984  00F3EE  6FC6               	movwf	(??_configFile_read+2)& (0+255),b
 15985  00F3F0  0E00               	movlw	0
 15986  00F3F2  21FF               	addwfc	(configFile_read@position+3)& (0+255),w,b
 15987  00F3F4  6FC7               	movwf	(??_configFile_read+3)& (0+255),b
 15988  00F3F6  51C4               	movf	??_configFile_read& (0+255),w,b
 15989  00F3F8  5DF7               	subwf	configFile_read@file_size& (0+255),w,b
 15990  00F3FA  51C5               	movf	(??_configFile_read+1)& (0+255),w,b
 15991  00F3FC  59F8               	subwfb	(configFile_read@file_size+1)& (0+255),w,b
 15992  00F3FE  51C6               	movf	(??_configFile_read+2)& (0+255),w,b
 15993  00F400  59F9               	subwfb	(configFile_read@file_size+2)& (0+255),w,b
 15994  00F402  51C7               	movf	(??_configFile_read+3)& (0+255),w,b
 15995  00F404  59FA               	subwfb	(configFile_read@file_size+3)& (0+255),w,b
 15996  00F406  B0D8               	btfsc	status,0,c
 15997  00F408  D035               	goto	l3082
 15998                           
 15999                           ; BSR set to: 1
 16000                           ;config_file.c: 294: {;config_file.c: 296: fat_read_from_file(file_number, position, fil
      +                          e_size-position, &ConfigFile_buffer[0]);
 16001  00F40A  C1FC  F0C9         	movff	configFile_read@position,fat_read_from_file@start_byte
 16002  00F40E  C1FD  F0CA         	movff	configFile_read@position+1,fat_read_from_file@start_byte+1
 16003  00F412  C1FE  F0CB         	movff	configFile_read@position+2,fat_read_from_file@start_byte+2
 16004  00F416  C1FF  F0CC         	movff	configFile_read@position+3,fat_read_from_file@start_byte+3
 16005  00F41A  C1FC  F1C4         	movff	configFile_read@position,??_configFile_read
 16006  00F41E  C1FD  F1C5         	movff	configFile_read@position+1,??_configFile_read+1
 16007  00F422  C1FE  F1C6         	movff	configFile_read@position+2,??_configFile_read+2
 16008  00F426  C1FF  F1C7         	movff	configFile_read@position+3,??_configFile_read+3
 16009  00F42A  1FC4               	comf	??_configFile_read& (0+255),f,b
 16010  00F42C  1FC5               	comf	(??_configFile_read+1)& (0+255),f,b
 16011  00F42E  1FC6               	comf	(??_configFile_read+2)& (0+255),f,b
 16012  00F430  1FC7               	comf	(??_configFile_read+3)& (0+255),f,b
 16013  00F432  2BC4               	incf	??_configFile_read& (0+255),f,b
 16014  00F434  0E00               	movlw	0
 16015  00F436  23C5               	addwfc	(??_configFile_read+1)& (0+255),f,b
 16016  00F438  23C6               	addwfc	(??_configFile_read+2)& (0+255),f,b
 16017  00F43A  23C7               	addwfc	(??_configFile_read+3)& (0+255),f,b
 16018  00F43C  51F7               	movf	configFile_read@file_size& (0+255),w,b
 16019  00F43E  25C4               	addwf	??_configFile_read& (0+255),w,b
 16020  00F440  0100               	movlb	0	; () banked
 16021  00F442  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 16022  00F444  0101               	movlb	1	; () banked
 16023  00F446  51F8               	movf	(configFile_read@file_size+1)& (0+255),w,b
 16024  00F448  21C5               	addwfc	(??_configFile_read+1)& (0+255),w,b
 16025  00F44A  0100               	movlb	0	; () banked
 16026  00F44C  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 16027  00F44E  0101               	movlb	1	; () banked
 16028  00F450  51F9               	movf	(configFile_read@file_size+2)& (0+255),w,b
 16029  00F452  21C6               	addwfc	(??_configFile_read+2)& (0+255),w,b
 16030  00F454  0100               	movlb	0	; () banked
 16031  00F456  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 16032  00F458  0101               	movlb	1	; () banked
 16033  00F45A  51FA               	movf	(configFile_read@file_size+3)& (0+255),w,b
 16034  00F45C  21C7               	addwfc	(??_configFile_read+3)& (0+255),w,b
 16035  00F45E  0100               	movlb	0	; () banked
 16036  00F460  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 16037  00F462  0E00               	movlw	low _ConfigFile_buffer
 16038  00F464  6FD1               	movwf	fat_read_from_file@data& (0+255),b
 16039  00F466  0E08               	movlw	high _ConfigFile_buffer
 16040  00F468  6FD2               	movwf	(fat_read_from_file@data+1)& (0+255),b
 16041  00F46A  0101               	movlb	1	; () banked
 16042  00F46C  51FB               	movf	configFile_read@file_number& (0+255),w,b
 16043  00F46E  ECFA  F08F         	call	_fat_read_from_file
 16044                           
 16045                           ;config_file.c: 297: }
 16046  00F472  D019               	goto	l3083
 16047  00F474                     l3082:
 16048                           
 16049                           ;config_file.c: 298: else;config_file.c: 299: {;config_file.c: 301: fat_read_from_file(f
      +                          ile_number, position, 45, &ConfigFile_buffer[0]);
 16050  00F474  C1FC  F0C9         	movff	configFile_read@position,fat_read_from_file@start_byte
 16051  00F478  C1FD  F0CA         	movff	configFile_read@position+1,fat_read_from_file@start_byte+1
 16052  00F47C  C1FE  F0CB         	movff	configFile_read@position+2,fat_read_from_file@start_byte+2
 16053  00F480  C1FF  F0CC         	movff	configFile_read@position+3,fat_read_from_file@start_byte+3
 16054  00F484  0E2D               	movlw	45
 16055  00F486  0100               	movlb	0	; () banked
 16056  00F488  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 16057  00F48A  0E00               	movlw	0
 16058  00F48C  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 16059  00F48E  0E00               	movlw	0
 16060  00F490  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 16061  00F492  0E00               	movlw	0
 16062  00F494  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 16063  00F496  0E00               	movlw	low _ConfigFile_buffer
 16064  00F498  6FD1               	movwf	fat_read_from_file@data& (0+255),b
 16065  00F49A  0E08               	movlw	high _ConfigFile_buffer
 16066  00F49C  6FD2               	movwf	(fat_read_from_file@data+1)& (0+255),b
 16067  00F49E  0101               	movlb	1	; () banked
 16068  00F4A0  51FB               	movf	configFile_read@file_number& (0+255),w,b
 16069  00F4A2  ECFA  F08F         	call	_fat_read_from_file
 16070  00F4A6                     l3083:
 16071                           
 16072                           ;config_file.c: 302: };config_file.c: 305: position += _get_item(&item_string[0], &value
      +                          _string[0], &ConfigFile_buffer[0]);
 16073  00F4A6  0ECC               	movlw	low configFile_read@item_string
 16074  00F4A8  0100               	movlb	0	; () banked
 16075  00F4AA  6F60               	movwf	__get_item@item_string& (0+255),b
 16076  00F4AC  0E01               	movlw	high configFile_read@item_string
 16077  00F4AE  6F61               	movwf	(__get_item@item_string+1)& (0+255),b
 16078  00F4B0  0EEB               	movlw	low configFile_read@value_string
 16079  00F4B2  6F62               	movwf	__get_item@value_string& (0+255),b
 16080  00F4B4  0E01               	movlw	high configFile_read@value_string
 16081  00F4B6  6F63               	movwf	(__get_item@value_string+1)& (0+255),b
 16082  00F4B8  0E00               	movlw	low _ConfigFile_buffer
 16083  00F4BA  6F64               	movwf	__get_item@buffer& (0+255),b
 16084  00F4BC  0E08               	movlw	high _ConfigFile_buffer
 16085  00F4BE  6F65               	movwf	(__get_item@buffer+1)& (0+255),b
 16086  00F4C0  EC67  F07B         	call	__get_item	;wreg free
 16087  00F4C4  0101               	movlb	1	; () banked
 16088  00F4C6  6FC4               	movwf	??_configFile_read& (0+255),b
 16089  00F4C8  51C4               	movf	??_configFile_read& (0+255),w,b
 16090  00F4CA  27FC               	addwf	configFile_read@position& (0+255),f,b
 16091  00F4CC  0E00               	movlw	0
 16092  00F4CE  23FD               	addwfc	(configFile_read@position+1)& (0+255),f,b
 16093  00F4D0  23FE               	addwfc	(configFile_read@position+2)& (0+255),f,b
 16094  00F4D2  23FF               	addwfc	(configFile_read@position+3)& (0+255),f,b
 16095                           
 16096                           ; BSR set to: 1
 16097                           ;config_file.c: 308: _parse_item(&item_string[0], &value_string[0]);
 16098  00F4D4  0ECC               	movlw	low configFile_read@item_string
 16099  00F4D6  0100               	movlb	0	; () banked
 16100  00F4D8  6F99               	movwf	__parse_item@item_string& (0+255),b
 16101  00F4DA  0E01               	movlw	high configFile_read@item_string
 16102  00F4DC  6F9A               	movwf	(__parse_item@item_string+1)& (0+255),b
 16103  00F4DE  0EEB               	movlw	low configFile_read@value_string
 16104  00F4E0  6F9B               	movwf	__parse_item@value_string& (0+255),b
 16105  00F4E2  0E01               	movlw	high configFile_read@value_string
 16106  00F4E4  6F9C               	movwf	(__parse_item@value_string+1)& (0+255),b
 16107  00F4E6  ECF1  F05E         	call	__parse_item	;wreg free
 16108  00F4EA                     l3080:
 16109  00F4EA  C1FC  F1C4         	movff	configFile_read@position,??_configFile_read
 16110  00F4EE  C1FD  F1C5         	movff	configFile_read@position+1,??_configFile_read+1
 16111  00F4F2  C1FE  F1C6         	movff	configFile_read@position+2,??_configFile_read+2
 16112  00F4F6  C1FF  F1C7         	movff	configFile_read@position+3,??_configFile_read+3
 16113  00F4FA  0101               	movlb	1	; () banked
 16114  00F4FC  1FC4               	comf	??_configFile_read& (0+255),f,b
 16115  00F4FE  1FC5               	comf	(??_configFile_read+1)& (0+255),f,b
 16116  00F500  1FC6               	comf	(??_configFile_read+2)& (0+255),f,b
 16117  00F502  1FC7               	comf	(??_configFile_read+3)& (0+255),f,b
 16118  00F504  2BC4               	incf	??_configFile_read& (0+255),f,b
 16119  00F506  0E00               	movlw	0
 16120  00F508  23C5               	addwfc	(??_configFile_read+1)& (0+255),f,b
 16121  00F50A  23C6               	addwfc	(??_configFile_read+2)& (0+255),f,b
 16122  00F50C  23C7               	addwfc	(??_configFile_read+3)& (0+255),f,b
 16123  00F50E  51F7               	movf	configFile_read@file_size& (0+255),w,b
 16124  00F510  25C4               	addwf	??_configFile_read& (0+255),w,b
 16125  00F512  6FC8               	movwf	(??_configFile_read+4)& (0+255),b
 16126  00F514  51F8               	movf	(configFile_read@file_size+1)& (0+255),w,b
 16127  00F516  21C5               	addwfc	(??_configFile_read+1)& (0+255),w,b
 16128  00F518  6FC9               	movwf	(??_configFile_read+5)& (0+255),b
 16129  00F51A  51F9               	movf	(configFile_read@file_size+2)& (0+255),w,b
 16130  00F51C  21C6               	addwfc	(??_configFile_read+2)& (0+255),w,b
 16131  00F51E  6FCA               	movwf	(??_configFile_read+6)& (0+255),b
 16132  00F520  51FA               	movf	(configFile_read@file_size+3)& (0+255),w,b
 16133  00F522  21C7               	addwfc	(??_configFile_read+3)& (0+255),w,b
 16134  00F524  6FCB               	movwf	(??_configFile_read+7)& (0+255),b
 16135  00F526  51CB               	movf	(??_configFile_read+7)& (0+255),w,b
 16136  00F528  11CA               	iorwf	(??_configFile_read+6)& (0+255),w,b
 16137  00F52A  11C9               	iorwf	(??_configFile_read+5)& (0+255),w,b
 16138  00F52C  E104               	bnz	u17041
 16139  00F52E  0E04               	movlw	4
 16140  00F530  5DC8               	subwf	(??_configFile_read+4)& (0+255),w,b
 16141  00F532  A0D8               	btfss	status,0,c
 16142  00F534  0012               	return	
 16143  00F536                     u17041:
 16144  00F536  D753               	goto	l3081
 16145  00F538                     __end_of_configFile_read:
 16146                           	opt stack 0
 16147                           tblptru	equ	0xFF8
 16148                           tblptrh	equ	0xFF7
 16149                           tblptrl	equ	0xFF6
 16150                           tablat	equ	0xFF5
 16151                           prodh	equ	0xFF4
 16152                           prodl	equ	0xFF3
 16153                           postinc0	equ	0xFEE
 16154                           wreg	equ	0xFE8
 16155                           postdec1	equ	0xFE5
 16156                           plusw1	equ	0xFE3
 16157                           fsr1h	equ	0xFE2
 16158                           fsr1l	equ	0xFE1
 16159                           indf2	equ	0xFDF
 16160                           postinc2	equ	0xFDE
 16161                           plusw2	equ	0xFDB
 16162                           fsr2h	equ	0xFDA
 16163                           fsr2l	equ	0xFD9
 16164                           status	equ	0xFD8
 16165                           
 16166 ;; *************** function _fat_read_from_file *****************
 16167 ;; Defined at:
 16168 ;;		line 752 in file "fat16.c"
 16169 ;; Parameters:    Size  Location     Type
 16170 ;;  file_number     1    wreg     unsigned char 
 16171 ;;  start_byte      4  105[BANK0 ] unsigned long 
 16172 ;;  length          4  109[BANK0 ] unsigned long 
 16173 ;;  data            2  113[BANK0 ] PTR unsigned char 
 16174 ;;		 -> ConfigFile_buffer(512), 
 16175 ;; Auto vars:     Size  Location     Type
 16176 ;;  file_number     1  119[BANK0 ] unsigned char 
 16177 ;;  root           32  125[BANK0 ] struct .
 16178 ;;  cluster_numb    2  123[BANK0 ] unsigned int 
 16179 ;;  cluster         2  121[BANK0 ] unsigned int 
 16180 ;;  return_code     1  120[BANK0 ] unsigned char 
 16181 ;; Return value:  Size  Location     Type
 16182 ;;                  1    wreg      unsigned char 
 16183 ;; Registers used:
 16184 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16185 ;; Tracked objects:
 16186 ;;		On entry : 0/0
 16187 ;;		On exit  : 0/0
 16188 ;;		Unchanged: 0/0
 16189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16190 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16191 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16192 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16193 ;;      Totals:         0      52       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16194 ;;Total ram usage:       52 bytes
 16195 ;; Hardware stack levels used:    1
 16196 ;; Hardware stack levels required when called:   18
 16197 ;; This function calls:
 16198 ;;		_fat_get_file_information
 16199 ;;		_fat_read_from_file_fast
 16200 ;; This function is called by:
 16201 ;;		_configFile_read
 16202 ;; This function uses a non-reentrant model
 16203 ;;
 16204                           
 16205                           	psect	text59
 16206  011FF4                     __ptext59:
 16207                           	opt stack 0
 16208  011FF4                     _fat_read_from_file:
 16209                           	opt stack 10
 16210                           
 16211                           ; BSR set to: 1
 16212                           ;incstack = 0
 16213                           ;fat_read_from_file@file_number stored from wreg
 16214  011FF4  0100               	movlb	0	; () banked
 16215  011FF6  6FD7               	movwf	fat_read_from_file@file_number& (0+255),b
 16216                           
 16217                           ;fat16.c: 754: rootEntry_t root;;fat16.c: 755: uint16_t cluster;;fat16.c: 756: uint16_t 
      +                          cluster_number;;fat16.c: 757: uint8_t return_code;;fat16.c: 760: return_code = fat_get_f
      +                          ile_information(file_number, &root);
 16218  011FF8  0EDD               	movlw	low fat_read_from_file@root
 16219  011FFA  0100               	movlb	0	; () banked
 16220  011FFC  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 16221  011FFE  0E00               	movlw	high fat_read_from_file@root
 16222  012000  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 16223  012002  51D7               	movf	fat_read_from_file@file_number& (0+255),w,b
 16224  012004  ECD4  F0A1         	call	_fat_get_file_information
 16225  012008  0100               	movlb	0	; () banked
 16226  01200A  6FD8               	movwf	fat_read_from_file@return_code& (0+255),b
 16227                           
 16228                           ; BSR set to: 0
 16229                           ;fat16.c: 761: if(return_code!=0x00)
 16230  01200C  51D8               	movf	fat_read_from_file@return_code& (0+255),w,b
 16231  01200E  A4D8               	btfss	status,2,c
 16232  012010  0012               	return	
 16233                           
 16234                           ; BSR set to: 0
 16235                           ;fat16.c: 765: };fat16.c: 768: if(start_byte > root.fileSize)
 16236                           
 16237                           ; BSR set to: 0
 16238                           
 16239                           ; BSR set to: 0
 16240                           ;fat16.c: 762: {;fat16.c: 764: return return_code;;	Return value of _fat_read_from_file 
      +                          is never used
 16241  012012  51C9               	movf	fat_read_from_file@start_byte& (0+255),w,b
 16242  012014  5DF9               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 16243  012016  51CA               	movf	(fat_read_from_file@start_byte+1)& (0+255),w,b
 16244  012018  59FA               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 16245  01201A  51CB               	movf	(fat_read_from_file@start_byte+2)& (0+255),w,b
 16246  01201C  59FB               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 16247  01201E  51CC               	movf	(fat_read_from_file@start_byte+3)& (0+255),w,b
 16248  012020  59FC               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 16249  012022  A0D8               	btfss	status,0,c
 16250  012024  0012               	return	
 16251                           
 16252                           ; BSR set to: 0
 16253                           ;fat16.c: 772: };fat16.c: 774: if(start_byte+length > root.fileSize)
 16254                           
 16255                           ; BSR set to: 0
 16256                           
 16257                           ; BSR set to: 0
 16258                           ;fat16.c: 769: {;fat16.c: 771: return 0xFF;;	Return value of _fat_read_from_file is neve
      +                          r used
 16259  012026  51CD               	movf	fat_read_from_file@length& (0+255),w,b
 16260  012028  25C9               	addwf	fat_read_from_file@start_byte& (0+255),w,b
 16261  01202A  6FD3               	movwf	??_fat_read_from_file& (0+255),b
 16262  01202C  51CE               	movf	(fat_read_from_file@length+1)& (0+255),w,b
 16263  01202E  21CA               	addwfc	(fat_read_from_file@start_byte+1)& (0+255),w,b
 16264  012030  6FD4               	movwf	(??_fat_read_from_file+1)& (0+255),b
 16265  012032  51CF               	movf	(fat_read_from_file@length+2)& (0+255),w,b
 16266  012034  21CB               	addwfc	(fat_read_from_file@start_byte+2)& (0+255),w,b
 16267  012036  6FD5               	movwf	(??_fat_read_from_file+2)& (0+255),b
 16268  012038  51D0               	movf	(fat_read_from_file@length+3)& (0+255),w,b
 16269  01203A  21CC               	addwfc	(fat_read_from_file@start_byte+3)& (0+255),w,b
 16270  01203C  6FD6               	movwf	(??_fat_read_from_file+3)& (0+255),b
 16271  01203E  51D3               	movf	??_fat_read_from_file& (0+255),w,b
 16272  012040  5DF9               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 16273  012042  51D4               	movf	(??_fat_read_from_file+1)& (0+255),w,b
 16274  012044  59FA               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 16275  012046  51D5               	movf	(??_fat_read_from_file+2)& (0+255),w,b
 16276  012048  59FB               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 16277  01204A  51D6               	movf	(??_fat_read_from_file+3)& (0+255),w,b
 16278  01204C  59FC               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 16279  01204E  B0D8               	btfsc	status,0,c
 16280  012050  D01D               	goto	l1899
 16281                           
 16282                           ; BSR set to: 0
 16283                           ;fat16.c: 775: {;fat16.c: 777: length = root.fileSize - start_byte;
 16284  012052  C0C9  F0D3         	movff	fat_read_from_file@start_byte,??_fat_read_from_file
 16285  012056  C0CA  F0D4         	movff	fat_read_from_file@start_byte+1,??_fat_read_from_file+1
 16286  01205A  C0CB  F0D5         	movff	fat_read_from_file@start_byte+2,??_fat_read_from_file+2
 16287  01205E  C0CC  F0D6         	movff	fat_read_from_file@start_byte+3,??_fat_read_from_file+3
 16288  012062  1FD3               	comf	??_fat_read_from_file& (0+255),f,b
 16289  012064  1FD4               	comf	(??_fat_read_from_file+1)& (0+255),f,b
 16290  012066  1FD5               	comf	(??_fat_read_from_file+2)& (0+255),f,b
 16291  012068  1FD6               	comf	(??_fat_read_from_file+3)& (0+255),f,b
 16292  01206A  2BD3               	incf	??_fat_read_from_file& (0+255),f,b
 16293  01206C  0E00               	movlw	0
 16294  01206E  23D4               	addwfc	(??_fat_read_from_file+1)& (0+255),f,b
 16295  012070  23D5               	addwfc	(??_fat_read_from_file+2)& (0+255),f,b
 16296  012072  23D6               	addwfc	(??_fat_read_from_file+3)& (0+255),f,b
 16297  012074  51F9               	movf	(fat_read_from_file@root+28)& (0+255),w,b
 16298  012076  25D3               	addwf	??_fat_read_from_file& (0+255),w,b
 16299  012078  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 16300  01207A  51FA               	movf	(fat_read_from_file@root+29)& (0+255),w,b
 16301  01207C  21D4               	addwfc	(??_fat_read_from_file+1)& (0+255),w,b
 16302  01207E  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 16303  012080  51FB               	movf	(fat_read_from_file@root+30)& (0+255),w,b
 16304  012082  21D5               	addwfc	(??_fat_read_from_file+2)& (0+255),w,b
 16305  012084  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 16306  012086  51FC               	movf	(fat_read_from_file@root+31)& (0+255),w,b
 16307  012088  21D6               	addwfc	(??_fat_read_from_file+3)& (0+255),w,b
 16308  01208A  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 16309  01208C                     l1899:
 16310                           
 16311                           ; BSR set to: 0
 16312                           ;fat16.c: 778: };fat16.c: 781: cluster = root.firstCluster;
 16313                           
 16314                           ; BSR set to: 0
 16315  01208C  C0F7  F0D9         	movff	fat_read_from_file@root+26,fat_read_from_file@cluster
 16316  012090  C0F8  F0DA         	movff	fat_read_from_file@root+27,fat_read_from_file@cluster+1
 16317                           
 16318                           ; BSR set to: 0
 16319                           ;fat16.c: 782: cluster_number = 0;
 16320  012094  0E00               	movlw	0
 16321  012096  6FDC               	movwf	(fat_read_from_file@cluster_number+1)& (0+255),b
 16322  012098  0E00               	movlw	0
 16323  01209A  6FDB               	movwf	fat_read_from_file@cluster_number& (0+255),b
 16324                           
 16325                           ; BSR set to: 0
 16326                           ;fat16.c: 785: return fat_read_from_file_fast(start_byte, length, data, &cluster, &clust
      +                          er_number);;	Return value of _fat_read_from_file is never used
 16327  01209C  C0C9  F0A1         	movff	fat_read_from_file@start_byte,fat_read_from_file_fast@start_byte
 16328  0120A0  C0CA  F0A2         	movff	fat_read_from_file@start_byte+1,fat_read_from_file_fast@start_byte+1
 16329  0120A4  C0CB  F0A3         	movff	fat_read_from_file@start_byte+2,fat_read_from_file_fast@start_byte+2
 16330  0120A8  C0CC  F0A4         	movff	fat_read_from_file@start_byte+3,fat_read_from_file_fast@start_byte+3
 16331  0120AC  C0CD  F0A5         	movff	fat_read_from_file@length,fat_read_from_file_fast@length
 16332  0120B0  C0CE  F0A6         	movff	fat_read_from_file@length+1,fat_read_from_file_fast@length+1
 16333  0120B4  C0CF  F0A7         	movff	fat_read_from_file@length+2,fat_read_from_file_fast@length+2
 16334  0120B8  C0D0  F0A8         	movff	fat_read_from_file@length+3,fat_read_from_file_fast@length+3
 16335  0120BC  C0D1  F0A9         	movff	fat_read_from_file@data,fat_read_from_file_fast@data
 16336  0120C0  C0D2  F0AA         	movff	fat_read_from_file@data+1,fat_read_from_file_fast@data+1
 16337  0120C4  0ED9               	movlw	low fat_read_from_file@cluster
 16338  0120C6  6FAB               	movwf	fat_read_from_file_fast@cluster& (0+255),b
 16339  0120C8  0E00               	movlw	high fat_read_from_file@cluster
 16340  0120CA  6FAC               	movwf	(fat_read_from_file_fast@cluster+1)& (0+255),b
 16341  0120CC  0EDB               	movlw	low fat_read_from_file@cluster_number
 16342  0120CE  6FAD               	movwf	fat_read_from_file_fast@cluster_number& (0+255),b
 16343  0120D0  0E00               	movlw	high fat_read_from_file@cluster_number
 16344  0120D2  6FAE               	movwf	(fat_read_from_file_fast@cluster_number+1)& (0+255),b
 16345  0120D4  EC29  F071         	call	_fat_read_from_file_fast	;wreg free
 16346  0120D8  0012               	return	
 16347  0120DA                     __end_of_fat_read_from_file:
 16348                           	opt stack 0
 16349                           tblptru	equ	0xFF8
 16350                           tblptrh	equ	0xFF7
 16351                           tblptrl	equ	0xFF6
 16352                           tablat	equ	0xFF5
 16353                           prodh	equ	0xFF4
 16354                           prodl	equ	0xFF3
 16355                           postinc0	equ	0xFEE
 16356                           wreg	equ	0xFE8
 16357                           postdec1	equ	0xFE5
 16358                           plusw1	equ	0xFE3
 16359                           fsr1h	equ	0xFE2
 16360                           fsr1l	equ	0xFE1
 16361                           indf2	equ	0xFDF
 16362                           postinc2	equ	0xFDE
 16363                           plusw2	equ	0xFDB
 16364                           fsr2h	equ	0xFDA
 16365                           fsr2l	equ	0xFD9
 16366                           status	equ	0xFD8
 16367                           
 16368 ;; *************** function _fat_read_from_file_fast *****************
 16369 ;; Defined at:
 16370 ;;		line 788 in file "fat16.c"
 16371 ;; Parameters:    Size  Location     Type
 16372 ;;  start_byte      4   65[BANK0 ] unsigned long 
 16373 ;;  length          4   69[BANK0 ] unsigned long 
 16374 ;;  data            2   73[BANK0 ] PTR unsigned char 
 16375 ;;		 -> ConfigFile_buffer(512), 
 16376 ;;  cluster         2   75[BANK0 ] PTR unsigned int 
 16377 ;;		 -> fat_read_from_file@cluster(2), 
 16378 ;;  cluster_numb    2   77[BANK0 ] PTR unsigned int 
 16379 ;;		 -> fat_read_from_file@cluster_number(2), 
 16380 ;; Auto vars:     Size  Location     Type
 16381 ;;  position        4  101[BANK0 ] unsigned long 
 16382 ;;  read_length     2   99[BANK0 ] unsigned int 
 16383 ;;  needed_clust    2   97[BANK0 ] unsigned int 
 16384 ;;  offset          2   95[BANK0 ] unsigned int 
 16385 ;;  working_clus    2   93[BANK0 ] unsigned int 
 16386 ;;  sector          2   91[BANK0 ] unsigned int 
 16387 ;; Return value:  Size  Location     Type
 16388 ;;                  1    wreg      unsigned char 
 16389 ;; Registers used:
 16390 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16391 ;; Tracked objects:
 16392 ;;		On entry : 0/0
 16393 ;;		On exit  : 0/0
 16394 ;;		Unchanged: 0/0
 16395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16396 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16397 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16398 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16399 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16400 ;;Total ram usage:       40 bytes
 16401 ;; Hardware stack levels used:    1
 16402 ;; Hardware stack levels required when called:   17
 16403 ;; This function calls:
 16404 ;;		__data_sector_from_cluster
 16405 ;;		__find_nth_cluster
 16406 ;;		__read_fat
 16407 ;;		_flash_partial_read
 16408 ;; This function is called by:
 16409 ;;		_fat_read_from_file
 16410 ;; This function uses a non-reentrant model
 16411 ;;
 16412                           
 16413                           	psect	text60
 16414  00E252                     __ptext60:
 16415                           	opt stack 0
 16416  00E252                     _fat_read_from_file_fast:
 16417                           	opt stack 10
 16418                           
 16419                           ;fat16.c: 790: uint32_t position;;fat16.c: 791: uint16_t offset;;fat16.c: 792: uint16_t 
      +                          sector;;fat16.c: 793: uint16_t read_length;;fat16.c: 794: uint16_t working_cluster;;fat1
      +                          6.c: 795: uint16_t needed_cluster;;fat16.c: 798: needed_cluster = (uint16_t) (start_byte
      +                          >>9);
 16420                           
 16421                           ;incstack = 0
 16422  00E252  C0A1  F0AF         	movff	fat_read_from_file_fast@start_byte,??_fat_read_from_file_fast
 16423  00E256  C0A2  F0B0         	movff	fat_read_from_file_fast@start_byte+1,??_fat_read_from_file_fast+1
 16424  00E25A  C0A3  F0B1         	movff	fat_read_from_file_fast@start_byte+2,??_fat_read_from_file_fast+2
 16425  00E25E  C0A4  F0B2         	movff	fat_read_from_file_fast@start_byte+3,??_fat_read_from_file_fast+3
 16426  00E262  0E0A               	movlw	10
 16427  00E264  D006               	goto	u14240
 16428  00E266                     u14245:
 16429  00E266  0100               	movlb	0	; () banked
 16430  00E268  90D8               	bcf	status,0,c
 16431  00E26A  33B2               	rrcf	(??_fat_read_from_file_fast+3)& (0+255),f,b
 16432  00E26C  33B1               	rrcf	(??_fat_read_from_file_fast+2)& (0+255),f,b
 16433  00E26E  33B0               	rrcf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16434  00E270  33AF               	rrcf	??_fat_read_from_file_fast& (0+255),f,b
 16435  00E272                     u14240:
 16436  00E272  2EE8               	decfsz	wreg,f,c
 16437  00E274  D7F8               	goto	u14245
 16438  00E276  C0AF  F0C1         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@needed_cluster
 16439  00E27A  C0B0  F0C2         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@needed_cluster+1
 16440                           
 16441                           ; BSR set to: 0
 16442                           ;fat16.c: 801: if((*cluster_number) > needed_cluster)
 16443  00E27E  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 16444  00E282  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 16445  00E286  50DE               	movf	postinc2,w,c
 16446  00E288  5DC1               	subwf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 16447  00E28A  50DE               	movf	postinc2,w,c
 16448  00E28C  59C2               	subwfb	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 16449  00E28E  B0D8               	btfsc	status,0,c
 16450  00E290  D002               	goto	l1902
 16451                           
 16452                           ; BSR set to: 0
 16453                           ;fat16.c: 802: {;fat16.c: 803: return 0xFF;
 16454  00E292  0EFF               	movlw	255
 16455                           
 16456                           ; BSR set to: 0
 16457  00E294  0012               	return	
 16458  00E296                     l1902:
 16459                           
 16460                           ; BSR set to: 0
 16461                           ;fat16.c: 804: };fat16.c: 807: (*cluster) = _find_nth_cluster((*cluster), (needed_cluste
      +                          r-(*cluster_number)));
 16462                           
 16463                           ; BSR set to: 0
 16464  00E296  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 16465  00E29A  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 16466  00E29E  CFDE F097          	movff	postinc2,__find_nth_cluster@cluster
 16467  00E2A2  CFDD F098          	movff	postdec2,__find_nth_cluster@cluster+1
 16468  00E2A6  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 16469  00E2AA  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 16470  00E2AE  CFDE F0AF          	movff	postinc2,??_fat_read_from_file_fast
 16471  00E2B2  CFDD F0B0          	movff	postdec2,??_fat_read_from_file_fast+1
 16472  00E2B6  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 16473  00E2B8  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16474  00E2BA  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 16475  00E2BC  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16476  00E2BE  51C1               	movf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 16477  00E2C0  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 16478  00E2C2  6F99               	movwf	__find_nth_cluster@n& (0+255),b
 16479  00E2C4  51C2               	movf	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 16480  00E2C6  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16481  00E2C8  6F9A               	movwf	(__find_nth_cluster@n+1)& (0+255),b
 16482  00E2CA  EC61  F09B         	call	__find_nth_cluster	;wreg free
 16483  00E2CE  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 16484  00E2D2  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 16485  00E2D6  0100               	movlb	0	; () banked
 16486  00E2D8  C097  FFDE         	movff	?__find_nth_cluster,postinc2
 16487  00E2DC  C098  FFDD         	movff	?__find_nth_cluster+1,postdec2
 16488                           
 16489                           ; BSR set to: 0
 16490                           ;fat16.c: 810: (*cluster_number) = needed_cluster;
 16491  00E2E0  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 16492  00E2E4  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 16493  00E2E8  C0C1  FFDE         	movff	fat_read_from_file_fast@needed_cluster,postinc2
 16494  00E2EC  C0C2  FFDD         	movff	fat_read_from_file_fast@needed_cluster+1,postdec2
 16495                           
 16496                           ; BSR set to: 0
 16497                           ;fat16.c: 814: working_cluster = (*cluster);
 16498  00E2F0  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 16499  00E2F4  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 16500  00E2F8  CFDE F0BD          	movff	postinc2,fat_read_from_file_fast@working_cluster
 16501  00E2FC  CFDD F0BE          	movff	postdec2,fat_read_from_file_fast@working_cluster+1
 16502                           
 16503                           ; BSR set to: 0
 16504                           ;fat16.c: 817: position = (needed_cluster << 9);
 16505  00E300  C0C1  F0AF         	movff	fat_read_from_file_fast@needed_cluster,??_fat_read_from_file_fast
 16506  00E304  C0C2  F0B0         	movff	fat_read_from_file_fast@needed_cluster+1,??_fat_read_from_file_fast+1
 16507  00E308  0E09               	movlw	9
 16508  00E30A                     u14265:
 16509  00E30A  90D8               	bcf	status,0,c
 16510  00E30C  37AF               	rlcf	??_fat_read_from_file_fast& (0+255),f,b
 16511  00E30E  37B0               	rlcf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16512  00E310  2EE8               	decfsz	wreg,f,c
 16513  00E312  D7FB               	goto	u14265
 16514  00E314  C0AF  F0C5         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@position
 16515  00E318  C0B0  F0C6         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@position+1
 16516  00E31C  6BC7               	clrf	(fat_read_from_file_fast@position+2)& (0+255),b
 16517  00E31E  6BC8               	clrf	(fat_read_from_file_fast@position+3)& (0+255),b
 16518                           
 16519                           ; BSR set to: 0
 16520                           ;fat16.c: 818: offset = start_byte - position;
 16521  00E320  C0C5  F0AF         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 16522  00E324  C0C6  F0B0         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 16523  00E328  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 16524  00E32A  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16525  00E32C  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 16526  00E32E  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16527  00E330  51A1               	movf	fat_read_from_file_fast@start_byte& (0+255),w,b
 16528  00E332  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 16529  00E334  6FBF               	movwf	fat_read_from_file_fast@offset& (0+255),b
 16530  00E336  51A2               	movf	(fat_read_from_file_fast@start_byte+1)& (0+255),w,b
 16531  00E338  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16532  00E33A  6FC0               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 16533                           
 16534                           ; BSR set to: 0
 16535                           ;fat16.c: 821: position = 0;
 16536  00E33C  0E00               	movlw	0
 16537  00E33E  6FC5               	movwf	fat_read_from_file_fast@position& (0+255),b
 16538  00E340  0E00               	movlw	0
 16539  00E342  6FC6               	movwf	(fat_read_from_file_fast@position+1)& (0+255),b
 16540  00E344  0E00               	movlw	0
 16541  00E346  6FC7               	movwf	(fat_read_from_file_fast@position+2)& (0+255),b
 16542  00E348  0E00               	movlw	0
 16543  00E34A  6FC8               	movwf	(fat_read_from_file_fast@position+3)& (0+255),b
 16544                           
 16545                           ;fat16.c: 822: while(position < length)
 16546  00E34C  D089               	goto	l1904
 16547  00E34E                     
 16548                           ; BSR set to: 0
 16549                           ;fat16.c: 823: {;fat16.c: 825: if(offset==512)
 16550                           
 16551                           ; BSR set to: 0
 16552  00E34E  0E02               	movlw	2
 16553  00E350  19C0               	xorwf	(fat_read_from_file_fast@offset+1)& (0+255),w,b
 16554  00E352  11BF               	iorwf	fat_read_from_file_fast@offset& (0+255),w,b
 16555  00E354  A4D8               	btfss	status,2,c
 16556  00E356  D00F               	goto	l1906
 16557                           
 16558                           ; BSR set to: 0
 16559                           ;fat16.c: 826: {;fat16.c: 828: working_cluster = _read_fat(working_cluster);
 16560  00E358  C0BD  F08F         	movff	fat_read_from_file_fast@working_cluster,__read_fat@cluster
 16561  00E35C  C0BE  F090         	movff	fat_read_from_file_fast@working_cluster+1,__read_fat@cluster+1
 16562  00E360  EC1A  F0A7         	call	__read_fat	;wreg free
 16563  00E364  C08F  F0BD         	movff	?__read_fat,fat_read_from_file_fast@working_cluster
 16564  00E368  C090  F0BE         	movff	?__read_fat+1,fat_read_from_file_fast@working_cluster+1
 16565                           
 16566                           ;fat16.c: 829: offset = 0;
 16567  00E36C  0E00               	movlw	0
 16568  00E36E  0100               	movlb	0	; () banked
 16569  00E370  6FC0               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 16570  00E372  0E00               	movlw	0
 16571  00E374  6FBF               	movwf	fat_read_from_file_fast@offset& (0+255),b
 16572  00E376                     l1906:
 16573                           
 16574                           ; BSR set to: 0
 16575                           ;fat16.c: 830: };fat16.c: 833: sector = _data_sector_from_cluster(working_cluster);
 16576                           
 16577                           ; BSR set to: 0
 16578  00E376  C0BD  F060         	movff	fat_read_from_file_fast@working_cluster,__data_sector_from_cluster@fat_cluster
 16579  00E37A  C0BE  F061         	movff	fat_read_from_file_fast@working_cluster+1,__data_sector_from_cluster@fat_cluster+
      +                          1
 16580  00E37E  ECE3  F0AF         	call	__data_sector_from_cluster	;wreg free
 16581  00E382  C060  F0BB         	movff	?__data_sector_from_cluster,fat_read_from_file_fast@sector
 16582  00E386  C061  F0BC         	movff	?__data_sector_from_cluster+1,fat_read_from_file_fast@sector+1
 16583                           
 16584                           ;fat16.c: 836: read_length = 512 - offset;
 16585  00E38A  C0BF  F0AF         	movff	fat_read_from_file_fast@offset,??_fat_read_from_file_fast
 16586  00E38E  C0C0  F0B0         	movff	fat_read_from_file_fast@offset+1,??_fat_read_from_file_fast+1
 16587  00E392  0100               	movlb	0	; () banked
 16588  00E394  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 16589  00E396  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16590  00E398  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 16591  00E39A  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16592  00E39C  0E00               	movlw	0
 16593  00E39E  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 16594  00E3A0  6FC3               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 16595  00E3A2  0E02               	movlw	2
 16596  00E3A4  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16597  00E3A6  6FC4               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 16598                           
 16599                           ; BSR set to: 0
 16600                           ;fat16.c: 837: if(read_length > (length-position))
 16601  00E3A8  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 16602  00E3AA  6FAF               	movwf	??_fat_read_from_file_fast& (0+255),b
 16603  00E3AC  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 16604  00E3AE  6FB0               	movwf	(??_fat_read_from_file_fast+1)& (0+255),b
 16605  00E3B0  6BB1               	clrf	(??_fat_read_from_file_fast+2)& (0+255),b
 16606  00E3B2  6BB2               	clrf	(??_fat_read_from_file_fast+3)& (0+255),b
 16607  00E3B4  C0C5  F0B3         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast+4
 16608  00E3B8  C0C6  F0B4         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+5
 16609  00E3BC  C0C7  F0B5         	movff	fat_read_from_file_fast@position+2,??_fat_read_from_file_fast+6
 16610  00E3C0  C0C8  F0B6         	movff	fat_read_from_file_fast@position+3,??_fat_read_from_file_fast+7
 16611  00E3C4  1FB3               	comf	(??_fat_read_from_file_fast+4)& (0+255),f,b
 16612  00E3C6  1FB4               	comf	(??_fat_read_from_file_fast+5)& (0+255),f,b
 16613  00E3C8  1FB5               	comf	(??_fat_read_from_file_fast+6)& (0+255),f,b
 16614  00E3CA  1FB6               	comf	(??_fat_read_from_file_fast+7)& (0+255),f,b
 16615  00E3CC  2BB3               	incf	(??_fat_read_from_file_fast+4)& (0+255),f,b
 16616  00E3CE  0E00               	movlw	0
 16617  00E3D0  23B4               	addwfc	(??_fat_read_from_file_fast+5)& (0+255),f,b
 16618  00E3D2  23B5               	addwfc	(??_fat_read_from_file_fast+6)& (0+255),f,b
 16619  00E3D4  23B6               	addwfc	(??_fat_read_from_file_fast+7)& (0+255),f,b
 16620  00E3D6  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 16621  00E3D8  25B3               	addwf	(??_fat_read_from_file_fast+4)& (0+255),w,b
 16622  00E3DA  6FB7               	movwf	(??_fat_read_from_file_fast+8)& (0+255),b
 16623  00E3DC  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 16624  00E3DE  21B4               	addwfc	(??_fat_read_from_file_fast+5)& (0+255),w,b
 16625  00E3E0  6FB8               	movwf	(??_fat_read_from_file_fast+9)& (0+255),b
 16626  00E3E2  51A7               	movf	(fat_read_from_file_fast@length+2)& (0+255),w,b
 16627  00E3E4  21B5               	addwfc	(??_fat_read_from_file_fast+6)& (0+255),w,b
 16628  00E3E6  6FB9               	movwf	(??_fat_read_from_file_fast+10)& (0+255),b
 16629  00E3E8  51A8               	movf	(fat_read_from_file_fast@length+3)& (0+255),w,b
 16630  00E3EA  21B6               	addwfc	(??_fat_read_from_file_fast+7)& (0+255),w,b
 16631  00E3EC  6FBA               	movwf	(??_fat_read_from_file_fast+11)& (0+255),b
 16632  00E3EE  51AF               	movf	??_fat_read_from_file_fast& (0+255),w,b
 16633  00E3F0  5DB7               	subwf	(??_fat_read_from_file_fast+8)& (0+255),w,b
 16634  00E3F2  51B0               	movf	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16635  00E3F4  59B8               	subwfb	(??_fat_read_from_file_fast+9)& (0+255),w,b
 16636  00E3F6  51B1               	movf	(??_fat_read_from_file_fast+2)& (0+255),w,b
 16637  00E3F8  59B9               	subwfb	(??_fat_read_from_file_fast+10)& (0+255),w,b
 16638  00E3FA  51B2               	movf	(??_fat_read_from_file_fast+3)& (0+255),w,b
 16639  00E3FC  59BA               	subwfb	(??_fat_read_from_file_fast+11)& (0+255),w,b
 16640  00E3FE  B0D8               	btfsc	status,0,c
 16641  00E400  D00E               	goto	l1907
 16642                           
 16643                           ; BSR set to: 0
 16644                           ;fat16.c: 838: {;fat16.c: 840: read_length = length - position;
 16645  00E402  C0C5  F0AF         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 16646  00E406  C0C6  F0B0         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 16647  00E40A  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 16648  00E40C  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16649  00E40E  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 16650  00E410  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16651  00E412  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 16652  00E414  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 16653  00E416  6FC3               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 16654  00E418  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 16655  00E41A  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16656  00E41C  6FC4               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 16657  00E41E                     l1907:
 16658                           
 16659                           ; BSR set to: 0
 16660                           ;fat16.c: 841: };fat16.c: 844: flash_partial_read(sector, offset, read_length, &data[pos
      +                          ition]);
 16661                           
 16662                           ; BSR set to: 0
 16663  00E41E  C0BB  F087         	movff	fat_read_from_file_fast@sector,flash_partial_read@page
 16664  00E422  C0BC  F088         	movff	fat_read_from_file_fast@sector+1,flash_partial_read@page+1
 16665  00E426  C0BF  F089         	movff	fat_read_from_file_fast@offset,flash_partial_read@start
 16666  00E42A  C0C0  F08A         	movff	fat_read_from_file_fast@offset+1,flash_partial_read@start+1
 16667  00E42E  C0C3  F08B         	movff	fat_read_from_file_fast@read_length,flash_partial_read@length
 16668  00E432  C0C4  F08C         	movff	fat_read_from_file_fast@read_length+1,flash_partial_read@length+1
 16669  00E436  51C5               	movf	fat_read_from_file_fast@position& (0+255),w,b
 16670  00E438  25A9               	addwf	fat_read_from_file_fast@data& (0+255),w,b
 16671  00E43A  6F8D               	movwf	flash_partial_read@data& (0+255),b
 16672  00E43C  51C6               	movf	(fat_read_from_file_fast@position+1)& (0+255),w,b
 16673  00E43E  21AA               	addwfc	(fat_read_from_file_fast@data+1)& (0+255),w,b
 16674  00E440  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 16675  00E442  ECB0  F0AE         	call	_flash_partial_read	;wreg free
 16676                           
 16677                           ;fat16.c: 847: position += read_length;
 16678  00E446  0100               	movlb	0	; () banked
 16679  00E448  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 16680  00E44A  27C5               	addwf	fat_read_from_file_fast@position& (0+255),f,b
 16681  00E44C  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 16682  00E44E  23C6               	addwfc	(fat_read_from_file_fast@position+1)& (0+255),f,b
 16683  00E450  0E00               	movlw	0
 16684  00E452  23C7               	addwfc	(fat_read_from_file_fast@position+2)& (0+255),f,b
 16685  00E454  0E00               	movlw	0
 16686  00E456  23C8               	addwfc	(fat_read_from_file_fast@position+3)& (0+255),f,b
 16687                           
 16688                           ; BSR set to: 0
 16689                           ;fat16.c: 848: offset += read_length;
 16690  00E458  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 16691  00E45A  27BF               	addwf	fat_read_from_file_fast@offset& (0+255),f,b
 16692  00E45C  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 16693  00E45E  23C0               	addwfc	(fat_read_from_file_fast@offset+1)& (0+255),f,b
 16694  00E460                     l1904:
 16695                           
 16696                           ; BSR set to: 0
 16697                           
 16698                           ; BSR set to: 0
 16699  00E460  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 16700  00E462  5DC5               	subwf	fat_read_from_file_fast@position& (0+255),w,b
 16701  00E464  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 16702  00E466  59C6               	subwfb	(fat_read_from_file_fast@position+1)& (0+255),w,b
 16703  00E468  51A7               	movf	(fat_read_from_file_fast@length+2)& (0+255),w,b
 16704  00E46A  59C7               	subwfb	(fat_read_from_file_fast@position+2)& (0+255),w,b
 16705  00E46C  51A8               	movf	(fat_read_from_file_fast@length+3)& (0+255),w,b
 16706  00E46E  59C8               	subwfb	(fat_read_from_file_fast@position+3)& (0+255),w,b
 16707  00E470  A0D8               	btfss	status,0,c
 16708  00E472  D76D               	goto	l1905
 16709                           
 16710                           ; BSR set to: 0
 16711                           ;fat16.c: 849: };fat16.c: 852: return 0x00;
 16712                           
 16713                           ; BSR set to: 0
 16714  00E474  0E00               	movlw	0
 16715  00E476  0012               	return	
 16716  00E478                     __end_of_fat_read_from_file_fast:
 16717                           	opt stack 0
 16718                           tblptru	equ	0xFF8
 16719                           tblptrh	equ	0xFF7
 16720                           tblptrl	equ	0xFF6
 16721                           tablat	equ	0xFF5
 16722                           prodh	equ	0xFF4
 16723                           prodl	equ	0xFF3
 16724                           postinc0	equ	0xFEE
 16725                           wreg	equ	0xFE8
 16726                           postdec1	equ	0xFE5
 16727                           plusw1	equ	0xFE3
 16728                           fsr1h	equ	0xFE2
 16729                           fsr1l	equ	0xFE1
 16730                           indf2	equ	0xFDF
 16731                           postinc2	equ	0xFDE
 16732                           postdec2	equ	0xFDD
 16733                           plusw2	equ	0xFDB
 16734                           fsr2h	equ	0xFDA
 16735                           fsr2l	equ	0xFD9
 16736                           status	equ	0xFD8
 16737                           
 16738 ;; *************** function __find_nth_cluster *****************
 16739 ;; Defined at:
 16740 ;;		line 183 in file "fat16.c"
 16741 ;; Parameters:    Size  Location     Type
 16742 ;;  cluster         2   55[BANK0 ] unsigned int 
 16743 ;;  n               2   57[BANK0 ] unsigned int 
 16744 ;; Auto vars:     Size  Location     Type
 16745 ;;  sector          2   63[BANK0 ] unsigned int 
 16746 ;;  sector_in_bu    2   61[BANK0 ] unsigned int 
 16747 ;;  offset          2   59[BANK0 ] unsigned int 
 16748 ;; Return value:  Size  Location     Type
 16749 ;;                  2   55[BANK0 ] unsigned int 
 16750 ;; Registers used:
 16751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16752 ;; Tracked objects:
 16753 ;;		On entry : 0/0
 16754 ;;		On exit  : 0/0
 16755 ;;		Unchanged: 0/0
 16756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16757 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16758 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16760 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16761 ;;Total ram usage:       10 bytes
 16762 ;; Hardware stack levels used:    1
 16763 ;; Hardware stack levels required when called:   16
 16764 ;; This function calls:
 16765 ;;		__fat_offset_from_cluster
 16766 ;;		__fat_sector_from_cluster
 16767 ;;		__read_fat
 16768 ;;		__read_value_from_offset
 16769 ;;		_flash_sector_read
 16770 ;; This function is called by:
 16771 ;;		_fat_read_from_file_fast
 16772 ;;		_fat_modify_file
 16773 ;;		_fat_copy_sector_to_buffer
 16774 ;; This function uses a non-reentrant model
 16775 ;;
 16776                           
 16777                           	psect	text61
 16778  0136C2                     __ptext61:
 16779                           	opt stack 0
 16780  0136C2                     __find_nth_cluster:
 16781                           	opt stack 11
 16782                           
 16783                           ;fat16.c: 185: uint16_t sector;;fat16.c: 186: uint16_t offset;;fat16.c: 187: uint16_t se
      +                          ctor_in_buffer = 0;
 16784                           
 16785                           ; BSR set to: 0
 16786                           ;incstack = 0
 16787  0136C2  0E00               	movlw	0
 16788  0136C4  0100               	movlb	0	; () banked
 16789  0136C6  6F9E               	movwf	(__find_nth_cluster@sector_in_buffer+1)& (0+255),b
 16790  0136C8  0E00               	movlw	0
 16791  0136CA  6F9D               	movwf	__find_nth_cluster@sector_in_buffer& (0+255),b
 16792                           
 16793                           ; BSR set to: 0
 16794                           ;fat16.c: 190: if(n==1)
 16795  0136CC  0599               	decf	__find_nth_cluster@n& (0+255),w,b
 16796  0136CE  119A               	iorwf	(__find_nth_cluster@n+1)& (0+255),w,b
 16797  0136D0  A4D8               	btfss	status,2,c
 16798  0136D2  D040               	goto	l1789
 16799                           
 16800                           ; BSR set to: 0
 16801                           ;fat16.c: 191: {;fat16.c: 192: return _read_fat(cluster);
 16802  0136D4  C097  F08F         	movff	__find_nth_cluster@cluster,__read_fat@cluster
 16803  0136D8  C098  F090         	movff	__find_nth_cluster@cluster+1,__read_fat@cluster+1
 16804  0136DC  EC1A  F0A7         	call	__read_fat	;wreg free
 16805  0136E0  C08F  F097         	movff	?__read_fat,?__find_nth_cluster
 16806  0136E4  C090  F098         	movff	?__read_fat+1,?__find_nth_cluster+1
 16807  0136E8  0012               	return	
 16808  0136EA                     
 16809                           ;fat16.c: 196: {;fat16.c: 198: sector = _fat_sector_from_cluster(cluster);
 16810  0136EA  C097  F060         	movff	__find_nth_cluster@cluster,__fat_sector_from_cluster@cluster
 16811  0136EE  C098  F061         	movff	__find_nth_cluster@cluster+1,__fat_sector_from_cluster@cluster+1
 16812  0136F2  EC7D  F0AF         	call	__fat_sector_from_cluster	;wreg free
 16813  0136F6  C060  F09F         	movff	?__fat_sector_from_cluster,__find_nth_cluster@sector
 16814  0136FA  C061  F0A0         	movff	?__fat_sector_from_cluster+1,__find_nth_cluster@sector+1
 16815                           
 16816                           ;fat16.c: 199: offset = _fat_offset_from_cluster(cluster);
 16817  0136FE  C097  F060         	movff	__find_nth_cluster@cluster,__fat_offset_from_cluster@cluster
 16818  013702  C098  F061         	movff	__find_nth_cluster@cluster+1,__fat_offset_from_cluster@cluster+1
 16819  013706  EC8A  F0AF         	call	__fat_offset_from_cluster	;wreg free
 16820  01370A  C060  F09B         	movff	?__fat_offset_from_cluster,__find_nth_cluster@offset
 16821  01370E  C061  F09C         	movff	?__fat_offset_from_cluster+1,__find_nth_cluster@offset+1
 16822                           
 16823                           ;fat16.c: 202: if(sector != sector_in_buffer)
 16824  013712  0100               	movlb	0	; () banked
 16825  013714  519D               	movf	__find_nth_cluster@sector_in_buffer& (0+255),w,b
 16826  013716  199F               	xorwf	__find_nth_cluster@sector& (0+255),w,b
 16827  013718  E104               	bnz	u12700
 16828  01371A  519E               	movf	(__find_nth_cluster@sector_in_buffer+1)& (0+255),w,b
 16829  01371C  19A0               	xorwf	(__find_nth_cluster@sector+1)& (0+255),w,b
 16830  01371E  B4D8               	btfsc	status,2,c
 16831  013720  D00A               	goto	l1791
 16832  013722                     u12700:
 16833                           
 16834                           ; BSR set to: 0
 16835                           ;fat16.c: 203: {;fat16.c: 204: flash_sector_read(sector, buffer);
 16836  013722  C09F  F087         	movff	__find_nth_cluster@sector,flash_sector_read@page
 16837  013726  C0A0  F088         	movff	__find_nth_cluster@sector+1,flash_sector_read@page+1
 16838  01372A  0E00               	movlw	low _buffer
 16839  01372C  6F89               	movwf	flash_sector_read@data& (0+255),b
 16840  01372E  0E0A               	movlw	high _buffer
 16841  013730  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 16842  013732  EC9C  F0AE         	call	_flash_sector_read	;wreg free
 16843  013736                     l1791:
 16844                           
 16845                           ;fat16.c: 205: };fat16.c: 208: cluster = _read_value_from_offset(offset, buffer);
 16846  013736  C09B  F060         	movff	__find_nth_cluster@offset,__read_value_from_offset@offset
 16847  01373A  C09C  F061         	movff	__find_nth_cluster@offset+1,__read_value_from_offset@offset+1
 16848  01373E  0E00               	movlw	low _buffer
 16849  013740  0100               	movlb	0	; () banked
 16850  013742  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 16851  013744  0E0A               	movlw	high _buffer
 16852  013746  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 16853  013748  ECA4  F0AA         	call	__read_value_from_offset	;wreg free
 16854  01374C  C060  F097         	movff	?__read_value_from_offset,__find_nth_cluster@cluster
 16855  013750  C061  F098         	movff	?__read_value_from_offset+1,__find_nth_cluster@cluster+1
 16856  013754                     l1789:
 16857  013754  0100               	movlb	0	; () banked
 16858  013756  5199               	movf	__find_nth_cluster@n& (0+255),w,b
 16859  013758  119A               	iorwf	(__find_nth_cluster@n+1)& (0+255),w,b
 16860  01375A  A4D8               	btfss	status,2,c
 16861  01375C  D7C6               	goto	l1790
 16862                           
 16863                           ; BSR set to: 0
 16864                           ;fat16.c: 209: };fat16.c: 211: return cluster;
 16865  01375E  C097  F097         	movff	__find_nth_cluster@cluster,?__find_nth_cluster
 16866  013762  C098  F098         	movff	__find_nth_cluster@cluster+1,?__find_nth_cluster+1
 16867  013766  0012               	return		;funcret
 16868  013768                     __end_of__find_nth_cluster:
 16869                           	opt stack 0
 16870                           tblptru	equ	0xFF8
 16871                           tblptrh	equ	0xFF7
 16872                           tblptrl	equ	0xFF6
 16873                           tablat	equ	0xFF5
 16874                           prodh	equ	0xFF4
 16875                           prodl	equ	0xFF3
 16876                           postinc0	equ	0xFEE
 16877                           wreg	equ	0xFE8
 16878                           postdec1	equ	0xFE5
 16879                           plusw1	equ	0xFE3
 16880                           fsr1h	equ	0xFE2
 16881                           fsr1l	equ	0xFE1
 16882                           indf2	equ	0xFDF
 16883                           postinc2	equ	0xFDE
 16884                           postdec2	equ	0xFDD
 16885                           plusw2	equ	0xFDB
 16886                           fsr2h	equ	0xFDA
 16887                           fsr2l	equ	0xFD9
 16888                           status	equ	0xFD8
 16889                           
 16890 ;; *************** function __read_value_from_offset *****************
 16891 ;; Defined at:
 16892 ;;		line 115 in file "fat16.c"
 16893 ;; Parameters:    Size  Location     Type
 16894 ;;  offset          2    0[BANK0 ] unsigned int 
 16895 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 16896 ;;		 -> buffer(512), 
 16897 ;; Auto vars:     Size  Location     Type
 16898 ;;  value           2    7[BANK0 ] unsigned int 
 16899 ;; Return value:  Size  Location     Type
 16900 ;;                  2    0[BANK0 ] unsigned int 
 16901 ;; Registers used:
 16902 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16903 ;; Tracked objects:
 16904 ;;		On entry : 0/0
 16905 ;;		On exit  : 0/0
 16906 ;;		Unchanged: 0/0
 16907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16908 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16909 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16910 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16911 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16912 ;;Total ram usage:        9 bytes
 16913 ;; Hardware stack levels used:    1
 16914 ;; Hardware stack levels required when called:   10
 16915 ;; This function calls:
 16916 ;;		Nothing
 16917 ;; This function is called by:
 16918 ;;		__find_nth_cluster
 16919 ;;		__make_cluster_chain
 16920 ;; This function uses a non-reentrant model
 16921 ;;
 16922                           
 16923                           	psect	text62
 16924  015548                     __ptext62:
 16925                           	opt stack 0
 16926  015548                     __read_value_from_offset:
 16927                           	opt stack 16
 16928                           
 16929                           ;fat16.c: 117: uint16_t value;;fat16.c: 118: value = buffer[offset+1];
 16930                           
 16931                           ;incstack = 0
 16932  015548  0E01               	movlw	1
 16933  01554A  0100               	movlb	0	; () banked
 16934  01554C  2560               	addwf	__read_value_from_offset@offset& (0+255),w,b
 16935  01554E  6F64               	movwf	??__read_value_from_offset& (0+255),b
 16936  015550  0E00               	movlw	0
 16937  015552  2161               	addwfc	(__read_value_from_offset@offset+1)& (0+255),w,b
 16938  015554  6F65               	movwf	(??__read_value_from_offset+1)& (0+255),b
 16939  015556  5164               	movf	??__read_value_from_offset& (0+255),w,b
 16940  015558  2562               	addwf	__read_value_from_offset@buffer& (0+255),w,b
 16941  01555A  6ED9               	movwf	fsr2l,c
 16942  01555C  5165               	movf	(??__read_value_from_offset+1)& (0+255),w,b
 16943  01555E  2163               	addwfc	(__read_value_from_offset@buffer+1)& (0+255),w,b
 16944  015560  6EDA               	movwf	fsr2h,c
 16945  015562  50DF               	movf	indf2,w,c
 16946  015564  6F66               	movwf	(??__read_value_from_offset+2)& (0+255),b
 16947  015566  5166               	movf	(??__read_value_from_offset+2)& (0+255),w,b
 16948  015568  6F67               	movwf	__read_value_from_offset@value& (0+255),b
 16949  01556A  6B68               	clrf	(__read_value_from_offset@value+1)& (0+255),b
 16950                           
 16951                           ; BSR set to: 0
 16952                           ;fat16.c: 119: value <<= 8;
 16953  01556C  5167               	movf	__read_value_from_offset@value& (0+255),w,b
 16954  01556E  6F68               	movwf	(__read_value_from_offset@value+1)& (0+255),b
 16955  015570  6B67               	clrf	__read_value_from_offset@value& (0+255),b
 16956                           
 16957                           ; BSR set to: 0
 16958                           ;fat16.c: 120: value |= buffer[offset];
 16959  015572  5160               	movf	__read_value_from_offset@offset& (0+255),w,b
 16960  015574  2562               	addwf	__read_value_from_offset@buffer& (0+255),w,b
 16961  015576  6ED9               	movwf	fsr2l,c
 16962  015578  5161               	movf	(__read_value_from_offset@offset+1)& (0+255),w,b
 16963  01557A  2163               	addwfc	(__read_value_from_offset@buffer+1)& (0+255),w,b
 16964  01557C  6EDA               	movwf	fsr2h,c
 16965  01557E  50DF               	movf	indf2,w,c
 16966  015580  6F64               	movwf	??__read_value_from_offset& (0+255),b
 16967  015582  5164               	movf	??__read_value_from_offset& (0+255),w,b
 16968  015584  1367               	iorwf	__read_value_from_offset@value& (0+255),f,b
 16969                           
 16970                           ; BSR set to: 0
 16971                           ;fat16.c: 121: return value;
 16972  015586  C067  F060         	movff	__read_value_from_offset@value,?__read_value_from_offset
 16973  01558A  C068  F061         	movff	__read_value_from_offset@value+1,?__read_value_from_offset+1
 16974  01558E  0012               	return	
 16975  015590                     __end_of__read_value_from_offset:
 16976                           	opt stack 0
 16977                           tblptru	equ	0xFF8
 16978                           tblptrh	equ	0xFF7
 16979                           tblptrl	equ	0xFF6
 16980                           tablat	equ	0xFF5
 16981                           prodh	equ	0xFF4
 16982                           prodl	equ	0xFF3
 16983                           postinc0	equ	0xFEE
 16984                           wreg	equ	0xFE8
 16985                           postdec1	equ	0xFE5
 16986                           plusw1	equ	0xFE3
 16987                           fsr1h	equ	0xFE2
 16988                           fsr1l	equ	0xFE1
 16989                           indf2	equ	0xFDF
 16990                           postinc2	equ	0xFDE
 16991                           postdec2	equ	0xFDD
 16992                           plusw2	equ	0xFDB
 16993                           fsr2h	equ	0xFDA
 16994                           fsr2l	equ	0xFD9
 16995                           status	equ	0xFD8
 16996                           
 16997 ;; *************** function __read_fat *****************
 16998 ;; Defined at:
 16999 ;;		line 457 in file "fat16.c"
 17000 ;; Parameters:    Size  Location     Type
 17001 ;;  cluster         2   47[BANK0 ] unsigned int 
 17002 ;; Auto vars:     Size  Location     Type
 17003 ;;  value           2   53[BANK0 ] unsigned int 
 17004 ;;  offset          2   51[BANK0 ] unsigned int 
 17005 ;;  sector          2   49[BANK0 ] unsigned int 
 17006 ;; Return value:  Size  Location     Type
 17007 ;;                  2   47[BANK0 ] unsigned int 
 17008 ;; Registers used:
 17009 ;;		wreg, status,2, status,0, cstack
 17010 ;; Tracked objects:
 17011 ;;		On entry : 0/0
 17012 ;;		On exit  : 0/0
 17013 ;;		Unchanged: 0/0
 17014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17015 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17016 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17018 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17019 ;;Total ram usage:        8 bytes
 17020 ;; Hardware stack levels used:    1
 17021 ;; Hardware stack levels required when called:   15
 17022 ;; This function calls:
 17023 ;;		__fat_offset_from_cluster
 17024 ;;		__fat_sector_from_cluster
 17025 ;;		_flash_partial_read
 17026 ;; This function is called by:
 17027 ;;		__find_nth_cluster
 17028 ;;		_fat_read_from_file_fast
 17029 ;;		_fat_modify_file
 17030 ;; This function uses a non-reentrant model
 17031 ;;
 17032                           
 17033                           	psect	text63
 17034  014E34                     __ptext63:
 17035                           	opt stack 0
 17036  014E34                     __read_fat:
 17037                           	opt stack 12
 17038                           
 17039                           ;fat16.c: 459: uint16_t sector;;fat16.c: 460: uint16_t offset;;fat16.c: 461: uint16_t va
      +                          lue;;fat16.c: 464: sector = _fat_sector_from_cluster(cluster);
 17040                           
 17041                           ; BSR set to: 0
 17042                           ;incstack = 0
 17043  014E34  C08F  F060         	movff	__read_fat@cluster,__fat_sector_from_cluster@cluster
 17044  014E38  C090  F061         	movff	__read_fat@cluster+1,__fat_sector_from_cluster@cluster+1
 17045  014E3C  EC7D  F0AF         	call	__fat_sector_from_cluster	;wreg free
 17046  014E40  C060  F091         	movff	?__fat_sector_from_cluster,__read_fat@sector
 17047  014E44  C061  F092         	movff	?__fat_sector_from_cluster+1,__read_fat@sector+1
 17048                           
 17049                           ;fat16.c: 465: offset = _fat_offset_from_cluster(cluster);
 17050  014E48  C08F  F060         	movff	__read_fat@cluster,__fat_offset_from_cluster@cluster
 17051  014E4C  C090  F061         	movff	__read_fat@cluster+1,__fat_offset_from_cluster@cluster+1
 17052  014E50  EC8A  F0AF         	call	__fat_offset_from_cluster	;wreg free
 17053  014E54  C060  F093         	movff	?__fat_offset_from_cluster,__read_fat@offset
 17054  014E58  C061  F094         	movff	?__fat_offset_from_cluster+1,__read_fat@offset+1
 17055                           
 17056                           ;fat16.c: 468: flash_partial_read(sector, offset, 2, &value);
 17057  014E5C  C091  F087         	movff	__read_fat@sector,flash_partial_read@page
 17058  014E60  C092  F088         	movff	__read_fat@sector+1,flash_partial_read@page+1
 17059  014E64  C093  F089         	movff	__read_fat@offset,flash_partial_read@start
 17060  014E68  C094  F08A         	movff	__read_fat@offset+1,flash_partial_read@start+1
 17061  014E6C  0E00               	movlw	0
 17062  014E6E  0100               	movlb	0	; () banked
 17063  014E70  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 17064  014E72  0E02               	movlw	2
 17065  014E74  6F8B               	movwf	flash_partial_read@length& (0+255),b
 17066  014E76  0E95               	movlw	low __read_fat@value
 17067  014E78  6F8D               	movwf	flash_partial_read@data& (0+255),b
 17068  014E7A  0E00               	movlw	high __read_fat@value
 17069  014E7C  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 17070  014E7E  ECB0  F0AE         	call	_flash_partial_read	;wreg free
 17071                           
 17072                           ;fat16.c: 471: return value;
 17073  014E82  C095  F08F         	movff	__read_fat@value,?__read_fat
 17074  014E86  C096  F090         	movff	__read_fat@value+1,?__read_fat+1
 17075  014E8A  0012               	return	
 17076  014E8C                     __end_of__read_fat:
 17077                           	opt stack 0
 17078                           tblptru	equ	0xFF8
 17079                           tblptrh	equ	0xFF7
 17080                           tblptrl	equ	0xFF6
 17081                           tablat	equ	0xFF5
 17082                           prodh	equ	0xFF4
 17083                           prodl	equ	0xFF3
 17084                           postinc0	equ	0xFEE
 17085                           wreg	equ	0xFE8
 17086                           postdec1	equ	0xFE5
 17087                           plusw1	equ	0xFE3
 17088                           fsr1h	equ	0xFE2
 17089                           fsr1l	equ	0xFE1
 17090                           indf2	equ	0xFDF
 17091                           postinc2	equ	0xFDE
 17092                           postdec2	equ	0xFDD
 17093                           plusw2	equ	0xFDB
 17094                           fsr2h	equ	0xFDA
 17095                           fsr2l	equ	0xFD9
 17096                           status	equ	0xFD8
 17097                           
 17098 ;; *************** function __fat_sector_from_cluster *****************
 17099 ;; Defined at:
 17100 ;;		line 76 in file "fat16.c"
 17101 ;; Parameters:    Size  Location     Type
 17102 ;;  cluster         2    0[BANK0 ] unsigned int 
 17103 ;; Auto vars:     Size  Location     Type
 17104 ;;		None
 17105 ;; Return value:  Size  Location     Type
 17106 ;;                  2    0[BANK0 ] unsigned int 
 17107 ;; Registers used:
 17108 ;;		wreg, status,2, status,0
 17109 ;; Tracked objects:
 17110 ;;		On entry : 0/0
 17111 ;;		On exit  : 0/0
 17112 ;;		Unchanged: 0/0
 17113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17114 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17117 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17118 ;;Total ram usage:        2 bytes
 17119 ;; Hardware stack levels used:    1
 17120 ;; Hardware stack levels required when called:   10
 17121 ;; This function calls:
 17122 ;;		Nothing
 17123 ;; This function is called by:
 17124 ;;		__find_nth_cluster
 17125 ;;		__make_cluster_chain
 17126 ;;		__read_fat
 17127 ;; This function uses a non-reentrant model
 17128 ;;
 17129                           
 17130                           	psect	text64
 17131  015EFA                     __ptext64:
 17132                           	opt stack 0
 17133  015EFA                     __fat_sector_from_cluster:
 17134                           	opt stack 16
 17135                           
 17136                           ;fat16.c: 78: cluster >>= 8;
 17137                           
 17138                           ;incstack = 0
 17139  015EFA  0100               	movlb	0	; () banked
 17140  015EFC  5161               	movf	(__fat_sector_from_cluster@cluster+1)& (0+255),w,b
 17141  015EFE  6F60               	movwf	__fat_sector_from_cluster@cluster& (0+255),b
 17142  015F00  6B61               	clrf	(__fat_sector_from_cluster@cluster+1)& (0+255),b
 17143                           
 17144                           ; BSR set to: 0
 17145                           ;fat16.c: 79: cluster += 2;
 17146  015F02  0E02               	movlw	2
 17147  015F04  2760               	addwf	__fat_sector_from_cluster@cluster& (0+255),f,b
 17148  015F06  0E00               	movlw	0
 17149  015F08  2361               	addwfc	(__fat_sector_from_cluster@cluster+1)& (0+255),f,b
 17150                           
 17151                           ; BSR set to: 0
 17152                           ;fat16.c: 80: return cluster;
 17153  015F0A  C060  F060         	movff	__fat_sector_from_cluster@cluster,?__fat_sector_from_cluster
 17154  015F0E  C061  F061         	movff	__fat_sector_from_cluster@cluster+1,?__fat_sector_from_cluster+1
 17155  015F12  0012               	return	
 17156  015F14                     __end_of__fat_sector_from_cluster:
 17157                           	opt stack 0
 17158                           tblptru	equ	0xFF8
 17159                           tblptrh	equ	0xFF7
 17160                           tblptrl	equ	0xFF6
 17161                           tablat	equ	0xFF5
 17162                           prodh	equ	0xFF4
 17163                           prodl	equ	0xFF3
 17164                           postinc0	equ	0xFEE
 17165                           wreg	equ	0xFE8
 17166                           postdec1	equ	0xFE5
 17167                           plusw1	equ	0xFE3
 17168                           fsr1h	equ	0xFE2
 17169                           fsr1l	equ	0xFE1
 17170                           indf2	equ	0xFDF
 17171                           postinc2	equ	0xFDE
 17172                           postdec2	equ	0xFDD
 17173                           plusw2	equ	0xFDB
 17174                           fsr2h	equ	0xFDA
 17175                           fsr2l	equ	0xFD9
 17176                           status	equ	0xFD8
 17177                           
 17178 ;; *************** function __fat_offset_from_cluster *****************
 17179 ;; Defined at:
 17180 ;;		line 83 in file "fat16.c"
 17181 ;; Parameters:    Size  Location     Type
 17182 ;;  cluster         2    0[BANK0 ] unsigned int 
 17183 ;; Auto vars:     Size  Location     Type
 17184 ;;		None
 17185 ;; Return value:  Size  Location     Type
 17186 ;;                  2    0[BANK0 ] unsigned int 
 17187 ;; Registers used:
 17188 ;;		wreg, status,2, status,0
 17189 ;; Tracked objects:
 17190 ;;		On entry : 0/0
 17191 ;;		On exit  : 0/0
 17192 ;;		Unchanged: 0/0
 17193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17194 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17197 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17198 ;;Total ram usage:        2 bytes
 17199 ;; Hardware stack levels used:    1
 17200 ;; Hardware stack levels required when called:   10
 17201 ;; This function calls:
 17202 ;;		Nothing
 17203 ;; This function is called by:
 17204 ;;		__find_nth_cluster
 17205 ;;		__make_cluster_chain
 17206 ;;		__read_fat
 17207 ;; This function uses a non-reentrant model
 17208 ;;
 17209                           
 17210                           	psect	text65
 17211  015F14                     __ptext65:
 17212                           	opt stack 0
 17213  015F14                     __fat_offset_from_cluster:
 17214                           	opt stack 16
 17215                           
 17216                           ;fat16.c: 85: cluster &= 0xFF;
 17217                           
 17218                           ; BSR set to: 0
 17219                           ;incstack = 0
 17220  015F14  0EFF               	movlw	255
 17221  015F16  0100               	movlb	0	; () banked
 17222  015F18  1760               	andwf	__fat_offset_from_cluster@cluster& (0+255),f,b
 17223  015F1A  0E00               	movlw	0
 17224  015F1C  1761               	andwf	(__fat_offset_from_cluster@cluster+1)& (0+255),f,b
 17225                           
 17226                           ; BSR set to: 0
 17227                           ;fat16.c: 86: cluster <<= 1;
 17228  015F1E  90D8               	bcf	status,0,c
 17229  015F20  3760               	rlcf	__fat_offset_from_cluster@cluster& (0+255),f,b
 17230  015F22  3761               	rlcf	(__fat_offset_from_cluster@cluster+1)& (0+255),f,b
 17231                           
 17232                           ; BSR set to: 0
 17233                           ;fat16.c: 87: return cluster;
 17234  015F24  C060  F060         	movff	__fat_offset_from_cluster@cluster,?__fat_offset_from_cluster
 17235  015F28  C061  F061         	movff	__fat_offset_from_cluster@cluster+1,?__fat_offset_from_cluster+1
 17236  015F2C  0012               	return	
 17237  015F2E                     __end_of__fat_offset_from_cluster:
 17238                           	opt stack 0
 17239                           tblptru	equ	0xFF8
 17240                           tblptrh	equ	0xFF7
 17241                           tblptrl	equ	0xFF6
 17242                           tablat	equ	0xFF5
 17243                           prodh	equ	0xFF4
 17244                           prodl	equ	0xFF3
 17245                           postinc0	equ	0xFEE
 17246                           wreg	equ	0xFE8
 17247                           postdec1	equ	0xFE5
 17248                           plusw1	equ	0xFE3
 17249                           fsr1h	equ	0xFE2
 17250                           fsr1l	equ	0xFE1
 17251                           indf2	equ	0xFDF
 17252                           postinc2	equ	0xFDE
 17253                           postdec2	equ	0xFDD
 17254                           plusw2	equ	0xFDB
 17255                           fsr2h	equ	0xFDA
 17256                           fsr2l	equ	0xFD9
 17257                           status	equ	0xFD8
 17258                           
 17259 ;; *************** function __data_sector_from_cluster *****************
 17260 ;; Defined at:
 17261 ;;		line 71 in file "fat16.c"
 17262 ;; Parameters:    Size  Location     Type
 17263 ;;  fat_cluster     2    0[BANK0 ] unsigned int 
 17264 ;; Auto vars:     Size  Location     Type
 17265 ;;		None
 17266 ;; Return value:  Size  Location     Type
 17267 ;;                  2    0[BANK0 ] unsigned int 
 17268 ;; Registers used:
 17269 ;;		wreg, status,2, status,0
 17270 ;; Tracked objects:
 17271 ;;		On entry : 0/0
 17272 ;;		On exit  : 0/0
 17273 ;;		Unchanged: 0/0
 17274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17275 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17278 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17279 ;;Total ram usage:        2 bytes
 17280 ;; Hardware stack levels used:    1
 17281 ;; Hardware stack levels required when called:   10
 17282 ;; This function calls:
 17283 ;;		Nothing
 17284 ;; This function is called by:
 17285 ;;		_fat_read_from_file_fast
 17286 ;;		_fat_modify_file
 17287 ;;		_fat_copy_sector_to_buffer
 17288 ;; This function uses a non-reentrant model
 17289 ;;
 17290                           
 17291                           	psect	text66
 17292  015FC6                     __ptext66:
 17293                           	opt stack 0
 17294  015FC6                     __data_sector_from_cluster:
 17295                           	opt stack 17
 17296                           
 17297                           ;fat16.c: 73: return fat_cluster + 38 - 2;
 17298                           
 17299                           ; BSR set to: 0
 17300                           ;incstack = 0
 17301  015FC6  0E24               	movlw	36
 17302  015FC8  0100               	movlb	0	; () banked
 17303  015FCA  2560               	addwf	__data_sector_from_cluster@fat_cluster& (0+255),w,b
 17304  015FCC  6F60               	movwf	?__data_sector_from_cluster& (0+255),b
 17305  015FCE  0E00               	movlw	0
 17306  015FD0  2161               	addwfc	(__data_sector_from_cluster@fat_cluster+1)& (0+255),w,b
 17307  015FD2  6F61               	movwf	(?__data_sector_from_cluster+1)& (0+255),b
 17308  015FD4  0012               	return	
 17309  015FD6                     __end_of__data_sector_from_cluster:
 17310                           	opt stack 0
 17311                           tblptru	equ	0xFF8
 17312                           tblptrh	equ	0xFF7
 17313                           tblptrl	equ	0xFF6
 17314                           tablat	equ	0xFF5
 17315                           prodh	equ	0xFF4
 17316                           prodl	equ	0xFF3
 17317                           postinc0	equ	0xFEE
 17318                           wreg	equ	0xFE8
 17319                           postdec1	equ	0xFE5
 17320                           plusw1	equ	0xFE3
 17321                           fsr1h	equ	0xFE2
 17322                           fsr1l	equ	0xFE1
 17323                           indf2	equ	0xFDF
 17324                           postinc2	equ	0xFDE
 17325                           postdec2	equ	0xFDD
 17326                           plusw2	equ	0xFDB
 17327                           fsr2h	equ	0xFDA
 17328                           fsr2l	equ	0xFD9
 17329                           status	equ	0xFD8
 17330                           
 17331 ;; *************** function _fat_get_file_information *****************
 17332 ;; Defined at:
 17333 ;;		line 1421 in file "fat16.c"
 17334 ;; Parameters:    Size  Location     Type
 17335 ;;  file_number     1    wreg     unsigned char 
 17336 ;;  data            2   47[BANK0 ] PTR struct .
 17337 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 17338 ;; Auto vars:     Size  Location     Type
 17339 ;;  file_number     1   54[BANK0 ] unsigned char 
 17340 ;;  offset          2   52[BANK0 ] unsigned int 
 17341 ;;  root_sector     2   50[BANK0 ] unsigned int 
 17342 ;; Return value:  Size  Location     Type
 17343 ;;                  1    wreg      unsigned char 
 17344 ;; Registers used:
 17345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17346 ;; Tracked objects:
 17347 ;;		On entry : 0/0
 17348 ;;		On exit  : 0/0
 17349 ;;		Unchanged: 0/0
 17350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17351 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17352 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17353 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17354 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17355 ;;Total ram usage:        8 bytes
 17356 ;; Hardware stack levels used:    1
 17357 ;; Hardware stack levels required when called:   15
 17358 ;; This function calls:
 17359 ;;		__offset_from_file_number
 17360 ;;		__sector_from_file_number
 17361 ;;		_flash_partial_read
 17362 ;; This function is called by:
 17363 ;;		_fat_read_from_file
 17364 ;;		_fat_resize_file
 17365 ;;		_fat_modify_file
 17366 ;;		_fat_rename_file
 17367 ;; This function uses a non-reentrant model
 17368 ;;
 17369                           
 17370                           	psect	text67
 17371  0143A8                     __ptext67:
 17372                           	opt stack 0
 17373  0143A8                     _fat_get_file_information:
 17374                           	opt stack 12
 17375                           
 17376                           ; BSR set to: 0
 17377                           ;incstack = 0
 17378                           ;fat_get_file_information@file_number stored from wreg
 17379  0143A8  0100               	movlb	0	; () banked
 17380  0143AA  6F96               	movwf	fat_get_file_information@file_number& (0+255),b
 17381                           
 17382                           ;fat16.c: 1423: uint16_t root_sector;;fat16.c: 1424: uint16_t offset;;fat16.c: 1426: if(
      +                          file_number>=64)
 17383  0143AC  0E3F               	movlw	63
 17384  0143AE  0100               	movlb	0	; () banked
 17385  0143B0  6596               	cpfsgt	fat_get_file_information@file_number& (0+255),b
 17386  0143B2  D002               	goto	l2105
 17387                           
 17388                           ; BSR set to: 0
 17389                           ;fat16.c: 1427: {;fat16.c: 1429: return 0x01;
 17390  0143B4  0E01               	movlw	1
 17391                           
 17392                           ; BSR set to: 0
 17393  0143B6  0012               	return	
 17394  0143B8                     l2105:
 17395                           
 17396                           ; BSR set to: 0
 17397                           ;fat16.c: 1430: };fat16.c: 1433: root_sector = _sector_from_file_number(file_number);
 17398                           
 17399                           ; BSR set to: 0
 17400  0143B8  5196               	movf	fat_get_file_information@file_number& (0+255),w,b
 17401  0143BA  EC39  F0AD         	call	__sector_from_file_number
 17402  0143BE  C060  F092         	movff	?__sector_from_file_number,fat_get_file_information@root_sector
 17403  0143C2  C061  F093         	movff	?__sector_from_file_number+1,fat_get_file_information@root_sector+1
 17404                           
 17405                           ;fat16.c: 1434: offset = _offset_from_file_number(file_number);
 17406  0143C6  0100               	movlb	0	; () banked
 17407  0143C8  5196               	movf	fat_get_file_information@file_number& (0+255),w,b
 17408  0143CA  EC4B  F0AE         	call	__offset_from_file_number
 17409  0143CE  C060  F094         	movff	?__offset_from_file_number,fat_get_file_information@offset
 17410  0143D2  C061  F095         	movff	?__offset_from_file_number+1,fat_get_file_information@offset+1
 17411                           
 17412                           ;fat16.c: 1437: flash_partial_read(root_sector, offset, 32, (uint8_t*) data);
 17413  0143D6  C092  F087         	movff	fat_get_file_information@root_sector,flash_partial_read@page
 17414  0143DA  C093  F088         	movff	fat_get_file_information@root_sector+1,flash_partial_read@page+1
 17415  0143DE  C094  F089         	movff	fat_get_file_information@offset,flash_partial_read@start
 17416  0143E2  C095  F08A         	movff	fat_get_file_information@offset+1,flash_partial_read@start+1
 17417  0143E6  0E00               	movlw	0
 17418  0143E8  0100               	movlb	0	; () banked
 17419  0143EA  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 17420  0143EC  0E20               	movlw	32
 17421  0143EE  6F8B               	movwf	flash_partial_read@length& (0+255),b
 17422  0143F0  C08F  F08D         	movff	fat_get_file_information@data,flash_partial_read@data
 17423  0143F4  C090  F08E         	movff	fat_get_file_information@data+1,flash_partial_read@data+1
 17424  0143F8  ECB0  F0AE         	call	_flash_partial_read	;wreg free
 17425                           
 17426                           ;fat16.c: 1440: if((data->fileName[0]==0x00) || (data->fileName[0]==0xE5))
 17427  0143FC  C08F  FFD9         	movff	fat_get_file_information@data,fsr2l
 17428  014400  C090  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 17429  014404  50DF               	movf	indf2,w,c
 17430  014406  B4D8               	btfsc	status,2,c
 17431  014408  D008               	goto	u14230
 17432  01440A  C08F  FFD9         	movff	fat_get_file_information@data,fsr2l
 17433  01440E  C090  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 17434  014412  0EE5               	movlw	229
 17435  014414  18DE               	xorwf	postinc2,w,c
 17436  014416  A4D8               	btfss	status,2,c
 17437  014418  D002               	goto	l2107
 17438  01441A                     u14230:
 17439                           
 17440                           ;fat16.c: 1441: {;fat16.c: 1443: return 0x02;
 17441  01441A  0E02               	movlw	2
 17442  01441C  0012               	return	
 17443  01441E                     l2107:
 17444                           
 17445                           ;fat16.c: 1444: };fat16.c: 1447: return 0x00;
 17446  01441E  0E00               	movlw	0
 17447  014420  0012               	return	
 17448  014422                     __end_of_fat_get_file_information:
 17449                           	opt stack 0
 17450                           tblptru	equ	0xFF8
 17451                           tblptrh	equ	0xFF7
 17452                           tblptrl	equ	0xFF6
 17453                           tablat	equ	0xFF5
 17454                           prodh	equ	0xFF4
 17455                           prodl	equ	0xFF3
 17456                           postinc0	equ	0xFEE
 17457                           wreg	equ	0xFE8
 17458                           postdec1	equ	0xFE5
 17459                           plusw1	equ	0xFE3
 17460                           fsr1h	equ	0xFE2
 17461                           fsr1l	equ	0xFE1
 17462                           indf2	equ	0xFDF
 17463                           postinc2	equ	0xFDE
 17464                           postdec2	equ	0xFDD
 17465                           plusw2	equ	0xFDB
 17466                           fsr2h	equ	0xFDA
 17467                           fsr2l	equ	0xFD9
 17468                           status	equ	0xFD8
 17469                           
 17470 ;; *************** function _fat_get_file_size *****************
 17471 ;; Defined at:
 17472 ;;		line 563 in file "fat16.c"
 17473 ;; Parameters:    Size  Location     Type
 17474 ;;  file_number     1    wreg     unsigned char 
 17475 ;; Auto vars:     Size  Location     Type
 17476 ;;  file_number     1   65[BANK0 ] unsigned char 
 17477 ;;  file_size       4   61[BANK0 ] unsigned long 
 17478 ;;  offset          2   59[BANK0 ] unsigned int 
 17479 ;;  sector          2   57[BANK0 ] unsigned int 
 17480 ;; Return value:  Size  Location     Type
 17481 ;;                  4   53[BANK0 ] unsigned long 
 17482 ;; Registers used:
 17483 ;;		wreg, status,2, status,0, cstack
 17484 ;; Tracked objects:
 17485 ;;		On entry : 0/0
 17486 ;;		On exit  : 0/0
 17487 ;;		Unchanged: 0/0
 17488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17489 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17490 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17492 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17493 ;;Total ram usage:       13 bytes
 17494 ;; Hardware stack levels used:    1
 17495 ;; Hardware stack levels required when called:   16
 17496 ;; This function calls:
 17497 ;;		__offset_from_file_number
 17498 ;;		__root_is_available
 17499 ;;		__sector_from_file_number
 17500 ;;		_flash_partial_read
 17501 ;; This function is called by:
 17502 ;;		_configFile_read
 17503 ;;		_fat_append_to_file
 17504 ;;		_fat_copy_file
 17505 ;;		_fat_copy_sector_to_buffer
 17506 ;;		_fat_write_sector_from_buffer
 17507 ;; This function uses a non-reentrant model
 17508 ;;
 17509                           
 17510                           	psect	text68
 17511  014422                     __ptext68:
 17512                           	opt stack 0
 17513  014422                     _fat_get_file_size:
 17514                           	opt stack 12
 17515                           
 17516                           ;incstack = 0
 17517                           ;fat_get_file_size@file_number stored from wreg
 17518  014422  0100               	movlb	0	; () banked
 17519  014424  6FA1               	movwf	fat_get_file_size@file_number& (0+255),b
 17520                           
 17521                           ;fat16.c: 565: uint32_t file_size;;fat16.c: 566: uint16_t sector;;fat16.c: 567: uint16_t
      +                           offset;;fat16.c: 570: if(_root_is_available(file_number))
 17522  014426  0100               	movlb	0	; () banked
 17523  014428  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 17524  01442A  EC17  F0A4         	call	__root_is_available
 17525  01442E  0900               	iorlw	0
 17526  014430  B4D8               	btfsc	status,2,c
 17527  014432  D006               	goto	l1867
 17528                           
 17529                           ;fat16.c: 571: {;fat16.c: 573: return 0xFFFFFFFF;
 17530  014434  0100               	movlb	0	; () banked
 17531  014436  6995               	setf	?_fat_get_file_size& (0+255),b
 17532  014438  6996               	setf	(?_fat_get_file_size+1)& (0+255),b
 17533  01443A  6997               	setf	(?_fat_get_file_size+2)& (0+255),b
 17534  01443C  6998               	setf	(?_fat_get_file_size+3)& (0+255),b
 17535  01443E  0012               	return	
 17536  014440                     l1867:
 17537                           
 17538                           ;fat16.c: 574: };fat16.c: 577: sector = _sector_from_file_number(file_number);
 17539                           
 17540                           ; BSR set to: 0
 17541  014440  0100               	movlb	0	; () banked
 17542  014442  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 17543  014444  EC39  F0AD         	call	__sector_from_file_number
 17544  014448  C060  F099         	movff	?__sector_from_file_number,fat_get_file_size@sector
 17545  01444C  C061  F09A         	movff	?__sector_from_file_number+1,fat_get_file_size@sector+1
 17546                           
 17547                           ;fat16.c: 578: offset = _offset_from_file_number(file_number);
 17548  014450  0100               	movlb	0	; () banked
 17549  014452  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 17550  014454  EC4B  F0AE         	call	__offset_from_file_number
 17551  014458  C060  F09B         	movff	?__offset_from_file_number,fat_get_file_size@offset
 17552  01445C  C061  F09C         	movff	?__offset_from_file_number+1,fat_get_file_size@offset+1
 17553                           
 17554                           ;fat16.c: 581: flash_partial_read(sector, offset+28, 4, &file_size);
 17555  014460  C099  F087         	movff	fat_get_file_size@sector,flash_partial_read@page
 17556  014464  C09A  F088         	movff	fat_get_file_size@sector+1,flash_partial_read@page+1
 17557  014468  0E1C               	movlw	28
 17558  01446A  0100               	movlb	0	; () banked
 17559  01446C  259B               	addwf	fat_get_file_size@offset& (0+255),w,b
 17560  01446E  6F89               	movwf	flash_partial_read@start& (0+255),b
 17561  014470  0E00               	movlw	0
 17562  014472  219C               	addwfc	(fat_get_file_size@offset+1)& (0+255),w,b
 17563  014474  6F8A               	movwf	(flash_partial_read@start+1)& (0+255),b
 17564  014476  0E00               	movlw	0
 17565  014478  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 17566  01447A  0E04               	movlw	4
 17567  01447C  6F8B               	movwf	flash_partial_read@length& (0+255),b
 17568  01447E  0E9D               	movlw	low fat_get_file_size@file_size
 17569  014480  6F8D               	movwf	flash_partial_read@data& (0+255),b
 17570  014482  0E00               	movlw	high fat_get_file_size@file_size
 17571  014484  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 17572  014486  ECB0  F0AE         	call	_flash_partial_read	;wreg free
 17573                           
 17574                           ;fat16.c: 584: return file_size;
 17575  01448A  C09D  F095         	movff	fat_get_file_size@file_size,?_fat_get_file_size
 17576  01448E  C09E  F096         	movff	fat_get_file_size@file_size+1,?_fat_get_file_size+1
 17577  014492  C09F  F097         	movff	fat_get_file_size@file_size+2,?_fat_get_file_size+2
 17578  014496  C0A0  F098         	movff	fat_get_file_size@file_size+3,?_fat_get_file_size+3
 17579  01449A  0012               	return	
 17580  01449C                     __end_of_fat_get_file_size:
 17581                           	opt stack 0
 17582                           tblptru	equ	0xFF8
 17583                           tblptrh	equ	0xFF7
 17584                           tblptrl	equ	0xFF6
 17585                           tablat	equ	0xFF5
 17586                           prodh	equ	0xFF4
 17587                           prodl	equ	0xFF3
 17588                           postinc0	equ	0xFEE
 17589                           wreg	equ	0xFE8
 17590                           postdec1	equ	0xFE5
 17591                           plusw1	equ	0xFE3
 17592                           fsr1h	equ	0xFE2
 17593                           fsr1l	equ	0xFE1
 17594                           indf2	equ	0xFDF
 17595                           postinc2	equ	0xFDE
 17596                           postdec2	equ	0xFDD
 17597                           plusw2	equ	0xFDB
 17598                           fsr2h	equ	0xFDA
 17599                           fsr2l	equ	0xFD9
 17600                           status	equ	0xFD8
 17601                           
 17602 ;; *************** function __root_is_available *****************
 17603 ;; Defined at:
 17604 ;;		line 409 in file "fat16.c"
 17605 ;; Parameters:    Size  Location     Type
 17606 ;;  file_number     1    wreg     unsigned char 
 17607 ;; Auto vars:     Size  Location     Type
 17608 ;;  file_number     1   51[BANK0 ] unsigned char 
 17609 ;;  offset          2   49[BANK0 ] unsigned int 
 17610 ;;  root_sector     2   47[BANK0 ] unsigned int 
 17611 ;;  first_byte      1   52[BANK0 ] unsigned char 
 17612 ;; Return value:  Size  Location     Type
 17613 ;;                  1    wreg      unsigned char 
 17614 ;; Registers used:
 17615 ;;		wreg, status,2, status,0, cstack
 17616 ;; Tracked objects:
 17617 ;;		On entry : 0/0
 17618 ;;		On exit  : 0/0
 17619 ;;		Unchanged: 0/0
 17620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17622 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17624 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17625 ;;Total ram usage:        6 bytes
 17626 ;; Hardware stack levels used:    1
 17627 ;; Hardware stack levels required when called:   15
 17628 ;; This function calls:
 17629 ;;		__offset_from_file_number
 17630 ;;		__sector_from_file_number
 17631 ;;		_flash_partial_read
 17632 ;; This function is called by:
 17633 ;;		__get_available_root_entry
 17634 ;;		_fat_get_file_size
 17635 ;;		_fat_resize_file
 17636 ;;		_fat_delete_file
 17637 ;;		_fat_append_to_file
 17638 ;;		_fat_copy_file
 17639 ;;		_fat_copy_sector_to_buffer
 17640 ;;		_fat_write_sector_from_buffer
 17641 ;; This function uses a non-reentrant model
 17642 ;;
 17643                           
 17644                           	psect	text69
 17645  01482E                     __ptext69:
 17646                           	opt stack 0
 17647  01482E                     __root_is_available:
 17648                           	opt stack 12
 17649                           
 17650                           ;incstack = 0
 17651                           ;__root_is_available@file_number stored from wreg
 17652  01482E  0100               	movlb	0	; () banked
 17653  014830  6F93               	movwf	__root_is_available@file_number& (0+255),b
 17654                           
 17655                           ;fat16.c: 411: uint16_t root_sector;;fat16.c: 412: uint16_t offset;;fat16.c: 413: uint8_
      +                          t first_byte;;fat16.c: 417: if(file_number>=64)
 17656  014832  0E3F               	movlw	63
 17657  014834  0100               	movlb	0	; () banked
 17658  014836  6593               	cpfsgt	__root_is_available@file_number& (0+255),b
 17659  014838  D002               	goto	l1828
 17660                           
 17661                           ; BSR set to: 0
 17662                           ;fat16.c: 418: {;fat16.c: 420: return 0;
 17663  01483A  0E00               	movlw	0
 17664                           
 17665                           ; BSR set to: 0
 17666  01483C  0012               	return	
 17667  01483E                     l1828:
 17668                           
 17669                           ; BSR set to: 0
 17670                           ;fat16.c: 421: };fat16.c: 424: root_sector = _sector_from_file_number(file_number);
 17671                           
 17672                           ; BSR set to: 0
 17673  01483E  5193               	movf	__root_is_available@file_number& (0+255),w,b
 17674  014840  EC39  F0AD         	call	__sector_from_file_number
 17675  014844  C060  F08F         	movff	?__sector_from_file_number,__root_is_available@root_sector
 17676  014848  C061  F090         	movff	?__sector_from_file_number+1,__root_is_available@root_sector+1
 17677                           
 17678                           ;fat16.c: 425: offset = _offset_from_file_number(file_number);
 17679  01484C  0100               	movlb	0	; () banked
 17680  01484E  5193               	movf	__root_is_available@file_number& (0+255),w,b
 17681  014850  EC4B  F0AE         	call	__offset_from_file_number
 17682  014854  C060  F091         	movff	?__offset_from_file_number,__root_is_available@offset
 17683  014858  C061  F092         	movff	?__offset_from_file_number+1,__root_is_available@offset+1
 17684                           
 17685                           ;fat16.c: 428: flash_partial_read(root_sector, offset, 1, &first_byte);
 17686  01485C  C08F  F087         	movff	__root_is_available@root_sector,flash_partial_read@page
 17687  014860  C090  F088         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 17688  014864  C091  F089         	movff	__root_is_available@offset,flash_partial_read@start
 17689  014868  C092  F08A         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 17690  01486C  0E00               	movlw	0
 17691  01486E  0100               	movlb	0	; () banked
 17692  014870  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 17693  014872  0E01               	movlw	1
 17694  014874  6F8B               	movwf	flash_partial_read@length& (0+255),b
 17695  014876  0E94               	movlw	low __root_is_available@first_byte
 17696  014878  6F8D               	movwf	flash_partial_read@data& (0+255),b
 17697  01487A  0E00               	movlw	high __root_is_available@first_byte
 17698  01487C  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 17699  01487E  ECB0  F0AE         	call	_flash_partial_read	;wreg free
 17700                           
 17701                           ;fat16.c: 431: if((first_byte==0x00) || (first_byte==0xE5))
 17702  014882  0100               	movlb	0	; () banked
 17703  014884  5194               	movf	__root_is_available@first_byte& (0+255),w,b
 17704  014886  B4D8               	btfsc	status,2,c
 17705  014888  D004               	goto	u12740
 17706                           
 17707                           ; BSR set to: 0
 17708  01488A  0EE5               	movlw	229
 17709  01488C  1994               	xorwf	__root_is_available@first_byte& (0+255),w,b
 17710  01488E  A4D8               	btfss	status,2,c
 17711  014890  D002               	goto	l1830
 17712  014892                     u12740:
 17713                           
 17714                           ; BSR set to: 0
 17715                           ;fat16.c: 432: {;fat16.c: 434: return 1;
 17716                           
 17717                           ; BSR set to: 0
 17718  014892  0E01               	movlw	1
 17719                           
 17720                           ; BSR set to: 0
 17721                           ;fat16.c: 435: }
 17722                           
 17723                           ; BSR set to: 0
 17724  014894  0012               	return	
 17725  014896                     l1830:
 17726                           
 17727                           ; BSR set to: 0
 17728                           ;fat16.c: 436: else;fat16.c: 437: {;fat16.c: 439: return 0;
 17729                           
 17730                           ; BSR set to: 0
 17731  014896  0E00               	movlw	0
 17732                           
 17733                           ; BSR set to: 0
 17734  014898  0012               	return	
 17735  01489A                     __end_of__root_is_available:
 17736                           	opt stack 0
 17737                           tblptru	equ	0xFF8
 17738                           tblptrh	equ	0xFF7
 17739                           tblptrl	equ	0xFF6
 17740                           tablat	equ	0xFF5
 17741                           prodh	equ	0xFF4
 17742                           prodl	equ	0xFF3
 17743                           postinc0	equ	0xFEE
 17744                           wreg	equ	0xFE8
 17745                           postdec1	equ	0xFE5
 17746                           plusw1	equ	0xFE3
 17747                           fsr1h	equ	0xFE2
 17748                           fsr1l	equ	0xFE1
 17749                           indf2	equ	0xFDF
 17750                           postinc2	equ	0xFDE
 17751                           postdec2	equ	0xFDD
 17752                           plusw2	equ	0xFDB
 17753                           fsr2h	equ	0xFDA
 17754                           fsr2l	equ	0xFD9
 17755                           status	equ	0xFD8
 17756                           
 17757 ;; *************** function _flash_partial_read *****************
 17758 ;; Defined at:
 17759 ;;		line 452 in file "flash.c"
 17760 ;; Parameters:    Size  Location     Type
 17761 ;;  page            2   39[BANK0 ] unsigned int 
 17762 ;;  start           2   41[BANK0 ] unsigned int 
 17763 ;;  length          2   43[BANK0 ] unsigned int 
 17764 ;;  data            2   45[BANK0 ] PTR unsigned char 
 17765 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 17766 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 17767 ;;		 -> _root_is_available@first_byte(1), 
 17768 ;; Auto vars:     Size  Location     Type
 17769 ;;		None
 17770 ;; Return value:  Size  Location     Type
 17771 ;;                  1    wreg      void 
 17772 ;; Registers used:
 17773 ;;		wreg, status,2, status,0, cstack
 17774 ;; Tracked objects:
 17775 ;;		On entry : 0/0
 17776 ;;		On exit  : 0/0
 17777 ;;		Unchanged: 0/0
 17778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17779 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17782 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17783 ;;Total ram usage:        8 bytes
 17784 ;; Hardware stack levels used:    1
 17785 ;; Hardware stack levels required when called:   14
 17786 ;; This function calls:
 17787 ;;		__flash_partial_read
 17788 ;; This function is called by:
 17789 ;;		__root_is_available
 17790 ;;		__read_fat
 17791 ;;		_fat_get_file_size
 17792 ;;		_fat_read_from_file_fast
 17793 ;;		_fat_get_file_information
 17794 ;;		__get_first_cluster
 17795 ;; This function uses a non-reentrant model
 17796 ;;
 17797                           
 17798                           	psect	text70
 17799  015D60                     __ptext70:
 17800                           	opt stack 0
 17801  015D60                     _flash_partial_read:
 17802                           	opt stack 12
 17803                           
 17804                           ;flash.c: 455: _flash_partial_read(page, start, length, data);
 17805                           
 17806                           ; BSR set to: 0
 17807                           ;incstack = 0
 17808  015D60  C087  F073         	movff	flash_partial_read@page,__flash_partial_read@page
 17809  015D64  C088  F074         	movff	flash_partial_read@page+1,__flash_partial_read@page+1
 17810  015D68  C089  F075         	movff	flash_partial_read@start,__flash_partial_read@start
 17811  015D6C  C08A  F076         	movff	flash_partial_read@start+1,__flash_partial_read@start+1
 17812  015D70  C08B  F077         	movff	flash_partial_read@length,__flash_partial_read@length
 17813  015D74  C08C  F078         	movff	flash_partial_read@length+1,__flash_partial_read@length+1
 17814  015D78  C08D  F079         	movff	flash_partial_read@data,__flash_partial_read@data
 17815  015D7C  C08E  F07A         	movff	flash_partial_read@data+1,__flash_partial_read@data+1
 17816  015D80  EC4E  F0A2         	call	__flash_partial_read	;wreg free
 17817  015D84  0012               	return		;funcret
 17818  015D86                     __end_of_flash_partial_read:
 17819                           	opt stack 0
 17820                           tblptru	equ	0xFF8
 17821                           tblptrh	equ	0xFF7
 17822                           tblptrl	equ	0xFF6
 17823                           tablat	equ	0xFF5
 17824                           prodh	equ	0xFF4
 17825                           prodl	equ	0xFF3
 17826                           postinc0	equ	0xFEE
 17827                           wreg	equ	0xFE8
 17828                           postdec1	equ	0xFE5
 17829                           plusw1	equ	0xFE3
 17830                           fsr1h	equ	0xFE2
 17831                           fsr1l	equ	0xFE1
 17832                           indf2	equ	0xFDF
 17833                           postinc2	equ	0xFDE
 17834                           postdec2	equ	0xFDD
 17835                           plusw2	equ	0xFDB
 17836                           fsr2h	equ	0xFDA
 17837                           fsr2l	equ	0xFD9
 17838                           status	equ	0xFD8
 17839                           
 17840 ;; *************** function __sector_from_file_number *****************
 17841 ;; Defined at:
 17842 ;;		line 53 in file "fat16.c"
 17843 ;; Parameters:    Size  Location     Type
 17844 ;;  file_number     1    wreg     unsigned char 
 17845 ;; Auto vars:     Size  Location     Type
 17846 ;;  file_number     1    2[BANK0 ] unsigned char 
 17847 ;;  sector          2    3[BANK0 ] unsigned int 
 17848 ;; Return value:  Size  Location     Type
 17849 ;;                  2    0[BANK0 ] unsigned int 
 17850 ;; Registers used:
 17851 ;;		wreg, status,2, status,0
 17852 ;; Tracked objects:
 17853 ;;		On entry : 0/0
 17854 ;;		On exit  : 0/0
 17855 ;;		Unchanged: 0/0
 17856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17857 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17858 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17860 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17861 ;;Total ram usage:        5 bytes
 17862 ;; Hardware stack levels used:    1
 17863 ;; Hardware stack levels required when called:   10
 17864 ;; This function calls:
 17865 ;;		Nothing
 17866 ;; This function is called by:
 17867 ;;		__root_is_available
 17868 ;;		__write_root
 17869 ;;		_fat_get_file_size
 17870 ;;		_fat_get_file_information
 17871 ;;		__delete_root
 17872 ;;		__get_first_cluster
 17873 ;; This function uses a non-reentrant model
 17874 ;;
 17875                           
 17876                           	psect	text71
 17877  015A72                     __ptext71:
 17878                           	opt stack 0
 17879  015A72                     __sector_from_file_number:
 17880                           	opt stack 16
 17881                           
 17882                           ;incstack = 0
 17883                           ;__sector_from_file_number@file_number stored from wreg
 17884  015A72  0100               	movlb	0	; () banked
 17885  015A74  6F62               	movwf	__sector_from_file_number@file_number& (0+255),b
 17886                           
 17887                           ;fat16.c: 55: uint16_t sector;;fat16.c: 56: sector = (uint16_t) file_number;
 17888  015A76  C062  F063         	movff	__sector_from_file_number@file_number,__sector_from_file_number@sector
 17889  015A7A  0100               	movlb	0	; () banked
 17890  015A7C  6B64               	clrf	(__sector_from_file_number@sector+1)& (0+255),b
 17891                           
 17892                           ; BSR set to: 0
 17893                           ;fat16.c: 57: sector >>= 4;
 17894  015A7E  3B63               	swapf	__sector_from_file_number@sector& (0+255),f,b
 17895  015A80  3B64               	swapf	(__sector_from_file_number@sector+1)& (0+255),f,b
 17896  015A82  0E0F               	movlw	15
 17897  015A84  1763               	andwf	__sector_from_file_number@sector& (0+255),f,b
 17898  015A86  5164               	movf	(__sector_from_file_number@sector+1)& (0+255),w,b
 17899  015A88  0BF0               	andlw	240
 17900  015A8A  1363               	iorwf	__sector_from_file_number@sector& (0+255),f,b
 17901  015A8C  0E0F               	movlw	15
 17902  015A8E  1764               	andwf	(__sector_from_file_number@sector+1)& (0+255),f,b
 17903                           
 17904                           ; BSR set to: 0
 17905                           ;fat16.c: 58: sector += 34;
 17906  015A90  0E22               	movlw	34
 17907  015A92  2763               	addwf	__sector_from_file_number@sector& (0+255),f,b
 17908  015A94  0E00               	movlw	0
 17909  015A96  2364               	addwfc	(__sector_from_file_number@sector+1)& (0+255),f,b
 17910                           
 17911                           ; BSR set to: 0
 17912                           ;fat16.c: 59: return sector;
 17913  015A98  C063  F060         	movff	__sector_from_file_number@sector,?__sector_from_file_number
 17914  015A9C  C064  F061         	movff	__sector_from_file_number@sector+1,?__sector_from_file_number+1
 17915  015AA0  0012               	return	
 17916  015AA2                     __end_of__sector_from_file_number:
 17917                           	opt stack 0
 17918                           tblptru	equ	0xFF8
 17919                           tblptrh	equ	0xFF7
 17920                           tblptrl	equ	0xFF6
 17921                           tablat	equ	0xFF5
 17922                           prodh	equ	0xFF4
 17923                           prodl	equ	0xFF3
 17924                           postinc0	equ	0xFEE
 17925                           wreg	equ	0xFE8
 17926                           postdec1	equ	0xFE5
 17927                           plusw1	equ	0xFE3
 17928                           fsr1h	equ	0xFE2
 17929                           fsr1l	equ	0xFE1
 17930                           indf2	equ	0xFDF
 17931                           postinc2	equ	0xFDE
 17932                           postdec2	equ	0xFDD
 17933                           plusw2	equ	0xFDB
 17934                           fsr2h	equ	0xFDA
 17935                           fsr2l	equ	0xFD9
 17936                           status	equ	0xFD8
 17937                           
 17938 ;; *************** function __offset_from_file_number *****************
 17939 ;; Defined at:
 17940 ;;		line 62 in file "fat16.c"
 17941 ;; Parameters:    Size  Location     Type
 17942 ;;  file_number     1    wreg     unsigned char 
 17943 ;; Auto vars:     Size  Location     Type
 17944 ;;  file_number     1    2[BANK0 ] unsigned char 
 17945 ;;  offset          2    3[BANK0 ] unsigned int 
 17946 ;; Return value:  Size  Location     Type
 17947 ;;                  2    0[BANK0 ] unsigned int 
 17948 ;; Registers used:
 17949 ;;		wreg, status,2, status,0
 17950 ;; Tracked objects:
 17951 ;;		On entry : 0/0
 17952 ;;		On exit  : 0/0
 17953 ;;		Unchanged: 0/0
 17954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17955 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17956 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17958 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17959 ;;Total ram usage:        5 bytes
 17960 ;; Hardware stack levels used:    1
 17961 ;; Hardware stack levels required when called:   10
 17962 ;; This function calls:
 17963 ;;		Nothing
 17964 ;; This function is called by:
 17965 ;;		__root_is_available
 17966 ;;		__write_root
 17967 ;;		_fat_get_file_size
 17968 ;;		_fat_get_file_information
 17969 ;;		__delete_root
 17970 ;;		__get_first_cluster
 17971 ;; This function uses a non-reentrant model
 17972 ;;
 17973                           
 17974                           	psect	text72
 17975  015C96                     __ptext72:
 17976                           	opt stack 0
 17977  015C96                     __offset_from_file_number:
 17978                           	opt stack 16
 17979                           
 17980                           ; BSR set to: 0
 17981                           ;incstack = 0
 17982                           ;__offset_from_file_number@file_number stored from wreg
 17983  015C96  0100               	movlb	0	; () banked
 17984  015C98  6F62               	movwf	__offset_from_file_number@file_number& (0+255),b
 17985                           
 17986                           ;fat16.c: 64: uint16_t offset;;fat16.c: 65: offset = file_number;
 17987  015C9A  C062  F063         	movff	__offset_from_file_number@file_number,__offset_from_file_number@offset
 17988  015C9E  0100               	movlb	0	; () banked
 17989  015CA0  6B64               	clrf	(__offset_from_file_number@offset+1)& (0+255),b
 17990                           
 17991                           ; BSR set to: 0
 17992                           ;fat16.c: 66: offset &= 0b1111;
 17993  015CA2  0E0F               	movlw	15
 17994  015CA4  1763               	andwf	__offset_from_file_number@offset& (0+255),f,b
 17995  015CA6  0E00               	movlw	0
 17996  015CA8  1764               	andwf	(__offset_from_file_number@offset+1)& (0+255),f,b
 17997                           
 17998                           ; BSR set to: 0
 17999                           ;fat16.c: 67: offset <<= 5;
 18000  015CAA  0E05               	movlw	5
 18001  015CAC                     u11625:
 18002  015CAC  90D8               	bcf	status,0,c
 18003  015CAE  3763               	rlcf	__offset_from_file_number@offset& (0+255),f,b
 18004  015CB0  3764               	rlcf	(__offset_from_file_number@offset+1)& (0+255),f,b
 18005  015CB2  2EE8               	decfsz	wreg,f,c
 18006  015CB4  D7FB               	goto	u11625
 18007                           
 18008                           ; BSR set to: 0
 18009                           ;fat16.c: 68: return offset;
 18010  015CB6  C063  F060         	movff	__offset_from_file_number@offset,?__offset_from_file_number
 18011  015CBA  C064  F061         	movff	__offset_from_file_number@offset+1,?__offset_from_file_number+1
 18012  015CBE  0012               	return	
 18013  015CC0                     __end_of__offset_from_file_number:
 18014                           	opt stack 0
 18015                           tblptru	equ	0xFF8
 18016                           tblptrh	equ	0xFF7
 18017                           tblptrl	equ	0xFF6
 18018                           tablat	equ	0xFF5
 18019                           prodh	equ	0xFF4
 18020                           prodl	equ	0xFF3
 18021                           postinc0	equ	0xFEE
 18022                           wreg	equ	0xFE8
 18023                           postdec1	equ	0xFE5
 18024                           plusw1	equ	0xFE3
 18025                           fsr1h	equ	0xFE2
 18026                           fsr1l	equ	0xFE1
 18027                           indf2	equ	0xFDF
 18028                           postinc2	equ	0xFDE
 18029                           postdec2	equ	0xFDD
 18030                           plusw2	equ	0xFDB
 18031                           fsr2h	equ	0xFDA
 18032                           fsr2l	equ	0xFD9
 18033                           status	equ	0xFD8
 18034                           
 18035 ;; *************** function _fat_find_file *****************
 18036 ;; Defined at:
 18037 ;;		line 518 in file "fat16.c"
 18038 ;; Parameters:    Size  Location     Type
 18039 ;;  name            2   43[BANK0 ] PTR unsigned char 
 18040 ;;		 -> configFile_used_name(8), configFile_name(8), 
 18041 ;;  extension       2   45[BANK0 ] PTR unsigned char 
 18042 ;;		 -> configFile_used_extention(3), configFile_extention(3), 
 18043 ;; Auto vars:     Size  Location     Type
 18044 ;;  offset          2   52[BANK0 ] unsigned int 
 18045 ;;  sector          2   50[BANK0 ] unsigned int 
 18046 ;;  file_number     1   49[BANK0 ] unsigned char 
 18047 ;; Return value:  Size  Location     Type
 18048 ;;                  1    wreg      unsigned char 
 18049 ;; Registers used:
 18050 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18051 ;; Tracked objects:
 18052 ;;		On entry : 0/0
 18053 ;;		On exit  : 0/0
 18054 ;;		Unchanged: 0/0
 18055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18056 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18057 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18058 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18059 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18060 ;;Total ram usage:       11 bytes
 18061 ;; Hardware stack levels used:    1
 18062 ;; Hardware stack levels required when called:   15
 18063 ;; This function calls:
 18064 ;;		_flash_sector_read
 18065 ;;		_strncmp
 18066 ;; This function is called by:
 18067 ;;		_fat_create_file
 18068 ;;		_configFile_read
 18069 ;;		_configFile_write
 18070 ;; This function uses a non-reentrant model
 18071 ;;
 18072                           
 18073                           	psect	text73
 18074  011F0C                     __ptext73:
 18075                           	opt stack 0
 18076  011F0C                     _fat_find_file:
 18077                           	opt stack 13
 18078                           
 18079                           ;fat16.c: 520: uint8_t file_number = 0;
 18080                           
 18081                           ; BSR set to: 0
 18082                           ;incstack = 0
 18083  011F0C  0E00               	movlw	0
 18084  011F0E  0100               	movlb	0	; () banked
 18085  011F10  6F91               	movwf	fat_find_file@file_number& (0+255),b
 18086                           
 18087                           ;fat16.c: 521: uint16_t sector;;fat16.c: 522: uint16_t offset;;fat16.c: 524: for(sector 
      +                          = 34; sector <= 37; ++sector)
 18088  011F12  0E00               	movlw	0
 18089  011F14  6F93               	movwf	(fat_find_file@sector+1)& (0+255),b
 18090  011F16  0E22               	movlw	34
 18091  011F18  6F92               	movwf	fat_find_file@sector& (0+255),b
 18092                           
 18093                           ; BSR set to: 0
 18094  011F1A  5193               	movf	(fat_find_file@sector+1)& (0+255),w,b
 18095  011F1C  E169               	bnz	l1855
 18096  011F1E  0E26               	movlw	38
 18097  011F20  5D92               	subwf	fat_find_file@sector& (0+255),w,b
 18098  011F22  B0D8               	btfsc	status,0,c
 18099  011F24  D065               	goto	u14200
 18100                           
 18101                           ; BSR set to: 0
 18102                           ;fat16.c: 525: {;fat16.c: 527: flash_sector_read(sector, buffer);
 18103                           
 18104                           ; BSR set to: 0
 18105                           
 18106                           ; BSR set to: 0
 18107  011F26  C092  F087         	movff	fat_find_file@sector,flash_sector_read@page
 18108  011F2A  C093  F088         	movff	fat_find_file@sector+1,flash_sector_read@page+1
 18109  011F2E  0E00               	movlw	low _buffer
 18110  011F30  6F89               	movwf	flash_sector_read@data& (0+255),b
 18111  011F32  0E0A               	movlw	high _buffer
 18112  011F34  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 18113  011F36  EC9C  F0AE         	call	_flash_sector_read	;wreg free
 18114                           
 18115                           ;fat16.c: 529: for(offset = 0; offset<512; offset += 32)
 18116  011F3A  0E00               	movlw	0
 18117  011F3C  0100               	movlb	0	; () banked
 18118  011F3E  6F95               	movwf	(fat_find_file@offset+1)& (0+255),b
 18119  011F40  0E00               	movlw	0
 18120  011F42  6F94               	movwf	fat_find_file@offset& (0+255),b
 18121  011F44                     l15054:
 18122                           
 18123                           ; BSR set to: 0
 18124  011F44  0E02               	movlw	2
 18125  011F46  5D95               	subwf	(fat_find_file@offset+1)& (0+255),w,b
 18126  011F48  B0D8               	btfsc	status,0,c
 18127  011F4A  D04D               	goto	u14190
 18128                           
 18129                           ; BSR set to: 0
 18130                           ;fat16.c: 530: {;fat16.c: 531: if(buffer[offset]==0x00)
 18131                           
 18132                           ; BSR set to: 0
 18133                           
 18134                           ; BSR set to: 0
 18135  011F4C  0E00               	movlw	low _buffer
 18136  011F4E  2594               	addwf	fat_find_file@offset& (0+255),w,b
 18137  011F50  6ED9               	movwf	fsr2l,c
 18138  011F52  0E0A               	movlw	high _buffer
 18139  011F54  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 18140  011F56  6EDA               	movwf	fsr2h,c
 18141  011F58  50DF               	movf	indf2,w,c
 18142  011F5A  A4D8               	btfss	status,2,c
 18143  011F5C  D002               	goto	l1858
 18144                           
 18145                           ; BSR set to: 0
 18146                           ;fat16.c: 532: {;fat16.c: 535: return 0xFF;
 18147  011F5E  0EFF               	movlw	255
 18148                           
 18149                           ; BSR set to: 0
 18150  011F60  0012               	return	
 18151  011F62                     l1858:
 18152                           
 18153                           ; BSR set to: 0
 18154                           ;fat16.c: 537: else if(buffer[offset]==0xE5)
 18155                           
 18156                           ; BSR set to: 0
 18157  011F62  0E00               	movlw	low _buffer
 18158  011F64  2594               	addwf	fat_find_file@offset& (0+255),w,b
 18159  011F66  6ED9               	movwf	fsr2l,c
 18160  011F68  0E0A               	movlw	high _buffer
 18161  011F6A  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 18162  011F6C  6EDA               	movwf	fsr2h,c
 18163  011F6E  0EE5               	movlw	229
 18164  011F70  18DE               	xorwf	postinc2,w,c
 18165  011F72  B4D8               	btfsc	status,2,c
 18166  011F74  D032               	goto	l1864
 18167                           
 18168                           ; BSR set to: 0
 18169                           ;fat16.c: 543: else;fat16.c: 544: {;fat16.c: 546: if(strncmp(name, &buffer[offset], 8) =
      +                          = 0)
 18170                           
 18171                           ; BSR set to: 0
 18172                           
 18173                           ; BSR set to: 0
 18174                           ;fat16.c: 538: {;fat16.c: 542: }
 18175  011F76  C08B  F060         	movff	fat_find_file@name,strncmp@s1
 18176  011F7A  C08C  F061         	movff	fat_find_file@name+1,strncmp@s1+1
 18177  011F7E  0E00               	movlw	low _buffer
 18178  011F80  2594               	addwf	fat_find_file@offset& (0+255),w,b
 18179  011F82  6F62               	movwf	strncmp@s2& (0+255),b
 18180  011F84  0E0A               	movlw	high _buffer
 18181  011F86  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 18182  011F88  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 18183  011F8A  0E00               	movlw	0
 18184  011F8C  6F65               	movwf	(strncmp@len+1)& (0+255),b
 18185  011F8E  0E08               	movlw	8
 18186  011F90  6F64               	movwf	strncmp@len& (0+255),b
 18187  011F92  EC18  F0A1         	call	_strncmp	;wreg free
 18188  011F96  0100               	movlb	0	; () banked
 18189  011F98  5160               	movf	?_strncmp& (0+255),w,b
 18190  011F9A  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 18191  011F9C  A4D8               	btfss	status,2,c
 18192  011F9E  D01D               	goto	l1864
 18193                           
 18194                           ; BSR set to: 0
 18195                           ;fat16.c: 547: {;fat16.c: 549: if(strncmp(extension, &buffer[offset+8], 3) == 0)
 18196  011FA0  C08D  F060         	movff	fat_find_file@extension,strncmp@s1
 18197  011FA4  C08E  F061         	movff	fat_find_file@extension+1,strncmp@s1+1
 18198  011FA8  0E08               	movlw	8
 18199  011FAA  2594               	addwf	fat_find_file@offset& (0+255),w,b
 18200  011FAC  6F8F               	movwf	??_fat_find_file& (0+255),b
 18201  011FAE  0E00               	movlw	0
 18202  011FB0  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 18203  011FB2  6F90               	movwf	(??_fat_find_file+1)& (0+255),b
 18204  011FB4  0E00               	movlw	low _buffer
 18205  011FB6  258F               	addwf	??_fat_find_file& (0+255),w,b
 18206  011FB8  6F62               	movwf	strncmp@s2& (0+255),b
 18207  011FBA  0E0A               	movlw	high _buffer
 18208  011FBC  2190               	addwfc	(??_fat_find_file+1)& (0+255),w,b
 18209  011FBE  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 18210  011FC0  0E00               	movlw	0
 18211  011FC2  6F65               	movwf	(strncmp@len+1)& (0+255),b
 18212  011FC4  0E03               	movlw	3
 18213  011FC6  6F64               	movwf	strncmp@len& (0+255),b
 18214  011FC8  EC18  F0A1         	call	_strncmp	;wreg free
 18215  011FCC  0100               	movlb	0	; () banked
 18216  011FCE  5160               	movf	?_strncmp& (0+255),w,b
 18217  011FD0  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 18218  011FD2  A4D8               	btfss	status,2,c
 18219  011FD4  D002               	goto	l1864
 18220                           
 18221                           ; BSR set to: 0
 18222                           ;fat16.c: 550: {;fat16.c: 553: return file_number;
 18223  011FD6  5191               	movf	fat_find_file@file_number& (0+255),w,b
 18224                           
 18225                           ; BSR set to: 0
 18226  011FD8  0012               	return	
 18227  011FDA                     l1864:
 18228                           
 18229                           ; BSR set to: 0
 18230                           ;fat16.c: 554: };fat16.c: 555: };fat16.c: 556: };fat16.c: 557: ++file_number;
 18231                           
 18232                           ; BSR set to: 0
 18233                           
 18234                           ; BSR set to: 0
 18235                           
 18236                           ; BSR set to: 0
 18237                           
 18238                           ; BSR set to: 0
 18239  011FDA  2B91               	incf	fat_find_file@file_number& (0+255),f,b
 18240                           
 18241                           ; BSR set to: 0
 18242  011FDC  0E20               	movlw	32
 18243  011FDE  2794               	addwf	fat_find_file@offset& (0+255),f,b
 18244  011FE0  0E00               	movlw	0
 18245  011FE2  2395               	addwfc	(fat_find_file@offset+1)& (0+255),f,b
 18246  011FE4  D7AF               	goto	l15054
 18247  011FE6                     u14190:
 18248                           
 18249                           ; BSR set to: 0
 18250                           
 18251                           ; BSR set to: 0
 18252  011FE6  4B92               	infsnz	fat_find_file@sector& (0+255),f,b
 18253  011FE8  2B93               	incf	(fat_find_file@sector+1)& (0+255),f,b
 18254                           
 18255                           ; BSR set to: 0
 18256  011FEA  5193               	movf	(fat_find_file@sector+1)& (0+255),w,b
 18257  011FEC  E101               	bnz	l15088
 18258  011FEE  D797               	goto	L4
 18259  011FF0                     u14200:
 18260  011FF0                     l1855:
 18261  011FF0                     l15088:
 18262                           
 18263                           ; BSR set to: 0
 18264                           ;fat16.c: 558: };fat16.c: 559: };fat16.c: 560: return 0xFF;
 18265  011FF0  0EFF               	movlw	255
 18266  011FF2  0012               	return	
 18267  011FF4                     __end_of_fat_find_file:
 18268                           	opt stack 0
 18269                           tblptru	equ	0xFF8
 18270                           tblptrh	equ	0xFF7
 18271                           tblptrl	equ	0xFF6
 18272                           tablat	equ	0xFF5
 18273                           prodh	equ	0xFF4
 18274                           prodl	equ	0xFF3
 18275                           postinc0	equ	0xFEE
 18276                           wreg	equ	0xFE8
 18277                           postdec1	equ	0xFE5
 18278                           plusw1	equ	0xFE3
 18279                           fsr1h	equ	0xFE2
 18280                           fsr1l	equ	0xFE1
 18281                           indf2	equ	0xFDF
 18282                           postinc2	equ	0xFDE
 18283                           postdec2	equ	0xFDD
 18284                           plusw2	equ	0xFDB
 18285                           fsr2h	equ	0xFDA
 18286                           fsr2l	equ	0xFD9
 18287                           status	equ	0xFD8
 18288                           
 18289 ;; *************** function _strncmp *****************
 18290 ;; Defined at:
 18291 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
 18292 ;; Parameters:    Size  Location     Type
 18293 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 18294 ;;		 -> configFile_used_extention(3), configFile_used_name(8), configFile_extention(3), configFile_name(8), 
 18295 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 18296 ;;		 -> buffer(512), 
 18297 ;;  len             2    4[BANK0 ] unsigned int 
 18298 ;; Auto vars:     Size  Location     Type
 18299 ;;		None
 18300 ;; Return value:  Size  Location     Type
 18301 ;;                  2    0[BANK0 ] int 
 18302 ;; Registers used:
 18303 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 18304 ;; Tracked objects:
 18305 ;;		On entry : 0/0
 18306 ;;		On exit  : 0/0
 18307 ;;		Unchanged: 0/0
 18308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18309 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18311 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18312 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18313 ;;Total ram usage:        9 bytes
 18314 ;; Hardware stack levels used:    1
 18315 ;; Hardware stack levels required when called:   10
 18316 ;; This function calls:
 18317 ;;		Nothing
 18318 ;; This function is called by:
 18319 ;;		_fat_find_file
 18320 ;; This function uses a non-reentrant model
 18321 ;;
 18322                           
 18323                           	psect	text74
 18324  014230                     __ptext74:
 18325                           	opt stack 0
 18326  014230                     _strncmp:
 18327                           	opt stack 17
 18328                           
 18329                           ; BSR set to: 0
 18330                           ;incstack = 0
 18331  014230  D031               	goto	l3844
 18332  014232                     l14076:
 18333  014232  C060  FFD9         	movff	strncmp@s1,fsr2l
 18334  014236  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 18335  01423A  50DF               	movf	indf2,w,c
 18336  01423C  B4D8               	btfsc	status,2,c
 18337  01423E  D00C               	goto	u12760
 18338  014240  C062  FFD9         	movff	strncmp@s2,fsr2l
 18339  014244  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 18340  014248  C060  FFE1         	movff	strncmp@s1,fsr1l
 18341  01424C  C061  FFE2         	movff	strncmp@s1+1,fsr1h
 18342  014250  50DE               	movf	postinc2,w,c
 18343  014252  18E6               	xorwf	postinc1,w,c
 18344  014254  B4D8               	btfsc	status,2,c
 18345  014256  D019               	goto	l3846
 18346  014258                     u12760:
 18347  014258  C062  FFD9         	movff	strncmp@s2,fsr2l
 18348  01425C  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 18349  014260  50DF               	movf	indf2,w,c
 18350  014262  0100               	movlb	0	; () banked
 18351  014264  6F66               	movwf	??_strncmp& (0+255),b
 18352  014266  6B67               	clrf	(??_strncmp+1)& (0+255),b
 18353  014268  1F66               	comf	??_strncmp& (0+255),f,b
 18354  01426A  1F67               	comf	(??_strncmp+1)& (0+255),f,b
 18355  01426C  4B66               	infsnz	??_strncmp& (0+255),f,b
 18356  01426E  2B67               	incf	(??_strncmp+1)& (0+255),f,b
 18357  014270  C060  FFD9         	movff	strncmp@s1,fsr2l
 18358  014274  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 18359  014278  50DF               	movf	indf2,w,c
 18360  01427A  6F68               	movwf	(??_strncmp+2)& (0+255),b
 18361  01427C  5168               	movf	(??_strncmp+2)& (0+255),w,b
 18362  01427E  2566               	addwf	??_strncmp& (0+255),w,b
 18363  014280  6F60               	movwf	?_strncmp& (0+255),b
 18364  014282  0E00               	movlw	0
 18365  014284  2167               	addwfc	(??_strncmp+1)& (0+255),w,b
 18366  014286  6F61               	movwf	(?_strncmp+1)& (0+255),b
 18367                           
 18368                           ; BSR set to: 0
 18369  014288  0012               	return	
 18370  01428A                     l3846:
 18371                           
 18372                           ; BSR set to: 0
 18373  01428A  0100               	movlb	0	; () banked
 18374  01428C  4B60               	infsnz	strncmp@s1& (0+255),f,b
 18375  01428E  2B61               	incf	(strncmp@s1+1)& (0+255),f,b
 18376  014290  4B62               	infsnz	strncmp@s2& (0+255),f,b
 18377  014292  2B63               	incf	(strncmp@s2+1)& (0+255),f,b
 18378  014294                     l3844:
 18379                           
 18380                           ; BSR set to: 0
 18381  014294  0100               	movlb	0	; () banked
 18382  014296  0764               	decf	strncmp@len& (0+255),f,b
 18383  014298  A0D8               	btfss	status,0,c
 18384  01429A  0765               	decf	(strncmp@len+1)& (0+255),f,b
 18385  01429C  2964               	incf	strncmp@len& (0+255),w,b
 18386  01429E  E1C9               	bnz	l14076
 18387  0142A0  2965               	incf	(strncmp@len+1)& (0+255),w,b
 18388  0142A2  A4D8               	btfss	status,2,c
 18389  0142A4  D7C6               	goto	l3845
 18390                           
 18391                           ; BSR set to: 0
 18392                           
 18393                           ; BSR set to: 0
 18394  0142A6  0E00               	movlw	0
 18395  0142A8  6F61               	movwf	(?_strncmp+1)& (0+255),b
 18396  0142AA  0E00               	movlw	0
 18397  0142AC  6F60               	movwf	?_strncmp& (0+255),b
 18398  0142AE  0012               	return	
 18399  0142B0                     __end_of_strncmp:
 18400                           	opt stack 0
 18401                           tblptru	equ	0xFF8
 18402                           tblptrh	equ	0xFF7
 18403                           tblptrl	equ	0xFF6
 18404                           tablat	equ	0xFF5
 18405                           prodh	equ	0xFF4
 18406                           prodl	equ	0xFF3
 18407                           postinc0	equ	0xFEE
 18408                           wreg	equ	0xFE8
 18409                           postinc1	equ	0xFE6
 18410                           postdec1	equ	0xFE5
 18411                           plusw1	equ	0xFE3
 18412                           fsr1h	equ	0xFE2
 18413                           fsr1l	equ	0xFE1
 18414                           indf2	equ	0xFDF
 18415                           postinc2	equ	0xFDE
 18416                           postdec2	equ	0xFDD
 18417                           plusw2	equ	0xFDB
 18418                           fsr2h	equ	0xFDA
 18419                           fsr2l	equ	0xFD9
 18420                           status	equ	0xFD8
 18421                           
 18422 ;; *************** function __parse_item *****************
 18423 ;; Defined at:
 18424 ;;		line 111 in file "config_file.c"
 18425 ;; Parameters:    Size  Location     Type
 18426 ;;  item_string     2   57[BANK0 ] PTR unsigned char 
 18427 ;;		 -> configFile_read@item_string(31), 
 18428 ;;  value_string    2   59[BANK0 ] PTR unsigned char 
 18429 ;;		 -> configFile_read@value_string(12), 
 18430 ;; Auto vars:     Size  Location     Type
 18431 ;;		None
 18432 ;; Return value:  Size  Location     Type
 18433 ;;                  1    wreg      unsigned char 
 18434 ;; Registers used:
 18435 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18436 ;; Tracked objects:
 18437 ;;		On entry : 0/0
 18438 ;;		On exit  : 0/0
 18439 ;;		Unchanged: 0/0
 18440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18441 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18444 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18445 ;;Total ram usage:        4 bytes
 18446 ;; Hardware stack levels used:    1
 18447 ;; Hardware stack levels required when called:   12
 18448 ;; This function calls:
 18449 ;;		__steps_from_degrees
 18450 ;;		_atoi
 18451 ;;		_atol
 18452 ;;		_stricmp
 18453 ;; This function is called by:
 18454 ;;		_configFile_read
 18455 ;; This function uses a non-reentrant model
 18456 ;;
 18457                           
 18458                           	psect	text75
 18459  00BDE2                     __ptext75:
 18460                           	opt stack 0
 18461  00BDE2                     __parse_item:
 18462                           	opt stack 16
 18463                           
 18464                           ;config_file.c: 113: if(stricmp(item_string, full_circle_in_steps_string)==0)
 18465                           
 18466                           ; BSR set to: 0
 18467                           ;incstack = 0
 18468  00BDE2  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18469  00BDE6  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18470  00BDEA  0E12               	movlw	low _full_circle_in_steps_string
 18471  00BDEC  0100               	movlb	0	; () banked
 18472  00BDEE  6F63               	movwf	stricmp@s2& (0+255),b
 18473  00BDF0  0EA2               	movlw	high _full_circle_in_steps_string
 18474  00BDF2  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18475  00BDF4  EC66  F0A6         	call	_stricmp	;wreg free
 18476  00BDF8  0100               	movlb	0	; () banked
 18477  00BDFA  5161               	movf	?_stricmp& (0+255),w,b
 18478  00BDFC  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18479  00BDFE  A4D8               	btfss	status,2,c
 18480  00BE00  D00F               	goto	l3049
 18481                           
 18482                           ; BSR set to: 0
 18483                           ;config_file.c: 114: {;config_file.c: 115: config.full_circle_in_steps = atol(value_stri
      +                          ng);
 18484  00BE02  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18485  00BE06  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18486  00BE0A  EC25  F08D         	call	_atol	;wreg free
 18487  00BE0E  C06C  F196         	movff	?_atol,_config
 18488  00BE12  C06D  F197         	movff	?_atol+1,_config+1
 18489  00BE16  C06E  F198         	movff	?_atol+2,_config+2
 18490  00BE1A  C06F  F199         	movff	?_atol+3,_config+3
 18491                           
 18492                           ;config_file.c: 116: return 1;;	Return value of __parse_item is never used
 18493  00BE1E  0012               	return	
 18494  00BE20                     l3049:
 18495                           
 18496                           ;config_file.c: 117: };config_file.c: 119: if(stricmp(item_string, overshoot_in_steps_st
      +                          ring)==0)
 18497  00BE20  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18498  00BE24  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18499  00BE28  0E27               	movlw	low _overshoot_in_steps_string
 18500  00BE2A  0100               	movlb	0	; () banked
 18501  00BE2C  6F63               	movwf	stricmp@s2& (0+255),b
 18502  00BE2E  0EA2               	movlw	high _overshoot_in_steps_string
 18503  00BE30  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18504  00BE32  EC66  F0A6         	call	_stricmp	;wreg free
 18505  00BE36  0100               	movlb	0	; () banked
 18506  00BE38  5161               	movf	?_stricmp& (0+255),w,b
 18507  00BE3A  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18508  00BE3C  A4D8               	btfss	status,2,c
 18509  00BE3E  D00B               	goto	l3051
 18510                           
 18511                           ; BSR set to: 0
 18512                           ;config_file.c: 120: {;config_file.c: 121: config.overshoot_in_steps = atoi(value_string
      +                          );
 18513  00BE40  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18514  00BE44  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18515  00BE48  EC5F  F094         	call	_atoi	;wreg free
 18516  00BE4C  C066  F19B         	movff	?_atoi,_config+5
 18517  00BE50  C067  F19C         	movff	?_atoi+1,_config+6
 18518                           
 18519                           ;config_file.c: 122: return 2;;	Return value of __parse_item is never used
 18520  00BE54  0012               	return	
 18521  00BE56                     l3051:
 18522                           
 18523                           ;config_file.c: 123: };config_file.c: 125: if(stricmp(item_string, inverse_direction_str
      +                          ing)==0)
 18524  00BE56  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18525  00BE5A  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18526  00BE5E  0E5E               	movlw	low _inverse_direction_string
 18527  00BE60  0100               	movlb	0	; () banked
 18528  00BE62  6F63               	movwf	stricmp@s2& (0+255),b
 18529  00BE64  0EA2               	movlw	high _inverse_direction_string
 18530  00BE66  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18531  00BE68  EC66  F0A6         	call	_stricmp	;wreg free
 18532  00BE6C  0100               	movlb	0	; () banked
 18533  00BE6E  5161               	movf	?_stricmp& (0+255),w,b
 18534  00BE70  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18535  00BE72  A4D8               	btfss	status,2,c
 18536  00BE74  D00B               	goto	l3052
 18537                           
 18538                           ; BSR set to: 0
 18539                           ;config_file.c: 126: {;config_file.c: 127: config.inverse_direction = atol(value_string)
      +                          ;
 18540  00BE76  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18541  00BE7A  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18542  00BE7E  EC25  F08D         	call	_atol	;wreg free
 18543  00BE82  0100               	movlb	0	; () banked
 18544  00BE84  516C               	movf	?_atol& (0+255),w,b
 18545  00BE86  0101               	movlb	1	; () banked
 18546  00BE88  6F9A               	movwf	(_config+4)& (0+255),b
 18547                           
 18548                           ; BSR set to: 1
 18549                           ;config_file.c: 128: return 3;;	Return value of __parse_item is never used
 18550  00BE8A  0012               	return	
 18551  00BE8C                     l3052:
 18552                           
 18553                           ;config_file.c: 129: };config_file.c: 131: if(stricmp(item_string, overshoot_in_steps_st
      +                          ring)==0)
 18554                           
 18555                           ; BSR set to: 1
 18556  00BE8C  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18557  00BE90  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18558  00BE94  0E27               	movlw	low _overshoot_in_steps_string
 18559  00BE96  0100               	movlb	0	; () banked
 18560  00BE98  6F63               	movwf	stricmp@s2& (0+255),b
 18561  00BE9A  0EA2               	movlw	high _overshoot_in_steps_string
 18562  00BE9C  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18563  00BE9E  EC66  F0A6         	call	_stricmp	;wreg free
 18564  00BEA2  0100               	movlb	0	; () banked
 18565  00BEA4  5161               	movf	?_stricmp& (0+255),w,b
 18566  00BEA6  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18567  00BEA8  A4D8               	btfss	status,2,c
 18568  00BEAA  D00B               	goto	l3053
 18569                           
 18570                           ; BSR set to: 0
 18571                           ;config_file.c: 132: {;config_file.c: 133: config.overshoot_in_steps = atoi(value_string
      +                          );
 18572  00BEAC  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18573  00BEB0  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18574  00BEB4  EC5F  F094         	call	_atoi	;wreg free
 18575  00BEB8  C066  F19B         	movff	?_atoi,_config+5
 18576  00BEBC  C067  F19C         	movff	?_atoi+1,_config+6
 18577                           
 18578                           ;config_file.c: 134: return 4;;	Return value of __parse_item is never used
 18579  00BEC0  0012               	return	
 18580  00BEC2                     l3053:
 18581                           
 18582                           ;config_file.c: 135: };config_file.c: 137: if(stricmp(item_string, overshoot_cost_in_ste
      +                          ps_string)==0)
 18583  00BEC2  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18584  00BEC6  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18585  00BECA  0EBB               	movlw	low _overshoot_cost_in_steps_string
 18586  00BECC  0100               	movlb	0	; () banked
 18587  00BECE  6F63               	movwf	stricmp@s2& (0+255),b
 18588  00BED0  0EA1               	movlw	high _overshoot_cost_in_steps_string
 18589  00BED2  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18590  00BED4  EC66  F0A6         	call	_stricmp	;wreg free
 18591  00BED8  0100               	movlb	0	; () banked
 18592  00BEDA  5161               	movf	?_stricmp& (0+255),w,b
 18593  00BEDC  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18594  00BEDE  A4D8               	btfss	status,2,c
 18595  00BEE0  D00B               	goto	l3054
 18596                           
 18597                           ; BSR set to: 0
 18598                           ;config_file.c: 138: {;config_file.c: 139: config.overshoot_cost_in_steps = atoi(value_s
      +                          tring);
 18599  00BEE2  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18600  00BEE6  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18601  00BEEA  EC5F  F094         	call	_atoi	;wreg free
 18602  00BEEE  C066  F19D         	movff	?_atoi,_config+7
 18603  00BEF2  C067  F19E         	movff	?_atoi+1,_config+8
 18604                           
 18605                           ;config_file.c: 140: return 5;;	Return value of __parse_item is never used
 18606  00BEF6  0012               	return	
 18607  00BEF8                     l3054:
 18608                           
 18609                           ;config_file.c: 141: };config_file.c: 143: if(stricmp(item_string, minimum_speed_string)
      +                          ==0)
 18610  00BEF8  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18611  00BEFC  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18612  00BF00  0EAC               	movlw	low _minimum_speed_string
 18613  00BF02  0100               	movlb	0	; () banked
 18614  00BF04  6F63               	movwf	stricmp@s2& (0+255),b
 18615  00BF06  0EA2               	movlw	high _minimum_speed_string
 18616  00BF08  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18617  00BF0A  EC66  F0A6         	call	_stricmp	;wreg free
 18618  00BF0E  0100               	movlb	0	; () banked
 18619  00BF10  5161               	movf	?_stricmp& (0+255),w,b
 18620  00BF12  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18621  00BF14  A4D8               	btfss	status,2,c
 18622  00BF16  D00B               	goto	l3055
 18623                           
 18624                           ; BSR set to: 0
 18625                           ;config_file.c: 144: {;config_file.c: 145: config.minimum_speed = atoi(value_string);
 18626  00BF18  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18627  00BF1C  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18628  00BF20  EC5F  F094         	call	_atoi	;wreg free
 18629  00BF24  C066  F19F         	movff	?_atoi,_config+9
 18630  00BF28  C067  F1A0         	movff	?_atoi+1,_config+10
 18631                           
 18632                           ;config_file.c: 146: return 6;;	Return value of __parse_item is never used
 18633  00BF2C  0012               	return	
 18634  00BF2E                     l3055:
 18635                           
 18636                           ;config_file.c: 147: };config_file.c: 149: if(stricmp(item_string, maximum_speed_string)
      +                          ==0)
 18637  00BF2E  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18638  00BF32  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18639  00BF36  0E9E               	movlw	low _maximum_speed_string
 18640  00BF38  0100               	movlb	0	; () banked
 18641  00BF3A  6F63               	movwf	stricmp@s2& (0+255),b
 18642  00BF3C  0EA2               	movlw	high _maximum_speed_string
 18643  00BF3E  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18644  00BF40  EC66  F0A6         	call	_stricmp	;wreg free
 18645  00BF44  0100               	movlb	0	; () banked
 18646  00BF46  5161               	movf	?_stricmp& (0+255),w,b
 18647  00BF48  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18648  00BF4A  A4D8               	btfss	status,2,c
 18649  00BF4C  D00B               	goto	l3056
 18650                           
 18651                           ; BSR set to: 0
 18652                           ;config_file.c: 150: {;config_file.c: 151: config.maximum_speed = atoi(value_string);
 18653  00BF4E  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18654  00BF52  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18655  00BF56  EC5F  F094         	call	_atoi	;wreg free
 18656  00BF5A  C066  F1A1         	movff	?_atoi,_config+11
 18657  00BF5E  C067  F1A2         	movff	?_atoi+1,_config+12
 18658                           
 18659                           ;config_file.c: 152: return 7;;	Return value of __parse_item is never used
 18660  00BF62  0012               	return	
 18661  00BF64                     l3056:
 18662                           
 18663                           ;config_file.c: 153: };config_file.c: 155: if(stricmp(item_string, initial_speed_arc_str
      +                          ing)==0)
 18664  00BF64  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18665  00BF68  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18666  00BF6C  0E4C               	movlw	low _initial_speed_arc_string
 18667  00BF6E  0100               	movlb	0	; () banked
 18668  00BF70  6F63               	movwf	stricmp@s2& (0+255),b
 18669  00BF72  0EA2               	movlw	high _initial_speed_arc_string
 18670  00BF74  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18671  00BF76  EC66  F0A6         	call	_stricmp	;wreg free
 18672  00BF7A  0100               	movlb	0	; () banked
 18673  00BF7C  5161               	movf	?_stricmp& (0+255),w,b
 18674  00BF7E  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18675  00BF80  A4D8               	btfss	status,2,c
 18676  00BF82  D00B               	goto	l3057
 18677                           
 18678                           ; BSR set to: 0
 18679                           ;config_file.c: 156: {;config_file.c: 157: config.initial_speed_arc = atoi(value_string)
      +                          ;
 18680  00BF84  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18681  00BF88  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18682  00BF8C  EC5F  F094         	call	_atoi	;wreg free
 18683  00BF90  C066  F1A3         	movff	?_atoi,_config+13
 18684  00BF94  C067  F1A4         	movff	?_atoi+1,_config+14
 18685                           
 18686                           ;config_file.c: 158: return 8;;	Return value of __parse_item is never used
 18687  00BF98  0012               	return	
 18688  00BF9A                     l3057:
 18689                           
 18690                           ;config_file.c: 159: };config_file.c: 161: if(stricmp(item_string, maximum_speed_arc_str
      +                          ing)==0)
 18691  00BF9A  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18692  00BF9E  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18693  00BFA2  0E3A               	movlw	low _maximum_speed_arc_string
 18694  00BFA4  0100               	movlb	0	; () banked
 18695  00BFA6  6F63               	movwf	stricmp@s2& (0+255),b
 18696  00BFA8  0EA2               	movlw	high _maximum_speed_arc_string
 18697  00BFAA  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18698  00BFAC  EC66  F0A6         	call	_stricmp	;wreg free
 18699  00BFB0  0100               	movlb	0	; () banked
 18700  00BFB2  5161               	movf	?_stricmp& (0+255),w,b
 18701  00BFB4  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18702  00BFB6  A4D8               	btfss	status,2,c
 18703  00BFB8  D00B               	goto	l3058
 18704                           
 18705                           ; BSR set to: 0
 18706                           ;config_file.c: 162: {;config_file.c: 163: config.maximum_speed_arc = atoi(value_string)
      +                          ;
 18707  00BFBA  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18708  00BFBE  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18709  00BFC2  EC5F  F094         	call	_atoi	;wreg free
 18710  00BFC6  C066  F1A5         	movff	?_atoi,_config+15
 18711  00BFCA  C067  F1A6         	movff	?_atoi+1,_config+16
 18712                           
 18713                           ;config_file.c: 164: return 9;;	Return value of __parse_item is never used
 18714  00BFCE  0012               	return	
 18715  00BFD0                     l3058:
 18716                           
 18717                           ;config_file.c: 165: };config_file.c: 167: if(stricmp(item_string, initial_speed_manual_
      +                          string)==0)
 18718  00BFD0  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18719  00BFD4  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18720  00BFD8  0EFD               	movlw	low _initial_speed_manual_string
 18721  00BFDA  0100               	movlb	0	; () banked
 18722  00BFDC  6F63               	movwf	stricmp@s2& (0+255),b
 18723  00BFDE  0EA1               	movlw	high _initial_speed_manual_string
 18724  00BFE0  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18725  00BFE2  EC66  F0A6         	call	_stricmp	;wreg free
 18726  00BFE6  0100               	movlb	0	; () banked
 18727  00BFE8  5161               	movf	?_stricmp& (0+255),w,b
 18728  00BFEA  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18729  00BFEC  A4D8               	btfss	status,2,c
 18730  00BFEE  D00B               	goto	l3059
 18731                           
 18732                           ; BSR set to: 0
 18733                           ;config_file.c: 168: {;config_file.c: 169: config.initial_speed_manual = atoi(value_stri
      +                          ng);
 18734  00BFF0  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18735  00BFF4  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18736  00BFF8  EC5F  F094         	call	_atoi	;wreg free
 18737  00BFFC  C066  F1A7         	movff	?_atoi,_config+17
 18738  00C000  C067  F1A8         	movff	?_atoi+1,_config+18
 18739                           
 18740                           ;config_file.c: 170: return 10;;	Return value of __parse_item is never used
 18741  00C004  0012               	return	
 18742  00C006                     l3059:
 18743                           
 18744                           ;config_file.c: 171: };config_file.c: 173: if(stricmp(item_string, maximum_speed_manual_
      +                          string)==0)
 18745  00C006  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18746  00C00A  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18747  00C00E  0EE8               	movlw	low _maximum_speed_manual_string
 18748  00C010  0100               	movlb	0	; () banked
 18749  00C012  6F63               	movwf	stricmp@s2& (0+255),b
 18750  00C014  0EA1               	movlw	high _maximum_speed_manual_string
 18751  00C016  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18752  00C018  EC66  F0A6         	call	_stricmp	;wreg free
 18753  00C01C  0100               	movlb	0	; () banked
 18754  00C01E  5161               	movf	?_stricmp& (0+255),w,b
 18755  00C020  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18756  00C022  A4D8               	btfss	status,2,c
 18757  00C024  D00B               	goto	l3060
 18758                           
 18759                           ; BSR set to: 0
 18760                           ;config_file.c: 174: {;config_file.c: 175: config.maximum_speed_manual = atoi(value_stri
      +                          ng);
 18761  00C026  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18762  00C02A  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18763  00C02E  EC5F  F094         	call	_atoi	;wreg free
 18764  00C032  C066  F1A9         	movff	?_atoi,_config+19
 18765  00C036  C067  F1AA         	movff	?_atoi+1,_config+20
 18766                           
 18767                           ;config_file.c: 176: return 11;;	Return value of __parse_item is never used
 18768  00C03A  0012               	return	
 18769  00C03C                     l3060:
 18770                           
 18771                           ;config_file.c: 177: };config_file.c: 179: if(stricmp(item_string, beep_duration_string)
      +                          ==0)
 18772  00C03C  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18773  00C040  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18774  00C044  0E90               	movlw	low _beep_duration_string
 18775  00C046  0100               	movlb	0	; () banked
 18776  00C048  6F63               	movwf	stricmp@s2& (0+255),b
 18777  00C04A  0EA2               	movlw	high _beep_duration_string
 18778  00C04C  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18779  00C04E  EC66  F0A6         	call	_stricmp	;wreg free
 18780  00C052  0100               	movlb	0	; () banked
 18781  00C054  5161               	movf	?_stricmp& (0+255),w,b
 18782  00C056  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18783  00C058  A4D8               	btfss	status,2,c
 18784  00C05A  D00B               	goto	l3061
 18785                           
 18786                           ; BSR set to: 0
 18787                           ;config_file.c: 180: {;config_file.c: 181: config.beep_duration = atoi(value_string);
 18788  00C05C  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18789  00C060  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18790  00C064  EC5F  F094         	call	_atoi	;wreg free
 18791  00C068  0100               	movlb	0	; () banked
 18792  00C06A  5166               	movf	?_atoi& (0+255),w,b
 18793  00C06C  0101               	movlb	1	; () banked
 18794  00C06E  6FAB               	movwf	(_config+21)& (0+255),b
 18795                           
 18796                           ; BSR set to: 1
 18797                           ;config_file.c: 182: return 12;;	Return value of __parse_item is never used
 18798  00C070  0012               	return	
 18799  00C072                     l3061:
 18800                           
 18801                           ;config_file.c: 183: };config_file.c: 185: if(stricmp(item_string, use_cw_limit_string)=
      +                          =0)
 18802                           
 18803                           ; BSR set to: 1
 18804  00C072  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18805  00C076  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18806  00C07A  0EBA               	movlw	low _use_cw_limit_string
 18807  00C07C  0100               	movlb	0	; () banked
 18808  00C07E  6F63               	movwf	stricmp@s2& (0+255),b
 18809  00C080  0EA2               	movlw	high _use_cw_limit_string
 18810  00C082  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18811  00C084  EC66  F0A6         	call	_stricmp	;wreg free
 18812  00C088  0100               	movlb	0	; () banked
 18813  00C08A  5161               	movf	?_stricmp& (0+255),w,b
 18814  00C08C  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18815  00C08E  A4D8               	btfss	status,2,c
 18816  00C090  D00B               	goto	l3062
 18817                           
 18818                           ; BSR set to: 0
 18819                           ;config_file.c: 186: {;config_file.c: 187: config.use_cw_limit = atol(value_string);
 18820  00C092  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18821  00C096  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18822  00C09A  EC25  F08D         	call	_atol	;wreg free
 18823  00C09E  0100               	movlb	0	; () banked
 18824  00C0A0  516C               	movf	?_atol& (0+255),w,b
 18825  00C0A2  0101               	movlb	1	; () banked
 18826  00C0A4  6FAC               	movwf	(_config+22)& (0+255),b
 18827                           
 18828                           ; BSR set to: 1
 18829                           ;config_file.c: 188: return 13;;	Return value of __parse_item is never used
 18830  00C0A6  0012               	return	
 18831  00C0A8                     l3062:
 18832                           
 18833                           ;config_file.c: 189: };config_file.c: 191: if(stricmp(item_string, cw_limit_string)==0)
 18834                           
 18835                           ; BSR set to: 1
 18836  00C0A8  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18837  00C0AC  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18838  00C0B0  0ED1               	movlw	low _cw_limit_string
 18839  00C0B2  0100               	movlb	0	; () banked
 18840  00C0B4  6F63               	movwf	stricmp@s2& (0+255),b
 18841  00C0B6  0EA2               	movlw	high _cw_limit_string
 18842  00C0B8  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18843  00C0BA  EC66  F0A6         	call	_stricmp	;wreg free
 18844  00C0BE  0100               	movlb	0	; () banked
 18845  00C0C0  5161               	movf	?_stricmp& (0+255),w,b
 18846  00C0C2  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18847  00C0C4  A4D8               	btfss	status,2,c
 18848  00C0C6  D021               	goto	l3063
 18849                           
 18850                           ; BSR set to: 0
 18851                           ;config_file.c: 192: {;config_file.c: 193: config.cw_limit = atol(value_string);
 18852  00C0C8  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18853  00C0CC  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18854  00C0D0  EC25  F08D         	call	_atol	;wreg free
 18855  00C0D4  C06C  F1AD         	movff	?_atol,_config+23
 18856  00C0D8  C06D  F1AE         	movff	?_atol+1,_config+24
 18857  00C0DC  C06E  F1AF         	movff	?_atol+2,_config+25
 18858  00C0E0  C06F  F1B0         	movff	?_atol+3,_config+26
 18859                           
 18860                           ;config_file.c: 194: config.cw_limit_in_steps = _steps_from_degrees(config.cw_limit);
 18861  00C0E4  C1AD  F091         	movff	_config+23,__steps_from_degrees@degrees
 18862  00C0E8  C1AE  F092         	movff	_config+24,__steps_from_degrees@degrees+1
 18863  00C0EC  C1AF  F093         	movff	_config+25,__steps_from_degrees@degrees+2
 18864  00C0F0  C1B0  F094         	movff	_config+26,__steps_from_degrees@degrees+3
 18865  00C0F4  EC16  F078         	call	__steps_from_degrees	;wreg free
 18866  00C0F8  C091  F1B1         	movff	?__steps_from_degrees,_config+27
 18867  00C0FC  C092  F1B2         	movff	?__steps_from_degrees+1,_config+28
 18868  00C100  C093  F1B3         	movff	?__steps_from_degrees+2,_config+29
 18869  00C104  C094  F1B4         	movff	?__steps_from_degrees+3,_config+30
 18870                           
 18871                           ;config_file.c: 195: return 14;;	Return value of __parse_item is never used
 18872  00C108  0012               	return	
 18873  00C10A                     l3063:
 18874                           
 18875                           ;config_file.c: 196: };config_file.c: 198: if(stricmp(item_string, use_ccw_limit_string)
      +                          ==0)
 18876  00C10A  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18877  00C10E  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18878  00C112  0E82               	movlw	low _use_ccw_limit_string
 18879  00C114  0100               	movlb	0	; () banked
 18880  00C116  6F63               	movwf	stricmp@s2& (0+255),b
 18881  00C118  0EA2               	movlw	high _use_ccw_limit_string
 18882  00C11A  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18883  00C11C  EC66  F0A6         	call	_stricmp	;wreg free
 18884  00C120  0100               	movlb	0	; () banked
 18885  00C122  5161               	movf	?_stricmp& (0+255),w,b
 18886  00C124  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18887  00C126  A4D8               	btfss	status,2,c
 18888  00C128  D00B               	goto	l3064
 18889                           
 18890                           ; BSR set to: 0
 18891                           ;config_file.c: 199: {;config_file.c: 200: config.use_ccw_limit = atol(value_string);
 18892  00C12A  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18893  00C12E  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18894  00C132  EC25  F08D         	call	_atol	;wreg free
 18895  00C136  0100               	movlb	0	; () banked
 18896  00C138  516C               	movf	?_atol& (0+255),w,b
 18897  00C13A  0101               	movlb	1	; () banked
 18898  00C13C  6FB5               	movwf	(_config+31)& (0+255),b
 18899                           
 18900                           ; BSR set to: 1
 18901                           ;config_file.c: 201: return 15;;	Return value of __parse_item is never used
 18902  00C13E  0012               	return	
 18903  00C140                     l3064:
 18904                           
 18905                           ;config_file.c: 202: };config_file.c: 204: if(stricmp(item_string, ccw_limit_string)==0)
 18906                           
 18907                           ; BSR set to: 1
 18908  00C140  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18909  00C144  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18910  00C148  0EC7               	movlw	low _ccw_limit_string
 18911  00C14A  0100               	movlb	0	; () banked
 18912  00C14C  6F63               	movwf	stricmp@s2& (0+255),b
 18913  00C14E  0EA2               	movlw	high _ccw_limit_string
 18914  00C150  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18915  00C152  EC66  F0A6         	call	_stricmp	;wreg free
 18916  00C156  0100               	movlb	0	; () banked
 18917  00C158  5161               	movf	?_stricmp& (0+255),w,b
 18918  00C15A  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18919  00C15C  A4D8               	btfss	status,2,c
 18920  00C15E  D021               	goto	l3065
 18921                           
 18922                           ; BSR set to: 0
 18923                           ;config_file.c: 205: {;config_file.c: 206: config.ccw_limit = atol(value_string);
 18924  00C160  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18925  00C164  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18926  00C168  EC25  F08D         	call	_atol	;wreg free
 18927  00C16C  C06C  F1B6         	movff	?_atol,_config+32
 18928  00C170  C06D  F1B7         	movff	?_atol+1,_config+33
 18929  00C174  C06E  F1B8         	movff	?_atol+2,_config+34
 18930  00C178  C06F  F1B9         	movff	?_atol+3,_config+35
 18931                           
 18932                           ;config_file.c: 207: config.ccw_limit_in_steps = _steps_from_degrees(config.ccw_limit);
 18933  00C17C  C1B6  F091         	movff	_config+32,__steps_from_degrees@degrees
 18934  00C180  C1B7  F092         	movff	_config+33,__steps_from_degrees@degrees+1
 18935  00C184  C1B8  F093         	movff	_config+34,__steps_from_degrees@degrees+2
 18936  00C188  C1B9  F094         	movff	_config+35,__steps_from_degrees@degrees+3
 18937  00C18C  EC16  F078         	call	__steps_from_degrees	;wreg free
 18938  00C190  C091  F1BA         	movff	?__steps_from_degrees,_config+36
 18939  00C194  C092  F1BB         	movff	?__steps_from_degrees+1,_config+37
 18940  00C198  C093  F1BC         	movff	?__steps_from_degrees+2,_config+38
 18941  00C19C  C094  F1BD         	movff	?__steps_from_degrees+3,_config+39
 18942                           
 18943                           ;config_file.c: 208: return 16;;	Return value of __parse_item is never used
 18944  00C1A0  0012               	return	
 18945  00C1A2                     l3065:
 18946                           
 18947                           ;config_file.c: 209: };config_file.c: 211: if(stricmp(item_string, position_display_180_
      +                          string)==0)
 18948  00C1A2  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18949  00C1A6  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18950  00C1AA  0ED3               	movlw	low _position_display_180_string
 18951  00C1AC  0100               	movlb	0	; () banked
 18952  00C1AE  6F63               	movwf	stricmp@s2& (0+255),b
 18953  00C1B0  0EA1               	movlw	high _position_display_180_string
 18954  00C1B2  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18955  00C1B4  EC66  F0A6         	call	_stricmp	;wreg free
 18956  00C1B8  0100               	movlb	0	; () banked
 18957  00C1BA  5161               	movf	?_stricmp& (0+255),w,b
 18958  00C1BC  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18959  00C1BE  A4D8               	btfss	status,2,c
 18960  00C1C0  0012               	return	
 18961                           
 18962                           ; BSR set to: 0
 18963                           ;config_file.c: 212: {;config_file.c: 213: config.position_display_180 = atoi(value_stri
      +                          ng);
 18964  00C1C2  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18965  00C1C6  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18966  00C1CA  EC5F  F094         	call	_atoi	;wreg free
 18967  00C1CE  0100               	movlb	0	; () banked
 18968  00C1D0  5166               	movf	?_atoi& (0+255),w,b
 18969  00C1D2  0101               	movlb	1	; () banked
 18970  00C1D4  6FBE               	movwf	(_config+40)& (0+255),b
 18971                           
 18972                           ; BSR set to: 1
 18973                           ;config_file.c: 214: return 17;;	Return value of __parse_item is never used
 18974  00C1D6  0012               	return	
 18975  00C1D8                     __end_of__parse_item:
 18976                           	opt stack 0
 18977                           tblptru	equ	0xFF8
 18978                           tblptrh	equ	0xFF7
 18979                           tblptrl	equ	0xFF6
 18980                           tablat	equ	0xFF5
 18981                           prodh	equ	0xFF4
 18982                           prodl	equ	0xFF3
 18983                           postinc0	equ	0xFEE
 18984                           wreg	equ	0xFE8
 18985                           postinc1	equ	0xFE6
 18986                           postdec1	equ	0xFE5
 18987                           plusw1	equ	0xFE3
 18988                           fsr1h	equ	0xFE2
 18989                           fsr1l	equ	0xFE1
 18990                           indf2	equ	0xFDF
 18991                           postinc2	equ	0xFDE
 18992                           postdec2	equ	0xFDD
 18993                           plusw2	equ	0xFDB
 18994                           fsr2h	equ	0xFDA
 18995                           fsr2l	equ	0xFD9
 18996                           status	equ	0xFD8
 18997                           
 18998 ;; *************** function _stricmp *****************
 18999 ;; Defined at:
 19000 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\stricmp.c"
 19001 ;; Parameters:    Size  Location     Type
 19002 ;;  s1              2    1[BANK0 ] PTR const unsigned char 
 19003 ;;		 -> configFile_read@item_string(31), 
 19004 ;;  s2              2    3[BANK0 ] PTR const unsigned char 
 19005 ;;		 -> position_display_180_string(21), ccw_limit_string(10), use_ccw_limit_string(14), cw_limit_string(9), 
 19006 ;;		 -> use_cw_limit_string(13), beep_duration_string(14), maximum_speed_manual_string(21), initial_speed_manual_string(
      +21), 
 19007 ;;		 -> maximum_speed_arc_string(18), initial_speed_arc_string(18), maximum_speed_string(14), minimum_speed_string(14), 
 19008 ;;		 -> overshoot_cost_in_steps_string(24), inverse_direction_string(18), overshoot_in_steps_string(19), full_circle_in_
      +steps_string(21), 
 19009 ;; Auto vars:     Size  Location     Type
 19010 ;;  r               1    6[BANK0 ] char 
 19011 ;; Return value:  Size  Location     Type
 19012 ;;                  2    1[BANK0 ] int 
 19013 ;; Registers used:
 19014 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19015 ;; Tracked objects:
 19016 ;;		On entry : 0/0
 19017 ;;		On exit  : 0/0
 19018 ;;		Unchanged: 0/0
 19019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19020 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19021 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19022 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19023 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19024 ;;Total ram usage:        6 bytes
 19025 ;; Hardware stack levels used:    1
 19026 ;; Hardware stack levels required when called:   11
 19027 ;; This function calls:
 19028 ;;		_toupper
 19029 ;; This function is called by:
 19030 ;;		__parse_item
 19031 ;; This function uses a non-reentrant model
 19032 ;;
 19033                           
 19034                           	psect	text76
 19035  014CCC                     __ptext76:
 19036                           	opt stack 0
 19037  014CCC                     _stricmp:
 19038                           	opt stack 16
 19039                           
 19040                           ;incstack = 0
 19041  014CCC  D005               	goto	l3830
 19042  014CCE  0100               	movlb	0	; () banked
 19043  014CD0  4B61               	infsnz	stricmp@s1& (0+255),f,b
 19044  014CD2  2B62               	incf	(stricmp@s1+1)& (0+255),f,b
 19045  014CD4  4B63               	infsnz	stricmp@s2& (0+255),f,b
 19046  014CD6  2B64               	incf	(stricmp@s2+1)& (0+255),f,b
 19047  014CD8                     l3830:
 19048                           
 19049                           ; BSR set to: 0
 19050  014CD8  C063  FFF6         	movff	stricmp@s2,tblptrl
 19051  014CDC  C064  FFF7         	movff	stricmp@s2+1,tblptrh
 19052  014CE0                     	if	0	;tblptru may be non-zero
 19053  014CE0                     	endif
 19054  014CE0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19055  014CE0  0E00               	movlw	low (__mediumconst shr (0+16))
 19056  014CE2  6EF8               	movwf	tblptru,c
 19057  014CE4                     	endif
 19058  014CE4  0008               	tblrd		*
 19059  014CE6  50F5               	movf	tablat,w,c
 19060  014CE8  ECB1  F0AF         	call	_toupper
 19061  014CEC  0800               	sublw	0
 19062  014CEE  0100               	movlb	0	; () banked
 19063  014CF0  6F65               	movwf	??_stricmp& (0+255),b
 19064  014CF2  C061  FFD9         	movff	stricmp@s1,fsr2l
 19065  014CF6  C062  FFDA         	movff	stricmp@s1+1,fsr2h
 19066  014CFA  50DF               	movf	indf2,w,c
 19067  014CFC  ECB1  F0AF         	call	_toupper
 19068  014D00  0100               	movlb	0	; () banked
 19069  014D02  2565               	addwf	??_stricmp& (0+255),w,b
 19070  014D04  6F66               	movwf	stricmp@r& (0+255),b
 19071  014D06  5166               	movf	stricmp@r& (0+255),w,b
 19072  014D08  A4D8               	btfss	status,2,c
 19073  014D0A  D007               	goto	u14420
 19074                           
 19075                           ; BSR set to: 0
 19076  014D0C  C061  FFD9         	movff	stricmp@s1,fsr2l
 19077  014D10  C062  FFDA         	movff	stricmp@s1+1,fsr2h
 19078  014D14  50DF               	movf	indf2,w,c
 19079  014D16  A4D8               	btfss	status,2,c
 19080  014D18  D7DA               	goto	l3831
 19081  014D1A                     u14420:
 19082                           
 19083                           ; BSR set to: 0
 19084                           
 19085                           ; BSR set to: 0
 19086                           
 19087                           ; BSR set to: 0
 19088  014D1A  5166               	movf	stricmp@r& (0+255),w,b
 19089  014D1C  6F61               	movwf	?_stricmp& (0+255),b
 19090  014D1E  6B62               	clrf	(?_stricmp+1)& (0+255),b
 19091  014D20  BF61               	btfsc	?_stricmp& (0+255),7,b
 19092  014D22  0762               	decf	(?_stricmp+1)& (0+255),f,b
 19093  014D24  0012               	return	
 19094  014D26                     __end_of_stricmp:
 19095                           	opt stack 0
 19096                           tblptru	equ	0xFF8
 19097                           tblptrh	equ	0xFF7
 19098                           tblptrl	equ	0xFF6
 19099                           tablat	equ	0xFF5
 19100                           prodh	equ	0xFF4
 19101                           prodl	equ	0xFF3
 19102                           postinc0	equ	0xFEE
 19103                           wreg	equ	0xFE8
 19104                           postinc1	equ	0xFE6
 19105                           postdec1	equ	0xFE5
 19106                           plusw1	equ	0xFE3
 19107                           fsr1h	equ	0xFE2
 19108                           fsr1l	equ	0xFE1
 19109                           indf2	equ	0xFDF
 19110                           postinc2	equ	0xFDE
 19111                           postdec2	equ	0xFDD
 19112                           plusw2	equ	0xFDB
 19113                           fsr2h	equ	0xFDA
 19114                           fsr2l	equ	0xFD9
 19115                           status	equ	0xFD8
 19116                           
 19117 ;; *************** function _toupper *****************
 19118 ;; Defined at:
 19119 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\toupper.c"
 19120 ;; Parameters:    Size  Location     Type
 19121 ;;  c               1    wreg     unsigned char 
 19122 ;; Auto vars:     Size  Location     Type
 19123 ;;  c               1    0[BANK0 ] unsigned char 
 19124 ;; Return value:  Size  Location     Type
 19125 ;;                  1    wreg      unsigned char 
 19126 ;; Registers used:
 19127 ;;		wreg, status,2, status,0
 19128 ;; Tracked objects:
 19129 ;;		On entry : 0/0
 19130 ;;		On exit  : 0/0
 19131 ;;		Unchanged: 0/0
 19132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19134 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19136 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19137 ;;Total ram usage:        1 bytes
 19138 ;; Hardware stack levels used:    1
 19139 ;; Hardware stack levels required when called:   10
 19140 ;; This function calls:
 19141 ;;		Nothing
 19142 ;; This function is called by:
 19143 ;;		_stricmp
 19144 ;; This function uses a non-reentrant model
 19145 ;;
 19146                           
 19147                           	psect	text77
 19148  015F62                     __ptext77:
 19149                           	opt stack 0
 19150  015F62                     _toupper:
 19151                           	opt stack 16
 19152                           
 19153                           ; BSR set to: 0
 19154                           ;incstack = 0
 19155                           ;toupper@c stored from wreg
 19156  015F62  0100               	movlb	0	; () banked
 19157  015F64  6F60               	movwf	toupper@c& (0+255),b
 19158  015F66  0E7B               	movlw	123
 19159  015F68  0100               	movlb	0	; () banked
 19160  015F6A  6160               	cpfslt	toupper@c& (0+255),b
 19161  015F6C  D004               	goto	l3853
 19162                           
 19163                           ; BSR set to: 0
 19164  015F6E  0E60               	movlw	96
 19165  015F70  6560               	cpfsgt	toupper@c& (0+255),b
 19166  015F72  D001               	goto	l3853
 19167                           
 19168                           ; BSR set to: 0
 19169  015F74  9B60               	bcf	toupper@c& (0+255),5,b
 19170  015F76                     l3853:
 19171                           
 19172                           ; BSR set to: 0
 19173                           
 19174                           ; BSR set to: 0
 19175  015F76  5160               	movf	toupper@c& (0+255),w,b
 19176  015F78  0012               	return	
 19177  015F7A                     __end_of_toupper:
 19178                           	opt stack 0
 19179                           tblptru	equ	0xFF8
 19180                           tblptrh	equ	0xFF7
 19181                           tblptrl	equ	0xFF6
 19182                           tablat	equ	0xFF5
 19183                           prodh	equ	0xFF4
 19184                           prodl	equ	0xFF3
 19185                           postinc0	equ	0xFEE
 19186                           wreg	equ	0xFE8
 19187                           postinc1	equ	0xFE6
 19188                           postdec1	equ	0xFE5
 19189                           plusw1	equ	0xFE3
 19190                           fsr1h	equ	0xFE2
 19191                           fsr1l	equ	0xFE1
 19192                           indf2	equ	0xFDF
 19193                           postinc2	equ	0xFDE
 19194                           postdec2	equ	0xFDD
 19195                           plusw2	equ	0xFDB
 19196                           fsr2h	equ	0xFDA
 19197                           fsr2l	equ	0xFD9
 19198                           status	equ	0xFD8
 19199                           
 19200 ;; *************** function _atol *****************
 19201 ;; Defined at:
 19202 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\atol.c"
 19203 ;; Parameters:    Size  Location     Type
 19204 ;;  s               2   12[BANK0 ] PTR const unsigned char 
 19205 ;;		 -> configFile_read@value_string(12), 
 19206 ;; Auto vars:     Size  Location     Type
 19207 ;;  a               4   21[BANK0 ] long 
 19208 ;;  c               1   25[BANK0 ] unsigned char 
 19209 ;;  sign            1   20[BANK0 ] unsigned char 
 19210 ;; Return value:  Size  Location     Type
 19211 ;;                  4   12[BANK0 ] long 
 19212 ;; Registers used:
 19213 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19214 ;; Tracked objects:
 19215 ;;		On entry : 0/0
 19216 ;;		On exit  : 0/0
 19217 ;;		Unchanged: 0/0
 19218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19219 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19220 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19221 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19222 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19223 ;;Total ram usage:       14 bytes
 19224 ;; Hardware stack levels used:    1
 19225 ;; Hardware stack levels required when called:   11
 19226 ;; This function calls:
 19227 ;;		___lmul
 19228 ;;		_isdigit
 19229 ;; This function is called by:
 19230 ;;		__parse_item
 19231 ;; This function uses a non-reentrant model
 19232 ;;
 19233                           
 19234                           	psect	text78
 19235  011A4A                     __ptext78:
 19236                           	opt stack 0
 19237  011A4A                     _atol:
 19238                           	opt stack 16
 19239                           
 19240                           ; BSR set to: 0
 19241                           ;incstack = 0
 19242  011A4A  C06C  FFD9         	movff	atol@s,fsr2l
 19243  011A4E  C06D  FFDA         	movff	atol@s+1,fsr2h
 19244  011A52  50DF               	movf	indf2,w,c
 19245  011A54  0100               	movlb	0	; () banked
 19246  011A56  6F79               	movwf	atol@c& (0+255),b
 19247                           
 19248                           ; BSR set to: 0
 19249  011A58  4B6C               	infsnz	atol@s& (0+255),f,b
 19250  011A5A  2B6D               	incf	(atol@s+1)& (0+255),f,b
 19251                           
 19252                           ; BSR set to: 0
 19253  011A5C  0E20               	movlw	32
 19254  011A5E  1979               	xorwf	atol@c& (0+255),w,b
 19255  011A60  B4D8               	btfsc	status,2,c
 19256  011A62  D7F3               	goto	_atol
 19257                           
 19258                           ; BSR set to: 0
 19259  011A64  0E09               	movlw	9
 19260  011A66  1979               	xorwf	atol@c& (0+255),w,b
 19261  011A68  B4D8               	btfsc	status,2,c
 19262  011A6A  D7EF               	goto	_atol
 19263                           
 19264                           ; BSR set to: 0
 19265                           
 19266                           ; BSR set to: 0
 19267  011A6C  0E00               	movlw	0
 19268  011A6E  6F75               	movwf	atol@a& (0+255),b
 19269  011A70  0E00               	movlw	0
 19270  011A72  6F76               	movwf	(atol@a+1)& (0+255),b
 19271  011A74  0E00               	movlw	0
 19272  011A76  6F77               	movwf	(atol@a+2)& (0+255),b
 19273  011A78  0E00               	movlw	0
 19274  011A7A  6F78               	movwf	(atol@a+3)& (0+255),b
 19275  011A7C  0E00               	movlw	0
 19276  011A7E  6F74               	movwf	atol@sign& (0+255),b
 19277                           
 19278                           ; BSR set to: 0
 19279  011A80  0E2D               	movlw	45
 19280  011A82  1979               	xorwf	atol@c& (0+255),w,b
 19281  011A84  A4D8               	btfss	status,2,c
 19282  011A86  D002               	goto	l3773
 19283                           
 19284                           ; BSR set to: 0
 19285  011A88  2B74               	incf	atol@sign& (0+255),f,b
 19286  011A8A  D029               	goto	L87
 19287  011A8C                     l3773:
 19288                           
 19289                           ; BSR set to: 0
 19290                           
 19291                           ; BSR set to: 0
 19292  011A8C  0E2B               	movlw	43
 19293  011A8E  1979               	xorwf	atol@c& (0+255),w,b
 19294  011A90  A4D8               	btfss	status,2,c
 19295  011A92  D02D               	goto	l3776
 19296  011A94  D024               	goto	L87
 19297  011A96                     
 19298                           ; BSR set to: 0
 19299  011A96  C075  F060         	movff	atol@a,___lmul@multiplier
 19300  011A9A  C076  F061         	movff	atol@a+1,___lmul@multiplier+1
 19301  011A9E  C077  F062         	movff	atol@a+2,___lmul@multiplier+2
 19302  011AA2  C078  F063         	movff	atol@a+3,___lmul@multiplier+3
 19303  011AA6  0E0A               	movlw	10
 19304  011AA8  0100               	movlb	0	; () banked
 19305  011AAA  6F64               	movwf	___lmul@multiplicand& (0+255),b
 19306  011AAC  0E00               	movlw	0
 19307  011AAE  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 19308  011AB0  0E00               	movlw	0
 19309  011AB2  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 19310  011AB4  0E00               	movlw	0
 19311  011AB6  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 19312  011AB8  EC9E  F0A7         	call	___lmul	;wreg free
 19313  011ABC  C079  F070         	movff	atol@c,??_atol
 19314  011AC0  0ED0               	movlw	208
 19315  011AC2  0100               	movlb	0	; () banked
 19316  011AC4  2770               	addwf	??_atol& (0+255),f,b
 19317  011AC6  5170               	movf	??_atol& (0+255),w,b
 19318  011AC8  2560               	addwf	?___lmul& (0+255),w,b
 19319  011ACA  6F75               	movwf	atol@a& (0+255),b
 19320  011ACC  0E00               	movlw	0
 19321  011ACE  2161               	addwfc	(?___lmul+1)& (0+255),w,b
 19322  011AD0  6F76               	movwf	(atol@a+1)& (0+255),b
 19323  011AD2  0E00               	movlw	0
 19324  011AD4  2162               	addwfc	(?___lmul+2)& (0+255),w,b
 19325  011AD6  6F77               	movwf	(atol@a+2)& (0+255),b
 19326  011AD8  0E00               	movlw	0
 19327  011ADA  2163               	addwfc	(?___lmul+3)& (0+255),w,b
 19328  011ADC  6F78               	movwf	(atol@a+3)& (0+255),b
 19329  011ADE                     L87:
 19330                           
 19331                           ; BSR set to: 0
 19332  011ADE  C06C  FFD9         	movff	atol@s,fsr2l
 19333  011AE2  C06D  FFDA         	movff	atol@s+1,fsr2h
 19334  011AE6  50DF               	movf	indf2,w,c
 19335  011AE8  6F79               	movwf	atol@c& (0+255),b
 19336                           
 19337                           ; BSR set to: 0
 19338  011AEA  4B6C               	infsnz	atol@s& (0+255),f,b
 19339  011AEC  2B6D               	incf	(atol@s+1)& (0+255),f,b
 19340  011AEE                     l3776:
 19341                           
 19342                           ; BSR set to: 0
 19343                           
 19344                           ; BSR set to: 0
 19345  011AEE  5179               	movf	atol@c& (0+255),w,b
 19346  011AF0  EC1D  F0AF         	call	_isdigit
 19347  011AF4  B0D8               	btfsc	status,0,c
 19348  011AF6  D7CF               	goto	l3777
 19349  011AF8  0100               	movlb	0	; () banked
 19350  011AFA  5174               	movf	atol@sign& (0+255),w,b
 19351  011AFC  B4D8               	btfsc	status,2,c
 19352  011AFE  D01A               	goto	l3779
 19353                           
 19354                           ; BSR set to: 0
 19355  011B00  C075  F070         	movff	atol@a,??_atol
 19356  011B04  C076  F071         	movff	atol@a+1,??_atol+1
 19357  011B08  C077  F072         	movff	atol@a+2,??_atol+2
 19358  011B0C  C078  F073         	movff	atol@a+3,??_atol+3
 19359  011B10  1F70               	comf	??_atol& (0+255),f,b
 19360  011B12  1F71               	comf	(??_atol+1)& (0+255),f,b
 19361  011B14  1F72               	comf	(??_atol+2)& (0+255),f,b
 19362  011B16  1F73               	comf	(??_atol+3)& (0+255),f,b
 19363  011B18  2B70               	incf	??_atol& (0+255),f,b
 19364  011B1A  0E00               	movlw	0
 19365  011B1C  2371               	addwfc	(??_atol+1)& (0+255),f,b
 19366  011B1E  2372               	addwfc	(??_atol+2)& (0+255),f,b
 19367  011B20  2373               	addwfc	(??_atol+3)& (0+255),f,b
 19368  011B22  C070  F06C         	movff	??_atol,?_atol
 19369  011B26  C071  F06D         	movff	??_atol+1,?_atol+1
 19370  011B2A  C072  F06E         	movff	??_atol+2,?_atol+2
 19371  011B2E  C073  F06F         	movff	??_atol+3,?_atol+3
 19372                           
 19373                           ; BSR set to: 0
 19374  011B32  0012               	return	
 19375  011B34                     l3779:
 19376                           
 19377                           ; BSR set to: 0
 19378  011B34  C075  F06C         	movff	atol@a,?_atol
 19379  011B38  C076  F06D         	movff	atol@a+1,?_atol+1
 19380  011B3C  C077  F06E         	movff	atol@a+2,?_atol+2
 19381  011B40  C078  F06F         	movff	atol@a+3,?_atol+3
 19382                           
 19383                           ; BSR set to: 0
 19384  011B44  0012               	return		;funcret
 19385  011B46                     __end_of_atol:
 19386                           	opt stack 0
 19387                           tblptru	equ	0xFF8
 19388                           tblptrh	equ	0xFF7
 19389                           tblptrl	equ	0xFF6
 19390                           tablat	equ	0xFF5
 19391                           prodh	equ	0xFF4
 19392                           prodl	equ	0xFF3
 19393                           postinc0	equ	0xFEE
 19394                           wreg	equ	0xFE8
 19395                           postinc1	equ	0xFE6
 19396                           postdec1	equ	0xFE5
 19397                           plusw1	equ	0xFE3
 19398                           fsr1h	equ	0xFE2
 19399                           fsr1l	equ	0xFE1
 19400                           indf2	equ	0xFDF
 19401                           postinc2	equ	0xFDE
 19402                           postdec2	equ	0xFDD
 19403                           plusw2	equ	0xFDB
 19404                           fsr2h	equ	0xFDA
 19405                           fsr2l	equ	0xFD9
 19406                           status	equ	0xFD8
 19407                           
 19408 ;; *************** function _atoi *****************
 19409 ;; Defined at:
 19410 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\atoi.c"
 19411 ;; Parameters:    Size  Location     Type
 19412 ;;  s               2    6[BANK0 ] PTR const unsigned char 
 19413 ;;		 -> configFile_read@value_string(12), 
 19414 ;; Auto vars:     Size  Location     Type
 19415 ;;  a               2   11[BANK0 ] int 
 19416 ;;  sign            1   10[BANK0 ] unsigned char 
 19417 ;; Return value:  Size  Location     Type
 19418 ;;                  2    6[BANK0 ] int 
 19419 ;; Registers used:
 19420 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19421 ;; Tracked objects:
 19422 ;;		On entry : 0/0
 19423 ;;		On exit  : 0/0
 19424 ;;		Unchanged: 0/0
 19425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19426 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19427 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19428 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19429 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19430 ;;Total ram usage:        7 bytes
 19431 ;; Hardware stack levels used:    1
 19432 ;; Hardware stack levels required when called:   11
 19433 ;; This function calls:
 19434 ;;		___wmul
 19435 ;;		_isdigit
 19436 ;; This function is called by:
 19437 ;;		__parse_item
 19438 ;; This function uses a non-reentrant model
 19439 ;;
 19440                           
 19441                           	psect	text79
 19442  0128BE                     __ptext79:
 19443                           	opt stack 0
 19444  0128BE                     _atoi:
 19445                           	opt stack 16
 19446                           
 19447                           ; BSR set to: 0
 19448                           ;incstack = 0
 19449  0128BE  D003               	goto	l3756
 19450  0128C0  0100               	movlb	0	; () banked
 19451  0128C2  4B66               	infsnz	atoi@s& (0+255),f,b
 19452  0128C4  2B67               	incf	(atoi@s+1)& (0+255),f,b
 19453  0128C6                     l3756:
 19454                           
 19455                           ; BSR set to: 0
 19456  0128C6  C066  FFD9         	movff	atoi@s,fsr2l
 19457  0128CA  C067  FFDA         	movff	atoi@s+1,fsr2h
 19458  0128CE  0E20               	movlw	32
 19459  0128D0  18DE               	xorwf	postinc2,w,c
 19460  0128D2  B4D8               	btfsc	status,2,c
 19461  0128D4  D7F5               	goto	l3757
 19462  0128D6  C066  FFD9         	movff	atoi@s,fsr2l
 19463  0128DA  C067  FFDA         	movff	atoi@s+1,fsr2h
 19464  0128DE  0E09               	movlw	9
 19465  0128E0  18DE               	xorwf	postinc2,w,c
 19466  0128E2  B4D8               	btfsc	status,2,c
 19467  0128E4  D7ED               	goto	l3757
 19468  0128E6  0E00               	movlw	0
 19469  0128E8  0100               	movlb	0	; () banked
 19470  0128EA  6F6C               	movwf	(atoi@a+1)& (0+255),b
 19471  0128EC  0E00               	movlw	0
 19472  0128EE  6F6B               	movwf	atoi@a& (0+255),b
 19473  0128F0  0E00               	movlw	0
 19474  0128F2  6F6A               	movwf	atoi@sign& (0+255),b
 19475                           
 19476                           ; BSR set to: 0
 19477  0128F4  C066  FFD9         	movff	atoi@s,fsr2l
 19478  0128F8  C067  FFDA         	movff	atoi@s+1,fsr2h
 19479  0128FC  0E2D               	movlw	45
 19480  0128FE  18DE               	xorwf	postinc2,w,c
 19481  012900  A4D8               	btfss	status,2,c
 19482  012902  D002               	goto	l3759
 19483                           
 19484                           ; BSR set to: 0
 19485  012904  2B6A               	incf	atoi@sign& (0+255),f,b
 19486  012906  D026               	goto	l15664
 19487  012908                     l3759:
 19488                           
 19489                           ; BSR set to: 0
 19490                           
 19491                           ; BSR set to: 0
 19492  012908  C066  FFD9         	movff	atoi@s,fsr2l
 19493  01290C  C067  FFDA         	movff	atoi@s+1,fsr2h
 19494  012910  0E2B               	movlw	43
 19495  012912  18DE               	xorwf	postinc2,w,c
 19496  012914  A4D8               	btfss	status,2,c
 19497  012916  D020               	goto	l3762
 19498  012918  D01D               	goto	l15664
 19499  01291A                     
 19500                           ; BSR set to: 0
 19501  01291A  C06B  F060         	movff	atoi@a,___wmul@multiplier
 19502  01291E  C06C  F061         	movff	atoi@a+1,___wmul@multiplier+1
 19503  012922  0E00               	movlw	0
 19504  012924  0100               	movlb	0	; () banked
 19505  012926  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19506  012928  0E0A               	movlw	10
 19507  01292A  6F62               	movwf	___wmul@multiplicand& (0+255),b
 19508  01292C  EC88  F0AE         	call	___wmul	;wreg free
 19509  012930  C066  FFD9         	movff	atoi@s,fsr2l
 19510  012934  C067  FFDA         	movff	atoi@s+1,fsr2h
 19511  012938  50DF               	movf	indf2,w,c
 19512  01293A  0100               	movlb	0	; () banked
 19513  01293C  6F68               	movwf	??_atoi& (0+255),b
 19514  01293E  6B69               	clrf	(??_atoi+1)& (0+255),b
 19515  012940  5160               	movf	?___wmul& (0+255),w,b
 19516  012942  2768               	addwf	??_atoi& (0+255),f,b
 19517  012944  5161               	movf	(?___wmul+1)& (0+255),w,b
 19518  012946  2369               	addwfc	(??_atoi+1)& (0+255),f,b
 19519  012948  0ED0               	movlw	208
 19520  01294A  2568               	addwf	??_atoi& (0+255),w,b
 19521  01294C  6F6B               	movwf	atoi@a& (0+255),b
 19522  01294E  0EFF               	movlw	255
 19523  012950  2169               	addwfc	(??_atoi+1)& (0+255),w,b
 19524  012952  6F6C               	movwf	(atoi@a+1)& (0+255),b
 19525  012954                     l15664:
 19526                           
 19527                           ; BSR set to: 0
 19528  012954  4B66               	infsnz	atoi@s& (0+255),f,b
 19529  012956  2B67               	incf	(atoi@s+1)& (0+255),f,b
 19530  012958                     l3762:
 19531                           
 19532                           ; BSR set to: 0
 19533                           
 19534                           ; BSR set to: 0
 19535  012958  C066  FFD9         	movff	atoi@s,fsr2l
 19536  01295C  C067  FFDA         	movff	atoi@s+1,fsr2h
 19537  012960  50DF               	movf	indf2,w,c
 19538  012962  EC1D  F0AF         	call	_isdigit
 19539  012966  B0D8               	btfsc	status,0,c
 19540  012968  D7D8               	goto	l3763
 19541  01296A  0100               	movlb	0	; () banked
 19542  01296C  516A               	movf	atoi@sign& (0+255),w,b
 19543  01296E  B4D8               	btfsc	status,2,c
 19544  012970  D00D               	goto	l3765
 19545                           
 19546                           ; BSR set to: 0
 19547  012972  C06B  F068         	movff	atoi@a,??_atoi
 19548  012976  C06C  F069         	movff	atoi@a+1,??_atoi+1
 19549  01297A  1F68               	comf	??_atoi& (0+255),f,b
 19550  01297C  1F69               	comf	(??_atoi+1)& (0+255),f,b
 19551  01297E  4B68               	infsnz	??_atoi& (0+255),f,b
 19552  012980  2B69               	incf	(??_atoi+1)& (0+255),f,b
 19553  012982  C068  F066         	movff	??_atoi,?_atoi
 19554  012986  C069  F067         	movff	??_atoi+1,?_atoi+1
 19555  01298A  0012               	return	
 19556  01298C                     l3765:
 19557                           
 19558                           ; BSR set to: 0
 19559  01298C  C06B  F066         	movff	atoi@a,?_atoi
 19560  012990  C06C  F067         	movff	atoi@a+1,?_atoi+1
 19561                           
 19562                           ; BSR set to: 0
 19563  012994  0012               	return		;funcret
 19564  012996                     __end_of_atoi:
 19565                           	opt stack 0
 19566                           tblptru	equ	0xFF8
 19567                           tblptrh	equ	0xFF7
 19568                           tblptrl	equ	0xFF6
 19569                           tablat	equ	0xFF5
 19570                           prodh	equ	0xFF4
 19571                           prodl	equ	0xFF3
 19572                           postinc0	equ	0xFEE
 19573                           wreg	equ	0xFE8
 19574                           postinc1	equ	0xFE6
 19575                           postdec1	equ	0xFE5
 19576                           plusw1	equ	0xFE3
 19577                           fsr1h	equ	0xFE2
 19578                           fsr1l	equ	0xFE1
 19579                           indf2	equ	0xFDF
 19580                           postinc2	equ	0xFDE
 19581                           postdec2	equ	0xFDD
 19582                           plusw2	equ	0xFDB
 19583                           fsr2h	equ	0xFDA
 19584                           fsr2l	equ	0xFD9
 19585                           status	equ	0xFD8
 19586                           
 19587 ;; *************** function _isdigit *****************
 19588 ;; Defined at:
 19589 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\isdigit.c"
 19590 ;; Parameters:    Size  Location     Type
 19591 ;;  c               1    wreg     unsigned char 
 19592 ;; Auto vars:     Size  Location     Type
 19593 ;;  c               1    2[BANK0 ] unsigned char 
 19594 ;; Return value:  Size  Location     Type
 19595 ;;		None               void
 19596 ;; Registers used:
 19597 ;;		wreg, status,2, status,0
 19598 ;; Tracked objects:
 19599 ;;		On entry : 0/0
 19600 ;;		On exit  : 0/0
 19601 ;;		Unchanged: 0/0
 19602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19604 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19605 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19606 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19607 ;;Total ram usage:        3 bytes
 19608 ;; Hardware stack levels used:    1
 19609 ;; Hardware stack levels required when called:   10
 19610 ;; This function calls:
 19611 ;;		Nothing
 19612 ;; This function is called by:
 19613 ;;		_atoi
 19614 ;;		_atol
 19615 ;; This function uses a non-reentrant model
 19616 ;;
 19617                           
 19618                           	psect	text80
 19619  015E3A                     __ptext80:
 19620                           	opt stack 0
 19621  015E3A                     _isdigit:
 19622                           	opt stack 16
 19623                           
 19624                           ; BSR set to: 0
 19625                           ;incstack = 0
 19626                           ;isdigit@c stored from wreg
 19627  015E3A  0100               	movlb	0	; () banked
 19628  015E3C  6F62               	movwf	isdigit@c& (0+255),b
 19629  015E3E  0E00               	movlw	0
 19630  015E40  0100               	movlb	0	; () banked
 19631  015E42  6F61               	movwf	_isdigit$8442& (0+255),b
 19632                           
 19633                           ; BSR set to: 0
 19634  015E44  0E3A               	movlw	58
 19635  015E46  6162               	cpfslt	isdigit@c& (0+255),b
 19636  015E48  D005               	goto	l3784
 19637                           
 19638                           ; BSR set to: 0
 19639  015E4A  0E2F               	movlw	47
 19640  015E4C  6562               	cpfsgt	isdigit@c& (0+255),b
 19641  015E4E  D002               	goto	l3784
 19642                           
 19643                           ; BSR set to: 0
 19644  015E50  0E01               	movlw	1
 19645  015E52  6F61               	movwf	_isdigit$8442& (0+255),b
 19646  015E54                     l3784:
 19647                           
 19648                           ; BSR set to: 0
 19649                           
 19650                           ; BSR set to: 0
 19651  015E54  C061  F060         	movff	_isdigit$8442,??_isdigit
 19652  015E58  3160               	rrcf	??_isdigit& (0+255),w,b
 19653  015E5A  0012               	return	
 19654  015E5C                     __end_of_isdigit:
 19655                           	opt stack 0
 19656                           tblptru	equ	0xFF8
 19657                           tblptrh	equ	0xFF7
 19658                           tblptrl	equ	0xFF6
 19659                           tablat	equ	0xFF5
 19660                           prodh	equ	0xFF4
 19661                           prodl	equ	0xFF3
 19662                           postinc0	equ	0xFEE
 19663                           wreg	equ	0xFE8
 19664                           postinc1	equ	0xFE6
 19665                           postdec1	equ	0xFE5
 19666                           plusw1	equ	0xFE3
 19667                           fsr1h	equ	0xFE2
 19668                           fsr1l	equ	0xFE1
 19669                           indf2	equ	0xFDF
 19670                           postinc2	equ	0xFDE
 19671                           postdec2	equ	0xFDD
 19672                           plusw2	equ	0xFDB
 19673                           fsr2h	equ	0xFDA
 19674                           fsr2l	equ	0xFD9
 19675                           status	equ	0xFD8
 19676                           
 19677 ;; *************** function ___wmul *****************
 19678 ;; Defined at:
 19679 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
 19680 ;; Parameters:    Size  Location     Type
 19681 ;;  multiplier      2    0[BANK0 ] unsigned int 
 19682 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 19683 ;; Auto vars:     Size  Location     Type
 19684 ;;  product         2    4[BANK0 ] unsigned int 
 19685 ;; Return value:  Size  Location     Type
 19686 ;;                  2    0[BANK0 ] unsigned int 
 19687 ;; Registers used:
 19688 ;;		wreg, status,2, status,0, prodl, prodh
 19689 ;; Tracked objects:
 19690 ;;		On entry : 0/0
 19691 ;;		On exit  : 0/0
 19692 ;;		Unchanged: 0/0
 19693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19694 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19695 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19697 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19698 ;;Total ram usage:        6 bytes
 19699 ;; Hardware stack levels used:    1
 19700 ;; Hardware stack levels required when called:   10
 19701 ;; This function calls:
 19702 ;;		Nothing
 19703 ;; This function is called by:
 19704 ;;		_atoi
 19705 ;; This function uses a non-reentrant model
 19706 ;;
 19707                           
 19708                           	psect	text81
 19709  015D10                     __ptext81:
 19710                           	opt stack 0
 19711  015D10                     ___wmul:
 19712                           	opt stack 16
 19713                           
 19714                           ; BSR set to: 0
 19715                           ;incstack = 0
 19716  015D10  0100               	movlb	0	; () banked
 19717  015D12  5160               	movf	___wmul@multiplier& (0+255),w,b
 19718  015D14  0362               	mulwf	___wmul@multiplicand& (0+255),b
 19719  015D16  CFF3 F064          	movff	prodl,___wmul@product
 19720  015D1A  CFF4 F065          	movff	prodh,___wmul@product+1
 19721  015D1E  5160               	movf	___wmul@multiplier& (0+255),w,b
 19722  015D20  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 19723  015D22  50F3               	movf	prodl,w,c
 19724  015D24  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 19725  015D26  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 19726  015D28  0362               	mulwf	___wmul@multiplicand& (0+255),b
 19727  015D2A  50F3               	movf	prodl,w,c
 19728  015D2C  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 19729                           
 19730                           ; BSR set to: 0
 19731  015D2E  C064  F060         	movff	___wmul@product,?___wmul
 19732  015D32  C065  F061         	movff	___wmul@product+1,?___wmul+1
 19733  015D36  0012               	return	
 19734  015D38                     __end_of___wmul:
 19735                           	opt stack 0
 19736                           tblptru	equ	0xFF8
 19737                           tblptrh	equ	0xFF7
 19738                           tblptrl	equ	0xFF6
 19739                           tablat	equ	0xFF5
 19740                           prodh	equ	0xFF4
 19741                           prodl	equ	0xFF3
 19742                           postinc0	equ	0xFEE
 19743                           wreg	equ	0xFE8
 19744                           postinc1	equ	0xFE6
 19745                           postdec1	equ	0xFE5
 19746                           plusw1	equ	0xFE3
 19747                           fsr1h	equ	0xFE2
 19748                           fsr1l	equ	0xFE1
 19749                           indf2	equ	0xFDF
 19750                           postinc2	equ	0xFDE
 19751                           postdec2	equ	0xFDD
 19752                           plusw2	equ	0xFDB
 19753                           fsr2h	equ	0xFDA
 19754                           fsr2l	equ	0xFD9
 19755                           status	equ	0xFD8
 19756                           
 19757 ;; *************** function __steps_from_degrees *****************
 19758 ;; Defined at:
 19759 ;;		line 220 in file "config_file.c"
 19760 ;; Parameters:    Size  Location     Type
 19761 ;;  degrees         4   49[BANK0 ] long 
 19762 ;; Auto vars:     Size  Location     Type
 19763 ;;  temp            4   53[BANK0 ] long 
 19764 ;; Return value:  Size  Location     Type
 19765 ;;                  4   49[BANK0 ] long 
 19766 ;; Registers used:
 19767 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 19768 ;; Tracked objects:
 19769 ;;		On entry : 0/0
 19770 ;;		On exit  : 0/0
 19771 ;;		Unchanged: 0/0
 19772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19773 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19774 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19776 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19777 ;;Total ram usage:        8 bytes
 19778 ;; Hardware stack levels used:    1
 19779 ;; Hardware stack levels required when called:   11
 19780 ;; This function calls:
 19781 ;;		___fldiv
 19782 ;;		___flge
 19783 ;;		___flmul
 19784 ;;		___fltol
 19785 ;;		___xxtofl
 19786 ;; This function is called by:
 19787 ;;		__parse_item
 19788 ;; This function uses a non-reentrant model
 19789 ;;
 19790                           
 19791                           	psect	text82
 19792  00F02C                     __ptext82:
 19793                           	opt stack 0
 19794  00F02C                     __steps_from_degrees:
 19795                           	opt stack 16
 19796                           
 19797                           ;config_file.c: 222: double temp;;config_file.c: 225: if(degrees==0)
 19798                           
 19799                           ; BSR set to: 0
 19800                           ;incstack = 0
 19801  00F02C  0100               	movlb	0	; () banked
 19802  00F02E  5191               	movf	__steps_from_degrees@degrees& (0+255),w,b
 19803  00F030  1192               	iorwf	(__steps_from_degrees@degrees+1)& (0+255),w,b
 19804  00F032  1193               	iorwf	(__steps_from_degrees@degrees+2)& (0+255),w,b
 19805  00F034  1194               	iorwf	(__steps_from_degrees@degrees+3)& (0+255),w,b
 19806  00F036  A4D8               	btfss	status,2,c
 19807  00F038  D009               	goto	l3069
 19808                           
 19809                           ; BSR set to: 0
 19810                           ;config_file.c: 226: {;config_file.c: 227: return 0;
 19811  00F03A  0E00               	movlw	0
 19812  00F03C  6F91               	movwf	?__steps_from_degrees& (0+255),b
 19813  00F03E  0E00               	movlw	0
 19814  00F040  6F92               	movwf	(?__steps_from_degrees+1)& (0+255),b
 19815  00F042  0E00               	movlw	0
 19816  00F044  6F93               	movwf	(?__steps_from_degrees+2)& (0+255),b
 19817  00F046  0E00               	movlw	0
 19818  00F048  6F94               	movwf	(?__steps_from_degrees+3)& (0+255),b
 19819                           
 19820                           ; BSR set to: 0
 19821  00F04A  0012               	return	
 19822  00F04C                     l3069:
 19823                           
 19824                           ; BSR set to: 0
 19825                           ;config_file.c: 228: };config_file.c: 231: temp = (float) degrees;
 19826                           
 19827                           ; BSR set to: 0
 19828  00F04C  C091  F06A         	movff	__steps_from_degrees@degrees,___xxtofl@val
 19829  00F050  C092  F06B         	movff	__steps_from_degrees@degrees+1,___xxtofl@val+1
 19830  00F054  C093  F06C         	movff	__steps_from_degrees@degrees+2,___xxtofl@val+2
 19831  00F058  C094  F06D         	movff	__steps_from_degrees@degrees+3,___xxtofl@val+3
 19832  00F05C  0E01               	movlw	1
 19833  00F05E  EC24  F082         	call	___xxtofl
 19834  00F062  C06A  F095         	movff	?___xxtofl,__steps_from_degrees@temp
 19835  00F066  C06B  F096         	movff	?___xxtofl+1,__steps_from_degrees@temp+1
 19836  00F06A  C06C  F097         	movff	?___xxtofl+2,__steps_from_degrees@temp+2
 19837  00F06E  C06D  F098         	movff	?___xxtofl+3,__steps_from_degrees@temp+3
 19838                           
 19839                           ;config_file.c: 234: temp *= (float) config.full_circle_in_steps;
 19840  00F072  C095  F078         	movff	__steps_from_degrees@temp,___flmul@b
 19841  00F076  C096  F079         	movff	__steps_from_degrees@temp+1,___flmul@b+1
 19842  00F07A  C097  F07A         	movff	__steps_from_degrees@temp+2,___flmul@b+2
 19843  00F07E  C098  F07B         	movff	__steps_from_degrees@temp+3,___flmul@b+3
 19844  00F082  C196  F06A         	movff	_config,___xxtofl@val
 19845  00F086  C197  F06B         	movff	_config+1,___xxtofl@val+1
 19846  00F08A  C198  F06C         	movff	_config+2,___xxtofl@val+2
 19847  00F08E  C199  F06D         	movff	_config+3,___xxtofl@val+3
 19848  00F092  0E00               	movlw	0
 19849  00F094  EC24  F082         	call	___xxtofl
 19850  00F098  C06A  F07C         	movff	?___xxtofl,___flmul@a
 19851  00F09C  C06B  F07D         	movff	?___xxtofl+1,___flmul@a+1
 19852  00F0A0  C06C  F07E         	movff	?___xxtofl+2,___flmul@a+2
 19853  00F0A4  C06D  F07F         	movff	?___xxtofl+3,___flmul@a+3
 19854  00F0A8  ECDB  F064         	call	___flmul	;wreg free
 19855  00F0AC  C078  F095         	movff	?___flmul,__steps_from_degrees@temp
 19856  00F0B0  C079  F096         	movff	?___flmul+1,__steps_from_degrees@temp+1
 19857  00F0B4  C07A  F097         	movff	?___flmul+2,__steps_from_degrees@temp+2
 19858  00F0B8  C07B  F098         	movff	?___flmul+3,__steps_from_degrees@temp+3
 19859                           
 19860                           ;config_file.c: 235: temp /= 36000.0;
 19861  00F0BC  C095  F078         	movff	__steps_from_degrees@temp,___fldiv@b
 19862  00F0C0  C096  F079         	movff	__steps_from_degrees@temp+1,___fldiv@b+1
 19863  00F0C4  C097  F07A         	movff	__steps_from_degrees@temp+2,___fldiv@b+2
 19864  00F0C8  C098  F07B         	movff	__steps_from_degrees@temp+3,___fldiv@b+3
 19865  00F0CC  0E00               	movlw	0
 19866  00F0CE  0100               	movlb	0	; () banked
 19867  00F0D0  6F7C               	movwf	___fldiv@a& (0+255),b
 19868  00F0D2  0EA0               	movlw	160
 19869  00F0D4  6F7D               	movwf	(___fldiv@a+1)& (0+255),b
 19870  00F0D6  0E0C               	movlw	12
 19871  00F0D8  6F7E               	movwf	(___fldiv@a+2)& (0+255),b
 19872  00F0DA  0E47               	movlw	71
 19873  00F0DC  6F7F               	movwf	(___fldiv@a+3)& (0+255),b
 19874  00F0DE  EC03  F06B         	call	___fldiv	;wreg free
 19875  00F0E2  C078  F095         	movff	?___fldiv,__steps_from_degrees@temp
 19876  00F0E6  C079  F096         	movff	?___fldiv+1,__steps_from_degrees@temp+1
 19877  00F0EA  C07A  F097         	movff	?___fldiv+2,__steps_from_degrees@temp+2
 19878  00F0EE  C07B  F098         	movff	?___fldiv+3,__steps_from_degrees@temp+3
 19879                           
 19880                           ;config_file.c: 238: if(((int32_t)temp)<-2147483648.0)
 19881  00F0F2  C095  F060         	movff	__steps_from_degrees@temp,___fltol@f1
 19882  00F0F6  C096  F061         	movff	__steps_from_degrees@temp+1,___fltol@f1+1
 19883  00F0FA  C097  F062         	movff	__steps_from_degrees@temp+2,___fltol@f1+2
 19884  00F0FE  C098  F063         	movff	__steps_from_degrees@temp+3,___fltol@f1+3
 19885  00F102  EC81  F093         	call	___fltol	;wreg free
 19886  00F106  C060  F06A         	movff	?___fltol,___xxtofl@val
 19887  00F10A  C061  F06B         	movff	?___fltol+1,___xxtofl@val+1
 19888  00F10E  C062  F06C         	movff	?___fltol+2,___xxtofl@val+2
 19889  00F112  C063  F06D         	movff	?___fltol+3,___xxtofl@val+3
 19890  00F116  0E01               	movlw	1
 19891  00F118  EC24  F082         	call	___xxtofl
 19892  00F11C  C06A  F078         	movff	?___xxtofl,___flge@ff1
 19893  00F120  C06B  F079         	movff	?___xxtofl+1,___flge@ff1+1
 19894  00F124  C06C  F07A         	movff	?___xxtofl+2,___flge@ff1+2
 19895  00F128  C06D  F07B         	movff	?___xxtofl+3,___flge@ff1+3
 19896  00F12C  0E00               	movlw	0
 19897  00F12E  0100               	movlb	0	; () banked
 19898  00F130  6F7C               	movwf	___flge@ff2& (0+255),b
 19899  00F132  0E00               	movlw	0
 19900  00F134  6F7D               	movwf	(___flge@ff2+1)& (0+255),b
 19901  00F136  0E00               	movlw	0
 19902  00F138  6F7E               	movwf	(___flge@ff2+2)& (0+255),b
 19903  00F13A  0ECF               	movlw	207
 19904  00F13C  6F7F               	movwf	(___flge@ff2+3)& (0+255),b
 19905  00F13E  ECCF  F085         	call	___flge	;wreg free
 19906  00F142  0100               	movlb	0	; () banked
 19907  00F144  B0D8               	btfsc	status,0,c
 19908  00F146  D009               	goto	l3071
 19909                           
 19910                           ; BSR set to: 0
 19911                           ;config_file.c: 239: {;config_file.c: 240: return -2147483648;
 19912  00F148  0E00               	movlw	0
 19913  00F14A  6F91               	movwf	?__steps_from_degrees& (0+255),b
 19914  00F14C  0E00               	movlw	0
 19915  00F14E  6F92               	movwf	(?__steps_from_degrees+1)& (0+255),b
 19916  00F150  0E00               	movlw	0
 19917  00F152  6F93               	movwf	(?__steps_from_degrees+2)& (0+255),b
 19918  00F154  0E80               	movlw	128
 19919  00F156  6F94               	movwf	(?__steps_from_degrees+3)& (0+255),b
 19920                           
 19921                           ; BSR set to: 0
 19922  00F158  0012               	return	
 19923  00F15A                     l3071:
 19924                           
 19925                           ; BSR set to: 0
 19926                           ;config_file.c: 241: };config_file.c: 242: if(((int32_t)temp)>2147483647.0)
 19927                           
 19928                           ; BSR set to: 0
 19929  00F15A  0E00               	movlw	0
 19930  00F15C  6F78               	movwf	___flge@ff1& (0+255),b
 19931  00F15E  0E00               	movlw	0
 19932  00F160  6F79               	movwf	(___flge@ff1+1)& (0+255),b
 19933  00F162  0E00               	movlw	0
 19934  00F164  6F7A               	movwf	(___flge@ff1+2)& (0+255),b
 19935  00F166  0E4F               	movlw	79
 19936  00F168  6F7B               	movwf	(___flge@ff1+3)& (0+255),b
 19937  00F16A  C095  F060         	movff	__steps_from_degrees@temp,___fltol@f1
 19938  00F16E  C096  F061         	movff	__steps_from_degrees@temp+1,___fltol@f1+1
 19939  00F172  C097  F062         	movff	__steps_from_degrees@temp+2,___fltol@f1+2
 19940  00F176  C098  F063         	movff	__steps_from_degrees@temp+3,___fltol@f1+3
 19941  00F17A  EC81  F093         	call	___fltol	;wreg free
 19942  00F17E  C060  F06A         	movff	?___fltol,___xxtofl@val
 19943  00F182  C061  F06B         	movff	?___fltol+1,___xxtofl@val+1
 19944  00F186  C062  F06C         	movff	?___fltol+2,___xxtofl@val+2
 19945  00F18A  C063  F06D         	movff	?___fltol+3,___xxtofl@val+3
 19946  00F18E  0E01               	movlw	1
 19947  00F190  EC24  F082         	call	___xxtofl
 19948  00F194  C06A  F07C         	movff	?___xxtofl,___flge@ff2
 19949  00F198  C06B  F07D         	movff	?___xxtofl+1,___flge@ff2+1
 19950  00F19C  C06C  F07E         	movff	?___xxtofl+2,___flge@ff2+2
 19951  00F1A0  C06D  F07F         	movff	?___xxtofl+3,___flge@ff2+3
 19952  00F1A4  ECCF  F085         	call	___flge	;wreg free
 19953  00F1A8  0100               	movlb	0	; () banked
 19954  00F1AA  B0D8               	btfsc	status,0,c
 19955  00F1AC  D009               	goto	l3072
 19956                           
 19957                           ; BSR set to: 0
 19958                           ;config_file.c: 243: {;config_file.c: 244: return 2147483647;
 19959  00F1AE  0EFF               	movlw	255
 19960  00F1B0  6F91               	movwf	?__steps_from_degrees& (0+255),b
 19961  00F1B2  0EFF               	movlw	255
 19962  00F1B4  6F92               	movwf	(?__steps_from_degrees+1)& (0+255),b
 19963  00F1B6  0EFF               	movlw	255
 19964  00F1B8  6F93               	movwf	(?__steps_from_degrees+2)& (0+255),b
 19965  00F1BA  0E7F               	movlw	127
 19966  00F1BC  6F94               	movwf	(?__steps_from_degrees+3)& (0+255),b
 19967                           
 19968                           ; BSR set to: 0
 19969  00F1BE  0012               	return	
 19970  00F1C0                     l3072:
 19971                           
 19972                           ; BSR set to: 0
 19973                           ;config_file.c: 245: };config_file.c: 248: return (int32_t) temp;
 19974                           
 19975                           ; BSR set to: 0
 19976  00F1C0  C095  F060         	movff	__steps_from_degrees@temp,___fltol@f1
 19977  00F1C4  C096  F061         	movff	__steps_from_degrees@temp+1,___fltol@f1+1
 19978  00F1C8  C097  F062         	movff	__steps_from_degrees@temp+2,___fltol@f1+2
 19979  00F1CC  C098  F063         	movff	__steps_from_degrees@temp+3,___fltol@f1+3
 19980  00F1D0  EC81  F093         	call	___fltol	;wreg free
 19981  00F1D4  C060  F091         	movff	?___fltol,?__steps_from_degrees
 19982  00F1D8  C061  F092         	movff	?___fltol+1,?__steps_from_degrees+1
 19983  00F1DC  C062  F093         	movff	?___fltol+2,?__steps_from_degrees+2
 19984  00F1E0  C063  F094         	movff	?___fltol+3,?__steps_from_degrees+3
 19985  00F1E4  0012               	return	
 19986  00F1E6                     __end_of__steps_from_degrees:
 19987                           	opt stack 0
 19988                           tblptru	equ	0xFF8
 19989                           tblptrh	equ	0xFF7
 19990                           tblptrl	equ	0xFF6
 19991                           tablat	equ	0xFF5
 19992                           prodh	equ	0xFF4
 19993                           prodl	equ	0xFF3
 19994                           postinc0	equ	0xFEE
 19995                           wreg	equ	0xFE8
 19996                           postinc1	equ	0xFE6
 19997                           postdec1	equ	0xFE5
 19998                           plusw1	equ	0xFE3
 19999                           fsr1h	equ	0xFE2
 20000                           fsr1l	equ	0xFE1
 20001                           indf2	equ	0xFDF
 20002                           postinc2	equ	0xFDE
 20003                           postdec2	equ	0xFDD
 20004                           plusw2	equ	0xFDB
 20005                           fsr2h	equ	0xFDA
 20006                           fsr2l	equ	0xFD9
 20007                           status	equ	0xFD8
 20008                           
 20009 ;; *************** function ___flge *****************
 20010 ;; Defined at:
 20011 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flge.c"
 20012 ;; Parameters:    Size  Location     Type
 20013 ;;  ff1             4   24[BANK0 ] long 
 20014 ;;  ff2             4   28[BANK0 ] long 
 20015 ;; Auto vars:     Size  Location     Type
 20016 ;;		None
 20017 ;; Return value:  Size  Location     Type
 20018 ;;		None               void
 20019 ;; Registers used:
 20020 ;;		wreg, status,2, status,0
 20021 ;; Tracked objects:
 20022 ;;		On entry : 0/0
 20023 ;;		On exit  : 0/0
 20024 ;;		Unchanged: 0/0
 20025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20026 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20028 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20029 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20030 ;;Total ram usage:       12 bytes
 20031 ;; Hardware stack levels used:    1
 20032 ;; Hardware stack levels required when called:   10
 20033 ;; This function calls:
 20034 ;;		Nothing
 20035 ;; This function is called by:
 20036 ;;		__steps_from_degrees
 20037 ;;		_motor_goto_degrees_float
 20038 ;; This function uses a non-reentrant model
 20039 ;;
 20040                           
 20041                           	psect	text83
 20042  010B9E                     __ptext83:
 20043                           	opt stack 0
 20044  010B9E                     ___flge:
 20045                           	opt stack 16
 20046                           
 20047                           ;incstack = 0
 20048  010B9E  0E00               	movlw	0
 20049  010BA0  0100               	movlb	0	; () banked
 20050  010BA2  1578               	andwf	___flge@ff1& (0+255),w,b
 20051  010BA4  6F80               	movwf	??___flge& (0+255),b
 20052  010BA6  0E00               	movlw	0
 20053  010BA8  1579               	andwf	(___flge@ff1+1)& (0+255),w,b
 20054  010BAA  6F81               	movwf	(??___flge+1)& (0+255),b
 20055  010BAC  0E80               	movlw	128
 20056  010BAE  157A               	andwf	(___flge@ff1+2)& (0+255),w,b
 20057  010BB0  6F82               	movwf	(??___flge+2)& (0+255),b
 20058  010BB2  0E7F               	movlw	127
 20059  010BB4  157B               	andwf	(___flge@ff1+3)& (0+255),w,b
 20060  010BB6  6F83               	movwf	(??___flge+3)& (0+255),b
 20061  010BB8  5180               	movf	??___flge& (0+255),w,b
 20062  010BBA  1181               	iorwf	(??___flge+1)& (0+255),w,b
 20063  010BBC  1182               	iorwf	(??___flge+2)& (0+255),w,b
 20064  010BBE  1183               	iorwf	(??___flge+3)& (0+255),w,b
 20065  010BC0  A4D8               	btfss	status,2,c
 20066  010BC2  D008               	goto	l3350
 20067                           
 20068                           ; BSR set to: 0
 20069  010BC4  0E00               	movlw	0
 20070  010BC6  6F78               	movwf	___flge@ff1& (0+255),b
 20071  010BC8  0E00               	movlw	0
 20072  010BCA  6F79               	movwf	(___flge@ff1+1)& (0+255),b
 20073  010BCC  0E00               	movlw	0
 20074  010BCE  6F7A               	movwf	(___flge@ff1+2)& (0+255),b
 20075  010BD0  0E00               	movlw	0
 20076  010BD2  6F7B               	movwf	(___flge@ff1+3)& (0+255),b
 20077  010BD4                     l3350:
 20078                           
 20079                           ; BSR set to: 0
 20080                           
 20081                           ; BSR set to: 0
 20082  010BD4  0E00               	movlw	0
 20083  010BD6  157C               	andwf	___flge@ff2& (0+255),w,b
 20084  010BD8  6F80               	movwf	??___flge& (0+255),b
 20085  010BDA  0E00               	movlw	0
 20086  010BDC  157D               	andwf	(___flge@ff2+1)& (0+255),w,b
 20087  010BDE  6F81               	movwf	(??___flge+1)& (0+255),b
 20088  010BE0  0E80               	movlw	128
 20089  010BE2  157E               	andwf	(___flge@ff2+2)& (0+255),w,b
 20090  010BE4  6F82               	movwf	(??___flge+2)& (0+255),b
 20091  010BE6  0E7F               	movlw	127
 20092  010BE8  157F               	andwf	(___flge@ff2+3)& (0+255),w,b
 20093  010BEA  6F83               	movwf	(??___flge+3)& (0+255),b
 20094  010BEC  5180               	movf	??___flge& (0+255),w,b
 20095  010BEE  1181               	iorwf	(??___flge+1)& (0+255),w,b
 20096  010BF0  1182               	iorwf	(??___flge+2)& (0+255),w,b
 20097  010BF2  1183               	iorwf	(??___flge+3)& (0+255),w,b
 20098  010BF4  A4D8               	btfss	status,2,c
 20099  010BF6  D008               	goto	l3351
 20100                           
 20101                           ; BSR set to: 0
 20102  010BF8  0E00               	movlw	0
 20103  010BFA  6F7C               	movwf	___flge@ff2& (0+255),b
 20104  010BFC  0E00               	movlw	0
 20105  010BFE  6F7D               	movwf	(___flge@ff2+1)& (0+255),b
 20106  010C00  0E00               	movlw	0
 20107  010C02  6F7E               	movwf	(___flge@ff2+2)& (0+255),b
 20108  010C04  0E00               	movlw	0
 20109  010C06  6F7F               	movwf	(___flge@ff2+3)& (0+255),b
 20110  010C08                     l3351:
 20111                           
 20112                           ; BSR set to: 0
 20113                           
 20114                           ; BSR set to: 0
 20115  010C08  AF7B               	btfss	(___flge@ff1+3)& (0+255),7,b
 20116  010C0A  D01D               	goto	l3352
 20117                           
 20118                           ; BSR set to: 0
 20119  010C0C  C078  F080         	movff	___flge@ff1,??___flge
 20120  010C10  C079  F081         	movff	___flge@ff1+1,??___flge+1
 20121  010C14  C07A  F082         	movff	___flge@ff1+2,??___flge+2
 20122  010C18  C07B  F083         	movff	___flge@ff1+3,??___flge+3
 20123  010C1C  1F80               	comf	??___flge& (0+255),f,b
 20124  010C1E  1F81               	comf	(??___flge+1)& (0+255),f,b
 20125  010C20  1F82               	comf	(??___flge+2)& (0+255),f,b
 20126  010C22  1F83               	comf	(??___flge+3)& (0+255),f,b
 20127  010C24  2B80               	incf	??___flge& (0+255),f,b
 20128  010C26  0E00               	movlw	0
 20129  010C28  2381               	addwfc	(??___flge+1)& (0+255),f,b
 20130  010C2A  2382               	addwfc	(??___flge+2)& (0+255),f,b
 20131  010C2C  2383               	addwfc	(??___flge+3)& (0+255),f,b
 20132  010C2E  0E00               	movlw	0
 20133  010C30  2580               	addwf	??___flge& (0+255),w,b
 20134  010C32  6F78               	movwf	___flge@ff1& (0+255),b
 20135  010C34  0E00               	movlw	0
 20136  010C36  2181               	addwfc	(??___flge+1)& (0+255),w,b
 20137  010C38  6F79               	movwf	(___flge@ff1+1)& (0+255),b
 20138  010C3A  0E00               	movlw	0
 20139  010C3C  2182               	addwfc	(??___flge+2)& (0+255),w,b
 20140  010C3E  6F7A               	movwf	(___flge@ff1+2)& (0+255),b
 20141  010C40  0E80               	movlw	128
 20142  010C42  2183               	addwfc	(??___flge+3)& (0+255),w,b
 20143  010C44  6F7B               	movwf	(___flge@ff1+3)& (0+255),b
 20144  010C46                     l3352:
 20145                           
 20146                           ; BSR set to: 0
 20147                           
 20148                           ; BSR set to: 0
 20149  010C46  AF7F               	btfss	(___flge@ff2+3)& (0+255),7,b
 20150  010C48  D01D               	goto	l3353
 20151                           
 20152                           ; BSR set to: 0
 20153  010C4A  C07C  F080         	movff	___flge@ff2,??___flge
 20154  010C4E  C07D  F081         	movff	___flge@ff2+1,??___flge+1
 20155  010C52  C07E  F082         	movff	___flge@ff2+2,??___flge+2
 20156  010C56  C07F  F083         	movff	___flge@ff2+3,??___flge+3
 20157  010C5A  1F80               	comf	??___flge& (0+255),f,b
 20158  010C5C  1F81               	comf	(??___flge+1)& (0+255),f,b
 20159  010C5E  1F82               	comf	(??___flge+2)& (0+255),f,b
 20160  010C60  1F83               	comf	(??___flge+3)& (0+255),f,b
 20161  010C62  2B80               	incf	??___flge& (0+255),f,b
 20162  010C64  0E00               	movlw	0
 20163  010C66  2381               	addwfc	(??___flge+1)& (0+255),f,b
 20164  010C68  2382               	addwfc	(??___flge+2)& (0+255),f,b
 20165  010C6A  2383               	addwfc	(??___flge+3)& (0+255),f,b
 20166  010C6C  0E00               	movlw	0
 20167  010C6E  2580               	addwf	??___flge& (0+255),w,b
 20168  010C70  6F7C               	movwf	___flge@ff2& (0+255),b
 20169  010C72  0E00               	movlw	0
 20170  010C74  2181               	addwfc	(??___flge+1)& (0+255),w,b
 20171  010C76  6F7D               	movwf	(___flge@ff2+1)& (0+255),b
 20172  010C78  0E00               	movlw	0
 20173  010C7A  2182               	addwfc	(??___flge+2)& (0+255),w,b
 20174  010C7C  6F7E               	movwf	(___flge@ff2+2)& (0+255),b
 20175  010C7E  0E80               	movlw	128
 20176  010C80  2183               	addwfc	(??___flge+3)& (0+255),w,b
 20177  010C82  6F7F               	movwf	(___flge@ff2+3)& (0+255),b
 20178  010C84                     l3353:
 20179                           
 20180                           ; BSR set to: 0
 20181  010C84  0E00               	movlw	0
 20182  010C86  1B78               	xorwf	___flge@ff1& (0+255),f,b
 20183  010C88  0E00               	movlw	0
 20184  010C8A  1B79               	xorwf	(___flge@ff1+1)& (0+255),f,b
 20185  010C8C  0E00               	movlw	0
 20186  010C8E  1B7A               	xorwf	(___flge@ff1+2)& (0+255),f,b
 20187  010C90  0E80               	movlw	128
 20188  010C92  1B7B               	xorwf	(___flge@ff1+3)& (0+255),f,b
 20189  010C94  0E00               	movlw	0
 20190  010C96  1B7C               	xorwf	___flge@ff2& (0+255),f,b
 20191  010C98  0E00               	movlw	0
 20192  010C9A  1B7D               	xorwf	(___flge@ff2+1)& (0+255),f,b
 20193  010C9C  0E00               	movlw	0
 20194  010C9E  1B7E               	xorwf	(___flge@ff2+2)& (0+255),f,b
 20195  010CA0  0E80               	movlw	128
 20196  010CA2  1B7F               	xorwf	(___flge@ff2+3)& (0+255),f,b
 20197  010CA4  517C               	movf	___flge@ff2& (0+255),w,b
 20198  010CA6  5D78               	subwf	___flge@ff1& (0+255),w,b
 20199  010CA8  517D               	movf	(___flge@ff2+1)& (0+255),w,b
 20200  010CAA  5979               	subwfb	(___flge@ff1+1)& (0+255),w,b
 20201  010CAC  517E               	movf	(___flge@ff2+2)& (0+255),w,b
 20202  010CAE  597A               	subwfb	(___flge@ff1+2)& (0+255),w,b
 20203  010CB0  517F               	movf	(___flge@ff2+3)& (0+255),w,b
 20204  010CB2  597B               	subwfb	(___flge@ff1+3)& (0+255),w,b
 20205  010CB4  B0D8               	btfsc	status,0,c
 20206  010CB6  D002               	goto	l12126
 20207                           
 20208                           ; BSR set to: 0
 20209  010CB8  90D8               	bcf	status,0,c
 20210  010CBA  0012               	return	
 20211  010CBC                     l12126:
 20212                           
 20213                           ; BSR set to: 0
 20214                           
 20215                           ; BSR set to: 0
 20216  010CBC  80D8               	bsf	status,0,c
 20217                           
 20218                           ; BSR set to: 0
 20219  010CBE  0012               	return	
 20220  010CC0                     __end_of___flge:
 20221                           	opt stack 0
 20222                           tblptru	equ	0xFF8
 20223                           tblptrh	equ	0xFF7
 20224                           tblptrl	equ	0xFF6
 20225                           tablat	equ	0xFF5
 20226                           prodh	equ	0xFF4
 20227                           prodl	equ	0xFF3
 20228                           postinc0	equ	0xFEE
 20229                           wreg	equ	0xFE8
 20230                           postinc1	equ	0xFE6
 20231                           postdec1	equ	0xFE5
 20232                           plusw1	equ	0xFE3
 20233                           fsr1h	equ	0xFE2
 20234                           fsr1l	equ	0xFE1
 20235                           indf2	equ	0xFDF
 20236                           postinc2	equ	0xFDE
 20237                           postdec2	equ	0xFDD
 20238                           plusw2	equ	0xFDB
 20239                           fsr2h	equ	0xFDA
 20240                           fsr2l	equ	0xFD9
 20241                           status	equ	0xFD8
 20242                           
 20243 ;; *************** function __get_item *****************
 20244 ;; Defined at:
 20245 ;;		line 71 in file "config_file.c"
 20246 ;; Parameters:    Size  Location     Type
 20247 ;;  item_string     2    0[BANK0 ] PTR unsigned char 
 20248 ;;		 -> configFile_read@item_string(31), 
 20249 ;;  value_string    2    2[BANK0 ] PTR unsigned char 
 20250 ;;		 -> configFile_read@value_string(12), 
 20251 ;;  buffer          2    4[BANK0 ] PTR unsigned char 
 20252 ;;		 -> ConfigFile_buffer(512), 
 20253 ;; Auto vars:     Size  Location     Type
 20254 ;;  item_ctr        1   10[BANK0 ] unsigned char 
 20255 ;;  value_ctr       1    9[BANK0 ] unsigned char 
 20256 ;; Return value:  Size  Location     Type
 20257 ;;                  1    wreg      unsigned char 
 20258 ;; Registers used:
 20259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20260 ;; Tracked objects:
 20261 ;;		On entry : 0/0
 20262 ;;		On exit  : 0/0
 20263 ;;		Unchanged: 0/0
 20264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20265 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20266 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20267 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20268 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20269 ;;Total ram usage:       11 bytes
 20270 ;; Hardware stack levels used:    1
 20271 ;; Hardware stack levels required when called:   10
 20272 ;; This function calls:
 20273 ;;		Nothing
 20274 ;; This function is called by:
 20275 ;;		_configFile_read
 20276 ;; This function uses a non-reentrant model
 20277 ;;
 20278                           
 20279                           	psect	text84
 20280  00F6CE                     __ptext84:
 20281                           	opt stack 0
 20282  00F6CE                     __get_item:
 20283                           	opt stack 18
 20284                           
 20285                           ;config_file.c: 73: uint8_t item_ctr;;config_file.c: 74: uint8_t value_ctr;;config_file.
      +                          c: 77: for(item_ctr=0;item_ctr<30;++item_ctr)
 20286                           
 20287                           ; BSR set to: 0
 20288                           ;incstack = 0
 20289  00F6CE  0E00               	movlw	0
 20290  00F6D0  0100               	movlb	0	; () banked
 20291  00F6D2  6F6A               	movwf	__get_item@item_ctr& (0+255),b
 20292  00F6D4                     l16772:
 20293                           
 20294                           ; BSR set to: 0
 20295  00F6D4  0E1D               	movlw	29
 20296  00F6D6  656A               	cpfsgt	__get_item@item_ctr& (0+255),b
 20297  00F6D8  D001               	goto	l3035
 20298  00F6DA  D020               	goto	u15860
 20299  00F6DC                     l3035:
 20300                           
 20301                           ; BSR set to: 0
 20302                           ;config_file.c: 78: {;config_file.c: 80: if(buffer[item_ctr] == '=')
 20303                           
 20304                           ; BSR set to: 0
 20305  00F6DC  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20306  00F6DE  0D01               	mullw	1
 20307  00F6E0  50F3               	movf	prodl,w,c
 20308  00F6E2  2564               	addwf	__get_item@buffer& (0+255),w,b
 20309  00F6E4  6ED9               	movwf	fsr2l,c
 20310  00F6E6  50F4               	movf	prodh,w,c
 20311  00F6E8  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20312  00F6EA  6EDA               	movwf	fsr2h,c
 20313  00F6EC  0E3D               	movlw	61
 20314  00F6EE  18DE               	xorwf	postinc2,w,c
 20315  00F6F0  B4D8               	btfsc	status,2,c
 20316  00F6F2  D014               	goto	u15860
 20317                           
 20318                           ; BSR set to: 0
 20319                           ;config_file.c: 83: };config_file.c: 84: item_string[item_ctr] = buffer[item_ctr];
 20320                           
 20321                           ; BSR set to: 0
 20322                           
 20323                           ; BSR set to: 0
 20324                           ;config_file.c: 81: {;config_file.c: 82: break;
 20325  00F6F4  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20326  00F6F6  0D01               	mullw	1
 20327  00F6F8  50F3               	movf	prodl,w,c
 20328  00F6FA  2564               	addwf	__get_item@buffer& (0+255),w,b
 20329  00F6FC  6ED9               	movwf	fsr2l,c
 20330  00F6FE  50F4               	movf	prodh,w,c
 20331  00F700  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20332  00F702  6EDA               	movwf	fsr2h,c
 20333  00F704  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20334  00F706  0D01               	mullw	1
 20335  00F708  50F3               	movf	prodl,w,c
 20336  00F70A  2560               	addwf	__get_item@item_string& (0+255),w,b
 20337  00F70C  6EE1               	movwf	fsr1l,c
 20338  00F70E  50F4               	movf	prodh,w,c
 20339  00F710  2161               	addwfc	(__get_item@item_string+1)& (0+255),w,b
 20340  00F712  6EE2               	movwf	fsr1h,c
 20341  00F714  CFDF FFE7          	movff	indf2,indf1
 20342                           
 20343                           ; BSR set to: 0
 20344  00F718  2B6A               	incf	__get_item@item_ctr& (0+255),f,b
 20345  00F71A  D7DC               	goto	l16772
 20346  00F71C                     u15860:
 20347                           
 20348                           ; BSR set to: 0
 20349                           ;config_file.c: 85: };config_file.c: 86: item_string[item_ctr++] = 0;
 20350                           
 20351                           ; BSR set to: 0
 20352  00F71C  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20353  00F71E  0D01               	mullw	1
 20354  00F720  50F3               	movf	prodl,w,c
 20355  00F722  2560               	addwf	__get_item@item_string& (0+255),w,b
 20356  00F724  6ED9               	movwf	fsr2l,c
 20357  00F726  50F4               	movf	prodh,w,c
 20358  00F728  2161               	addwfc	(__get_item@item_string+1)& (0+255),w,b
 20359  00F72A  6EDA               	movwf	fsr2h,c
 20360  00F72C  0E00               	movlw	0
 20361  00F72E  6EDF               	movwf	indf2,c
 20362                           
 20363                           ; BSR set to: 0
 20364  00F730  2B6A               	incf	__get_item@item_ctr& (0+255),f,b
 20365                           
 20366                           ; BSR set to: 0
 20367                           ;config_file.c: 89: for(value_ctr=0;value_ctr<11;++value_ctr)
 20368  00F732  0E00               	movlw	0
 20369  00F734  6F69               	movwf	__get_item@value_ctr& (0+255),b
 20370  00F736                     l16792:
 20371                           
 20372                           ; BSR set to: 0
 20373  00F736  0E0A               	movlw	10
 20374  00F738  6569               	cpfsgt	__get_item@value_ctr& (0+255),b
 20375  00F73A  D001               	goto	l3038
 20376  00F73C  D03B               	goto	u15900
 20377  00F73E                     l3038:
 20378                           
 20379                           ; BSR set to: 0
 20380                           ;config_file.c: 90: {;config_file.c: 92: if((buffer[item_ctr+value_ctr]=='\r') || (buffe
      +                          r[item_ctr+value_ctr]=='\n'))
 20381                           
 20382                           ; BSR set to: 0
 20383  00F73E  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20384  00F740  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20385  00F744  6B67               	clrf	(??__get_item+1)& (0+255),b
 20386  00F746  2766               	addwf	??__get_item& (0+255),f,b
 20387  00F748  0E00               	movlw	0
 20388  00F74A  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20389  00F74C  5166               	movf	??__get_item& (0+255),w,b
 20390  00F74E  2564               	addwf	__get_item@buffer& (0+255),w,b
 20391  00F750  6ED9               	movwf	fsr2l,c
 20392  00F752  5167               	movf	(??__get_item+1)& (0+255),w,b
 20393  00F754  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20394  00F756  6EDA               	movwf	fsr2h,c
 20395  00F758  0E0D               	movlw	13
 20396  00F75A  18DE               	xorwf	postinc2,w,c
 20397  00F75C  B4D8               	btfsc	status,2,c
 20398  00F75E  D02A               	goto	u15900
 20399                           
 20400                           ; BSR set to: 0
 20401  00F760  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20402  00F762  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20403  00F766  6B67               	clrf	(??__get_item+1)& (0+255),b
 20404  00F768  2766               	addwf	??__get_item& (0+255),f,b
 20405  00F76A  0E00               	movlw	0
 20406  00F76C  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20407  00F76E  5166               	movf	??__get_item& (0+255),w,b
 20408  00F770  2564               	addwf	__get_item@buffer& (0+255),w,b
 20409  00F772  6ED9               	movwf	fsr2l,c
 20410  00F774  5167               	movf	(??__get_item+1)& (0+255),w,b
 20411  00F776  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20412  00F778  6EDA               	movwf	fsr2h,c
 20413  00F77A  0E0A               	movlw	10
 20414  00F77C  18DE               	xorwf	postinc2,w,c
 20415  00F77E  B4D8               	btfsc	status,2,c
 20416  00F780  D019               	goto	u15900
 20417                           
 20418                           ; BSR set to: 0
 20419                           ;config_file.c: 95: };config_file.c: 96: value_string[value_ctr] = buffer[item_ctr+value
      +                          _ctr];
 20420                           
 20421                           ; BSR set to: 0
 20422                           
 20423                           ; BSR set to: 0
 20424                           ;config_file.c: 93: {;config_file.c: 94: break;
 20425  00F782  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20426  00F784  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20427  00F788  6B67               	clrf	(??__get_item+1)& (0+255),b
 20428  00F78A  2766               	addwf	??__get_item& (0+255),f,b
 20429  00F78C  0E00               	movlw	0
 20430  00F78E  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20431  00F790  5166               	movf	??__get_item& (0+255),w,b
 20432  00F792  2564               	addwf	__get_item@buffer& (0+255),w,b
 20433  00F794  6ED9               	movwf	fsr2l,c
 20434  00F796  5167               	movf	(??__get_item+1)& (0+255),w,b
 20435  00F798  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20436  00F79A  6EDA               	movwf	fsr2h,c
 20437  00F79C  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20438  00F79E  0D01               	mullw	1
 20439  00F7A0  50F3               	movf	prodl,w,c
 20440  00F7A2  2562               	addwf	__get_item@value_string& (0+255),w,b
 20441  00F7A4  6EE1               	movwf	fsr1l,c
 20442  00F7A6  50F4               	movf	prodh,w,c
 20443  00F7A8  2163               	addwfc	(__get_item@value_string+1)& (0+255),w,b
 20444  00F7AA  6EE2               	movwf	fsr1h,c
 20445  00F7AC  CFDF FFE7          	movff	indf2,indf1
 20446                           
 20447                           ; BSR set to: 0
 20448  00F7B0  2B69               	incf	__get_item@value_ctr& (0+255),f,b
 20449  00F7B2  D7C1               	goto	l16792
 20450  00F7B4                     u15900:
 20451                           
 20452                           ; BSR set to: 0
 20453                           ;config_file.c: 97: };config_file.c: 98: value_string[value_ctr++] = 0;
 20454                           
 20455                           ; BSR set to: 0
 20456  00F7B4  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20457  00F7B6  0D01               	mullw	1
 20458  00F7B8  50F3               	movf	prodl,w,c
 20459  00F7BA  2562               	addwf	__get_item@value_string& (0+255),w,b
 20460  00F7BC  6ED9               	movwf	fsr2l,c
 20461  00F7BE  50F4               	movf	prodh,w,c
 20462  00F7C0  2163               	addwfc	(__get_item@value_string+1)& (0+255),w,b
 20463  00F7C2  6EDA               	movwf	fsr2h,c
 20464  00F7C4  0E00               	movlw	0
 20465  00F7C6  6EDF               	movwf	indf2,c
 20466  00F7C8                     
 20467                           ; BSR set to: 0
 20468                           ;config_file.c: 102: {;config_file.c: 103: ++value_ctr;
 20469                           
 20470                           ; BSR set to: 0
 20471                           
 20472                           ;config_file.c: 101: while((buffer[item_ctr+value_ctr]=='\r') || (buffer[item_ctr+value_
      +                          ctr]=='\n') || (buffer[item_ctr+value_ctr]=='\t') || (buffer[item_ctr+value_ctr]==' '))
 20473                           
 20474                           ; BSR set to: 0
 20475  00F7C8  2B69               	incf	__get_item@value_ctr& (0+255),f,b
 20476                           
 20477                           ; BSR set to: 0
 20478                           
 20479                           ; BSR set to: 0
 20480  00F7CA  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20481  00F7CC  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20482  00F7D0  6B67               	clrf	(??__get_item+1)& (0+255),b
 20483  00F7D2  2766               	addwf	??__get_item& (0+255),f,b
 20484  00F7D4  0E00               	movlw	0
 20485  00F7D6  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20486  00F7D8  5166               	movf	??__get_item& (0+255),w,b
 20487  00F7DA  2564               	addwf	__get_item@buffer& (0+255),w,b
 20488  00F7DC  6ED9               	movwf	fsr2l,c
 20489  00F7DE  5167               	movf	(??__get_item+1)& (0+255),w,b
 20490  00F7E0  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20491  00F7E2  6EDA               	movwf	fsr2h,c
 20492  00F7E4  0E0D               	movlw	13
 20493  00F7E6  18DE               	xorwf	postinc2,w,c
 20494  00F7E8  B4D8               	btfsc	status,2,c
 20495  00F7EA  D7EE               	goto	l16808
 20496                           
 20497                           ; BSR set to: 0
 20498  00F7EC  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20499  00F7EE  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20500  00F7F2  6B67               	clrf	(??__get_item+1)& (0+255),b
 20501  00F7F4  2766               	addwf	??__get_item& (0+255),f,b
 20502  00F7F6  0E00               	movlw	0
 20503  00F7F8  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20504  00F7FA  5166               	movf	??__get_item& (0+255),w,b
 20505  00F7FC  2564               	addwf	__get_item@buffer& (0+255),w,b
 20506  00F7FE  6ED9               	movwf	fsr2l,c
 20507  00F800  5167               	movf	(??__get_item+1)& (0+255),w,b
 20508  00F802  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20509  00F804  6EDA               	movwf	fsr2h,c
 20510  00F806  0E0A               	movlw	10
 20511  00F808  18DE               	xorwf	postinc2,w,c
 20512  00F80A  B4D8               	btfsc	status,2,c
 20513  00F80C  D7DD               	goto	l16808
 20514                           
 20515                           ; BSR set to: 0
 20516  00F80E  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20517  00F810  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20518  00F814  6B67               	clrf	(??__get_item+1)& (0+255),b
 20519  00F816  2766               	addwf	??__get_item& (0+255),f,b
 20520  00F818  0E00               	movlw	0
 20521  00F81A  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20522  00F81C  5166               	movf	??__get_item& (0+255),w,b
 20523  00F81E  2564               	addwf	__get_item@buffer& (0+255),w,b
 20524  00F820  6ED9               	movwf	fsr2l,c
 20525  00F822  5167               	movf	(??__get_item+1)& (0+255),w,b
 20526  00F824  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20527  00F826  6EDA               	movwf	fsr2h,c
 20528  00F828  0E09               	movlw	9
 20529  00F82A  18DE               	xorwf	postinc2,w,c
 20530  00F82C  B4D8               	btfsc	status,2,c
 20531  00F82E  D7CC               	goto	l16808
 20532                           
 20533                           ; BSR set to: 0
 20534  00F830  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20535  00F832  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20536  00F836  6B67               	clrf	(??__get_item+1)& (0+255),b
 20537  00F838  2766               	addwf	??__get_item& (0+255),f,b
 20538  00F83A  0E00               	movlw	0
 20539  00F83C  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20540  00F83E  5166               	movf	??__get_item& (0+255),w,b
 20541  00F840  2564               	addwf	__get_item@buffer& (0+255),w,b
 20542  00F842  6ED9               	movwf	fsr2l,c
 20543  00F844  5167               	movf	(??__get_item+1)& (0+255),w,b
 20544  00F846  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20545  00F848  6EDA               	movwf	fsr2h,c
 20546  00F84A  0E20               	movlw	32
 20547  00F84C  18DE               	xorwf	postinc2,w,c
 20548  00F84E  B4D8               	btfsc	status,2,c
 20549  00F850  D7BB               	goto	l16808
 20550                           
 20551                           ; BSR set to: 0
 20552                           ;config_file.c: 104: };config_file.c: 107: return (item_ctr+value_ctr);
 20553                           
 20554                           ; BSR set to: 0
 20555  00F852  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20556  00F854  2569               	addwf	__get_item@value_ctr& (0+255),w,b
 20557  00F856  0012               	return	
 20558  00F858                     __end_of__get_item:
 20559                           	opt stack 0
 20560                           tblptru	equ	0xFF8
 20561                           tblptrh	equ	0xFF7
 20562                           tblptrl	equ	0xFF6
 20563                           tablat	equ	0xFF5
 20564                           prodh	equ	0xFF4
 20565                           prodl	equ	0xFF3
 20566                           postinc0	equ	0xFEE
 20567                           wreg	equ	0xFE8
 20568                           indf1	equ	0xFE7
 20569                           postinc1	equ	0xFE6
 20570                           postdec1	equ	0xFE5
 20571                           plusw1	equ	0xFE3
 20572                           fsr1h	equ	0xFE2
 20573                           fsr1l	equ	0xFE1
 20574                           indf2	equ	0xFDF
 20575                           postinc2	equ	0xFDE
 20576                           postdec2	equ	0xFDD
 20577                           plusw2	equ	0xFDB
 20578                           fsr2h	equ	0xFDA
 20579                           fsr2l	equ	0xFD9
 20580                           status	equ	0xFD8
 20581                           
 20582 ;; *************** function _adc_init *****************
 20583 ;; Defined at:
 20584 ;;		line 19 in file "adc.c"
 20585 ;; Parameters:    Size  Location     Type
 20586 ;;		None
 20587 ;; Auto vars:     Size  Location     Type
 20588 ;;		None
 20589 ;; Return value:  Size  Location     Type
 20590 ;;                  1    wreg      void 
 20591 ;; Registers used:
 20592 ;;		wreg, status,2
 20593 ;; Tracked objects:
 20594 ;;		On entry : 0/0
 20595 ;;		On exit  : 0/0
 20596 ;;		Unchanged: 0/0
 20597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20602 ;;Total ram usage:        0 bytes
 20603 ;; Hardware stack levels used:    1
 20604 ;; Hardware stack levels required when called:   10
 20605 ;; This function calls:
 20606 ;;		Nothing
 20607 ;; This function is called by:
 20608 ;;		_system_init
 20609 ;; This function uses a non-reentrant model
 20610 ;;
 20611                           
 20612                           	psect	text85
 20613  014E8C                     __ptext85:
 20614                           	opt stack 0
 20615  014E8C                     _adc_init:
 20616                           	opt stack 19
 20617                           
 20618                           ;adc.c: 22: os.temperature[TEMPERATURE_SOURCE_INTERNAL] = 0;
 20619                           
 20620                           ; BSR set to: 0
 20621                           ;incstack = 0
 20622  014E8C  0E00               	movlw	0
 20623  014E8E  0101               	movlb	1	; () banked
 20624  014E90  6F8E               	movwf	(_os+41)& (0+255),b	;volatile
 20625  014E92  0E00               	movlw	0
 20626  014E94  6F8D               	movwf	(_os+40)& (0+255),b	;volatile
 20627                           
 20628                           ;adc.c: 23: os.temperature[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 20629  014E96  0E00               	movlw	0
 20630  014E98  6F90               	movwf	(_os+43)& (0+255),b	;volatile
 20631  014E9A  0E00               	movlw	0
 20632  014E9C  6F8F               	movwf	(_os+42)& (0+255),b	;volatile
 20633                           
 20634                           ;adc.c: 24: os.fan_on = 0;
 20635  014E9E  0E00               	movlw	0
 20636  014EA0  6F94               	movwf	(_os+47)& (0+255),b	;volatile
 20637                           
 20638                           ;adc.c: 25: params.temperature_source = TEMPERATURE_SOURCE_INTERNAL;
 20639  014EA2  0E00               	movlw	0
 20640  014EA4  0102               	movlb	2	; () banked
 20641  014EA6  6F31               	movwf	_params& (0+255),b
 20642                           
 20643                           ;adc.c: 26: params.temperature_adc_sum[TEMPERATURE_SOURCE_INTERNAL] = 0;
 20644  014EA8  0E00               	movlw	0
 20645  014EAA  6F33               	movwf	(_params+2)& (0+255),b
 20646  014EAC  0E00               	movlw	0
 20647  014EAE  6F32               	movwf	(_params+1)& (0+255),b
 20648                           
 20649                           ;adc.c: 27: params.temperature_count[TEMPERATURE_SOURCE_INTERNAL] = 0;
 20650  014EB0  0E00               	movlw	0
 20651  014EB2  6F36               	movwf	(_params+5)& (0+255),b
 20652                           
 20653                           ;adc.c: 28: params.temperature_adc_sum[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 20654  014EB4  0E00               	movlw	0
 20655  014EB6  6F35               	movwf	(_params+4)& (0+255),b
 20656  014EB8  0E00               	movlw	0
 20657  014EBA  6F34               	movwf	(_params+3)& (0+255),b
 20658                           
 20659                           ;adc.c: 29: params.temperature_count[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 20660  014EBC  0E00               	movlw	0
 20661  014EBE  6F37               	movwf	(_params+6)& (0+255),b
 20662                           
 20663                           ; BSR set to: 2
 20664                           ;adc.c: 31: ADCON0bits.VCFG1 = 0;
 20665  014EC0  9EC2               	bcf	4034,7,c	;volatile
 20666                           
 20667                           ; BSR set to: 2
 20668                           ;adc.c: 32: ADCON0bits.VCFG0 = 0;
 20669  014EC2  9CC2               	bcf	4034,6,c	;volatile
 20670                           
 20671                           ;adc.c: 33: ADCON0bits.CHS = 0b1001;
 20672  014EC4  50C2               	movf	4034,w,c	;volatile
 20673  014EC6  0BC3               	andlw	-61
 20674  014EC8  0924               	iorlw	36
 20675  014ECA  6EC2               	movwf	4034,c	;volatile
 20676                           
 20677                           ; BSR set to: 2
 20678                           ;adc.c: 35: ADCON1bits.ADFM = 1;
 20679  014ECC  8EC1               	bsf	4033,7,c	;volatile
 20680                           
 20681                           ; BSR set to: 2
 20682                           ;adc.c: 36: ADCON1bits.ADCAL = 0;
 20683  014ECE  9CC1               	bcf	4033,6,c	;volatile
 20684                           
 20685                           ; BSR set to: 2
 20686                           ;adc.c: 37: ADCON1bits.ACQT = 0b111;
 20687  014ED0  86C1               	bsf	4033,3,c	;volatile
 20688  014ED2  88C1               	bsf	4033,4,c	;volatile
 20689  014ED4  8AC1               	bsf	4033,5,c	;volatile
 20690                           
 20691                           ;adc.c: 38: ADCON1bits.ADCS = 0b110;
 20692  014ED6  50C1               	movf	4033,w,c	;volatile
 20693  014ED8  0BF8               	andlw	-8
 20694  014EDA  0906               	iorlw	6
 20695  014EDC  6EC1               	movwf	4033,c	;volatile
 20696                           
 20697                           ; BSR set to: 2
 20698                           ;adc.c: 40: ADCON0bits.ADON = 1;
 20699  014EDE  80C2               	bsf	4034,0,c	;volatile
 20700                           
 20701                           ; BSR set to: 2
 20702                           ;adc.c: 41: ADCON0bits.GO = 1;
 20703  014EE0  82C2               	bsf	4034,1,c	;volatile
 20704                           
 20705                           ; BSR set to: 2
 20706  014EE2  0012               	return		;funcret
 20707  014EE4                     __end_of_adc_init:
 20708                           	opt stack 0
 20709                           tblptru	equ	0xFF8
 20710                           tblptrh	equ	0xFF7
 20711                           tblptrl	equ	0xFF6
 20712                           tablat	equ	0xFF5
 20713                           prodh	equ	0xFF4
 20714                           prodl	equ	0xFF3
 20715                           postinc0	equ	0xFEE
 20716                           wreg	equ	0xFE8
 20717                           indf1	equ	0xFE7
 20718                           postinc1	equ	0xFE6
 20719                           postdec1	equ	0xFE5
 20720                           plusw1	equ	0xFE3
 20721                           fsr1h	equ	0xFE2
 20722                           fsr1l	equ	0xFE1
 20723                           indf2	equ	0xFDF
 20724                           postinc2	equ	0xFDE
 20725                           postdec2	equ	0xFDD
 20726                           plusw2	equ	0xFDB
 20727                           fsr2h	equ	0xFDA
 20728                           fsr2l	equ	0xFD9
 20729                           status	equ	0xFD8
 20730                           
 20731 ;; *************** function __system_timer0_init *****************
 20732 ;; Defined at:
 20733 ;;		line 125 in file "os.c"
 20734 ;; Parameters:    Size  Location     Type
 20735 ;;		None
 20736 ;; Auto vars:     Size  Location     Type
 20737 ;;		None
 20738 ;; Return value:  Size  Location     Type
 20739 ;;                  1    wreg      void 
 20740 ;; Registers used:
 20741 ;;		wreg, status,2
 20742 ;; Tracked objects:
 20743 ;;		On entry : 0/0
 20744 ;;		On exit  : 0/0
 20745 ;;		Unchanged: 0/0
 20746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20751 ;;Total ram usage:        0 bytes
 20752 ;; Hardware stack levels used:    1
 20753 ;; Hardware stack levels required when called:   10
 20754 ;; This function calls:
 20755 ;;		Nothing
 20756 ;; This function is called by:
 20757 ;;		_system_init
 20758 ;; This function uses a non-reentrant model
 20759 ;;
 20760                           
 20761                           	psect	text86
 20762  015BEA                     __ptext86:
 20763                           	opt stack 0
 20764  015BEA                     __system_timer0_init:
 20765                           	opt stack 19
 20766                           
 20767                           ;os.c: 130: T0CONbits.T0CS = 0;
 20768                           
 20769                           ; BSR set to: 2
 20770                           ;incstack = 0
 20771  015BEA  9AD5               	bcf	4053,5,c	;volatile
 20772                           
 20773                           ;os.c: 132: T0CONbits.T08BIT = 0;
 20774  015BEC  9CD5               	bcf	4053,6,c	;volatile
 20775                           
 20776                           ;os.c: 134: T0CONbits.T0PS2 = 0;
 20777  015BEE  94D5               	bcf	4053,2,c	;volatile
 20778                           
 20779                           ;os.c: 135: T0CONbits.T0PS1 = 1;
 20780  015BF0  82D5               	bsf	4053,1,c	;volatile
 20781                           
 20782                           ;os.c: 136: T0CONbits.T0PS0 = 0;
 20783  015BF2  90D5               	bcf	4053,0,c	;volatile
 20784                           
 20785                           ;os.c: 138: T0CONbits.PSA = 0;
 20786  015BF4  96D5               	bcf	4053,3,c	;volatile
 20787                           
 20788                           ;os.c: 140: TMR0H = 0xFA;
 20789  015BF6  0EFA               	movlw	250
 20790  015BF8  6ED7               	movwf	4055,c	;volatile
 20791                           
 20792                           ;os.c: 141: TMR0L = 0x24;
 20793  015BFA  0E24               	movlw	36
 20794  015BFC  6ED6               	movwf	4054,c	;volatile
 20795                           
 20796                           ;os.c: 143: T0CONbits.TMR0ON = 1;
 20797  015BFE  8ED5               	bsf	4053,7,c	;volatile
 20798                           
 20799                           ;os.c: 146: INTCONbits.TMR0IF = 0;
 20800  015C00  94F2               	bcf	intcon,2,c	;volatile
 20801                           
 20802                           ;os.c: 147: INTCONbits.TMR0IE = 1;
 20803  015C02  8AF2               	bsf	intcon,5,c	;volatile
 20804                           
 20805                           ;os.c: 148: INTCONbits.GIE = 1;
 20806  015C04  8EF2               	bsf	intcon,7,c	;volatile
 20807                           
 20808                           ;os.c: 151: os.subTimeSlot = 0;
 20809  015C06  0E00               	movlw	0
 20810  015C08  0101               	movlb	1	; () banked
 20811  015C0A  6F65               	movwf	_os& (0+255),b	;volatile
 20812                           
 20813                           ;os.c: 152: os.timeSlot = 0;
 20814  015C0C  0E00               	movlw	0
 20815  015C0E  6F66               	movwf	(_os+1)& (0+255),b	;volatile
 20816                           
 20817                           ;os.c: 153: os.done = 0;
 20818  015C10  0E00               	movlw	0
 20819  015C12  6F67               	movwf	(_os+2)& (0+255),b	;volatile
 20820                           
 20821                           ; BSR set to: 1
 20822  015C14  0012               	return		;funcret
 20823  015C16                     __end_of__system_timer0_init:
 20824                           	opt stack 0
 20825                           tblptru	equ	0xFF8
 20826                           tblptrh	equ	0xFF7
 20827                           tblptrl	equ	0xFF6
 20828                           tablat	equ	0xFF5
 20829                           prodh	equ	0xFF4
 20830                           prodl	equ	0xFF3
 20831                           intcon	equ	0xFF2
 20832                           postinc0	equ	0xFEE
 20833                           wreg	equ	0xFE8
 20834                           indf1	equ	0xFE7
 20835                           postinc1	equ	0xFE6
 20836                           postdec1	equ	0xFE5
 20837                           plusw1	equ	0xFE3
 20838                           fsr1h	equ	0xFE2
 20839                           fsr1l	equ	0xFE1
 20840                           indf2	equ	0xFDF
 20841                           postinc2	equ	0xFDE
 20842                           postdec2	equ	0xFDD
 20843                           plusw2	equ	0xFDB
 20844                           fsr2h	equ	0xFDA
 20845                           fsr2l	equ	0xFD9
 20846                           status	equ	0xFD8
 20847                           
 20848 ;; *************** function __system_pin_setup *****************
 20849 ;; Defined at:
 20850 ;;		line 59 in file "os.c"
 20851 ;; Parameters:    Size  Location     Type
 20852 ;;		None
 20853 ;; Auto vars:     Size  Location     Type
 20854 ;;		None
 20855 ;; Return value:  Size  Location     Type
 20856 ;;                  1    wreg      void 
 20857 ;; Registers used:
 20858 ;;		wreg, status,2
 20859 ;; Tracked objects:
 20860 ;;		On entry : 0/0
 20861 ;;		On exit  : 0/0
 20862 ;;		Unchanged: 0/0
 20863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20868 ;;Total ram usage:        0 bytes
 20869 ;; Hardware stack levels used:    1
 20870 ;; Hardware stack levels required when called:   10
 20871 ;; This function calls:
 20872 ;;		Nothing
 20873 ;; This function is called by:
 20874 ;;		_system_init
 20875 ;; This function uses a non-reentrant model
 20876 ;;
 20877                           
 20878                           	psect	text87
 20879  01489A                     __ptext87:
 20880                           	opt stack 0
 20881  01489A                     __system_pin_setup:
 20882                           	opt stack 19
 20883                           
 20884                           ;os.c: 62: TRISDbits.TRISD5 = 1;
 20885                           
 20886                           ; BSR set to: 1
 20887                           ;incstack = 0
 20888  01489A  8A95               	bsf	3989,5,c	;volatile
 20889                           
 20890                           ;os.c: 63: TRISDbits.TRISD4 = 0;
 20891  01489C  9895               	bcf	3989,4,c	;volatile
 20892                           
 20893                           ;os.c: 64: TRISDbits.TRISD6 = 0;
 20894  01489E  9C95               	bcf	3989,6,c	;volatile
 20895                           
 20896                           ;os.c: 65: TRISDbits.TRISD7 = 0;
 20897  0148A0  9E95               	bcf	3989,7,c	;volatile
 20898                           
 20899                           ;os.c: 66: LATDbits.LD7 = 1;
 20900  0148A2  8E8C               	bsf	3980,7,c	;volatile
 20901                           
 20902                           ;os.c: 68: TRISBbits.TRISB3 = 1;
 20903  0148A4  8693               	bsf	3987,3,c	;volatile
 20904                           
 20905                           ;os.c: 69: ANCON1bits.PCFG9 = 0;
 20906  0148A6  010F               	movlb	15	; () banked
 20907  0148A8  9349               	bcf	73,1,b	;volatile
 20908                           
 20909                           ;os.c: 71: TRISCbits.TRISC7 = 0;
 20910  0148AA  9E94               	bcf	3988,7,c	;volatile
 20911                           
 20912                           ;os.c: 72: LATCbits.LC7 = 0;
 20913  0148AC  9E8B               	bcf	3979,7,c	;volatile
 20914                           
 20915                           ;os.c: 74: TRISCbits.TRISC6 = 0;
 20916  0148AE  9C94               	bcf	3988,6,c	;volatile
 20917                           
 20918                           ;os.c: 75: LATCbits.LC6 = 0;
 20919  0148B0  9C8B               	bcf	3979,6,c	;volatile
 20920                           
 20921                           ;os.c: 77: TRISAbits.TRISA3 = 0;
 20922  0148B2  9692               	bcf	3986,3,c	;volatile
 20923                           
 20924                           ;os.c: 78: LATAbits.LA3 = 0;
 20925  0148B4  9689               	bcf	3977,3,c	;volatile
 20926                           
 20927                           ;os.c: 80: TRISCbits.TRISC1 = 0;
 20928  0148B6  9294               	bcf	3988,1,c	;volatile
 20929                           
 20930                           ;os.c: 81: LATCbits.LC1 = 0;
 20931  0148B8  928B               	bcf	3979,1,c	;volatile
 20932                           
 20933                           ;os.c: 86: TRISBbits.TRISB5 = 1;
 20934  0148BA  8A93               	bsf	3987,5,c	;volatile
 20935                           
 20936                           ;os.c: 87: TRISBbits.TRISB4 = 1;
 20937  0148BC  8893               	bsf	3987,4,c	;volatile
 20938                           
 20939                           ;os.c: 89: TRISBbits.TRISB0 = 0;
 20940  0148BE  9093               	bcf	3987,0,c	;volatile
 20941                           
 20942                           ;os.c: 90: LATBbits.LB0 = 1;
 20943  0148C0  808A               	bsf	3978,0,c	;volatile
 20944                           
 20945                           ;os.c: 92: TRISBbits.TRISB2 = 0;
 20946  0148C2  9493               	bcf	3987,2,c	;volatile
 20947                           
 20948                           ;os.c: 93: LATBbits.LB2 = 0;
 20949  0148C4  948A               	bcf	3978,2,c	;volatile
 20950                           
 20951                           ;os.c: 95: TRISBbits.TRISB1 = 0;
 20952  0148C6  9293               	bcf	3987,1,c	;volatile
 20953                           
 20954                           ;os.c: 96: ANCON1bits.PCFG10 = 1;
 20955  0148C8  8549               	bsf	73,2,b	;volatile
 20956                           
 20957                           ;os.c: 97: LATBbits.LB1 = 0;
 20958  0148CA  928A               	bcf	3978,1,c	;volatile
 20959                           
 20960                           ; BSR set to: 15
 20961                           ;os.c: 98: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 20962  0148CC  0E55               	movlw	85
 20963  0148CE  6EA7               	movwf	4007,c	;volsfr
 20964  0148D0  0EAA               	movlw	170
 20965  0148D2  6EA7               	movwf	4007,c	;volsfr
 20966                           
 20967                           ; BSR set to: 15
 20968  0148D4  010E               	movlb	14	; () banked
 20969  0148D6  91BF               	bcf	191,0,b	;volatile
 20970                           
 20971                           ;os.c: 99: RPOR4 = 14;
 20972  0148D8  0E0E               	movlw	14
 20973  0148DA  6FC4               	movwf	196,b	;volatile
 20974                           
 20975                           ;os.c: 100: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 20976  0148DC  0E55               	movlw	85
 20977  0148DE  6EA7               	movwf	4007,c	;volsfr
 20978  0148E0  0EAA               	movlw	170
 20979  0148E2  6EA7               	movwf	4007,c	;volsfr
 20980                           
 20981                           ; BSR set to: 14
 20982  0148E4  81BF               	bsf	191,0,b	;volatile
 20983                           
 20984                           ; BSR set to: 14
 20985                           ;os.c: 102: TRISDbits.TRISD2 = 1;
 20986  0148E6  8495               	bsf	3989,2,c	;volatile
 20987                           
 20988                           ; BSR set to: 14
 20989                           ;os.c: 104: TRISEbits.TRISE2 = 1;
 20990  0148E8  8496               	bsf	3990,2,c	;volatile
 20991                           
 20992                           ; BSR set to: 14
 20993                           ;os.c: 105: ANCON0bits.PCFG7 = 1;
 20994  0148EA  010F               	movlb	15	; () banked
 20995  0148EC  8F48               	bsf	72,7,b	;volatile
 20996                           
 20997                           ; BSR set to: 15
 20998                           ;os.c: 107: TRISEbits.TRISE0 = 1;
 20999  0148EE  8096               	bsf	3990,0,c	;volatile
 21000                           
 21001                           ; BSR set to: 15
 21002                           ;os.c: 108: ANCON0bits.PCFG5 = 1;
 21003  0148F0  8B48               	bsf	72,5,b	;volatile
 21004                           
 21005                           ; BSR set to: 15
 21006                           ;os.c: 110: TRISEbits.TRISE1 = 1;
 21007  0148F2  8296               	bsf	3990,1,c	;volatile
 21008                           
 21009                           ; BSR set to: 15
 21010                           ;os.c: 111: ANCON0bits.PCFG6 = 1;
 21011  0148F4  8D48               	bsf	72,6,b	;volatile
 21012                           
 21013                           ; BSR set to: 15
 21014                           ;os.c: 113: TRISAbits.TRISA0 = 1;
 21015  0148F6  8092               	bsf	3986,0,c	;volatile
 21016                           
 21017                           ; BSR set to: 15
 21018                           ;os.c: 114: ANCON0bits.PCFG0 = 1;
 21019  0148F8  8148               	bsf	72,0,b	;volatile
 21020                           
 21021                           ; BSR set to: 15
 21022                           ;os.c: 116: TRISAbits.TRISA2 = 1;
 21023  0148FA  8492               	bsf	3986,2,c	;volatile
 21024                           
 21025                           ; BSR set to: 15
 21026                           ;os.c: 117: ANCON0bits.PCFG2 = 1;
 21027  0148FC  8548               	bsf	72,2,b	;volatile
 21028                           
 21029                           ; BSR set to: 15
 21030                           ;os.c: 119: TRISAbits.TRISA1 = 1;
 21031  0148FE  8292               	bsf	3986,1,c	;volatile
 21032                           
 21033                           ; BSR set to: 15
 21034                           ;os.c: 120: ANCON0bits.PCFG1 = 1;
 21035  014900  8348               	bsf	72,1,b	;volatile
 21036                           
 21037                           ; BSR set to: 15
 21038  014902  0012               	return		;funcret
 21039  014904                     __end_of__system_pin_setup:
 21040                           	opt stack 0
 21041                           tblptru	equ	0xFF8
 21042                           tblptrh	equ	0xFF7
 21043                           tblptrl	equ	0xFF6
 21044                           tablat	equ	0xFF5
 21045                           prodh	equ	0xFF4
 21046                           prodl	equ	0xFF3
 21047                           intcon	equ	0xFF2
 21048                           postinc0	equ	0xFEE
 21049                           wreg	equ	0xFE8
 21050                           indf1	equ	0xFE7
 21051                           postinc1	equ	0xFE6
 21052                           postdec1	equ	0xFE5
 21053                           plusw1	equ	0xFE3
 21054                           fsr1h	equ	0xFE2
 21055                           fsr1l	equ	0xFE1
 21056                           indf2	equ	0xFDF
 21057                           postinc2	equ	0xFDE
 21058                           postdec2	equ	0xFDD
 21059                           plusw2	equ	0xFDB
 21060                           fsr2h	equ	0xFDA
 21061                           fsr2l	equ	0xFD9
 21062                           status	equ	0xFD8
 21063                           
 21064 ;; *************** function __backlight_init *****************
 21065 ;; Defined at:
 21066 ;;		line 158 in file "os.c"
 21067 ;; Parameters:    Size  Location     Type
 21068 ;;		None
 21069 ;; Auto vars:     Size  Location     Type
 21070 ;;		None
 21071 ;; Return value:  Size  Location     Type
 21072 ;;                  1    wreg      void 
 21073 ;; Registers used:
 21074 ;;		None
 21075 ;; Tracked objects:
 21076 ;;		On entry : 0/0
 21077 ;;		On exit  : 0/0
 21078 ;;		Unchanged: 0/0
 21079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21084 ;;Total ram usage:        0 bytes
 21085 ;; Hardware stack levels used:    1
 21086 ;; Hardware stack levels required when called:   10
 21087 ;; This function calls:
 21088 ;;		Nothing
 21089 ;; This function is called by:
 21090 ;;		_system_init
 21091 ;; This function uses a non-reentrant model
 21092 ;;
 21093                           
 21094                           	psect	text88
 21095  016094                     __ptext88:
 21096                           	opt stack 0
 21097  016094                     __backlight_init:
 21098                           	opt stack 19
 21099                           
 21100                           ;os.c: 160: LATCbits.LC1 = 1;
 21101                           
 21102                           ; BSR set to: 15
 21103                           ;incstack = 0
 21104  016094  828B               	bsf	3979,1,c	;volatile
 21105  016096  0012               	return		;funcret
 21106  016098                     __end_of__backlight_init:
 21107                           	opt stack 0
 21108                           tblptru	equ	0xFF8
 21109                           tblptrh	equ	0xFF7
 21110                           tblptrl	equ	0xFF6
 21111                           tablat	equ	0xFF5
 21112                           prodh	equ	0xFF4
 21113                           prodl	equ	0xFF3
 21114                           intcon	equ	0xFF2
 21115                           postinc0	equ	0xFEE
 21116                           wreg	equ	0xFE8
 21117                           indf1	equ	0xFE7
 21118                           postinc1	equ	0xFE6
 21119                           postdec1	equ	0xFE5
 21120                           plusw1	equ	0xFE3
 21121                           fsr1h	equ	0xFE2
 21122                           fsr1l	equ	0xFE1
 21123                           indf2	equ	0xFDF
 21124                           postinc2	equ	0xFDE
 21125                           postdec2	equ	0xFDD
 21126                           plusw2	equ	0xFDB
 21127                           fsr2h	equ	0xFDA
 21128                           fsr2l	equ	0xFD9
 21129                           status	equ	0xFD8
 21130                           
 21131 ;; *************** function _motor_process_cue *****************
 21132 ;; Defined at:
 21133 ;;		line 620 in file "motor.c"
 21134 ;; Parameters:    Size  Location     Type
 21135 ;;		None
 21136 ;; Auto vars:     Size  Location     Type
 21137 ;;		None
 21138 ;; Return value:  Size  Location     Type
 21139 ;;                  1    wreg      void 
 21140 ;; Registers used:
 21141 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21142 ;; Tracked objects:
 21143 ;;		On entry : 0/0
 21144 ;;		On exit  : 0/0
 21145 ;;		Unchanged: 0/0
 21146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21151 ;;Total ram usage:        0 bytes
 21152 ;; Hardware stack levels used:    1
 21153 ;; Hardware stack levels required when called:   11
 21154 ;; This function calls:
 21155 ;;		__motor_run
 21156 ;;		_motor_items_in_cue
 21157 ;; This function is called by:
 21158 ;;		_main
 21159 ;; This function uses a non-reentrant model
 21160 ;;
 21161                           
 21162                           	psect	text89
 21163  01380A                     __ptext89:
 21164                           	opt stack 0
 21165  01380A                     _motor_process_cue:
 21166                           	opt stack 19
 21167                           
 21168                           ;motor.c: 622: if(motor_items_in_cue()==0)
 21169                           
 21170                           ;incstack = 0
 21171  01380A  EC12  F0B0         	call	_motor_items_in_cue	;wreg free
 21172  01380E  0900               	iorlw	0
 21173  013810  B4D8               	btfsc	status,2,c
 21174  013812  0012               	return	
 21175                           
 21176                           ;motor.c: 626: };motor.c: 628: if(os.busy)
 21177                           
 21178                           ;motor.c: 623: {;motor.c: 625: return;
 21179  013814  0101               	movlb	1	; () banked
 21180  013816  5175               	movf	(_os+16)& (0+255),w,b	;volatile
 21181  013818  A4D8               	btfss	status,2,c
 21182  01381A  0012               	return	
 21183                           
 21184                           ; BSR set to: 1
 21185                           ;motor.c: 632: };motor.c: 635: _motor_run(;motor.c: 636: motor_command_cue[motor_cue_rea
      +                          d_index].direction,;motor.c: 637: motor_command_cue[motor_cue_read_index].distance,;moto
      +                          r.c: 638: motor_command_cue[motor_cue_read_index].speed,;motor.c: 639: motor_command_cue
      +                          [motor_cue_read_index].type;motor.c: 640: );
 21186                           
 21187                           ; BSR set to: 1
 21188                           
 21189                           ; BSR set to: 1
 21190                           ;motor.c: 629: {;motor.c: 631: return;
 21191  01381C  514D               	movf	_motor_cue_read_index& (0+255),w,b
 21192  01381E  0D08               	mullw	8
 21193  013820  0E01               	movlw	1
 21194  013822  26F3               	addwf	prodl,f,c
 21195  013824  0E00               	movlw	0
 21196  013826  22F4               	addwfc	prodh,f,c
 21197  013828  0E00               	movlw	low _motor_command_cue
 21198  01382A  24F3               	addwf	prodl,w,c
 21199  01382C  6ED9               	movwf	fsr2l,c
 21200  01382E  0E03               	movlw	high _motor_command_cue
 21201  013830  20F4               	addwfc	prodh,w,c
 21202  013832  6EDA               	movwf	fsr2h,c
 21203  013834  CFDE F060          	movff	postinc2,__motor_run@distance_in_steps
 21204  013838  CFDE F061          	movff	postinc2,__motor_run@distance_in_steps+1
 21205  01383C  CFDE F062          	movff	postinc2,__motor_run@distance_in_steps+2
 21206  013840  CFDE F063          	movff	postinc2,__motor_run@distance_in_steps+3
 21207  013844  514D               	movf	_motor_cue_read_index& (0+255),w,b
 21208  013846  0D08               	mullw	8
 21209  013848  0E05               	movlw	5
 21210  01384A  26F3               	addwf	prodl,f,c
 21211  01384C  0E00               	movlw	0
 21212  01384E  22F4               	addwfc	prodh,f,c
 21213  013850  0E00               	movlw	low _motor_command_cue
 21214  013852  24F3               	addwf	prodl,w,c
 21215  013854  6ED9               	movwf	fsr2l,c
 21216  013856  0E03               	movlw	high _motor_command_cue
 21217  013858  20F4               	addwfc	prodh,w,c
 21218  01385A  6EDA               	movwf	fsr2h,c
 21219  01385C  CFDE F064          	movff	postinc2,__motor_run@speed
 21220  013860  CFDD F065          	movff	postdec2,__motor_run@speed+1
 21221  013864  514D               	movf	_motor_cue_read_index& (0+255),w,b
 21222  013866  0D08               	mullw	8
 21223  013868  0E07               	movlw	7
 21224  01386A  26F3               	addwf	prodl,f,c
 21225  01386C  0E00               	movlw	0
 21226  01386E  22F4               	addwfc	prodh,f,c
 21227  013870  0E00               	movlw	low _motor_command_cue
 21228  013872  24F3               	addwf	prodl,w,c
 21229  013874  6ED9               	movwf	fsr2l,c
 21230  013876  0E03               	movlw	high _motor_command_cue
 21231  013878  20F4               	addwfc	prodh,w,c
 21232  01387A  6EDA               	movwf	fsr2h,c
 21233  01387C  50DF               	movf	indf2,w,c
 21234  01387E  0100               	movlb	0	; () banked
 21235  013880  6F66               	movwf	__motor_run@type& (0+255),b
 21236  013882  0101               	movlb	1	; () banked
 21237  013884  514D               	movf	_motor_cue_read_index& (0+255),w,b
 21238  013886  0D08               	mullw	8
 21239  013888  0E00               	movlw	low _motor_command_cue
 21240  01388A  24F3               	addwf	prodl,w,c
 21241  01388C  6ED9               	movwf	fsr2l,c
 21242  01388E  0E03               	movlw	high _motor_command_cue
 21243  013890  20F4               	addwfc	prodh,w,c
 21244  013892  6EDA               	movwf	fsr2h,c
 21245  013894  50DF               	movf	indf2,w,c
 21246  013896  EC44  F076         	call	__motor_run
 21247                           
 21248                           ;motor.c: 642: ++motor_cue_read_index;
 21249  01389A  0101               	movlb	1	; () banked
 21250  01389C  2B4D               	incf	_motor_cue_read_index& (0+255),f,b
 21251                           
 21252                           ; BSR set to: 1
 21253                           ;motor.c: 643: motor_cue_read_index &= 0b111;
 21254  01389E  0E07               	movlw	7
 21255  0138A0  174D               	andwf	_motor_cue_read_index& (0+255),f,b
 21256  0138A2  0012               	return		;funcret
 21257  0138A4                     __end_of_motor_process_cue:
 21258                           	opt stack 0
 21259                           tblptru	equ	0xFF8
 21260                           tblptrh	equ	0xFF7
 21261                           tblptrl	equ	0xFF6
 21262                           tablat	equ	0xFF5
 21263                           prodh	equ	0xFF4
 21264                           prodl	equ	0xFF3
 21265                           intcon	equ	0xFF2
 21266                           postinc0	equ	0xFEE
 21267                           wreg	equ	0xFE8
 21268                           indf1	equ	0xFE7
 21269                           postinc1	equ	0xFE6
 21270                           postdec1	equ	0xFE5
 21271                           plusw1	equ	0xFE3
 21272                           fsr1h	equ	0xFE2
 21273                           fsr1l	equ	0xFE1
 21274                           indf2	equ	0xFDF
 21275                           postinc2	equ	0xFDE
 21276                           postdec2	equ	0xFDD
 21277                           plusw2	equ	0xFDB
 21278                           fsr2h	equ	0xFDA
 21279                           fsr2l	equ	0xFD9
 21280                           status	equ	0xFD8
 21281                           
 21282 ;; *************** function __motor_run *****************
 21283 ;; Defined at:
 21284 ;;		line 41 in file "motor.c"
 21285 ;; Parameters:    Size  Location     Type
 21286 ;;  direction       1    wreg     enum E6622
 21287 ;;  distance_in_    4    0[BANK0 ] unsigned long 
 21288 ;;  speed           2    4[BANK0 ] unsigned int 
 21289 ;;  type            1    6[BANK0 ] enum E6631
 21290 ;; Auto vars:     Size  Location     Type
 21291 ;;  direction       1   11[BANK0 ] enum E6622
 21292 ;; Return value:  Size  Location     Type
 21293 ;;                  1    wreg      void 
 21294 ;; Registers used:
 21295 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 21296 ;; Tracked objects:
 21297 ;;		On entry : 0/0
 21298 ;;		On exit  : 0/0
 21299 ;;		Unchanged: 0/0
 21300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21301 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21302 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21303 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21304 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21305 ;;Total ram usage:       12 bytes
 21306 ;; Hardware stack levels used:    1
 21307 ;; Hardware stack levels required when called:   10
 21308 ;; This function calls:
 21309 ;;		Nothing
 21310 ;; This function is called by:
 21311 ;;		_motor_process_cue
 21312 ;; This function uses a non-reentrant model
 21313 ;;
 21314                           
 21315                           	psect	text90
 21316  00EC88                     __ptext90:
 21317                           	opt stack 0
 21318  00EC88                     __motor_run:
 21319                           	opt stack 19
 21320                           
 21321                           ;incstack = 0
 21322                           ;__motor_run@direction stored from wreg
 21323  00EC88  0100               	movlb	0	; () banked
 21324  00EC8A  6F6B               	movwf	__motor_run@direction& (0+255),b
 21325                           
 21326                           ;motor.c: 48: motor_direction = direction;
 21327  00EC8C  C06B  F14A         	movff	__motor_run@direction,_motor_direction
 21328                           
 21329                           ;motor.c: 49: motor_final_stepcount = distance_in_steps;
 21330  00EC90  C060  F11B         	movff	__motor_run@distance_in_steps,_motor_final_stepcount	;volatile
 21331  00EC94  C061  F11C         	movff	__motor_run@distance_in_steps+1,_motor_final_stepcount+1	;volatile
 21332  00EC98  C062  F11D         	movff	__motor_run@distance_in_steps+2,_motor_final_stepcount+2	;volatile
 21333  00EC9C  C063  F11E         	movff	__motor_run@distance_in_steps+3,_motor_final_stepcount+3	;volatile
 21334                           
 21335                           ;motor.c: 50: motor_maximum_speed = speed;
 21336  00ECA0  C064  F137         	movff	__motor_run@speed,_motor_maximum_speed
 21337  00ECA4  C065  F138         	movff	__motor_run@speed+1,_motor_maximum_speed+1
 21338                           
 21339                           ;motor.c: 51: motor_move_type = type;
 21340  00ECA8  C066  F14B         	movff	__motor_run@type,_motor_move_type
 21341                           
 21342                           ;motor.c: 54: if(motor_move_type==MOTOR_MOVE_TYPE_ENDLESS)
 21343  00ECAC  0101               	movlb	1	; () banked
 21344  00ECAE  054B               	decf	_motor_move_type& (0+255),w,b
 21345  00ECB0  A4D8               	btfss	status,2,c
 21346  00ECB2  D004               	goto	l2450
 21347                           
 21348                           ; BSR set to: 1
 21349                           ;motor.c: 55: {;motor.c: 56: motor_final_stepcount = 0xFFFFFFFF;
 21350  00ECB4  691B               	setf	_motor_final_stepcount& (0+255),b	;volatile
 21351  00ECB6  691C               	setf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 21352  00ECB8  691D               	setf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 21353  00ECBA  691E               	setf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 21354  00ECBC                     l2450:
 21355                           
 21356                           ; BSR set to: 1
 21357                           ;motor.c: 57: };motor.c: 60: motor_current_speed = 0;
 21358                           
 21359                           ; BSR set to: 1
 21360  00ECBC  0E00               	movlw	0
 21361  00ECBE  6E58               	movwf	_motor_current_speed+1,c	;volatile
 21362  00ECC0  0E00               	movlw	0
 21363  00ECC2  6E57               	movwf	_motor_current_speed,c	;volatile
 21364                           
 21365                           ;motor.c: 61: motor_current_stepcount = 0;
 21366  00ECC4  0E00               	movlw	0
 21367  00ECC6  6F1F               	movwf	_motor_current_stepcount& (0+255),b	;volatile
 21368  00ECC8  0E00               	movlw	0
 21369  00ECCA  6F20               	movwf	(_motor_current_stepcount+1)& (0+255),b	;volatile
 21370  00ECCC  0E00               	movlw	0
 21371  00ECCE  6F21               	movwf	(_motor_current_stepcount+2)& (0+255),b	;volatile
 21372  00ECD0  0E00               	movlw	0
 21373  00ECD2  6F22               	movwf	(_motor_current_stepcount+3)& (0+255),b	;volatile
 21374                           
 21375                           ; BSR set to: 1
 21376                           ;motor.c: 62: motor_next_speed_check = motor_steps_lookup[1];
 21377  00ECD4  0E63               	movlw	low (_motor_steps_lookup+2)
 21378  00ECD6  6EF6               	movwf	tblptrl,c
 21379  00ECD8  0E94               	movlw	high (_motor_steps_lookup+2)
 21380  00ECDA  6EF7               	movwf	tblptrh,c
 21381  00ECDC                     	if	0	;tblptru may be non-zero
 21382  00ECDC                     	endif
 21383  00ECDC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21384  00ECDC  0E00               	movlw	low (__mediumconst shr (0+16))
 21385  00ECDE  6EF8               	movwf	tblptru,c
 21386  00ECE0                     	endif
 21387  00ECE0  0009               	tblrd		*+
 21388  00ECE2  CFF5 F067          	movff	tablat,??__motor_run
 21389  00ECE6  0009               	tblrd		*+
 21390  00ECE8  CFF5 F068          	movff	tablat,??__motor_run+1
 21391  00ECEC  C067  F238         	movff	??__motor_run,_motor_next_speed_check	;volatile
 21392  00ECF0  C068  F239         	movff	??__motor_run+1,_motor_next_speed_check+1	;volatile
 21393  00ECF4  0102               	movlb	2	; () banked
 21394  00ECF6  6B3A               	clrf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 21395  00ECF8  6B3B               	clrf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 21396                           
 21397                           ; BSR set to: 2
 21398                           ;motor.c: 65: CCP1CONbits.CCP1M = 0b0000;
 21399  00ECFA  90BA               	bcf	4026,0,c	;volatile
 21400  00ECFC  92BA               	bcf	4026,1,c	;volatile
 21401  00ECFE  94BA               	bcf	4026,2,c	;volatile
 21402  00ED00  96BA               	bcf	4026,3,c	;volatile
 21403                           
 21404                           ; BSR set to: 2
 21405                           ;motor.c: 68: LATBbits.LB0 = 0;
 21406  00ED02  908A               	bcf	3978,0,c	;volatile
 21407                           
 21408                           ; BSR set to: 2
 21409                           ;motor.c: 69: if(direction==MOTOR_DIRECTION_CCW)
 21410  00ED04  0100               	movlb	0	; () banked
 21411  00ED06  296B               	incf	__motor_run@direction& (0+255),w,b
 21412  00ED08  A4D8               	btfss	status,2,c
 21413  00ED0A  D005               	goto	l2451
 21414                           
 21415                           ; BSR set to: 0
 21416                           ;motor.c: 70: {;motor.c: 71: if(config.inverse_direction)
 21417  00ED0C  0101               	movlb	1	; () banked
 21418  00ED0E  519A               	movf	(_config+4)& (0+255),w,b
 21419  00ED10  B4D8               	btfsc	status,2,c
 21420  00ED12  D005               	goto	u17210
 21421  00ED14  D006               	goto	l2455
 21422  00ED16                     l2451:
 21423                           
 21424                           ;motor.c: 76: else;motor.c: 77: {;motor.c: 78: if(config.inverse_direction)
 21425                           
 21426                           ; BSR set to: 1
 21427  00ED16  0101               	movlb	1	; () banked
 21428  00ED18  519A               	movf	(_config+4)& (0+255),w,b
 21429  00ED1A  B4D8               	btfsc	status,2,c
 21430  00ED1C  D002               	goto	l2455
 21431  00ED1E                     u17210:
 21432                           
 21433                           ; BSR set to: 1
 21434                           ;motor.c: 79: LATBbits.LB2 = 0;
 21435  00ED1E  948A               	bcf	3978,2,c	;volatile
 21436  00ED20  D001               	goto	l2456
 21437  00ED22                     l2455:
 21438                           
 21439                           ; BSR set to: 1
 21440                           ;motor.c: 80: else;motor.c: 81: LATBbits.LB2 = 1;
 21441  00ED22  848A               	bsf	3978,2,c	;volatile
 21442  00ED24                     l2456:
 21443                           
 21444                           ; BSR set to: 1
 21445                           ;motor.c: 82: };motor.c: 85: LATBbits.LB1 = 1;
 21446                           
 21447                           ; BSR set to: 1
 21448  00ED24  828A               	bsf	3978,1,c	;volatile
 21449                           
 21450                           ; BSR set to: 1
 21451                           ;motor.c: 88: ++motor_current_stepcount;
 21452  00ED26  0E01               	movlw	1
 21453  00ED28  271F               	addwf	_motor_current_stepcount& (0+255),f,b	;volatile
 21454  00ED2A  0E00               	movlw	0
 21455  00ED2C  2320               	addwfc	(_motor_current_stepcount+1)& (0+255),f,b	;volatile
 21456  00ED2E  2321               	addwfc	(_motor_current_stepcount+2)& (0+255),f,b	;volatile
 21457  00ED30  2322               	addwfc	(_motor_current_stepcount+3)& (0+255),f,b	;volatile
 21458                           
 21459                           ;motor.c: 91: os.current_position_in_steps += motor_direction;
 21460  00ED32  514A               	movf	_motor_direction& (0+255),w,b
 21461  00ED34  0100               	movlb	0	; () banked
 21462  00ED36  6F67               	movwf	??__motor_run& (0+255),b
 21463  00ED38  0E00               	movlw	0
 21464  00ED3A  BF67               	btfsc	??__motor_run& (0+255),7,b
 21465  00ED3C  0EFF               	movlw	255
 21466  00ED3E  6F68               	movwf	(??__motor_run+1)& (0+255),b
 21467  00ED40  6F69               	movwf	(??__motor_run+2)& (0+255),b
 21468  00ED42  6F6A               	movwf	(??__motor_run+3)& (0+255),b
 21469  00ED44  5167               	movf	??__motor_run& (0+255),w,b
 21470  00ED46  0101               	movlb	1	; () banked
 21471  00ED48  276C               	addwf	(_os+7)& (0+255),f,b	;volatile
 21472  00ED4A  0100               	movlb	0	; () banked
 21473  00ED4C  5168               	movf	(??__motor_run+1)& (0+255),w,b
 21474  00ED4E  0101               	movlb	1	; () banked
 21475  00ED50  236D               	addwfc	(_os+8)& (0+255),f,b	;volatile
 21476  00ED52  0100               	movlb	0	; () banked
 21477  00ED54  5169               	movf	(??__motor_run+2)& (0+255),w,b
 21478  00ED56  0101               	movlb	1	; () banked
 21479  00ED58  236E               	addwfc	(_os+9)& (0+255),f,b	;volatile
 21480  00ED5A  0100               	movlb	0	; () banked
 21481  00ED5C  516A               	movf	(??__motor_run+3)& (0+255),w,b
 21482  00ED5E  0101               	movlb	1	; () banked
 21483  00ED60  236F               	addwfc	(_os+10)& (0+255),f,b	;volatile
 21484                           
 21485                           ;motor.c: 92: if(os.current_position_in_steps==config.full_circle_in_steps)
 21486  00ED62  5196               	movf	_config& (0+255),w,b
 21487  00ED64  196C               	xorwf	(_os+7)& (0+255),w,b	;volatile
 21488  00ED66  E114               	bnz	l17704
 21489  00ED68  5197               	movf	(_config+1)& (0+255),w,b
 21490  00ED6A  196D               	xorwf	(_os+8)& (0+255),w,b	;volatile
 21491  00ED6C  E111               	bnz	l17704
 21492  00ED6E  5198               	movf	(_config+2)& (0+255),w,b
 21493  00ED70  196E               	xorwf	(_os+9)& (0+255),w,b	;volatile
 21494  00ED72  E10E               	bnz	l17704
 21495  00ED74  5199               	movf	(_config+3)& (0+255),w,b
 21496  00ED76  196F               	xorwf	(_os+10)& (0+255),w,b	;volatile
 21497  00ED78  A4D8               	btfss	status,2,c
 21498  00ED7A  D00A               	goto	l2457
 21499                           
 21500                           ; BSR set to: 1
 21501                           ;motor.c: 93: {;motor.c: 94: os.current_position_in_steps = 0;
 21502  00ED7C  0E00               	movlw	0
 21503  00ED7E  6F6C               	movwf	(_os+7)& (0+255),b	;volatile
 21504  00ED80  0E00               	movlw	0
 21505  00ED82  6F6D               	movwf	(_os+8)& (0+255),b	;volatile
 21506  00ED84  0E00               	movlw	0
 21507  00ED86  6F6E               	movwf	(_os+9)& (0+255),b	;volatile
 21508  00ED88  0E00               	movlw	0
 21509  00ED8A  6F6F               	movwf	(_os+10)& (0+255),b	;volatile
 21510                           
 21511                           ; BSR set to: 1
 21512                           ;motor.c: 95: ++os.absolute_position;
 21513  00ED8C  4B70               	infsnz	(_os+11)& (0+255),f,b	;volatile
 21514  00ED8E  2B71               	incf	(_os+12)& (0+255),f,b	;volatile
 21515  00ED90                     l2457:
 21516  00ED90                     l17704:
 21517                           
 21518                           ; BSR set to: 1
 21519                           ;motor.c: 96: };motor.c: 97: if(os.current_position_in_steps==0xFFFFFFFF)
 21520  00ED90  296C               	incf	(_os+7)& (0+255),w,b	;volatile
 21521  00ED92  E116               	bnz	l17710
 21522  00ED94  296D               	incf	(_os+8)& (0+255),w,b	;volatile
 21523  00ED96  E114               	bnz	l17710
 21524  00ED98  296E               	incf	(_os+9)& (0+255),w,b	;volatile
 21525  00ED9A  E112               	bnz	l17710
 21526  00ED9C  296F               	incf	(_os+10)& (0+255),w,b	;volatile
 21527  00ED9E  A4D8               	btfss	status,2,c
 21528  00EDA0  D00F               	goto	l2458
 21529                           
 21530                           ; BSR set to: 1
 21531                           ;motor.c: 98: {;motor.c: 99: os.current_position_in_steps = (config.full_circle_in_steps
      +                          -1);
 21532  00EDA2  0EFF               	movlw	255
 21533  00EDA4  2596               	addwf	_config& (0+255),w,b
 21534  00EDA6  6F6C               	movwf	(_os+7)& (0+255),b	;volatile
 21535  00EDA8  0EFF               	movlw	255
 21536  00EDAA  2197               	addwfc	(_config+1)& (0+255),w,b
 21537  00EDAC  6F6D               	movwf	(_os+8)& (0+255),b	;volatile
 21538  00EDAE  0EFF               	movlw	255
 21539  00EDB0  2198               	addwfc	(_config+2)& (0+255),w,b
 21540  00EDB2  6F6E               	movwf	(_os+9)& (0+255),b	;volatile
 21541  00EDB4  0EFF               	movlw	255
 21542  00EDB6  2199               	addwfc	(_config+3)& (0+255),w,b
 21543  00EDB8  6F6F               	movwf	(_os+10)& (0+255),b	;volatile
 21544                           
 21545                           ; BSR set to: 1
 21546                           ;motor.c: 100: --os.absolute_position;
 21547  00EDBA  0770               	decf	(_os+11)& (0+255),f,b	;volatile
 21548  00EDBC  A0D8               	btfss	status,0,c
 21549  00EDBE  0771               	decf	(_os+12)& (0+255),f,b	;volatile
 21550  00EDC0                     l2458:
 21551  00EDC0                     l17710:
 21552                           
 21553                           ; BSR set to: 1
 21554                           ;motor.c: 101: };motor.c: 104: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOL
      +                          OCK = 0;};
 21555  00EDC0  0E55               	movlw	85
 21556  00EDC2  6EA7               	movwf	4007,c	;volsfr
 21557                           
 21558                           ; BSR set to: 1
 21559  00EDC4  0EAA               	movlw	170
 21560  00EDC6  6EA7               	movwf	4007,c	;volsfr
 21561                           
 21562                           ; BSR set to: 1
 21563  00EDC8  010E               	movlb	14	; () banked
 21564  00EDCA  91BF               	bcf	191,0,b	;volatile
 21565                           
 21566                           ; BSR set to: 14
 21567                           ;motor.c: 105: RPOR4 = 0;
 21568  00EDCC  0E00               	movlw	0
 21569  00EDCE  6FC4               	movwf	196,b	;volatile
 21570                           
 21571                           ; BSR set to: 14
 21572                           ;motor.c: 106: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 21573  00EDD0  0E55               	movlw	85
 21574  00EDD2  6EA7               	movwf	4007,c	;volsfr
 21575                           
 21576                           ; BSR set to: 14
 21577  00EDD4  0EAA               	movlw	170
 21578  00EDD6  6EA7               	movwf	4007,c	;volsfr
 21579                           
 21580                           ; BSR set to: 14
 21581  00EDD8  81BF               	bsf	191,0,b	;volatile
 21582                           
 21583                           ; BSR set to: 14
 21584                           ;motor.c: 109: motor_mode = MOTOR_MODE_MANUAL;
 21585  00EDDA  0E00               	movlw	0
 21586  00EDDC  0101               	movlb	1	; () banked
 21587  00EDDE  6F49               	movwf	_motor_mode& (0+255),b	;volatile
 21588                           
 21589                           ; BSR set to: 1
 21590                           ;motor.c: 113: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_speed];
 21591  00EDE0  0EFD               	movlw	low _motor_prescaler_lookup
 21592  00EDE2  2457               	addwf	_motor_current_speed,w,c	;volatile
 21593  00EDE4  6EF6               	movwf	tblptrl,c
 21594  00EDE6  0E9B               	movlw	high _motor_prescaler_lookup
 21595  00EDE8  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 21596  00EDEA  6EF7               	movwf	tblptrh,c
 21597  00EDEC                     	if	1	;There are 3 active tblptr bytes
 21598  00EDEC  6AF8               	clrf	tblptru,c
 21599  00EDEE  0E00               	movlw	low (__mediumconst shr (0+16))
 21600  00EDF0  22F8               	addwfc	tblptru,f,c
 21601  00EDF2                     	endif
 21602  00EDF2  0008               	tblrd		*
 21603  00EDF4  CFF5 F067          	movff	tablat,??__motor_run
 21604  00EDF8  50CA               	movf	4042,w,c	;volatile
 21605  00EDFA  0100               	movlb	0	; () banked
 21606  00EDFC  1967               	xorwf	??__motor_run& (0+255),w,b
 21607  00EDFE  0BFC               	andlw	-4
 21608  00EE00  1967               	xorwf	??__motor_run& (0+255),w,b
 21609  00EE02  6ECA               	movwf	4042,c	;volatile
 21610                           
 21611                           ; BSR set to: 0
 21612                           ;motor.c: 115: PR2 = motor_period_lookup[motor_current_speed];
 21613  00EE04  0E16               	movlw	low _motor_period_lookup
 21614  00EE06  2457               	addwf	_motor_current_speed,w,c	;volatile
 21615  00EE08  6EF6               	movwf	tblptrl,c
 21616  00EE0A  0E9A               	movlw	high _motor_period_lookup
 21617  00EE0C  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 21618  00EE0E  6EF7               	movwf	tblptrh,c
 21619  00EE10                     	if	1	;There are 3 active tblptr bytes
 21620  00EE10  6AF8               	clrf	tblptru,c
 21621  00EE12  0E00               	movlw	low (__mediumconst shr (0+16))
 21622  00EE14  22F8               	addwfc	tblptru,f,c
 21623  00EE16                     	endif
 21624  00EE16  0008               	tblrd		*
 21625  00EE18  CFF5 FFCB          	movff	tablat,4043	;volatile
 21626                           
 21627                           ; BSR set to: 0
 21628                           ;motor.c: 117: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 21629  00EE1C  0E2F               	movlw	low _motor_postscaler_lookup
 21630  00EE1E  2457               	addwf	_motor_current_speed,w,c	;volatile
 21631  00EE20  6EF6               	movwf	tblptrl,c
 21632  00EE22  0E98               	movlw	high _motor_postscaler_lookup
 21633  00EE24  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 21634  00EE26  6EF7               	movwf	tblptrh,c
 21635  00EE28                     	if	1	;There are 3 active tblptr bytes
 21636  00EE28  6AF8               	clrf	tblptru,c
 21637  00EE2A  0E00               	movlw	low (__mediumconst shr (0+16))
 21638  00EE2C  22F8               	addwfc	tblptru,f,c
 21639  00EE2E                     	endif
 21640  00EE2E  0008               	tblrd		*
 21641  00EE30  CFF5 F067          	movff	tablat,??__motor_run
 21642  00EE34  4767               	rlncf	??__motor_run& (0+255),f,b
 21643  00EE36  4767               	rlncf	??__motor_run& (0+255),f,b
 21644  00EE38  4767               	rlncf	??__motor_run& (0+255),f,b
 21645  00EE3A  50CA               	movf	4042,w,c	;volatile
 21646  00EE3C  1967               	xorwf	??__motor_run& (0+255),w,b
 21647  00EE3E  0B87               	andlw	-121
 21648  00EE40  1967               	xorwf	??__motor_run& (0+255),w,b
 21649  00EE42  6ECA               	movwf	4042,c	;volatile
 21650                           
 21651                           ; BSR set to: 0
 21652                           ;motor.c: 119: CCPR1L = PR2>>1;
 21653  00EE44  90D8               	bcf	status,0,c
 21654  00EE46  30CB               	rrcf	4043,w,c	;volatile
 21655  00EE48  6EBB               	movwf	4027,c	;volatile
 21656                           
 21657                           ; BSR set to: 0
 21658                           ;motor.c: 122: PIR1bits.TMR2IF = 0;
 21659  00EE4A  929E               	bcf	3998,1,c	;volatile
 21660                           
 21661                           ; BSR set to: 0
 21662                           ;motor.c: 123: PIE1bits.TMR2IE = 1;
 21663  00EE4C  829D               	bsf	3997,1,c	;volatile
 21664                           
 21665                           ; BSR set to: 0
 21666                           ;motor.c: 126: TMR2 = 0;
 21667  00EE4E  0E00               	movlw	0
 21668  00EE50  6ECC               	movwf	4044,c	;volatile
 21669                           
 21670                           ; BSR set to: 0
 21671                           ;motor.c: 127: T2CONbits.TMR2ON = 1;
 21672  00EE52  84CA               	bsf	4042,2,c	;volatile
 21673                           
 21674                           ; BSR set to: 0
 21675                           ;motor.c: 130: os.busy = 1;
 21676  00EE54  0E01               	movlw	1
 21677  00EE56  0101               	movlb	1	; () banked
 21678  00EE58  6F75               	movwf	(_os+16)& (0+255),b	;volatile
 21679                           
 21680                           ; BSR set to: 1
 21681  00EE5A  0012               	return		;funcret
 21682  00EE5C                     __end_of__motor_run:
 21683                           	opt stack 0
 21684                           tblptru	equ	0xFF8
 21685                           tblptrh	equ	0xFF7
 21686                           tblptrl	equ	0xFF6
 21687                           tablat	equ	0xFF5
 21688                           prodh	equ	0xFF4
 21689                           prodl	equ	0xFF3
 21690                           intcon	equ	0xFF2
 21691                           postinc0	equ	0xFEE
 21692                           wreg	equ	0xFE8
 21693                           indf1	equ	0xFE7
 21694                           postinc1	equ	0xFE6
 21695                           postdec1	equ	0xFE5
 21696                           plusw1	equ	0xFE3
 21697                           fsr1h	equ	0xFE2
 21698                           fsr1l	equ	0xFE1
 21699                           indf2	equ	0xFDF
 21700                           postinc2	equ	0xFDE
 21701                           postdec2	equ	0xFDD
 21702                           plusw2	equ	0xFDB
 21703                           fsr2h	equ	0xFDA
 21704                           fsr2l	equ	0xFD9
 21705                           status	equ	0xFD8
 21706                           
 21707 ;; *************** function _encoder_statemachine *****************
 21708 ;; Defined at:
 21709 ;;		line 210 in file "encoder.c"
 21710 ;; Parameters:    Size  Location     Type
 21711 ;;		None
 21712 ;; Auto vars:     Size  Location     Type
 21713 ;;		None
 21714 ;; Return value:  Size  Location     Type
 21715 ;;                  1    wreg      void 
 21716 ;; Registers used:
 21717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21718 ;; Tracked objects:
 21719 ;;		On entry : 0/0
 21720 ;;		On exit  : 0/0
 21721 ;;		Unchanged: 0/0
 21722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21725 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21726 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21727 ;;Total ram usage:        4 bytes
 21728 ;; Hardware stack levels used:    1
 21729 ;; Hardware stack levels required when called:   15
 21730 ;; This function calls:
 21731 ;;		__divide_jump_size_decrement
 21732 ;;		__divide_jump_size_increment
 21733 ;;		__encoder_next_arc_step_size
 21734 ;;		__encoder_next_divide_step_size
 21735 ;;		__encoder_next_setup_stepsize
 21736 ;;		_motor_arc_move
 21737 ;;		_motor_change_speed
 21738 ;;		_motor_decrease_manual_speed
 21739 ;;		_motor_divide_jump
 21740 ;;		_motor_divide_jump_to_nearest
 21741 ;;		_motor_goto_steps
 21742 ;;		_motor_increase_manual_speed
 21743 ;;		_motor_move_degrees_int
 21744 ;;		_motor_move_endless
 21745 ;;		_motor_set_zero
 21746 ;;		_motor_stop
 21747 ;; This function is called by:
 21748 ;;		_main
 21749 ;; This function uses a non-reentrant model
 21750 ;;
 21751                           
 21752                           	psect	text91
 21753  00AFCC                     __ptext91:
 21754                           	opt stack 0
 21755  00AFCC                     _encoder_statemachine:
 21756                           	opt stack 15
 21757                           
 21758                           ;encoder.c: 213: if(os.encoder1Count==0 && os.encoder2Count==0 && os.button1==0 && os.bu
      +                          tton2==0)
 21759                           
 21760                           ; BSR set to: 1
 21761                           ;incstack = 0
 21762  00AFCC  0101               	movlb	1	; () banked
 21763  00AFCE  5168               	movf	(_os+3)& (0+255),w,b	;volatile
 21764  00AFD0  A4D8               	btfss	status,2,c
 21765  00AFD2  D3E2               	goto	l2781
 21766                           
 21767                           ; BSR set to: 1
 21768  00AFD4  516A               	movf	(_os+5)& (0+255),w,b	;volatile
 21769  00AFD6  A4D8               	btfss	status,2,c
 21770  00AFD8  D3DF               	goto	l2781
 21771                           
 21772                           ; BSR set to: 1
 21773  00AFDA  5169               	movf	(_os+4)& (0+255),w,b	;volatile
 21774  00AFDC  A4D8               	btfss	status,2,c
 21775  00AFDE  D3DC               	goto	l2781
 21776                           
 21777                           ; BSR set to: 1
 21778  00AFE0  516B               	movf	(_os+6)& (0+255),w,b	;volatile
 21779  00AFE2  B4D8               	btfsc	status,2,c
 21780  00AFE4  0012               	return	
 21781  00AFE6  D3D8               	goto	l2781
 21782  00AFE8                     
 21783                           ; BSR set to: 1
 21784                           ;encoder.c: 225: if(os.button1==1 || os.button2==1)
 21785                           
 21786                           ; BSR set to: 1
 21787  00AFE8  0569               	decf	(_os+4)& (0+255),w,b	;volatile
 21788  00AFEA  B4D8               	btfsc	status,2,c
 21789  00AFEC  D003               	goto	u17870
 21790                           
 21791                           ; BSR set to: 1
 21792  00AFEE  056B               	decf	(_os+6)& (0+255),w,b	;volatile
 21793  00AFF0  A4D8               	btfss	status,2,c
 21794  00AFF2  D002               	goto	l2785
 21795  00AFF4                     u17870:
 21796                           
 21797                           ; BSR set to: 1
 21798                           ;encoder.c: 226: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 21799                           
 21800                           ; BSR set to: 1
 21801  00AFF4  0E11               	movlw	17
 21802  00AFF6  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 21803  00AFF8                     l2785:
 21804                           
 21805                           ; BSR set to: 1
 21806                           ;encoder.c: 227: if(os.encoder1Count+os.encoder2Count>0)
 21807                           
 21808                           ; BSR set to: 1
 21809  00AFF8  C16A  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21810  00AFFC  0100               	movlb	0	; () banked
 21811  00AFFE  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21812  00B000  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21813  00B002  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21814  00B004  C168  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21815  00B008  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21816  00B00A  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21817  00B00C  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21818  00B00E  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21819  00B010  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21820  00B012  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21821  00B014  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21822  00B016  BFAB               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21823  00B018  D008               	goto	l2788
 21824  00B01A  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21825  00B01C  E103               	bnz	u17880
 21826  00B01E  05AA               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21827  00B020  A0D8               	btfss	status,0,c
 21828  00B022  D003               	goto	l2788
 21829  00B024                     u17880:
 21830                           
 21831                           ; BSR set to: 0
 21832                           ;encoder.c: 228: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 21833  00B024  0E02               	movlw	2
 21834  00B026  0101               	movlb	1	; () banked
 21835  00B028  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 21836  00B02A                     l2788:
 21837                           
 21838                           ;encoder.c: 229: if(os.encoder1Count+os.encoder2Count<0)
 21839                           
 21840                           ; BSR set to: 1
 21841  00B02A  C16A  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21842  00B02E  0100               	movlb	0	; () banked
 21843  00B030  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21844  00B032  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21845  00B034  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21846  00B036  C168  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21847  00B03A  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21848  00B03C  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21849  00B03E  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21850  00B040  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21851  00B042  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21852  00B044  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21853  00B046  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21854  00B048  AFAB               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21855  00B04A  D3CB               	goto	l2816
 21856                           
 21857                           ; BSR set to: 0
 21858                           ;encoder.c: 230: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 21859  00B04C  0E05               	movlw	5
 21860  00B04E  D392               	goto	L22
 21861  00B050                     
 21862                           ; BSR set to: 1
 21863                           ;encoder.c: 233: if(os.button1==1 || os.button2==1)
 21864                           
 21865                           ; BSR set to: 1
 21866  00B050  0569               	decf	(_os+4)& (0+255),w,b	;volatile
 21867  00B052  B4D8               	btfsc	status,2,c
 21868  00B054  D003               	goto	u17910
 21869                           
 21870                           ; BSR set to: 1
 21871  00B056  056B               	decf	(_os+6)& (0+255),w,b	;volatile
 21872  00B058  A4D8               	btfss	status,2,c
 21873  00B05A  D002               	goto	l2792
 21874  00B05C                     u17910:
 21875                           
 21876                           ; BSR set to: 1
 21877                           ;encoder.c: 234: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 21878                           
 21879                           ; BSR set to: 1
 21880  00B05C  0E31               	movlw	49
 21881  00B05E  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 21882  00B060                     l2792:
 21883                           
 21884                           ; BSR set to: 1
 21885                           ;encoder.c: 235: if(os.encoder1Count+os.encoder2Count>0)
 21886                           
 21887                           ; BSR set to: 1
 21888  00B060  C16A  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21889  00B064  0100               	movlb	0	; () banked
 21890  00B066  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21891  00B068  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21892  00B06A  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21893  00B06C  C168  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21894  00B070  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21895  00B072  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21896  00B074  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21897  00B076  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21898  00B078  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21899  00B07A  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21900  00B07C  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21901  00B07E  BFAB               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21902  00B080  D008               	goto	l2795
 21903  00B082  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21904  00B084  E103               	bnz	u17920
 21905  00B086  05AA               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21906  00B088  A0D8               	btfss	status,0,c
 21907  00B08A  D003               	goto	l2795
 21908  00B08C                     u17920:
 21909                           
 21910                           ; BSR set to: 0
 21911                           ;encoder.c: 236: os.displayState = DISPLAY_STATE_MAIN_ARC;
 21912  00B08C  0E03               	movlw	3
 21913  00B08E  0101               	movlb	1	; () banked
 21914  00B090  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 21915  00B092                     l2795:
 21916                           
 21917                           ;encoder.c: 237: if(os.encoder1Count+os.encoder2Count<0)
 21918                           
 21919                           ; BSR set to: 1
 21920  00B092  C16A  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21921  00B096  0100               	movlb	0	; () banked
 21922  00B098  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21923  00B09A  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21924  00B09C  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21925  00B09E  C168  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21926  00B0A2  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21927  00B0A4  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21928  00B0A6  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21929  00B0A8  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21930  00B0AA  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21931  00B0AC  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21932  00B0AE  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21933  00B0B0  AFAB               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21934  00B0B2  D397               	goto	l2816
 21935                           
 21936                           ; BSR set to: 0
 21937                           ;encoder.c: 238: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 21938  00B0B4  0E01               	movlw	1
 21939  00B0B6  D35E               	goto	L22
 21940  00B0B8                     
 21941                           ; BSR set to: 1
 21942                           ;encoder.c: 241: if(os.button1==1 || os.button2==1)
 21943                           
 21944                           ; BSR set to: 1
 21945  00B0B8  0569               	decf	(_os+4)& (0+255),w,b	;volatile
 21946  00B0BA  B4D8               	btfsc	status,2,c
 21947  00B0BC  D003               	goto	u17950
 21948                           
 21949                           ; BSR set to: 1
 21950  00B0BE  056B               	decf	(_os+6)& (0+255),w,b	;volatile
 21951  00B0C0  A4D8               	btfss	status,2,c
 21952  00B0C2  D002               	goto	l2798
 21953  00B0C4                     u17950:
 21954                           
 21955                           ; BSR set to: 1
 21956                           ;encoder.c: 242: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 21957                           
 21958                           ; BSR set to: 1
 21959  00B0C4  0E51               	movlw	81
 21960  00B0C6  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 21961  00B0C8                     l2798:
 21962                           
 21963                           ; BSR set to: 1
 21964                           ;encoder.c: 243: if(os.encoder1Count+os.encoder2Count>0)
 21965                           
 21966                           ; BSR set to: 1
 21967  00B0C8  C16A  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21968  00B0CC  0100               	movlb	0	; () banked
 21969  00B0CE  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21970  00B0D0  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21971  00B0D2  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21972  00B0D4  C168  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21973  00B0D8  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21974  00B0DA  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21975  00B0DC  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21976  00B0DE  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21977  00B0E0  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21978  00B0E2  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21979  00B0E4  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21980  00B0E6  BFAB               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21981  00B0E8  D008               	goto	l2801
 21982  00B0EA  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21983  00B0EC  E103               	bnz	u17960
 21984  00B0EE  05AA               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21985  00B0F0  A0D8               	btfss	status,0,c
 21986  00B0F2  D003               	goto	l2801
 21987  00B0F4                     u17960:
 21988                           
 21989                           ; BSR set to: 0
 21990                           ;encoder.c: 244: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 21991  00B0F4  0E04               	movlw	4
 21992  00B0F6  0101               	movlb	1	; () banked
 21993  00B0F8  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 21994  00B0FA                     l2801:
 21995                           
 21996                           ;encoder.c: 245: if(os.encoder1Count+os.encoder2Count<0)
 21997                           
 21998                           ; BSR set to: 1
 21999  00B0FA  C16A  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 22000  00B0FE  0100               	movlb	0	; () banked
 22001  00B100  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22002  00B102  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 22003  00B104  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 22004  00B106  C168  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22005  00B10A  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22006  00B10C  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22007  00B10E  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22008  00B110  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 22009  00B112  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22010  00B114  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22011  00B116  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22012  00B118  AFAB               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 22013  00B11A  D363               	goto	l2816
 22014                           
 22015                           ; BSR set to: 0
 22016                           ;encoder.c: 246: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 22017  00B11C  0E02               	movlw	2
 22018  00B11E  D32A               	goto	L22
 22019  00B120                     
 22020                           ; BSR set to: 1
 22021                           ;encoder.c: 249: if(os.button1==1 || os.button2==1)
 22022                           
 22023                           ; BSR set to: 1
 22024  00B120  0569               	decf	(_os+4)& (0+255),w,b	;volatile
 22025  00B122  B4D8               	btfsc	status,2,c
 22026  00B124  D003               	goto	u17990
 22027                           
 22028                           ; BSR set to: 1
 22029  00B126  056B               	decf	(_os+6)& (0+255),w,b	;volatile
 22030  00B128  A4D8               	btfss	status,2,c
 22031  00B12A  D002               	goto	l2804
 22032  00B12C                     u17990:
 22033                           
 22034                           ; BSR set to: 1
 22035                           ;encoder.c: 250: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 22036                           
 22037                           ; BSR set to: 1
 22038  00B12C  0E82               	movlw	130
 22039  00B12E  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 22040  00B130                     l2804:
 22041                           
 22042                           ; BSR set to: 1
 22043                           ;encoder.c: 251: if(os.encoder1Count+os.encoder2Count>0)
 22044                           
 22045                           ; BSR set to: 1
 22046  00B130  C16A  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 22047  00B134  0100               	movlb	0	; () banked
 22048  00B136  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22049  00B138  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 22050  00B13A  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 22051  00B13C  C168  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22052  00B140  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22053  00B142  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22054  00B144  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22055  00B146  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 22056  00B148  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22057  00B14A  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22058  00B14C  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22059  00B14E  BFAB               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 22060  00B150  D008               	goto	l2807
 22061  00B152  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 22062  00B154  E103               	bnz	u18000
 22063  00B156  05AA               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 22064  00B158  A0D8               	btfss	status,0,c
 22065  00B15A  D003               	goto	l2807
 22066  00B15C                     u18000:
 22067                           
 22068                           ; BSR set to: 0
 22069                           ;encoder.c: 252: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 22070  00B15C  0E05               	movlw	5
 22071  00B15E  0101               	movlb	1	; () banked
 22072  00B160  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 22073  00B162                     l2807:
 22074                           
 22075                           ;encoder.c: 253: if(os.encoder1Count+os.encoder2Count<0)
 22076                           
 22077                           ; BSR set to: 1
 22078  00B162  C16A  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 22079  00B166  0100               	movlb	0	; () banked
 22080  00B168  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22081  00B16A  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 22082  00B16C  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 22083  00B16E  C168  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22084  00B172  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22085  00B174  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22086  00B176  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22087  00B178  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 22088  00B17A  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22089  00B17C  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22090  00B17E  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22091  00B180  AFAB               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 22092  00B182  D32F               	goto	l2816
 22093                           
 22094                           ; BSR set to: 0
 22095                           ;encoder.c: 254: os.displayState = DISPLAY_STATE_MAIN_ARC;
 22096  00B184  0E03               	movlw	3
 22097  00B186  D2F6               	goto	L22
 22098  00B188                     
 22099                           ; BSR set to: 1
 22100                           ;encoder.c: 257: if(os.button1==1 || os.button2==1)
 22101                           
 22102                           ; BSR set to: 1
 22103  00B188  0569               	decf	(_os+4)& (0+255),w,b	;volatile
 22104  00B18A  B4D8               	btfsc	status,2,c
 22105  00B18C  D003               	goto	u18030
 22106                           
 22107                           ; BSR set to: 1
 22108  00B18E  056B               	decf	(_os+6)& (0+255),w,b	;volatile
 22109  00B190  A4D8               	btfss	status,2,c
 22110  00B192  D002               	goto	l2810
 22111  00B194                     u18030:
 22112                           
 22113                           ; BSR set to: 1
 22114                           ;encoder.c: 258: os.displayState = DISPLAY_STATE_ZERO_NORMAL;
 22115                           
 22116                           ; BSR set to: 1
 22117  00B194  0E71               	movlw	113
 22118  00B196  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 22119  00B198                     l2810:
 22120                           
 22121                           ; BSR set to: 1
 22122                           ;encoder.c: 259: if(os.encoder1Count+os.encoder2Count>0)
 22123                           
 22124                           ; BSR set to: 1
 22125  00B198  C16A  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 22126  00B19C  0100               	movlb	0	; () banked
 22127  00B19E  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22128  00B1A0  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 22129  00B1A2  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 22130  00B1A4  C168  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22131  00B1A8  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22132  00B1AA  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22133  00B1AC  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22134  00B1AE  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 22135  00B1B0  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22136  00B1B2  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22137  00B1B4  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22138  00B1B6  BFAB               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 22139  00B1B8  D008               	goto	l2813
 22140  00B1BA  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 22141  00B1BC  E103               	bnz	u18040
 22142  00B1BE  05AA               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 22143  00B1C0  A0D8               	btfss	status,0,c
 22144  00B1C2  D003               	goto	l2813
 22145  00B1C4                     u18040:
 22146                           
 22147                           ; BSR set to: 0
 22148                           ;encoder.c: 260: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 22149  00B1C4  0E01               	movlw	1
 22150  00B1C6  0101               	movlb	1	; () banked
 22151  00B1C8  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 22152  00B1CA                     l2813:
 22153                           
 22154                           ;encoder.c: 261: if(os.encoder1Count+os.encoder2Count<0)
 22155                           
 22156                           ; BSR set to: 1
 22157  00B1CA  C16A  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 22158  00B1CE  0100               	movlb	0	; () banked
 22159  00B1D0  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22160  00B1D2  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 22161  00B1D4  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 22162  00B1D6  C168  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22163  00B1DA  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22164  00B1DC  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22165  00B1DE  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22166  00B1E0  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 22167  00B1E2  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22168  00B1E4  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22169  00B1E6  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22170  00B1E8  AFAB               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 22171  00B1EA  D2FB               	goto	l2816
 22172                           
 22173                           ; BSR set to: 0
 22174                           ;encoder.c: 262: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 22175  00B1EC  0E04               	movlw	4
 22176  00B1EE  D2C2               	goto	L22
 22177  00B1F0                     
 22178                           ; BSR set to: 1
 22179  00B1F0  0101               	movlb	1	; () banked
 22180  00B1F2  5174               	movf	(_os+15)& (0+255),w,b	;volatile
 22181                           
 22182                           ; Switch size 1, requested type "space"
 22183                           ; Number of cases is 6, Range of values is 1 to 240
 22184                           ; switch strategies available:
 22185                           ; Name         Instructions Cycles
 22186                           ; simple_byte           19    10 (average)
 22187                           ;	Chosen strategy is simple_byte
 22188  00B1F4  0A01               	xorlw	1	; case 1
 22189  00B1F6  B4D8               	btfsc	status,2,c
 22190  00B1F8  D6F7               	goto	l2784
 22191  00B1FA  0A03               	xorlw	3	; case 2
 22192  00B1FC  B4D8               	btfsc	status,2,c
 22193  00B1FE  D728               	goto	l2791
 22194  00B200  0A01               	xorlw	1	; case 3
 22195  00B202  B4D8               	btfsc	status,2,c
 22196  00B204  D759               	goto	l2797
 22197  00B206  0A07               	xorlw	7	; case 4
 22198  00B208  B4D8               	btfsc	status,2,c
 22199  00B20A  D78A               	goto	l2803
 22200  00B20C  0A01               	xorlw	1	; case 5
 22201  00B20E  B4D8               	btfsc	status,2,c
 22202  00B210  D7BB               	goto	l2809
 22203  00B212  0AF5               	xorlw	245	; case 240
 22204                           
 22205                           ; BSR set to: 1
 22206                           ;encoder.c: 268: break;
 22207  00B214  D2E6               	goto	l2816
 22208  00B216                     
 22209                           ; BSR set to: 1
 22210                           ;encoder.c: 274: if(os.button1==1)
 22211                           
 22212                           ; BSR set to: 1
 22213  00B216  0569               	decf	(_os+4)& (0+255),w,b	;volatile
 22214  00B218  A4D8               	btfss	status,2,c
 22215  00B21A  D00E               	goto	l2820
 22216                           
 22217                           ; BSR set to: 1
 22218                           ;encoder.c: 275: {;encoder.c: 276: os.current_position_in_steps = 0;
 22219  00B21C  0E00               	movlw	0
 22220  00B21E  6F6C               	movwf	(_os+7)& (0+255),b	;volatile
 22221  00B220  0E00               	movlw	0
 22222  00B222  6F6D               	movwf	(_os+8)& (0+255),b	;volatile
 22223  00B224  0E00               	movlw	0
 22224  00B226  6F6E               	movwf	(_os+9)& (0+255),b	;volatile
 22225  00B228  0E00               	movlw	0
 22226  00B22A  6F6F               	movwf	(_os+10)& (0+255),b	;volatile
 22227                           
 22228                           ;encoder.c: 277: os.divide_position = 0;
 22229  00B22C  0E00               	movlw	0
 22230  00B22E  6F7D               	movwf	(_os+24)& (0+255),b	;volatile
 22231  00B230  0E00               	movlw	0
 22232  00B232  6F7C               	movwf	(_os+23)& (0+255),b	;volatile
 22233                           
 22234                           ;encoder.c: 278: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 22235  00B234  0E21               	movlw	33
 22236  00B236  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 22237  00B238                     l2820:
 22238                           
 22239                           ; BSR set to: 1
 22240                           ;encoder.c: 279: };encoder.c: 280: if(os.encoder1Count>0)
 22241                           
 22242                           ; BSR set to: 1
 22243  00B238  5168               	movf	(_os+3)& (0+255),w,b	;volatile
 22244  00B23A  0A80               	xorlw	128
 22245  00B23C  0F7F               	addlw	-129
 22246  00B23E  A0D8               	btfss	status,0,c
 22247  00B240  D002               	goto	l2821
 22248                           
 22249                           ; BSR set to: 1
 22250                           ;encoder.c: 281: os.displayState = DISPLAY_STATE_SETUP1_CANCEL;
 22251  00B242  0E12               	movlw	18
 22252  00B244  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 22253  00B246                     l2821:
 22254                           
 22255                           ; BSR set to: 1
 22256                           ;encoder.c: 282: if(os.encoder1Count<0)
 22257                           
 22258                           ; BSR set to: 1
 22259  00B246  AF68               	btfss	(_os+3)& (0+255),7,b	;volatile
 22260  00B248  D01B               	goto	l2823
 22261                           
 22262                           ; BSR set to: 1
 22263                           ;encoder.c: 283: os.displayState = DISPLAY_STATE_SETUP1_CANCEL;
 22264  00B24A  0E12               	movlw	18
 22265  00B24C  D00F               	goto	L10
 22266  00B24E                     
 22267                           ; BSR set to: 1
 22268                           ;encoder.c: 286: if(os.button1==1)
 22269                           
 22270                           ; BSR set to: 1
 22271  00B24E  0569               	decf	(_os+4)& (0+255),w,b	;volatile
 22272  00B250  A4D8               	btfss	status,2,c
 22273  00B252  D002               	goto	l2825
 22274                           
 22275                           ; BSR set to: 1
 22276                           ;encoder.c: 287: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 22277  00B254  0E01               	movlw	1
 22278  00B256  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 22279  00B258                     l2825:
 22280                           
 22281                           ; BSR set to: 1
 22282                           ;encoder.c: 288: if(os.encoder1Count>0)
 22283                           
 22284                           ; BSR set to: 1
 22285  00B258  5168               	movf	(_os+3)& (0+255),w,b	;volatile
 22286  00B25A  0A80               	xorlw	128
 22287  00B25C  0F7F               	addlw	-129
 22288  00B25E  A0D8               	btfss	status,0,c
 22289  00B260  D002               	goto	l2826
 22290                           
 22291                           ; BSR set to: 1
 22292                           ;encoder.c: 289: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 22293  00B262  0E11               	movlw	17
 22294  00B264  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 22295  00B266                     l2826:
 22296                           
 22297                           ; BSR set to: 1
 22298                           ;encoder.c: 290: if(os.encoder1Count<0)
 22299                           
 22300                           ; BSR set to: 1
 22301  00B266  AF68               	btfss	(_os+3)& (0+255),7,b	;volatile
 22302  00B268  D00B               	goto	l2823
 22303                           
 22304                           ; BSR set to: 1
 22305                           ;encoder.c: 291: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 22306  00B26A  0E11               	movlw	17
 22307  00B26C                     L10:
 22308  00B26C  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 22309                           
 22310                           ; BSR set to: 1
 22311                           ;encoder.c: 293: }
 22312                           
 22313                           ; BSR set to: 1
 22314                           ;encoder.c: 292: break;
 22315  00B26E  D008               	goto	l2823
 22316  00B270                     
 22317                           ; BSR set to: 1
 22318  00B270  0101               	movlb	1	; () banked
 22319  00B272  5174               	movf	(_os+15)& (0+255),w,b	;volatile
 22320                           
 22321                           ; Switch size 1, requested type "space"
 22322                           ; Number of cases is 2, Range of values is 17 to 18
 22323                           ; switch strategies available:
 22324                           ; Name         Instructions Cycles
 22325                           ; simple_byte            7     4 (average)
 22326                           ;	Chosen strategy is simple_byte
 22327  00B274  0A11               	xorlw	17	; case 17
 22328  00B276  B4D8               	btfsc	status,2,c
 22329  00B278  D7CE               	goto	l2819
 22330  00B27A  0A03               	xorlw	3	; case 18
 22331  00B27C  B4D8               	btfsc	status,2,c
 22332  00B27E  D7E7               	goto	l2824
 22333  00B280                     l2823:
 22334                           
 22335                           ; BSR set to: 1
 22336                           ;encoder.c: 294: if(os.button2==1)
 22337                           
 22338                           ; BSR set to: 1
 22339  00B280  056B               	decf	(_os+6)& (0+255),w,b	;volatile
 22340  00B282  A4D8               	btfss	status,2,c
 22341  00B284  D00A               	goto	l2828
 22342                           
 22343                           ; BSR set to: 1
 22344                           ;encoder.c: 295: {;encoder.c: 296: os.setup_step_size = _encoder_next_setup_stepsize(os.
      +                          setup_step_size);
 22345  00B286  C176  F060         	movff	_os+17,__encoder_next_setup_stepsize@old_stepsize	;volatile
 22346  00B28A  C177  F061         	movff	_os+18,__encoder_next_setup_stepsize@old_stepsize+1	;volatile
 22347  00B28E  EC03  F0A3         	call	__encoder_next_setup_stepsize	;wreg free
 22348  00B292  C060  F176         	movff	?__encoder_next_setup_stepsize,_os+17	;volatile
 22349  00B296  C061  F177         	movff	?__encoder_next_setup_stepsize+1,_os+18	;volatile
 22350  00B29A                     l2828:
 22351                           
 22352                           ;encoder.c: 297: };encoder.c: 298: if(os.encoder2Count>0)
 22353  00B29A  0101               	movlb	1	; () banked
 22354  00B29C  516A               	movf	(_os+5)& (0+255),w,b	;volatile
 22355  00B29E  0A80               	xorlw	128
 22356  00B2A0  0F7F               	addlw	-129
 22357  00B2A2  A0D8               	btfss	status,0,c
 22358  00B2A4  D010               	goto	l2830
 22359                           
 22360                           ; BSR set to: 1
 22361                           ;encoder.c: 299: {;encoder.c: 301: if(!os.busy)
 22362  00B2A6  5175               	movf	(_os+16)& (0+255),w,b	;volatile
 22363  00B2A8  A4D8               	btfss	status,2,c
 22364  00B2AA  D00D               	goto	l2830
 22365                           
 22366                           ; BSR set to: 1
 22367                           ;encoder.c: 302: motor_move_degrees_int(MOTOR_DIRECTION_CW, os.setup_step_size, 0xFFFF, 
      +                          MOTOR_OVERSHOOT_NO_OVERSHOOT);
 22368  00B2AC  C176  F099         	movff	_os+17,motor_move_degrees_int@distance	;volatile
 22369  00B2B0  C177  F09A         	movff	_os+18,motor_move_degrees_int@distance+1	;volatile
 22370  00B2B4  0EFF               	movlw	255
 22371  00B2B6  0100               	movlb	0	; () banked
 22372  00B2B8  6F9C               	movwf	(motor_move_degrees_int@speed+1)& (0+255),b
 22373  00B2BA  699B               	setf	motor_move_degrees_int@speed& (0+255),b
 22374  00B2BC  0E01               	movlw	1
 22375  00B2BE  6F9D               	movwf	motor_move_degrees_int@overshoot& (0+255),b
 22376  00B2C0  0E01               	movlw	1
 22377  00B2C2  EC5A  F0AA         	call	_motor_move_degrees_int
 22378  00B2C6                     l2830:
 22379                           
 22380                           ;encoder.c: 303: };encoder.c: 304: if(os.encoder2Count<0)
 22381  00B2C6  0101               	movlb	1	; () banked
 22382  00B2C8  AF6A               	btfss	(_os+5)& (0+255),7,b	;volatile
 22383  00B2CA  D28B               	goto	l2816
 22384                           
 22385                           ; BSR set to: 1
 22386                           ;encoder.c: 305: {;encoder.c: 307: if(!os.busy)
 22387  00B2CC  5175               	movf	(_os+16)& (0+255),w,b	;volatile
 22388  00B2CE  A4D8               	btfss	status,2,c
 22389  00B2D0  D288               	goto	l2816
 22390                           
 22391                           ; BSR set to: 1
 22392                           ;encoder.c: 308: motor_move_degrees_int(MOTOR_DIRECTION_CCW, os.setup_step_size, 0xFFFF,
      +                           MOTOR_OVERSHOOT_NO_OVERSHOOT);
 22393  00B2D2  C176  F099         	movff	_os+17,motor_move_degrees_int@distance	;volatile
 22394  00B2D6  C177  F09A         	movff	_os+18,motor_move_degrees_int@distance+1	;volatile
 22395  00B2DA  0EFF               	movlw	255
 22396  00B2DC  0100               	movlb	0	; () banked
 22397  00B2DE  6F9C               	movwf	(motor_move_degrees_int@speed+1)& (0+255),b
 22398  00B2E0  699B               	setf	motor_move_degrees_int@speed& (0+255),b
 22399  00B2E2  0E01               	movlw	1
 22400  00B2E4  6F9D               	movwf	motor_move_degrees_int@overshoot& (0+255),b
 22401  00B2E6  0EFF               	movlw	255
 22402  00B2E8  EC5A  F0AA         	call	_motor_move_degrees_int
 22403                           
 22404                           ;encoder.c: 309: };encoder.c: 310: break;
 22405  00B2EC  D27A               	goto	l2816
 22406  00B2EE                     
 22407                           ;encoder.c: 316: if(os.button1==1 || os.button2==1)
 22408  00B2EE  0101               	movlb	1	; () banked
 22409  00B2F0  0569               	decf	(_os+4)& (0+255),w,b	;volatile
 22410  00B2F2  B4D8               	btfsc	status,2,c
 22411  00B2F4  D003               	goto	u18180
 22412                           
 22413                           ; BSR set to: 1
 22414  00B2F6  056B               	decf	(_os+6)& (0+255),w,b	;volatile
 22415  00B2F8  A4D8               	btfss	status,2,c
 22416  00B2FA  D003               	goto	l2836
 22417  00B2FC                     u18180:
 22418                           
 22419                           ; BSR set to: 1
 22420                           ;encoder.c: 317: {;encoder.c: 318: motor_set_zero(MOTOR_DIRECTION_CCW);
 22421                           
 22422                           ; BSR set to: 1
 22423  00B2FC  0EFF               	movlw	255
 22424  00B2FE  ECD3  F0AB         	call	_motor_set_zero
 22425  00B302                     l2836:
 22426                           
 22427                           ;encoder.c: 319: };encoder.c: 320: if(os.encoder1Count+os.encoder2Count>0)
 22428  00B302  C16A  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 22429  00B306  0100               	movlb	0	; () banked
 22430  00B308  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22431  00B30A  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 22432  00B30C  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 22433  00B30E  C168  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22434  00B312  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22435  00B314  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22436  00B316  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22437  00B318  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 22438  00B31A  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22439  00B31C  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22440  00B31E  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22441  00B320  BFAB               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 22442  00B322  D008               	goto	l2839
 22443  00B324  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 22444  00B326  E103               	bnz	u18190
 22445  00B328  05AA               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 22446  00B32A  A0D8               	btfss	status,0,c
 22447  00B32C  D003               	goto	l2839
 22448  00B32E                     u18190:
 22449                           
 22450                           ; BSR set to: 0
 22451                           ;encoder.c: 321: os.displayState = DISPLAY_STATE_SETUP2_CW;
 22452  00B32E  0E22               	movlw	34
 22453  00B330  0101               	movlb	1	; () banked
 22454  00B332  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 22455  00B334                     l2839:
 22456                           
 22457                           ;encoder.c: 322: if(os.encoder1Count+os.encoder2Count<0)
 22458                           
 22459                           ; BSR set to: 1
 22460  00B334  C16A  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 22461  00B338  0100               	movlb	0	; () banked
 22462  00B33A  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22463  00B33C  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 22464  00B33E  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 22465  00B340  C168  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22466  00B344  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22467  00B346  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22468  00B348  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22469  00B34A  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 22470  00B34C  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22471  00B34E  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22472  00B350  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22473  00B352  AFAB               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 22474  00B354  D246               	goto	l2816
 22475                           
 22476                           ; BSR set to: 0
 22477                           ;encoder.c: 323: os.displayState = DISPLAY_STATE_SETUP2_CW;
 22478  00B356  0E22               	movlw	34
 22479  00B358  D20D               	goto	L22
 22480  00B35A                     
 22481                           ; BSR set to: 1
 22482                           ;encoder.c: 326: if(os.button1==1 || os.button2==1)
 22483                           
 22484                           ; BSR set to: 1
 22485  00B35A  0569               	decf	(_os+4)& (0+255),w,b	;volatile
 22486  00B35C  B4D8               	btfsc	status,2,c
 22487  00B35E  D003               	goto	u18220
 22488                           
 22489                           ; BSR set to: 1
 22490  00B360  056B               	decf	(_os+6)& (0+255),w,b	;volatile
 22491  00B362  A4D8               	btfss	status,2,c
 22492  00B364  D003               	goto	l2843
 22493  00B366                     u18220:
 22494                           
 22495                           ; BSR set to: 1
 22496                           ;encoder.c: 327: {;encoder.c: 328: motor_set_zero(MOTOR_DIRECTION_CW);
 22497                           
 22498                           ; BSR set to: 1
 22499  00B366  0E01               	movlw	1
 22500  00B368  ECD3  F0AB         	call	_motor_set_zero
 22501  00B36C                     l2843:
 22502                           
 22503                           ;encoder.c: 329: };encoder.c: 330: if(os.encoder1Count+os.encoder2Count>0)
 22504  00B36C  C16A  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 22505  00B370  0100               	movlb	0	; () banked
 22506  00B372  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22507  00B374  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 22508  00B376  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 22509  00B378  C168  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22510  00B37C  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22511  00B37E  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22512  00B380  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22513  00B382  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 22514  00B384  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22515  00B386  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22516  00B388  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22517  00B38A  BFAB               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 22518  00B38C  D008               	goto	l2846
 22519  00B38E  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 22520  00B390  E103               	bnz	u18230
 22521  00B392  05AA               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 22522  00B394  A0D8               	btfss	status,0,c
 22523  00B396  D003               	goto	l2846
 22524  00B398                     u18230:
 22525                           
 22526                           ; BSR set to: 0
 22527                           ;encoder.c: 331: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 22528  00B398  0E21               	movlw	33
 22529  00B39A  0101               	movlb	1	; () banked
 22530  00B39C  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 22531  00B39E                     l2846:
 22532                           
 22533                           ;encoder.c: 332: if(os.encoder1Count+os.encoder2Count<0)
 22534                           
 22535                           ; BSR set to: 1
 22536  00B39E  C16A  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 22537  00B3A2  0100               	movlb	0	; () banked
 22538  00B3A4  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22539  00B3A6  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 22540  00B3A8  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 22541  00B3AA  C168  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22542  00B3AE  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22543  00B3B0  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22544  00B3B2  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22545  00B3B4  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 22546  00B3B6  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22547  00B3B8  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22548  00B3BA  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22549  00B3BC  AFAB               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 22550  00B3BE  D211               	goto	l2816
 22551                           
 22552                           ; BSR set to: 0
 22553                           ;encoder.c: 333: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 22554  00B3C0  0E21               	movlw	33
 22555  00B3C2  D1D8               	goto	L22
 22556  00B3C4                     
 22557                           ; BSR set to: 1
 22558  00B3C4  0101               	movlb	1	; () banked
 22559  00B3C6  5174               	movf	(_os+15)& (0+255),w,b	;volatile
 22560                           
 22561                           ; Switch size 1, requested type "space"
 22562                           ; Number of cases is 2, Range of values is 33 to 34
 22563                           ; switch strategies available:
 22564                           ; Name         Instructions Cycles
 22565                           ; simple_byte            7     4 (average)
 22566                           ;	Chosen strategy is simple_byte
 22567  00B3C8  0A21               	xorlw	33	; case 33
 22568  00B3CA  B4D8               	btfsc	status,2,c
 22569  00B3CC  D790               	goto	l2835
 22570  00B3CE  0A03               	xorlw	3	; case 34
 22571  00B3D0  B4D8               	btfsc	status,2,c
 22572  00B3D2  D7C3               	goto	l2842
 22573                           
 22574                           ; BSR set to: 1
 22575                           ;encoder.c: 336: break;
 22576  00B3D4  D206               	goto	l2816
 22577  00B3D6                     
 22578                           ; BSR set to: 1
 22579                           ;encoder.c: 342: if(os.button1==1)
 22580                           
 22581                           ; BSR set to: 1
 22582  00B3D6  0569               	decf	(_os+4)& (0+255),w,b	;volatile
 22583  00B3D8  A4D8               	btfss	status,2,c
 22584  00B3DA  D005               	goto	l2851
 22585                           
 22586                           ; BSR set to: 1
 22587                           ;encoder.c: 343: {;encoder.c: 345: motor_divide_jump_to_nearest();
 22588  00B3DC  ECE6  F07C         	call	_motor_divide_jump_to_nearest	;wreg free
 22589                           
 22590                           ;encoder.c: 346: os.displayState = DISPLAY_STATE_DIVIDE2_NORMAL;
 22591  00B3E0  0E41               	movlw	65
 22592  00B3E2  0101               	movlb	1	; () banked
 22593  00B3E4  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 22594  00B3E6                     l2851:
 22595                           
 22596                           ; BSR set to: 1
 22597                           ;encoder.c: 347: };encoder.c: 348: if(os.encoder1Count>0)
 22598                           
 22599                           ; BSR set to: 1
 22600  00B3E6  5168               	movf	(_os+3)& (0+255),w,b	;volatile
 22601  00B3E8  0A80               	xorlw	128
 22602  00B3EA  0F7F               	addlw	-129
 22603  00B3EC  A0D8               	btfss	status,0,c
 22604  00B3EE  D002               	goto	l2852
 22605                           
 22606                           ; BSR set to: 1
 22607                           ;encoder.c: 349: os.displayState = DISPLAY_STATE_DIVIDE1_CANCEL;
 22608  00B3F0  0E32               	movlw	50
 22609  00B3F2  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 22610  00B3F4                     l2852:
 22611                           
 22612                           ; BSR set to: 1
 22613                           ;encoder.c: 350: if(os.encoder1Count<0)
 22614                           
 22615                           ; BSR set to: 1
 22616  00B3F4  AF68               	btfss	(_os+3)& (0+255),7,b	;volatile
 22617  00B3F6  D01B               	goto	l2854
 22618                           
 22619                           ; BSR set to: 1
 22620                           ;encoder.c: 351: os.displayState = DISPLAY_STATE_DIVIDE1_CANCEL;
 22621  00B3F8  0E32               	movlw	50
 22622  00B3FA  D00F               	goto	L13
 22623  00B3FC                     
 22624                           ; BSR set to: 1
 22625                           ;encoder.c: 354: if(os.button1==1)
 22626                           
 22627                           ; BSR set to: 1
 22628  00B3FC  0569               	decf	(_os+4)& (0+255),w,b	;volatile
 22629  00B3FE  A4D8               	btfss	status,2,c
 22630  00B400  D002               	goto	l2856
 22631                           
 22632                           ; BSR set to: 1
 22633                           ;encoder.c: 355: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 22634  00B402  0E02               	movlw	2
 22635  00B404  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 22636  00B406                     l2856:
 22637                           
 22638                           ; BSR set to: 1
 22639                           ;encoder.c: 356: if(os.encoder1Count>0)
 22640                           
 22641                           ; BSR set to: 1
 22642  00B406  5168               	movf	(_os+3)& (0+255),w,b	;volatile
 22643  00B408  0A80               	xorlw	128
 22644  00B40A  0F7F               	addlw	-129
 22645  00B40C  A0D8               	btfss	status,0,c
 22646  00B40E  D002               	goto	l2857
 22647                           
 22648                           ; BSR set to: 1
 22649                           ;encoder.c: 357: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 22650  00B410  0E31               	movlw	49
 22651  00B412  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 22652  00B414                     l2857:
 22653                           
 22654                           ; BSR set to: 1
 22655                           ;encoder.c: 358: if(os.encoder1Count<0)
 22656                           
 22657                           ; BSR set to: 1
 22658  00B414  AF68               	btfss	(_os+3)& (0+255),7,b	;volatile
 22659  00B416  D00B               	goto	l2854
 22660                           
 22661                           ; BSR set to: 1
 22662                           ;encoder.c: 359: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 22663  00B418  0E31               	movlw	49
 22664  00B41A                     L13:
 22665  00B41A  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 22666                           
 22667                           ; BSR set to: 1
 22668                           ;encoder.c: 361: }
 22669                           
 22670                           ; BSR set to: 1
 22671                           ;encoder.c: 360: break;
 22672  00B41C  D008               	goto	l2854
 22673  00B41E                     
 22674                           ; BSR set to: 1
 22675  00B41E  0101               	movlb	1	; () banked
 22676  00B420  5174               	movf	(_os+15)& (0+255),w,b	;volatile
 22677                           
 22678                           ; Switch size 1, requested type "space"
 22679                           ; Number of cases is 2, Range of values is 49 to 50
 22680                           ; switch strategies available:
 22681                           ; Name         Instructions Cycles
 22682                           ; simple_byte            7     4 (average)
 22683                           ;	Chosen strategy is simple_byte
 22684  00B422  0A31               	xorlw	49	; case 49
 22685  00B424  B4D8               	btfsc	status,2,c
 22686  00B426  D7D7               	goto	l2850
 22687  00B428  0A03               	xorlw	3	; case 50
 22688  00B42A  B4D8               	btfsc	status,2,c
 22689  00B42C  D7E7               	goto	l2855
 22690  00B42E                     l2854:
 22691                           
 22692                           ; BSR set to: 1
 22693                           ;encoder.c: 362: if(os.button2==1)
 22694                           
 22695                           ; BSR set to: 1
 22696  00B42E  056B               	decf	(_os+6)& (0+255),w,b	;volatile
 22697  00B430  A4D8               	btfss	status,2,c
 22698  00B432  D005               	goto	l2859
 22699                           
 22700                           ; BSR set to: 1
 22701                           ;encoder.c: 363: {;encoder.c: 364: os.divide_step_size = _encoder_next_divide_step_size(
      +                          os.divide_step_size);
 22702  00B434  517B               	movf	(_os+22)& (0+255),w,b	;volatile
 22703  00B436  EC99  F0AD         	call	__encoder_next_divide_step_size
 22704  00B43A  0101               	movlb	1	; () banked
 22705  00B43C  6F7B               	movwf	(_os+22)& (0+255),b	;volatile
 22706  00B43E                     l2859:
 22707                           
 22708                           ; BSR set to: 1
 22709                           ;encoder.c: 365: };encoder.c: 366: if(os.encoder2Count>0)
 22710                           
 22711                           ; BSR set to: 1
 22712  00B43E  516A               	movf	(_os+5)& (0+255),w,b	;volatile
 22713  00B440  0A80               	xorlw	128
 22714  00B442  0F7F               	addlw	-129
 22715  00B444  A0D8               	btfss	status,0,c
 22716  00B446  D004               	goto	l2860
 22717                           
 22718                           ; BSR set to: 1
 22719                           ;encoder.c: 367: {;encoder.c: 368: os.division += os.divide_step_size;
 22720  00B448  517B               	movf	(_os+22)& (0+255),w,b	;volatile
 22721  00B44A  2779               	addwf	(_os+20)& (0+255),f,b	;volatile
 22722  00B44C  0E00               	movlw	0
 22723  00B44E  237A               	addwfc	(_os+21)& (0+255),f,b	;volatile
 22724  00B450                     l2860:
 22725                           
 22726                           ; BSR set to: 1
 22727                           ;encoder.c: 369: };encoder.c: 370: if(os.encoder2Count<0)
 22728  00B450  AF6A               	btfss	(_os+5)& (0+255),7,b	;volatile
 22729  00B452  D1C7               	goto	l2816
 22730                           
 22731                           ; BSR set to: 1
 22732                           ;encoder.c: 371: {;encoder.c: 372: if(os.division>os.divide_step_size)
 22733  00B454  517B               	movf	(_os+22)& (0+255),w,b	;volatile
 22734  00B456  0100               	movlb	0	; () banked
 22735  00B458  6FA8               	movwf	??_encoder_statemachine& (0+255),b
 22736  00B45A  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22737  00B45C  0101               	movlb	1	; () banked
 22738  00B45E  5179               	movf	(_os+20)& (0+255),w,b	;volatile
 22739  00B460  0100               	movlb	0	; () banked
 22740  00B462  5DA8               	subwf	??_encoder_statemachine& (0+255),w,b
 22741  00B464  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22742  00B466  0A80               	xorlw	128
 22743  00B468  6FAA               	movwf	(??_encoder_statemachine+2)& (0+255),b
 22744  00B46A  0101               	movlb	1	; () banked
 22745  00B46C  517A               	movf	(_os+21)& (0+255),w,b	;volatile
 22746  00B46E  0A80               	xorlw	128
 22747  00B470  0100               	movlb	0	; () banked
 22748  00B472  59AA               	subwfb	(??_encoder_statemachine+2)& (0+255),w,b
 22749  00B474  B0D8               	btfsc	status,0,c
 22750  00B476  D006               	goto	l2862
 22751                           
 22752                           ; BSR set to: 0
 22753                           ;encoder.c: 373: {;encoder.c: 374: os.division -= os.divide_step_size;
 22754  00B478  0101               	movlb	1	; () banked
 22755  00B47A  517B               	movf	(_os+22)& (0+255),w,b	;volatile
 22756  00B47C  5F79               	subwf	(_os+20)& (0+255),f,b	;volatile
 22757  00B47E  0E00               	movlw	0
 22758  00B480  5B7A               	subwfb	(_os+21)& (0+255),f,b	;volatile
 22759                           
 22760                           ;encoder.c: 375: }
 22761  00B482  D1AF               	goto	l2816
 22762  00B484                     l2862:
 22763                           
 22764                           ;encoder.c: 376: else;encoder.c: 377: {;encoder.c: 378: os.division = 1;
 22765                           
 22766                           ; BSR set to: 1
 22767  00B484  0E00               	movlw	0
 22768  00B486  0101               	movlb	1	; () banked
 22769  00B488  6F7A               	movwf	(_os+21)& (0+255),b	;volatile
 22770  00B48A  0E01               	movlw	1
 22771  00B48C  6F79               	movwf	(_os+20)& (0+255),b	;volatile
 22772                           
 22773                           ; BSR set to: 1
 22774                           ;encoder.c: 379: };encoder.c: 380: };encoder.c: 381: break;
 22775                           
 22776                           ; BSR set to: 1
 22777  00B48E  D1A9               	goto	l2816
 22778  00B490                     
 22779                           ;encoder.c: 384: if(os.button1==1)
 22780                           
 22781                           ; BSR set to: 1
 22782  00B490  0101               	movlb	1	; () banked
 22783  00B492  0569               	decf	(_os+4)& (0+255),w,b	;volatile
 22784  00B494  A4D8               	btfss	status,2,c
 22785  00B496  D002               	goto	l2865
 22786                           
 22787                           ; BSR set to: 1
 22788                           ;encoder.c: 385: {;encoder.c: 386: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 22789  00B498  0E02               	movlw	2
 22790  00B49A  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 22791  00B49C                     l2865:
 22792                           
 22793                           ; BSR set to: 1
 22794                           ;encoder.c: 387: };encoder.c: 388: if(os.button2==1)
 22795                           
 22796                           ; BSR set to: 1
 22797  00B49C  056B               	decf	(_os+6)& (0+255),w,b	;volatile
 22798  00B49E  B4D8               	btfsc	status,2,c
 22799                           
 22800                           ; BSR set to: 1
 22801                           ;encoder.c: 389: {;encoder.c: 390: motor_divide_jump();
 22802  00B4A0  ECF5  F097         	call	_motor_divide_jump	;wreg free
 22803                           
 22804                           ;encoder.c: 391: };encoder.c: 392: if(os.encoder2Count>0)
 22805  00B4A4  0101               	movlb	1	; () banked
 22806  00B4A6  516A               	movf	(_os+5)& (0+255),w,b	;volatile
 22807  00B4A8  0A80               	xorlw	128
 22808  00B4AA  0F7F               	addlw	-129
 22809  00B4AC  B0D8               	btfsc	status,0,c
 22810                           
 22811                           ; BSR set to: 1
 22812                           ;encoder.c: 393: {;encoder.c: 394: _divide_jump_size_increment();
 22813  00B4AE  EC94  F0AB         	call	__divide_jump_size_increment	;wreg free
 22814                           
 22815                           ;encoder.c: 395: };encoder.c: 396: if(os.encoder2Count<0)
 22816  00B4B2  0101               	movlb	1	; () banked
 22817  00B4B4  AF6A               	btfss	(_os+5)& (0+255),7,b	;volatile
 22818  00B4B6  D195               	goto	l2816
 22819                           
 22820                           ; BSR set to: 1
 22821                           ;encoder.c: 397: {;encoder.c: 398: _divide_jump_size_decrement();
 22822  00B4B8  ECAA  F0A3         	call	__divide_jump_size_decrement	;wreg free
 22823                           
 22824                           ;encoder.c: 399: };encoder.c: 400: break;
 22825  00B4BC  D192               	goto	l2816
 22826  00B4BE                     
 22827                           ;encoder.c: 406: if(os.button1==1)
 22828  00B4BE  0101               	movlb	1	; () banked
 22829  00B4C0  0569               	decf	(_os+4)& (0+255),w,b	;volatile
 22830  00B4C2  A4D8               	btfss	status,2,c
 22831  00B4C4  D002               	goto	l2872
 22832                           
 22833                           ; BSR set to: 1
 22834                           ;encoder.c: 407: {;encoder.c: 408: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 22835  00B4C6  0E62               	movlw	98
 22836  00B4C8  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 22837  00B4CA                     l2872:
 22838                           
 22839                           ; BSR set to: 1
 22840                           ;encoder.c: 409: };encoder.c: 410: if(os.encoder1Count>0)
 22841                           
 22842                           ; BSR set to: 1
 22843  00B4CA  5168               	movf	(_os+3)& (0+255),w,b	;volatile
 22844  00B4CC  0A80               	xorlw	128
 22845  00B4CE  0F7F               	addlw	-129
 22846  00B4D0  A0D8               	btfss	status,0,c
 22847  00B4D2  D002               	goto	l2873
 22848                           
 22849                           ; BSR set to: 1
 22850                           ;encoder.c: 411: os.displayState = DISPLAY_STATE_ARC1_CANCEL;
 22851  00B4D4  0E52               	movlw	82
 22852  00B4D6  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 22853  00B4D8                     l2873:
 22854                           
 22855                           ; BSR set to: 1
 22856                           ;encoder.c: 412: if(os.encoder1Count<0)
 22857                           
 22858                           ; BSR set to: 1
 22859  00B4D8  AF68               	btfss	(_os+3)& (0+255),7,b	;volatile
 22860  00B4DA  D01B               	goto	l2875
 22861                           
 22862                           ; BSR set to: 1
 22863                           ;encoder.c: 413: os.displayState = DISPLAY_STATE_ARC1_CANCEL;
 22864  00B4DC  0E52               	movlw	82
 22865  00B4DE  D00F               	goto	L14
 22866  00B4E0                     
 22867                           ; BSR set to: 1
 22868                           ;encoder.c: 416: if(os.button1==1)
 22869                           
 22870                           ; BSR set to: 1
 22871  00B4E0  0569               	decf	(_os+4)& (0+255),w,b	;volatile
 22872  00B4E2  A4D8               	btfss	status,2,c
 22873  00B4E4  D002               	goto	l2877
 22874                           
 22875                           ; BSR set to: 1
 22876                           ;encoder.c: 417: os.displayState = DISPLAY_STATE_MAIN_ARC;
 22877  00B4E6  0E03               	movlw	3
 22878  00B4E8  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 22879  00B4EA                     l2877:
 22880                           
 22881                           ; BSR set to: 1
 22882                           ;encoder.c: 418: if(os.encoder1Count>0)
 22883                           
 22884                           ; BSR set to: 1
 22885  00B4EA  5168               	movf	(_os+3)& (0+255),w,b	;volatile
 22886  00B4EC  0A80               	xorlw	128
 22887  00B4EE  0F7F               	addlw	-129
 22888  00B4F0  A0D8               	btfss	status,0,c
 22889  00B4F2  D002               	goto	l2878
 22890                           
 22891                           ; BSR set to: 1
 22892                           ;encoder.c: 419: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 22893  00B4F4  0E51               	movlw	81
 22894  00B4F6  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 22895  00B4F8                     l2878:
 22896                           
 22897                           ; BSR set to: 1
 22898                           ;encoder.c: 420: if(os.encoder1Count<0)
 22899                           
 22900                           ; BSR set to: 1
 22901  00B4F8  AF68               	btfss	(_os+3)& (0+255),7,b	;volatile
 22902  00B4FA  D00B               	goto	l2875
 22903                           
 22904                           ; BSR set to: 1
 22905                           ;encoder.c: 421: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 22906  00B4FC  0E51               	movlw	81
 22907  00B4FE                     L14:
 22908  00B4FE  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 22909                           
 22910                           ; BSR set to: 1
 22911                           ;encoder.c: 423: }
 22912                           
 22913                           ; BSR set to: 1
 22914                           ;encoder.c: 422: break;
 22915  00B500  D008               	goto	l2875
 22916  00B502                     
 22917                           ; BSR set to: 1
 22918  00B502  0101               	movlb	1	; () banked
 22919  00B504  5174               	movf	(_os+15)& (0+255),w,b	;volatile
 22920                           
 22921                           ; Switch size 1, requested type "space"
 22922                           ; Number of cases is 2, Range of values is 81 to 82
 22923                           ; switch strategies available:
 22924                           ; Name         Instructions Cycles
 22925                           ; simple_byte            7     4 (average)
 22926                           ;	Chosen strategy is simple_byte
 22927  00B506  0A51               	xorlw	81	; case 81
 22928  00B508  B4D8               	btfsc	status,2,c
 22929  00B50A  D7D9               	goto	l2871
 22930  00B50C  0A03               	xorlw	3	; case 82
 22931  00B50E  B4D8               	btfsc	status,2,c
 22932  00B510  D7E7               	goto	l2876
 22933  00B512                     l2875:
 22934                           
 22935                           ; BSR set to: 1
 22936                           ;encoder.c: 424: if(os.button2==1)
 22937                           
 22938                           ; BSR set to: 1
 22939  00B512  056B               	decf	(_os+6)& (0+255),w,b	;volatile
 22940  00B514  A4D8               	btfss	status,2,c
 22941  00B516  D00A               	goto	l2880
 22942                           
 22943                           ; BSR set to: 1
 22944                           ;encoder.c: 425: {;encoder.c: 426: os.arc_step_size = _encoder_next_arc_step_size(os.arc
      +                          _step_size);
 22945  00B518  C180  F060         	movff	_os+27,__encoder_next_arc_step_size@old_stepsize	;volatile
 22946  00B51C  C181  F061         	movff	_os+28,__encoder_next_arc_step_size@old_stepsize+1	;volatile
 22947  00B520  EC3B  F0A3         	call	__encoder_next_arc_step_size	;wreg free
 22948  00B524  C060  F180         	movff	?__encoder_next_arc_step_size,_os+27	;volatile
 22949  00B528  C061  F181         	movff	?__encoder_next_arc_step_size+1,_os+28	;volatile
 22950  00B52C                     l2880:
 22951                           
 22952                           ;encoder.c: 427: };encoder.c: 428: if(os.encoder2Count>0)
 22953  00B52C  0101               	movlb	1	; () banked
 22954  00B52E  516A               	movf	(_os+5)& (0+255),w,b	;volatile
 22955  00B530  0A80               	xorlw	128
 22956  00B532  0F7F               	addlw	-129
 22957  00B534  A0D8               	btfss	status,0,c
 22958  00B536  D01C               	goto	l2882
 22959                           
 22960                           ; BSR set to: 1
 22961                           ;encoder.c: 429: {;encoder.c: 430: os.arc_size += os.arc_step_size;
 22962  00B538  5180               	movf	(_os+27)& (0+255),w,b	;volatile
 22963  00B53A  2782               	addwf	(_os+29)& (0+255),f,b	;volatile
 22964  00B53C  5181               	movf	(_os+28)& (0+255),w,b	;volatile
 22965  00B53E  2383               	addwfc	(_os+30)& (0+255),f,b	;volatile
 22966  00B540  0E00               	movlw	0
 22967  00B542  2384               	addwfc	(_os+31)& (0+255),f,b	;volatile
 22968  00B544  0E00               	movlw	0
 22969  00B546  2385               	addwfc	(_os+32)& (0+255),f,b	;volatile
 22970                           
 22971                           ; BSR set to: 1
 22972                           ;encoder.c: 431: if(os.arc_size>100000)
 22973  00B548  BF85               	btfsc	(_os+32)& (0+255),7,b	;volatile
 22974  00B54A  D012               	goto	l2882
 22975  00B54C  5185               	movf	(_os+32)& (0+255),w,b	;volatile
 22976  00B54E  E108               	bnz	u18470
 22977  00B550  0EA1               	movlw	161
 22978  00B552  5D82               	subwf	(_os+29)& (0+255),w,b	;volatile
 22979  00B554  0E86               	movlw	134
 22980  00B556  5983               	subwfb	(_os+30)& (0+255),w,b	;volatile
 22981  00B558  0E01               	movlw	1
 22982  00B55A  5984               	subwfb	(_os+31)& (0+255),w,b	;volatile
 22983  00B55C  A0D8               	btfss	status,0,c
 22984  00B55E  D008               	goto	l2882
 22985  00B560                     u18470:
 22986                           
 22987                           ; BSR set to: 1
 22988                           ;encoder.c: 432: os.arc_size = 100000;
 22989  00B560  0EA0               	movlw	160
 22990  00B562  6F82               	movwf	(_os+29)& (0+255),b	;volatile
 22991  00B564  0E86               	movlw	134
 22992  00B566  6F83               	movwf	(_os+30)& (0+255),b	;volatile
 22993  00B568  0E01               	movlw	1
 22994  00B56A  6F84               	movwf	(_os+31)& (0+255),b	;volatile
 22995  00B56C  0E00               	movlw	0
 22996  00B56E  6F85               	movwf	(_os+32)& (0+255),b	;volatile
 22997  00B570                     l2882:
 22998                           
 22999                           ; BSR set to: 1
 23000                           ;encoder.c: 433: };encoder.c: 434: if(os.encoder2Count<0)
 23001                           
 23002                           ; BSR set to: 1
 23003                           
 23004                           ; BSR set to: 1
 23005  00B570  AF6A               	btfss	(_os+5)& (0+255),7,b	;volatile
 23006  00B572  D137               	goto	l2816
 23007                           
 23008                           ; BSR set to: 1
 23009                           ;encoder.c: 435: {;encoder.c: 436: os.arc_size -= os.arc_step_size;
 23010  00B574  5180               	movf	(_os+27)& (0+255),w,b	;volatile
 23011  00B576  0100               	movlb	0	; () banked
 23012  00B578  6FA8               	movwf	??_encoder_statemachine& (0+255),b
 23013  00B57A  0101               	movlb	1	; () banked
 23014  00B57C  5181               	movf	(_os+28)& (0+255),w,b	;volatile
 23015  00B57E  0100               	movlb	0	; () banked
 23016  00B580  6FA9               	movwf	(??_encoder_statemachine+1)& (0+255),b
 23017  00B582  6BAA               	clrf	(??_encoder_statemachine+2)& (0+255),b
 23018  00B584  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 23019  00B586  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 23020  00B588  0101               	movlb	1	; () banked
 23021  00B58A  5F82               	subwf	(_os+29)& (0+255),f,b	;volatile
 23022  00B58C  0100               	movlb	0	; () banked
 23023  00B58E  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 23024  00B590  0101               	movlb	1	; () banked
 23025  00B592  5B83               	subwfb	(_os+30)& (0+255),f,b	;volatile
 23026  00B594  0100               	movlb	0	; () banked
 23027  00B596  51AA               	movf	(??_encoder_statemachine+2)& (0+255),w,b
 23028  00B598  0101               	movlb	1	; () banked
 23029  00B59A  5B84               	subwfb	(_os+31)& (0+255),f,b	;volatile
 23030  00B59C  0100               	movlb	0	; () banked
 23031  00B59E  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 23032  00B5A0  0101               	movlb	1	; () banked
 23033  00B5A2  5B85               	subwfb	(_os+32)& (0+255),f,b	;volatile
 23034                           
 23035                           ;encoder.c: 437: if(os.arc_size<1)
 23036  00B5A4  BF85               	btfsc	(_os+32)& (0+255),7,b	;volatile
 23037  00B5A6  D007               	goto	u18490
 23038  00B5A8  5185               	movf	(_os+32)& (0+255),w,b	;volatile
 23039  00B5AA  1184               	iorwf	(_os+31)& (0+255),w,b	;volatile
 23040  00B5AC  1183               	iorwf	(_os+30)& (0+255),w,b	;volatile
 23041  00B5AE  E102               	bnz	u18491
 23042  00B5B0  0582               	decf	(_os+29)& (0+255),w,b	;volatile
 23043  00B5B2  B0D8               	btfsc	status,0,c
 23044  00B5B4                     u18491:
 23045  00B5B4  D116               	goto	l2816
 23046  00B5B6                     u18490:
 23047                           
 23048                           ; BSR set to: 1
 23049                           ;encoder.c: 438: os.arc_size = 1;
 23050  00B5B6  0E01               	movlw	1
 23051  00B5B8  6F82               	movwf	(_os+29)& (0+255),b	;volatile
 23052  00B5BA  0E00               	movlw	0
 23053  00B5BC  6F83               	movwf	(_os+30)& (0+255),b	;volatile
 23054  00B5BE  0E00               	movlw	0
 23055  00B5C0  6F84               	movwf	(_os+31)& (0+255),b	;volatile
 23056  00B5C2  0E00               	movlw	0
 23057  00B5C4  6F85               	movwf	(_os+32)& (0+255),b	;volatile
 23058                           
 23059                           ; BSR set to: 1
 23060                           ;encoder.c: 439: };encoder.c: 440: break;
 23061                           
 23062                           ; BSR set to: 1
 23063  00B5C6  D10D               	goto	l2816
 23064  00B5C8                     
 23065                           ;encoder.c: 443: if(os.encoder1Count>0)
 23066                           
 23067                           ; BSR set to: 1
 23068  00B5C8  0101               	movlb	1	; () banked
 23069  00B5CA  5168               	movf	(_os+3)& (0+255),w,b	;volatile
 23070  00B5CC  0A80               	xorlw	128
 23071  00B5CE  0F7F               	addlw	-129
 23072  00B5D0  A0D8               	btfss	status,0,c
 23073  00B5D2  D011               	goto	l2888
 23074                           
 23075                           ; BSR set to: 1
 23076                           ;encoder.c: 444: {;encoder.c: 445: if(os.arc_speed<config.maximum_speed_arc)
 23077  00B5D4  51A5               	movf	(_config+15)& (0+255),w,b
 23078  00B5D6  5D86               	subwf	(_os+33)& (0+255),w,b	;volatile
 23079  00B5D8  51A6               	movf	(_config+16)& (0+255),w,b
 23080  00B5DA  5987               	subwfb	(_os+34)& (0+255),w,b	;volatile
 23081  00B5DC  B0D8               	btfsc	status,0,c
 23082  00B5DE  D002               	goto	l2887
 23083                           
 23084                           ; BSR set to: 1
 23085                           ;encoder.c: 446: ++os.arc_speed;
 23086  00B5E0  4B86               	infsnz	(_os+33)& (0+255),f,b	;volatile
 23087  00B5E2  2B87               	incf	(_os+34)& (0+255),f,b	;volatile
 23088  00B5E4                     l2887:
 23089                           
 23090                           ; BSR set to: 1
 23091                           ;encoder.c: 447: if(os.busy)
 23092                           
 23093                           ; BSR set to: 1
 23094  00B5E4  5175               	movf	(_os+16)& (0+255),w,b	;volatile
 23095  00B5E6  B4D8               	btfsc	status,2,c
 23096  00B5E8  D006               	goto	l2888
 23097                           
 23098                           ; BSR set to: 1
 23099                           ;encoder.c: 448: motor_change_speed(os.arc_speed);
 23100  00B5EA  C186  F060         	movff	_os+33,motor_change_speed@new_speed	;volatile
 23101  00B5EE  C187  F061         	movff	_os+34,motor_change_speed@new_speed+1	;volatile
 23102  00B5F2  EC31  F0B0         	call	_motor_change_speed	;wreg free
 23103  00B5F6                     l2888:
 23104                           
 23105                           ;encoder.c: 449: };encoder.c: 450: if(os.encoder1Count<0)
 23106  00B5F6  0101               	movlb	1	; () banked
 23107  00B5F8  AF68               	btfss	(_os+3)& (0+255),7,b	;volatile
 23108  00B5FA  D046               	goto	l2892
 23109                           
 23110                           ; BSR set to: 1
 23111                           ;encoder.c: 451: {;encoder.c: 452: if(os.arc_speed>config.minimum_speed)
 23112  00B5FC  5186               	movf	(_os+33)& (0+255),w,b	;volatile
 23113  00B5FE  5D9F               	subwf	(_config+9)& (0+255),w,b
 23114  00B600  5187               	movf	(_os+34)& (0+255),w,b	;volatile
 23115  00B602  59A0               	subwfb	(_config+10)& (0+255),w,b
 23116  00B604  B0D8               	btfsc	status,0,c
 23117  00B606  D003               	goto	l2890
 23118                           
 23119                           ; BSR set to: 1
 23120                           ;encoder.c: 453: --os.arc_speed;
 23121  00B608  0786               	decf	(_os+33)& (0+255),f,b	;volatile
 23122  00B60A  A0D8               	btfss	status,0,c
 23123  00B60C  0787               	decf	(_os+34)& (0+255),f,b	;volatile
 23124  00B60E                     l2890:
 23125                           
 23126                           ; BSR set to: 1
 23127                           ;encoder.c: 454: if(os.busy)
 23128                           
 23129                           ; BSR set to: 1
 23130  00B60E  5175               	movf	(_os+16)& (0+255),w,b	;volatile
 23131  00B610  B4D8               	btfsc	status,2,c
 23132  00B612  D03A               	goto	l2892
 23133                           
 23134                           ; BSR set to: 1
 23135                           ;encoder.c: 455: motor_change_speed(os.arc_speed);
 23136  00B614  C186  F060         	movff	_os+33,motor_change_speed@new_speed	;volatile
 23137  00B618  C187  F061         	movff	_os+34,motor_change_speed@new_speed+1	;volatile
 23138  00B61C  EC31  F0B0         	call	_motor_change_speed	;wreg free
 23139                           
 23140                           ;encoder.c: 456: };encoder.c: 457: switch(os.displayState)
 23141  00B620  D033               	goto	l2892
 23142  00B622                     
 23143                           ;encoder.c: 460: if(os.button2==1)
 23144  00B622  0101               	movlb	1	; () banked
 23145  00B624  056B               	decf	(_os+6)& (0+255),w,b	;volatile
 23146  00B626  A4D8               	btfss	status,2,c
 23147  00B628  D006               	goto	l2894
 23148                           
 23149                           ; BSR set to: 1
 23150                           ;encoder.c: 461: {;encoder.c: 462: motor_arc_move(MOTOR_DIRECTION_CCW);
 23151  00B62A  0EFF               	movlw	255
 23152  00B62C  EC6D  F090         	call	_motor_arc_move
 23153                           
 23154                           ;encoder.c: 463: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 23155  00B630  0E62               	movlw	98
 23156  00B632  0101               	movlb	1	; () banked
 23157  00B634  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 23158  00B636                     l2894:
 23159                           
 23160                           ; BSR set to: 1
 23161                           ;encoder.c: 464: };encoder.c: 465: if(os.encoder2Count>0)
 23162                           
 23163                           ; BSR set to: 1
 23164  00B636  516A               	movf	(_os+5)& (0+255),w,b	;volatile
 23165  00B638  0A80               	xorlw	128
 23166  00B63A  0F7F               	addlw	-129
 23167  00B63C  A0D8               	btfss	status,0,c
 23168  00B63E  D0D1               	goto	l2816
 23169                           
 23170                           ; BSR set to: 1
 23171                           ;encoder.c: 466: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 23172  00B640  0E62               	movlw	98
 23173  00B642  D099               	goto	L21
 23174  00B644                     
 23175                           ; BSR set to: 1
 23176                           ;encoder.c: 469: if(os.button2==1)
 23177                           
 23178                           ; BSR set to: 1
 23179  00B644  056B               	decf	(_os+6)& (0+255),w,b	;volatile
 23180  00B646  A4D8               	btfss	status,2,c
 23181  00B648  D007               	goto	l2898
 23182                           
 23183                           ; BSR set to: 1
 23184                           ;encoder.c: 470: {;encoder.c: 471: if(os.busy)
 23185  00B64A  5175               	movf	(_os+16)& (0+255),w,b	;volatile
 23186  00B64C  A4D8               	btfss	status,2,c
 23187                           
 23188                           ; BSR set to: 1
 23189                           ;encoder.c: 472: motor_stop();
 23190  00B64E  ECE5  F0A9         	call	_motor_stop	;wreg free
 23191                           
 23192                           ;encoder.c: 473: os.displayState = DISPLAY_STATE_MAIN_ARC;
 23193  00B652  0E03               	movlw	3
 23194  00B654  0101               	movlb	1	; () banked
 23195  00B656  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 23196  00B658                     l2898:
 23197                           
 23198                           ; BSR set to: 1
 23199                           ;encoder.c: 474: };encoder.c: 475: if(os.encoder2Count>0)
 23200                           
 23201                           ; BSR set to: 1
 23202  00B658  516A               	movf	(_os+5)& (0+255),w,b	;volatile
 23203  00B65A  0A80               	xorlw	128
 23204  00B65C  0F7F               	addlw	-129
 23205  00B65E  A0D8               	btfss	status,0,c
 23206  00B660  D002               	goto	l2900
 23207                           
 23208                           ; BSR set to: 1
 23209                           ;encoder.c: 476: os.displayState = DISPLAY_STATE_ARC2_CW;
 23210  00B662  0E63               	movlw	99
 23211  00B664  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 23212  00B666                     l2900:
 23213                           
 23214                           ; BSR set to: 1
 23215                           ;encoder.c: 477: if(os.encoder2Count<0)
 23216                           
 23217                           ; BSR set to: 1
 23218  00B666  AF6A               	btfss	(_os+5)& (0+255),7,b	;volatile
 23219  00B668  D0BC               	goto	l2816
 23220                           
 23221                           ; BSR set to: 1
 23222                           ;encoder.c: 478: os.displayState = DISPLAY_STATE_ARC2_CCW;
 23223  00B66A  0E61               	movlw	97
 23224  00B66C  D084               	goto	L21
 23225  00B66E                     
 23226                           ; BSR set to: 1
 23227                           ;encoder.c: 481: if(os.button2==1)
 23228                           
 23229                           ; BSR set to: 1
 23230  00B66E  056B               	decf	(_os+6)& (0+255),w,b	;volatile
 23231  00B670  A4D8               	btfss	status,2,c
 23232  00B672  D006               	goto	l2903
 23233                           
 23234                           ; BSR set to: 1
 23235                           ;encoder.c: 482: {;encoder.c: 483: motor_arc_move(MOTOR_DIRECTION_CW);
 23236  00B674  0E01               	movlw	1
 23237  00B676  EC6D  F090         	call	_motor_arc_move
 23238                           
 23239                           ;encoder.c: 484: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 23240  00B67A  0E62               	movlw	98
 23241  00B67C  0101               	movlb	1	; () banked
 23242  00B67E  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 23243  00B680                     l2903:
 23244                           
 23245                           ; BSR set to: 1
 23246                           ;encoder.c: 485: };encoder.c: 486: if(os.encoder2Count<0)
 23247                           
 23248                           ; BSR set to: 1
 23249  00B680  AF6A               	btfss	(_os+5)& (0+255),7,b	;volatile
 23250  00B682  D0AF               	goto	l2816
 23251                           
 23252                           ; BSR set to: 1
 23253                           ;encoder.c: 487: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 23254  00B684  0E62               	movlw	98
 23255  00B686  D077               	goto	L21
 23256  00B688                     l2892:
 23257                           
 23258                           ; BSR set to: 1
 23259  00B688  0101               	movlb	1	; () banked
 23260  00B68A  5174               	movf	(_os+15)& (0+255),w,b	;volatile
 23261                           
 23262                           ; Switch size 1, requested type "space"
 23263                           ; Number of cases is 3, Range of values is 97 to 99
 23264                           ; switch strategies available:
 23265                           ; Name         Instructions Cycles
 23266                           ; simple_byte           10     6 (average)
 23267                           ;	Chosen strategy is simple_byte
 23268  00B68C  0A61               	xorlw	97	; case 97
 23269  00B68E  B4D8               	btfsc	status,2,c
 23270  00B690  D7C8               	goto	l2893
 23271  00B692  0A03               	xorlw	3	; case 98
 23272  00B694  B4D8               	btfsc	status,2,c
 23273  00B696  D7D6               	goto	l2897
 23274  00B698  0A01               	xorlw	1	; case 99
 23275  00B69A  B4D8               	btfsc	status,2,c
 23276  00B69C  D7E8               	goto	l2902
 23277                           
 23278                           ; BSR set to: 1
 23279                           ;encoder.c: 490: break;
 23280  00B69E  D0A1               	goto	l2816
 23281  00B6A0                     
 23282                           ;encoder.c: 493: if(os.button2==1)
 23283                           
 23284                           ; BSR set to: 1
 23285  00B6A0  0101               	movlb	1	; () banked
 23286  00B6A2  056B               	decf	(_os+6)& (0+255),w,b	;volatile
 23287  00B6A4  A4D8               	btfss	status,2,c
 23288  00B6A6  D018               	goto	l2906
 23289                           
 23290                           ; BSR set to: 1
 23291                           ;encoder.c: 494: {;encoder.c: 496: motor_goto_steps(MOTOR_DIRECTION_SHORTEST, 0, 0xFFFF,
      +                           MOTOR_OVERSHOOT_WITH_OVERSHOOT);
 23292  00B6A8  0E00               	movlw	0
 23293  00B6AA  0100               	movlb	0	; () banked
 23294  00B6AC  6F92               	movwf	motor_goto_steps@position& (0+255),b
 23295  00B6AE  0E00               	movlw	0
 23296  00B6B0  6F93               	movwf	(motor_goto_steps@position+1)& (0+255),b
 23297  00B6B2  0E00               	movlw	0
 23298  00B6B4  6F94               	movwf	(motor_goto_steps@position+2)& (0+255),b
 23299  00B6B6  0E00               	movlw	0
 23300  00B6B8  6F95               	movwf	(motor_goto_steps@position+3)& (0+255),b
 23301  00B6BA  0EFF               	movlw	255
 23302  00B6BC  6F97               	movwf	(motor_goto_steps@speed+1)& (0+255),b
 23303  00B6BE  6996               	setf	motor_goto_steps@speed& (0+255),b
 23304  00B6C0  0E00               	movlw	0
 23305  00B6C2  6F98               	movwf	motor_goto_steps@overshoot& (0+255),b
 23306  00B6C4  0E00               	movlw	0
 23307  00B6C6  EC52  F09C         	call	_motor_goto_steps
 23308                           
 23309                           ;encoder.c: 498: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 23310  00B6CA  0E05               	movlw	5
 23311  00B6CC  0101               	movlb	1	; () banked
 23312  00B6CE  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 23313                           
 23314                           ; BSR set to: 1
 23315                           ;encoder.c: 499: os.divide_position = 0;
 23316  00B6D0  0E00               	movlw	0
 23317  00B6D2  6F7D               	movwf	(_os+24)& (0+255),b	;volatile
 23318  00B6D4  0E00               	movlw	0
 23319  00B6D6  6F7C               	movwf	(_os+23)& (0+255),b	;volatile
 23320  00B6D8                     l2906:
 23321                           
 23322                           ; BSR set to: 1
 23323                           ;encoder.c: 500: };encoder.c: 501: if(os.button1==1)
 23324                           
 23325                           ; BSR set to: 1
 23326  00B6D8  0569               	decf	(_os+4)& (0+255),w,b	;volatile
 23327  00B6DA  A4D8               	btfss	status,2,c
 23328  00B6DC  D082               	goto	l2816
 23329                           
 23330                           ; BSR set to: 1
 23331                           ;encoder.c: 502: {;encoder.c: 503: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 23332  00B6DE  0E05               	movlw	5
 23333  00B6E0  D04A               	goto	L21
 23334  00B6E2                     
 23335                           ;encoder.c: 508: if(os.encoder1Count>0)
 23336                           
 23337                           ; BSR set to: 1
 23338  00B6E2  0101               	movlb	1	; () banked
 23339  00B6E4  5168               	movf	(_os+3)& (0+255),w,b	;volatile
 23340  00B6E6  0A80               	xorlw	128
 23341  00B6E8  0F7F               	addlw	-129
 23342  00B6EA  B0D8               	btfsc	status,0,c
 23343                           
 23344                           ; BSR set to: 1
 23345                           ;encoder.c: 509: {;encoder.c: 510: motor_increase_manual_speed();
 23346  00B6EC  EC97  F0AF         	call	_motor_increase_manual_speed	;wreg free
 23347                           
 23348                           ;encoder.c: 511: };encoder.c: 512: if(os.encoder1Count<0)
 23349  00B6F0  0101               	movlb	1	; () banked
 23350  00B6F2  AF68               	btfss	(_os+3)& (0+255),7,b	;volatile
 23351  00B6F4  D042               	goto	l2911
 23352                           
 23353                           ; BSR set to: 1
 23354                           ;encoder.c: 513: {;encoder.c: 514: motor_decrease_manual_speed();
 23355  00B6F6  EC2E  F0AF         	call	_motor_decrease_manual_speed	;wreg free
 23356                           
 23357                           ;encoder.c: 515: };encoder.c: 516: switch(os.displayState)
 23358  00B6FA  D03F               	goto	l2911
 23359  00B6FC                     
 23360                           ;encoder.c: 519: if(os.button2==1)
 23361  00B6FC  0101               	movlb	1	; () banked
 23362  00B6FE  056B               	decf	(_os+6)& (0+255),w,b	;volatile
 23363  00B700  A4D8               	btfss	status,2,c
 23364  00B702  D00A               	goto	l2913
 23365                           
 23366                           ; BSR set to: 1
 23367                           ;encoder.c: 520: {;encoder.c: 521: motor_move_endless(MOTOR_DIRECTION_CCW, os.manual_spe
      +                          ed);
 23368  00B704  C189  F08C         	movff	_os+36,motor_move_endless@speed	;volatile
 23369  00B708  C18A  F08D         	movff	_os+37,motor_move_endless@speed+1	;volatile
 23370  00B70C  0EFF               	movlw	255
 23371  00B70E  ECC7  F0AD         	call	_motor_move_endless
 23372                           
 23373                           ;encoder.c: 522: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 23374  00B712  0E84               	movlw	132
 23375  00B714  0101               	movlb	1	; () banked
 23376  00B716  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 23377  00B718                     l2913:
 23378                           
 23379                           ; BSR set to: 1
 23380                           ;encoder.c: 523: };encoder.c: 524: if(os.encoder2Count>0)
 23381                           
 23382                           ; BSR set to: 1
 23383  00B718  516A               	movf	(_os+5)& (0+255),w,b	;volatile
 23384  00B71A  0A80               	xorlw	128
 23385  00B71C  0F7F               	addlw	-129
 23386  00B71E  A0D8               	btfss	status,0,c
 23387  00B720  D060               	goto	l2816
 23388                           
 23389                           ; BSR set to: 1
 23390                           ;encoder.c: 525: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 23391  00B722  0E82               	movlw	130
 23392  00B724  D028               	goto	L21
 23393  00B726                     
 23394                           ; BSR set to: 1
 23395                           ;encoder.c: 528: if(os.button2==1)
 23396                           
 23397                           ; BSR set to: 1
 23398  00B726  056B               	decf	(_os+6)& (0+255),w,b	;volatile
 23399  00B728  A4D8               	btfss	status,2,c
 23400  00B72A  D002               	goto	l2917
 23401                           
 23402                           ; BSR set to: 1
 23403                           ;encoder.c: 529: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 23404  00B72C  0E04               	movlw	4
 23405  00B72E  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 23406  00B730                     l2917:
 23407                           
 23408                           ; BSR set to: 1
 23409                           ;encoder.c: 530: if(os.encoder2Count>0)
 23410                           
 23411                           ; BSR set to: 1
 23412  00B730  516A               	movf	(_os+5)& (0+255),w,b	;volatile
 23413  00B732  0A80               	xorlw	128
 23414  00B734  0F7F               	addlw	-129
 23415  00B736  A0D8               	btfss	status,0,c
 23416  00B738  D002               	goto	l2918
 23417                           
 23418                           ; BSR set to: 1
 23419                           ;encoder.c: 531: os.displayState = DISPLAY_STATE_MANUAL_CW;
 23420  00B73A  0E83               	movlw	131
 23421  00B73C  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 23422  00B73E                     l2918:
 23423                           
 23424                           ; BSR set to: 1
 23425                           ;encoder.c: 532: if(os.encoder2Count<0)
 23426                           
 23427                           ; BSR set to: 1
 23428  00B73E  AF6A               	btfss	(_os+5)& (0+255),7,b	;volatile
 23429  00B740  D050               	goto	l2816
 23430                           
 23431                           ; BSR set to: 1
 23432                           ;encoder.c: 533: os.displayState = DISPLAY_STATE_MANUAL_CCW;
 23433  00B742  0E81               	movlw	129
 23434  00B744  D018               	goto	L21
 23435  00B746                     
 23436                           ; BSR set to: 1
 23437                           ;encoder.c: 536: if(os.button2==1)
 23438                           
 23439                           ; BSR set to: 1
 23440  00B746  056B               	decf	(_os+6)& (0+255),w,b	;volatile
 23441  00B748  A4D8               	btfss	status,2,c
 23442  00B74A  D009               	goto	l2921
 23443                           
 23444                           ; BSR set to: 1
 23445                           ;encoder.c: 537: {;encoder.c: 538: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 23446  00B74C  0E84               	movlw	132
 23447  00B74E  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 23448                           
 23449                           ; BSR set to: 1
 23450                           ;encoder.c: 539: motor_move_endless(MOTOR_DIRECTION_CW, os.manual_speed);
 23451  00B750  C189  F08C         	movff	_os+36,motor_move_endless@speed	;volatile
 23452  00B754  C18A  F08D         	movff	_os+37,motor_move_endless@speed+1	;volatile
 23453  00B758  0E01               	movlw	1
 23454  00B75A  ECC7  F0AD         	call	_motor_move_endless
 23455  00B75E                     l2921:
 23456                           
 23457                           ;encoder.c: 540: };encoder.c: 541: if(os.encoder2Count<0)
 23458  00B75E  0101               	movlb	1	; () banked
 23459  00B760  AF6A               	btfss	(_os+5)& (0+255),7,b	;volatile
 23460  00B762  D03F               	goto	l2816
 23461                           
 23462                           ; BSR set to: 1
 23463                           ;encoder.c: 542: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 23464  00B764  0E82               	movlw	130
 23465  00B766  D007               	goto	L21
 23466  00B768                     
 23467                           ; BSR set to: 1
 23468                           ;encoder.c: 545: if(os.button2==1)
 23469                           
 23470                           ; BSR set to: 1
 23471  00B768  056B               	decf	(_os+6)& (0+255),w,b	;volatile
 23472  00B76A  A4D8               	btfss	status,2,c
 23473  00B76C  D03A               	goto	l2816
 23474                           
 23475                           ; BSR set to: 1
 23476                           ;encoder.c: 546: {;encoder.c: 547: motor_stop();
 23477  00B76E  ECE5  F0A9         	call	_motor_stop	;wreg free
 23478                           
 23479                           ;encoder.c: 548: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 23480  00B772  0E82               	movlw	130
 23481  00B774                     L22:
 23482  00B774  0101               	movlb	1	; () banked
 23483  00B776                     L21:
 23484  00B776  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 23485                           
 23486                           ; BSR set to: 1
 23487                           ;encoder.c: 551: }
 23488                           
 23489                           ; BSR set to: 1
 23490                           ;encoder.c: 549: };encoder.c: 550: break;
 23491  00B778  D034               	goto	l2816
 23492  00B77A                     l2911:
 23493                           
 23494                           ; BSR set to: 1
 23495  00B77A  0101               	movlb	1	; () banked
 23496  00B77C  5174               	movf	(_os+15)& (0+255),w,b	;volatile
 23497                           
 23498                           ; Switch size 1, requested type "space"
 23499                           ; Number of cases is 4, Range of values is 129 to 132
 23500                           ; switch strategies available:
 23501                           ; Name         Instructions Cycles
 23502                           ; simple_byte           13     7 (average)
 23503                           ;	Chosen strategy is simple_byte
 23504  00B77E  0A81               	xorlw	129	; case 129
 23505  00B780  B4D8               	btfsc	status,2,c
 23506  00B782  D7BC               	goto	l2912
 23507  00B784  0A03               	xorlw	3	; case 130
 23508  00B786  B4D8               	btfsc	status,2,c
 23509  00B788  D7CE               	goto	l2916
 23510  00B78A  0A01               	xorlw	1	; case 131
 23511  00B78C  B4D8               	btfsc	status,2,c
 23512  00B78E  D7DB               	goto	l2920
 23513  00B790  0A07               	xorlw	7	; case 132
 23514  00B792  B4D8               	btfsc	status,2,c
 23515  00B794  D7E9               	goto	l2923
 23516                           
 23517                           ; BSR set to: 1
 23518                           ;encoder.c: 553: }
 23519                           
 23520                           ; BSR set to: 1
 23521                           ;encoder.c: 552: break;
 23522  00B796  D025               	goto	l2816
 23523  00B798                     l2781:
 23524                           
 23525                           ; BSR set to: 1
 23526                           
 23527                           ; BSR set to: 1
 23528  00B798  5174               	movf	(_os+15)& (0+255),w,b	;volatile
 23529  00B79A  0BF0               	andlw	240
 23530  00B79C  0100               	movlb	0	; () banked
 23531  00B79E  6FA8               	movwf	??_encoder_statemachine& (0+255),b
 23532  00B7A0  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 23533                           
 23534                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23535                           ; Switch size 1, requested type "space"
 23536                           ; Number of cases is 1, Range of values is 0 to 0
 23537                           ; switch strategies available:
 23538                           ; Name         Instructions Cycles
 23539                           ; simple_byte            4     3 (average)
 23540                           ;	Chosen strategy is simple_byte
 23541  00B7A2  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 23542  00B7A4  0A00               	xorlw	0	; case 0
 23543  00B7A6  A4D8               	btfss	status,2,c
 23544  00B7A8  D01C               	goto	l2816
 23545                           
 23546                           ; BSR set to: 0
 23547                           ; Switch size 1, requested type "space"
 23548                           ; Number of cases is 9, Range of values is 0 to 128
 23549                           ; switch strategies available:
 23550                           ; Name         Instructions Cycles
 23551                           ; simple_byte           28    15 (average)
 23552                           ;	Chosen strategy is simple_byte
 23553  00B7AA  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 23554  00B7AC  0A00               	xorlw	0	; case 0
 23555  00B7AE  B4D8               	btfsc	status,2,c
 23556  00B7B0  D51F               	goto	l2783
 23557  00B7B2  0A10               	xorlw	16	; case 16
 23558  00B7B4  B4D8               	btfsc	status,2,c
 23559  00B7B6  D55C               	goto	l2818
 23560  00B7B8  0A30               	xorlw	48	; case 32
 23561  00B7BA  B4D8               	btfsc	status,2,c
 23562  00B7BC  D603               	goto	l2834
 23563  00B7BE  0A10               	xorlw	16	; case 48
 23564  00B7C0  B4D8               	btfsc	status,2,c
 23565  00B7C2  D62D               	goto	l2849
 23566  00B7C4  0A70               	xorlw	112	; case 64
 23567  00B7C6  B4D8               	btfsc	status,2,c
 23568  00B7C8  D663               	goto	l2864
 23569  00B7CA  0A10               	xorlw	16	; case 80
 23570  00B7CC  B4D8               	btfsc	status,2,c
 23571  00B7CE  D699               	goto	l2870
 23572  00B7D0  0A30               	xorlw	48	; case 96
 23573  00B7D2  B4D8               	btfsc	status,2,c
 23574  00B7D4  D6F9               	goto	l2885
 23575  00B7D6  0A10               	xorlw	16	; case 112
 23576  00B7D8  B4D8               	btfsc	status,2,c
 23577  00B7DA  D762               	goto	l2905
 23578  00B7DC  0AF0               	xorlw	240	; case 128
 23579  00B7DE  B4D8               	btfsc	status,2,c
 23580  00B7E0  D780               	goto	l2908
 23581  00B7E2                     l2816:
 23582                           
 23583                           ;encoder.c: 556: os.encoder1Count = 0;
 23584                           
 23585                           ; BSR set to: 0
 23586  00B7E2  0E00               	movlw	0
 23587  00B7E4  0101               	movlb	1	; () banked
 23588  00B7E6  6F68               	movwf	(_os+3)& (0+255),b	;volatile
 23589                           
 23590                           ;encoder.c: 557: os.encoder2Count = 0;
 23591  00B7E8  0E00               	movlw	0
 23592  00B7EA  6F6A               	movwf	(_os+5)& (0+255),b	;volatile
 23593                           
 23594                           ;encoder.c: 558: os.button1 = 0;
 23595  00B7EC  0E00               	movlw	0
 23596  00B7EE  6F69               	movwf	(_os+4)& (0+255),b	;volatile
 23597                           
 23598                           ;encoder.c: 559: os.button2 = 0;
 23599  00B7F0  0E00               	movlw	0
 23600  00B7F2  6F6B               	movwf	(_os+6)& (0+255),b	;volatile
 23601                           
 23602                           ; BSR set to: 1
 23603  00B7F4  0012               	return		;funcret
 23604  00B7F6                     __end_of_encoder_statemachine:
 23605                           	opt stack 0
 23606                           tblptru	equ	0xFF8
 23607                           tblptrh	equ	0xFF7
 23608                           tblptrl	equ	0xFF6
 23609                           tablat	equ	0xFF5
 23610                           prodh	equ	0xFF4
 23611                           prodl	equ	0xFF3
 23612                           intcon	equ	0xFF2
 23613                           postinc0	equ	0xFEE
 23614                           wreg	equ	0xFE8
 23615                           indf1	equ	0xFE7
 23616                           postinc1	equ	0xFE6
 23617                           postdec1	equ	0xFE5
 23618                           plusw1	equ	0xFE3
 23619                           fsr1h	equ	0xFE2
 23620                           fsr1l	equ	0xFE1
 23621                           indf2	equ	0xFDF
 23622                           postinc2	equ	0xFDE
 23623                           postdec2	equ	0xFDD
 23624                           plusw2	equ	0xFDB
 23625                           fsr2h	equ	0xFDA
 23626                           fsr2l	equ	0xFD9
 23627                           status	equ	0xFD8
 23628                           
 23629 ;; *************** function _motor_move_degrees_int *****************
 23630 ;; Defined at:
 23631 ;;		line 1023 in file "motor.c"
 23632 ;; Parameters:    Size  Location     Type
 23633 ;;  direction       1    wreg     enum E6622
 23634 ;;  distance        2   57[BANK0 ] unsigned int 
 23635 ;;  speed           2   59[BANK0 ] unsigned int 
 23636 ;;  overshoot       1   61[BANK0 ] enum E6635
 23637 ;; Auto vars:     Size  Location     Type
 23638 ;;  direction       1   66[BANK0 ] enum E6622
 23639 ;;  distance_in_    4   62[BANK0 ] unsigned long 
 23640 ;; Return value:  Size  Location     Type
 23641 ;;                  1    wreg      enum E6639
 23642 ;; Registers used:
 23643 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23644 ;; Tracked objects:
 23645 ;;		On entry : 0/0
 23646 ;;		On exit  : 0/0
 23647 ;;		Unchanged: 0/0
 23648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23649 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23650 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23652 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23653 ;;Total ram usage:       10 bytes
 23654 ;; Hardware stack levels used:    1
 23655 ;; Hardware stack levels required when called:   13
 23656 ;; This function calls:
 23657 ;;		__motor_move_steps
 23658 ;;		__motor_steps_from_degrees_int
 23659 ;; This function is called by:
 23660 ;;		_encoder_statemachine
 23661 ;; This function uses a non-reentrant model
 23662 ;;
 23663                           
 23664                           	psect	text92
 23665  0154B4                     __ptext92:
 23666                           	opt stack 0
 23667  0154B4                     _motor_move_degrees_int:
 23668                           	opt stack 16
 23669                           
 23670                           ; BSR set to: 1
 23671                           ;incstack = 0
 23672                           ;motor_move_degrees_int@direction stored from wreg
 23673  0154B4  0100               	movlb	0	; () banked
 23674  0154B6  6FA2               	movwf	motor_move_degrees_int@direction& (0+255),b
 23675                           
 23676                           ;motor.c: 1026: uint32_t distance_in_steps = _motor_steps_from_degrees_int(distance);
 23677  0154B8  C099  F091         	movff	motor_move_degrees_int@distance,__motor_steps_from_degrees_int@degrees
 23678  0154BC  C09A  F092         	movff	motor_move_degrees_int@distance+1,__motor_steps_from_degrees_int@degrees+1
 23679  0154C0  EC60  F086         	call	__motor_steps_from_degrees_int	;wreg free
 23680  0154C4  C091  F09E         	movff	?__motor_steps_from_degrees_int,motor_move_degrees_int@distance_in_steps
 23681  0154C8  C092  F09F         	movff	?__motor_steps_from_degrees_int+1,motor_move_degrees_int@distance_in_steps+1
 23682  0154CC  C093  F0A0         	movff	?__motor_steps_from_degrees_int+2,motor_move_degrees_int@distance_in_steps+2
 23683  0154D0  C094  F0A1         	movff	?__motor_steps_from_degrees_int+3,motor_move_degrees_int@distance_in_steps+3
 23684                           
 23685                           ;motor.c: 1029: return _motor_move_steps(direction, distance_in_steps, speed, overshoot,
      +                           MOTOR_MOVE_TYPE_NORMAL);;	Return value of _motor_move_degrees_int is never used
 23686  0154D4  C09E  F07D         	movff	motor_move_degrees_int@distance_in_steps,__motor_move_steps@distance_in_steps
 23687  0154D8  C09F  F07E         	movff	motor_move_degrees_int@distance_in_steps+1,__motor_move_steps@distance_in_steps+1
 23688  0154DC  C0A0  F07F         	movff	motor_move_degrees_int@distance_in_steps+2,__motor_move_steps@distance_in_steps+2
 23689  0154E0  C0A1  F080         	movff	motor_move_degrees_int@distance_in_steps+3,__motor_move_steps@distance_in_steps+3
 23690  0154E4  C09B  F081         	movff	motor_move_degrees_int@speed,__motor_move_steps@speed
 23691  0154E8  C09C  F082         	movff	motor_move_degrees_int@speed+1,__motor_move_steps@speed+1
 23692  0154EC  C09D  F083         	movff	motor_move_degrees_int@overshoot,__motor_move_steps@overshoot
 23693  0154F0  0E00               	movlw	0
 23694  0154F2  0100               	movlb	0	; () banked
 23695  0154F4  6F84               	movwf	__motor_move_steps@type& (0+255),b
 23696  0154F6  51A2               	movf	motor_move_degrees_int@direction& (0+255),w,b
 23697  0154F8  EC2E  F077         	call	__motor_move_steps
 23698  0154FC  0012               	return	
 23699  0154FE                     __end_of_motor_move_degrees_int:
 23700                           	opt stack 0
 23701                           tblptru	equ	0xFF8
 23702                           tblptrh	equ	0xFF7
 23703                           tblptrl	equ	0xFF6
 23704                           tablat	equ	0xFF5
 23705                           prodh	equ	0xFF4
 23706                           prodl	equ	0xFF3
 23707                           intcon	equ	0xFF2
 23708                           postinc0	equ	0xFEE
 23709                           wreg	equ	0xFE8
 23710                           indf1	equ	0xFE7
 23711                           postinc1	equ	0xFE6
 23712                           postdec1	equ	0xFE5
 23713                           plusw1	equ	0xFE3
 23714                           fsr1h	equ	0xFE2
 23715                           fsr1l	equ	0xFE1
 23716                           indf2	equ	0xFDF
 23717                           postinc2	equ	0xFDE
 23718                           postdec2	equ	0xFDD
 23719                           plusw2	equ	0xFDB
 23720                           fsr2h	equ	0xFDA
 23721                           fsr2l	equ	0xFD9
 23722                           status	equ	0xFD8
 23723                           
 23724 ;; *************** function __motor_steps_from_degrees_int *****************
 23725 ;; Defined at:
 23726 ;;		line 426 in file "motor.c"
 23727 ;; Parameters:    Size  Location     Type
 23728 ;;  degrees         2   49[BANK0 ] unsigned int 
 23729 ;; Auto vars:     Size  Location     Type
 23730 ;;  temp            4   53[BANK0 ] unsigned int 
 23731 ;; Return value:  Size  Location     Type
 23732 ;;                  4   49[BANK0 ] unsigned long 
 23733 ;; Registers used:
 23734 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 23735 ;; Tracked objects:
 23736 ;;		On entry : 0/0
 23737 ;;		On exit  : 0/0
 23738 ;;		Unchanged: 0/0
 23739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23740 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23741 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23743 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23744 ;;Total ram usage:        8 bytes
 23745 ;; Hardware stack levels used:    1
 23746 ;; Hardware stack levels required when called:   11
 23747 ;; This function calls:
 23748 ;;		___fladd
 23749 ;;		___fldiv
 23750 ;;		___flmul
 23751 ;;		___fltol
 23752 ;;		___xxtofl
 23753 ;; This function is called by:
 23754 ;;		_motor_move_degrees_int
 23755 ;;		_motor_goto_degrees_int
 23756 ;; This function uses a non-reentrant model
 23757 ;;
 23758                           
 23759                           	psect	text93
 23760  010CC0                     __ptext93:
 23761                           	opt stack 0
 23762  010CC0                     __motor_steps_from_degrees_int:
 23763                           	opt stack 17
 23764                           
 23765                           ;motor.c: 428: double temp;;motor.c: 431: if(degrees==0)
 23766                           
 23767                           ;incstack = 0
 23768  010CC0  0100               	movlb	0	; () banked
 23769  010CC2  5191               	movf	__motor_steps_from_degrees_int@degrees& (0+255),w,b
 23770  010CC4  1192               	iorwf	(__motor_steps_from_degrees_int@degrees+1)& (0+255),w,b
 23771  010CC6  A4D8               	btfss	status,2,c
 23772  010CC8  D009               	goto	l2517
 23773                           
 23774                           ; BSR set to: 0
 23775                           ;motor.c: 432: {;motor.c: 433: return 0;
 23776  010CCA  0E00               	movlw	0
 23777  010CCC  6F91               	movwf	?__motor_steps_from_degrees_int& (0+255),b
 23778  010CCE  0E00               	movlw	0
 23779  010CD0  6F92               	movwf	(?__motor_steps_from_degrees_int+1)& (0+255),b
 23780  010CD2  0E00               	movlw	0
 23781  010CD4  6F93               	movwf	(?__motor_steps_from_degrees_int+2)& (0+255),b
 23782  010CD6  0E00               	movlw	0
 23783  010CD8  6F94               	movwf	(?__motor_steps_from_degrees_int+3)& (0+255),b
 23784                           
 23785                           ; BSR set to: 0
 23786  010CDA  0012               	return	
 23787  010CDC                     l2517:
 23788                           
 23789                           ; BSR set to: 0
 23790                           ;motor.c: 434: };motor.c: 437: temp = (float) degrees;
 23791                           
 23792                           ; BSR set to: 0
 23793  010CDC  C091  F06A         	movff	__motor_steps_from_degrees_int@degrees,___xxtofl@val
 23794  010CE0  C092  F06B         	movff	__motor_steps_from_degrees_int@degrees+1,___xxtofl@val+1
 23795  010CE4  6B6C               	clrf	(___xxtofl@val+2)& (0+255),b
 23796  010CE6  6B6D               	clrf	(___xxtofl@val+3)& (0+255),b
 23797  010CE8  0E00               	movlw	0
 23798  010CEA  EC24  F082         	call	___xxtofl
 23799  010CEE  C06A  F095         	movff	?___xxtofl,__motor_steps_from_degrees_int@temp
 23800  010CF2  C06B  F096         	movff	?___xxtofl+1,__motor_steps_from_degrees_int@temp+1
 23801  010CF6  C06C  F097         	movff	?___xxtofl+2,__motor_steps_from_degrees_int@temp+2
 23802  010CFA  C06D  F098         	movff	?___xxtofl+3,__motor_steps_from_degrees_int@temp+3
 23803                           
 23804                           ;motor.c: 440: temp *= config.full_circle_in_steps;
 23805  010CFE  C095  F078         	movff	__motor_steps_from_degrees_int@temp,___flmul@b
 23806  010D02  C096  F079         	movff	__motor_steps_from_degrees_int@temp+1,___flmul@b+1
 23807  010D06  C097  F07A         	movff	__motor_steps_from_degrees_int@temp+2,___flmul@b+2
 23808  010D0A  C098  F07B         	movff	__motor_steps_from_degrees_int@temp+3,___flmul@b+3
 23809  010D0E  C196  F06A         	movff	_config,___xxtofl@val
 23810  010D12  C197  F06B         	movff	_config+1,___xxtofl@val+1
 23811  010D16  C198  F06C         	movff	_config+2,___xxtofl@val+2
 23812  010D1A  C199  F06D         	movff	_config+3,___xxtofl@val+3
 23813  010D1E  0E00               	movlw	0
 23814  010D20  EC24  F082         	call	___xxtofl
 23815  010D24  C06A  F07C         	movff	?___xxtofl,___flmul@a
 23816  010D28  C06B  F07D         	movff	?___xxtofl+1,___flmul@a+1
 23817  010D2C  C06C  F07E         	movff	?___xxtofl+2,___flmul@a+2
 23818  010D30  C06D  F07F         	movff	?___xxtofl+3,___flmul@a+3
 23819  010D34  ECDB  F064         	call	___flmul	;wreg free
 23820  010D38  C078  F095         	movff	?___flmul,__motor_steps_from_degrees_int@temp
 23821  010D3C  C079  F096         	movff	?___flmul+1,__motor_steps_from_degrees_int@temp+1
 23822  010D40  C07A  F097         	movff	?___flmul+2,__motor_steps_from_degrees_int@temp+2
 23823  010D44  C07B  F098         	movff	?___flmul+3,__motor_steps_from_degrees_int@temp+3
 23824                           
 23825                           ;motor.c: 441: temp /= 36000.0;
 23826  010D48  C095  F078         	movff	__motor_steps_from_degrees_int@temp,___fldiv@b
 23827  010D4C  C096  F079         	movff	__motor_steps_from_degrees_int@temp+1,___fldiv@b+1
 23828  010D50  C097  F07A         	movff	__motor_steps_from_degrees_int@temp+2,___fldiv@b+2
 23829  010D54  C098  F07B         	movff	__motor_steps_from_degrees_int@temp+3,___fldiv@b+3
 23830  010D58  0E00               	movlw	0
 23831  010D5A  0100               	movlb	0	; () banked
 23832  010D5C  6F7C               	movwf	___fldiv@a& (0+255),b
 23833  010D5E  0EA0               	movlw	160
 23834  010D60  6F7D               	movwf	(___fldiv@a+1)& (0+255),b
 23835  010D62  0E0C               	movlw	12
 23836  010D64  6F7E               	movwf	(___fldiv@a+2)& (0+255),b
 23837  010D66  0E47               	movlw	71
 23838  010D68  6F7F               	movwf	(___fldiv@a+3)& (0+255),b
 23839  010D6A  EC03  F06B         	call	___fldiv	;wreg free
 23840  010D6E  C078  F095         	movff	?___fldiv,__motor_steps_from_degrees_int@temp
 23841  010D72  C079  F096         	movff	?___fldiv+1,__motor_steps_from_degrees_int@temp+1
 23842  010D76  C07A  F097         	movff	?___fldiv+2,__motor_steps_from_degrees_int@temp+2
 23843  010D7A  C07B  F098         	movff	?___fldiv+3,__motor_steps_from_degrees_int@temp+3
 23844                           
 23845                           ;motor.c: 442: temp += 0.5;
 23846  010D7E  C095  F07C         	movff	__motor_steps_from_degrees_int@temp,___fladd@b
 23847  010D82  C096  F07D         	movff	__motor_steps_from_degrees_int@temp+1,___fladd@b+1
 23848  010D86  C097  F07E         	movff	__motor_steps_from_degrees_int@temp+2,___fladd@b+2
 23849  010D8A  C098  F07F         	movff	__motor_steps_from_degrees_int@temp+3,___fladd@b+3
 23850  010D8E  0E00               	movlw	0
 23851  010D90  0100               	movlb	0	; () banked
 23852  010D92  6F80               	movwf	___fladd@a& (0+255),b
 23853  010D94  0E00               	movlw	0
 23854  010D96  6F81               	movwf	(___fladd@a+1)& (0+255),b
 23855  010D98  0E00               	movlw	0
 23856  010D9A  6F82               	movwf	(___fladd@a+2)& (0+255),b
 23857  010D9C  0E3F               	movlw	63
 23858  010D9E  6F83               	movwf	(___fladd@a+3)& (0+255),b
 23859  010DA0  EC84  F066         	call	___fladd	;wreg free
 23860  010DA4  C07C  F095         	movff	?___fladd,__motor_steps_from_degrees_int@temp
 23861  010DA8  C07D  F096         	movff	?___fladd+1,__motor_steps_from_degrees_int@temp+1
 23862  010DAC  C07E  F097         	movff	?___fladd+2,__motor_steps_from_degrees_int@temp+2
 23863  010DB0  C07F  F098         	movff	?___fladd+3,__motor_steps_from_degrees_int@temp+3
 23864                           
 23865                           ;motor.c: 445: return (uint32_t) temp;
 23866  010DB4  C095  F060         	movff	__motor_steps_from_degrees_int@temp,___fltol@f1
 23867  010DB8  C096  F061         	movff	__motor_steps_from_degrees_int@temp+1,___fltol@f1+1
 23868  010DBC  C097  F062         	movff	__motor_steps_from_degrees_int@temp+2,___fltol@f1+2
 23869  010DC0  C098  F063         	movff	__motor_steps_from_degrees_int@temp+3,___fltol@f1+3
 23870  010DC4  EC81  F093         	call	___fltol	;wreg free
 23871  010DC8  C060  F091         	movff	?___fltol,?__motor_steps_from_degrees_int
 23872  010DCC  C061  F092         	movff	?___fltol+1,?__motor_steps_from_degrees_int+1
 23873  010DD0  C062  F093         	movff	?___fltol+2,?__motor_steps_from_degrees_int+2
 23874  010DD4  C063  F094         	movff	?___fltol+3,?__motor_steps_from_degrees_int+3
 23875  010DD8  0012               	return	
 23876  010DDA                     __end_of__motor_steps_from_degrees_int:
 23877                           	opt stack 0
 23878                           tblptru	equ	0xFF8
 23879                           tblptrh	equ	0xFF7
 23880                           tblptrl	equ	0xFF6
 23881                           tablat	equ	0xFF5
 23882                           prodh	equ	0xFF4
 23883                           prodl	equ	0xFF3
 23884                           intcon	equ	0xFF2
 23885                           postinc0	equ	0xFEE
 23886                           wreg	equ	0xFE8
 23887                           indf1	equ	0xFE7
 23888                           postinc1	equ	0xFE6
 23889                           postdec1	equ	0xFE5
 23890                           plusw1	equ	0xFE3
 23891                           fsr1h	equ	0xFE2
 23892                           fsr1l	equ	0xFE1
 23893                           indf2	equ	0xFDF
 23894                           postinc2	equ	0xFDE
 23895                           postdec2	equ	0xFDD
 23896                           plusw2	equ	0xFDB
 23897                           fsr2h	equ	0xFDA
 23898                           fsr2l	equ	0xFD9
 23899                           status	equ	0xFD8
 23900                           
 23901 ;; *************** function _motor_increase_manual_speed *****************
 23902 ;; Defined at:
 23903 ;;		line 866 in file "motor.c"
 23904 ;; Parameters:    Size  Location     Type
 23905 ;;		None
 23906 ;; Auto vars:     Size  Location     Type
 23907 ;;		None
 23908 ;; Return value:  Size  Location     Type
 23909 ;;                  1    wreg      void 
 23910 ;; Registers used:
 23911 ;;		wreg, status,2, status,0, cstack
 23912 ;; Tracked objects:
 23913 ;;		On entry : 0/0
 23914 ;;		On exit  : 0/0
 23915 ;;		Unchanged: 0/0
 23916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23921 ;;Total ram usage:        0 bytes
 23922 ;; Hardware stack levels used:    1
 23923 ;; Hardware stack levels required when called:   12
 23924 ;; This function calls:
 23925 ;;		_motor_set_manual_speed
 23926 ;; This function is called by:
 23927 ;;		_encoder_statemachine
 23928 ;; This function uses a non-reentrant model
 23929 ;;
 23930                           
 23931                           	psect	text94
 23932  015F2E                     __ptext94:
 23933                           	opt stack 0
 23934  015F2E                     _motor_increase_manual_speed:
 23935                           	opt stack 17
 23936                           
 23937                           ;motor.c: 869: {;motor.c: 870: motor_set_manual_speed(os.manual_speed+1);
 23938                           
 23939                           ;incstack = 0
 23940  015F2E  0E01               	movlw	1
 23941  015F30  0101               	movlb	1	; () banked
 23942  015F32  2589               	addwf	(_os+36)& (0+255),w,b	;volatile
 23943  015F34  0100               	movlb	0	; () banked
 23944  015F36  6F62               	movwf	motor_set_manual_speed@new_speed& (0+255),b
 23945  015F38  0E00               	movlw	0
 23946  015F3A  0101               	movlb	1	; () banked
 23947  015F3C  218A               	addwfc	(_os+37)& (0+255),w,b	;volatile
 23948  015F3E  0100               	movlb	0	; () banked
 23949  015F40  6F63               	movwf	(motor_set_manual_speed@new_speed+1)& (0+255),b
 23950  015F42  ECC7  F0A2         	call	_motor_set_manual_speed	;wreg free
 23951  015F46  0012               	return	
 23952  015F48                     __end_of_motor_increase_manual_speed:
 23953                           	opt stack 0
 23954                           tblptru	equ	0xFF8
 23955                           tblptrh	equ	0xFF7
 23956                           tblptrl	equ	0xFF6
 23957                           tablat	equ	0xFF5
 23958                           prodh	equ	0xFF4
 23959                           prodl	equ	0xFF3
 23960                           intcon	equ	0xFF2
 23961                           postinc0	equ	0xFEE
 23962                           wreg	equ	0xFE8
 23963                           indf1	equ	0xFE7
 23964                           postinc1	equ	0xFE6
 23965                           postdec1	equ	0xFE5
 23966                           plusw1	equ	0xFE3
 23967                           fsr1h	equ	0xFE2
 23968                           fsr1l	equ	0xFE1
 23969                           indf2	equ	0xFDF
 23970                           postinc2	equ	0xFDE
 23971                           postdec2	equ	0xFDD
 23972                           plusw2	equ	0xFDB
 23973                           fsr2h	equ	0xFDA
 23974                           fsr2l	equ	0xFD9
 23975                           status	equ	0xFD8
 23976                           
 23977 ;; *************** function _motor_divide_jump_to_nearest *****************
 23978 ;; Defined at:
 23979 ;;		line 944 in file "motor.c"
 23980 ;; Parameters:    Size  Location     Type
 23981 ;;		None
 23982 ;; Auto vars:     Size  Location     Type
 23983 ;;  divide_posit    4   68[BANK0 ] float 
 23984 ;;  nearest_posi    4   62[BANK0 ] unsigned long 
 23985 ;;  nearest_divi    2   66[BANK0 ] int 
 23986 ;; Return value:  Size  Location     Type
 23987 ;;                  1    wreg      void 
 23988 ;; Registers used:
 23989 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23990 ;; Tracked objects:
 23991 ;;		On entry : 0/0
 23992 ;;		On exit  : 0/0
 23993 ;;		Unchanged: 0/0
 23994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23996 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23998 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23999 ;;Total ram usage:       10 bytes
 24000 ;; Hardware stack levels used:    1
 24001 ;; Hardware stack levels required when called:   14
 24002 ;; This function calls:
 24003 ;;		___fladd
 24004 ;;		___fldiv
 24005 ;;		___flmul
 24006 ;;		___fltol
 24007 ;;		___xxtofl
 24008 ;;		__step_position_from_divide_position
 24009 ;;		_motor_goto_steps
 24010 ;; This function is called by:
 24011 ;;		_encoder_statemachine
 24012 ;; This function uses a non-reentrant model
 24013 ;;
 24014                           
 24015                           	psect	text95
 24016  00F9CC                     __ptext95:
 24017                           	opt stack 0
 24018  00F9CC                     _motor_divide_jump_to_nearest:
 24019                           	opt stack 15
 24020                           
 24021                           ;motor.c: 946: float divide_position_float;;motor.c: 947: int16_t nearest_divide_positio
      +                          n;;motor.c: 948: uint32_t nearest_position_in_steps;;motor.c: 950: divide_position_float
      +                           = (float) os.current_position_in_steps;
 24022                           
 24023                           ;incstack = 0
 24024  00F9CC  C16C  F06A         	movff	_os+7,___xxtofl@val	;volatile
 24025  00F9D0  C16D  F06B         	movff	_os+8,___xxtofl@val+1	;volatile
 24026  00F9D4  C16E  F06C         	movff	_os+9,___xxtofl@val+2	;volatile
 24027  00F9D8  C16F  F06D         	movff	_os+10,___xxtofl@val+3	;volatile
 24028  00F9DC  0E00               	movlw	0
 24029  00F9DE  EC24  F082         	call	___xxtofl
 24030  00F9E2  C06A  F0A4         	movff	?___xxtofl,motor_divide_jump_to_nearest@divide_position_float
 24031  00F9E6  C06B  F0A5         	movff	?___xxtofl+1,motor_divide_jump_to_nearest@divide_position_float+1
 24032  00F9EA  C06C  F0A6         	movff	?___xxtofl+2,motor_divide_jump_to_nearest@divide_position_float+2
 24033  00F9EE  C06D  F0A7         	movff	?___xxtofl+3,motor_divide_jump_to_nearest@divide_position_float+3
 24034                           
 24035                           ;motor.c: 951: divide_position_float *= (float) os.division;
 24036  00F9F2  C0A4  F078         	movff	motor_divide_jump_to_nearest@divide_position_float,___flmul@b
 24037  00F9F6  C0A5  F079         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___flmul@b+1
 24038  00F9FA  C0A6  F07A         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___flmul@b+2
 24039  00F9FE  C0A7  F07B         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___flmul@b+3
 24040  00FA02  EE21  F079         	lfsr	2,_os+20	;volatile
 24041  00FA06  CFDE F06A          	movff	postinc2,___xxtofl@val
 24042  00FA0A  CFDD F06B          	movff	postdec2,___xxtofl@val+1
 24043  00FA0E  0100               	movlb	0	; () banked
 24044  00FA10  0E00               	movlw	0
 24045  00FA12  BF6B               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 24046  00FA14  0EFF               	movlw	-1
 24047  00FA16  6F6C               	movwf	(___xxtofl@val+2)& (0+255),b
 24048  00FA18  6F6D               	movwf	(___xxtofl@val+3)& (0+255),b
 24049  00FA1A  0E01               	movlw	1
 24050  00FA1C  EC24  F082         	call	___xxtofl
 24051  00FA20  C06A  F07C         	movff	?___xxtofl,___flmul@a
 24052  00FA24  C06B  F07D         	movff	?___xxtofl+1,___flmul@a+1
 24053  00FA28  C06C  F07E         	movff	?___xxtofl+2,___flmul@a+2
 24054  00FA2C  C06D  F07F         	movff	?___xxtofl+3,___flmul@a+3
 24055  00FA30  ECDB  F064         	call	___flmul	;wreg free
 24056  00FA34  C078  F0A4         	movff	?___flmul,motor_divide_jump_to_nearest@divide_position_float
 24057  00FA38  C079  F0A5         	movff	?___flmul+1,motor_divide_jump_to_nearest@divide_position_float+1
 24058  00FA3C  C07A  F0A6         	movff	?___flmul+2,motor_divide_jump_to_nearest@divide_position_float+2
 24059  00FA40  C07B  F0A7         	movff	?___flmul+3,motor_divide_jump_to_nearest@divide_position_float+3
 24060                           
 24061                           ;motor.c: 952: divide_position_float /= (float) config.full_circle_in_steps;
 24062  00FA44  C0A4  F078         	movff	motor_divide_jump_to_nearest@divide_position_float,___fldiv@b
 24063  00FA48  C0A5  F079         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fldiv@b+1
 24064  00FA4C  C0A6  F07A         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fldiv@b+2
 24065  00FA50  C0A7  F07B         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fldiv@b+3
 24066  00FA54  C196  F06A         	movff	_config,___xxtofl@val
 24067  00FA58  C197  F06B         	movff	_config+1,___xxtofl@val+1
 24068  00FA5C  C198  F06C         	movff	_config+2,___xxtofl@val+2
 24069  00FA60  C199  F06D         	movff	_config+3,___xxtofl@val+3
 24070  00FA64  0E00               	movlw	0
 24071  00FA66  EC24  F082         	call	___xxtofl
 24072  00FA6A  C06A  F07C         	movff	?___xxtofl,___fldiv@a
 24073  00FA6E  C06B  F07D         	movff	?___xxtofl+1,___fldiv@a+1
 24074  00FA72  C06C  F07E         	movff	?___xxtofl+2,___fldiv@a+2
 24075  00FA76  C06D  F07F         	movff	?___xxtofl+3,___fldiv@a+3
 24076  00FA7A  EC03  F06B         	call	___fldiv	;wreg free
 24077  00FA7E  C078  F0A4         	movff	?___fldiv,motor_divide_jump_to_nearest@divide_position_float
 24078  00FA82  C079  F0A5         	movff	?___fldiv+1,motor_divide_jump_to_nearest@divide_position_float+1
 24079  00FA86  C07A  F0A6         	movff	?___fldiv+2,motor_divide_jump_to_nearest@divide_position_float+2
 24080  00FA8A  C07B  F0A7         	movff	?___fldiv+3,motor_divide_jump_to_nearest@divide_position_float+3
 24081                           
 24082                           ;motor.c: 953: divide_position_float += 0.5;
 24083  00FA8E  C0A4  F07C         	movff	motor_divide_jump_to_nearest@divide_position_float,___fladd@b
 24084  00FA92  C0A5  F07D         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fladd@b+1
 24085  00FA96  C0A6  F07E         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fladd@b+2
 24086  00FA9A  C0A7  F07F         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fladd@b+3
 24087  00FA9E  0E00               	movlw	0
 24088  00FAA0  0100               	movlb	0	; () banked
 24089  00FAA2  6F80               	movwf	___fladd@a& (0+255),b
 24090  00FAA4  0E00               	movlw	0
 24091  00FAA6  6F81               	movwf	(___fladd@a+1)& (0+255),b
 24092  00FAA8  0E00               	movlw	0
 24093  00FAAA  6F82               	movwf	(___fladd@a+2)& (0+255),b
 24094  00FAAC  0E3F               	movlw	63
 24095  00FAAE  6F83               	movwf	(___fladd@a+3)& (0+255),b
 24096  00FAB0  EC84  F066         	call	___fladd	;wreg free
 24097  00FAB4  C07C  F0A4         	movff	?___fladd,motor_divide_jump_to_nearest@divide_position_float
 24098  00FAB8  C07D  F0A5         	movff	?___fladd+1,motor_divide_jump_to_nearest@divide_position_float+1
 24099  00FABC  C07E  F0A6         	movff	?___fladd+2,motor_divide_jump_to_nearest@divide_position_float+2
 24100  00FAC0  C07F  F0A7         	movff	?___fladd+3,motor_divide_jump_to_nearest@divide_position_float+3
 24101                           
 24102                           ;motor.c: 954: nearest_divide_position = (int16_t) divide_position_float;
 24103  00FAC4  C0A4  F060         	movff	motor_divide_jump_to_nearest@divide_position_float,___fltol@f1
 24104  00FAC8  C0A5  F061         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fltol@f1+1
 24105  00FACC  C0A6  F062         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fltol@f1+2
 24106  00FAD0  C0A7  F063         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fltol@f1+3
 24107  00FAD4  EC81  F093         	call	___fltol	;wreg free
 24108  00FAD8  C060  F0A2         	movff	?___fltol,motor_divide_jump_to_nearest@nearest_divide_position
 24109  00FADC  C061  F0A3         	movff	?___fltol+1,motor_divide_jump_to_nearest@nearest_divide_position+1
 24110                           
 24111                           ;motor.c: 957: nearest_position_in_steps = _step_position_from_divide_position(nearest_d
      +                          ivide_position);
 24112  00FAE0  C0A2  F091         	movff	motor_divide_jump_to_nearest@nearest_divide_position,__step_position_from_divide_
      +                          position@divide_position
 24113  00FAE4  C0A3  F092         	movff	motor_divide_jump_to_nearest@nearest_divide_position+1,__step_position_from_divid
      +                          e_position@divide_position+1
 24114  00FAE8  EC9A  F08E         	call	__step_position_from_divide_position	;wreg free
 24115  00FAEC  C091  F09E         	movff	?__step_position_from_divide_position,motor_divide_jump_to_nearest@nearest_positi
      +                          on_in_steps
 24116  00FAF0  C092  F09F         	movff	?__step_position_from_divide_position+1,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+1
 24117  00FAF4  C093  F0A0         	movff	?__step_position_from_divide_position+2,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+2
 24118  00FAF8  C094  F0A1         	movff	?__step_position_from_divide_position+3,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+3
 24119                           
 24120                           ;motor.c: 960: os.divide_position = nearest_divide_position;
 24121  00FAFC  C0A2  F17C         	movff	motor_divide_jump_to_nearest@nearest_divide_position,_os+23	;volatile
 24122  00FB00  C0A3  F17D         	movff	motor_divide_jump_to_nearest@nearest_divide_position+1,_os+24	;volatile
 24123                           
 24124                           ;motor.c: 961: motor_goto_steps(MOTOR_DIRECTION_SHORTEST, nearest_position_in_steps, 0xF
      +                          FFF, MOTOR_OVERSHOOT_WITH_OVERSHOOT);
 24125  00FB04  C09E  F092         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps,motor_goto_steps@position
 24126  00FB08  C09F  F093         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+1,motor_goto_steps@positio
      +                          n+1
 24127  00FB0C  C0A0  F094         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+2,motor_goto_steps@positio
      +                          n+2
 24128  00FB10  C0A1  F095         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+3,motor_goto_steps@positio
      +                          n+3
 24129  00FB14  0EFF               	movlw	255
 24130  00FB16  0100               	movlb	0	; () banked
 24131  00FB18  6F97               	movwf	(motor_goto_steps@speed+1)& (0+255),b
 24132  00FB1A  6996               	setf	motor_goto_steps@speed& (0+255),b
 24133  00FB1C  0E00               	movlw	0
 24134  00FB1E  6F98               	movwf	motor_goto_steps@overshoot& (0+255),b
 24135  00FB20  0E00               	movlw	0
 24136  00FB22  EC52  F09C         	call	_motor_goto_steps
 24137  00FB26  0012               	return		;funcret
 24138  00FB28                     __end_of_motor_divide_jump_to_nearest:
 24139                           	opt stack 0
 24140                           tblptru	equ	0xFF8
 24141                           tblptrh	equ	0xFF7
 24142                           tblptrl	equ	0xFF6
 24143                           tablat	equ	0xFF5
 24144                           prodh	equ	0xFF4
 24145                           prodl	equ	0xFF3
 24146                           intcon	equ	0xFF2
 24147                           postinc0	equ	0xFEE
 24148                           wreg	equ	0xFE8
 24149                           indf1	equ	0xFE7
 24150                           postinc1	equ	0xFE6
 24151                           postdec1	equ	0xFE5
 24152                           plusw1	equ	0xFE3
 24153                           fsr1h	equ	0xFE2
 24154                           fsr1l	equ	0xFE1
 24155                           indf2	equ	0xFDF
 24156                           postinc2	equ	0xFDE
 24157                           postdec2	equ	0xFDD
 24158                           plusw2	equ	0xFDB
 24159                           fsr2h	equ	0xFDA
 24160                           fsr2l	equ	0xFD9
 24161                           status	equ	0xFD8
 24162                           
 24163 ;; *************** function _motor_divide_jump *****************
 24164 ;; Defined at:
 24165 ;;		line 913 in file "motor.c"
 24166 ;; Parameters:    Size  Location     Type
 24167 ;;		None
 24168 ;; Auto vars:     Size  Location     Type
 24169 ;;  target_posit    4   63[BANK0 ] unsigned long 
 24170 ;;  target_divid    2   67[BANK0 ] int 
 24171 ;; Return value:  Size  Location     Type
 24172 ;;                  1    wreg      void 
 24173 ;; Registers used:
 24174 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24175 ;; Tracked objects:
 24176 ;;		On entry : 0/0
 24177 ;;		On exit  : 0/0
 24178 ;;		Unchanged: 0/0
 24179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24181 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24182 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24183 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24184 ;;Total ram usage:        7 bytes
 24185 ;; Hardware stack levels used:    1
 24186 ;; Hardware stack levels required when called:   14
 24187 ;; This function calls:
 24188 ;;		__step_position_from_divide_position
 24189 ;;		_motor_goto_steps
 24190 ;; This function is called by:
 24191 ;;		_encoder_statemachine
 24192 ;; This function uses a non-reentrant model
 24193 ;;
 24194                           
 24195                           	psect	text96
 24196  012FEA                     __ptext96:
 24197                           	opt stack 0
 24198  012FEA                     _motor_divide_jump:
 24199                           	opt stack 15
 24200                           
 24201                           ;motor.c: 915: int16_t target_divide_position;;motor.c: 916: uint32_t target_position_in
      +                          _steps;;motor.c: 919: if(os.divide_jump_size>0)
 24202                           
 24203                           ;incstack = 0
 24204  012FEA  0101               	movlb	1	; () banked
 24205  012FEC  BF7F               	btfsc	(_os+26)& (0+255),7,b	;volatile
 24206  012FEE  D023               	goto	l2625
 24207  012FF0  517F               	movf	(_os+26)& (0+255),w,b	;volatile
 24208  012FF2  E103               	bnz	u17250
 24209  012FF4  057E               	decf	(_os+25)& (0+255),w,b	;volatile
 24210  012FF6  A0D8               	btfss	status,0,c
 24211  012FF8  D01E               	goto	l2625
 24212  012FFA                     u17250:
 24213                           
 24214                           ; BSR set to: 1
 24215                           ;motor.c: 920: {;motor.c: 921: target_divide_position = os.divide_position + os.divide_j
      +                          ump_size;
 24216  012FFA  517E               	movf	(_os+25)& (0+255),w,b	;volatile
 24217  012FFC  257C               	addwf	(_os+23)& (0+255),w,b	;volatile
 24218  012FFE  0100               	movlb	0	; () banked
 24219  013000  6FA3               	movwf	motor_divide_jump@target_divide_position& (0+255),b
 24220  013002  0101               	movlb	1	; () banked
 24221  013004  517F               	movf	(_os+26)& (0+255),w,b	;volatile
 24222  013006  217D               	addwfc	(_os+24)& (0+255),w,b	;volatile
 24223  013008  0100               	movlb	0	; () banked
 24224  01300A  6FA4               	movwf	(motor_divide_jump@target_divide_position+1)& (0+255),b
 24225                           
 24226                           ;motor.c: 922: if(target_divide_position>=os.division)
 24227  01300C  0101               	movlb	1	; () banked
 24228  01300E  5179               	movf	(_os+20)& (0+255),w,b	;volatile
 24229  013010  0100               	movlb	0	; () banked
 24230  013012  5DA3               	subwf	motor_divide_jump@target_divide_position& (0+255),w,b
 24231  013014  51A4               	movf	(motor_divide_jump@target_divide_position+1)& (0+255),w,b
 24232  013016  0A80               	xorlw	128
 24233  013018  6F9E               	movwf	??_motor_divide_jump& (0+255),b
 24234  01301A  0101               	movlb	1	; () banked
 24235  01301C  517A               	movf	(_os+21)& (0+255),w,b	;volatile
 24236  01301E  0A80               	xorlw	128
 24237  013020  0100               	movlb	0	; () banked
 24238  013022  599E               	subwfb	??_motor_divide_jump& (0+255),w,b
 24239  013024  A0D8               	btfss	status,0,c
 24240  013026  D019               	goto	l2628
 24241                           
 24242                           ; BSR set to: 0
 24243                           ;motor.c: 923: {;motor.c: 924: target_divide_position -= os.division;
 24244  013028  EE21  F079         	lfsr	2,_os+20	;volatile
 24245  01302C  50DE               	movf	postinc2,w,c
 24246  01302E  5FA3               	subwf	motor_divide_jump@target_divide_position& (0+255),f,b
 24247  013030  50DD               	movf	postdec2,w,c
 24248  013032  5BA4               	subwfb	(motor_divide_jump@target_divide_position+1)& (0+255),f,b
 24249                           
 24250                           ; BSR set to: 0
 24251                           ;motor.c: 925: };motor.c: 926: }
 24252  013034  D012               	goto	l2628
 24253  013036                     l2625:
 24254                           
 24255                           ;motor.c: 927: else;motor.c: 928: {;motor.c: 929: target_divide_position = os.divide_pos
      +                          ition + os.divide_jump_size;
 24256                           
 24257                           ; BSR set to: 0
 24258  013036  0101               	movlb	1	; () banked
 24259  013038  517E               	movf	(_os+25)& (0+255),w,b	;volatile
 24260  01303A  257C               	addwf	(_os+23)& (0+255),w,b	;volatile
 24261  01303C  0100               	movlb	0	; () banked
 24262  01303E  6FA3               	movwf	motor_divide_jump@target_divide_position& (0+255),b
 24263  013040  0101               	movlb	1	; () banked
 24264  013042  517F               	movf	(_os+26)& (0+255),w,b	;volatile
 24265  013044  217D               	addwfc	(_os+24)& (0+255),w,b	;volatile
 24266  013046  0100               	movlb	0	; () banked
 24267  013048  6FA4               	movwf	(motor_divide_jump@target_divide_position+1)& (0+255),b
 24268                           
 24269                           ;motor.c: 930: if(target_divide_position<0)
 24270  01304A  AFA4               	btfss	(motor_divide_jump@target_divide_position+1)& (0+255),7,b
 24271  01304C  D006               	goto	l2628
 24272                           
 24273                           ; BSR set to: 0
 24274                           ;motor.c: 931: {;motor.c: 932: target_divide_position += os.division;
 24275  01304E  EE21  F079         	lfsr	2,_os+20	;volatile
 24276  013052  50DE               	movf	postinc2,w,c
 24277  013054  27A3               	addwf	motor_divide_jump@target_divide_position& (0+255),f,b
 24278  013056  50DD               	movf	postdec2,w,c
 24279  013058  23A4               	addwfc	(motor_divide_jump@target_divide_position+1)& (0+255),f,b
 24280  01305A                     l2628:
 24281                           
 24282                           ; BSR set to: 0
 24283                           ;motor.c: 933: };motor.c: 934: };motor.c: 937: target_position_in_steps = _step_position
      +                          _from_divide_position(target_divide_position);
 24284                           
 24285                           ; BSR set to: 0
 24286                           
 24287                           ; BSR set to: 0
 24288  01305A  C0A3  F091         	movff	motor_divide_jump@target_divide_position,__step_position_from_divide_position@div
      +                          ide_position
 24289  01305E  C0A4  F092         	movff	motor_divide_jump@target_divide_position+1,__step_position_from_divide_position@d
      +                          ivide_position+1
 24290  013062  EC9A  F08E         	call	__step_position_from_divide_position	;wreg free
 24291  013066  C091  F09F         	movff	?__step_position_from_divide_position,motor_divide_jump@target_position_in_steps
 24292  01306A  C092  F0A0         	movff	?__step_position_from_divide_position+1,motor_divide_jump@target_position_in_step
      +                          s+1
 24293  01306E  C093  F0A1         	movff	?__step_position_from_divide_position+2,motor_divide_jump@target_position_in_step
      +                          s+2
 24294  013072  C094  F0A2         	movff	?__step_position_from_divide_position+3,motor_divide_jump@target_position_in_step
      +                          s+3
 24295                           
 24296                           ;motor.c: 940: os.divide_position = target_divide_position;
 24297  013076  C0A3  F17C         	movff	motor_divide_jump@target_divide_position,_os+23	;volatile
 24298  01307A  C0A4  F17D         	movff	motor_divide_jump@target_divide_position+1,_os+24	;volatile
 24299                           
 24300                           ;motor.c: 941: motor_goto_steps(MOTOR_DIRECTION_SHORTEST, target_position_in_steps, 0xFF
      +                          FF, MOTOR_OVERSHOOT_WITH_OVERSHOOT);
 24301  01307E  C09F  F092         	movff	motor_divide_jump@target_position_in_steps,motor_goto_steps@position
 24302  013082  C0A0  F093         	movff	motor_divide_jump@target_position_in_steps+1,motor_goto_steps@position+1
 24303  013086  C0A1  F094         	movff	motor_divide_jump@target_position_in_steps+2,motor_goto_steps@position+2
 24304  01308A  C0A2  F095         	movff	motor_divide_jump@target_position_in_steps+3,motor_goto_steps@position+3
 24305  01308E  0EFF               	movlw	255
 24306  013090  0100               	movlb	0	; () banked
 24307  013092  6F97               	movwf	(motor_goto_steps@speed+1)& (0+255),b
 24308  013094  6996               	setf	motor_goto_steps@speed& (0+255),b
 24309  013096  0E00               	movlw	0
 24310  013098  6F98               	movwf	motor_goto_steps@overshoot& (0+255),b
 24311  01309A  0E00               	movlw	0
 24312  01309C  EC52  F09C         	call	_motor_goto_steps
 24313  0130A0  0012               	return		;funcret
 24314  0130A2                     __end_of_motor_divide_jump:
 24315                           	opt stack 0
 24316                           tblptru	equ	0xFF8
 24317                           tblptrh	equ	0xFF7
 24318                           tblptrl	equ	0xFF6
 24319                           tablat	equ	0xFF5
 24320                           prodh	equ	0xFF4
 24321                           prodl	equ	0xFF3
 24322                           intcon	equ	0xFF2
 24323                           postinc0	equ	0xFEE
 24324                           wreg	equ	0xFE8
 24325                           indf1	equ	0xFE7
 24326                           postinc1	equ	0xFE6
 24327                           postdec1	equ	0xFE5
 24328                           plusw1	equ	0xFE3
 24329                           fsr1h	equ	0xFE2
 24330                           fsr1l	equ	0xFE1
 24331                           indf2	equ	0xFDF
 24332                           postinc2	equ	0xFDE
 24333                           postdec2	equ	0xFDD
 24334                           plusw2	equ	0xFDB
 24335                           fsr2h	equ	0xFDA
 24336                           fsr2l	equ	0xFD9
 24337                           status	equ	0xFD8
 24338                           
 24339 ;; *************** function __step_position_from_divide_position *****************
 24340 ;; Defined at:
 24341 ;;		line 581 in file "motor.c"
 24342 ;; Parameters:    Size  Location     Type
 24343 ;;  divide_posit    2   49[BANK0 ] int 
 24344 ;; Auto vars:     Size  Location     Type
 24345 ;;  target_posit    4   53[BANK0 ] float 
 24346 ;; Return value:  Size  Location     Type
 24347 ;;                  4   49[BANK0 ] unsigned long 
 24348 ;; Registers used:
 24349 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24350 ;; Tracked objects:
 24351 ;;		On entry : 0/0
 24352 ;;		On exit  : 0/0
 24353 ;;		Unchanged: 0/0
 24354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24355 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24356 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24358 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24359 ;;Total ram usage:        8 bytes
 24360 ;; Hardware stack levels used:    1
 24361 ;; Hardware stack levels required when called:   11
 24362 ;; This function calls:
 24363 ;;		___fldiv
 24364 ;;		___flmul
 24365 ;;		___fltol
 24366 ;;		___xxtofl
 24367 ;; This function is called by:
 24368 ;;		_motor_divide_jump
 24369 ;;		_motor_divide_jump_to_nearest
 24370 ;; This function uses a non-reentrant model
 24371 ;;
 24372                           
 24373                           	psect	text97
 24374  011D34                     __ptext97:
 24375                           	opt stack 0
 24376  011D34                     __step_position_from_divide_position:
 24377                           	opt stack 17
 24378                           
 24379                           ;motor.c: 583: float target_position;;motor.c: 586: target_position = (float) config.ful
      +                          l_circle_in_steps;
 24380                           
 24381                           ;incstack = 0
 24382  011D34  C196  F06A         	movff	_config,___xxtofl@val
 24383  011D38  C197  F06B         	movff	_config+1,___xxtofl@val+1
 24384  011D3C  C198  F06C         	movff	_config+2,___xxtofl@val+2
 24385  011D40  C199  F06D         	movff	_config+3,___xxtofl@val+3
 24386  011D44  0E00               	movlw	0
 24387  011D46  EC24  F082         	call	___xxtofl
 24388  011D4A  C06A  F095         	movff	?___xxtofl,__step_position_from_divide_position@target_position
 24389  011D4E  C06B  F096         	movff	?___xxtofl+1,__step_position_from_divide_position@target_position+1
 24390  011D52  C06C  F097         	movff	?___xxtofl+2,__step_position_from_divide_position@target_position+2
 24391  011D56  C06D  F098         	movff	?___xxtofl+3,__step_position_from_divide_position@target_position+3
 24392                           
 24393                           ;motor.c: 587: target_position *= (float) divide_position;
 24394  011D5A  C095  F078         	movff	__step_position_from_divide_position@target_position,___flmul@b
 24395  011D5E  C096  F079         	movff	__step_position_from_divide_position@target_position+1,___flmul@b+1
 24396  011D62  C097  F07A         	movff	__step_position_from_divide_position@target_position+2,___flmul@b+2
 24397  011D66  C098  F07B         	movff	__step_position_from_divide_position@target_position+3,___flmul@b+3
 24398  011D6A  C091  F06A         	movff	__step_position_from_divide_position@divide_position,___xxtofl@val
 24399  011D6E  C092  F06B         	movff	__step_position_from_divide_position@divide_position+1,___xxtofl@val+1
 24400  011D72  0100               	movlb	0	; () banked
 24401  011D74  0E00               	movlw	0
 24402  011D76  BF6B               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 24403  011D78  0EFF               	movlw	-1
 24404  011D7A  6F6C               	movwf	(___xxtofl@val+2)& (0+255),b
 24405  011D7C  6F6D               	movwf	(___xxtofl@val+3)& (0+255),b
 24406  011D7E  0E01               	movlw	1
 24407  011D80  EC24  F082         	call	___xxtofl
 24408  011D84  C06A  F07C         	movff	?___xxtofl,___flmul@a
 24409  011D88  C06B  F07D         	movff	?___xxtofl+1,___flmul@a+1
 24410  011D8C  C06C  F07E         	movff	?___xxtofl+2,___flmul@a+2
 24411  011D90  C06D  F07F         	movff	?___xxtofl+3,___flmul@a+3
 24412  011D94  ECDB  F064         	call	___flmul	;wreg free
 24413  011D98  C078  F095         	movff	?___flmul,__step_position_from_divide_position@target_position
 24414  011D9C  C079  F096         	movff	?___flmul+1,__step_position_from_divide_position@target_position+1
 24415  011DA0  C07A  F097         	movff	?___flmul+2,__step_position_from_divide_position@target_position+2
 24416  011DA4  C07B  F098         	movff	?___flmul+3,__step_position_from_divide_position@target_position+3
 24417                           
 24418                           ;motor.c: 588: target_position /= (float) os.division;
 24419  011DA8  C095  F078         	movff	__step_position_from_divide_position@target_position,___fldiv@b
 24420  011DAC  C096  F079         	movff	__step_position_from_divide_position@target_position+1,___fldiv@b+1
 24421  011DB0  C097  F07A         	movff	__step_position_from_divide_position@target_position+2,___fldiv@b+2
 24422  011DB4  C098  F07B         	movff	__step_position_from_divide_position@target_position+3,___fldiv@b+3
 24423  011DB8  EE21  F079         	lfsr	2,_os+20	;volatile
 24424  011DBC  CFDE F06A          	movff	postinc2,___xxtofl@val
 24425  011DC0  CFDD F06B          	movff	postdec2,___xxtofl@val+1
 24426  011DC4  0100               	movlb	0	; () banked
 24427  011DC6  0E00               	movlw	0
 24428  011DC8  BF6B               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 24429  011DCA  0EFF               	movlw	-1
 24430  011DCC  6F6C               	movwf	(___xxtofl@val+2)& (0+255),b
 24431  011DCE  6F6D               	movwf	(___xxtofl@val+3)& (0+255),b
 24432  011DD0  0E01               	movlw	1
 24433  011DD2  EC24  F082         	call	___xxtofl
 24434  011DD6  C06A  F07C         	movff	?___xxtofl,___fldiv@a
 24435  011DDA  C06B  F07D         	movff	?___xxtofl+1,___fldiv@a+1
 24436  011DDE  C06C  F07E         	movff	?___xxtofl+2,___fldiv@a+2
 24437  011DE2  C06D  F07F         	movff	?___xxtofl+3,___fldiv@a+3
 24438  011DE6  EC03  F06B         	call	___fldiv	;wreg free
 24439  011DEA  C078  F095         	movff	?___fldiv,__step_position_from_divide_position@target_position
 24440  011DEE  C079  F096         	movff	?___fldiv+1,__step_position_from_divide_position@target_position+1
 24441  011DF2  C07A  F097         	movff	?___fldiv+2,__step_position_from_divide_position@target_position+2
 24442  011DF6  C07B  F098         	movff	?___fldiv+3,__step_position_from_divide_position@target_position+3
 24443                           
 24444                           ;motor.c: 590: return (uint32_t) target_position;
 24445  011DFA  C095  F060         	movff	__step_position_from_divide_position@target_position,___fltol@f1
 24446  011DFE  C096  F061         	movff	__step_position_from_divide_position@target_position+1,___fltol@f1+1
 24447  011E02  C097  F062         	movff	__step_position_from_divide_position@target_position+2,___fltol@f1+2
 24448  011E06  C098  F063         	movff	__step_position_from_divide_position@target_position+3,___fltol@f1+3
 24449  011E0A  EC81  F093         	call	___fltol	;wreg free
 24450  011E0E  C060  F091         	movff	?___fltol,?__step_position_from_divide_position
 24451  011E12  C061  F092         	movff	?___fltol+1,?__step_position_from_divide_position+1
 24452  011E16  C062  F093         	movff	?___fltol+2,?__step_position_from_divide_position+2
 24453  011E1A  C063  F094         	movff	?___fltol+3,?__step_position_from_divide_position+3
 24454  011E1E  0012               	return	
 24455  011E20                     __end_of__step_position_from_divide_position:
 24456                           	opt stack 0
 24457                           tblptru	equ	0xFF8
 24458                           tblptrh	equ	0xFF7
 24459                           tblptrl	equ	0xFF6
 24460                           tablat	equ	0xFF5
 24461                           prodh	equ	0xFF4
 24462                           prodl	equ	0xFF3
 24463                           intcon	equ	0xFF2
 24464                           postinc0	equ	0xFEE
 24465                           wreg	equ	0xFE8
 24466                           indf1	equ	0xFE7
 24467                           postinc1	equ	0xFE6
 24468                           postdec1	equ	0xFE5
 24469                           plusw1	equ	0xFE3
 24470                           fsr1h	equ	0xFE2
 24471                           fsr1l	equ	0xFE1
 24472                           indf2	equ	0xFDF
 24473                           postinc2	equ	0xFDE
 24474                           postdec2	equ	0xFDD
 24475                           plusw2	equ	0xFDB
 24476                           fsr2h	equ	0xFDA
 24477                           fsr2l	equ	0xFD9
 24478                           status	equ	0xFD8
 24479                           
 24480 ;; *************** function _motor_decrease_manual_speed *****************
 24481 ;; Defined at:
 24482 ;;		line 874 in file "motor.c"
 24483 ;; Parameters:    Size  Location     Type
 24484 ;;		None
 24485 ;; Auto vars:     Size  Location     Type
 24486 ;;		None
 24487 ;; Return value:  Size  Location     Type
 24488 ;;                  1    wreg      void 
 24489 ;; Registers used:
 24490 ;;		wreg, status,2, status,0, cstack
 24491 ;; Tracked objects:
 24492 ;;		On entry : 0/0
 24493 ;;		On exit  : 0/0
 24494 ;;		Unchanged: 0/0
 24495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24500 ;;Total ram usage:        0 bytes
 24501 ;; Hardware stack levels used:    1
 24502 ;; Hardware stack levels required when called:   12
 24503 ;; This function calls:
 24504 ;;		_motor_set_manual_speed
 24505 ;; This function is called by:
 24506 ;;		_encoder_statemachine
 24507 ;; This function uses a non-reentrant model
 24508 ;;
 24509                           
 24510                           	psect	text98
 24511  015E5C                     __ptext98:
 24512                           	opt stack 0
 24513  015E5C                     _motor_decrease_manual_speed:
 24514                           	opt stack 17
 24515                           
 24516                           ;motor.c: 876: if(os.manual_speed>0)
 24517                           
 24518                           ;incstack = 0
 24519  015E5C  0101               	movlb	1	; () banked
 24520  015E5E  5189               	movf	(_os+36)& (0+255),w,b	;volatile
 24521  015E60  118A               	iorwf	(_os+37)& (0+255),w,b	;volatile
 24522  015E62  B4D8               	btfsc	status,2,c
 24523  015E64  0012               	return	
 24524                           
 24525                           ; BSR set to: 1
 24526                           ;motor.c: 877: {;motor.c: 878: motor_set_manual_speed(os.manual_speed-1);
 24527  015E66  0EFF               	movlw	255
 24528  015E68  2589               	addwf	(_os+36)& (0+255),w,b	;volatile
 24529  015E6A  0100               	movlb	0	; () banked
 24530  015E6C  6F62               	movwf	motor_set_manual_speed@new_speed& (0+255),b
 24531  015E6E  0EFF               	movlw	255
 24532  015E70  0101               	movlb	1	; () banked
 24533  015E72  218A               	addwfc	(_os+37)& (0+255),w,b	;volatile
 24534  015E74  0100               	movlb	0	; () banked
 24535  015E76  6F63               	movwf	(motor_set_manual_speed@new_speed+1)& (0+255),b
 24536  015E78  ECC7  F0A2         	call	_motor_set_manual_speed	;wreg free
 24537  015E7C  0012               	return	
 24538  015E7E                     __end_of_motor_decrease_manual_speed:
 24539                           	opt stack 0
 24540                           tblptru	equ	0xFF8
 24541                           tblptrh	equ	0xFF7
 24542                           tblptrl	equ	0xFF6
 24543                           tablat	equ	0xFF5
 24544                           prodh	equ	0xFF4
 24545                           prodl	equ	0xFF3
 24546                           intcon	equ	0xFF2
 24547                           postinc0	equ	0xFEE
 24548                           wreg	equ	0xFE8
 24549                           indf1	equ	0xFE7
 24550                           postinc1	equ	0xFE6
 24551                           postdec1	equ	0xFE5
 24552                           plusw1	equ	0xFE3
 24553                           fsr1h	equ	0xFE2
 24554                           fsr1l	equ	0xFE1
 24555                           indf2	equ	0xFDF
 24556                           postinc2	equ	0xFDE
 24557                           postdec2	equ	0xFDD
 24558                           plusw2	equ	0xFDB
 24559                           fsr2h	equ	0xFDA
 24560                           fsr2l	equ	0xFD9
 24561                           status	equ	0xFD8
 24562                           
 24563 ;; *************** function _motor_arc_move *****************
 24564 ;; Defined at:
 24565 ;;		line 964 in file "motor.c"
 24566 ;; Parameters:    Size  Location     Type
 24567 ;;  direction       1    wreg     enum E6622
 24568 ;; Auto vars:     Size  Location     Type
 24569 ;;  direction       1   52[BANK0 ] enum E6622
 24570 ;;  arc_in_steps    4   53[BANK0 ] float 
 24571 ;; Return value:  Size  Location     Type
 24572 ;;                  1    wreg      void 
 24573 ;; Registers used:
 24574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24575 ;; Tracked objects:
 24576 ;;		On entry : 0/0
 24577 ;;		On exit  : 0/0
 24578 ;;		Unchanged: 0/0
 24579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24581 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24583 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24584 ;;Total ram usage:        5 bytes
 24585 ;; Hardware stack levels used:    1
 24586 ;; Hardware stack levels required when called:   14
 24587 ;; This function calls:
 24588 ;;		___fldiv
 24589 ;;		___flmul
 24590 ;;		___fltol
 24591 ;;		___xxtofl
 24592 ;;		_motor_move_steps
 24593 ;; This function is called by:
 24594 ;;		_encoder_statemachine
 24595 ;; This function uses a non-reentrant model
 24596 ;;
 24597                           
 24598                           	psect	text99
 24599  0120DA                     __ptext99:
 24600                           	opt stack 0
 24601  0120DA                     _motor_arc_move:
 24602                           	opt stack 15
 24603                           
 24604                           ;incstack = 0
 24605                           ;motor_arc_move@direction stored from wreg
 24606  0120DA  0100               	movlb	0	; () banked
 24607  0120DC  6F94               	movwf	motor_arc_move@direction& (0+255),b
 24608                           
 24609                           ;motor.c: 966: float arc_in_steps;;motor.c: 969: arc_in_steps = (float) os.arc_size;
 24610  0120DE  C182  F06A         	movff	_os+29,___xxtofl@val	;volatile
 24611  0120E2  C183  F06B         	movff	_os+30,___xxtofl@val+1	;volatile
 24612  0120E6  C184  F06C         	movff	_os+31,___xxtofl@val+2	;volatile
 24613  0120EA  C185  F06D         	movff	_os+32,___xxtofl@val+3	;volatile
 24614  0120EE  0E01               	movlw	1
 24615  0120F0  EC24  F082         	call	___xxtofl
 24616  0120F4  C06A  F095         	movff	?___xxtofl,motor_arc_move@arc_in_steps
 24617  0120F8  C06B  F096         	movff	?___xxtofl+1,motor_arc_move@arc_in_steps+1
 24618  0120FC  C06C  F097         	movff	?___xxtofl+2,motor_arc_move@arc_in_steps+2
 24619  012100  C06D  F098         	movff	?___xxtofl+3,motor_arc_move@arc_in_steps+3
 24620                           
 24621                           ;motor.c: 970: arc_in_steps *= (float) config.full_circle_in_steps;
 24622  012104  C095  F078         	movff	motor_arc_move@arc_in_steps,___flmul@b
 24623  012108  C096  F079         	movff	motor_arc_move@arc_in_steps+1,___flmul@b+1
 24624  01210C  C097  F07A         	movff	motor_arc_move@arc_in_steps+2,___flmul@b+2
 24625  012110  C098  F07B         	movff	motor_arc_move@arc_in_steps+3,___flmul@b+3
 24626  012114  C196  F06A         	movff	_config,___xxtofl@val
 24627  012118  C197  F06B         	movff	_config+1,___xxtofl@val+1
 24628  01211C  C198  F06C         	movff	_config+2,___xxtofl@val+2
 24629  012120  C199  F06D         	movff	_config+3,___xxtofl@val+3
 24630  012124  0E00               	movlw	0
 24631  012126  EC24  F082         	call	___xxtofl
 24632  01212A  C06A  F07C         	movff	?___xxtofl,___flmul@a
 24633  01212E  C06B  F07D         	movff	?___xxtofl+1,___flmul@a+1
 24634  012132  C06C  F07E         	movff	?___xxtofl+2,___flmul@a+2
 24635  012136  C06D  F07F         	movff	?___xxtofl+3,___flmul@a+3
 24636  01213A  ECDB  F064         	call	___flmul	;wreg free
 24637  01213E  C078  F095         	movff	?___flmul,motor_arc_move@arc_in_steps
 24638  012142  C079  F096         	movff	?___flmul+1,motor_arc_move@arc_in_steps+1
 24639  012146  C07A  F097         	movff	?___flmul+2,motor_arc_move@arc_in_steps+2
 24640  01214A  C07B  F098         	movff	?___flmul+3,motor_arc_move@arc_in_steps+3
 24641                           
 24642                           ;motor.c: 971: arc_in_steps /= (float) 36000.0;
 24643  01214E  C095  F078         	movff	motor_arc_move@arc_in_steps,___fldiv@b
 24644  012152  C096  F079         	movff	motor_arc_move@arc_in_steps+1,___fldiv@b+1
 24645  012156  C097  F07A         	movff	motor_arc_move@arc_in_steps+2,___fldiv@b+2
 24646  01215A  C098  F07B         	movff	motor_arc_move@arc_in_steps+3,___fldiv@b+3
 24647  01215E  0E00               	movlw	0
 24648  012160  0100               	movlb	0	; () banked
 24649  012162  6F7C               	movwf	___fldiv@a& (0+255),b
 24650  012164  0EA0               	movlw	160
 24651  012166  6F7D               	movwf	(___fldiv@a+1)& (0+255),b
 24652  012168  0E0C               	movlw	12
 24653  01216A  6F7E               	movwf	(___fldiv@a+2)& (0+255),b
 24654  01216C  0E47               	movlw	71
 24655  01216E  6F7F               	movwf	(___fldiv@a+3)& (0+255),b
 24656  012170  EC03  F06B         	call	___fldiv	;wreg free
 24657  012174  C078  F095         	movff	?___fldiv,motor_arc_move@arc_in_steps
 24658  012178  C079  F096         	movff	?___fldiv+1,motor_arc_move@arc_in_steps+1
 24659  01217C  C07A  F097         	movff	?___fldiv+2,motor_arc_move@arc_in_steps+2
 24660  012180  C07B  F098         	movff	?___fldiv+3,motor_arc_move@arc_in_steps+3
 24661                           
 24662                           ;motor.c: 974: motor_move_steps(direction, (uint32_t) arc_in_steps, os.arc_speed, MOTOR_
      +                          OVERSHOOT_NO_OVERSHOOT);
 24663  012184  C095  F060         	movff	motor_arc_move@arc_in_steps,___fltol@f1
 24664  012188  C096  F061         	movff	motor_arc_move@arc_in_steps+1,___fltol@f1+1
 24665  01218C  C097  F062         	movff	motor_arc_move@arc_in_steps+2,___fltol@f1+2
 24666  012190  C098  F063         	movff	motor_arc_move@arc_in_steps+3,___fltol@f1+3
 24667  012194  EC81  F093         	call	___fltol	;wreg free
 24668  012198  C060  F08C         	movff	?___fltol,motor_move_steps@distance
 24669  01219C  C061  F08D         	movff	?___fltol+1,motor_move_steps@distance+1
 24670  0121A0  C062  F08E         	movff	?___fltol+2,motor_move_steps@distance+2
 24671  0121A4  C063  F08F         	movff	?___fltol+3,motor_move_steps@distance+3
 24672  0121A8  C186  F090         	movff	_os+33,motor_move_steps@speed	;volatile
 24673  0121AC  C187  F091         	movff	_os+34,motor_move_steps@speed+1	;volatile
 24674  0121B0  0E01               	movlw	1
 24675  0121B2  0100               	movlb	0	; () banked
 24676  0121B4  6F92               	movwf	motor_move_steps@overshoot& (0+255),b
 24677  0121B6  5194               	movf	motor_arc_move@direction& (0+255),w,b
 24678  0121B8  ECDE  F0AD         	call	_motor_move_steps
 24679  0121BC  0012               	return		;funcret
 24680  0121BE                     __end_of_motor_arc_move:
 24681                           	opt stack 0
 24682                           tblptru	equ	0xFF8
 24683                           tblptrh	equ	0xFF7
 24684                           tblptrl	equ	0xFF6
 24685                           tablat	equ	0xFF5
 24686                           prodh	equ	0xFF4
 24687                           prodl	equ	0xFF3
 24688                           intcon	equ	0xFF2
 24689                           postinc0	equ	0xFEE
 24690                           wreg	equ	0xFE8
 24691                           indf1	equ	0xFE7
 24692                           postinc1	equ	0xFE6
 24693                           postdec1	equ	0xFE5
 24694                           plusw1	equ	0xFE3
 24695                           fsr1h	equ	0xFE2
 24696                           fsr1l	equ	0xFE1
 24697                           indf2	equ	0xFDF
 24698                           postinc2	equ	0xFDE
 24699                           postdec2	equ	0xFDD
 24700                           plusw2	equ	0xFDB
 24701                           fsr2h	equ	0xFDA
 24702                           fsr2l	equ	0xFD9
 24703                           status	equ	0xFD8
 24704                           
 24705 ;; *************** function __encoder_next_setup_stepsize *****************
 24706 ;; Defined at:
 24707 ;;		line 24 in file "encoder.c"
 24708 ;; Parameters:    Size  Location     Type
 24709 ;;  old_stepsize    2    0[BANK0 ] unsigned int 
 24710 ;; Auto vars:     Size  Location     Type
 24711 ;;		None
 24712 ;; Return value:  Size  Location     Type
 24713 ;;                  2    0[BANK0 ] unsigned int 
 24714 ;; Registers used:
 24715 ;;		wreg, status,2, status,0
 24716 ;; Tracked objects:
 24717 ;;		On entry : 0/0
 24718 ;;		On exit  : 0/0
 24719 ;;		Unchanged: 0/0
 24720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24721 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24723 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24724 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24725 ;;Total ram usage:        4 bytes
 24726 ;; Hardware stack levels used:    1
 24727 ;; Hardware stack levels required when called:   10
 24728 ;; This function calls:
 24729 ;;		Nothing
 24730 ;; This function is called by:
 24731 ;;		_encoder_statemachine
 24732 ;; This function uses a non-reentrant model
 24733 ;;
 24734                           
 24735                           	psect	text100
 24736  014606                     __ptext100:
 24737                           	opt stack 0
 24738  014606                     __encoder_next_setup_stepsize:
 24739                           	opt stack 19
 24740                           
 24741                           ;encoder.c: 26: switch(old_stepsize)
 24742                           
 24743                           ;incstack = 0
 24744  014606  D01A               	goto	l2712
 24745  014608                     
 24746                           ;encoder.c: 29: return 100;
 24747  014608  0E00               	movlw	0
 24748  01460A  0100               	movlb	0	; () banked
 24749  01460C  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24750  01460E  0E64               	movlw	100
 24751  014610  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24752                           
 24753                           ; BSR set to: 0
 24754  014612  0012               	return	
 24755  014614                     
 24756                           ; BSR set to: 0
 24757                           ;encoder.c: 31: return 10;
 24758                           
 24759                           ; BSR set to: 0
 24760  014614  0E00               	movlw	0
 24761  014616  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24762  014618  0E0A               	movlw	10
 24763  01461A  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24764                           
 24765                           ; BSR set to: 0
 24766  01461C  0012               	return	
 24767  01461E                     
 24768                           ; BSR set to: 0
 24769                           ;encoder.c: 33: return 1;
 24770                           
 24771                           ; BSR set to: 0
 24772  01461E  0E00               	movlw	0
 24773  014620  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24774  014622  0E01               	movlw	1
 24775  014624  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24776                           
 24777                           ; BSR set to: 0
 24778  014626  0012               	return	
 24779  014628                     
 24780                           ; BSR set to: 0
 24781                           ;encoder.c: 35: return 1000;
 24782                           
 24783                           ; BSR set to: 0
 24784  014628  0E03               	movlw	3
 24785  01462A  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24786  01462C  0EE8               	movlw	232
 24787  01462E  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24788                           
 24789                           ; BSR set to: 0
 24790  014630  0012               	return	
 24791  014632                     
 24792                           ; BSR set to: 0
 24793                           ;encoder.c: 37: return 100;
 24794                           
 24795                           ; BSR set to: 0
 24796  014632  0E00               	movlw	0
 24797  014634  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24798  014636  0E64               	movlw	100
 24799  014638  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24800                           
 24801                           ; BSR set to: 0
 24802                           ;encoder.c: 38: }
 24803                           
 24804                           ; BSR set to: 0
 24805  01463A  0012               	return	
 24806  01463C                     l2712:
 24807                           
 24808                           ; BSR set to: 0
 24809  01463C  C060  F062         	movff	__encoder_next_setup_stepsize@old_stepsize,??__encoder_next_setup_stepsize
 24810  014640  C061  F063         	movff	__encoder_next_setup_stepsize@old_stepsize+1,??__encoder_next_setup_stepsize+1
 24811                           
 24812                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 24813                           ; Switch size 1, requested type "space"
 24814                           ; Number of cases is 2, Range of values is 0 to 3
 24815                           ; switch strategies available:
 24816                           ; Name         Instructions Cycles
 24817                           ; simple_byte            7     4 (average)
 24818                           ;	Chosen strategy is simple_byte
 24819  014644  0100               	movlb	0	; () banked
 24820  014646  5163               	movf	(??__encoder_next_setup_stepsize+1)& (0+255),w,b
 24821  014648  0A00               	xorlw	0	; case 0
 24822  01464A  B4D8               	btfsc	status,2,c
 24823  01464C  D004               	goto	l20122
 24824  01464E  0A03               	xorlw	3	; case 3
 24825  014650  B4D8               	btfsc	status,2,c
 24826  014652  D00C               	goto	l20124
 24827  014654  D7EE               	goto	l2718
 24828  014656                     l20122:
 24829                           
 24830                           ; BSR set to: 0
 24831                           ; Switch size 1, requested type "space"
 24832                           ; Number of cases is 3, Range of values is 1 to 100
 24833                           ; switch strategies available:
 24834                           ; Name         Instructions Cycles
 24835                           ; simple_byte           10     6 (average)
 24836                           ;	Chosen strategy is simple_byte
 24837  014656  5162               	movf	??__encoder_next_setup_stepsize& (0+255),w,b
 24838  014658  0A01               	xorlw	1	; case 1
 24839  01465A  B4D8               	btfsc	status,2,c
 24840  01465C  D7E5               	goto	l2717
 24841  01465E  0A0B               	xorlw	11	; case 10
 24842  014660  B4D8               	btfsc	status,2,c
 24843  014662  D7DD               	goto	l2716
 24844  014664  0A6E               	xorlw	110	; case 100
 24845  014666  B4D8               	btfsc	status,2,c
 24846  014668  D7D5               	goto	l2715
 24847  01466A  D7E3               	goto	l2718
 24848  01466C                     l20124:
 24849                           
 24850                           ; BSR set to: 0
 24851                           ; Switch size 1, requested type "space"
 24852                           ; Number of cases is 1, Range of values is 232 to 232
 24853                           ; switch strategies available:
 24854                           ; Name         Instructions Cycles
 24855                           ; simple_byte            4     3 (average)
 24856                           ;	Chosen strategy is simple_byte
 24857  01466C  5162               	movf	??__encoder_next_setup_stepsize& (0+255),w,b
 24858  01466E  0AE8               	xorlw	232	; case 232
 24859  014670  B4D8               	btfsc	status,2,c
 24860  014672  D7CA               	goto	l2713
 24861  014674  D7DE               	goto	l2718
 24862  014676                     __end_of__encoder_next_setup_stepsize:
 24863                           	opt stack 0
 24864                           tblptru	equ	0xFF8
 24865                           tblptrh	equ	0xFF7
 24866                           tblptrl	equ	0xFF6
 24867                           tablat	equ	0xFF5
 24868                           prodh	equ	0xFF4
 24869                           prodl	equ	0xFF3
 24870                           intcon	equ	0xFF2
 24871                           postinc0	equ	0xFEE
 24872                           wreg	equ	0xFE8
 24873                           indf1	equ	0xFE7
 24874                           postinc1	equ	0xFE6
 24875                           postdec1	equ	0xFE5
 24876                           plusw1	equ	0xFE3
 24877                           fsr1h	equ	0xFE2
 24878                           fsr1l	equ	0xFE1
 24879                           indf2	equ	0xFDF
 24880                           postinc2	equ	0xFDE
 24881                           postdec2	equ	0xFDD
 24882                           plusw2	equ	0xFDB
 24883                           fsr2h	equ	0xFDA
 24884                           fsr2l	equ	0xFD9
 24885                           status	equ	0xFD8
 24886                           
 24887 ;; *************** function __encoder_next_divide_step_size *****************
 24888 ;; Defined at:
 24889 ;;		line 41 in file "encoder.c"
 24890 ;; Parameters:    Size  Location     Type
 24891 ;;  old_stepsize    1    wreg     unsigned char 
 24892 ;; Auto vars:     Size  Location     Type
 24893 ;;  old_stepsize    1    0[BANK0 ] unsigned char 
 24894 ;; Return value:  Size  Location     Type
 24895 ;;                  1    wreg      unsigned char 
 24896 ;; Registers used:
 24897 ;;		wreg, status,2, status,0
 24898 ;; Tracked objects:
 24899 ;;		On entry : 0/0
 24900 ;;		On exit  : 0/0
 24901 ;;		Unchanged: 0/0
 24902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24904 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24906 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24907 ;;Total ram usage:        1 bytes
 24908 ;; Hardware stack levels used:    1
 24909 ;; Hardware stack levels required when called:   10
 24910 ;; This function calls:
 24911 ;;		Nothing
 24912 ;; This function is called by:
 24913 ;;		_encoder_statemachine
 24914 ;; This function uses a non-reentrant model
 24915 ;;
 24916                           
 24917                           	psect	text101
 24918  015B32                     __ptext101:
 24919                           	opt stack 0
 24920  015B32                     __encoder_next_divide_step_size:
 24921                           	opt stack 19
 24922                           
 24923                           ; BSR set to: 0
 24924                           ;incstack = 0
 24925                           ;__encoder_next_divide_step_size@old_stepsize stored from wreg
 24926  015B32  0100               	movlb	0	; () banked
 24927  015B34  6F60               	movwf	__encoder_next_divide_step_size@old_stepsize& (0+255),b
 24928                           
 24929                           ;encoder.c: 43: switch(old_stepsize)
 24930  015B36  D008               	goto	l2722
 24931  015B38                     
 24932                           ;encoder.c: 46: return 10;
 24933  015B38  0E0A               	movlw	10
 24934  015B3A  0012               	return	
 24935  015B3C                     
 24936                           ;encoder.c: 48: return 1;
 24937  015B3C  0E01               	movlw	1
 24938  015B3E  0012               	return	
 24939  015B40                     
 24940                           ;encoder.c: 50: return 100;
 24941  015B40  0E64               	movlw	100
 24942  015B42  0012               	return	
 24943  015B44                     
 24944                           ;encoder.c: 52: return 1;
 24945  015B44  0E01               	movlw	1
 24946                           
 24947                           ;encoder.c: 53: }
 24948  015B46  0012               	return	
 24949  015B48                     l2722:
 24950  015B48  0100               	movlb	0	; () banked
 24951  015B4A  5160               	movf	__encoder_next_divide_step_size@old_stepsize& (0+255),w,b
 24952                           
 24953                           ; Switch size 1, requested type "space"
 24954                           ; Number of cases is 3, Range of values is 1 to 100
 24955                           ; switch strategies available:
 24956                           ; Name         Instructions Cycles
 24957                           ; simple_byte           10     6 (average)
 24958                           ;	Chosen strategy is simple_byte
 24959  015B4C  0A01               	xorlw	1	; case 1
 24960  015B4E  B4D8               	btfsc	status,2,c
 24961  015B50  D7F7               	goto	l2726
 24962  015B52  0A0B               	xorlw	11	; case 10
 24963  015B54  B4D8               	btfsc	status,2,c
 24964  015B56  D7F2               	goto	l2725
 24965  015B58  0A6E               	xorlw	110	; case 100
 24966  015B5A  B4D8               	btfsc	status,2,c
 24967  015B5C  D7ED               	goto	l2723
 24968  015B5E  D7F2               	goto	l2727
 24969  015B60                     __end_of__encoder_next_divide_step_size:
 24970                           	opt stack 0
 24971                           tblptru	equ	0xFF8
 24972                           tblptrh	equ	0xFF7
 24973                           tblptrl	equ	0xFF6
 24974                           tablat	equ	0xFF5
 24975                           prodh	equ	0xFF4
 24976                           prodl	equ	0xFF3
 24977                           intcon	equ	0xFF2
 24978                           postinc0	equ	0xFEE
 24979                           wreg	equ	0xFE8
 24980                           indf1	equ	0xFE7
 24981                           postinc1	equ	0xFE6
 24982                           postdec1	equ	0xFE5
 24983                           plusw1	equ	0xFE3
 24984                           fsr1h	equ	0xFE2
 24985                           fsr1l	equ	0xFE1
 24986                           indf2	equ	0xFDF
 24987                           postinc2	equ	0xFDE
 24988                           postdec2	equ	0xFDD
 24989                           plusw2	equ	0xFDB
 24990                           fsr2h	equ	0xFDA
 24991                           fsr2l	equ	0xFD9
 24992                           status	equ	0xFD8
 24993                           
 24994 ;; *************** function __encoder_next_arc_step_size *****************
 24995 ;; Defined at:
 24996 ;;		line 56 in file "encoder.c"
 24997 ;; Parameters:    Size  Location     Type
 24998 ;;  old_stepsize    2    0[BANK0 ] unsigned int 
 24999 ;; Auto vars:     Size  Location     Type
 25000 ;;		None
 25001 ;; Return value:  Size  Location     Type
 25002 ;;                  2    0[BANK0 ] unsigned int 
 25003 ;; Registers used:
 25004 ;;		wreg, status,2, status,0
 25005 ;; Tracked objects:
 25006 ;;		On entry : 0/0
 25007 ;;		On exit  : 0/0
 25008 ;;		Unchanged: 0/0
 25009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25010 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25012 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25013 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25014 ;;Total ram usage:        4 bytes
 25015 ;; Hardware stack levels used:    1
 25016 ;; Hardware stack levels required when called:   10
 25017 ;; This function calls:
 25018 ;;		Nothing
 25019 ;; This function is called by:
 25020 ;;		_encoder_statemachine
 25021 ;; This function uses a non-reentrant model
 25022 ;;
 25023                           
 25024                           	psect	text102
 25025  014676                     __ptext102:
 25026                           	opt stack 0
 25027  014676                     __encoder_next_arc_step_size:
 25028                           	opt stack 19
 25029                           
 25030                           ;encoder.c: 58: switch(old_stepsize)
 25031                           
 25032                           ;incstack = 0
 25033  014676  D01A               	goto	l2731
 25034  014678                     
 25035                           ;encoder.c: 61: return 100;
 25036  014678  0E00               	movlw	0
 25037  01467A  0100               	movlb	0	; () banked
 25038  01467C  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 25039  01467E  0E64               	movlw	100
 25040  014680  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 25041                           
 25042                           ; BSR set to: 0
 25043  014682  0012               	return	
 25044  014684                     
 25045                           ; BSR set to: 0
 25046                           ;encoder.c: 63: return 10;
 25047                           
 25048                           ; BSR set to: 0
 25049  014684  0E00               	movlw	0
 25050  014686  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 25051  014688  0E0A               	movlw	10
 25052  01468A  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 25053                           
 25054                           ; BSR set to: 0
 25055  01468C  0012               	return	
 25056  01468E                     
 25057                           ; BSR set to: 0
 25058                           ;encoder.c: 65: return 1;
 25059                           
 25060                           ; BSR set to: 0
 25061  01468E  0E00               	movlw	0
 25062  014690  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 25063  014692  0E01               	movlw	1
 25064  014694  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 25065                           
 25066                           ; BSR set to: 0
 25067  014696  0012               	return	
 25068  014698                     
 25069                           ; BSR set to: 0
 25070                           ;encoder.c: 67: return 1000;
 25071                           
 25072                           ; BSR set to: 0
 25073  014698  0E03               	movlw	3
 25074  01469A  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 25075  01469C  0EE8               	movlw	232
 25076  01469E  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 25077                           
 25078                           ; BSR set to: 0
 25079  0146A0  0012               	return	
 25080  0146A2                     
 25081                           ; BSR set to: 0
 25082                           ;encoder.c: 69: return 100;
 25083                           
 25084                           ; BSR set to: 0
 25085  0146A2  0E00               	movlw	0
 25086  0146A4  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 25087  0146A6  0E64               	movlw	100
 25088  0146A8  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 25089                           
 25090                           ; BSR set to: 0
 25091                           ;encoder.c: 70: }
 25092                           
 25093                           ; BSR set to: 0
 25094  0146AA  0012               	return	
 25095  0146AC                     l2731:
 25096                           
 25097                           ; BSR set to: 0
 25098  0146AC  C060  F062         	movff	__encoder_next_arc_step_size@old_stepsize,??__encoder_next_arc_step_size
 25099  0146B0  C061  F063         	movff	__encoder_next_arc_step_size@old_stepsize+1,??__encoder_next_arc_step_size+1
 25100                           
 25101                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 25102                           ; Switch size 1, requested type "space"
 25103                           ; Number of cases is 2, Range of values is 0 to 3
 25104                           ; switch strategies available:
 25105                           ; Name         Instructions Cycles
 25106                           ; simple_byte            7     4 (average)
 25107                           ;	Chosen strategy is simple_byte
 25108  0146B4  0100               	movlb	0	; () banked
 25109  0146B6  5163               	movf	(??__encoder_next_arc_step_size+1)& (0+255),w,b
 25110  0146B8  0A00               	xorlw	0	; case 0
 25111  0146BA  B4D8               	btfsc	status,2,c
 25112  0146BC  D004               	goto	l20126
 25113  0146BE  0A03               	xorlw	3	; case 3
 25114  0146C0  B4D8               	btfsc	status,2,c
 25115  0146C2  D00C               	goto	l20128
 25116  0146C4  D7EE               	goto	l2737
 25117  0146C6                     l20126:
 25118                           
 25119                           ; BSR set to: 0
 25120                           ; Switch size 1, requested type "space"
 25121                           ; Number of cases is 3, Range of values is 1 to 100
 25122                           ; switch strategies available:
 25123                           ; Name         Instructions Cycles
 25124                           ; simple_byte           10     6 (average)
 25125                           ;	Chosen strategy is simple_byte
 25126  0146C6  5162               	movf	??__encoder_next_arc_step_size& (0+255),w,b
 25127  0146C8  0A01               	xorlw	1	; case 1
 25128  0146CA  B4D8               	btfsc	status,2,c
 25129  0146CC  D7E5               	goto	l2736
 25130  0146CE  0A0B               	xorlw	11	; case 10
 25131  0146D0  B4D8               	btfsc	status,2,c
 25132  0146D2  D7DD               	goto	l2735
 25133  0146D4  0A6E               	xorlw	110	; case 100
 25134  0146D6  B4D8               	btfsc	status,2,c
 25135  0146D8  D7D5               	goto	l2734
 25136  0146DA  D7E3               	goto	l2737
 25137  0146DC                     l20128:
 25138                           
 25139                           ; BSR set to: 0
 25140                           ; Switch size 1, requested type "space"
 25141                           ; Number of cases is 1, Range of values is 232 to 232
 25142                           ; switch strategies available:
 25143                           ; Name         Instructions Cycles
 25144                           ; simple_byte            4     3 (average)
 25145                           ;	Chosen strategy is simple_byte
 25146  0146DC  5162               	movf	??__encoder_next_arc_step_size& (0+255),w,b
 25147  0146DE  0AE8               	xorlw	232	; case 232
 25148  0146E0  B4D8               	btfsc	status,2,c
 25149  0146E2  D7CA               	goto	l2732
 25150  0146E4  D7DE               	goto	l2737
 25151  0146E6                     __end_of__encoder_next_arc_step_size:
 25152                           	opt stack 0
 25153                           tblptru	equ	0xFF8
 25154                           tblptrh	equ	0xFF7
 25155                           tblptrl	equ	0xFF6
 25156                           tablat	equ	0xFF5
 25157                           prodh	equ	0xFF4
 25158                           prodl	equ	0xFF3
 25159                           intcon	equ	0xFF2
 25160                           postinc0	equ	0xFEE
 25161                           wreg	equ	0xFE8
 25162                           indf1	equ	0xFE7
 25163                           postinc1	equ	0xFE6
 25164                           postdec1	equ	0xFE5
 25165                           plusw1	equ	0xFE3
 25166                           fsr1h	equ	0xFE2
 25167                           fsr1l	equ	0xFE1
 25168                           indf2	equ	0xFDF
 25169                           postinc2	equ	0xFDE
 25170                           postdec2	equ	0xFDD
 25171                           plusw2	equ	0xFDB
 25172                           fsr2h	equ	0xFDA
 25173                           fsr2l	equ	0xFD9
 25174                           status	equ	0xFD8
 25175                           
 25176 ;; *************** function __divide_jump_size_increment *****************
 25177 ;; Defined at:
 25178 ;;		line 73 in file "encoder.c"
 25179 ;; Parameters:    Size  Location     Type
 25180 ;;		None
 25181 ;; Auto vars:     Size  Location     Type
 25182 ;;		None
 25183 ;; Return value:  Size  Location     Type
 25184 ;;                  1    wreg      void 
 25185 ;; Registers used:
 25186 ;;		wreg, status,2, status,0
 25187 ;; Tracked objects:
 25188 ;;		On entry : 0/0
 25189 ;;		On exit  : 0/0
 25190 ;;		Unchanged: 0/0
 25191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25194 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25195 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25196 ;;Total ram usage:        1 bytes
 25197 ;; Hardware stack levels used:    1
 25198 ;; Hardware stack levels required when called:   10
 25199 ;; This function calls:
 25200 ;;		Nothing
 25201 ;; This function is called by:
 25202 ;;		_encoder_statemachine
 25203 ;; This function uses a non-reentrant model
 25204 ;;
 25205                           
 25206                           	psect	text103
 25207  015728                     __ptext103:
 25208                           	opt stack 0
 25209  015728                     __divide_jump_size_increment:
 25210                           	opt stack 19
 25211                           
 25212                           ;encoder.c: 75: ++os.divide_jump_size;
 25213                           
 25214                           ; BSR set to: 0
 25215                           ;incstack = 0
 25216  015728  0101               	movlb	1	; () banked
 25217  01572A  4B7E               	infsnz	(_os+25)& (0+255),f,b	;volatile
 25218  01572C  2B7F               	incf	(_os+26)& (0+255),f,b	;volatile
 25219                           
 25220                           ; BSR set to: 1
 25221                           ;encoder.c: 76: if(os.divide_jump_size==0)
 25222  01572E  517E               	movf	(_os+25)& (0+255),w,b	;volatile
 25223  015730  117F               	iorwf	(_os+26)& (0+255),w,b	;volatile
 25224  015732  A4D8               	btfss	status,2,c
 25225  015734  D004               	goto	l2741
 25226                           
 25227                           ; BSR set to: 1
 25228                           ;encoder.c: 77: os.divide_jump_size = 1;
 25229  015736  0E00               	movlw	0
 25230  015738  6F7F               	movwf	(_os+26)& (0+255),b	;volatile
 25231  01573A  0E01               	movlw	1
 25232  01573C  6F7E               	movwf	(_os+25)& (0+255),b	;volatile
 25233  01573E                     l2741:
 25234                           
 25235                           ; BSR set to: 1
 25236                           ;encoder.c: 78: if(os.divide_jump_size>=os.division)
 25237                           
 25238                           ; BSR set to: 1
 25239  01573E  5179               	movf	(_os+20)& (0+255),w,b	;volatile
 25240  015740  5D7E               	subwf	(_os+25)& (0+255),w,b	;volatile
 25241  015742  517F               	movf	(_os+26)& (0+255),w,b	;volatile
 25242  015744  0A80               	xorlw	128
 25243  015746  0100               	movlb	0	; () banked
 25244  015748  6F60               	movwf	??__divide_jump_size_increment& (0+255),b
 25245  01574A  0101               	movlb	1	; () banked
 25246  01574C  517A               	movf	(_os+21)& (0+255),w,b	;volatile
 25247  01574E  0A80               	xorlw	128
 25248  015750  0100               	movlb	0	; () banked
 25249  015752  5960               	subwfb	??__divide_jump_size_increment& (0+255),w,b
 25250  015754  A0D8               	btfss	status,0,c
 25251  015756  0012               	return	
 25252                           
 25253                           ; BSR set to: 0
 25254                           ;encoder.c: 79: os.divide_jump_size = os.division - 1;
 25255  015758  0EFF               	movlw	255
 25256  01575A  0101               	movlb	1	; () banked
 25257  01575C  2579               	addwf	(_os+20)& (0+255),w,b	;volatile
 25258  01575E  6F7E               	movwf	(_os+25)& (0+255),b	;volatile
 25259  015760  0EFF               	movlw	255
 25260  015762  217A               	addwfc	(_os+21)& (0+255),w,b	;volatile
 25261  015764  6F7F               	movwf	(_os+26)& (0+255),b	;volatile
 25262  015766  0012               	return	
 25263  015768                     __end_of__divide_jump_size_increment:
 25264                           	opt stack 0
 25265                           tblptru	equ	0xFF8
 25266                           tblptrh	equ	0xFF7
 25267                           tblptrl	equ	0xFF6
 25268                           tablat	equ	0xFF5
 25269                           prodh	equ	0xFF4
 25270                           prodl	equ	0xFF3
 25271                           intcon	equ	0xFF2
 25272                           postinc0	equ	0xFEE
 25273                           wreg	equ	0xFE8
 25274                           indf1	equ	0xFE7
 25275                           postinc1	equ	0xFE6
 25276                           postdec1	equ	0xFE5
 25277                           plusw1	equ	0xFE3
 25278                           fsr1h	equ	0xFE2
 25279                           fsr1l	equ	0xFE1
 25280                           indf2	equ	0xFDF
 25281                           postinc2	equ	0xFDE
 25282                           postdec2	equ	0xFDD
 25283                           plusw2	equ	0xFDB
 25284                           fsr2h	equ	0xFDA
 25285                           fsr2l	equ	0xFD9
 25286                           status	equ	0xFD8
 25287                           
 25288 ;; *************** function __divide_jump_size_decrement *****************
 25289 ;; Defined at:
 25290 ;;		line 82 in file "encoder.c"
 25291 ;; Parameters:    Size  Location     Type
 25292 ;;		None
 25293 ;; Auto vars:     Size  Location     Type
 25294 ;;		None
 25295 ;; Return value:  Size  Location     Type
 25296 ;;                  1    wreg      void 
 25297 ;; Registers used:
 25298 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25299 ;; Tracked objects:
 25300 ;;		On entry : 0/0
 25301 ;;		On exit  : 0/0
 25302 ;;		Unchanged: 0/0
 25303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25306 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25307 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25308 ;;Total ram usage:        3 bytes
 25309 ;; Hardware stack levels used:    1
 25310 ;; Hardware stack levels required when called:   10
 25311 ;; This function calls:
 25312 ;;		Nothing
 25313 ;; This function is called by:
 25314 ;;		_encoder_statemachine
 25315 ;; This function uses a non-reentrant model
 25316 ;;
 25317                           
 25318                           	psect	text104
 25319  014754                     __ptext104:
 25320                           	opt stack 0
 25321  014754                     __divide_jump_size_decrement:
 25322                           	opt stack 19
 25323                           
 25324                           ;encoder.c: 84: --os.divide_jump_size;
 25325                           
 25326                           ;incstack = 0
 25327  014754  0101               	movlb	1	; () banked
 25328  014756  077E               	decf	(_os+25)& (0+255),f,b	;volatile
 25329  014758  A0D8               	btfss	status,0,c
 25330  01475A  077F               	decf	(_os+26)& (0+255),f,b	;volatile
 25331                           
 25332                           ; BSR set to: 1
 25333                           ;encoder.c: 85: if(os.divide_jump_size==0)
 25334  01475C  517E               	movf	(_os+25)& (0+255),w,b	;volatile
 25335  01475E  117F               	iorwf	(_os+26)& (0+255),w,b	;volatile
 25336  014760  A4D8               	btfss	status,2,c
 25337  014762  D002               	goto	l2746
 25338                           
 25339                           ; BSR set to: 1
 25340                           ;encoder.c: 86: os.divide_jump_size = -1;
 25341  014764  697E               	setf	(_os+25)& (0+255),b	;volatile
 25342  014766  697F               	setf	(_os+26)& (0+255),b	;volatile
 25343  014768                     l2746:
 25344                           
 25345                           ; BSR set to: 1
 25346                           ;encoder.c: 87: if(os.divide_jump_size<=(-os.division))
 25347                           
 25348                           ; BSR set to: 1
 25349  014768  EE21  F079         	lfsr	2,_os+20	;volatile
 25350  01476C  CFDE F060          	movff	postinc2,??__divide_jump_size_decrement
 25351  014770  CFDD F061          	movff	postdec2,??__divide_jump_size_decrement+1
 25352  014774  0100               	movlb	0	; () banked
 25353  014776  1F60               	comf	??__divide_jump_size_decrement& (0+255),f,b
 25354  014778  1F61               	comf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 25355  01477A  4B60               	infsnz	??__divide_jump_size_decrement& (0+255),f,b
 25356  01477C  2B61               	incf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 25357  01477E  0101               	movlb	1	; () banked
 25358  014780  517E               	movf	(_os+25)& (0+255),w,b	;volatile
 25359  014782  0100               	movlb	0	; () banked
 25360  014784  5D60               	subwf	??__divide_jump_size_decrement& (0+255),w,b
 25361  014786  5161               	movf	(??__divide_jump_size_decrement+1)& (0+255),w,b
 25362  014788  0A80               	xorlw	128
 25363  01478A  6F62               	movwf	(??__divide_jump_size_decrement+2)& (0+255),b
 25364  01478C  0101               	movlb	1	; () banked
 25365  01478E  517F               	movf	(_os+26)& (0+255),w,b	;volatile
 25366  014790  0A80               	xorlw	128
 25367  014792  0100               	movlb	0	; () banked
 25368  014794  5962               	subwfb	(??__divide_jump_size_decrement+2)& (0+255),w,b
 25369  014796  A0D8               	btfss	status,0,c
 25370  014798  0012               	return	
 25371                           
 25372                           ; BSR set to: 0
 25373                           ;encoder.c: 88: os.divide_jump_size = 1 - os.division;
 25374  01479A  EE21  F079         	lfsr	2,_os+20	;volatile
 25375  01479E  CFDE F060          	movff	postinc2,??__divide_jump_size_decrement
 25376  0147A2  CFDD F061          	movff	postdec2,??__divide_jump_size_decrement+1
 25377  0147A6  1F60               	comf	??__divide_jump_size_decrement& (0+255),f,b
 25378  0147A8  1F61               	comf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 25379  0147AA  4B60               	infsnz	??__divide_jump_size_decrement& (0+255),f,b
 25380  0147AC  2B61               	incf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 25381  0147AE  0E01               	movlw	1
 25382  0147B0  2560               	addwf	??__divide_jump_size_decrement& (0+255),w,b
 25383  0147B2  0101               	movlb	1	; () banked
 25384  0147B4  6F7E               	movwf	(_os+25)& (0+255),b	;volatile
 25385  0147B6  0E00               	movlw	0
 25386  0147B8  0100               	movlb	0	; () banked
 25387  0147BA  2161               	addwfc	(??__divide_jump_size_decrement+1)& (0+255),w,b
 25388  0147BC  0101               	movlb	1	; () banked
 25389  0147BE  6F7F               	movwf	(_os+26)& (0+255),b	;volatile
 25390  0147C0  0012               	return	
 25391  0147C2                     __end_of__divide_jump_size_decrement:
 25392                           	opt stack 0
 25393                           tblptru	equ	0xFF8
 25394                           tblptrh	equ	0xFF7
 25395                           tblptrl	equ	0xFF6
 25396                           tablat	equ	0xFF5
 25397                           prodh	equ	0xFF4
 25398                           prodl	equ	0xFF3
 25399                           intcon	equ	0xFF2
 25400                           postinc0	equ	0xFEE
 25401                           wreg	equ	0xFE8
 25402                           indf1	equ	0xFE7
 25403                           postinc1	equ	0xFE6
 25404                           postdec1	equ	0xFE5
 25405                           plusw1	equ	0xFE3
 25406                           fsr1h	equ	0xFE2
 25407                           fsr1l	equ	0xFE1
 25408                           indf2	equ	0xFDF
 25409                           postinc2	equ	0xFDE
 25410                           postdec2	equ	0xFDD
 25411                           plusw2	equ	0xFDB
 25412                           fsr2h	equ	0xFDA
 25413                           fsr2l	equ	0xFD9
 25414                           status	equ	0xFD8
 25415                           
 25416 ;; *************** function _display_prepare *****************
 25417 ;; Defined at:
 25418 ;;		line 296 in file "display.c"
 25419 ;; Parameters:    Size  Location     Type
 25420 ;;		None
 25421 ;; Auto vars:     Size  Location     Type
 25422 ;;  temp           10  104[BANK0 ] unsigned char [10]
 25423 ;;  cntr            1  115[BANK0 ] unsigned char 
 25424 ;;  space           1  114[BANK0 ] unsigned char 
 25425 ;; Return value:  Size  Location     Type
 25426 ;;                  1    wreg      void 
 25427 ;; Registers used:
 25428 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25429 ;; Tracked objects:
 25430 ;;		On entry : 0/0
 25431 ;;		On exit  : 0/0
 25432 ;;		Unchanged: 0/0
 25433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25435 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25436 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25437 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25438 ;;Total ram usage:       14 bytes
 25439 ;; Hardware stack levels used:    1
 25440 ;; Hardware stack levels required when called:   15
 25441 ;; This function calls:
 25442 ;;		__display_clear
 25443 ;;		__display_itoa
 25444 ;;		__display_itoa_long
 25445 ;;		__display_padded_itoa
 25446 ;;		__display_position_in_degrees
 25447 ;;		__display_signed_itoa
 25448 ;;		_memcpy
 25449 ;;		_motor_speed_from_index
 25450 ;;		_strlen
 25451 ;; This function is called by:
 25452 ;;		_main
 25453 ;; This function uses a non-reentrant model
 25454 ;;
 25455                           
 25456                           	psect	text105
 25457  00A344                     __ptext105:
 25458                           	opt stack 0
 25459  00A344                     _display_prepare:
 25460                           	opt stack 15
 25461                           
 25462                           ;display.c: 298: uint8_t cntr;;display.c: 299: uint8_t space;;display.c: 300: char temp[
      +                          10];;display.c: 302: switch(os.displayState & 0xF0)
 25463                           
 25464                           ;incstack = 0
 25465  00A344  EFAA  F057         	goto	l1398
 25466  00A348                     
 25467                           ;display.c: 306: memcpy(display_content, dc_main, sizeof display_content);
 25468  00A348  0E48               	movlw	low _display_content
 25469  00A34A  0100               	movlb	0	; () banked
 25470  00A34C  6F60               	movwf	memcpy@d1& (0+255),b
 25471  00A34E  0E02               	movlw	high _display_content
 25472  00A350  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25473  00A352  0E6E               	movlw	low _dc_main
 25474  00A354  6F62               	movwf	memcpy@s1& (0+255),b
 25475  00A356  0EA0               	movlw	high _dc_main
 25476  00A358  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25477  00A35A  0E00               	movlw	0
 25478  00A35C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25479  00A35E  0E50               	movlw	80
 25480  00A360  6F64               	movwf	memcpy@n& (0+255),b
 25481  00A362  ECAC  F0A5         	call	_memcpy	;wreg free
 25482                           
 25483                           ;display.c: 307: switch(os.displayState)
 25484  00A366  D00F               	goto	l1400
 25485  00A368                     
 25486                           ;display.c: 310: display_content[1][0] = '>';
 25487  00A368  0E3E               	movlw	62
 25488  00A36A  0102               	movlb	2	; () banked
 25489  00A36C  6F5C               	movwf	(_display_content+20)& (0+255),b
 25490                           
 25491                           ;display.c: 311: break;
 25492  00A36E  EFD8  F057         	goto	l1407
 25493  00A372                     
 25494                           ;display.c: 313: display_content[1][9] = '>';
 25495                           
 25496                           ; BSR set to: 2
 25497  00A372  0E3E               	movlw	62
 25498  00A374  0102               	movlb	2	; () banked
 25499  00A376  6F65               	movwf	(_display_content+29)& (0+255),b
 25500                           
 25501                           ;display.c: 314: break;
 25502  00A378  EFD8  F057         	goto	l1407
 25503  00A37C                     
 25504                           ;display.c: 319: display_content[2][9] = '>';
 25505                           
 25506                           ; BSR set to: 2
 25507  00A37C  0E3E               	movlw	62
 25508  00A37E  0102               	movlb	2	; () banked
 25509  00A380  6F79               	movwf	(_display_content+49)& (0+255),b
 25510                           
 25511                           ;display.c: 320: break;
 25512  00A382  EFD8  F057         	goto	l1407
 25513  00A386                     l1400:
 25514                           
 25515                           ; BSR set to: 2
 25516  00A386  0101               	movlb	1	; () banked
 25517  00A388  5174               	movf	(_os+15)& (0+255),w,b	;volatile
 25518                           
 25519                           ; Switch size 1, requested type "space"
 25520                           ; Number of cases is 5, Range of values is 1 to 5
 25521                           ; switch strategies available:
 25522                           ; Name         Instructions Cycles
 25523                           ; simple_byte           16     9 (average)
 25524                           ;	Chosen strategy is simple_byte
 25525  00A38A  0A01               	xorlw	1	; case 1
 25526  00A38C  B4D8               	btfsc	status,2,c
 25527  00A38E  D7EC               	goto	l1401
 25528  00A390  0A03               	xorlw	3	; case 2
 25529  00A392  B4D8               	btfsc	status,2,c
 25530  00A394  D7EE               	goto	l1403
 25531  00A396  0A01               	xorlw	1	; case 3
 25532  00A398  B4D8               	btfsc	status,2,c
 25533  00A39A  D067               	goto	l1420
 25534  00A39C  0A07               	xorlw	7	; case 4
 25535  00A39E  B4D8               	btfsc	status,2,c
 25536  00A3A0  D7ED               	goto	l1405
 25537  00A3A2  0A01               	xorlw	1	; case 5
 25538  00A3A4  D072               	goto	L88
 25539  00A3A6                     
 25540                           ;display.c: 328: memcpy(display_content, dc_setup1, sizeof display_content);
 25541                           
 25542                           ; BSR set to: 1
 25543  00A3A6  0E48               	movlw	low _display_content
 25544  00A3A8  0100               	movlb	0	; () banked
 25545  00A3AA  6F60               	movwf	memcpy@d1& (0+255),b
 25546  00A3AC  0E02               	movlw	high _display_content
 25547  00A3AE  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25548  00A3B0  0E1E               	movlw	low _dc_setup1
 25549  00A3B2  6F62               	movwf	memcpy@s1& (0+255),b
 25550  00A3B4  0EA0               	movlw	high _dc_setup1
 25551  00A3B6  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25552  00A3B8  0E00               	movlw	0
 25553  00A3BA  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25554  00A3BC  0E50               	movlw	80
 25555  00A3BE  6F64               	movwf	memcpy@n& (0+255),b
 25556  00A3C0  ECAC  F0A5         	call	_memcpy	;wreg free
 25557                           
 25558                           ;display.c: 329: _display_itoa(os.setup_step_size, 2, temp);
 25559  00A3C4  C176  F09F         	movff	_os+17,__display_itoa@value	;volatile
 25560  00A3C8  C177  F0A0         	movff	_os+18,__display_itoa@value+1	;volatile
 25561  00A3CC  0E02               	movlw	2
 25562  00A3CE  0100               	movlb	0	; () banked
 25563  00A3D0  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 25564  00A3D2  0EC8               	movlw	low display_prepare@temp
 25565  00A3D4  6FA2               	movwf	__display_itoa@text& (0+255),b
 25566  00A3D6  0E00               	movlw	high display_prepare@temp
 25567  00A3D8  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 25568  00A3DA  EC3C  F072         	call	__display_itoa	;wreg free
 25569                           
 25570                           ;display.c: 330: if(os.setup_step_size>999)
 25571  00A3DE  0EE8               	movlw	232
 25572  00A3E0  0101               	movlb	1	; () banked
 25573  00A3E2  5D76               	subwf	(_os+17)& (0+255),w,b	;volatile
 25574  00A3E4  0E03               	movlw	3
 25575  00A3E6  5977               	subwfb	(_os+18)& (0+255),w,b	;volatile
 25576  00A3E8  A0D8               	btfss	status,0,c
 25577  00A3EA  D002               	goto	l1409
 25578                           
 25579                           ; BSR set to: 1
 25580                           ;display.c: 331: space = 0;
 25581  00A3EC  0E00               	movlw	0
 25582  00A3EE  D001               	goto	L23
 25583  00A3F0                     l1409:
 25584                           
 25585                           ;display.c: 332: else;display.c: 333: space = 1;
 25586                           
 25587                           ; BSR set to: 0
 25588  00A3F0  0E01               	movlw	1
 25589  00A3F2                     L23:
 25590  00A3F2  0100               	movlb	0	; () banked
 25591  00A3F4  6FD2               	movwf	display_prepare@space& (0+255),b
 25592                           
 25593                           ; BSR set to: 0
 25594                           ;display.c: 334: for(cntr=0; temp[cntr]; ++cntr)
 25595  00A3F6  0E00               	movlw	0
 25596  00A3F8  6FD3               	movwf	display_prepare@cntr& (0+255),b
 25597  00A3FA  D018               	goto	l1411
 25598  00A3FC                     
 25599                           ; BSR set to: 0
 25600                           ;display.c: 335: {;display.c: 336: display_content[3][space+cntr] = temp[cntr];
 25601                           
 25602                           ; BSR set to: 0
 25603  00A3FC  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25604  00A3FE  0D01               	mullw	1
 25605  00A400  0EC8               	movlw	low display_prepare@temp
 25606  00A402  24F3               	addwf	prodl,w,c
 25607  00A404  6ED9               	movwf	fsr2l,c
 25608  00A406  0E00               	movlw	high display_prepare@temp
 25609  00A408  20F4               	addwfc	prodh,w,c
 25610  00A40A  6EDA               	movwf	fsr2h,c
 25611  00A40C  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25612  00A40E  C0D2  F0C6         	movff	display_prepare@space,??_display_prepare
 25613  00A412  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25614  00A414  27C6               	addwf	??_display_prepare& (0+255),f,b
 25615  00A416  0E00               	movlw	0
 25616  00A418  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25617  00A41A  0E84               	movlw	low (_display_content+60)
 25618  00A41C  25C6               	addwf	??_display_prepare& (0+255),w,b
 25619  00A41E  6EE1               	movwf	fsr1l,c
 25620  00A420  0E02               	movlw	high (_display_content+60)
 25621  00A422  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25622  00A424  6EE2               	movwf	fsr1h,c
 25623  00A426  CFDF FFE7          	movff	indf2,indf1
 25624                           
 25625                           ; BSR set to: 0
 25626  00A42A  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 25627  00A42C                     l1411:
 25628                           
 25629                           ; BSR set to: 0
 25630                           
 25631                           ; BSR set to: 0
 25632  00A42C  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25633  00A42E  0D01               	mullw	1
 25634  00A430  0EC8               	movlw	low display_prepare@temp
 25635  00A432  24F3               	addwf	prodl,w,c
 25636  00A434  6ED9               	movwf	fsr2l,c
 25637  00A436  0E00               	movlw	high display_prepare@temp
 25638  00A438  20F4               	addwfc	prodh,w,c
 25639  00A43A  6EDA               	movwf	fsr2h,c
 25640  00A43C  50DF               	movf	indf2,w,c
 25641  00A43E  A4D8               	btfss	status,2,c
 25642  00A440  D7DD               	goto	l1412
 25643                           
 25644                           ; BSR set to: 2
 25645                           
 25646                           ; BSR set to: 2
 25647                           ;display.c: 346: }
 25648                           
 25649                           ;display.c: 345: break;
 25650                           
 25651                           ;display.c: 344: display_content[3][12] = '>';
 25652                           
 25653                           ; BSR set to: 2
 25654                           
 25655                           ;display.c: 343: case DISPLAY_STATE_SETUP1_CANCEL:
 25656                           
 25657                           ;display.c: 342: break;
 25658                           
 25659                           ;display.c: 341: display_content[2][12] = '>';
 25660                           
 25661                           ; BSR set to: 0
 25662                           
 25663                           ;display.c: 339: {;display.c: 340: case DISPLAY_STATE_SETUP1_CONFIRM:
 25664                           
 25665                           ; BSR set to: 0
 25666                           ;display.c: 337: };display.c: 338: switch(os.displayState)
 25667  00A442  0101               	movlb	1	; () banked
 25668  00A444  5174               	movf	(_os+15)& (0+255),w,b	;volatile
 25669                           
 25670                           ; Switch size 1, requested type "space"
 25671                           ; Number of cases is 2, Range of values is 17 to 18
 25672                           ; switch strategies available:
 25673                           ; Name         Instructions Cycles
 25674                           ; simple_byte            7     4 (average)
 25675                           ;	Chosen strategy is simple_byte
 25676  00A446  0A11               	xorlw	17	; case 17
 25677  00A448  D08E               	goto	L29
 25678  00A44A                     
 25679                           ;display.c: 350: memcpy(display_content, dc_setup2, sizeof display_content);
 25680                           
 25681                           ; BSR set to: 1
 25682  00A44A  0E48               	movlw	low _display_content
 25683  00A44C  0100               	movlb	0	; () banked
 25684  00A44E  6F60               	movwf	memcpy@d1& (0+255),b
 25685  00A450  0E02               	movlw	high _display_content
 25686  00A452  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25687  00A454  0ECE               	movlw	low _dc_setup2
 25688  00A456  6F62               	movwf	memcpy@s1& (0+255),b
 25689  00A458  0E9F               	movlw	high _dc_setup2
 25690  00A45A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25691  00A45C  0E00               	movlw	0
 25692  00A45E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25693  00A460  0E50               	movlw	80
 25694  00A462  6F64               	movwf	memcpy@n& (0+255),b
 25695  00A464  ECAC  F0A5         	call	_memcpy	;wreg free
 25696                           
 25697                           ;display.c: 351: switch(os.displayState)
 25698  00A468  D00A               	goto	l1419
 25699  00A46A                     l1420:
 25700                           
 25701                           ;display.c: 354: display_content[2][0] = '>';
 25702  00A46A  0E3E               	movlw	62
 25703  00A46C  0102               	movlb	2	; () banked
 25704  00A46E  6F70               	movwf	(_display_content+40)& (0+255),b
 25705                           
 25706                           ;display.c: 355: break;
 25707  00A470  EFD8  F057         	goto	l1407
 25708  00A474                     l1422:
 25709                           
 25710                           ;display.c: 357: display_content[3][0] = '>';
 25711                           
 25712                           ; BSR set to: 2
 25713  00A474  0E3E               	movlw	62
 25714  00A476  0102               	movlb	2	; () banked
 25715  00A478  6F84               	movwf	(_display_content+60)& (0+255),b
 25716                           
 25717                           ; BSR set to: 2
 25718                           ;display.c: 359: }
 25719                           
 25720                           ;display.c: 358: break;
 25721  00A47A  EFD8  F057         	goto	l1407
 25722  00A47E                     l1419:
 25723                           
 25724                           ; BSR set to: 2
 25725  00A47E  0101               	movlb	1	; () banked
 25726  00A480  5174               	movf	(_os+15)& (0+255),w,b	;volatile
 25727                           
 25728                           ; Switch size 1, requested type "space"
 25729                           ; Number of cases is 2, Range of values is 33 to 34
 25730                           ; switch strategies available:
 25731                           ; Name         Instructions Cycles
 25732                           ; simple_byte            7     4 (average)
 25733                           ;	Chosen strategy is simple_byte
 25734  00A482  0A21               	xorlw	33	; case 33
 25735  00A484  B4D8               	btfsc	status,2,c
 25736  00A486  D7F1               	goto	l1420
 25737  00A488  0A03               	xorlw	3	; case 34
 25738  00A48A                     L88:
 25739  00A48A  B4D8               	btfsc	status,2,c
 25740  00A48C  D7F3               	goto	l1422
 25741                           
 25742                           ; BSR set to: 1
 25743                           ;display.c: 360: break;
 25744  00A48E  EFD8  F057         	goto	l1407
 25745  00A492                     
 25746                           ;display.c: 363: memcpy(display_content, dc_divide1, sizeof display_content);
 25747                           
 25748                           ; BSR set to: 1
 25749  00A492  0E48               	movlw	low _display_content
 25750  00A494  0100               	movlb	0	; () banked
 25751  00A496  6F60               	movwf	memcpy@d1& (0+255),b
 25752  00A498  0E02               	movlw	high _display_content
 25753  00A49A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25754  00A49C  0E7E               	movlw	low _dc_divide1
 25755  00A49E  6F62               	movwf	memcpy@s1& (0+255),b
 25756  00A4A0  0E9F               	movlw	high _dc_divide1
 25757  00A4A2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25758  00A4A4  0E00               	movlw	0
 25759  00A4A6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25760  00A4A8  0E50               	movlw	80
 25761  00A4AA  6F64               	movwf	memcpy@n& (0+255),b
 25762  00A4AC  ECAC  F0A5         	call	_memcpy	;wreg free
 25763                           
 25764                           ;display.c: 365: _display_padded_itoa(os.divide_step_size, 3, temp);
 25765  00A4B0  C17B  F078         	movff	_os+22,__display_padded_itoa@value	;volatile
 25766  00A4B4  0100               	movlb	0	; () banked
 25767  00A4B6  6B79               	clrf	(__display_padded_itoa@value+1)& (0+255),b
 25768  00A4B8  0E03               	movlw	3
 25769  00A4BA  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 25770  00A4BC  0EC8               	movlw	low display_prepare@temp
 25771  00A4BE  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 25772  00A4C0  0E00               	movlw	high display_prepare@temp
 25773  00A4C2  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 25774  00A4C4  ECDF  F090         	call	__display_padded_itoa	;wreg free
 25775                           
 25776                           ;display.c: 366: for(cntr=0; cntr<3; ++cntr)
 25777  00A4C8  0E00               	movlw	0
 25778  00A4CA  0100               	movlb	0	; () banked
 25779  00A4CC  6FD3               	movwf	display_prepare@cntr& (0+255),b
 25780  00A4CE                     l18832:
 25781                           
 25782                           ; BSR set to: 0
 25783  00A4CE  0E02               	movlw	2
 25784  00A4D0  65D3               	cpfsgt	display_prepare@cntr& (0+255),b
 25785  00A4D2  D001               	goto	l1424
 25786  00A4D4  D014               	goto	u18880
 25787  00A4D6                     l1424:
 25788                           
 25789                           ; BSR set to: 0
 25790                           ;display.c: 367: {;display.c: 368: display_content[2][cntr] = temp[cntr];
 25791                           
 25792                           ; BSR set to: 0
 25793  00A4D6  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25794  00A4D8  0D01               	mullw	1
 25795  00A4DA  0EC8               	movlw	low display_prepare@temp
 25796  00A4DC  24F3               	addwf	prodl,w,c
 25797  00A4DE  6ED9               	movwf	fsr2l,c
 25798  00A4E0  0E00               	movlw	high display_prepare@temp
 25799  00A4E2  20F4               	addwfc	prodh,w,c
 25800  00A4E4  6EDA               	movwf	fsr2h,c
 25801  00A4E6  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25802  00A4E8  0D01               	mullw	1
 25803  00A4EA  0E70               	movlw	low (_display_content+40)
 25804  00A4EC  24F3               	addwf	prodl,w,c
 25805  00A4EE  6EE1               	movwf	fsr1l,c
 25806  00A4F0  0E02               	movlw	high (_display_content+40)
 25807  00A4F2  20F4               	addwfc	prodh,w,c
 25808  00A4F4  6EE2               	movwf	fsr1h,c
 25809  00A4F6  CFDF FFE7          	movff	indf2,indf1
 25810                           
 25811                           ; BSR set to: 0
 25812  00A4FA  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 25813  00A4FC  D7E8               	goto	l18832
 25814  00A4FE                     u18880:
 25815                           
 25816                           ; BSR set to: 0
 25817                           ;display.c: 369: };display.c: 371: _display_padded_itoa(os.division, 4, temp);
 25818                           
 25819                           ; BSR set to: 0
 25820  00A4FE  C179  F078         	movff	_os+20,__display_padded_itoa@value	;volatile
 25821  00A502  C17A  F079         	movff	_os+21,__display_padded_itoa@value+1	;volatile
 25822  00A506  0E04               	movlw	4
 25823  00A508  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 25824  00A50A  0EC8               	movlw	low display_prepare@temp
 25825  00A50C  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 25826  00A50E  0E00               	movlw	high display_prepare@temp
 25827  00A510  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 25828  00A512  ECDF  F090         	call	__display_padded_itoa	;wreg free
 25829                           
 25830                           ;display.c: 372: for(cntr=0; cntr<4; ++cntr)
 25831  00A516  0E00               	movlw	0
 25832  00A518  0100               	movlb	0	; () banked
 25833  00A51A  6FD3               	movwf	display_prepare@cntr& (0+255),b
 25834  00A51C                     l18846:
 25835                           
 25836                           ; BSR set to: 0
 25837  00A51C  0E03               	movlw	3
 25838  00A51E  65D3               	cpfsgt	display_prepare@cntr& (0+255),b
 25839  00A520  D001               	goto	l1426
 25840  00A522  D01E               	goto	l1428
 25841  00A524                     l1426:
 25842                           
 25843                           ; BSR set to: 0
 25844                           ;display.c: 373: {;display.c: 374: display_content[3][cntr] = temp[cntr];
 25845                           
 25846                           ; BSR set to: 0
 25847  00A524  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25848  00A526  0D01               	mullw	1
 25849  00A528  0EC8               	movlw	low display_prepare@temp
 25850  00A52A  24F3               	addwf	prodl,w,c
 25851  00A52C  6ED9               	movwf	fsr2l,c
 25852  00A52E  0E00               	movlw	high display_prepare@temp
 25853  00A530  20F4               	addwfc	prodh,w,c
 25854  00A532  6EDA               	movwf	fsr2h,c
 25855  00A534  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25856  00A536  0D01               	mullw	1
 25857  00A538  0E84               	movlw	low (_display_content+60)
 25858  00A53A  24F3               	addwf	prodl,w,c
 25859  00A53C  6EE1               	movwf	fsr1l,c
 25860  00A53E  0E02               	movlw	high (_display_content+60)
 25861  00A540  20F4               	addwfc	prodh,w,c
 25862  00A542  6EE2               	movwf	fsr1h,c
 25863  00A544  CFDF FFE7          	movff	indf2,indf1
 25864                           
 25865                           ; BSR set to: 0
 25866  00A548  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 25867  00A54A  D7E8               	goto	l18846
 25868  00A54C                     
 25869                           ;display.c: 379: display_content[2][12] = '>';
 25870                           
 25871                           ; BSR set to: 0
 25872  00A54C  0E3E               	movlw	62
 25873  00A54E  0102               	movlb	2	; () banked
 25874  00A550  6F7C               	movwf	(_display_content+52)& (0+255),b
 25875                           
 25876                           ;display.c: 380: break;
 25877  00A552  EFD8  F057         	goto	l1407
 25878  00A556                     
 25879                           ;display.c: 382: display_content[3][12] = '>';
 25880                           
 25881                           ; BSR set to: 2
 25882  00A556  0E3E               	movlw	62
 25883  00A558  0102               	movlb	2	; () banked
 25884  00A55A  6F90               	movwf	(_display_content+72)& (0+255),b
 25885                           
 25886                           ; BSR set to: 2
 25887                           ;display.c: 384: }
 25888                           
 25889                           ;display.c: 383: break;
 25890  00A55C  EFD8  F057         	goto	l1407
 25891  00A560                     l1428:
 25892                           
 25893                           ; BSR set to: 2
 25894  00A560  0101               	movlb	1	; () banked
 25895  00A562  5174               	movf	(_os+15)& (0+255),w,b	;volatile
 25896                           
 25897                           ; Switch size 1, requested type "space"
 25898                           ; Number of cases is 2, Range of values is 49 to 50
 25899                           ; switch strategies available:
 25900                           ; Name         Instructions Cycles
 25901                           ; simple_byte            7     4 (average)
 25902                           ;	Chosen strategy is simple_byte
 25903  00A564  0A31               	xorlw	49	; case 49
 25904  00A566                     L29:
 25905  00A566  B4D8               	btfsc	status,2,c
 25906  00A568  D7F1               	goto	l1429
 25907  00A56A  0A03               	xorlw	3	; case 50
 25908  00A56C  B4D8               	btfsc	status,2,c
 25909  00A56E  D7F3               	goto	l1431
 25910                           
 25911                           ; BSR set to: 1
 25912                           ;display.c: 385: break;
 25913  00A570  EFD8  F057         	goto	l1407
 25914  00A574                     
 25915                           ;display.c: 388: memcpy(display_content, dc_divide2, sizeof display_content);
 25916                           
 25917                           ; BSR set to: 1
 25918  00A574  0E48               	movlw	low _display_content
 25919  00A576  0100               	movlb	0	; () banked
 25920  00A578  6F60               	movwf	memcpy@d1& (0+255),b
 25921  00A57A  0E02               	movlw	high _display_content
 25922  00A57C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25923  00A57E  0E2E               	movlw	low _dc_divide2
 25924  00A580  6F62               	movwf	memcpy@s1& (0+255),b
 25925  00A582  0E9F               	movlw	high _dc_divide2
 25926  00A584  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25927  00A586  0E00               	movlw	0
 25928  00A588  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25929  00A58A  0E50               	movlw	80
 25930  00A58C  6F64               	movwf	memcpy@n& (0+255),b
 25931  00A58E  ECAC  F0A5         	call	_memcpy	;wreg free
 25932                           
 25933                           ;display.c: 390: _display_padded_itoa(os.division, 0, temp);
 25934  00A592  C179  F078         	movff	_os+20,__display_padded_itoa@value	;volatile
 25935  00A596  C17A  F079         	movff	_os+21,__display_padded_itoa@value+1	;volatile
 25936  00A59A  0E00               	movlw	0
 25937  00A59C  0100               	movlb	0	; () banked
 25938  00A59E  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 25939  00A5A0  0EC8               	movlw	low display_prepare@temp
 25940  00A5A2  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 25941  00A5A4  0E00               	movlw	high display_prepare@temp
 25942  00A5A6  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 25943  00A5A8  ECDF  F090         	call	__display_padded_itoa	;wreg free
 25944                           
 25945                           ;display.c: 391: for(cntr=0; temp[cntr]; ++cntr)
 25946  00A5AC  0E00               	movlw	0
 25947  00A5AE  0100               	movlb	0	; () banked
 25948  00A5B0  6FD3               	movwf	display_prepare@cntr& (0+255),b
 25949  00A5B2  D018               	goto	l1433
 25950  00A5B4                     
 25951                           ; BSR set to: 0
 25952                           ;display.c: 392: {;display.c: 393: display_content[0][cntr+8] = temp[cntr];
 25953                           
 25954                           ; BSR set to: 0
 25955  00A5B4  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25956  00A5B6  0D01               	mullw	1
 25957  00A5B8  0EC8               	movlw	low display_prepare@temp
 25958  00A5BA  24F3               	addwf	prodl,w,c
 25959  00A5BC  6ED9               	movwf	fsr2l,c
 25960  00A5BE  0E00               	movlw	high display_prepare@temp
 25961  00A5C0  20F4               	addwfc	prodh,w,c
 25962  00A5C2  6EDA               	movwf	fsr2h,c
 25963  00A5C4  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25964  00A5C6  6FC6               	movwf	??_display_prepare& (0+255),b
 25965  00A5C8  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25966  00A5CA  0E08               	movlw	8
 25967  00A5CC  27C6               	addwf	??_display_prepare& (0+255),f,b
 25968  00A5CE  0E00               	movlw	0
 25969  00A5D0  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25970  00A5D2  0E48               	movlw	low _display_content
 25971  00A5D4  25C6               	addwf	??_display_prepare& (0+255),w,b
 25972  00A5D6  6EE1               	movwf	fsr1l,c
 25973  00A5D8  0E02               	movlw	high _display_content
 25974  00A5DA  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25975  00A5DC  6EE2               	movwf	fsr1h,c
 25976  00A5DE  CFDF FFE7          	movff	indf2,indf1
 25977                           
 25978                           ; BSR set to: 0
 25979  00A5E2  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 25980  00A5E4                     l1433:
 25981                           
 25982                           ; BSR set to: 0
 25983                           
 25984                           ; BSR set to: 0
 25985  00A5E4  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25986  00A5E6  0D01               	mullw	1
 25987  00A5E8  0EC8               	movlw	low display_prepare@temp
 25988  00A5EA  24F3               	addwf	prodl,w,c
 25989  00A5EC  6ED9               	movwf	fsr2l,c
 25990  00A5EE  0E00               	movlw	high display_prepare@temp
 25991  00A5F0  20F4               	addwfc	prodh,w,c
 25992  00A5F2  6EDA               	movwf	fsr2h,c
 25993  00A5F4  50DF               	movf	indf2,w,c
 25994  00A5F6  A4D8               	btfss	status,2,c
 25995  00A5F8  D7DD               	goto	l1434
 25996                           
 25997                           ; BSR set to: 0
 25998                           ;display.c: 394: };display.c: 396: display_content[0][cntr+8] = ',';
 25999                           
 26000                           ; BSR set to: 0
 26001  00A5FA  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26002  00A5FC  6FC6               	movwf	??_display_prepare& (0+255),b
 26003  00A5FE  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26004  00A600  0E08               	movlw	8
 26005  00A602  27C6               	addwf	??_display_prepare& (0+255),f,b
 26006  00A604  0E00               	movlw	0
 26007  00A606  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26008  00A608  0E48               	movlw	low _display_content
 26009  00A60A  25C6               	addwf	??_display_prepare& (0+255),w,b
 26010  00A60C  6ED9               	movwf	fsr2l,c
 26011  00A60E  0E02               	movlw	high _display_content
 26012  00A610  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26013  00A612  6EDA               	movwf	fsr2h,c
 26014  00A614  0E2C               	movlw	44
 26015  00A616  6EDF               	movwf	indf2,c
 26016                           
 26017                           ; BSR set to: 0
 26018                           ;display.c: 397: if(os.approach_direction==MOTOR_DIRECTION_CCW)
 26019  00A618  0101               	movlb	1	; () banked
 26020  00A61A  2978               	incf	(_os+19)& (0+255),w,b	;volatile
 26021  00A61C  A4D8               	btfss	status,2,c
 26022  00A61E  D024               	goto	l1436
 26023                           
 26024                           ; BSR set to: 1
 26025                           ;display.c: 398: {;display.c: 399: display_content[0][cntr+10] = 'C';
 26026  00A620  0100               	movlb	0	; () banked
 26027  00A622  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26028  00A624  6FC6               	movwf	??_display_prepare& (0+255),b
 26029  00A626  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26030  00A628  0E0A               	movlw	10
 26031  00A62A  27C6               	addwf	??_display_prepare& (0+255),f,b
 26032  00A62C  0E00               	movlw	0
 26033  00A62E  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26034  00A630  0E48               	movlw	low _display_content
 26035  00A632  25C6               	addwf	??_display_prepare& (0+255),w,b
 26036  00A634  6ED9               	movwf	fsr2l,c
 26037  00A636  0E02               	movlw	high _display_content
 26038  00A638  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26039  00A63A  6EDA               	movwf	fsr2h,c
 26040  00A63C  0E43               	movlw	67
 26041  00A63E  6EDF               	movwf	indf2,c
 26042                           
 26043                           ;display.c: 400: display_content[0][cntr+11] = 'C';
 26044  00A640  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26045  00A642  6FC6               	movwf	??_display_prepare& (0+255),b
 26046  00A644  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26047  00A646  0E0B               	movlw	11
 26048  00A648  27C6               	addwf	??_display_prepare& (0+255),f,b
 26049  00A64A  0E00               	movlw	0
 26050  00A64C  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26051  00A64E  0E48               	movlw	low _display_content
 26052  00A650  25C6               	addwf	??_display_prepare& (0+255),w,b
 26053  00A652  6ED9               	movwf	fsr2l,c
 26054  00A654  0E02               	movlw	high _display_content
 26055  00A656  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26056  00A658  6EDA               	movwf	fsr2h,c
 26057  00A65A  0E43               	movlw	67
 26058  00A65C  6EDF               	movwf	indf2,c
 26059                           
 26060                           ;display.c: 401: display_content[0][cntr+12] = 'W';
 26061  00A65E  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26062  00A660  6FC6               	movwf	??_display_prepare& (0+255),b
 26063  00A662  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26064  00A664  0E0C               	movlw	12
 26065  00A666  D014               	goto	L30
 26066  00A668                     l1436:
 26067                           
 26068                           ;display.c: 403: else;display.c: 404: {;display.c: 405: display_content[0][cntr+10] = 'C
      +                          ';
 26069                           
 26070                           ; BSR set to: 0
 26071  00A668  0100               	movlb	0	; () banked
 26072  00A66A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26073  00A66C  6FC6               	movwf	??_display_prepare& (0+255),b
 26074  00A66E  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26075  00A670  0E0A               	movlw	10
 26076  00A672  27C6               	addwf	??_display_prepare& (0+255),f,b
 26077  00A674  0E00               	movlw	0
 26078  00A676  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26079  00A678  0E48               	movlw	low _display_content
 26080  00A67A  25C6               	addwf	??_display_prepare& (0+255),w,b
 26081  00A67C  6ED9               	movwf	fsr2l,c
 26082  00A67E  0E02               	movlw	high _display_content
 26083  00A680  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26084  00A682  6EDA               	movwf	fsr2h,c
 26085  00A684  0E43               	movlw	67
 26086  00A686  6EDF               	movwf	indf2,c
 26087                           
 26088                           ;display.c: 406: display_content[0][cntr+11] = 'W';
 26089  00A688  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26090  00A68A  6FC6               	movwf	??_display_prepare& (0+255),b
 26091  00A68C  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26092  00A68E  0E0B               	movlw	11
 26093  00A690                     L30:
 26094  00A690  27C6               	addwf	??_display_prepare& (0+255),f,b
 26095  00A692  0E00               	movlw	0
 26096  00A694  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26097  00A696  0E48               	movlw	low _display_content
 26098  00A698  25C6               	addwf	??_display_prepare& (0+255),w,b
 26099  00A69A  6ED9               	movwf	fsr2l,c
 26100  00A69C  0E02               	movlw	high _display_content
 26101  00A69E  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26102  00A6A0  6EDA               	movwf	fsr2h,c
 26103  00A6A2  0E57               	movlw	87
 26104  00A6A4  6EDF               	movwf	indf2,c
 26105                           
 26106                           ; BSR set to: 0
 26107                           ;display.c: 407: };display.c: 409: _display_padded_itoa(os.divide_position, 0, temp);
 26108                           
 26109                           ; BSR set to: 0
 26110  00A6A6  C17C  F078         	movff	_os+23,__display_padded_itoa@value	;volatile
 26111  00A6AA  C17D  F079         	movff	_os+24,__display_padded_itoa@value+1	;volatile
 26112  00A6AE  0E00               	movlw	0
 26113  00A6B0  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 26114  00A6B2  0EC8               	movlw	low display_prepare@temp
 26115  00A6B4  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 26116  00A6B6  0E00               	movlw	high display_prepare@temp
 26117  00A6B8  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 26118  00A6BA  ECDF  F090         	call	__display_padded_itoa	;wreg free
 26119                           
 26120                           ;display.c: 410: for(cntr=0; temp[cntr]; ++cntr)
 26121  00A6BE  0E00               	movlw	0
 26122  00A6C0  0100               	movlb	0	; () banked
 26123  00A6C2  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26124  00A6C4  D018               	goto	l1438
 26125  00A6C6                     
 26126                           ; BSR set to: 0
 26127                           ;display.c: 411: {;display.c: 412: display_content[1][cntr+5] = temp[cntr];
 26128                           
 26129                           ; BSR set to: 0
 26130  00A6C6  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26131  00A6C8  0D01               	mullw	1
 26132  00A6CA  0EC8               	movlw	low display_prepare@temp
 26133  00A6CC  24F3               	addwf	prodl,w,c
 26134  00A6CE  6ED9               	movwf	fsr2l,c
 26135  00A6D0  0E00               	movlw	high display_prepare@temp
 26136  00A6D2  20F4               	addwfc	prodh,w,c
 26137  00A6D4  6EDA               	movwf	fsr2h,c
 26138  00A6D6  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26139  00A6D8  6FC6               	movwf	??_display_prepare& (0+255),b
 26140  00A6DA  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26141  00A6DC  0E05               	movlw	5
 26142  00A6DE  27C6               	addwf	??_display_prepare& (0+255),f,b
 26143  00A6E0  0E00               	movlw	0
 26144  00A6E2  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26145  00A6E4  0E5C               	movlw	low (_display_content+20)
 26146  00A6E6  25C6               	addwf	??_display_prepare& (0+255),w,b
 26147  00A6E8  6EE1               	movwf	fsr1l,c
 26148  00A6EA  0E02               	movlw	high (_display_content+20)
 26149  00A6EC  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26150  00A6EE  6EE2               	movwf	fsr1h,c
 26151  00A6F0  CFDF FFE7          	movff	indf2,indf1
 26152                           
 26153                           ; BSR set to: 0
 26154  00A6F4  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26155  00A6F6                     l1438:
 26156                           
 26157                           ; BSR set to: 0
 26158                           
 26159                           ; BSR set to: 0
 26160  00A6F6  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26161  00A6F8  0D01               	mullw	1
 26162  00A6FA  0EC8               	movlw	low display_prepare@temp
 26163  00A6FC  24F3               	addwf	prodl,w,c
 26164  00A6FE  6ED9               	movwf	fsr2l,c
 26165  00A700  0E00               	movlw	high display_prepare@temp
 26166  00A702  20F4               	addwfc	prodh,w,c
 26167  00A704  6EDA               	movwf	fsr2h,c
 26168  00A706  50DF               	movf	indf2,w,c
 26169  00A708  A4D8               	btfss	status,2,c
 26170  00A70A  D7DD               	goto	l1439
 26171                           
 26172                           ; BSR set to: 0
 26173                           ;display.c: 413: };display.c: 415: display_content[1][cntr+6] = '(';
 26174                           
 26175                           ; BSR set to: 0
 26176  00A70C  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26177  00A70E  6FC6               	movwf	??_display_prepare& (0+255),b
 26178  00A710  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26179  00A712  0E06               	movlw	6
 26180  00A714  27C6               	addwf	??_display_prepare& (0+255),f,b
 26181  00A716  0E00               	movlw	0
 26182  00A718  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26183  00A71A  0E5C               	movlw	low (_display_content+20)
 26184  00A71C  25C6               	addwf	??_display_prepare& (0+255),w,b
 26185  00A71E  6ED9               	movwf	fsr2l,c
 26186  00A720  0E02               	movlw	high (_display_content+20)
 26187  00A722  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26188  00A724  6EDA               	movwf	fsr2h,c
 26189  00A726  0E28               	movlw	40
 26190  00A728  6EDF               	movwf	indf2,c
 26191                           
 26192                           ; BSR set to: 0
 26193                           ;display.c: 416: space = cntr + 7;
 26194  00A72A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26195  00A72C  0F07               	addlw	7
 26196  00A72E  6FD2               	movwf	display_prepare@space& (0+255),b
 26197                           
 26198                           ; BSR set to: 0
 26199                           ;display.c: 417: _display_itoa_long(_display_position_in_degrees(), 2, temp);
 26200  00A730  EC95  F0A9         	call	__display_position_in_degrees	;wreg free
 26201  00A734  C060  F0B7         	movff	?__display_position_in_degrees,__display_itoa_long@value
 26202  00A738  C061  F0B8         	movff	?__display_position_in_degrees+1,__display_itoa_long@value+1
 26203  00A73C  C062  F0B9         	movff	?__display_position_in_degrees+2,__display_itoa_long@value+2
 26204  00A740  C063  F0BA         	movff	?__display_position_in_degrees+3,__display_itoa_long@value+3
 26205  00A744  0E02               	movlw	2
 26206  00A746  0100               	movlb	0	; () banked
 26207  00A748  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 26208  00A74A  0EC8               	movlw	low display_prepare@temp
 26209  00A74C  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 26210  00A74E  0E00               	movlw	high display_prepare@temp
 26211  00A750  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26212  00A752  EC05  F088         	call	__display_itoa_long	;wreg free
 26213                           
 26214                           ;display.c: 418: for(cntr=0; temp[cntr]; ++cntr)
 26215  00A756  0E00               	movlw	0
 26216  00A758  0100               	movlb	0	; () banked
 26217  00A75A  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26218  00A75C  D018               	goto	l1441
 26219  00A75E                     
 26220                           ; BSR set to: 0
 26221                           ;display.c: 419: {;display.c: 420: display_content[1][cntr+space] = temp[cntr];
 26222                           
 26223                           ; BSR set to: 0
 26224  00A75E  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26225  00A760  0D01               	mullw	1
 26226  00A762  0EC8               	movlw	low display_prepare@temp
 26227  00A764  24F3               	addwf	prodl,w,c
 26228  00A766  6ED9               	movwf	fsr2l,c
 26229  00A768  0E00               	movlw	high display_prepare@temp
 26230  00A76A  20F4               	addwfc	prodh,w,c
 26231  00A76C  6EDA               	movwf	fsr2h,c
 26232  00A76E  51D2               	movf	display_prepare@space& (0+255),w,b
 26233  00A770  C0D3  F0C6         	movff	display_prepare@cntr,??_display_prepare
 26234  00A774  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26235  00A776  27C6               	addwf	??_display_prepare& (0+255),f,b
 26236  00A778  0E00               	movlw	0
 26237  00A77A  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26238  00A77C  0E5C               	movlw	low (_display_content+20)
 26239  00A77E  25C6               	addwf	??_display_prepare& (0+255),w,b
 26240  00A780  6EE1               	movwf	fsr1l,c
 26241  00A782  0E02               	movlw	high (_display_content+20)
 26242  00A784  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26243  00A786  6EE2               	movwf	fsr1h,c
 26244  00A788  CFDF FFE7          	movff	indf2,indf1
 26245                           
 26246                           ; BSR set to: 0
 26247  00A78C  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26248  00A78E                     l1441:
 26249                           
 26250                           ; BSR set to: 0
 26251                           
 26252                           ; BSR set to: 0
 26253  00A78E  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26254  00A790  0D01               	mullw	1
 26255  00A792  0EC8               	movlw	low display_prepare@temp
 26256  00A794  24F3               	addwf	prodl,w,c
 26257  00A796  6ED9               	movwf	fsr2l,c
 26258  00A798  0E00               	movlw	high display_prepare@temp
 26259  00A79A  20F4               	addwfc	prodh,w,c
 26260  00A79C  6EDA               	movwf	fsr2h,c
 26261  00A79E  50DF               	movf	indf2,w,c
 26262  00A7A0  A4D8               	btfss	status,2,c
 26263  00A7A2  D7DD               	goto	l1442
 26264                           
 26265                           ; BSR set to: 0
 26266                           ;display.c: 421: };display.c: 422: display_content[1][cntr+space] = 0x01;
 26267                           
 26268                           ; BSR set to: 0
 26269  00A7A4  51D2               	movf	display_prepare@space& (0+255),w,b
 26270  00A7A6  C0D3  F0C6         	movff	display_prepare@cntr,??_display_prepare
 26271  00A7AA  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26272  00A7AC  27C6               	addwf	??_display_prepare& (0+255),f,b
 26273  00A7AE  0E00               	movlw	0
 26274  00A7B0  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26275  00A7B2  0E5C               	movlw	low (_display_content+20)
 26276  00A7B4  25C6               	addwf	??_display_prepare& (0+255),w,b
 26277  00A7B6  6ED9               	movwf	fsr2l,c
 26278  00A7B8  0E02               	movlw	high (_display_content+20)
 26279  00A7BA  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26280  00A7BC  6EDA               	movwf	fsr2h,c
 26281  00A7BE  0E01               	movlw	1
 26282  00A7C0  6EDF               	movwf	indf2,c
 26283                           
 26284                           ;display.c: 423: display_content[1][cntr+space+1] = ')';
 26285  00A7C2  51D2               	movf	display_prepare@space& (0+255),w,b
 26286  00A7C4  C0D3  F0C6         	movff	display_prepare@cntr,??_display_prepare
 26287  00A7C8  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26288  00A7CA  27C6               	addwf	??_display_prepare& (0+255),f,b
 26289  00A7CC  0E00               	movlw	0
 26290  00A7CE  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26291  00A7D0  0E01               	movlw	1
 26292  00A7D2  27C6               	addwf	??_display_prepare& (0+255),f,b
 26293  00A7D4  0E00               	movlw	0
 26294  00A7D6  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26295  00A7D8  0E5C               	movlw	low (_display_content+20)
 26296  00A7DA  25C6               	addwf	??_display_prepare& (0+255),w,b
 26297  00A7DC  6ED9               	movwf	fsr2l,c
 26298  00A7DE  0E02               	movlw	high (_display_content+20)
 26299  00A7E0  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26300  00A7E2  6EDA               	movwf	fsr2h,c
 26301  00A7E4  0E29               	movlw	41
 26302  00A7E6  6EDF               	movwf	indf2,c
 26303                           
 26304                           ; BSR set to: 0
 26305                           ;display.c: 425: _display_signed_itoa(os.divide_jump_size, temp);
 26306  00A7E8  C17E  F08F         	movff	_os+25,__display_signed_itoa@value	;volatile
 26307  00A7EC  C17F  F090         	movff	_os+26,__display_signed_itoa@value+1	;volatile
 26308  00A7F0  0EC8               	movlw	low display_prepare@temp
 26309  00A7F2  6F91               	movwf	__display_signed_itoa@text& (0+255),b
 26310  00A7F4  0E00               	movlw	high display_prepare@temp
 26311  00A7F6  6F92               	movwf	(__display_signed_itoa@text+1)& (0+255),b
 26312  00A7F8  ECEC  F0AA         	call	__display_signed_itoa	;wreg free
 26313                           
 26314                           ;display.c: 426: for(cntr=0; temp[cntr]; ++cntr)
 26315  00A7FC  0E00               	movlw	0
 26316  00A7FE  0100               	movlb	0	; () banked
 26317  00A800  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26318  00A802  D018               	goto	l1444
 26319  00A804                     
 26320                           ; BSR set to: 0
 26321                           ;display.c: 427: {;display.c: 428: display_content[2][cntr+11] = temp[cntr];
 26322                           
 26323                           ; BSR set to: 0
 26324  00A804  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26325  00A806  0D01               	mullw	1
 26326  00A808  0EC8               	movlw	low display_prepare@temp
 26327  00A80A  24F3               	addwf	prodl,w,c
 26328  00A80C  6ED9               	movwf	fsr2l,c
 26329  00A80E  0E00               	movlw	high display_prepare@temp
 26330  00A810  20F4               	addwfc	prodh,w,c
 26331  00A812  6EDA               	movwf	fsr2h,c
 26332  00A814  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26333  00A816  6FC6               	movwf	??_display_prepare& (0+255),b
 26334  00A818  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26335  00A81A  0E0B               	movlw	11
 26336  00A81C  27C6               	addwf	??_display_prepare& (0+255),f,b
 26337  00A81E  0E00               	movlw	0
 26338  00A820  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26339  00A822  0E70               	movlw	low (_display_content+40)
 26340  00A824  25C6               	addwf	??_display_prepare& (0+255),w,b
 26341  00A826  6EE1               	movwf	fsr1l,c
 26342  00A828  0E02               	movlw	high (_display_content+40)
 26343  00A82A  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26344  00A82C  6EE2               	movwf	fsr1h,c
 26345  00A82E  CFDF FFE7          	movff	indf2,indf1
 26346                           
 26347                           ; BSR set to: 0
 26348  00A832  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26349  00A834                     l1444:
 26350                           
 26351                           ; BSR set to: 0
 26352                           
 26353                           ; BSR set to: 0
 26354  00A834  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26355  00A836  0D01               	mullw	1
 26356  00A838  0EC8               	movlw	low display_prepare@temp
 26357  00A83A  24F3               	addwf	prodl,w,c
 26358  00A83C  6ED9               	movwf	fsr2l,c
 26359  00A83E  0E00               	movlw	high display_prepare@temp
 26360  00A840  20F4               	addwfc	prodh,w,c
 26361  00A842  6EDA               	movwf	fsr2h,c
 26362  00A844  50DF               	movf	indf2,w,c
 26363  00A846  B4D8               	btfsc	status,2,c
 26364  00A848  D3B3               	goto	l1407
 26365  00A84A  D7DC               	goto	l1445
 26366  00A84C                     
 26367                           ; BSR set to: 0
 26368                           ;display.c: 433: memcpy(display_content, dc_arc1, sizeof display_content);
 26369                           
 26370                           ; BSR set to: 0
 26371  00A84C  0E48               	movlw	low _display_content
 26372  00A84E  6F60               	movwf	memcpy@d1& (0+255),b
 26373  00A850  0E02               	movlw	high _display_content
 26374  00A852  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26375  00A854  0EDE               	movlw	low _dc_arc1
 26376  00A856  6F62               	movwf	memcpy@s1& (0+255),b
 26377  00A858  0E9E               	movlw	high _dc_arc1
 26378  00A85A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26379  00A85C  0E00               	movlw	0
 26380  00A85E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26381  00A860  0E50               	movlw	80
 26382  00A862  6F64               	movwf	memcpy@n& (0+255),b
 26383  00A864  ECAC  F0A5         	call	_memcpy	;wreg free
 26384                           
 26385                           ;display.c: 434: switch(os.displayState)
 26386  00A868  D008               	goto	l1448
 26387  00A86A                     
 26388                           ;display.c: 437: display_content[2][12] = '>';
 26389  00A86A  0E3E               	movlw	62
 26390  00A86C  0102               	movlb	2	; () banked
 26391  00A86E  6F7C               	movwf	(_display_content+52)& (0+255),b
 26392                           
 26393                           ;display.c: 438: break;
 26394  00A870  D00C               	goto	l1450
 26395  00A872                     
 26396                           ;display.c: 440: display_content[3][12] = '>';
 26397                           
 26398                           ; BSR set to: 2
 26399  00A872  0E3E               	movlw	62
 26400  00A874  0102               	movlb	2	; () banked
 26401  00A876  6F90               	movwf	(_display_content+72)& (0+255),b
 26402                           
 26403                           ; BSR set to: 2
 26404                           ;display.c: 442: }
 26405                           
 26406                           ;display.c: 441: break;
 26407  00A878  D008               	goto	l1450
 26408  00A87A                     l1448:
 26409                           
 26410                           ; BSR set to: 2
 26411  00A87A  0101               	movlb	1	; () banked
 26412  00A87C  5174               	movf	(_os+15)& (0+255),w,b	;volatile
 26413                           
 26414                           ; Switch size 1, requested type "space"
 26415                           ; Number of cases is 2, Range of values is 81 to 82
 26416                           ; switch strategies available:
 26417                           ; Name         Instructions Cycles
 26418                           ; simple_byte            7     4 (average)
 26419                           ;	Chosen strategy is simple_byte
 26420  00A87E  0A51               	xorlw	81	; case 81
 26421  00A880  B4D8               	btfsc	status,2,c
 26422  00A882  D7F3               	goto	l1449
 26423  00A884  0A03               	xorlw	3	; case 82
 26424  00A886  B4D8               	btfsc	status,2,c
 26425  00A888  D7F4               	goto	l1451
 26426  00A88A                     l1450:
 26427                           
 26428                           ;display.c: 445: _display_itoa_long(os.arc_size, 2, temp);
 26429                           
 26430                           ; BSR set to: 1
 26431  00A88A  C182  F0B7         	movff	_os+29,__display_itoa_long@value	;volatile
 26432  00A88E  C183  F0B8         	movff	_os+30,__display_itoa_long@value+1	;volatile
 26433  00A892  C184  F0B9         	movff	_os+31,__display_itoa_long@value+2	;volatile
 26434  00A896  C185  F0BA         	movff	_os+32,__display_itoa_long@value+3	;volatile
 26435  00A89A  0E02               	movlw	2
 26436  00A89C  0100               	movlb	0	; () banked
 26437  00A89E  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 26438  00A8A0  0EC8               	movlw	low display_prepare@temp
 26439  00A8A2  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 26440  00A8A4  0E00               	movlw	high display_prepare@temp
 26441  00A8A6  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26442  00A8A8  EC05  F088         	call	__display_itoa_long	;wreg free
 26443                           
 26444                           ;display.c: 446: for(cntr=0; temp[cntr]; ++cntr)
 26445  00A8AC  0E00               	movlw	0
 26446  00A8AE  0100               	movlb	0	; () banked
 26447  00A8B0  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26448  00A8B2  D018               	goto	l1452
 26449  00A8B4                     
 26450                           ; BSR set to: 0
 26451                           ;display.c: 447: {;display.c: 448: display_content[1][10+cntr] = temp[cntr];
 26452                           
 26453                           ; BSR set to: 0
 26454  00A8B4  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26455  00A8B6  0D01               	mullw	1
 26456  00A8B8  0EC8               	movlw	low display_prepare@temp
 26457  00A8BA  24F3               	addwf	prodl,w,c
 26458  00A8BC  6ED9               	movwf	fsr2l,c
 26459  00A8BE  0E00               	movlw	high display_prepare@temp
 26460  00A8C0  20F4               	addwfc	prodh,w,c
 26461  00A8C2  6EDA               	movwf	fsr2h,c
 26462  00A8C4  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26463  00A8C6  6FC6               	movwf	??_display_prepare& (0+255),b
 26464  00A8C8  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26465  00A8CA  0E0A               	movlw	10
 26466  00A8CC  27C6               	addwf	??_display_prepare& (0+255),f,b
 26467  00A8CE  0E00               	movlw	0
 26468  00A8D0  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26469  00A8D2  0E5C               	movlw	low (_display_content+20)
 26470  00A8D4  25C6               	addwf	??_display_prepare& (0+255),w,b
 26471  00A8D6  6EE1               	movwf	fsr1l,c
 26472  00A8D8  0E02               	movlw	high (_display_content+20)
 26473  00A8DA  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26474  00A8DC  6EE2               	movwf	fsr1h,c
 26475  00A8DE  CFDF FFE7          	movff	indf2,indf1
 26476                           
 26477                           ; BSR set to: 0
 26478  00A8E2  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26479  00A8E4                     l1452:
 26480                           
 26481                           ; BSR set to: 0
 26482                           
 26483                           ; BSR set to: 0
 26484  00A8E4  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26485  00A8E6  0D01               	mullw	1
 26486  00A8E8  0EC8               	movlw	low display_prepare@temp
 26487  00A8EA  24F3               	addwf	prodl,w,c
 26488  00A8EC  6ED9               	movwf	fsr2l,c
 26489  00A8EE  0E00               	movlw	high display_prepare@temp
 26490  00A8F0  20F4               	addwfc	prodh,w,c
 26491  00A8F2  6EDA               	movwf	fsr2h,c
 26492  00A8F4  50DF               	movf	indf2,w,c
 26493  00A8F6  A4D8               	btfss	status,2,c
 26494  00A8F8  D7DD               	goto	l1453
 26495                           
 26496                           ; BSR set to: 0
 26497                           ;display.c: 449: };display.c: 450: display_content[1][10+cntr] = 0x01;
 26498                           
 26499                           ; BSR set to: 0
 26500  00A8FA  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26501  00A8FC  6FC6               	movwf	??_display_prepare& (0+255),b
 26502  00A8FE  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26503  00A900  0E0A               	movlw	10
 26504  00A902  27C6               	addwf	??_display_prepare& (0+255),f,b
 26505  00A904  0E00               	movlw	0
 26506  00A906  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26507  00A908  0E5C               	movlw	low (_display_content+20)
 26508  00A90A  25C6               	addwf	??_display_prepare& (0+255),w,b
 26509  00A90C  6ED9               	movwf	fsr2l,c
 26510  00A90E  0E02               	movlw	high (_display_content+20)
 26511  00A910  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26512  00A912  6EDA               	movwf	fsr2h,c
 26513  00A914  0E01               	movlw	1
 26514  00A916  6EDF               	movwf	indf2,c
 26515                           
 26516                           ; BSR set to: 0
 26517                           ;display.c: 453: _display_itoa(os.arc_step_size, 2, temp);
 26518  00A918  C180  F09F         	movff	_os+27,__display_itoa@value	;volatile
 26519  00A91C  C181  F0A0         	movff	_os+28,__display_itoa@value+1	;volatile
 26520  00A920  0E02               	movlw	2
 26521  00A922  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 26522  00A924  0EC8               	movlw	low display_prepare@temp
 26523  00A926  6FA2               	movwf	__display_itoa@text& (0+255),b
 26524  00A928  0E00               	movlw	high display_prepare@temp
 26525  00A92A  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 26526  00A92C  EC3C  F072         	call	__display_itoa	;wreg free
 26527                           
 26528                           ;display.c: 454: if(os.arc_step_size>999)
 26529  00A930  0EE8               	movlw	232
 26530  00A932  0101               	movlb	1	; () banked
 26531  00A934  5D80               	subwf	(_os+27)& (0+255),w,b	;volatile
 26532  00A936  0E03               	movlw	3
 26533  00A938  5981               	subwfb	(_os+28)& (0+255),w,b	;volatile
 26534  00A93A  A0D8               	btfss	status,0,c
 26535  00A93C  D002               	goto	l1455
 26536                           
 26537                           ; BSR set to: 1
 26538                           ;display.c: 455: space = 0;
 26539  00A93E  0E00               	movlw	0
 26540  00A940  D001               	goto	L24
 26541  00A942                     l1455:
 26542                           
 26543                           ;display.c: 456: else;display.c: 457: space = 1;
 26544                           
 26545                           ; BSR set to: 0
 26546  00A942  0E01               	movlw	1
 26547  00A944                     L24:
 26548  00A944  0100               	movlb	0	; () banked
 26549  00A946  6FD2               	movwf	display_prepare@space& (0+255),b
 26550                           
 26551                           ; BSR set to: 0
 26552                           ;display.c: 458: for(cntr=0; temp[cntr]; ++cntr)
 26553  00A948  0E00               	movlw	0
 26554  00A94A  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26555  00A94C  D018               	goto	l1457
 26556  00A94E                     
 26557                           ; BSR set to: 0
 26558                           ;display.c: 459: {;display.c: 460: display_content[3][space+cntr] = temp[cntr];
 26559                           
 26560                           ; BSR set to: 0
 26561  00A94E  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26562  00A950  0D01               	mullw	1
 26563  00A952  0EC8               	movlw	low display_prepare@temp
 26564  00A954  24F3               	addwf	prodl,w,c
 26565  00A956  6ED9               	movwf	fsr2l,c
 26566  00A958  0E00               	movlw	high display_prepare@temp
 26567  00A95A  20F4               	addwfc	prodh,w,c
 26568  00A95C  6EDA               	movwf	fsr2h,c
 26569  00A95E  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26570  00A960  C0D2  F0C6         	movff	display_prepare@space,??_display_prepare
 26571  00A964  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26572  00A966  27C6               	addwf	??_display_prepare& (0+255),f,b
 26573  00A968  0E00               	movlw	0
 26574  00A96A  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26575  00A96C  0E84               	movlw	low (_display_content+60)
 26576  00A96E  25C6               	addwf	??_display_prepare& (0+255),w,b
 26577  00A970  6EE1               	movwf	fsr1l,c
 26578  00A972  0E02               	movlw	high (_display_content+60)
 26579  00A974  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26580  00A976  6EE2               	movwf	fsr1h,c
 26581  00A978  CFDF FFE7          	movff	indf2,indf1
 26582                           
 26583                           ; BSR set to: 0
 26584  00A97C  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26585  00A97E                     l1457:
 26586                           
 26587                           ; BSR set to: 0
 26588                           
 26589                           ; BSR set to: 0
 26590  00A97E  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26591  00A980  0D01               	mullw	1
 26592  00A982  0EC8               	movlw	low display_prepare@temp
 26593  00A984  24F3               	addwf	prodl,w,c
 26594  00A986  6ED9               	movwf	fsr2l,c
 26595  00A988  0E00               	movlw	high display_prepare@temp
 26596  00A98A  20F4               	addwfc	prodh,w,c
 26597  00A98C  6EDA               	movwf	fsr2h,c
 26598  00A98E  50DF               	movf	indf2,w,c
 26599  00A990  A4D8               	btfss	status,2,c
 26600  00A992  D7DD               	goto	l1458
 26601                           
 26602                           ; BSR set to: 0
 26603                           ;display.c: 461: };display.c: 462: display_content[3][space+cntr] = 0x01 ;
 26604                           
 26605                           ; BSR set to: 0
 26606  00A994  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26607  00A996  C0D2  F0C6         	movff	display_prepare@space,??_display_prepare
 26608  00A99A  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26609  00A99C  27C6               	addwf	??_display_prepare& (0+255),f,b
 26610  00A99E  0E00               	movlw	0
 26611  00A9A0  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26612  00A9A2  0E84               	movlw	low (_display_content+60)
 26613  00A9A4  25C6               	addwf	??_display_prepare& (0+255),w,b
 26614  00A9A6  6ED9               	movwf	fsr2l,c
 26615  00A9A8  0E02               	movlw	high (_display_content+60)
 26616  00A9AA  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26617  00A9AC  6EDA               	movwf	fsr2h,c
 26618  00A9AE  0E01               	movlw	1
 26619  00A9B0  D268               	goto	L27
 26620  00A9B2                     
 26621                           ; BSR set to: 0
 26622                           ;display.c: 467: memcpy(display_content, dc_arc2, sizeof display_content);
 26623                           
 26624                           ; BSR set to: 0
 26625  00A9B2  0E48               	movlw	low _display_content
 26626  00A9B4  6F60               	movwf	memcpy@d1& (0+255),b
 26627  00A9B6  0E02               	movlw	high _display_content
 26628  00A9B8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26629  00A9BA  0E8E               	movlw	low _dc_arc2
 26630  00A9BC  6F62               	movwf	memcpy@s1& (0+255),b
 26631  00A9BE  0E9E               	movlw	high _dc_arc2
 26632  00A9C0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26633  00A9C2  0E00               	movlw	0
 26634  00A9C4  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26635  00A9C6  0E50               	movlw	80
 26636  00A9C8  6F64               	movwf	memcpy@n& (0+255),b
 26637  00A9CA  ECAC  F0A5         	call	_memcpy	;wreg free
 26638                           
 26639                           ;display.c: 468: switch(os.displayState)
 26640  00A9CE  D025               	goto	l1461
 26641  00A9D0                     
 26642                           ;display.c: 471: display_content[2][6] = 'W';
 26643  00A9D0  0E57               	movlw	87
 26644  00A9D2  0102               	movlb	2	; () banked
 26645  00A9D4  6F76               	movwf	(_display_content+46)& (0+255),b
 26646                           
 26647                           ;display.c: 472: display_content[2][7] = ' ';
 26648  00A9D6  0E20               	movlw	32
 26649  00A9D8  6F77               	movwf	(_display_content+47)& (0+255),b
 26650                           
 26651                           ;display.c: 473: break;
 26652  00A9DA  D027               	goto	l1463
 26653  00A9DC                     
 26654                           ;display.c: 475: memcpy(display_content[2], "        ", 8);
 26655                           
 26656                           ; BSR set to: 2
 26657  00A9DC  0E70               	movlw	low (_display_content+40)
 26658  00A9DE  0100               	movlb	0	; () banked
 26659  00A9E0  6F60               	movwf	memcpy@d1& (0+255),b
 26660  00A9E2  0E02               	movlw	high (_display_content+40)
 26661  00A9E4  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26662  00A9E6  0E29               	movlw	low STR_1
 26663  00A9E8  6F62               	movwf	memcpy@s1& (0+255),b
 26664  00A9EA  0EA3               	movlw	high STR_1
 26665  00A9EC  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26666  00A9EE  0E00               	movlw	0
 26667  00A9F0  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26668  00A9F2  0E08               	movlw	8
 26669  00A9F4  6F64               	movwf	memcpy@n& (0+255),b
 26670  00A9F6  ECAC  F0A5         	call	_memcpy	;wreg free
 26671                           
 26672                           ;display.c: 476: memcpy(display_content[3], "Cancel", 6);
 26673  00A9FA  0E84               	movlw	low (_display_content+60)
 26674  00A9FC  0100               	movlb	0	; () banked
 26675  00A9FE  6F60               	movwf	memcpy@d1& (0+255),b
 26676  00AA00  0E02               	movlw	high (_display_content+60)
 26677  00AA02  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26678  00AA04  0E32               	movlw	low STR_2
 26679  00AA06  6F62               	movwf	memcpy@s1& (0+255),b
 26680  00AA08  0EA3               	movlw	high STR_2
 26681  00AA0A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26682  00AA0C  0E00               	movlw	0
 26683  00AA0E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26684  00AA10  0E06               	movlw	6
 26685  00AA12  6F64               	movwf	memcpy@n& (0+255),b
 26686  00AA14  ECAC  F0A5         	call	_memcpy	;wreg free
 26687                           
 26688                           ;display.c: 478: }
 26689                           
 26690                           ;display.c: 477: break;
 26691  00AA18  D008               	goto	l1463
 26692  00AA1A                     l1461:
 26693  00AA1A  0101               	movlb	1	; () banked
 26694  00AA1C  5174               	movf	(_os+15)& (0+255),w,b	;volatile
 26695                           
 26696                           ; Switch size 1, requested type "space"
 26697                           ; Number of cases is 2, Range of values is 98 to 99
 26698                           ; switch strategies available:
 26699                           ; Name         Instructions Cycles
 26700                           ; simple_byte            7     4 (average)
 26701                           ;	Chosen strategy is simple_byte
 26702  00AA1E  0A62               	xorlw	98	; case 98
 26703  00AA20  B4D8               	btfsc	status,2,c
 26704  00AA22  D7DC               	goto	l1464
 26705  00AA24  0A01               	xorlw	1	; case 99
 26706  00AA26  B4D8               	btfsc	status,2,c
 26707  00AA28  D7D3               	goto	l1462
 26708  00AA2A                     l1463:
 26709                           
 26710                           ;display.c: 481: _display_itoa_long(os.arc_size, 2, temp);
 26711                           
 26712                           ; BSR set to: 1
 26713  00AA2A  C182  F0B7         	movff	_os+29,__display_itoa_long@value	;volatile
 26714  00AA2E  C183  F0B8         	movff	_os+30,__display_itoa_long@value+1	;volatile
 26715  00AA32  C184  F0B9         	movff	_os+31,__display_itoa_long@value+2	;volatile
 26716  00AA36  C185  F0BA         	movff	_os+32,__display_itoa_long@value+3	;volatile
 26717  00AA3A  0E02               	movlw	2
 26718  00AA3C  0100               	movlb	0	; () banked
 26719  00AA3E  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 26720  00AA40  0EC8               	movlw	low display_prepare@temp
 26721  00AA42  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 26722  00AA44  0E00               	movlw	high display_prepare@temp
 26723  00AA46  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26724  00AA48  EC05  F088         	call	__display_itoa_long	;wreg free
 26725                           
 26726                           ;display.c: 482: for(cntr=0; temp[cntr]; ++cntr)
 26727  00AA4C  0E00               	movlw	0
 26728  00AA4E  0100               	movlb	0	; () banked
 26729  00AA50  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26730  00AA52  D018               	goto	l1465
 26731  00AA54                     
 26732                           ; BSR set to: 0
 26733                           ;display.c: 483: {;display.c: 484: display_content[0][10+cntr] = temp[cntr];
 26734                           
 26735                           ; BSR set to: 0
 26736  00AA54  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26737  00AA56  0D01               	mullw	1
 26738  00AA58  0EC8               	movlw	low display_prepare@temp
 26739  00AA5A  24F3               	addwf	prodl,w,c
 26740  00AA5C  6ED9               	movwf	fsr2l,c
 26741  00AA5E  0E00               	movlw	high display_prepare@temp
 26742  00AA60  20F4               	addwfc	prodh,w,c
 26743  00AA62  6EDA               	movwf	fsr2h,c
 26744  00AA64  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26745  00AA66  6FC6               	movwf	??_display_prepare& (0+255),b
 26746  00AA68  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26747  00AA6A  0E0A               	movlw	10
 26748  00AA6C  27C6               	addwf	??_display_prepare& (0+255),f,b
 26749  00AA6E  0E00               	movlw	0
 26750  00AA70  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26751  00AA72  0E48               	movlw	low _display_content
 26752  00AA74  25C6               	addwf	??_display_prepare& (0+255),w,b
 26753  00AA76  6EE1               	movwf	fsr1l,c
 26754  00AA78  0E02               	movlw	high _display_content
 26755  00AA7A  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26756  00AA7C  6EE2               	movwf	fsr1h,c
 26757  00AA7E  CFDF FFE7          	movff	indf2,indf1
 26758                           
 26759                           ; BSR set to: 0
 26760  00AA82  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26761  00AA84                     l1465:
 26762                           
 26763                           ; BSR set to: 0
 26764                           
 26765                           ; BSR set to: 0
 26766  00AA84  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26767  00AA86  0D01               	mullw	1
 26768  00AA88  0EC8               	movlw	low display_prepare@temp
 26769  00AA8A  24F3               	addwf	prodl,w,c
 26770  00AA8C  6ED9               	movwf	fsr2l,c
 26771  00AA8E  0E00               	movlw	high display_prepare@temp
 26772  00AA90  20F4               	addwfc	prodh,w,c
 26773  00AA92  6EDA               	movwf	fsr2h,c
 26774  00AA94  50DF               	movf	indf2,w,c
 26775  00AA96  A4D8               	btfss	status,2,c
 26776  00AA98  D7DD               	goto	l1466
 26777                           
 26778                           ; BSR set to: 0
 26779                           ;display.c: 485: };display.c: 486: display_content[0][10+cntr] = 0x01;
 26780                           
 26781                           ; BSR set to: 0
 26782  00AA9A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26783  00AA9C  6FC6               	movwf	??_display_prepare& (0+255),b
 26784  00AA9E  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26785  00AAA0  0E0A               	movlw	10
 26786  00AAA2  27C6               	addwf	??_display_prepare& (0+255),f,b
 26787  00AAA4  0E00               	movlw	0
 26788  00AAA6  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26789  00AAA8  0E48               	movlw	low _display_content
 26790  00AAAA  25C6               	addwf	??_display_prepare& (0+255),w,b
 26791  00AAAC  6ED9               	movwf	fsr2l,c
 26792  00AAAE  0E02               	movlw	high _display_content
 26793  00AAB0  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26794  00AAB2  6EDA               	movwf	fsr2h,c
 26795  00AAB4  0E01               	movlw	1
 26796  00AAB6  6EDF               	movwf	indf2,c
 26797                           
 26798                           ; BSR set to: 0
 26799                           ;display.c: 489: _display_itoa_long(_display_position_in_degrees(), 2, temp);
 26800  00AAB8  EC95  F0A9         	call	__display_position_in_degrees	;wreg free
 26801  00AABC  C060  F0B7         	movff	?__display_position_in_degrees,__display_itoa_long@value
 26802  00AAC0  C061  F0B8         	movff	?__display_position_in_degrees+1,__display_itoa_long@value+1
 26803  00AAC4  C062  F0B9         	movff	?__display_position_in_degrees+2,__display_itoa_long@value+2
 26804  00AAC8  C063  F0BA         	movff	?__display_position_in_degrees+3,__display_itoa_long@value+3
 26805  00AACC  0E02               	movlw	2
 26806  00AACE  0100               	movlb	0	; () banked
 26807  00AAD0  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 26808  00AAD2  0EC8               	movlw	low display_prepare@temp
 26809  00AAD4  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 26810  00AAD6  0E00               	movlw	high display_prepare@temp
 26811  00AAD8  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26812  00AADA  EC05  F088         	call	__display_itoa_long	;wreg free
 26813                           
 26814                           ;display.c: 490: space = 6-strlen(temp);
 26815  00AADE  0EC8               	movlw	low display_prepare@temp
 26816  00AAE0  0100               	movlb	0	; () banked
 26817  00AAE2  6F60               	movwf	strlen@s& (0+255),b
 26818  00AAE4  0E00               	movlw	high display_prepare@temp
 26819  00AAE6  6F61               	movwf	(strlen@s+1)& (0+255),b
 26820  00AAE8  ECB4  F0AB         	call	_strlen	;wreg free
 26821  00AAEC  0100               	movlb	0	; () banked
 26822  00AAEE  5160               	movf	?_strlen& (0+255),w,b
 26823  00AAF0  0800               	sublw	0
 26824  00AAF2  0F06               	addlw	6
 26825  00AAF4  6FD2               	movwf	display_prepare@space& (0+255),b
 26826                           
 26827                           ; BSR set to: 0
 26828                           ;display.c: 491: for(cntr=0; temp[cntr]; ++cntr)
 26829  00AAF6  0E00               	movlw	0
 26830  00AAF8  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26831  00AAFA  D01C               	goto	l1468
 26832  00AAFC                     
 26833                           ; BSR set to: 0
 26834                           ;display.c: 492: {;display.c: 493: display_content[1][13+space+cntr] = temp[cntr];
 26835                           
 26836                           ; BSR set to: 0
 26837  00AAFC  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26838  00AAFE  0D01               	mullw	1
 26839  00AB00  0EC8               	movlw	low display_prepare@temp
 26840  00AB02  24F3               	addwf	prodl,w,c
 26841  00AB04  6ED9               	movwf	fsr2l,c
 26842  00AB06  0E00               	movlw	high display_prepare@temp
 26843  00AB08  20F4               	addwfc	prodh,w,c
 26844  00AB0A  6EDA               	movwf	fsr2h,c
 26845  00AB0C  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26846  00AB0E  C0D2  F0C6         	movff	display_prepare@space,??_display_prepare
 26847  00AB12  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26848  00AB14  27C6               	addwf	??_display_prepare& (0+255),f,b
 26849  00AB16  0E00               	movlw	0
 26850  00AB18  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26851  00AB1A  0E0D               	movlw	13
 26852  00AB1C  27C6               	addwf	??_display_prepare& (0+255),f,b
 26853  00AB1E  0E00               	movlw	0
 26854  00AB20  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26855  00AB22  0E5C               	movlw	low (_display_content+20)
 26856  00AB24  25C6               	addwf	??_display_prepare& (0+255),w,b
 26857  00AB26  6EE1               	movwf	fsr1l,c
 26858  00AB28  0E02               	movlw	high (_display_content+20)
 26859  00AB2A  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26860  00AB2C  6EE2               	movwf	fsr1h,c
 26861  00AB2E  CFDF FFE7          	movff	indf2,indf1
 26862                           
 26863                           ; BSR set to: 0
 26864  00AB32  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26865  00AB34                     l1468:
 26866                           
 26867                           ; BSR set to: 0
 26868                           
 26869                           ; BSR set to: 0
 26870  00AB34  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26871  00AB36  0D01               	mullw	1
 26872  00AB38  0EC8               	movlw	low display_prepare@temp
 26873  00AB3A  24F3               	addwf	prodl,w,c
 26874  00AB3C  6ED9               	movwf	fsr2l,c
 26875  00AB3E  0E00               	movlw	high display_prepare@temp
 26876  00AB40  20F4               	addwfc	prodh,w,c
 26877  00AB42  6EDA               	movwf	fsr2h,c
 26878  00AB44  50DF               	movf	indf2,w,c
 26879  00AB46  A4D8               	btfss	status,2,c
 26880  00AB48  D7D9               	goto	l1469
 26881                           
 26882                           ; BSR set to: 0
 26883                           ;display.c: 494: };display.c: 497: _display_itoa(motor_speed_from_index(os.arc_speed), 2
      +                          , temp);
 26884                           
 26885                           ; BSR set to: 0
 26886  00AB4A  C186  F09D         	movff	_os+33,motor_speed_from_index@speed_index	;volatile
 26887  00AB4E  C187  F09E         	movff	_os+34,motor_speed_from_index@speed_index+1	;volatile
 26888  00AB52  ECBD  F0AF         	call	_motor_speed_from_index	;wreg free
 26889  00AB56  C09D  F09F         	movff	?_motor_speed_from_index,__display_itoa@value
 26890  00AB5A  C09E  F0A0         	movff	?_motor_speed_from_index+1,__display_itoa@value+1
 26891  00AB5E  0E02               	movlw	2
 26892  00AB60  0100               	movlb	0	; () banked
 26893  00AB62  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 26894  00AB64  0EC8               	movlw	low display_prepare@temp
 26895  00AB66  6FA2               	movwf	__display_itoa@text& (0+255),b
 26896  00AB68  0E00               	movlw	high display_prepare@temp
 26897  00AB6A  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 26898  00AB6C  EC3C  F072         	call	__display_itoa	;wreg free
 26899                           
 26900                           ;display.c: 498: for(cntr=0; temp[cntr]; ++cntr)
 26901  00AB70  0E00               	movlw	0
 26902  00AB72  0100               	movlb	0	; () banked
 26903  00AB74  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26904  00AB76  D018               	goto	l1471
 26905  00AB78                     
 26906                           ; BSR set to: 0
 26907                           ;display.c: 499: {;display.c: 500: display_content[3][11+cntr] = temp[cntr];
 26908                           
 26909                           ; BSR set to: 0
 26910  00AB78  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26911  00AB7A  0D01               	mullw	1
 26912  00AB7C  0EC8               	movlw	low display_prepare@temp
 26913  00AB7E  24F3               	addwf	prodl,w,c
 26914  00AB80  6ED9               	movwf	fsr2l,c
 26915  00AB82  0E00               	movlw	high display_prepare@temp
 26916  00AB84  20F4               	addwfc	prodh,w,c
 26917  00AB86  6EDA               	movwf	fsr2h,c
 26918  00AB88  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26919  00AB8A  6FC6               	movwf	??_display_prepare& (0+255),b
 26920  00AB8C  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26921  00AB8E  0E0B               	movlw	11
 26922  00AB90  27C6               	addwf	??_display_prepare& (0+255),f,b
 26923  00AB92  0E00               	movlw	0
 26924  00AB94  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26925  00AB96  0E84               	movlw	low (_display_content+60)
 26926  00AB98  25C6               	addwf	??_display_prepare& (0+255),w,b
 26927  00AB9A  6EE1               	movwf	fsr1l,c
 26928  00AB9C  0E02               	movlw	high (_display_content+60)
 26929  00AB9E  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26930  00ABA0  6EE2               	movwf	fsr1h,c
 26931  00ABA2  CFDF FFE7          	movff	indf2,indf1
 26932                           
 26933                           ; BSR set to: 0
 26934  00ABA6  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26935  00ABA8                     l1471:
 26936                           
 26937                           ; BSR set to: 0
 26938                           
 26939                           ; BSR set to: 0
 26940  00ABA8  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26941  00ABAA  0D01               	mullw	1
 26942  00ABAC  0EC8               	movlw	low display_prepare@temp
 26943  00ABAE  24F3               	addwf	prodl,w,c
 26944  00ABB0  6ED9               	movwf	fsr2l,c
 26945  00ABB2  0E00               	movlw	high display_prepare@temp
 26946  00ABB4  20F4               	addwfc	prodh,w,c
 26947  00ABB6  6EDA               	movwf	fsr2h,c
 26948  00ABB8  50DF               	movf	indf2,w,c
 26949  00ABBA  A4D8               	btfss	status,2,c
 26950  00ABBC  D7DD               	goto	l1472
 26951  00ABBE  D135               	goto	L89
 26952  00ABC0                     
 26953                           ; BSR set to: 0
 26954                           ;display.c: 513: memcpy(display_content, dc_zero, sizeof display_content);
 26955                           
 26956                           ; BSR set to: 0
 26957  00ABC0  0E48               	movlw	low _display_content
 26958  00ABC2  6F60               	movwf	memcpy@d1& (0+255),b
 26959  00ABC4  0E02               	movlw	high _display_content
 26960  00ABC6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26961  00ABC8  0E3E               	movlw	low _dc_zero
 26962  00ABCA  6F62               	movwf	memcpy@s1& (0+255),b
 26963  00ABCC  0E9E               	movlw	high _dc_zero
 26964  00ABCE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26965  00ABD0  0E00               	movlw	0
 26966  00ABD2  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26967  00ABD4  0E50               	movlw	80
 26968  00ABD6  6F64               	movwf	memcpy@n& (0+255),b
 26969  00ABD8  ECAC  F0A5         	call	_memcpy	;wreg free
 26970                           
 26971                           ;display.c: 516: _display_itoa_long(_display_position_in_degrees(), 2, temp);
 26972  00ABDC  EC95  F0A9         	call	__display_position_in_degrees	;wreg free
 26973  00ABE0  C060  F0B7         	movff	?__display_position_in_degrees,__display_itoa_long@value
 26974  00ABE4  C061  F0B8         	movff	?__display_position_in_degrees+1,__display_itoa_long@value+1
 26975  00ABE8  C062  F0B9         	movff	?__display_position_in_degrees+2,__display_itoa_long@value+2
 26976  00ABEC  C063  F0BA         	movff	?__display_position_in_degrees+3,__display_itoa_long@value+3
 26977  00ABF0  0E02               	movlw	2
 26978  00ABF2  0100               	movlb	0	; () banked
 26979  00ABF4  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 26980  00ABF6  0EC8               	movlw	low display_prepare@temp
 26981  00ABF8  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 26982  00ABFA  0E00               	movlw	high display_prepare@temp
 26983  00ABFC  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26984  00ABFE  EC05  F088         	call	__display_itoa_long	;wreg free
 26985                           
 26986                           ;display.c: 517: for(cntr=0; temp[cntr]; ++cntr)
 26987  00AC02  0E00               	movlw	0
 26988  00AC04  0100               	movlb	0	; () banked
 26989  00AC06  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26990  00AC08  D018               	goto	l1475
 26991  00AC0A                     
 26992                           ; BSR set to: 0
 26993                           ;display.c: 518: {;display.c: 519: display_content[1][13+cntr] = temp[cntr];
 26994                           
 26995                           ; BSR set to: 0
 26996  00AC0A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26997  00AC0C  0D01               	mullw	1
 26998  00AC0E  0EC8               	movlw	low display_prepare@temp
 26999  00AC10  24F3               	addwf	prodl,w,c
 27000  00AC12  6ED9               	movwf	fsr2l,c
 27001  00AC14  0E00               	movlw	high display_prepare@temp
 27002  00AC16  20F4               	addwfc	prodh,w,c
 27003  00AC18  6EDA               	movwf	fsr2h,c
 27004  00AC1A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27005  00AC1C  6FC6               	movwf	??_display_prepare& (0+255),b
 27006  00AC1E  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27007  00AC20  0E0D               	movlw	13
 27008  00AC22  27C6               	addwf	??_display_prepare& (0+255),f,b
 27009  00AC24  0E00               	movlw	0
 27010  00AC26  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27011  00AC28  0E5C               	movlw	low (_display_content+20)
 27012  00AC2A  25C6               	addwf	??_display_prepare& (0+255),w,b
 27013  00AC2C  6EE1               	movwf	fsr1l,c
 27014  00AC2E  0E02               	movlw	high (_display_content+20)
 27015  00AC30  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27016  00AC32  6EE2               	movwf	fsr1h,c
 27017  00AC34  CFDF FFE7          	movff	indf2,indf1
 27018                           
 27019                           ; BSR set to: 0
 27020  00AC38  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 27021  00AC3A                     l1475:
 27022                           
 27023                           ; BSR set to: 0
 27024                           
 27025                           ; BSR set to: 0
 27026  00AC3A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27027  00AC3C  0D01               	mullw	1
 27028  00AC3E  0EC8               	movlw	low display_prepare@temp
 27029  00AC40  24F3               	addwf	prodl,w,c
 27030  00AC42  6ED9               	movwf	fsr2l,c
 27031  00AC44  0E00               	movlw	high display_prepare@temp
 27032  00AC46  20F4               	addwfc	prodh,w,c
 27033  00AC48  6EDA               	movwf	fsr2h,c
 27034  00AC4A  50DF               	movf	indf2,w,c
 27035  00AC4C  A4D8               	btfss	status,2,c
 27036  00AC4E  D7DD               	goto	l1476
 27037                           
 27038                           ; BSR set to: 0
 27039                           ;display.c: 520: };display.c: 521: display_content[1][13+cntr] = 0x01;
 27040                           
 27041                           ; BSR set to: 0
 27042  00AC50  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27043  00AC52  6FC6               	movwf	??_display_prepare& (0+255),b
 27044  00AC54  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27045  00AC56  0E0D               	movlw	13
 27046  00AC58  27C6               	addwf	??_display_prepare& (0+255),f,b
 27047  00AC5A  0E00               	movlw	0
 27048  00AC5C  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27049  00AC5E  0E5C               	movlw	low (_display_content+20)
 27050  00AC60  25C6               	addwf	??_display_prepare& (0+255),w,b
 27051  00AC62  6ED9               	movwf	fsr2l,c
 27052  00AC64  0E02               	movlw	high (_display_content+20)
 27053  00AC66  D6A1               	goto	L36
 27054  00AC68                     
 27055                           ; BSR set to: 0
 27056                           ;display.c: 526: memcpy(display_content, dc_manual, sizeof display_content);
 27057                           
 27058                           ; BSR set to: 0
 27059  00AC68  0E48               	movlw	low _display_content
 27060  00AC6A  6F60               	movwf	memcpy@d1& (0+255),b
 27061  00AC6C  0E02               	movlw	high _display_content
 27062  00AC6E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27063  00AC70  0EEE               	movlw	low _dc_manual
 27064  00AC72  6F62               	movwf	memcpy@s1& (0+255),b
 27065  00AC74  0E9D               	movlw	high _dc_manual
 27066  00AC76  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 27067  00AC78  0E00               	movlw	0
 27068  00AC7A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 27069  00AC7C  0E50               	movlw	80
 27070  00AC7E  6F64               	movwf	memcpy@n& (0+255),b
 27071  00AC80  ECAC  F0A5         	call	_memcpy	;wreg free
 27072                           
 27073                           ;display.c: 527: switch(os.displayState)
 27074  00AC84  D044               	goto	l1479
 27075  00AC86                     
 27076                           ;display.c: 530: display_content[2][6] = 'W';
 27077  00AC86  0E57               	movlw	87
 27078  00AC88  0102               	movlb	2	; () banked
 27079  00AC8A  6F76               	movwf	(_display_content+46)& (0+255),b
 27080                           
 27081                           ;display.c: 531: display_content[2][7] = ' ';
 27082  00AC8C  0E20               	movlw	32
 27083  00AC8E  6F77               	movwf	(_display_content+47)& (0+255),b
 27084                           
 27085                           ;display.c: 532: break;
 27086  00AC90  D049               	goto	l1481
 27087  00AC92                     
 27088                           ;display.c: 534: memcpy(display_content[2], "        ", 8);
 27089                           
 27090                           ; BSR set to: 2
 27091  00AC92  0E70               	movlw	low (_display_content+40)
 27092  00AC94  0100               	movlb	0	; () banked
 27093  00AC96  6F60               	movwf	memcpy@d1& (0+255),b
 27094  00AC98  0E02               	movlw	high (_display_content+40)
 27095  00AC9A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27096  00AC9C  0E29               	movlw	low STR_1
 27097  00AC9E  6F62               	movwf	memcpy@s1& (0+255),b
 27098  00ACA0  0EA3               	movlw	high STR_1
 27099  00ACA2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 27100  00ACA4  0E00               	movlw	0
 27101  00ACA6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 27102  00ACA8  0E08               	movlw	8
 27103  00ACAA  6F64               	movwf	memcpy@n& (0+255),b
 27104  00ACAC  ECAC  F0A5         	call	_memcpy	;wreg free
 27105                           
 27106                           ;display.c: 535: memcpy(display_content[3], "Cancel", 6);
 27107  00ACB0  0E84               	movlw	low (_display_content+60)
 27108  00ACB2  0100               	movlb	0	; () banked
 27109  00ACB4  6F60               	movwf	memcpy@d1& (0+255),b
 27110  00ACB6  0E02               	movlw	high (_display_content+60)
 27111  00ACB8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27112  00ACBA  0E32               	movlw	low STR_2
 27113  00ACBC  6F62               	movwf	memcpy@s1& (0+255),b
 27114  00ACBE  0EA3               	movlw	high STR_2
 27115  00ACC0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 27116  00ACC2  0E00               	movlw	0
 27117  00ACC4  6F65               	movwf	(memcpy@n+1)& (0+255),b
 27118  00ACC6  0E06               	movlw	6
 27119  00ACC8  6F64               	movwf	memcpy@n& (0+255),b
 27120  00ACCA  ECAC  F0A5         	call	_memcpy	;wreg free
 27121                           
 27122                           ;display.c: 536: break;
 27123  00ACCE  D02A               	goto	l1481
 27124  00ACD0                     
 27125                           ;display.c: 538: memcpy(&display_content[2][0], "        ", 8);
 27126  00ACD0  0E70               	movlw	low (_display_content+40)
 27127  00ACD2  0100               	movlb	0	; () banked
 27128  00ACD4  6F60               	movwf	memcpy@d1& (0+255),b
 27129  00ACD6  0E02               	movlw	high (_display_content+40)
 27130  00ACD8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27131  00ACDA  0E29               	movlw	low STR_1
 27132  00ACDC  6F62               	movwf	memcpy@s1& (0+255),b
 27133  00ACDE  0EA3               	movlw	high STR_1
 27134  00ACE0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 27135  00ACE2  0E00               	movlw	0
 27136  00ACE4  6F65               	movwf	(memcpy@n+1)& (0+255),b
 27137  00ACE6  0E08               	movlw	8
 27138  00ACE8  6F64               	movwf	memcpy@n& (0+255),b
 27139  00ACEA  ECAC  F0A5         	call	_memcpy	;wreg free
 27140                           
 27141                           ;display.c: 539: memcpy(&display_content[3][0], "Stop ", 5);
 27142  00ACEE  0E84               	movlw	low (_display_content+60)
 27143  00ACF0  0100               	movlb	0	; () banked
 27144  00ACF2  6F60               	movwf	memcpy@d1& (0+255),b
 27145  00ACF4  0E02               	movlw	high (_display_content+60)
 27146  00ACF6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 27147  00ACF8  0E39               	movlw	low STR_6
 27148  00ACFA  6F62               	movwf	memcpy@s1& (0+255),b
 27149  00ACFC  0EA3               	movlw	high STR_6
 27150  00ACFE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 27151  00AD00  0E00               	movlw	0
 27152  00AD02  6F65               	movwf	(memcpy@n+1)& (0+255),b
 27153  00AD04  0E05               	movlw	5
 27154  00AD06  6F64               	movwf	memcpy@n& (0+255),b
 27155  00AD08  ECAC  F0A5         	call	_memcpy	;wreg free
 27156                           
 27157                           ;display.c: 541: }
 27158                           
 27159                           ;display.c: 540: break;
 27160  00AD0C  D00B               	goto	l1481
 27161  00AD0E                     l1479:
 27162  00AD0E  0101               	movlb	1	; () banked
 27163  00AD10  5174               	movf	(_os+15)& (0+255),w,b	;volatile
 27164                           
 27165                           ; Switch size 1, requested type "space"
 27166                           ; Number of cases is 3, Range of values is 130 to 132
 27167                           ; switch strategies available:
 27168                           ; Name         Instructions Cycles
 27169                           ; simple_byte           10     6 (average)
 27170                           ;	Chosen strategy is simple_byte
 27171  00AD12  0A82               	xorlw	130	; case 130
 27172  00AD14  B4D8               	btfsc	status,2,c
 27173  00AD16  D7BD               	goto	l1482
 27174  00AD18  0A01               	xorlw	1	; case 131
 27175  00AD1A  B4D8               	btfsc	status,2,c
 27176  00AD1C  D7B4               	goto	l1480
 27177  00AD1E  0A07               	xorlw	7	; case 132
 27178  00AD20  B4D8               	btfsc	status,2,c
 27179  00AD22  D7D6               	goto	l1483
 27180  00AD24                     l1481:
 27181                           
 27182                           ;display.c: 544: _display_itoa_long(_display_position_in_degrees(), 2, temp);
 27183                           
 27184                           ; BSR set to: 1
 27185  00AD24  EC95  F0A9         	call	__display_position_in_degrees	;wreg free
 27186  00AD28  C060  F0B7         	movff	?__display_position_in_degrees,__display_itoa_long@value
 27187  00AD2C  C061  F0B8         	movff	?__display_position_in_degrees+1,__display_itoa_long@value+1
 27188  00AD30  C062  F0B9         	movff	?__display_position_in_degrees+2,__display_itoa_long@value+2
 27189  00AD34  C063  F0BA         	movff	?__display_position_in_degrees+3,__display_itoa_long@value+3
 27190  00AD38  0E02               	movlw	2
 27191  00AD3A  0100               	movlb	0	; () banked
 27192  00AD3C  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 27193  00AD3E  0EC8               	movlw	low display_prepare@temp
 27194  00AD40  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 27195  00AD42  0E00               	movlw	high display_prepare@temp
 27196  00AD44  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 27197  00AD46  EC05  F088         	call	__display_itoa_long	;wreg free
 27198                           
 27199                           ;display.c: 545: space = 7-strlen(temp);
 27200  00AD4A  0EC8               	movlw	low display_prepare@temp
 27201  00AD4C  0100               	movlb	0	; () banked
 27202  00AD4E  6F60               	movwf	strlen@s& (0+255),b
 27203  00AD50  0E00               	movlw	high display_prepare@temp
 27204  00AD52  6F61               	movwf	(strlen@s+1)& (0+255),b
 27205  00AD54  ECB4  F0AB         	call	_strlen	;wreg free
 27206  00AD58  0100               	movlb	0	; () banked
 27207  00AD5A  5160               	movf	?_strlen& (0+255),w,b
 27208  00AD5C  0800               	sublw	0
 27209  00AD5E  0F07               	addlw	7
 27210  00AD60  6FD2               	movwf	display_prepare@space& (0+255),b
 27211                           
 27212                           ; BSR set to: 0
 27213                           ;display.c: 546: for(cntr=0; temp[cntr]; ++cntr)
 27214  00AD62  0E00               	movlw	0
 27215  00AD64  6FD3               	movwf	display_prepare@cntr& (0+255),b
 27216  00AD66  D01C               	goto	l1484
 27217  00AD68                     
 27218                           ; BSR set to: 0
 27219                           ;display.c: 547: {;display.c: 548: display_content[1][12+space+cntr] = temp[cntr];
 27220                           
 27221                           ; BSR set to: 0
 27222  00AD68  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27223  00AD6A  0D01               	mullw	1
 27224  00AD6C  0EC8               	movlw	low display_prepare@temp
 27225  00AD6E  24F3               	addwf	prodl,w,c
 27226  00AD70  6ED9               	movwf	fsr2l,c
 27227  00AD72  0E00               	movlw	high display_prepare@temp
 27228  00AD74  20F4               	addwfc	prodh,w,c
 27229  00AD76  6EDA               	movwf	fsr2h,c
 27230  00AD78  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27231  00AD7A  C0D2  F0C6         	movff	display_prepare@space,??_display_prepare
 27232  00AD7E  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27233  00AD80  27C6               	addwf	??_display_prepare& (0+255),f,b
 27234  00AD82  0E00               	movlw	0
 27235  00AD84  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27236  00AD86  0E0C               	movlw	12
 27237  00AD88  27C6               	addwf	??_display_prepare& (0+255),f,b
 27238  00AD8A  0E00               	movlw	0
 27239  00AD8C  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27240  00AD8E  0E5C               	movlw	low (_display_content+20)
 27241  00AD90  25C6               	addwf	??_display_prepare& (0+255),w,b
 27242  00AD92  6EE1               	movwf	fsr1l,c
 27243  00AD94  0E02               	movlw	high (_display_content+20)
 27244  00AD96  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27245  00AD98  6EE2               	movwf	fsr1h,c
 27246  00AD9A  CFDF FFE7          	movff	indf2,indf1
 27247                           
 27248                           ; BSR set to: 0
 27249  00AD9E  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 27250  00ADA0                     l1484:
 27251                           
 27252                           ; BSR set to: 0
 27253                           
 27254                           ; BSR set to: 0
 27255  00ADA0  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27256  00ADA2  0D01               	mullw	1
 27257  00ADA4  0EC8               	movlw	low display_prepare@temp
 27258  00ADA6  24F3               	addwf	prodl,w,c
 27259  00ADA8  6ED9               	movwf	fsr2l,c
 27260  00ADAA  0E00               	movlw	high display_prepare@temp
 27261  00ADAC  20F4               	addwfc	prodh,w,c
 27262  00ADAE  6EDA               	movwf	fsr2h,c
 27263  00ADB0  50DF               	movf	indf2,w,c
 27264  00ADB2  A4D8               	btfss	status,2,c
 27265  00ADB4  D7D9               	goto	l1485
 27266                           
 27267                           ; BSR set to: 0
 27268                           ;display.c: 549: };display.c: 552: _display_itoa(motor_speed_from_index(os.manual_speed)
      +                          , 2, temp);
 27269                           
 27270                           ; BSR set to: 0
 27271  00ADB6  C189  F09D         	movff	_os+36,motor_speed_from_index@speed_index	;volatile
 27272  00ADBA  C18A  F09E         	movff	_os+37,motor_speed_from_index@speed_index+1	;volatile
 27273  00ADBE  ECBD  F0AF         	call	_motor_speed_from_index	;wreg free
 27274  00ADC2  C09D  F09F         	movff	?_motor_speed_from_index,__display_itoa@value
 27275  00ADC6  C09E  F0A0         	movff	?_motor_speed_from_index+1,__display_itoa@value+1
 27276  00ADCA  0E02               	movlw	2
 27277  00ADCC  0100               	movlb	0	; () banked
 27278  00ADCE  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 27279  00ADD0  0EC8               	movlw	low display_prepare@temp
 27280  00ADD2  6FA2               	movwf	__display_itoa@text& (0+255),b
 27281  00ADD4  0E00               	movlw	high display_prepare@temp
 27282  00ADD6  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 27283  00ADD8  EC3C  F072         	call	__display_itoa	;wreg free
 27284                           
 27285                           ;display.c: 553: for(cntr=0; temp[cntr]; ++cntr)
 27286  00ADDC  0E00               	movlw	0
 27287  00ADDE  0100               	movlb	0	; () banked
 27288  00ADE0  6FD3               	movwf	display_prepare@cntr& (0+255),b
 27289  00ADE2  D018               	goto	l1487
 27290  00ADE4                     
 27291                           ; BSR set to: 0
 27292                           ;display.c: 554: {;display.c: 555: display_content[3][11+cntr] = temp[cntr];
 27293                           
 27294                           ; BSR set to: 0
 27295  00ADE4  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27296  00ADE6  0D01               	mullw	1
 27297  00ADE8  0EC8               	movlw	low display_prepare@temp
 27298  00ADEA  24F3               	addwf	prodl,w,c
 27299  00ADEC  6ED9               	movwf	fsr2l,c
 27300  00ADEE  0E00               	movlw	high display_prepare@temp
 27301  00ADF0  20F4               	addwfc	prodh,w,c
 27302  00ADF2  6EDA               	movwf	fsr2h,c
 27303  00ADF4  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27304  00ADF6  6FC6               	movwf	??_display_prepare& (0+255),b
 27305  00ADF8  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27306  00ADFA  0E0B               	movlw	11
 27307  00ADFC  27C6               	addwf	??_display_prepare& (0+255),f,b
 27308  00ADFE  0E00               	movlw	0
 27309  00AE00  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27310  00AE02  0E84               	movlw	low (_display_content+60)
 27311  00AE04  25C6               	addwf	??_display_prepare& (0+255),w,b
 27312  00AE06  6EE1               	movwf	fsr1l,c
 27313  00AE08  0E02               	movlw	high (_display_content+60)
 27314  00AE0A  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27315  00AE0C  6EE2               	movwf	fsr1h,c
 27316  00AE0E  CFDF FFE7          	movff	indf2,indf1
 27317                           
 27318                           ; BSR set to: 0
 27319  00AE12  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 27320  00AE14                     l1487:
 27321                           
 27322                           ; BSR set to: 0
 27323                           
 27324                           ; BSR set to: 0
 27325  00AE14  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27326  00AE16  0D01               	mullw	1
 27327  00AE18  0EC8               	movlw	low display_prepare@temp
 27328  00AE1A  24F3               	addwf	prodl,w,c
 27329  00AE1C  6ED9               	movwf	fsr2l,c
 27330  00AE1E  0E00               	movlw	high display_prepare@temp
 27331  00AE20  20F4               	addwfc	prodh,w,c
 27332  00AE22  6EDA               	movwf	fsr2h,c
 27333  00AE24  50DF               	movf	indf2,w,c
 27334  00AE26  A4D8               	btfss	status,2,c
 27335  00AE28  D7DD               	goto	l1488
 27336  00AE2A                     L89:
 27337                           
 27338                           ; BSR set to: 0
 27339                           ;display.c: 556: };display.c: 557: display_content[3][11+cntr] = 0x01;
 27340                           
 27341                           ; BSR set to: 0
 27342  00AE2A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27343  00AE2C  6FC6               	movwf	??_display_prepare& (0+255),b
 27344  00AE2E  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27345  00AE30  0E0B               	movlw	11
 27346  00AE32  27C6               	addwf	??_display_prepare& (0+255),f,b
 27347  00AE34  0E00               	movlw	0
 27348  00AE36  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27349  00AE38  0E84               	movlw	low (_display_content+60)
 27350  00AE3A  25C6               	addwf	??_display_prepare& (0+255),w,b
 27351  00AE3C  6ED9               	movwf	fsr2l,c
 27352  00AE3E  0E02               	movlw	high (_display_content+60)
 27353  00AE40  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27354  00AE42  6EDA               	movwf	fsr2h,c
 27355  00AE44  0E01               	movlw	1
 27356  00AE46  6EDF               	movwf	indf2,c
 27357                           
 27358                           ;display.c: 558: display_content[3][12+cntr] = '/';
 27359  00AE48  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27360  00AE4A  6FC6               	movwf	??_display_prepare& (0+255),b
 27361  00AE4C  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27362  00AE4E  0E0C               	movlw	12
 27363  00AE50  27C6               	addwf	??_display_prepare& (0+255),f,b
 27364  00AE52  0E00               	movlw	0
 27365  00AE54  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27366  00AE56  0E84               	movlw	low (_display_content+60)
 27367  00AE58  25C6               	addwf	??_display_prepare& (0+255),w,b
 27368  00AE5A  6ED9               	movwf	fsr2l,c
 27369  00AE5C  0E02               	movlw	high (_display_content+60)
 27370  00AE5E  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27371  00AE60  6EDA               	movwf	fsr2h,c
 27372  00AE62  0E2F               	movlw	47
 27373  00AE64  6EDF               	movwf	indf2,c
 27374                           
 27375                           ;display.c: 559: display_content[3][13+cntr] = 's';
 27376  00AE66  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27377  00AE68  6FC6               	movwf	??_display_prepare& (0+255),b
 27378  00AE6A  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27379  00AE6C  0E0D               	movlw	13
 27380  00AE6E  27C6               	addwf	??_display_prepare& (0+255),f,b
 27381  00AE70  0E00               	movlw	0
 27382  00AE72  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27383  00AE74  0E84               	movlw	low (_display_content+60)
 27384  00AE76  25C6               	addwf	??_display_prepare& (0+255),w,b
 27385  00AE78  6ED9               	movwf	fsr2l,c
 27386  00AE7A  0E02               	movlw	high (_display_content+60)
 27387  00AE7C  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27388  00AE7E  6EDA               	movwf	fsr2h,c
 27389  00AE80  0E73               	movlw	115
 27390  00AE82                     L27:
 27391  00AE82  6EDF               	movwf	indf2,c
 27392                           
 27393                           ;display.c: 560: break;
 27394  00AE84  D095               	goto	l1407
 27395  00AE86                     
 27396                           ; BSR set to: 0
 27397                           ;display.c: 563: _display_clear();
 27398                           
 27399                           ; BSR set to: 0
 27400  00AE86  EC7F  F0AA         	call	__display_clear	;wreg free
 27401                           
 27402                           ;display.c: 564: _display_itoa((int16_t) (os.encoder1Count), 0, display_content[0]);
 27403  00AE8A  0101               	movlb	1	; () banked
 27404  00AE8C  5168               	movf	(_os+3)& (0+255),w,b	;volatile
 27405  00AE8E  0100               	movlb	0	; () banked
 27406  00AE90  6F9F               	movwf	__display_itoa@value& (0+255),b
 27407  00AE92  6BA0               	clrf	(__display_itoa@value+1)& (0+255),b
 27408  00AE94  BF9F               	btfsc	__display_itoa@value& (0+255),7,b
 27409  00AE96  07A0               	decf	(__display_itoa@value+1)& (0+255),f,b
 27410  00AE98  0E00               	movlw	0
 27411  00AE9A  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 27412  00AE9C  0E48               	movlw	low _display_content
 27413  00AE9E  6FA2               	movwf	__display_itoa@text& (0+255),b
 27414  00AEA0  0E02               	movlw	high _display_content
 27415  00AEA2  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 27416  00AEA4  EC3C  F072         	call	__display_itoa	;wreg free
 27417                           
 27418                           ;display.c: 565: if(PORTEbits.RE2)
 27419  00AEA8  A484               	btfss	3972,2,c	;volatile
 27420  00AEAA  D002               	goto	l1491
 27421                           
 27422                           ;display.c: 566: display_content[0][8] = 'H';
 27423  00AEAC  0E48               	movlw	72
 27424  00AEAE  D001               	goto	L31
 27425  00AEB0                     l1491:
 27426                           
 27427                           ;display.c: 567: else;display.c: 568: display_content[0][8] = 'L';
 27428                           
 27429                           ; BSR set to: 2
 27430  00AEB0  0E4C               	movlw	76
 27431  00AEB2                     L31:
 27432  00AEB2  0102               	movlb	2	; () banked
 27433  00AEB4  6F50               	movwf	(_display_content+8)& (0+255),b
 27434                           
 27435                           ; BSR set to: 2
 27436                           ;display.c: 569: if(PORTEbits.RE0)
 27437                           
 27438                           ; BSR set to: 2
 27439  00AEB6  A084               	btfss	3972,0,c	;volatile
 27440  00AEB8  D002               	goto	l1493
 27441                           
 27442                           ; BSR set to: 2
 27443                           ;display.c: 570: display_content[0][9] = 'H';
 27444  00AEBA  0E48               	movlw	72
 27445  00AEBC  D001               	goto	L32
 27446  00AEBE                     l1493:
 27447                           
 27448                           ; BSR set to: 2
 27449                           ;display.c: 571: else;display.c: 572: display_content[0][9] = 'L';
 27450                           
 27451                           ; BSR set to: 2
 27452  00AEBE  0E4C               	movlw	76
 27453  00AEC0                     L32:
 27454  00AEC0  6F51               	movwf	(_display_content+9)& (0+255),b
 27455                           
 27456                           ; BSR set to: 2
 27457                           ;display.c: 573: _display_itoa((int16_t) (os.button1), 0, display_content[1]);
 27458                           
 27459                           ; BSR set to: 2
 27460  00AEC2  0101               	movlb	1	; () banked
 27461  00AEC4  5169               	movf	(_os+4)& (0+255),w,b	;volatile
 27462  00AEC6  0100               	movlb	0	; () banked
 27463  00AEC8  6F9F               	movwf	__display_itoa@value& (0+255),b
 27464  00AECA  6BA0               	clrf	(__display_itoa@value+1)& (0+255),b
 27465  00AECC  BF9F               	btfsc	__display_itoa@value& (0+255),7,b
 27466  00AECE  07A0               	decf	(__display_itoa@value+1)& (0+255),f,b
 27467  00AED0  0E00               	movlw	0
 27468  00AED2  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 27469  00AED4  0E5C               	movlw	low (_display_content+20)
 27470  00AED6  6FA2               	movwf	__display_itoa@text& (0+255),b
 27471  00AED8  0E02               	movlw	high (_display_content+20)
 27472  00AEDA  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 27473  00AEDC  EC3C  F072         	call	__display_itoa	;wreg free
 27474                           
 27475                           ;display.c: 574: if(PORTEbits.RE1)
 27476  00AEE0  A284               	btfss	3972,1,c	;volatile
 27477  00AEE2  D002               	goto	l1495
 27478                           
 27479                           ;display.c: 575: display_content[1][8] = 'H';
 27480  00AEE4  0E48               	movlw	72
 27481  00AEE6  D001               	goto	L33
 27482  00AEE8                     l1495:
 27483                           
 27484                           ;display.c: 576: else;display.c: 577: display_content[1][8] = 'L';
 27485                           
 27486                           ; BSR set to: 2
 27487  00AEE8  0E4C               	movlw	76
 27488  00AEEA                     L33:
 27489  00AEEA  0102               	movlb	2	; () banked
 27490  00AEEC  6F64               	movwf	(_display_content+28)& (0+255),b
 27491                           
 27492                           ; BSR set to: 2
 27493                           ;display.c: 578: _display_itoa((int16_t) (os.encoder2Count), 0, display_content[2]);
 27494                           
 27495                           ; BSR set to: 2
 27496  00AEEE  0101               	movlb	1	; () banked
 27497  00AEF0  516A               	movf	(_os+5)& (0+255),w,b	;volatile
 27498  00AEF2  0100               	movlb	0	; () banked
 27499  00AEF4  6F9F               	movwf	__display_itoa@value& (0+255),b
 27500  00AEF6  6BA0               	clrf	(__display_itoa@value+1)& (0+255),b
 27501  00AEF8  BF9F               	btfsc	__display_itoa@value& (0+255),7,b
 27502  00AEFA  07A0               	decf	(__display_itoa@value+1)& (0+255),f,b
 27503  00AEFC  0E00               	movlw	0
 27504  00AEFE  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 27505  00AF00  0E70               	movlw	low (_display_content+40)
 27506  00AF02  6FA2               	movwf	__display_itoa@text& (0+255),b
 27507  00AF04  0E02               	movlw	high (_display_content+40)
 27508  00AF06  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 27509  00AF08  EC3C  F072         	call	__display_itoa	;wreg free
 27510                           
 27511                           ;display.c: 579: if(PORTAbits.RA0)
 27512  00AF0C  A080               	btfss	3968,0,c	;volatile
 27513  00AF0E  D002               	goto	l1497
 27514                           
 27515                           ;display.c: 580: display_content[2][8] = 'H';
 27516  00AF10  0E48               	movlw	72
 27517  00AF12  D001               	goto	L34
 27518  00AF14                     l1497:
 27519                           
 27520                           ;display.c: 581: else;display.c: 582: display_content[2][8] = 'L';
 27521                           
 27522                           ; BSR set to: 2
 27523  00AF14  0E4C               	movlw	76
 27524  00AF16                     L34:
 27525  00AF16  0102               	movlb	2	; () banked
 27526  00AF18  6F78               	movwf	(_display_content+48)& (0+255),b
 27527                           
 27528                           ; BSR set to: 2
 27529                           ;display.c: 583: if(PORTAbits.RA2)
 27530                           
 27531                           ; BSR set to: 2
 27532  00AF1A  A480               	btfss	3968,2,c	;volatile
 27533  00AF1C  D002               	goto	l1499
 27534                           
 27535                           ; BSR set to: 2
 27536                           ;display.c: 584: display_content[2][9] = 'H';
 27537  00AF1E  0E48               	movlw	72
 27538  00AF20  D001               	goto	L35
 27539  00AF22                     l1499:
 27540                           
 27541                           ; BSR set to: 2
 27542                           ;display.c: 585: else;display.c: 586: display_content[2][9] = 'L';
 27543                           
 27544                           ; BSR set to: 2
 27545  00AF22  0E4C               	movlw	76
 27546  00AF24                     L35:
 27547  00AF24  6F79               	movwf	(_display_content+49)& (0+255),b
 27548                           
 27549                           ; BSR set to: 2
 27550                           ;display.c: 587: _display_itoa((int16_t) (os.button2), 0, display_content[3]);
 27551                           
 27552                           ; BSR set to: 2
 27553  00AF26  0101               	movlb	1	; () banked
 27554  00AF28  516B               	movf	(_os+6)& (0+255),w,b	;volatile
 27555  00AF2A  0100               	movlb	0	; () banked
 27556  00AF2C  6F9F               	movwf	__display_itoa@value& (0+255),b
 27557  00AF2E  6BA0               	clrf	(__display_itoa@value+1)& (0+255),b
 27558  00AF30  BF9F               	btfsc	__display_itoa@value& (0+255),7,b
 27559  00AF32  07A0               	decf	(__display_itoa@value+1)& (0+255),f,b
 27560  00AF34  0E00               	movlw	0
 27561  00AF36  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 27562  00AF38  0E84               	movlw	low (_display_content+60)
 27563  00AF3A  6FA2               	movwf	__display_itoa@text& (0+255),b
 27564  00AF3C  0E02               	movlw	high (_display_content+60)
 27565  00AF3E  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 27566  00AF40  EC3C  F072         	call	__display_itoa	;wreg free
 27567                           
 27568                           ;display.c: 588: if(PORTAbits.RA1)
 27569  00AF44  A280               	btfss	3968,1,c	;volatile
 27570  00AF46  D002               	goto	l1501
 27571                           
 27572                           ;display.c: 589: display_content[3][8] = 'H';
 27573  00AF48  0E48               	movlw	72
 27574  00AF4A  D001               	goto	L28
 27575  00AF4C                     l1501:
 27576                           
 27577                           ;display.c: 590: else;display.c: 591: display_content[3][8] = 'L';
 27578                           
 27579                           ; BSR set to: 2
 27580  00AF4C  0E4C               	movlw	76
 27581  00AF4E                     L28:
 27582  00AF4E  0102               	movlb	2	; () banked
 27583  00AF50  6F8C               	movwf	(_display_content+68)& (0+255),b
 27584                           
 27585                           ; BSR set to: 2
 27586                           ;display.c: 593: }
 27587                           
 27588                           ; BSR set to: 2
 27589                           ;display.c: 592: break;
 27590  00AF52  D02E               	goto	l1407
 27591  00AF54                     l1398:
 27592                           
 27593                           ; BSR set to: 2
 27594  00AF54  0101               	movlb	1	; () banked
 27595  00AF56  5174               	movf	(_os+15)& (0+255),w,b	;volatile
 27596  00AF58  0BF0               	andlw	240
 27597  00AF5A  0100               	movlb	0	; () banked
 27598  00AF5C  6FC6               	movwf	??_display_prepare& (0+255),b
 27599  00AF5E  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27600                           
 27601                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27602                           ; Switch size 1, requested type "space"
 27603                           ; Number of cases is 1, Range of values is 0 to 0
 27604                           ; switch strategies available:
 27605                           ; Name         Instructions Cycles
 27606                           ; simple_byte            4     3 (average)
 27607                           ;	Chosen strategy is simple_byte
 27608  00AF60  51C7               	movf	(??_display_prepare+1)& (0+255),w,b
 27609  00AF62  0A00               	xorlw	0	; case 0
 27610  00AF64  A4D8               	btfss	status,2,c
 27611  00AF66  D024               	goto	l1407
 27612                           
 27613                           ; BSR set to: 0
 27614                           ; Switch size 1, requested type "space"
 27615                           ; Number of cases is 10, Range of values is 0 to 240
 27616                           ; switch strategies available:
 27617                           ; Name         Instructions Cycles
 27618                           ; simple_byte           31    16 (average)
 27619                           ;	Chosen strategy is simple_byte
 27620  00AF68  51C6               	movf	??_display_prepare& (0+255),w,b
 27621  00AF6A  0A00               	xorlw	0	; case 0
 27622  00AF6C  B4D8               	btfsc	status,2,c
 27623  00AF6E  EFA4  F051         	goto	l1399
 27624  00AF72  0A10               	xorlw	16	; case 16
 27625  00AF74  B4D8               	btfsc	status,2,c
 27626  00AF76  EFD3  F051         	goto	l1408
 27627  00AF7A  0A30               	xorlw	48	; case 32
 27628  00AF7C  B4D8               	btfsc	status,2,c
 27629  00AF7E  EF25  F052         	goto	l1418
 27630  00AF82  0A10               	xorlw	16	; case 48
 27631  00AF84  B4D8               	btfsc	status,2,c
 27632  00AF86  EF49  F052         	goto	l1423
 27633  00AF8A  0A70               	xorlw	112	; case 64
 27634  00AF8C  B4D8               	btfsc	status,2,c
 27635  00AF8E  EFBA  F052         	goto	l1432
 27636  00AF92  0A10               	xorlw	16	; case 80
 27637  00AF94  B4D8               	btfsc	status,2,c
 27638  00AF96  D45A               	goto	l1447
 27639  00AF98  0A30               	xorlw	48	; case 96
 27640  00AF9A  B4D8               	btfsc	status,2,c
 27641  00AF9C  D50A               	goto	l1460
 27642  00AF9E  0A10               	xorlw	16	; case 112
 27643  00AFA0  B4D8               	btfsc	status,2,c
 27644  00AFA2  D60E               	goto	l1474
 27645  00AFA4  0AF0               	xorlw	240	; case 128
 27646  00AFA6  B4D8               	btfsc	status,2,c
 27647  00AFA8  D65F               	goto	l1478
 27648  00AFAA  0A70               	xorlw	112	; case 240
 27649  00AFAC  B4D8               	btfsc	status,2,c
 27650  00AFAE  D76B               	goto	l1490
 27651  00AFB0                     l1407:
 27652                           
 27653                           ;display.c: 595: if(!PORTDbits.RD2)
 27654  00AFB0  B483               	btfsc	3971,2,c	;volatile
 27655  00AFB2  0012               	return	
 27656                           
 27657                           ;display.c: 596: {;display.c: 597: display_content[0][0] = 'E';
 27658  00AFB4  0E45               	movlw	69
 27659  00AFB6  0102               	movlb	2	; () banked
 27660  00AFB8  6F48               	movwf	_display_content& (0+255),b
 27661                           
 27662                           ;display.c: 598: display_content[0][1] = 'R';
 27663  00AFBA  0E52               	movlw	82
 27664  00AFBC  6F49               	movwf	(_display_content+1)& (0+255),b
 27665                           
 27666                           ;display.c: 599: display_content[0][2] = 'R';
 27667  00AFBE  0E52               	movlw	82
 27668  00AFC0  6F4A               	movwf	(_display_content+2)& (0+255),b
 27669                           
 27670                           ;display.c: 600: display_content[0][3] = 'O';
 27671  00AFC2  0E4F               	movlw	79
 27672  00AFC4  6F4B               	movwf	(_display_content+3)& (0+255),b
 27673                           
 27674                           ;display.c: 601: display_content[0][4] = 'R';
 27675  00AFC6  0E52               	movlw	82
 27676  00AFC8  6F4C               	movwf	(_display_content+4)& (0+255),b
 27677  00AFCA  0012               	return	
 27678  00AFCC                     __end_of_display_prepare:
 27679                           	opt stack 0
 27680                           tblptru	equ	0xFF8
 27681                           tblptrh	equ	0xFF7
 27682                           tblptrl	equ	0xFF6
 27683                           tablat	equ	0xFF5
 27684                           prodh	equ	0xFF4
 27685                           prodl	equ	0xFF3
 27686                           intcon	equ	0xFF2
 27687                           postinc0	equ	0xFEE
 27688                           wreg	equ	0xFE8
 27689                           indf1	equ	0xFE7
 27690                           postinc1	equ	0xFE6
 27691                           postdec1	equ	0xFE5
 27692                           plusw1	equ	0xFE3
 27693                           fsr1h	equ	0xFE2
 27694                           fsr1l	equ	0xFE1
 27695                           indf2	equ	0xFDF
 27696                           postinc2	equ	0xFDE
 27697                           postdec2	equ	0xFDD
 27698                           plusw2	equ	0xFDB
 27699                           fsr2h	equ	0xFDA
 27700                           fsr2l	equ	0xFD9
 27701                           status	equ	0xFD8
 27702                           
 27703 ;; *************** function _motor_speed_from_index *****************
 27704 ;; Defined at:
 27705 ;;		line 603 in file "motor.c"
 27706 ;; Parameters:    Size  Location     Type
 27707 ;;  speed_index     2   61[BANK0 ] unsigned int 
 27708 ;; Auto vars:     Size  Location     Type
 27709 ;;		None
 27710 ;; Return value:  Size  Location     Type
 27711 ;;                  2   61[BANK0 ] unsigned int 
 27712 ;; Registers used:
 27713 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27714 ;; Tracked objects:
 27715 ;;		On entry : 0/0
 27716 ;;		On exit  : 0/0
 27717 ;;		Unchanged: 0/0
 27718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27719 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27722 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27723 ;;Total ram usage:        2 bytes
 27724 ;; Hardware stack levels used:    1
 27725 ;; Hardware stack levels required when called:   12
 27726 ;; This function calls:
 27727 ;;		__motor_get_speed_in_degrees
 27728 ;; This function is called by:
 27729 ;;		_display_prepare
 27730 ;; This function uses a non-reentrant model
 27731 ;;
 27732                           
 27733                           	psect	text106
 27734  015F7A                     __ptext106:
 27735                           	opt stack 0
 27736  015F7A                     _motor_speed_from_index:
 27737                           	opt stack 17
 27738                           
 27739                           ;motor.c: 605: return _motor_get_speed_in_degrees(speed_index);
 27740                           
 27741                           ;incstack = 0
 27742  015F7A  C09D  F091         	movff	motor_speed_from_index@speed_index,__motor_get_speed_in_degrees@speed_index
 27743  015F7E  C09E  F092         	movff	motor_speed_from_index@speed_index+1,__motor_get_speed_in_degrees@speed_index+1
 27744  015F82  EC04  F084         	call	__motor_get_speed_in_degrees	;wreg free
 27745  015F86  C091  F09D         	movff	?__motor_get_speed_in_degrees,?_motor_speed_from_index
 27746  015F8A  C092  F09E         	movff	?__motor_get_speed_in_degrees+1,?_motor_speed_from_index+1
 27747  015F8E  0012               	return	
 27748  015F90                     __end_of_motor_speed_from_index:
 27749                           	opt stack 0
 27750                           tblptru	equ	0xFF8
 27751                           tblptrh	equ	0xFF7
 27752                           tblptrl	equ	0xFF6
 27753                           tablat	equ	0xFF5
 27754                           prodh	equ	0xFF4
 27755                           prodl	equ	0xFF3
 27756                           intcon	equ	0xFF2
 27757                           postinc0	equ	0xFEE
 27758                           wreg	equ	0xFE8
 27759                           indf1	equ	0xFE7
 27760                           postinc1	equ	0xFE6
 27761                           postdec1	equ	0xFE5
 27762                           plusw1	equ	0xFE3
 27763                           fsr1h	equ	0xFE2
 27764                           fsr1l	equ	0xFE1
 27765                           indf2	equ	0xFDF
 27766                           postinc2	equ	0xFDE
 27767                           postdec2	equ	0xFDD
 27768                           plusw2	equ	0xFDB
 27769                           fsr2h	equ	0xFDA
 27770                           fsr2l	equ	0xFD9
 27771                           status	equ	0xFD8
 27772                           
 27773 ;; *************** function __motor_get_speed_in_degrees *****************
 27774 ;; Defined at:
 27775 ;;		line 564 in file "motor.c"
 27776 ;; Parameters:    Size  Location     Type
 27777 ;;  speed_index     2   49[BANK0 ] unsigned int 
 27778 ;; Auto vars:     Size  Location     Type
 27779 ;;  lookup          4   57[BANK0 ] unsigned long 
 27780 ;;  speed           4   53[BANK0 ] float 
 27781 ;; Return value:  Size  Location     Type
 27782 ;;                  2   49[BANK0 ] unsigned int 
 27783 ;; Registers used:
 27784 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27785 ;; Tracked objects:
 27786 ;;		On entry : 0/0
 27787 ;;		On exit  : 0/0
 27788 ;;		Unchanged: 0/0
 27789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27790 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27791 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27792 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27793 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27794 ;;Total ram usage:       12 bytes
 27795 ;; Hardware stack levels used:    1
 27796 ;; Hardware stack levels required when called:   11
 27797 ;; This function calls:
 27798 ;;		___fldiv
 27799 ;;		___fltol
 27800 ;;		___lmul
 27801 ;;		___xxtofl
 27802 ;; This function is called by:
 27803 ;;		_motor_speed_from_index
 27804 ;;		_motor_get_maximum_speed
 27805 ;;		_motor_get_current_speed
 27806 ;; This function uses a non-reentrant model
 27807 ;;
 27808                           
 27809                           	psect	text107
 27810  010808                     __ptext107:
 27811                           	opt stack 0
 27812  010808                     __motor_get_speed_in_degrees:
 27813                           	opt stack 17
 27814                           
 27815                           ;motor.c: 566: uint32_t lookup;;motor.c: 567: float speed;;motor.c: 569: lookup = motor_
      +                          speed_lookup[speed_index];
 27816                           
 27817                           ;incstack = 0
 27818  010808  90D8               	bcf	status,0,c
 27819  01080A  0100               	movlb	0	; () banked
 27820  01080C  3591               	rlcf	__motor_get_speed_in_degrees@speed_index& (0+255),w,b
 27821  01080E  6EF6               	movwf	tblptrl,c
 27822  010810  3592               	rlcf	(__motor_get_speed_in_degrees@speed_index+1)& (0+255),w,b
 27823  010812  6EF7               	movwf	tblptrh,c
 27824  010814  0E93               	movlw	low _motor_speed_lookup
 27825  010816  26F6               	addwf	tblptrl,f,c
 27826  010818  0E90               	movlw	high _motor_speed_lookup
 27827  01081A  22F7               	addwfc	tblptrh,f,c
 27828  01081C                     	if	1	;There are 3 active tblptr bytes
 27829  01081C  6AF8               	clrf	tblptru,c
 27830  01081E  0E00               	movlw	low (__mediumconst shr (0+16))
 27831  010820  22F8               	addwfc	tblptru,f,c
 27832  010822                     	endif
 27833  010822  0009               	tblrd		*+
 27834  010824  CFF5 F093          	movff	tablat,??__motor_get_speed_in_degrees
 27835  010828  0009               	tblrd		*+
 27836  01082A  CFF5 F094          	movff	tablat,??__motor_get_speed_in_degrees+1
 27837  01082E  C093  F099         	movff	??__motor_get_speed_in_degrees,__motor_get_speed_in_degrees@lookup
 27838  010832  C094  F09A         	movff	??__motor_get_speed_in_degrees+1,__motor_get_speed_in_degrees@lookup+1
 27839  010836  6B9B               	clrf	(__motor_get_speed_in_degrees@lookup+2)& (0+255),b
 27840  010838  6B9C               	clrf	(__motor_get_speed_in_degrees@lookup+3)& (0+255),b
 27841                           
 27842                           ; BSR set to: 0
 27843                           ;motor.c: 570: lookup *= 16;
 27844  01083A  0E04               	movlw	4
 27845  01083C                     u15815:
 27846  01083C  90D8               	bcf	status,0,c
 27847  01083E  3799               	rlcf	__motor_get_speed_in_degrees@lookup& (0+255),f,b
 27848  010840  379A               	rlcf	(__motor_get_speed_in_degrees@lookup+1)& (0+255),f,b
 27849  010842  379B               	rlcf	(__motor_get_speed_in_degrees@lookup+2)& (0+255),f,b
 27850  010844  379C               	rlcf	(__motor_get_speed_in_degrees@lookup+3)& (0+255),f,b
 27851  010846  2EE8               	decfsz	wreg,f,c
 27852  010848  D7F9               	goto	u15815
 27853                           
 27854                           ; BSR set to: 0
 27855                           ;motor.c: 571: lookup *= 360;
 27856  01084A  C099  F060         	movff	__motor_get_speed_in_degrees@lookup,___lmul@multiplier
 27857  01084E  C09A  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___lmul@multiplier+1
 27858  010852  C09B  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___lmul@multiplier+2
 27859  010856  C09C  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___lmul@multiplier+3
 27860  01085A  0E68               	movlw	104
 27861  01085C  6F64               	movwf	___lmul@multiplicand& (0+255),b
 27862  01085E  0E01               	movlw	1
 27863  010860  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 27864  010862  0E00               	movlw	0
 27865  010864  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 27866  010866  0E00               	movlw	0
 27867  010868  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 27868  01086A  EC9E  F0A7         	call	___lmul	;wreg free
 27869  01086E  C060  F099         	movff	?___lmul,__motor_get_speed_in_degrees@lookup
 27870  010872  C061  F09A         	movff	?___lmul+1,__motor_get_speed_in_degrees@lookup+1
 27871  010876  C062  F09B         	movff	?___lmul+2,__motor_get_speed_in_degrees@lookup+2
 27872  01087A  C063  F09C         	movff	?___lmul+3,__motor_get_speed_in_degrees@lookup+3
 27873                           
 27874                           ;motor.c: 572: lookup *= 100;
 27875  01087E  C099  F060         	movff	__motor_get_speed_in_degrees@lookup,___lmul@multiplier
 27876  010882  C09A  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___lmul@multiplier+1
 27877  010886  C09B  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___lmul@multiplier+2
 27878  01088A  C09C  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___lmul@multiplier+3
 27879  01088E  0E64               	movlw	100
 27880  010890  0100               	movlb	0	; () banked
 27881  010892  6F64               	movwf	___lmul@multiplicand& (0+255),b
 27882  010894  0E00               	movlw	0
 27883  010896  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 27884  010898  0E00               	movlw	0
 27885  01089A  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 27886  01089C  0E00               	movlw	0
 27887  01089E  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 27888  0108A0  EC9E  F0A7         	call	___lmul	;wreg free
 27889  0108A4  C060  F099         	movff	?___lmul,__motor_get_speed_in_degrees@lookup
 27890  0108A8  C061  F09A         	movff	?___lmul+1,__motor_get_speed_in_degrees@lookup+1
 27891  0108AC  C062  F09B         	movff	?___lmul+2,__motor_get_speed_in_degrees@lookup+2
 27892  0108B0  C063  F09C         	movff	?___lmul+3,__motor_get_speed_in_degrees@lookup+3
 27893                           
 27894                           ;motor.c: 574: speed = (float) lookup;
 27895  0108B4  C099  F06A         	movff	__motor_get_speed_in_degrees@lookup,___xxtofl@val
 27896  0108B8  C09A  F06B         	movff	__motor_get_speed_in_degrees@lookup+1,___xxtofl@val+1
 27897  0108BC  C09B  F06C         	movff	__motor_get_speed_in_degrees@lookup+2,___xxtofl@val+2
 27898  0108C0  C09C  F06D         	movff	__motor_get_speed_in_degrees@lookup+3,___xxtofl@val+3
 27899  0108C4  0E00               	movlw	0
 27900  0108C6  EC24  F082         	call	___xxtofl
 27901  0108CA  C06A  F095         	movff	?___xxtofl,__motor_get_speed_in_degrees@speed
 27902  0108CE  C06B  F096         	movff	?___xxtofl+1,__motor_get_speed_in_degrees@speed+1
 27903  0108D2  C06C  F097         	movff	?___xxtofl+2,__motor_get_speed_in_degrees@speed+2
 27904  0108D6  C06D  F098         	movff	?___xxtofl+3,__motor_get_speed_in_degrees@speed+3
 27905                           
 27906                           ;motor.c: 575: speed /= config.full_circle_in_steps;
 27907  0108DA  C095  F078         	movff	__motor_get_speed_in_degrees@speed,___fldiv@b
 27908  0108DE  C096  F079         	movff	__motor_get_speed_in_degrees@speed+1,___fldiv@b+1
 27909  0108E2  C097  F07A         	movff	__motor_get_speed_in_degrees@speed+2,___fldiv@b+2
 27910  0108E6  C098  F07B         	movff	__motor_get_speed_in_degrees@speed+3,___fldiv@b+3
 27911  0108EA  C196  F06A         	movff	_config,___xxtofl@val
 27912  0108EE  C197  F06B         	movff	_config+1,___xxtofl@val+1
 27913  0108F2  C198  F06C         	movff	_config+2,___xxtofl@val+2
 27914  0108F6  C199  F06D         	movff	_config+3,___xxtofl@val+3
 27915  0108FA  0E00               	movlw	0
 27916  0108FC  EC24  F082         	call	___xxtofl
 27917  010900  C06A  F07C         	movff	?___xxtofl,___fldiv@a
 27918  010904  C06B  F07D         	movff	?___xxtofl+1,___fldiv@a+1
 27919  010908  C06C  F07E         	movff	?___xxtofl+2,___fldiv@a+2
 27920  01090C  C06D  F07F         	movff	?___xxtofl+3,___fldiv@a+3
 27921  010910  EC03  F06B         	call	___fldiv	;wreg free
 27922  010914  C078  F095         	movff	?___fldiv,__motor_get_speed_in_degrees@speed
 27923  010918  C079  F096         	movff	?___fldiv+1,__motor_get_speed_in_degrees@speed+1
 27924  01091C  C07A  F097         	movff	?___fldiv+2,__motor_get_speed_in_degrees@speed+2
 27925  010920  C07B  F098         	movff	?___fldiv+3,__motor_get_speed_in_degrees@speed+3
 27926                           
 27927                           ;motor.c: 578: return (uint16_t) speed;
 27928  010924  C095  F060         	movff	__motor_get_speed_in_degrees@speed,___fltol@f1
 27929  010928  C096  F061         	movff	__motor_get_speed_in_degrees@speed+1,___fltol@f1+1
 27930  01092C  C097  F062         	movff	__motor_get_speed_in_degrees@speed+2,___fltol@f1+2
 27931  010930  C098  F063         	movff	__motor_get_speed_in_degrees@speed+3,___fltol@f1+3
 27932  010934  EC81  F093         	call	___fltol	;wreg free
 27933  010938  C060  F091         	movff	?___fltol,?__motor_get_speed_in_degrees
 27934  01093C  C061  F092         	movff	?___fltol+1,?__motor_get_speed_in_degrees+1
 27935  010940  0012               	return	
 27936  010942                     __end_of__motor_get_speed_in_degrees:
 27937                           	opt stack 0
 27938                           tblptru	equ	0xFF8
 27939                           tblptrh	equ	0xFF7
 27940                           tblptrl	equ	0xFF6
 27941                           tablat	equ	0xFF5
 27942                           prodh	equ	0xFF4
 27943                           prodl	equ	0xFF3
 27944                           intcon	equ	0xFF2
 27945                           postinc0	equ	0xFEE
 27946                           wreg	equ	0xFE8
 27947                           indf1	equ	0xFE7
 27948                           postinc1	equ	0xFE6
 27949                           postdec1	equ	0xFE5
 27950                           plusw1	equ	0xFE3
 27951                           fsr1h	equ	0xFE2
 27952                           fsr1l	equ	0xFE1
 27953                           indf2	equ	0xFDF
 27954                           postinc2	equ	0xFDE
 27955                           postdec2	equ	0xFDD
 27956                           plusw2	equ	0xFDB
 27957                           fsr2h	equ	0xFDA
 27958                           fsr2l	equ	0xFD9
 27959                           status	equ	0xFD8
 27960                           
 27961 ;; *************** function ___fldiv *****************
 27962 ;; Defined at:
 27963 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
 27964 ;; Parameters:    Size  Location     Type
 27965 ;;  b               4   24[BANK0 ] unsigned int 
 27966 ;;  a               4   28[BANK0 ] unsigned int 
 27967 ;; Auto vars:     Size  Location     Type
 27968 ;;  grs             4   43[BANK0 ] unsigned long 
 27969 ;;  rem             4   36[BANK0 ] unsigned long 
 27970 ;;  new_exp         2   41[BANK0 ] int 
 27971 ;;  aexp            1   48[BANK0 ] unsigned char 
 27972 ;;  bexp            1   47[BANK0 ] unsigned char 
 27973 ;;  sign            1   40[BANK0 ] unsigned char 
 27974 ;; Return value:  Size  Location     Type
 27975 ;;                  4   24[BANK0 ] unsigned char 
 27976 ;; Registers used:
 27977 ;;		wreg, status,2, status,0
 27978 ;; Tracked objects:
 27979 ;;		On entry : 0/0
 27980 ;;		On exit  : 0/0
 27981 ;;		Unchanged: 0/0
 27982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27983 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27984 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27985 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27986 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27987 ;;Total ram usage:       25 bytes
 27988 ;; Hardware stack levels used:    1
 27989 ;; Hardware stack levels required when called:   10
 27990 ;; This function calls:
 27991 ;;		Nothing
 27992 ;; This function is called by:
 27993 ;;		__motor_steps_from_degrees_int
 27994 ;;		_motor_calculate_position_in_degrees
 27995 ;;		__motor_get_speed_in_degrees
 27996 ;;		__step_position_from_divide_position
 27997 ;;		_motor_divide_jump_to_nearest
 27998 ;;		_motor_arc_move
 27999 ;;		__steps_from_degrees
 28000 ;;		__motor_steps_from_degrees_float
 28001 ;;		_motor_steps_from_degrees
 28002 ;; This function uses a non-reentrant model
 28003 ;;
 28004                           
 28005                           	psect	text108
 28006  00D606                     __ptext108:
 28007                           	opt stack 0
 28008  00D606                     ___fldiv:
 28009                           	opt stack 18
 28010                           
 28011                           ;incstack = 0
 28012  00D606  0100               	movlb	0	; () banked
 28013  00D608  517B               	movf	(___fldiv@b+3)& (0+255),w,b
 28014  00D60A  0B80               	andlw	128
 28015  00D60C  6F88               	movwf	___fldiv@sign& (0+255),b
 28016  00D60E  517B               	movf	(___fldiv@b+3)& (0+255),w,b
 28017  00D610  257B               	addwf	(___fldiv@b+3)& (0+255),w,b
 28018  00D612  6F8F               	movwf	___fldiv@bexp& (0+255),b
 28019                           
 28020                           ; BSR set to: 0
 28021  00D614  BF7A               	btfsc	(___fldiv@b+2)& (0+255),7,b
 28022                           
 28023                           ; BSR set to: 0
 28024  00D616  818F               	bsf	___fldiv@bexp& (0+255),0,b
 28025                           
 28026                           ; BSR set to: 0
 28027                           
 28028                           ; BSR set to: 0
 28029  00D618  518F               	movf	___fldiv@bexp& (0+255),w,b
 28030  00D61A  B4D8               	btfsc	status,2,c
 28031  00D61C  D00D               	goto	l3654
 28032                           
 28033                           ; BSR set to: 0
 28034  00D61E  298F               	incf	___fldiv@bexp& (0+255),w,b
 28035  00D620  A4D8               	btfss	status,2,c
 28036  00D622  D008               	goto	l3655
 28037                           
 28038                           ; BSR set to: 0
 28039  00D624  0E00               	movlw	0
 28040  00D626  6F78               	movwf	___fldiv@b& (0+255),b
 28041  00D628  0E00               	movlw	0
 28042  00D62A  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 28043  00D62C  0E00               	movlw	0
 28044  00D62E  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 28045  00D630  0E00               	movlw	0
 28046  00D632  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 28047  00D634                     l3655:
 28048                           
 28049                           ; BSR set to: 0
 28050                           
 28051                           ; BSR set to: 0
 28052  00D634  8F7A               	bsf	(___fldiv@b+2)& (0+255),7,b
 28053  00D636  D006               	goto	L37
 28054  00D638                     l3654:
 28055                           
 28056                           ; BSR set to: 0
 28057                           
 28058                           ; BSR set to: 0
 28059  00D638  0E00               	movlw	0
 28060  00D63A  6F78               	movwf	___fldiv@b& (0+255),b
 28061  00D63C  0E00               	movlw	0
 28062  00D63E  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 28063  00D640  0E00               	movlw	0
 28064  00D642  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 28065  00D644                     L37:
 28066  00D644  0E00               	movlw	0
 28067  00D646  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 28068                           
 28069                           ; BSR set to: 0
 28070                           
 28071                           ; BSR set to: 0
 28072  00D648  517F               	movf	(___fldiv@a+3)& (0+255),w,b
 28073  00D64A  0B80               	andlw	128
 28074  00D64C  1B88               	xorwf	___fldiv@sign& (0+255),f,b
 28075                           
 28076                           ; BSR set to: 0
 28077  00D64E  517F               	movf	(___fldiv@a+3)& (0+255),w,b
 28078  00D650  257F               	addwf	(___fldiv@a+3)& (0+255),w,b
 28079  00D652  6F90               	movwf	___fldiv@aexp& (0+255),b
 28080                           
 28081                           ; BSR set to: 0
 28082  00D654  BF7E               	btfsc	(___fldiv@a+2)& (0+255),7,b
 28083                           
 28084                           ; BSR set to: 0
 28085  00D656  8190               	bsf	___fldiv@aexp& (0+255),0,b
 28086                           
 28087                           ; BSR set to: 0
 28088                           
 28089                           ; BSR set to: 0
 28090  00D658  5190               	movf	___fldiv@aexp& (0+255),w,b
 28091  00D65A  B4D8               	btfsc	status,2,c
 28092  00D65C  D00D               	goto	l3658
 28093                           
 28094                           ; BSR set to: 0
 28095  00D65E  2990               	incf	___fldiv@aexp& (0+255),w,b
 28096  00D660  A4D8               	btfss	status,2,c
 28097  00D662  D008               	goto	l3659
 28098                           
 28099                           ; BSR set to: 0
 28100  00D664  0E00               	movlw	0
 28101  00D666  6F7C               	movwf	___fldiv@a& (0+255),b
 28102  00D668  0E00               	movlw	0
 28103  00D66A  6F7D               	movwf	(___fldiv@a+1)& (0+255),b
 28104  00D66C  0E00               	movlw	0
 28105  00D66E  6F7E               	movwf	(___fldiv@a+2)& (0+255),b
 28106  00D670  0E00               	movlw	0
 28107  00D672  6F7F               	movwf	(___fldiv@a+3)& (0+255),b
 28108  00D674                     l3659:
 28109                           
 28110                           ; BSR set to: 0
 28111                           
 28112                           ; BSR set to: 0
 28113  00D674  8F7E               	bsf	(___fldiv@a+2)& (0+255),7,b
 28114  00D676  D006               	goto	L38
 28115  00D678                     l3658:
 28116                           
 28117                           ; BSR set to: 0
 28118                           
 28119                           ; BSR set to: 0
 28120  00D678  0E00               	movlw	0
 28121  00D67A  6F7C               	movwf	___fldiv@a& (0+255),b
 28122  00D67C  0E00               	movlw	0
 28123  00D67E  6F7D               	movwf	(___fldiv@a+1)& (0+255),b
 28124  00D680  0E00               	movlw	0
 28125  00D682  6F7E               	movwf	(___fldiv@a+2)& (0+255),b
 28126  00D684                     L38:
 28127  00D684  0E00               	movlw	0
 28128  00D686  6F7F               	movwf	(___fldiv@a+3)& (0+255),b
 28129                           
 28130                           ; BSR set to: 0
 28131                           
 28132                           ; BSR set to: 0
 28133  00D688  517C               	movf	___fldiv@a& (0+255),w,b
 28134  00D68A  117D               	iorwf	(___fldiv@a+1)& (0+255),w,b
 28135  00D68C  117E               	iorwf	(___fldiv@a+2)& (0+255),w,b
 28136  00D68E  117F               	iorwf	(___fldiv@a+3)& (0+255),w,b
 28137  00D690  A4D8               	btfss	status,2,c
 28138  00D692  D017               	goto	l3661
 28139                           
 28140                           ; BSR set to: 0
 28141  00D694  0E00               	movlw	0
 28142  00D696  6F78               	movwf	___fldiv@b& (0+255),b
 28143  00D698  0E00               	movlw	0
 28144  00D69A  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 28145  00D69C  0E00               	movlw	0
 28146  00D69E  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 28147  00D6A0  0E00               	movlw	0
 28148  00D6A2  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 28149                           
 28150                           ; BSR set to: 0
 28151  00D6A4  0E80               	movlw	128
 28152  00D6A6  137A               	iorwf	(___fldiv@b+2)& (0+255),f,b
 28153  00D6A8  0E7F               	movlw	127
 28154  00D6AA  137B               	iorwf	(___fldiv@b+3)& (0+255),f,b
 28155                           
 28156                           ; BSR set to: 0
 28157  00D6AC  5188               	movf	___fldiv@sign& (0+255),w,b
 28158  00D6AE  137B               	iorwf	(___fldiv@b+3)& (0+255),f,b
 28159                           
 28160                           ; BSR set to: 0
 28161  00D6B0  C078  F078         	movff	___fldiv@b,?___fldiv
 28162  00D6B4  C079  F079         	movff	___fldiv@b+1,?___fldiv+1
 28163  00D6B8  C07A  F07A         	movff	___fldiv@b+2,?___fldiv+2
 28164  00D6BC  C07B  F07B         	movff	___fldiv@b+3,?___fldiv+3
 28165                           
 28166                           ; BSR set to: 0
 28167  00D6C0  0012               	return	
 28168  00D6C2                     l3661:
 28169                           
 28170                           ; BSR set to: 0
 28171                           
 28172                           ; BSR set to: 0
 28173  00D6C2  518F               	movf	___fldiv@bexp& (0+255),w,b
 28174  00D6C4  A4D8               	btfss	status,2,c
 28175  00D6C6  D011               	goto	l3663
 28176                           
 28177                           ; BSR set to: 0
 28178  00D6C8  0E00               	movlw	0
 28179  00D6CA  6F78               	movwf	___fldiv@b& (0+255),b
 28180  00D6CC  0E00               	movlw	0
 28181  00D6CE  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 28182  00D6D0  0E00               	movlw	0
 28183  00D6D2  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 28184  00D6D4  0E00               	movlw	0
 28185  00D6D6  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 28186                           
 28187                           ; BSR set to: 0
 28188  00D6D8  C078  F078         	movff	___fldiv@b,?___fldiv
 28189  00D6DC  C079  F079         	movff	___fldiv@b+1,?___fldiv+1
 28190  00D6E0  C07A  F07A         	movff	___fldiv@b+2,?___fldiv+2
 28191  00D6E4  C07B  F07B         	movff	___fldiv@b+3,?___fldiv+3
 28192                           
 28193                           ; BSR set to: 0
 28194  00D6E8  0012               	return	
 28195  00D6EA                     l3663:
 28196                           
 28197                           ; BSR set to: 0
 28198                           
 28199                           ; BSR set to: 0
 28200  00D6EA  5190               	movf	___fldiv@aexp& (0+255),w,b
 28201  00D6EC  6F80               	movwf	??___fldiv& (0+255),b
 28202  00D6EE  6B81               	clrf	(??___fldiv+1)& (0+255),b
 28203  00D6F0  1F80               	comf	??___fldiv& (0+255),f,b
 28204  00D6F2  1F81               	comf	(??___fldiv+1)& (0+255),f,b
 28205  00D6F4  4B80               	infsnz	??___fldiv& (0+255),f,b
 28206  00D6F6  2B81               	incf	(??___fldiv+1)& (0+255),f,b
 28207  00D6F8  518F               	movf	___fldiv@bexp& (0+255),w,b
 28208  00D6FA  6F82               	movwf	(??___fldiv+2)& (0+255),b
 28209  00D6FC  6B83               	clrf	(??___fldiv+3)& (0+255),b
 28210  00D6FE  5180               	movf	??___fldiv& (0+255),w,b
 28211  00D700  2782               	addwf	(??___fldiv+2)& (0+255),f,b
 28212  00D702  5181               	movf	(??___fldiv+1)& (0+255),w,b
 28213  00D704  2383               	addwfc	(??___fldiv+3)& (0+255),f,b
 28214  00D706  0E7F               	movlw	127
 28215  00D708  2582               	addwf	(??___fldiv+2)& (0+255),w,b
 28216  00D70A  6F89               	movwf	___fldiv@new_exp& (0+255),b
 28217  00D70C  0E00               	movlw	0
 28218  00D70E  2183               	addwfc	(??___fldiv+3)& (0+255),w,b
 28219  00D710  6F8A               	movwf	(___fldiv@new_exp+1)& (0+255),b
 28220                           
 28221                           ; BSR set to: 0
 28222  00D712  C078  F084         	movff	___fldiv@b,___fldiv@rem
 28223  00D716  C079  F085         	movff	___fldiv@b+1,___fldiv@rem+1
 28224  00D71A  C07A  F086         	movff	___fldiv@b+2,___fldiv@rem+2
 28225  00D71E  C07B  F087         	movff	___fldiv@b+3,___fldiv@rem+3
 28226                           
 28227                           ; BSR set to: 0
 28228  00D722  0E00               	movlw	0
 28229  00D724  6F78               	movwf	___fldiv@b& (0+255),b
 28230  00D726  0E00               	movlw	0
 28231  00D728  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 28232  00D72A  0E00               	movlw	0
 28233  00D72C  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 28234  00D72E  0E00               	movlw	0
 28235  00D730  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 28236                           
 28237                           ; BSR set to: 0
 28238  00D732  0E00               	movlw	0
 28239  00D734  6F8B               	movwf	___fldiv@grs& (0+255),b
 28240  00D736  0E00               	movlw	0
 28241  00D738  6F8C               	movwf	(___fldiv@grs+1)& (0+255),b
 28242  00D73A  0E00               	movlw	0
 28243  00D73C  6F8D               	movwf	(___fldiv@grs+2)& (0+255),b
 28244  00D73E  0E00               	movlw	0
 28245  00D740  6F8E               	movwf	(___fldiv@grs+3)& (0+255),b
 28246                           
 28247                           ; BSR set to: 0
 28248  00D742  0E00               	movlw	0
 28249  00D744  6F90               	movwf	___fldiv@aexp& (0+255),b
 28250  00D746  D028               	goto	l3664
 28251  00D748                     
 28252                           ; BSR set to: 0
 28253                           
 28254                           ; BSR set to: 0
 28255  00D748  5190               	movf	___fldiv@aexp& (0+255),w,b
 28256  00D74A  B4D8               	btfsc	status,2,c
 28257  00D74C  D011               	goto	l3666
 28258                           
 28259                           ; BSR set to: 0
 28260  00D74E  90D8               	bcf	status,0,c
 28261  00D750  3784               	rlcf	___fldiv@rem& (0+255),f,b
 28262  00D752  3785               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 28263  00D754  3786               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 28264  00D756  3787               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 28265  00D758  90D8               	bcf	status,0,c
 28266  00D75A  3778               	rlcf	___fldiv@b& (0+255),f,b
 28267  00D75C  3779               	rlcf	(___fldiv@b+1)& (0+255),f,b
 28268  00D75E  377A               	rlcf	(___fldiv@b+2)& (0+255),f,b
 28269  00D760  377B               	rlcf	(___fldiv@b+3)& (0+255),f,b
 28270                           
 28271                           ; BSR set to: 0
 28272  00D762  BF8E               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 28273                           
 28274                           ; BSR set to: 0
 28275  00D764  8178               	bsf	___fldiv@b& (0+255),0,b
 28276                           
 28277                           ; BSR set to: 0
 28278  00D766  90D8               	bcf	status,0,c
 28279  00D768  378B               	rlcf	___fldiv@grs& (0+255),f,b
 28280  00D76A  378C               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 28281  00D76C  378D               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 28282  00D76E  378E               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 28283  00D770                     l3666:
 28284                           
 28285                           ; BSR set to: 0
 28286                           
 28287                           ; BSR set to: 0
 28288  00D770  517C               	movf	___fldiv@a& (0+255),w,b
 28289  00D772  5D84               	subwf	___fldiv@rem& (0+255),w,b
 28290  00D774  517D               	movf	(___fldiv@a+1)& (0+255),w,b
 28291  00D776  5985               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 28292  00D778  517E               	movf	(___fldiv@a+2)& (0+255),w,b
 28293  00D77A  5986               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 28294  00D77C  517F               	movf	(___fldiv@a+3)& (0+255),w,b
 28295  00D77E  5987               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 28296  00D780  A0D8               	btfss	status,0,c
 28297  00D782  D009               	goto	l3668
 28298                           
 28299                           ; BSR set to: 0
 28300  00D784  8D8E               	bsf	(___fldiv@grs+3)& (0+255),6,b
 28301                           
 28302                           ; BSR set to: 0
 28303  00D786  517C               	movf	___fldiv@a& (0+255),w,b
 28304  00D788  5F84               	subwf	___fldiv@rem& (0+255),f,b
 28305  00D78A  517D               	movf	(___fldiv@a+1)& (0+255),w,b
 28306  00D78C  5B85               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 28307  00D78E  517E               	movf	(___fldiv@a+2)& (0+255),w,b
 28308  00D790  5B86               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 28309  00D792  517F               	movf	(___fldiv@a+3)& (0+255),w,b
 28310  00D794  5B87               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 28311  00D796                     l3668:
 28312                           
 28313                           ; BSR set to: 0
 28314                           
 28315                           ; BSR set to: 0
 28316  00D796  2B90               	incf	___fldiv@aexp& (0+255),f,b
 28317  00D798                     l3664:
 28318                           
 28319                           ; BSR set to: 0
 28320  00D798  0E19               	movlw	25
 28321  00D79A  6590               	cpfsgt	___fldiv@aexp& (0+255),b
 28322  00D79C  D7D5               	goto	l3665
 28323                           
 28324                           ; BSR set to: 0
 28325                           
 28326                           ; BSR set to: 0
 28327  00D79E  5184               	movf	___fldiv@rem& (0+255),w,b
 28328  00D7A0  1185               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 28329  00D7A2  1186               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 28330  00D7A4  1187               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 28331  00D7A6  B4D8               	btfsc	status,2,c
 28332  00D7A8  D011               	goto	l3671
 28333                           
 28334                           ; BSR set to: 0
 28335  00D7AA  818B               	bsf	___fldiv@grs& (0+255),0,b
 28336                           
 28337                           ; BSR set to: 0
 28338  00D7AC  D00F               	goto	l3671
 28339  00D7AE                     
 28340                           ; BSR set to: 0
 28341                           
 28342                           ; BSR set to: 0
 28343  00D7AE  90D8               	bcf	status,0,c
 28344  00D7B0  3778               	rlcf	___fldiv@b& (0+255),f,b
 28345  00D7B2  3779               	rlcf	(___fldiv@b+1)& (0+255),f,b
 28346  00D7B4  377A               	rlcf	(___fldiv@b+2)& (0+255),f,b
 28347  00D7B6  377B               	rlcf	(___fldiv@b+3)& (0+255),f,b
 28348                           
 28349                           ; BSR set to: 0
 28350  00D7B8  BF8E               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 28351                           
 28352                           ; BSR set to: 0
 28353  00D7BA  8178               	bsf	___fldiv@b& (0+255),0,b
 28354                           
 28355                           ; BSR set to: 0
 28356  00D7BC  90D8               	bcf	status,0,c
 28357  00D7BE  378B               	rlcf	___fldiv@grs& (0+255),f,b
 28358  00D7C0  378C               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 28359  00D7C2  378D               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 28360  00D7C4  378E               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 28361  00D7C6  0789               	decf	___fldiv@new_exp& (0+255),f,b
 28362  00D7C8  A0D8               	btfss	status,0,c
 28363  00D7CA  078A               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 28364  00D7CC                     l3671:
 28365                           
 28366                           ; BSR set to: 0
 28367                           
 28368                           ; BSR set to: 0
 28369  00D7CC  AF7A               	btfss	(___fldiv@b+2)& (0+255),7,b
 28370  00D7CE  D7EF               	goto	l3672
 28371                           
 28372                           ; BSR set to: 0
 28373                           
 28374                           ; BSR set to: 0
 28375  00D7D0  0E00               	movlw	0
 28376  00D7D2  6F90               	movwf	___fldiv@aexp& (0+255),b
 28377                           
 28378                           ; BSR set to: 0
 28379  00D7D4  AF8E               	btfss	(___fldiv@grs+3)& (0+255),7,b
 28380  00D7D6  D016               	goto	l3678
 28381                           
 28382                           ; BSR set to: 0
 28383  00D7D8  0EFF               	movlw	255
 28384  00D7DA  158B               	andwf	___fldiv@grs& (0+255),w,b
 28385  00D7DC  6F80               	movwf	??___fldiv& (0+255),b
 28386  00D7DE  0EFF               	movlw	255
 28387  00D7E0  158C               	andwf	(___fldiv@grs+1)& (0+255),w,b
 28388  00D7E2  6F81               	movwf	(??___fldiv+1)& (0+255),b
 28389  00D7E4  0EFF               	movlw	255
 28390  00D7E6  158D               	andwf	(___fldiv@grs+2)& (0+255),w,b
 28391  00D7E8  6F82               	movwf	(??___fldiv+2)& (0+255),b
 28392  00D7EA  0E7F               	movlw	127
 28393  00D7EC  158E               	andwf	(___fldiv@grs+3)& (0+255),w,b
 28394  00D7EE  6F83               	movwf	(??___fldiv+3)& (0+255),b
 28395  00D7F0  5180               	movf	??___fldiv& (0+255),w,b
 28396  00D7F2  1181               	iorwf	(??___fldiv+1)& (0+255),w,b
 28397  00D7F4  1182               	iorwf	(??___fldiv+2)& (0+255),w,b
 28398  00D7F6  1183               	iorwf	(??___fldiv+3)& (0+255),w,b
 28399  00D7F8  A4D8               	btfss	status,2,c
 28400  00D7FA  D002               	goto	u13110
 28401                           
 28402                           ; BSR set to: 0
 28403                           
 28404                           ; BSR set to: 0
 28405  00D7FC  A178               	btfss	___fldiv@b& (0+255),0,b
 28406  00D7FE  D002               	goto	l3678
 28407  00D800                     u13110:
 28408                           
 28409                           ; BSR set to: 0
 28410  00D800  0E01               	movlw	1
 28411  00D802  6F90               	movwf	___fldiv@aexp& (0+255),b
 28412  00D804                     l3678:
 28413                           
 28414                           ; BSR set to: 0
 28415                           
 28416                           ; BSR set to: 0
 28417                           
 28418                           ; BSR set to: 0
 28419  00D804  5190               	movf	___fldiv@aexp& (0+255),w,b
 28420  00D806  B4D8               	btfsc	status,2,c
 28421  00D808  D01F               	goto	l3680
 28422                           
 28423                           ; BSR set to: 0
 28424  00D80A  0E01               	movlw	1
 28425  00D80C  2778               	addwf	___fldiv@b& (0+255),f,b
 28426  00D80E  0E00               	movlw	0
 28427  00D810  2379               	addwfc	(___fldiv@b+1)& (0+255),f,b
 28428  00D812  237A               	addwfc	(___fldiv@b+2)& (0+255),f,b
 28429  00D814  237B               	addwfc	(___fldiv@b+3)& (0+255),f,b
 28430                           
 28431                           ; BSR set to: 0
 28432  00D816  A17B               	btfss	(___fldiv@b+3)& (0+255),0,b
 28433  00D818  D017               	goto	l3680
 28434                           
 28435                           ; BSR set to: 0
 28436  00D81A  C078  F080         	movff	___fldiv@b,??___fldiv
 28437  00D81E  C079  F081         	movff	___fldiv@b+1,??___fldiv+1
 28438  00D822  C07A  F082         	movff	___fldiv@b+2,??___fldiv+2
 28439  00D826  C07B  F083         	movff	___fldiv@b+3,??___fldiv+3
 28440  00D82A  3583               	rlcf	(??___fldiv+3)& (0+255),w,b
 28441  00D82C  3383               	rrcf	(??___fldiv+3)& (0+255),f,b
 28442  00D82E  3382               	rrcf	(??___fldiv+2)& (0+255),f,b
 28443  00D830  3381               	rrcf	(??___fldiv+1)& (0+255),f,b
 28444  00D832  3380               	rrcf	??___fldiv& (0+255),f,b
 28445  00D834  C080  F078         	movff	??___fldiv,___fldiv@b
 28446  00D838  C081  F079         	movff	??___fldiv+1,___fldiv@b+1
 28447  00D83C  C082  F07A         	movff	??___fldiv+2,___fldiv@b+2
 28448  00D840  C083  F07B         	movff	??___fldiv+3,___fldiv@b+3
 28449                           
 28450                           ; BSR set to: 0
 28451  00D844  4B89               	infsnz	___fldiv@new_exp& (0+255),f,b
 28452  00D846  2B8A               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 28453  00D848                     l3680:
 28454                           
 28455                           ; BSR set to: 0
 28456                           
 28457                           ; BSR set to: 0
 28458                           
 28459                           ; BSR set to: 0
 28460  00D848  BF8A               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 28461  00D84A  D010               	goto	l3681
 28462  00D84C  518A               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 28463  00D84E  E103               	bnz	u13140
 28464  00D850  2989               	incf	___fldiv@new_exp& (0+255),w,b
 28465  00D852  A0D8               	btfss	status,0,c
 28466  00D854  D00B               	goto	l3681
 28467  00D856                     u13140:
 28468                           
 28469                           ; BSR set to: 0
 28470  00D856  0E00               	movlw	0
 28471  00D858  6F8A               	movwf	(___fldiv@new_exp+1)& (0+255),b
 28472  00D85A  6989               	setf	___fldiv@new_exp& (0+255),b
 28473  00D85C  0E00               	movlw	0
 28474  00D85E  6F78               	movwf	___fldiv@b& (0+255),b
 28475  00D860  0E00               	movlw	0
 28476  00D862  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 28477  00D864  0E00               	movlw	0
 28478  00D866  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 28479  00D868  0E00               	movlw	0
 28480  00D86A  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 28481  00D86C                     l3681:
 28482                           
 28483                           ; BSR set to: 0
 28484                           
 28485                           ; BSR set to: 0
 28486  00D86C  BF8A               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 28487  00D86E  D005               	goto	u13150
 28488  00D870  518A               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 28489  00D872  E111               	bnz	l14308
 28490  00D874  0589               	decf	___fldiv@new_exp& (0+255),w,b
 28491  00D876  B0D8               	btfsc	status,0,c
 28492  00D878  D00E               	goto	l3682
 28493  00D87A                     u13150:
 28494                           
 28495                           ; BSR set to: 0
 28496  00D87A  0E00               	movlw	0
 28497  00D87C  6F8A               	movwf	(___fldiv@new_exp+1)& (0+255),b
 28498  00D87E  0E00               	movlw	0
 28499  00D880  6F89               	movwf	___fldiv@new_exp& (0+255),b
 28500  00D882  0E00               	movlw	0
 28501  00D884  6F78               	movwf	___fldiv@b& (0+255),b
 28502  00D886  0E00               	movlw	0
 28503  00D888  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 28504  00D88A  0E00               	movlw	0
 28505  00D88C  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 28506  00D88E  0E00               	movlw	0
 28507  00D890  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 28508  00D892  0E00               	movlw	0
 28509  00D894  6F88               	movwf	___fldiv@sign& (0+255),b
 28510  00D896                     l3682:
 28511  00D896                     l14308:
 28512                           
 28513                           ; BSR set to: 0
 28514  00D896  C089  F08F         	movff	___fldiv@new_exp,___fldiv@bexp
 28515                           
 28516                           ; BSR set to: 0
 28517  00D89A  A18F               	btfss	___fldiv@bexp& (0+255),0,b
 28518  00D89C  D002               	goto	l3683
 28519                           
 28520                           ; BSR set to: 0
 28521  00D89E  8F7A               	bsf	(___fldiv@b+2)& (0+255),7,b
 28522  00D8A0  D001               	goto	l3684
 28523  00D8A2                     l3683:
 28524                           
 28525                           ; BSR set to: 0
 28526                           
 28527                           ; BSR set to: 0
 28528  00D8A2  9F7A               	bcf	(___fldiv@b+2)& (0+255),7,b
 28529  00D8A4                     l3684:
 28530                           
 28531                           ; BSR set to: 0
 28532                           
 28533                           ; BSR set to: 0
 28534  00D8A4  90D8               	bcf	status,0,c
 28535  00D8A6  318F               	rrcf	___fldiv@bexp& (0+255),w,b
 28536  00D8A8  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 28537                           
 28538                           ; BSR set to: 0
 28539  00D8AA  5188               	movf	___fldiv@sign& (0+255),w,b
 28540  00D8AC  137B               	iorwf	(___fldiv@b+3)& (0+255),f,b
 28541                           
 28542                           ; BSR set to: 0
 28543  00D8AE  C078  F078         	movff	___fldiv@b,?___fldiv
 28544  00D8B2  C079  F079         	movff	___fldiv@b+1,?___fldiv+1
 28545  00D8B6  C07A  F07A         	movff	___fldiv@b+2,?___fldiv+2
 28546  00D8BA  C07B  F07B         	movff	___fldiv@b+3,?___fldiv+3
 28547  00D8BE  0012               	return	
 28548  00D8C0                     __end_of___fldiv:
 28549                           	opt stack 0
 28550                           tblptru	equ	0xFF8
 28551                           tblptrh	equ	0xFF7
 28552                           tblptrl	equ	0xFF6
 28553                           tablat	equ	0xFF5
 28554                           prodh	equ	0xFF4
 28555                           prodl	equ	0xFF3
 28556                           intcon	equ	0xFF2
 28557                           postinc0	equ	0xFEE
 28558                           wreg	equ	0xFE8
 28559                           indf1	equ	0xFE7
 28560                           postinc1	equ	0xFE6
 28561                           postdec1	equ	0xFE5
 28562                           plusw1	equ	0xFE3
 28563                           fsr1h	equ	0xFE2
 28564                           fsr1l	equ	0xFE1
 28565                           indf2	equ	0xFDF
 28566                           postinc2	equ	0xFDE
 28567                           postdec2	equ	0xFDD
 28568                           plusw2	equ	0xFDB
 28569                           fsr2h	equ	0xFDA
 28570                           fsr2l	equ	0xFD9
 28571                           status	equ	0xFD8
 28572                           
 28573 ;; *************** function __display_signed_itoa *****************
 28574 ;; Defined at:
 28575 ;;		line 121 in file "display.c"
 28576 ;; Parameters:    Size  Location     Type
 28577 ;;  value           2   47[BANK0 ] int 
 28578 ;;  text            2   49[BANK0 ] PTR unsigned char 
 28579 ;;		 -> display_prepare@temp(10), 
 28580 ;; Auto vars:     Size  Location     Type
 28581 ;;		None
 28582 ;; Return value:  Size  Location     Type
 28583 ;;                  1    wreg      void 
 28584 ;; Registers used:
 28585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28586 ;; Tracked objects:
 28587 ;;		On entry : 0/0
 28588 ;;		On exit  : 0/0
 28589 ;;		Unchanged: 0/0
 28590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28591 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28594 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28595 ;;Total ram usage:        4 bytes
 28596 ;; Hardware stack levels used:    1
 28597 ;; Hardware stack levels required when called:   14
 28598 ;; This function calls:
 28599 ;;		__display_padded_itoa
 28600 ;; This function is called by:
 28601 ;;		_display_prepare
 28602 ;; This function uses a non-reentrant model
 28603 ;;
 28604                           
 28605                           	psect	text109
 28606  0155D8                     __ptext109:
 28607                           	opt stack 0
 28608  0155D8                     __display_signed_itoa:
 28609                           	opt stack 15
 28610                           
 28611                           ;display.c: 123: if(value<0)
 28612                           
 28613                           ; BSR set to: 0
 28614                           ;incstack = 0
 28615  0155D8  0100               	movlb	0	; () banked
 28616  0155DA  AF90               	btfss	(__display_signed_itoa@value+1)& (0+255),7,b
 28617  0155DC  D00A               	goto	l1343
 28618                           
 28619                           ; BSR set to: 0
 28620                           ;display.c: 124: {;display.c: 125: value = -value;
 28621  0155DE  6D8F               	negf	__display_signed_itoa@value& (0+255),b
 28622  0155E0  1F90               	comf	(__display_signed_itoa@value+1)& (0+255),f,b
 28623  0155E2  B0D8               	btfsc	status,0,c
 28624  0155E4  2B90               	incf	(__display_signed_itoa@value+1)& (0+255),f,b
 28625                           
 28626                           ; BSR set to: 0
 28627                           ;display.c: 126: text[0] = '-';
 28628  0155E6  C091  FFD9         	movff	__display_signed_itoa@text,fsr2l
 28629  0155EA  C092  FFDA         	movff	__display_signed_itoa@text+1,fsr2h
 28630  0155EE  0E2D               	movlw	45
 28631  0155F0  D005               	goto	L39
 28632  0155F2                     l1343:
 28633                           
 28634                           ; BSR set to: 0
 28635                           ;display.c: 128: else;display.c: 129: {;display.c: 130: text[0] = '+';
 28636                           
 28637                           ; BSR set to: 0
 28638  0155F2  C091  FFD9         	movff	__display_signed_itoa@text,fsr2l
 28639  0155F6  C092  FFDA         	movff	__display_signed_itoa@text+1,fsr2h
 28640  0155FA  0E2B               	movlw	43
 28641  0155FC                     L39:
 28642  0155FC  6EDF               	movwf	indf2,c
 28643                           
 28644                           ; BSR set to: 0
 28645                           ;display.c: 131: };display.c: 132: _display_padded_itoa(value, 0, &text[1]);
 28646                           
 28647                           ; BSR set to: 0
 28648  0155FE  C08F  F078         	movff	__display_signed_itoa@value,__display_padded_itoa@value
 28649  015602  C090  F079         	movff	__display_signed_itoa@value+1,__display_padded_itoa@value+1
 28650  015606  0E00               	movlw	0
 28651  015608  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 28652  01560A  0E01               	movlw	1
 28653  01560C  2591               	addwf	__display_signed_itoa@text& (0+255),w,b
 28654  01560E  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 28655  015610  0E00               	movlw	0
 28656  015612  2192               	addwfc	(__display_signed_itoa@text+1)& (0+255),w,b
 28657  015614  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 28658  015616  ECDF  F090         	call	__display_padded_itoa	;wreg free
 28659  01561A  0012               	return		;funcret
 28660  01561C                     __end_of__display_signed_itoa:
 28661                           	opt stack 0
 28662                           tblptru	equ	0xFF8
 28663                           tblptrh	equ	0xFF7
 28664                           tblptrl	equ	0xFF6
 28665                           tablat	equ	0xFF5
 28666                           prodh	equ	0xFF4
 28667                           prodl	equ	0xFF3
 28668                           intcon	equ	0xFF2
 28669                           postinc0	equ	0xFEE
 28670                           wreg	equ	0xFE8
 28671                           indf1	equ	0xFE7
 28672                           postinc1	equ	0xFE6
 28673                           postdec1	equ	0xFE5
 28674                           plusw1	equ	0xFE3
 28675                           fsr1h	equ	0xFE2
 28676                           fsr1l	equ	0xFE1
 28677                           indf2	equ	0xFDF
 28678                           postinc2	equ	0xFDE
 28679                           postdec2	equ	0xFDD
 28680                           plusw2	equ	0xFDB
 28681                           fsr2h	equ	0xFDA
 28682                           fsr2l	equ	0xFD9
 28683                           status	equ	0xFD8
 28684                           
 28685 ;; *************** function __display_padded_itoa *****************
 28686 ;; Defined at:
 28687 ;;		line 99 in file "display.c"
 28688 ;; Parameters:    Size  Location     Type
 28689 ;;  value           2   24[BANK0 ] int 
 28690 ;;  length          1   26[BANK0 ] unsigned char 
 28691 ;;  text            2   27[BANK0 ] PTR unsigned char 
 28692 ;;		 -> display_prepare@temp(10), 
 28693 ;; Auto vars:     Size  Location     Type
 28694 ;;  tmp            10   34[BANK0 ] unsigned char [10]
 28695 ;;  padding         1   46[BANK0 ] unsigned char 
 28696 ;;  pos             1   45[BANK0 ] unsigned char 
 28697 ;;  len             1   44[BANK0 ] unsigned char 
 28698 ;; Return value:  Size  Location     Type
 28699 ;;                  1    wreg      void 
 28700 ;; Registers used:
 28701 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28702 ;; Tracked objects:
 28703 ;;		On entry : 0/0
 28704 ;;		On exit  : 0/0
 28705 ;;		Unchanged: 0/0
 28706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28707 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28708 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28709 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28710 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28711 ;;Total ram usage:       23 bytes
 28712 ;; Hardware stack levels used:    1
 28713 ;; Hardware stack levels required when called:   13
 28714 ;; This function calls:
 28715 ;;		_itoa
 28716 ;;		_strlen
 28717 ;; This function is called by:
 28718 ;;		__display_signed_itoa
 28719 ;;		_display_prepare
 28720 ;; This function uses a non-reentrant model
 28721 ;;
 28722                           
 28723                           	psect	text110
 28724  0121BE                     __ptext110:
 28725                           	opt stack 0
 28726  0121BE                     __display_padded_itoa:
 28727                           	opt stack 15
 28728                           
 28729                           ;display.c: 101: uint8_t pos;;display.c: 102: uint8_t padding;;display.c: 104: uint8_t l
      +                          en;;display.c: 105: char tmp[10];;display.c: 106: itoa(tmp, value, 10);
 28730                           
 28731                           ;incstack = 0
 28732  0121BE  0E82               	movlw	low __display_padded_itoa@tmp
 28733  0121C0  0100               	movlb	0	; () banked
 28734  0121C2  6F70               	movwf	itoa@buf& (0+255),b
 28735  0121C4  0E00               	movlw	high __display_padded_itoa@tmp
 28736  0121C6  6F71               	movwf	(itoa@buf+1)& (0+255),b
 28737  0121C8  C078  F072         	movff	__display_padded_itoa@value,itoa@val
 28738  0121CC  C079  F073         	movff	__display_padded_itoa@value+1,itoa@val+1
 28739  0121D0  0E00               	movlw	0
 28740  0121D2  6F75               	movwf	(itoa@base+1)& (0+255),b
 28741  0121D4  0E0A               	movlw	10
 28742  0121D6  6F74               	movwf	itoa@base& (0+255),b
 28743  0121D8  EC0E  F0AB         	call	_itoa	;wreg free
 28744                           
 28745                           ;display.c: 107: len = strlen(tmp);
 28746  0121DC  0E82               	movlw	low __display_padded_itoa@tmp
 28747  0121DE  0100               	movlb	0	; () banked
 28748  0121E0  6F60               	movwf	strlen@s& (0+255),b
 28749  0121E2  0E00               	movlw	high __display_padded_itoa@tmp
 28750  0121E4  6F61               	movwf	(strlen@s+1)& (0+255),b
 28751  0121E6  ECB4  F0AB         	call	_strlen	;wreg free
 28752  0121EA  0100               	movlb	0	; () banked
 28753  0121EC  5160               	movf	?_strlen& (0+255),w,b
 28754  0121EE  6F8C               	movwf	__display_padded_itoa@len& (0+255),b
 28755                           
 28756                           ; BSR set to: 0
 28757                           ;display.c: 108: padding = 0;
 28758  0121F0  0E00               	movlw	0
 28759  0121F2  6F8E               	movwf	__display_padded_itoa@padding& (0+255),b
 28760                           
 28761                           ;display.c: 109: while((padding+len)<length)
 28762  0121F4  D00B               	goto	l1334
 28763  0121F6                     
 28764                           ; BSR set to: 0
 28765                           ;display.c: 110: {;display.c: 111: text[padding] = ' ';
 28766                           
 28767                           ; BSR set to: 0
 28768  0121F6  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 28769  0121F8  0D01               	mullw	1
 28770  0121FA  50F3               	movf	prodl,w,c
 28771  0121FC  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 28772  0121FE  6ED9               	movwf	fsr2l,c
 28773  012200  50F4               	movf	prodh,w,c
 28774  012202  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 28775  012204  6EDA               	movwf	fsr2h,c
 28776  012206  0E20               	movlw	32
 28777  012208  6EDF               	movwf	indf2,c
 28778                           
 28779                           ; BSR set to: 0
 28780                           ;display.c: 112: ++padding;
 28781  01220A  2B8E               	incf	__display_padded_itoa@padding& (0+255),f,b
 28782  01220C                     l1334:
 28783                           
 28784                           ; BSR set to: 0
 28785                           
 28786                           ; BSR set to: 0
 28787  01220C  517A               	movf	__display_padded_itoa@length& (0+255),w,b
 28788  01220E  6F7D               	movwf	??__display_padded_itoa& (0+255),b
 28789  012210  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 28790  012212  518C               	movf	__display_padded_itoa@len& (0+255),w,b
 28791  012214  C08E  F07F         	movff	__display_padded_itoa@padding,??__display_padded_itoa+2
 28792  012218  6B80               	clrf	(??__display_padded_itoa+3)& (0+255),b
 28793  01221A  277F               	addwf	(??__display_padded_itoa+2)& (0+255),f,b
 28794  01221C  0E00               	movlw	0
 28795  01221E  2380               	addwfc	(??__display_padded_itoa+3)& (0+255),f,b
 28796  012220  517D               	movf	??__display_padded_itoa& (0+255),w,b
 28797  012222  5D7F               	subwf	(??__display_padded_itoa+2)& (0+255),w,b
 28798  012224  5180               	movf	(??__display_padded_itoa+3)& (0+255),w,b
 28799  012226  0A80               	xorlw	128
 28800  012228  6F81               	movwf	(??__display_padded_itoa+4)& (0+255),b
 28801  01222A  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 28802  01222C  0A80               	xorlw	128
 28803  01222E  5981               	subwfb	(??__display_padded_itoa+4)& (0+255),w,b
 28804  012230  A0D8               	btfss	status,0,c
 28805  012232  D7E1               	goto	l1335
 28806                           
 28807                           ; BSR set to: 0
 28808                           ;display.c: 113: };display.c: 114: for(pos=0; tmp[pos]; ++pos)
 28809                           
 28810                           ; BSR set to: 0
 28811  012234  0E00               	movlw	0
 28812  012236  6F8D               	movwf	__display_padded_itoa@pos& (0+255),b
 28813  012238  D018               	goto	l1337
 28814  01223A                     
 28815                           ; BSR set to: 0
 28816                           ;display.c: 115: {;display.c: 116: text[pos+padding] = tmp[pos];
 28817                           
 28818                           ; BSR set to: 0
 28819  01223A  518D               	movf	__display_padded_itoa@pos& (0+255),w,b
 28820  01223C  0D01               	mullw	1
 28821  01223E  0E82               	movlw	low __display_padded_itoa@tmp
 28822  012240  24F3               	addwf	prodl,w,c
 28823  012242  6ED9               	movwf	fsr2l,c
 28824  012244  0E00               	movlw	high __display_padded_itoa@tmp
 28825  012246  20F4               	addwfc	prodh,w,c
 28826  012248  6EDA               	movwf	fsr2h,c
 28827  01224A  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 28828  01224C  C08D  F07D         	movff	__display_padded_itoa@pos,??__display_padded_itoa
 28829  012250  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 28830  012252  277D               	addwf	??__display_padded_itoa& (0+255),f,b
 28831  012254  0E00               	movlw	0
 28832  012256  237E               	addwfc	(??__display_padded_itoa+1)& (0+255),f,b
 28833  012258  517D               	movf	??__display_padded_itoa& (0+255),w,b
 28834  01225A  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 28835  01225C  6EE1               	movwf	fsr1l,c
 28836  01225E  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 28837  012260  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 28838  012262  6EE2               	movwf	fsr1h,c
 28839  012264  CFDF FFE7          	movff	indf2,indf1
 28840                           
 28841                           ; BSR set to: 0
 28842  012268  2B8D               	incf	__display_padded_itoa@pos& (0+255),f,b
 28843  01226A                     l1337:
 28844                           
 28845                           ; BSR set to: 0
 28846                           
 28847                           ; BSR set to: 0
 28848  01226A  518D               	movf	__display_padded_itoa@pos& (0+255),w,b
 28849  01226C  0D01               	mullw	1
 28850  01226E  0E82               	movlw	low __display_padded_itoa@tmp
 28851  012270  24F3               	addwf	prodl,w,c
 28852  012272  6ED9               	movwf	fsr2l,c
 28853  012274  0E00               	movlw	high __display_padded_itoa@tmp
 28854  012276  20F4               	addwfc	prodh,w,c
 28855  012278  6EDA               	movwf	fsr2h,c
 28856  01227A  50DF               	movf	indf2,w,c
 28857  01227C  A4D8               	btfss	status,2,c
 28858  01227E  D7DD               	goto	l1338
 28859                           
 28860                           ; BSR set to: 0
 28861                           ;display.c: 117: };display.c: 118: text[pos+padding] = 0x00;
 28862                           
 28863                           ; BSR set to: 0
 28864  012280  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 28865  012282  C08D  F07D         	movff	__display_padded_itoa@pos,??__display_padded_itoa
 28866  012286  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 28867  012288  277D               	addwf	??__display_padded_itoa& (0+255),f,b
 28868  01228A  0E00               	movlw	0
 28869  01228C  237E               	addwfc	(??__display_padded_itoa+1)& (0+255),f,b
 28870  01228E  517D               	movf	??__display_padded_itoa& (0+255),w,b
 28871  012290  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 28872  012292  6ED9               	movwf	fsr2l,c
 28873  012294  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 28874  012296  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 28875  012298  6EDA               	movwf	fsr2h,c
 28876  01229A  0E00               	movlw	0
 28877  01229C  6EDF               	movwf	indf2,c
 28878                           
 28879                           ; BSR set to: 0
 28880  01229E  0012               	return		;funcret
 28881  0122A0                     __end_of__display_padded_itoa:
 28882                           	opt stack 0
 28883                           tblptru	equ	0xFF8
 28884                           tblptrh	equ	0xFF7
 28885                           tblptrl	equ	0xFF6
 28886                           tablat	equ	0xFF5
 28887                           prodh	equ	0xFF4
 28888                           prodl	equ	0xFF3
 28889                           intcon	equ	0xFF2
 28890                           postinc0	equ	0xFEE
 28891                           wreg	equ	0xFE8
 28892                           indf1	equ	0xFE7
 28893                           postinc1	equ	0xFE6
 28894                           postdec1	equ	0xFE5
 28895                           plusw1	equ	0xFE3
 28896                           fsr1h	equ	0xFE2
 28897                           fsr1l	equ	0xFE1
 28898                           indf2	equ	0xFDF
 28899                           postinc2	equ	0xFDE
 28900                           postdec2	equ	0xFDD
 28901                           plusw2	equ	0xFDB
 28902                           fsr2h	equ	0xFDA
 28903                           fsr2l	equ	0xFD9
 28904                           status	equ	0xFD8
 28905                           
 28906 ;; *************** function __display_position_in_degrees *****************
 28907 ;; Defined at:
 28908 ;;		line 258 in file "display.c"
 28909 ;; Parameters:    Size  Location     Type
 28910 ;;		None
 28911 ;; Auto vars:     Size  Location     Type
 28912 ;;  position        4    4[BANK0 ] long 
 28913 ;; Return value:  Size  Location     Type
 28914 ;;                  4    0[BANK0 ] long 
 28915 ;; Registers used:
 28916 ;;		wreg, status,2, status,0
 28917 ;; Tracked objects:
 28918 ;;		On entry : 0/0
 28919 ;;		On exit  : 0/0
 28920 ;;		Unchanged: 0/0
 28921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28922 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28923 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28925 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28926 ;;Total ram usage:        8 bytes
 28927 ;; Hardware stack levels used:    1
 28928 ;; Hardware stack levels required when called:   10
 28929 ;; This function calls:
 28930 ;;		Nothing
 28931 ;; This function is called by:
 28932 ;;		_display_prepare
 28933 ;; This function uses a non-reentrant model
 28934 ;;
 28935                           
 28936                           	psect	text111
 28937  01532A                     __ptext111:
 28938                           	opt stack 0
 28939  01532A                     __display_position_in_degrees:
 28940                           	opt stack 19
 28941                           
 28942                           ;display.c: 260: int32_t position;;display.c: 261: position = (int32_t) os.current_posit
      +                          ion_in_degrees;
 28943                           
 28944                           ; BSR set to: 0
 28945                           ;incstack = 0
 28946  01532A  C172  F064         	movff	_os+13,__display_position_in_degrees@position	;volatile
 28947  01532E  C173  F065         	movff	_os+14,__display_position_in_degrees@position+1	;volatile
 28948  015332  0100               	movlb	0	; () banked
 28949  015334  6B66               	clrf	(__display_position_in_degrees@position+2)& (0+255),b
 28950  015336  6B67               	clrf	(__display_position_in_degrees@position+3)& (0+255),b
 28951                           
 28952                           ; BSR set to: 0
 28953                           ;display.c: 263: if(config.position_display_180==1)
 28954  015338  0101               	movlb	1	; () banked
 28955  01533A  05BE               	decf	(_config+40)& (0+255),w,b
 28956  01533C  A4D8               	btfss	status,2,c
 28957  01533E  D014               	goto	l1388
 28958                           
 28959                           ; BSR set to: 1
 28960                           ;display.c: 264: {;display.c: 265: if(position>18000)
 28961  015340  0100               	movlb	0	; () banked
 28962  015342  BF67               	btfsc	(__display_position_in_degrees@position+3)& (0+255),7,b
 28963  015344  D011               	goto	l1388
 28964  015346  5167               	movf	(__display_position_in_degrees@position+3)& (0+255),w,b
 28965  015348  1166               	iorwf	(__display_position_in_degrees@position+2)& (0+255),w,b
 28966  01534A  E106               	bnz	u17140
 28967  01534C  0E51               	movlw	81
 28968  01534E  5D64               	subwf	__display_position_in_degrees@position& (0+255),w,b
 28969  015350  0E46               	movlw	70
 28970  015352  5965               	subwfb	(__display_position_in_degrees@position+1)& (0+255),w,b
 28971  015354  A0D8               	btfss	status,0,c
 28972  015356  D008               	goto	l1388
 28973  015358                     u17140:
 28974                           
 28975                           ; BSR set to: 0
 28976                           ;display.c: 266: {;display.c: 267: position -= 36000;
 28977  015358  0E60               	movlw	96
 28978  01535A  2764               	addwf	__display_position_in_degrees@position& (0+255),f,b
 28979  01535C  0E73               	movlw	115
 28980  01535E  2365               	addwfc	(__display_position_in_degrees@position+1)& (0+255),f,b
 28981  015360  0EFF               	movlw	255
 28982  015362  2366               	addwfc	(__display_position_in_degrees@position+2)& (0+255),f,b
 28983  015364  0EFF               	movlw	255
 28984  015366  2367               	addwfc	(__display_position_in_degrees@position+3)& (0+255),f,b
 28985  015368                     l1388:
 28986                           
 28987                           ;display.c: 268: };display.c: 269: };display.c: 271: return position;
 28988                           
 28989                           ; BSR set to: 0
 28990                           
 28991                           ; BSR set to: 0
 28992  015368  C064  F060         	movff	__display_position_in_degrees@position,?__display_position_in_degrees
 28993  01536C  C065  F061         	movff	__display_position_in_degrees@position+1,?__display_position_in_degrees+1
 28994  015370  C066  F062         	movff	__display_position_in_degrees@position+2,?__display_position_in_degrees+2
 28995  015374  C067  F063         	movff	__display_position_in_degrees@position+3,?__display_position_in_degrees+3
 28996  015378  0012               	return	
 28997  01537A                     __end_of__display_position_in_degrees:
 28998                           	opt stack 0
 28999                           tblptru	equ	0xFF8
 29000                           tblptrh	equ	0xFF7
 29001                           tblptrl	equ	0xFF6
 29002                           tablat	equ	0xFF5
 29003                           prodh	equ	0xFF4
 29004                           prodl	equ	0xFF3
 29005                           intcon	equ	0xFF2
 29006                           postinc0	equ	0xFEE
 29007                           wreg	equ	0xFE8
 29008                           indf1	equ	0xFE7
 29009                           postinc1	equ	0xFE6
 29010                           postdec1	equ	0xFE5
 29011                           plusw1	equ	0xFE3
 29012                           fsr1h	equ	0xFE2
 29013                           fsr1l	equ	0xFE1
 29014                           indf2	equ	0xFDF
 29015                           postinc2	equ	0xFDE
 29016                           postdec2	equ	0xFDD
 29017                           plusw2	equ	0xFDB
 29018                           fsr2h	equ	0xFDA
 29019                           fsr2l	equ	0xFD9
 29020                           status	equ	0xFD8
 29021                           
 29022 ;; *************** function __display_itoa_long *****************
 29023 ;; Defined at:
 29024 ;;		line 203 in file "display.c"
 29025 ;; Parameters:    Size  Location     Type
 29026 ;;  value           4   87[BANK0 ] long 
 29027 ;;  decimals        1   91[BANK0 ] unsigned char 
 29028 ;;  text            2   92[BANK0 ] PTR unsigned char 
 29029 ;;		 -> display_prepare@temp(10), 
 29030 ;; Auto vars:     Size  Location     Type
 29031 ;;  short_value     2   99[BANK0 ] int 
 29032 ;;  last_digit      1  101[BANK0 ] char 
 29033 ;;  length          1   98[BANK0 ] unsigned char 
 29034 ;; Return value:  Size  Location     Type
 29035 ;;                  1    wreg      void 
 29036 ;; Registers used:
 29037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29038 ;; Tracked objects:
 29039 ;;		On entry : 0/0
 29040 ;;		On exit  : 0/0
 29041 ;;		Unchanged: 0/0
 29042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29043 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29044 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29045 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29046 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29047 ;;Total ram usage:       15 bytes
 29048 ;; Hardware stack levels used:    1
 29049 ;; Hardware stack levels required when called:   14
 29050 ;; This function calls:
 29051 ;;		___aldiv
 29052 ;;		___almod
 29053 ;;		__display_itoa
 29054 ;;		_strlen
 29055 ;; This function is called by:
 29056 ;;		_display_prepare
 29057 ;; This function uses a non-reentrant model
 29058 ;;
 29059                           
 29060                           	psect	text112
 29061  01100A                     __ptext112:
 29062                           	opt stack 0
 29063  01100A                     __display_itoa_long:
 29064                           	opt stack 15
 29065                           
 29066                           ;display.c: 205: int16_t short_value;;display.c: 206: int8_t last_digit;;display.c: 207:
      +                           uint8_t length;;display.c: 209: short_value = (int16_t) value;
 29067                           
 29068                           ;incstack = 0
 29069  01100A  C0B7  F0C3         	movff	__display_itoa_long@value,__display_itoa_long@short_value
 29070  01100E  C0B8  F0C4         	movff	__display_itoa_long@value+1,__display_itoa_long@short_value+1
 29071                           
 29072                           ;display.c: 210: if(short_value==value)
 29073  011012  C0C3  F0BE         	movff	__display_itoa_long@short_value,??__display_itoa_long
 29074  011016  C0C4  F0BF         	movff	__display_itoa_long@short_value+1,??__display_itoa_long+1
 29075  01101A  0E00               	movlw	0
 29076  01101C  0100               	movlb	0	; () banked
 29077  01101E  BFBF               	btfsc	(??__display_itoa_long+1)& (0+255),7,b
 29078  011020  0EFF               	movlw	255
 29079  011022  6FC0               	movwf	(??__display_itoa_long+2)& (0+255),b
 29080  011024  6FC1               	movwf	(??__display_itoa_long+3)& (0+255),b
 29081  011026  51B7               	movf	__display_itoa_long@value& (0+255),w,b
 29082  011028  19BE               	xorwf	??__display_itoa_long& (0+255),w,b
 29083  01102A  E117               	bnz	l17620
 29084  01102C  51B8               	movf	(__display_itoa_long@value+1)& (0+255),w,b
 29085  01102E  19BF               	xorwf	(??__display_itoa_long+1)& (0+255),w,b
 29086  011030  E114               	bnz	l17620
 29087  011032  51B9               	movf	(__display_itoa_long@value+2)& (0+255),w,b
 29088  011034  19C0               	xorwf	(??__display_itoa_long+2)& (0+255),w,b
 29089  011036  E111               	bnz	l17620
 29090  011038  51BA               	movf	(__display_itoa_long@value+3)& (0+255),w,b
 29091  01103A  19C1               	xorwf	(??__display_itoa_long+3)& (0+255),w,b
 29092  01103C  A4D8               	btfss	status,2,c
 29093  01103E  D00D               	goto	l1370
 29094                           
 29095                           ; BSR set to: 0
 29096                           ;display.c: 211: {;display.c: 212: _display_itoa(short_value, decimals, text);
 29097  011040  C0C3  F09F         	movff	__display_itoa_long@short_value,__display_itoa@value
 29098  011044  C0C4  F0A0         	movff	__display_itoa_long@short_value+1,__display_itoa@value+1
 29099  011048  C0BB  F0A1         	movff	__display_itoa_long@decimals,__display_itoa@decimals
 29100  01104C  C0BC  F0A2         	movff	__display_itoa_long@text,__display_itoa@text
 29101  011050  C0BD  F0A3         	movff	__display_itoa_long@text+1,__display_itoa@text+1
 29102  011054  EC3C  F072         	call	__display_itoa	;wreg free
 29103                           
 29104                           ;display.c: 213: }
 29105  011058  0012               	return	
 29106  01105A                     l1370:
 29107  01105A                     l17620:
 29108                           
 29109                           ;display.c: 214: else;display.c: 215: {;display.c: 216: short_value = value / 10;
 29110  01105A  C0B7  F060         	movff	__display_itoa_long@value,___aldiv@dividend
 29111  01105E  C0B8  F061         	movff	__display_itoa_long@value+1,___aldiv@dividend+1
 29112  011062  C0B9  F062         	movff	__display_itoa_long@value+2,___aldiv@dividend+2
 29113  011066  C0BA  F063         	movff	__display_itoa_long@value+3,___aldiv@dividend+3
 29114  01106A  0E0A               	movlw	10
 29115  01106C  0100               	movlb	0	; () banked
 29116  01106E  6F64               	movwf	___aldiv@divisor& (0+255),b
 29117  011070  0E00               	movlw	0
 29118  011072  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 29119  011074  0E00               	movlw	0
 29120  011076  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 29121  011078  0E00               	movlw	0
 29122  01107A  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 29123  01107C  EC02  F096         	call	___aldiv	;wreg free
 29124  011080  C060  F0C3         	movff	?___aldiv,__display_itoa_long@short_value
 29125  011084  C061  F0C4         	movff	?___aldiv+1,__display_itoa_long@short_value+1
 29126                           
 29127                           ;display.c: 217: _display_itoa(short_value, decimals-1, text);
 29128  011088  C0C3  F09F         	movff	__display_itoa_long@short_value,__display_itoa@value
 29129  01108C  C0C4  F0A0         	movff	__display_itoa_long@short_value+1,__display_itoa@value+1
 29130  011090  0100               	movlb	0	; () banked
 29131  011092  05BB               	decf	__display_itoa_long@decimals& (0+255),w,b
 29132  011094  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 29133  011096  C0BC  F0A2         	movff	__display_itoa_long@text,__display_itoa@text
 29134  01109A  C0BD  F0A3         	movff	__display_itoa_long@text+1,__display_itoa@text+1
 29135  01109E  EC3C  F072         	call	__display_itoa	;wreg free
 29136                           
 29137                           ;display.c: 218: length = strlen(text);
 29138  0110A2  C0BC  F060         	movff	__display_itoa_long@text,strlen@s
 29139  0110A6  C0BD  F061         	movff	__display_itoa_long@text+1,strlen@s+1
 29140  0110AA  ECB4  F0AB         	call	_strlen	;wreg free
 29141  0110AE  0100               	movlb	0	; () banked
 29142  0110B0  5160               	movf	?_strlen& (0+255),w,b
 29143  0110B2  6FC2               	movwf	__display_itoa_long@length& (0+255),b
 29144                           
 29145                           ; BSR set to: 0
 29146                           ;display.c: 219: last_digit = value % 10;
 29147  0110B4  C0B7  F060         	movff	__display_itoa_long@value,___almod@dividend
 29148  0110B8  C0B8  F061         	movff	__display_itoa_long@value+1,___almod@dividend+1
 29149  0110BC  C0B9  F062         	movff	__display_itoa_long@value+2,___almod@dividend+2
 29150  0110C0  C0BA  F063         	movff	__display_itoa_long@value+3,___almod@dividend+3
 29151  0110C4  0E0A               	movlw	10
 29152  0110C6  6F64               	movwf	___almod@divisor& (0+255),b
 29153  0110C8  0E00               	movlw	0
 29154  0110CA  6F65               	movwf	(___almod@divisor+1)& (0+255),b
 29155  0110CC  0E00               	movlw	0
 29156  0110CE  6F66               	movwf	(___almod@divisor+2)& (0+255),b
 29157  0110D0  0E00               	movlw	0
 29158  0110D2  6F67               	movwf	(___almod@divisor+3)& (0+255),b
 29159  0110D4  ECB7  F099         	call	___almod	;wreg free
 29160  0110D8  0100               	movlb	0	; () banked
 29161  0110DA  5160               	movf	?___almod& (0+255),w,b
 29162  0110DC  6FC5               	movwf	__display_itoa_long@last_digit& (0+255),b
 29163                           
 29164                           ; BSR set to: 0
 29165                           ;display.c: 220: if(last_digit<0)
 29166  0110DE  BFC5               	btfsc	__display_itoa_long@last_digit& (0+255),7,b
 29167                           
 29168                           ; BSR set to: 0
 29169                           ;display.c: 221: last_digit = -last_digit;
 29170  0110E0  6DC5               	negf	__display_itoa_long@last_digit& (0+255),b
 29171                           
 29172                           ; BSR set to: 0
 29173                           ;display.c: 222: text[length] = last_digit + 0x30;
 29174                           
 29175                           ; BSR set to: 0
 29176  0110E2  51C2               	movf	__display_itoa_long@length& (0+255),w,b
 29177  0110E4  0D01               	mullw	1
 29178  0110E6  50F3               	movf	prodl,w,c
 29179  0110E8  25BC               	addwf	__display_itoa_long@text& (0+255),w,b
 29180  0110EA  6ED9               	movwf	fsr2l,c
 29181  0110EC  50F4               	movf	prodh,w,c
 29182  0110EE  21BD               	addwfc	(__display_itoa_long@text+1)& (0+255),w,b
 29183  0110F0  6EDA               	movwf	fsr2h,c
 29184  0110F2  51C5               	movf	__display_itoa_long@last_digit& (0+255),w,b
 29185  0110F4  0F30               	addlw	48
 29186  0110F6  6EDF               	movwf	indf2,c
 29187                           
 29188                           ; BSR set to: 0
 29189                           ;display.c: 223: text[length+1] = 0x00;
 29190  0110F8  51C2               	movf	__display_itoa_long@length& (0+255),w,b
 29191  0110FA  6FBE               	movwf	??__display_itoa_long& (0+255),b
 29192  0110FC  6BBF               	clrf	(??__display_itoa_long+1)& (0+255),b
 29193  0110FE  0E01               	movlw	1
 29194  011100  27BE               	addwf	??__display_itoa_long& (0+255),f,b
 29195  011102  0E00               	movlw	0
 29196  011104  23BF               	addwfc	(??__display_itoa_long+1)& (0+255),f,b
 29197  011106  51BE               	movf	??__display_itoa_long& (0+255),w,b
 29198  011108  25BC               	addwf	__display_itoa_long@text& (0+255),w,b
 29199  01110A  6ED9               	movwf	fsr2l,c
 29200  01110C  51BF               	movf	(??__display_itoa_long+1)& (0+255),w,b
 29201  01110E  21BD               	addwfc	(__display_itoa_long@text+1)& (0+255),w,b
 29202  011110  6EDA               	movwf	fsr2h,c
 29203  011112  0E00               	movlw	0
 29204  011114  6EDF               	movwf	indf2,c
 29205  011116  0012               	return	
 29206  011118                     __end_of__display_itoa_long:
 29207                           	opt stack 0
 29208                           tblptru	equ	0xFF8
 29209                           tblptrh	equ	0xFF7
 29210                           tblptrl	equ	0xFF6
 29211                           tablat	equ	0xFF5
 29212                           prodh	equ	0xFF4
 29213                           prodl	equ	0xFF3
 29214                           intcon	equ	0xFF2
 29215                           postinc0	equ	0xFEE
 29216                           wreg	equ	0xFE8
 29217                           indf1	equ	0xFE7
 29218                           postinc1	equ	0xFE6
 29219                           postdec1	equ	0xFE5
 29220                           plusw1	equ	0xFE3
 29221                           fsr1h	equ	0xFE2
 29222                           fsr1l	equ	0xFE1
 29223                           indf2	equ	0xFDF
 29224                           postinc2	equ	0xFDE
 29225                           postdec2	equ	0xFDD
 29226                           plusw2	equ	0xFDB
 29227                           fsr2h	equ	0xFDA
 29228                           fsr2l	equ	0xFD9
 29229                           status	equ	0xFD8
 29230                           
 29231 ;; *************** function __display_itoa *****************
 29232 ;; Defined at:
 29233 ;;		line 135 in file "display.c"
 29234 ;; Parameters:    Size  Location     Type
 29235 ;;  value           2   63[BANK0 ] int 
 29236 ;;  decimals        1   65[BANK0 ] unsigned char 
 29237 ;;  text            2   66[BANK0 ] PTR unsigned char 
 29238 ;;		 -> display_prepare@temp(10), display_content(80), 
 29239 ;; Auto vars:     Size  Location     Type
 29240 ;;  tmp            10   74[BANK0 ] unsigned char [10]
 29241 ;;  pos             1   86[BANK0 ] unsigned char 
 29242 ;;  missing         1   85[BANK0 ] char 
 29243 ;;  len             1   84[BANK0 ] unsigned char 
 29244 ;; Return value:  Size  Location     Type
 29245 ;;                  1    wreg      void 
 29246 ;; Registers used:
 29247 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29248 ;; Tracked objects:
 29249 ;;		On entry : 0/0
 29250 ;;		On exit  : 0/0
 29251 ;;		Unchanged: 0/0
 29252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29253 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29254 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29255 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29256 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29257 ;;Total ram usage:       24 bytes
 29258 ;; Hardware stack levels used:    1
 29259 ;; Hardware stack levels required when called:   13
 29260 ;; This function calls:
 29261 ;;		_itoa
 29262 ;;		_strlen
 29263 ;; This function is called by:
 29264 ;;		__display_itoa_long
 29265 ;;		_display_prepare
 29266 ;; This function uses a non-reentrant model
 29267 ;;
 29268                           
 29269                           	psect	text113
 29270  00E478                     __ptext113:
 29271                           	opt stack 0
 29272  00E478                     __display_itoa:
 29273                           	opt stack 15
 29274                           
 29275                           ;display.c: 137: uint8_t pos;;display.c: 138: uint8_t len;;display.c: 139: int8_t missin
      +                          g;;display.c: 140: char tmp[10];;display.c: 141: itoa(tmp, value, 10);
 29276                           
 29277                           ;incstack = 0
 29278  00E478  0EAA               	movlw	low __display_itoa@tmp
 29279  00E47A  0100               	movlb	0	; () banked
 29280  00E47C  6F70               	movwf	itoa@buf& (0+255),b
 29281  00E47E  0E00               	movlw	high __display_itoa@tmp
 29282  00E480  6F71               	movwf	(itoa@buf+1)& (0+255),b
 29283  00E482  C09F  F072         	movff	__display_itoa@value,itoa@val
 29284  00E486  C0A0  F073         	movff	__display_itoa@value+1,itoa@val+1
 29285  00E48A  0E00               	movlw	0
 29286  00E48C  6F75               	movwf	(itoa@base+1)& (0+255),b
 29287  00E48E  0E0A               	movlw	10
 29288  00E490  6F74               	movwf	itoa@base& (0+255),b
 29289  00E492  EC0E  F0AB         	call	_itoa	;wreg free
 29290                           
 29291                           ;display.c: 142: len = strlen(tmp);
 29292  00E496  0EAA               	movlw	low __display_itoa@tmp
 29293  00E498  0100               	movlb	0	; () banked
 29294  00E49A  6F60               	movwf	strlen@s& (0+255),b
 29295  00E49C  0E00               	movlw	high __display_itoa@tmp
 29296  00E49E  6F61               	movwf	(strlen@s+1)& (0+255),b
 29297  00E4A0  ECB4  F0AB         	call	_strlen	;wreg free
 29298  00E4A4  0100               	movlb	0	; () banked
 29299  00E4A6  5160               	movf	?_strlen& (0+255),w,b
 29300  00E4A8  6FB4               	movwf	__display_itoa@len& (0+255),b
 29301                           
 29302                           ; BSR set to: 0
 29303                           ;display.c: 144: if(value<0)
 29304  00E4AA  AFA0               	btfss	(__display_itoa@value+1)& (0+255),7,b
 29305  00E4AC  D054               	goto	l1348
 29306                           
 29307                           ; BSR set to: 0
 29308                           ;display.c: 145: {;display.c: 146: missing = decimals + 2 - len;
 29309  00E4AE  51B4               	movf	__display_itoa@len& (0+255),w,b
 29310  00E4B0  0800               	sublw	0
 29311  00E4B2  25A1               	addwf	__display_itoa@decimals& (0+255),w,b
 29312  00E4B4  0F02               	addlw	2
 29313  00E4B6  6FB5               	movwf	__display_itoa@missing& (0+255),b
 29314                           
 29315                           ;display.c: 147: if(missing>0)
 29316  00E4B8  51B5               	movf	__display_itoa@missing& (0+255),w,b
 29317  00E4BA  0A80               	xorlw	128
 29318  00E4BC  0F7F               	addlw	-129
 29319  00E4BE  A0D8               	btfss	status,0,c
 29320  00E4C0  D090               	goto	l1355
 29321                           
 29322                           ; BSR set to: 0
 29323                           ;display.c: 148: {;display.c: 149: for(pos=decimals;pos!=0xFF;--pos)
 29324  00E4C2  C0A1  F0B6         	movff	__display_itoa@decimals,__display_itoa@pos
 29325  00E4C6                     l16166:
 29326                           
 29327                           ; BSR set to: 0
 29328  00E4C6  29B6               	incf	__display_itoa@pos& (0+255),w,b
 29329  00E4C8  B4D8               	btfsc	status,2,c
 29330  00E4CA  D042               	goto	u15300
 29331                           
 29332                           ; BSR set to: 0
 29333                           ;display.c: 150: {;display.c: 151: if(pos>=missing)
 29334                           
 29335                           ; BSR set to: 0
 29336                           
 29337                           ; BSR set to: 0
 29338  00E4CC  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29339  00E4CE  BFB5               	btfsc	__display_itoa@missing& (0+255),7,b
 29340  00E4D0  D004               	goto	u15290
 29341  00E4D2  0AFF               	xorlw	255
 29342  00E4D4  25B5               	addwf	__display_itoa@missing& (0+255),w,b
 29343  00E4D6  B0D8               	btfsc	status,0,c
 29344  00E4D8  D02A               	goto	l1352
 29345  00E4DA                     u15290:
 29346                           
 29347                           ; BSR set to: 0
 29348                           ;display.c: 152: {;display.c: 153: tmp[pos+1] = tmp[pos+1-missing];
 29349  00E4DA  C0B5  F0A4         	movff	__display_itoa@missing,??__display_itoa
 29350  00E4DE  6BA5               	clrf	(??__display_itoa+1)& (0+255),b
 29351  00E4E0  BFA4               	btfsc	??__display_itoa& (0+255),7,b
 29352  00E4E2  07A5               	decf	(??__display_itoa+1)& (0+255),f,b
 29353  00E4E4  1FA4               	comf	??__display_itoa& (0+255),f,b
 29354  00E4E6  1FA5               	comf	(??__display_itoa+1)& (0+255),f,b
 29355  00E4E8  4BA4               	infsnz	??__display_itoa& (0+255),f,b
 29356  00E4EA  2BA5               	incf	(??__display_itoa+1)& (0+255),f,b
 29357  00E4EC  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29358  00E4EE  6FA6               	movwf	(??__display_itoa+2)& (0+255),b
 29359  00E4F0  6BA7               	clrf	(??__display_itoa+3)& (0+255),b
 29360  00E4F2  51A4               	movf	??__display_itoa& (0+255),w,b
 29361  00E4F4  27A6               	addwf	(??__display_itoa+2)& (0+255),f,b
 29362  00E4F6  51A5               	movf	(??__display_itoa+1)& (0+255),w,b
 29363  00E4F8  23A7               	addwfc	(??__display_itoa+3)& (0+255),f,b
 29364  00E4FA  0E01               	movlw	1
 29365  00E4FC  27A6               	addwf	(??__display_itoa+2)& (0+255),f,b
 29366  00E4FE  0E00               	movlw	0
 29367  00E500  23A7               	addwfc	(??__display_itoa+3)& (0+255),f,b
 29368  00E502  0EAA               	movlw	low __display_itoa@tmp
 29369  00E504  25A6               	addwf	(??__display_itoa+2)& (0+255),w,b
 29370  00E506  6ED9               	movwf	fsr2l,c
 29371  00E508  0E00               	movlw	high __display_itoa@tmp
 29372  00E50A  21A7               	addwfc	(??__display_itoa+3)& (0+255),w,b
 29373  00E50C  6EDA               	movwf	fsr2h,c
 29374  00E50E  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29375  00E510  6FA8               	movwf	(??__display_itoa+4)& (0+255),b
 29376  00E512  6BA9               	clrf	(??__display_itoa+5)& (0+255),b
 29377  00E514  0E01               	movlw	1
 29378  00E516  27A8               	addwf	(??__display_itoa+4)& (0+255),f,b
 29379  00E518  0E00               	movlw	0
 29380  00E51A  23A9               	addwfc	(??__display_itoa+5)& (0+255),f,b
 29381  00E51C  0EAA               	movlw	low __display_itoa@tmp
 29382  00E51E  25A8               	addwf	(??__display_itoa+4)& (0+255),w,b
 29383  00E520  6EE1               	movwf	fsr1l,c
 29384  00E522  0E00               	movlw	high __display_itoa@tmp
 29385  00E524  21A9               	addwfc	(??__display_itoa+5)& (0+255),w,b
 29386  00E526  6EE2               	movwf	fsr1h,c
 29387  00E528  CFDF FFE7          	movff	indf2,indf1
 29388                           
 29389                           ;display.c: 154: }
 29390  00E52C  D00F               	goto	l1353
 29391  00E52E                     l1352:
 29392                           
 29393                           ; BSR set to: 0
 29394                           ;display.c: 155: else;display.c: 156: {;display.c: 157: tmp[pos+1] = '0';
 29395                           
 29396                           ; BSR set to: 0
 29397  00E52E  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29398  00E530  6FA4               	movwf	??__display_itoa& (0+255),b
 29399  00E532  6BA5               	clrf	(??__display_itoa+1)& (0+255),b
 29400  00E534  0E01               	movlw	1
 29401  00E536  27A4               	addwf	??__display_itoa& (0+255),f,b
 29402  00E538  0E00               	movlw	0
 29403  00E53A  23A5               	addwfc	(??__display_itoa+1)& (0+255),f,b
 29404  00E53C  0EAA               	movlw	low __display_itoa@tmp
 29405  00E53E  25A4               	addwf	??__display_itoa& (0+255),w,b
 29406  00E540  6ED9               	movwf	fsr2l,c
 29407  00E542  0E00               	movlw	high __display_itoa@tmp
 29408  00E544  21A5               	addwfc	(??__display_itoa+1)& (0+255),w,b
 29409  00E546  6EDA               	movwf	fsr2h,c
 29410  00E548  0E30               	movlw	48
 29411  00E54A  6EDF               	movwf	indf2,c
 29412  00E54C                     l1353:
 29413                           
 29414                           ; BSR set to: 0
 29415                           
 29416                           ; BSR set to: 0
 29417  00E54C  07B6               	decf	__display_itoa@pos& (0+255),f,b
 29418  00E54E  D7BB               	goto	l16166
 29419  00E550                     u15300:
 29420                           
 29421                           ; BSR set to: 0
 29422                           ;display.c: 158: };display.c: 159: };display.c: 160: len = decimals + 2;
 29423                           
 29424                           ; BSR set to: 0
 29425  00E550  51A1               	movf	__display_itoa@decimals& (0+255),w,b
 29426  00E552  0F02               	addlw	2
 29427  00E554  D045               	goto	L40
 29428  00E556                     l1348:
 29429                           
 29430                           ; BSR set to: 0
 29431                           ;display.c: 163: else;display.c: 164: {;display.c: 165: missing = decimals + 1 - len;
 29432                           
 29433                           ; BSR set to: 0
 29434  00E556  51B4               	movf	__display_itoa@len& (0+255),w,b
 29435  00E558  0800               	sublw	0
 29436  00E55A  25A1               	addwf	__display_itoa@decimals& (0+255),w,b
 29437  00E55C  6FA4               	movwf	??__display_itoa& (0+255),b
 29438  00E55E  29A4               	incf	??__display_itoa& (0+255),w,b
 29439  00E560  6FB5               	movwf	__display_itoa@missing& (0+255),b
 29440                           
 29441                           ;display.c: 166: if(missing>0)
 29442  00E562  51B5               	movf	__display_itoa@missing& (0+255),w,b
 29443  00E564  0A80               	xorlw	128
 29444  00E566  0F7F               	addlw	-129
 29445  00E568  A0D8               	btfss	status,0,c
 29446  00E56A  D03B               	goto	l1355
 29447                           
 29448                           ; BSR set to: 0
 29449                           ;display.c: 167: {;display.c: 168: for(pos=decimals;pos!=0xFF;--pos)
 29450  00E56C  C0A1  F0B6         	movff	__display_itoa@decimals,__display_itoa@pos
 29451  00E570                     l16186:
 29452                           
 29453                           ; BSR set to: 0
 29454  00E570  29B6               	incf	__display_itoa@pos& (0+255),w,b
 29455  00E572  B4D8               	btfsc	status,2,c
 29456  00E574  D034               	goto	u15340
 29457                           
 29458                           ; BSR set to: 0
 29459                           ;display.c: 169: {;display.c: 170: if(pos>=missing)
 29460                           
 29461                           ; BSR set to: 0
 29462                           
 29463                           ; BSR set to: 0
 29464  00E576  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29465  00E578  BFB5               	btfsc	__display_itoa@missing& (0+255),7,b
 29466  00E57A  D004               	goto	u15330
 29467  00E57C  0AFF               	xorlw	255
 29468  00E57E  25B5               	addwf	__display_itoa@missing& (0+255),w,b
 29469  00E580  B0D8               	btfsc	status,0,c
 29470  00E582  D021               	goto	l1358
 29471  00E584                     u15330:
 29472                           
 29473                           ; BSR set to: 0
 29474                           ;display.c: 171: {;display.c: 172: tmp[pos] = tmp[pos-missing];
 29475  00E584  C0B5  F0A4         	movff	__display_itoa@missing,??__display_itoa
 29476  00E588  6BA5               	clrf	(??__display_itoa+1)& (0+255),b
 29477  00E58A  BFA4               	btfsc	??__display_itoa& (0+255),7,b
 29478  00E58C  07A5               	decf	(??__display_itoa+1)& (0+255),f,b
 29479  00E58E  1FA4               	comf	??__display_itoa& (0+255),f,b
 29480  00E590  1FA5               	comf	(??__display_itoa+1)& (0+255),f,b
 29481  00E592  4BA4               	infsnz	??__display_itoa& (0+255),f,b
 29482  00E594  2BA5               	incf	(??__display_itoa+1)& (0+255),f,b
 29483  00E596  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29484  00E598  6FA6               	movwf	(??__display_itoa+2)& (0+255),b
 29485  00E59A  6BA7               	clrf	(??__display_itoa+3)& (0+255),b
 29486  00E59C  51A4               	movf	??__display_itoa& (0+255),w,b
 29487  00E59E  27A6               	addwf	(??__display_itoa+2)& (0+255),f,b
 29488  00E5A0  51A5               	movf	(??__display_itoa+1)& (0+255),w,b
 29489  00E5A2  23A7               	addwfc	(??__display_itoa+3)& (0+255),f,b
 29490  00E5A4  0EAA               	movlw	low __display_itoa@tmp
 29491  00E5A6  25A6               	addwf	(??__display_itoa+2)& (0+255),w,b
 29492  00E5A8  6ED9               	movwf	fsr2l,c
 29493  00E5AA  0E00               	movlw	high __display_itoa@tmp
 29494  00E5AC  21A7               	addwfc	(??__display_itoa+3)& (0+255),w,b
 29495  00E5AE  6EDA               	movwf	fsr2h,c
 29496  00E5B0  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29497  00E5B2  0D01               	mullw	1
 29498  00E5B4  0EAA               	movlw	low __display_itoa@tmp
 29499  00E5B6  24F3               	addwf	prodl,w,c
 29500  00E5B8  6EE1               	movwf	fsr1l,c
 29501  00E5BA  0E00               	movlw	high __display_itoa@tmp
 29502  00E5BC  20F4               	addwfc	prodh,w,c
 29503  00E5BE  6EE2               	movwf	fsr1h,c
 29504  00E5C0  CFDF FFE7          	movff	indf2,indf1
 29505                           
 29506                           ;display.c: 173: }
 29507  00E5C4  D00A               	goto	l1359
 29508  00E5C6                     l1358:
 29509                           
 29510                           ; BSR set to: 0
 29511                           ;display.c: 174: else;display.c: 175: {;display.c: 176: tmp[pos] = '0';
 29512                           
 29513                           ; BSR set to: 0
 29514  00E5C6  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29515  00E5C8  0D01               	mullw	1
 29516  00E5CA  0EAA               	movlw	low __display_itoa@tmp
 29517  00E5CC  24F3               	addwf	prodl,w,c
 29518  00E5CE  6ED9               	movwf	fsr2l,c
 29519  00E5D0  0E00               	movlw	high __display_itoa@tmp
 29520  00E5D2  20F4               	addwfc	prodh,w,c
 29521  00E5D4  6EDA               	movwf	fsr2h,c
 29522  00E5D6  0E30               	movlw	48
 29523  00E5D8  6EDF               	movwf	indf2,c
 29524  00E5DA                     l1359:
 29525                           
 29526                           ; BSR set to: 0
 29527                           
 29528                           ; BSR set to: 0
 29529  00E5DA  07B6               	decf	__display_itoa@pos& (0+255),f,b
 29530  00E5DC  D7C9               	goto	l16186
 29531  00E5DE                     u15340:
 29532                           
 29533                           ; BSR set to: 0
 29534                           ;display.c: 177: };display.c: 178: };display.c: 179: len = decimals + 1;
 29535                           
 29536                           ; BSR set to: 0
 29537  00E5DE  29A1               	incf	__display_itoa@decimals& (0+255),w,b
 29538  00E5E0                     L40:
 29539  00E5E0  6FB4               	movwf	__display_itoa@len& (0+255),b
 29540  00E5E2                     l1355:
 29541                           
 29542                           ; BSR set to: 0
 29543                           ;display.c: 180: };display.c: 181: };display.c: 183: decimals = len - decimals - 1;
 29544                           
 29545                           ; BSR set to: 0
 29546  00E5E2  51A1               	movf	__display_itoa@decimals& (0+255),w,b
 29547  00E5E4  0800               	sublw	0
 29548  00E5E6  25B4               	addwf	__display_itoa@len& (0+255),w,b
 29549  00E5E8  6FA4               	movwf	??__display_itoa& (0+255),b
 29550  00E5EA  05A4               	decf	??__display_itoa& (0+255),w,b
 29551  00E5EC  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 29552                           
 29553                           ; BSR set to: 0
 29554                           ;display.c: 185: for(pos=0;pos<len;++pos)
 29555  00E5EE  0E00               	movlw	0
 29556  00E5F0  6FB6               	movwf	__display_itoa@pos& (0+255),b
 29557  00E5F2  D023               	goto	l1360
 29558  00E5F4                     
 29559                           ; BSR set to: 0
 29560                           ;display.c: 186: {;display.c: 187: text[pos] = tmp[pos];
 29561                           
 29562                           ; BSR set to: 0
 29563  00E5F4  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29564  00E5F6  0D01               	mullw	1
 29565  00E5F8  0EAA               	movlw	low __display_itoa@tmp
 29566  00E5FA  24F3               	addwf	prodl,w,c
 29567  00E5FC  6ED9               	movwf	fsr2l,c
 29568  00E5FE  0E00               	movlw	high __display_itoa@tmp
 29569  00E600  20F4               	addwfc	prodh,w,c
 29570  00E602  6EDA               	movwf	fsr2h,c
 29571  00E604  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29572  00E606  0D01               	mullw	1
 29573  00E608  50F3               	movf	prodl,w,c
 29574  00E60A  25A2               	addwf	__display_itoa@text& (0+255),w,b
 29575  00E60C  6EE1               	movwf	fsr1l,c
 29576  00E60E  50F4               	movf	prodh,w,c
 29577  00E610  21A3               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 29578  00E612  6EE2               	movwf	fsr1h,c
 29579  00E614  CFDF FFE7          	movff	indf2,indf1
 29580                           
 29581                           ; BSR set to: 0
 29582                           ;display.c: 188: if(pos==decimals)
 29583  00E618  51A1               	movf	__display_itoa@decimals& (0+255),w,b
 29584  00E61A  19B6               	xorwf	__display_itoa@pos& (0+255),w,b
 29585  00E61C  A4D8               	btfss	status,2,c
 29586  00E61E  D00C               	goto	l1362
 29587                           
 29588                           ; BSR set to: 0
 29589                           ;display.c: 189: {;display.c: 191: ++pos;
 29590  00E620  2BB6               	incf	__display_itoa@pos& (0+255),f,b
 29591                           
 29592                           ; BSR set to: 0
 29593                           ;display.c: 192: text[pos] = '.';
 29594  00E622  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29595  00E624  0D01               	mullw	1
 29596  00E626  50F3               	movf	prodl,w,c
 29597  00E628  25A2               	addwf	__display_itoa@text& (0+255),w,b
 29598  00E62A  6ED9               	movwf	fsr2l,c
 29599  00E62C  50F4               	movf	prodh,w,c
 29600  00E62E  21A3               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 29601  00E630  6EDA               	movwf	fsr2h,c
 29602  00E632  0E2E               	movlw	46
 29603  00E634  6EDF               	movwf	indf2,c
 29604                           
 29605                           ;display.c: 193: break;
 29606  00E636  D01E               	goto	l1364
 29607  00E638                     l1362:
 29608                           
 29609                           ; BSR set to: 0
 29610                           
 29611                           ; BSR set to: 0
 29612  00E638  2BB6               	incf	__display_itoa@pos& (0+255),f,b
 29613  00E63A                     l1360:
 29614                           
 29615                           ; BSR set to: 0
 29616                           
 29617                           ; BSR set to: 0
 29618  00E63A  51B4               	movf	__display_itoa@len& (0+255),w,b
 29619  00E63C  5DB6               	subwf	__display_itoa@pos& (0+255),w,b
 29620  00E63E  B0D8               	btfsc	status,0,c
 29621  00E640  D019               	goto	l1364
 29622  00E642  D7D8               	goto	l1361
 29623  00E644                     
 29624                           ; BSR set to: 0
 29625                           ;display.c: 197: {;display.c: 198: text[pos+1] = tmp[pos];
 29626                           
 29627                           ; BSR set to: 0
 29628  00E644  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29629  00E646  0D01               	mullw	1
 29630  00E648  0EAA               	movlw	low __display_itoa@tmp
 29631  00E64A  24F3               	addwf	prodl,w,c
 29632  00E64C  6ED9               	movwf	fsr2l,c
 29633  00E64E  0E00               	movlw	high __display_itoa@tmp
 29634  00E650  20F4               	addwfc	prodh,w,c
 29635  00E652  6EDA               	movwf	fsr2h,c
 29636  00E654  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29637  00E656  6FA4               	movwf	??__display_itoa& (0+255),b
 29638  00E658  6BA5               	clrf	(??__display_itoa+1)& (0+255),b
 29639  00E65A  0E01               	movlw	1
 29640  00E65C  27A4               	addwf	??__display_itoa& (0+255),f,b
 29641  00E65E  0E00               	movlw	0
 29642  00E660  23A5               	addwfc	(??__display_itoa+1)& (0+255),f,b
 29643  00E662  51A4               	movf	??__display_itoa& (0+255),w,b
 29644  00E664  25A2               	addwf	__display_itoa@text& (0+255),w,b
 29645  00E666  6EE1               	movwf	fsr1l,c
 29646  00E668  51A5               	movf	(??__display_itoa+1)& (0+255),w,b
 29647  00E66A  21A3               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 29648  00E66C  6EE2               	movwf	fsr1h,c
 29649  00E66E  CFDF FFE7          	movff	indf2,indf1
 29650                           
 29651                           ; BSR set to: 0
 29652  00E672  2BB6               	incf	__display_itoa@pos& (0+255),f,b
 29653  00E674                     l1364:
 29654                           
 29655                           ; BSR set to: 0
 29656                           
 29657                           ; BSR set to: 0
 29658  00E674  51B4               	movf	__display_itoa@len& (0+255),w,b
 29659  00E676  5DB6               	subwf	__display_itoa@pos& (0+255),w,b
 29660  00E678  A0D8               	btfss	status,0,c
 29661  00E67A  D7E4               	goto	l1365
 29662                           
 29663                           ; BSR set to: 0
 29664                           ;display.c: 199: };display.c: 200: text[pos+1] = 0;
 29665                           
 29666                           ; BSR set to: 0
 29667  00E67C  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29668  00E67E  6FA4               	movwf	??__display_itoa& (0+255),b
 29669  00E680  6BA5               	clrf	(??__display_itoa+1)& (0+255),b
 29670  00E682  0E01               	movlw	1
 29671  00E684  27A4               	addwf	??__display_itoa& (0+255),f,b
 29672  00E686  0E00               	movlw	0
 29673  00E688  23A5               	addwfc	(??__display_itoa+1)& (0+255),f,b
 29674  00E68A  51A4               	movf	??__display_itoa& (0+255),w,b
 29675  00E68C  25A2               	addwf	__display_itoa@text& (0+255),w,b
 29676  00E68E  6ED9               	movwf	fsr2l,c
 29677  00E690  51A5               	movf	(??__display_itoa+1)& (0+255),w,b
 29678  00E692  21A3               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 29679  00E694  6EDA               	movwf	fsr2h,c
 29680  00E696  0E00               	movlw	0
 29681  00E698  6EDF               	movwf	indf2,c
 29682                           
 29683                           ; BSR set to: 0
 29684  00E69A  0012               	return		;funcret
 29685  00E69C                     __end_of__display_itoa:
 29686                           	opt stack 0
 29687                           tblptru	equ	0xFF8
 29688                           tblptrh	equ	0xFF7
 29689                           tblptrl	equ	0xFF6
 29690                           tablat	equ	0xFF5
 29691                           prodh	equ	0xFF4
 29692                           prodl	equ	0xFF3
 29693                           intcon	equ	0xFF2
 29694                           postinc0	equ	0xFEE
 29695                           wreg	equ	0xFE8
 29696                           indf1	equ	0xFE7
 29697                           postinc1	equ	0xFE6
 29698                           postdec1	equ	0xFE5
 29699                           plusw1	equ	0xFE3
 29700                           fsr1h	equ	0xFE2
 29701                           fsr1l	equ	0xFE1
 29702                           indf2	equ	0xFDF
 29703                           postinc2	equ	0xFDE
 29704                           postdec2	equ	0xFDD
 29705                           plusw2	equ	0xFDB
 29706                           fsr2h	equ	0xFDA
 29707                           fsr2l	equ	0xFD9
 29708                           status	equ	0xFD8
 29709                           
 29710 ;; *************** function _strlen *****************
 29711 ;; Defined at:
 29712 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strlen.c"
 29713 ;; Parameters:    Size  Location     Type
 29714 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 29715 ;;		 -> display_prepare@temp(10), _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 29716 ;; Auto vars:     Size  Location     Type
 29717 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 29718 ;;		 -> display_prepare@temp(10), _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 29719 ;; Return value:  Size  Location     Type
 29720 ;;                  2    0[BANK0 ] unsigned int 
 29721 ;; Registers used:
 29722 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29723 ;; Tracked objects:
 29724 ;;		On entry : 0/0
 29725 ;;		On exit  : 0/0
 29726 ;;		Unchanged: 0/0
 29727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29728 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29729 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29730 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29731 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29732 ;;Total ram usage:        6 bytes
 29733 ;; Hardware stack levels used:    1
 29734 ;; Hardware stack levels required when called:   10
 29735 ;; This function calls:
 29736 ;;		Nothing
 29737 ;; This function is called by:
 29738 ;;		__display_padded_itoa
 29739 ;;		__display_itoa
 29740 ;;		__display_itoa_long
 29741 ;;		_display_prepare
 29742 ;; This function uses a non-reentrant model
 29743 ;;
 29744                           
 29745                           	psect	text114
 29746  015768                     __ptext114:
 29747                           	opt stack 0
 29748  015768                     _strlen:
 29749                           	opt stack 19
 29750                           
 29751                           ; BSR set to: 0
 29752                           ;incstack = 0
 29753  015768  C060  F064         	movff	strlen@s,strlen@cp
 29754  01576C  C061  F065         	movff	strlen@s+1,strlen@cp+1
 29755  015770  D003               	goto	l3838
 29756  015772  0100               	movlb	0	; () banked
 29757  015774  4B64               	infsnz	strlen@cp& (0+255),f,b
 29758  015776  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 29759  015778                     l3838:
 29760                           
 29761                           ; BSR set to: 0
 29762  015778  C064  FFD9         	movff	strlen@cp,fsr2l
 29763  01577C  C065  FFDA         	movff	strlen@cp+1,fsr2h
 29764  015780  50DF               	movf	indf2,w,c
 29765  015782  A4D8               	btfss	status,2,c
 29766  015784  D7F6               	goto	l3839
 29767  015786  C060  F062         	movff	strlen@s,??_strlen
 29768  01578A  C061  F063         	movff	strlen@s+1,??_strlen+1
 29769  01578E  0100               	movlb	0	; () banked
 29770  015790  1F62               	comf	??_strlen& (0+255),f,b
 29771  015792  1F63               	comf	(??_strlen+1)& (0+255),f,b
 29772  015794  4B62               	infsnz	??_strlen& (0+255),f,b
 29773  015796  2B63               	incf	(??_strlen+1)& (0+255),f,b
 29774  015798  5164               	movf	strlen@cp& (0+255),w,b
 29775  01579A  2562               	addwf	??_strlen& (0+255),w,b
 29776  01579C  6F60               	movwf	?_strlen& (0+255),b
 29777  01579E  5165               	movf	(strlen@cp+1)& (0+255),w,b
 29778  0157A0  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 29779  0157A2  6F61               	movwf	(?_strlen+1)& (0+255),b
 29780  0157A4  0012               	return	
 29781  0157A6                     __end_of_strlen:
 29782                           	opt stack 0
 29783                           tblptru	equ	0xFF8
 29784                           tblptrh	equ	0xFF7
 29785                           tblptrl	equ	0xFF6
 29786                           tablat	equ	0xFF5
 29787                           prodh	equ	0xFF4
 29788                           prodl	equ	0xFF3
 29789                           intcon	equ	0xFF2
 29790                           postinc0	equ	0xFEE
 29791                           wreg	equ	0xFE8
 29792                           indf1	equ	0xFE7
 29793                           postinc1	equ	0xFE6
 29794                           postdec1	equ	0xFE5
 29795                           plusw1	equ	0xFE3
 29796                           fsr1h	equ	0xFE2
 29797                           fsr1l	equ	0xFE1
 29798                           indf2	equ	0xFDF
 29799                           postinc2	equ	0xFDE
 29800                           postdec2	equ	0xFDD
 29801                           plusw2	equ	0xFDB
 29802                           fsr2h	equ	0xFDA
 29803                           fsr2l	equ	0xFD9
 29804                           status	equ	0xFD8
 29805                           
 29806 ;; *************** function _itoa *****************
 29807 ;; Defined at:
 29808 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 29809 ;; Parameters:    Size  Location     Type
 29810 ;;  buf             2   16[BANK0 ] PTR unsigned char 
 29811 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 29812 ;;  val             2   18[BANK0 ] int 
 29813 ;;  base            2   20[BANK0 ] int 
 29814 ;; Auto vars:     Size  Location     Type
 29815 ;;  cp              2   22[BANK0 ] PTR unsigned char 
 29816 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 29817 ;; Return value:  Size  Location     Type
 29818 ;;                  2   16[BANK0 ] PTR unsigned char 
 29819 ;; Registers used:
 29820 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29821 ;; Tracked objects:
 29822 ;;		On entry : 0/0
 29823 ;;		On exit  : 0/0
 29824 ;;		Unchanged: 0/0
 29825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29826 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29827 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29829 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29830 ;;Total ram usage:        8 bytes
 29831 ;; Hardware stack levels used:    1
 29832 ;; Hardware stack levels required when called:   12
 29833 ;; This function calls:
 29834 ;;		_utoa
 29835 ;; This function is called by:
 29836 ;;		__display_padded_itoa
 29837 ;;		__display_itoa
 29838 ;;		__display_itoa_u16
 29839 ;; This function uses a non-reentrant model
 29840 ;;
 29841                           
 29842                           	psect	text115
 29843  01561C                     __ptext115:
 29844                           	opt stack 0
 29845  01561C                     _itoa:
 29846                           	opt stack 14
 29847                           
 29848                           ; BSR set to: 0
 29849                           ;incstack = 0
 29850  01561C  C070  F076         	movff	itoa@buf,itoa@cp
 29851  015620  C071  F077         	movff	itoa@buf+1,itoa@cp+1
 29852  015624  0100               	movlb	0	; () banked
 29853  015626  AF73               	btfss	(itoa@val+1)& (0+255),7,b
 29854  015628  D00C               	goto	l3790
 29855                           
 29856                           ; BSR set to: 0
 29857  01562A  C070  FFD9         	movff	itoa@buf,fsr2l
 29858  01562E  C071  FFDA         	movff	itoa@buf+1,fsr2h
 29859  015632  0E2D               	movlw	45
 29860  015634  6EDF               	movwf	indf2,c
 29861                           
 29862                           ; BSR set to: 0
 29863  015636  4B70               	infsnz	itoa@buf& (0+255),f,b
 29864  015638  2B71               	incf	(itoa@buf+1)& (0+255),f,b
 29865                           
 29866                           ; BSR set to: 0
 29867  01563A  6D72               	negf	itoa@val& (0+255),b
 29868  01563C  1F73               	comf	(itoa@val+1)& (0+255),f,b
 29869  01563E  B0D8               	btfsc	status,0,c
 29870  015640  2B73               	incf	(itoa@val+1)& (0+255),f,b
 29871  015642                     l3790:
 29872                           
 29873                           ; BSR set to: 0
 29874                           
 29875                           ; BSR set to: 0
 29876  015642  C070  F067         	movff	itoa@buf,utoa@buf
 29877  015646  C071  F068         	movff	itoa@buf+1,utoa@buf+1
 29878  01564A  C072  F069         	movff	itoa@val,utoa@val
 29879  01564E  C073  F06A         	movff	itoa@val+1,utoa@val+1
 29880  015652  C074  F06B         	movff	itoa@base,utoa@base
 29881  015656  C075  F06C         	movff	itoa@base+1,utoa@base+1
 29882  01565A  EC0E  F09A         	call	_utoa	;wreg free
 29883  01565E  0012               	return	
 29884  015660                     __end_of_itoa:
 29885                           	opt stack 0
 29886                           tblptru	equ	0xFF8
 29887                           tblptrh	equ	0xFF7
 29888                           tblptrl	equ	0xFF6
 29889                           tablat	equ	0xFF5
 29890                           prodh	equ	0xFF4
 29891                           prodl	equ	0xFF3
 29892                           intcon	equ	0xFF2
 29893                           postinc0	equ	0xFEE
 29894                           wreg	equ	0xFE8
 29895                           indf1	equ	0xFE7
 29896                           postinc1	equ	0xFE6
 29897                           postdec1	equ	0xFE5
 29898                           plusw1	equ	0xFE3
 29899                           fsr1h	equ	0xFE2
 29900                           fsr1l	equ	0xFE1
 29901                           indf2	equ	0xFDF
 29902                           postinc2	equ	0xFDE
 29903                           postdec2	equ	0xFDD
 29904                           plusw2	equ	0xFDB
 29905                           fsr2h	equ	0xFDA
 29906                           fsr2l	equ	0xFD9
 29907                           status	equ	0xFD8
 29908                           
 29909 ;; *************** function _utoa *****************
 29910 ;; Defined at:
 29911 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 29912 ;; Parameters:    Size  Location     Type
 29913 ;;  buf             2    7[BANK0 ] PTR unsigned char 
 29914 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 29915 ;;  val             2    9[BANK0 ] unsigned int 
 29916 ;;  base            2   11[BANK0 ] int 
 29917 ;; Auto vars:     Size  Location     Type
 29918 ;;  v               2   13[BANK0 ] unsigned int 
 29919 ;;  c               1   15[BANK0 ] unsigned char 
 29920 ;; Return value:  Size  Location     Type
 29921 ;;                  2    7[BANK0 ] PTR unsigned char 
 29922 ;; Registers used:
 29923 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29924 ;; Tracked objects:
 29925 ;;		On entry : 0/0
 29926 ;;		On exit  : 0/0
 29927 ;;		Unchanged: 0/0
 29928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29929 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29930 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29932 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29933 ;;Total ram usage:        9 bytes
 29934 ;; Hardware stack levels used:    1
 29935 ;; Hardware stack levels required when called:   11
 29936 ;; This function calls:
 29937 ;;		___lwdiv
 29938 ;;		___lwmod
 29939 ;; This function is called by:
 29940 ;;		_itoa
 29941 ;; This function uses a non-reentrant model
 29942 ;;
 29943                           
 29944                           	psect	text116
 29945  01341C                     __ptext116:
 29946                           	opt stack 0
 29947  01341C                     _utoa:
 29948                           	opt stack 14
 29949                           
 29950                           ;incstack = 0
 29951  01341C  C069  F06D         	movff	utoa@val,utoa@v
 29952  013420  C06A  F06E         	movff	utoa@val+1,utoa@v+1
 29953  013424  C06D  F060         	movff	utoa@v,___lwdiv@dividend
 29954  013428  C06E  F061         	movff	utoa@v+1,___lwdiv@dividend+1
 29955  01342C  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 29956  013430  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 29957  013434  ECA0  F0A8         	call	___lwdiv	;wreg free
 29958  013438  C060  F06D         	movff	?___lwdiv,utoa@v
 29959  01343C  C061  F06E         	movff	?___lwdiv+1,utoa@v+1
 29960  013440  0100               	movlb	0	; () banked
 29961  013442  4B67               	infsnz	utoa@buf& (0+255),f,b
 29962  013444  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 29963                           
 29964                           ; BSR set to: 0
 29965  013446  516D               	movf	utoa@v& (0+255),w,b
 29966  013448  116E               	iorwf	(utoa@v+1)& (0+255),w,b
 29967  01344A  A4D8               	btfss	status,2,c
 29968  01344C  D7EB               	goto	l3794
 29969                           
 29970                           ; BSR set to: 0
 29971                           
 29972                           ; BSR set to: 0
 29973  01344E  C067  FFD9         	movff	utoa@buf,fsr2l
 29974  013452  C068  FFDA         	movff	utoa@buf+1,fsr2h
 29975  013456  0E00               	movlw	0
 29976  013458  6EDF               	movwf	indf2,c
 29977                           
 29978                           ; BSR set to: 0
 29979  01345A  0767               	decf	utoa@buf& (0+255),f,b
 29980  01345C  A0D8               	btfss	status,0,c
 29981  01345E  0768               	decf	(utoa@buf+1)& (0+255),f,b
 29982  013460                     
 29983                           ; BSR set to: 0
 29984                           
 29985                           ; BSR set to: 0
 29986  013460  C069  F060         	movff	utoa@val,___lwmod@dividend
 29987  013464  C06A  F061         	movff	utoa@val+1,___lwmod@dividend+1
 29988  013468  C06B  F062         	movff	utoa@base,___lwmod@divisor
 29989  01346C  C06C  F063         	movff	utoa@base+1,___lwmod@divisor+1
 29990  013470  EC30  F0AB         	call	___lwmod	;wreg free
 29991  013474  0100               	movlb	0	; () banked
 29992  013476  5160               	movf	?___lwmod& (0+255),w,b
 29993  013478  6F6F               	movwf	utoa@c& (0+255),b
 29994                           
 29995                           ; BSR set to: 0
 29996  01347A  C069  F060         	movff	utoa@val,___lwdiv@dividend
 29997  01347E  C06A  F061         	movff	utoa@val+1,___lwdiv@dividend+1
 29998  013482  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 29999  013486  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 30000  01348A  ECA0  F0A8         	call	___lwdiv	;wreg free
 30001  01348E  C060  F069         	movff	?___lwdiv,utoa@val
 30002  013492  C061  F06A         	movff	?___lwdiv+1,utoa@val+1
 30003  013496  0E09               	movlw	9
 30004  013498  0100               	movlb	0	; () banked
 30005  01349A  656F               	cpfsgt	utoa@c& (0+255),b
 30006  01349C  D002               	goto	l3797
 30007                           
 30008                           ; BSR set to: 0
 30009  01349E  0E07               	movlw	7
 30010  0134A0  276F               	addwf	utoa@c& (0+255),f,b
 30011  0134A2                     l3797:
 30012                           
 30013                           ; BSR set to: 0
 30014  0134A2  0E30               	movlw	48
 30015  0134A4  276F               	addwf	utoa@c& (0+255),f,b
 30016                           
 30017                           ; BSR set to: 0
 30018  0134A6  C067  FFD9         	movff	utoa@buf,fsr2l
 30019  0134AA  C068  FFDA         	movff	utoa@buf+1,fsr2h
 30020  0134AE  C06F  FFDF         	movff	utoa@c,indf2
 30021                           
 30022                           ; BSR set to: 0
 30023  0134B2  0767               	decf	utoa@buf& (0+255),f,b
 30024  0134B4  A0D8               	btfss	status,0,c
 30025  0134B6  0768               	decf	(utoa@buf+1)& (0+255),f,b
 30026                           
 30027                           ; BSR set to: 0
 30028  0134B8  5169               	movf	utoa@val& (0+255),w,b
 30029  0134BA  116A               	iorwf	(utoa@val+1)& (0+255),w,b
 30030  0134BC  A4D8               	btfss	status,2,c
 30031  0134BE  D7D0               	goto	l3796
 30032                           
 30033                           ; BSR set to: 0
 30034                           ;	Return value of _utoa is never used
 30035                           
 30036                           ; BSR set to: 0
 30037  0134C0  4B67               	infsnz	utoa@buf& (0+255),f,b
 30038  0134C2  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 30039  0134C4  0012               	return	
 30040  0134C6                     __end_of_utoa:
 30041                           	opt stack 0
 30042                           tblptru	equ	0xFF8
 30043                           tblptrh	equ	0xFF7
 30044                           tblptrl	equ	0xFF6
 30045                           tablat	equ	0xFF5
 30046                           prodh	equ	0xFF4
 30047                           prodl	equ	0xFF3
 30048                           intcon	equ	0xFF2
 30049                           postinc0	equ	0xFEE
 30050                           wreg	equ	0xFE8
 30051                           indf1	equ	0xFE7
 30052                           postinc1	equ	0xFE6
 30053                           postdec1	equ	0xFE5
 30054                           plusw1	equ	0xFE3
 30055                           fsr1h	equ	0xFE2
 30056                           fsr1l	equ	0xFE1
 30057                           indf2	equ	0xFDF
 30058                           postinc2	equ	0xFDE
 30059                           postdec2	equ	0xFDD
 30060                           plusw2	equ	0xFDB
 30061                           fsr2h	equ	0xFDA
 30062                           fsr2l	equ	0xFD9
 30063                           status	equ	0xFD8
 30064                           
 30065 ;; *************** function ___lwmod *****************
 30066 ;; Defined at:
 30067 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 30068 ;; Parameters:    Size  Location     Type
 30069 ;;  dividend        2    0[BANK0 ] unsigned int 
 30070 ;;  divisor         2    2[BANK0 ] unsigned int 
 30071 ;; Auto vars:     Size  Location     Type
 30072 ;;  counter         1    4[BANK0 ] unsigned char 
 30073 ;; Return value:  Size  Location     Type
 30074 ;;                  2    0[BANK0 ] unsigned int 
 30075 ;; Registers used:
 30076 ;;		wreg, status,2, status,0
 30077 ;; Tracked objects:
 30078 ;;		On entry : 0/0
 30079 ;;		On exit  : 0/0
 30080 ;;		Unchanged: 0/0
 30081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30082 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30083 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30085 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30086 ;;Total ram usage:        5 bytes
 30087 ;; Hardware stack levels used:    1
 30088 ;; Hardware stack levels required when called:   10
 30089 ;; This function calls:
 30090 ;;		Nothing
 30091 ;; This function is called by:
 30092 ;;		_utoa
 30093 ;; This function uses a non-reentrant model
 30094 ;;
 30095                           
 30096                           	psect	text117
 30097  015660                     __ptext117:
 30098                           	opt stack 0
 30099  015660                     ___lwmod:
 30100                           	opt stack 14
 30101                           
 30102                           ; BSR set to: 0
 30103                           ;incstack = 0
 30104  015660  0100               	movlb	0	; () banked
 30105  015662  5162               	movf	___lwmod@divisor& (0+255),w,b
 30106  015664  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 30107  015666  B4D8               	btfsc	status,2,c
 30108  015668  D018               	goto	l3587
 30109                           
 30110                           ; BSR set to: 0
 30111  01566A  0E01               	movlw	1
 30112  01566C  6F64               	movwf	___lwmod@counter& (0+255),b
 30113  01566E  D004               	goto	l3582
 30114  015670                     
 30115                           ; BSR set to: 0
 30116                           
 30117                           ; BSR set to: 0
 30118  015670  90D8               	bcf	status,0,c
 30119  015672  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 30120  015674  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 30121  015676  2B64               	incf	___lwmod@counter& (0+255),f,b
 30122  015678                     l3582:
 30123                           
 30124                           ; BSR set to: 0
 30125                           
 30126                           ; BSR set to: 0
 30127  015678  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 30128  01567A  D7FA               	goto	l3583
 30129  01567C                     u11040:
 30130                           
 30131                           ; BSR set to: 0
 30132                           
 30133                           ; BSR set to: 0
 30134                           
 30135                           ; BSR set to: 0
 30136  01567C  5162               	movf	___lwmod@divisor& (0+255),w,b
 30137  01567E  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 30138  015680  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 30139  015682  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 30140  015684  A0D8               	btfss	status,0,c
 30141  015686  D004               	goto	l3586
 30142                           
 30143                           ; BSR set to: 0
 30144  015688  5162               	movf	___lwmod@divisor& (0+255),w,b
 30145  01568A  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 30146  01568C  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 30147  01568E  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 30148  015690                     l3586:
 30149                           
 30150                           ; BSR set to: 0
 30151                           
 30152                           ; BSR set to: 0
 30153  015690  90D8               	bcf	status,0,c
 30154  015692  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 30155  015694  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 30156                           
 30157                           ; BSR set to: 0
 30158  015696  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 30159  015698  D7F1               	goto	u11040
 30160  01569A                     l3587:
 30161                           
 30162                           ; BSR set to: 0
 30163                           
 30164                           ; BSR set to: 0
 30165  01569A  C060  F060         	movff	___lwmod@dividend,?___lwmod
 30166  01569E  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 30167                           
 30168                           ; BSR set to: 0
 30169  0156A2  0012               	return		;funcret
 30170  0156A4                     __end_of___lwmod:
 30171                           	opt stack 0
 30172                           tblptru	equ	0xFF8
 30173                           tblptrh	equ	0xFF7
 30174                           tblptrl	equ	0xFF6
 30175                           tablat	equ	0xFF5
 30176                           prodh	equ	0xFF4
 30177                           prodl	equ	0xFF3
 30178                           intcon	equ	0xFF2
 30179                           postinc0	equ	0xFEE
 30180                           wreg	equ	0xFE8
 30181                           indf1	equ	0xFE7
 30182                           postinc1	equ	0xFE6
 30183                           postdec1	equ	0xFE5
 30184                           plusw1	equ	0xFE3
 30185                           fsr1h	equ	0xFE2
 30186                           fsr1l	equ	0xFE1
 30187                           indf2	equ	0xFDF
 30188                           postinc2	equ	0xFDE
 30189                           postdec2	equ	0xFDD
 30190                           plusw2	equ	0xFDB
 30191                           fsr2h	equ	0xFDA
 30192                           fsr2l	equ	0xFD9
 30193                           status	equ	0xFD8
 30194                           
 30195 ;; *************** function ___lwdiv *****************
 30196 ;; Defined at:
 30197 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 30198 ;; Parameters:    Size  Location     Type
 30199 ;;  dividend        2    0[BANK0 ] unsigned int 
 30200 ;;  divisor         2    2[BANK0 ] unsigned int 
 30201 ;; Auto vars:     Size  Location     Type
 30202 ;;  quotient        2    4[BANK0 ] unsigned int 
 30203 ;;  counter         1    6[BANK0 ] unsigned char 
 30204 ;; Return value:  Size  Location     Type
 30205 ;;                  2    0[BANK0 ] unsigned int 
 30206 ;; Registers used:
 30207 ;;		wreg, status,2, status,0
 30208 ;; Tracked objects:
 30209 ;;		On entry : 0/0
 30210 ;;		On exit  : 0/0
 30211 ;;		Unchanged: 0/0
 30212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30213 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30214 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30216 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30217 ;;Total ram usage:        7 bytes
 30218 ;; Hardware stack levels used:    1
 30219 ;; Hardware stack levels required when called:   10
 30220 ;; This function calls:
 30221 ;;		Nothing
 30222 ;; This function is called by:
 30223 ;;		_utoa
 30224 ;; This function uses a non-reentrant model
 30225 ;;
 30226                           
 30227                           	psect	text118
 30228  015140                     __ptext118:
 30229                           	opt stack 0
 30230  015140                     ___lwdiv:
 30231                           	opt stack 14
 30232                           
 30233                           ; BSR set to: 0
 30234                           ;incstack = 0
 30235  015140  0E00               	movlw	0
 30236  015142  0100               	movlb	0	; () banked
 30237  015144  6F65               	movwf	(___lwdiv@quotient+1)& (0+255),b
 30238  015146  0E00               	movlw	0
 30239  015148  6F64               	movwf	___lwdiv@quotient& (0+255),b
 30240                           
 30241                           ; BSR set to: 0
 30242  01514A  5162               	movf	___lwdiv@divisor& (0+255),w,b
 30243  01514C  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 30244  01514E  B4D8               	btfsc	status,2,c
 30245  015150  D01C               	goto	l3577
 30246                           
 30247                           ; BSR set to: 0
 30248  015152  0E01               	movlw	1
 30249  015154  6F66               	movwf	___lwdiv@counter& (0+255),b
 30250  015156  D004               	goto	l3572
 30251  015158                     
 30252                           ; BSR set to: 0
 30253                           
 30254                           ; BSR set to: 0
 30255  015158  90D8               	bcf	status,0,c
 30256  01515A  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 30257  01515C  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 30258  01515E  2B66               	incf	___lwdiv@counter& (0+255),f,b
 30259  015160                     l3572:
 30260                           
 30261                           ; BSR set to: 0
 30262                           
 30263                           ; BSR set to: 0
 30264  015160  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 30265  015162  D7FA               	goto	l3573
 30266  015164                     u11010:
 30267                           
 30268                           ; BSR set to: 0
 30269                           
 30270                           ; BSR set to: 0
 30271                           
 30272                           ; BSR set to: 0
 30273  015164  90D8               	bcf	status,0,c
 30274  015166  3764               	rlcf	___lwdiv@quotient& (0+255),f,b
 30275  015168  3765               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 30276                           
 30277                           ; BSR set to: 0
 30278  01516A  5162               	movf	___lwdiv@divisor& (0+255),w,b
 30279  01516C  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 30280  01516E  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 30281  015170  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 30282  015172  A0D8               	btfss	status,0,c
 30283  015174  D005               	goto	l3576
 30284                           
 30285                           ; BSR set to: 0
 30286  015176  5162               	movf	___lwdiv@divisor& (0+255),w,b
 30287  015178  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 30288  01517A  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 30289  01517C  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 30290                           
 30291                           ; BSR set to: 0
 30292  01517E  8164               	bsf	___lwdiv@quotient& (0+255),0,b
 30293  015180                     l3576:
 30294                           
 30295                           ; BSR set to: 0
 30296                           
 30297                           ; BSR set to: 0
 30298  015180  90D8               	bcf	status,0,c
 30299  015182  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 30300  015184  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 30301                           
 30302                           ; BSR set to: 0
 30303  015186  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
 30304  015188  D7ED               	goto	u11010
 30305  01518A                     l3577:
 30306                           
 30307                           ; BSR set to: 0
 30308                           
 30309                           ; BSR set to: 0
 30310  01518A  C064  F060         	movff	___lwdiv@quotient,?___lwdiv
 30311  01518E  C065  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 30312                           
 30313                           ; BSR set to: 0
 30314  015192  0012               	return		;funcret
 30315  015194                     __end_of___lwdiv:
 30316                           	opt stack 0
 30317                           tblptru	equ	0xFF8
 30318                           tblptrh	equ	0xFF7
 30319                           tblptrl	equ	0xFF6
 30320                           tablat	equ	0xFF5
 30321                           prodh	equ	0xFF4
 30322                           prodl	equ	0xFF3
 30323                           intcon	equ	0xFF2
 30324                           postinc0	equ	0xFEE
 30325                           wreg	equ	0xFE8
 30326                           indf1	equ	0xFE7
 30327                           postinc1	equ	0xFE6
 30328                           postdec1	equ	0xFE5
 30329                           plusw1	equ	0xFE3
 30330                           fsr1h	equ	0xFE2
 30331                           fsr1l	equ	0xFE1
 30332                           indf2	equ	0xFDF
 30333                           postinc2	equ	0xFDE
 30334                           postdec2	equ	0xFDD
 30335                           plusw2	equ	0xFDB
 30336                           fsr2h	equ	0xFDA
 30337                           fsr2l	equ	0xFD9
 30338                           status	equ	0xFD8
 30339                           
 30340 ;; *************** function ___almod *****************
 30341 ;; Defined at:
 30342 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\almod.c"
 30343 ;; Parameters:    Size  Location     Type
 30344 ;;  dividend        4    0[BANK0 ] long 
 30345 ;;  divisor         4    4[BANK0 ] long 
 30346 ;; Auto vars:     Size  Location     Type
 30347 ;;  sign            1    9[BANK0 ] unsigned char 
 30348 ;;  counter         1    8[BANK0 ] unsigned char 
 30349 ;; Return value:  Size  Location     Type
 30350 ;;                  4    0[BANK0 ] long 
 30351 ;; Registers used:
 30352 ;;		wreg, status,2, status,0
 30353 ;; Tracked objects:
 30354 ;;		On entry : 0/0
 30355 ;;		On exit  : 0/0
 30356 ;;		Unchanged: 0/0
 30357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30358 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30359 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30361 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30362 ;;Total ram usage:       10 bytes
 30363 ;; Hardware stack levels used:    1
 30364 ;; Hardware stack levels required when called:   10
 30365 ;; This function calls:
 30366 ;;		Nothing
 30367 ;; This function is called by:
 30368 ;;		__display_itoa_long
 30369 ;; This function uses a non-reentrant model
 30370 ;;
 30371                           
 30372                           	psect	text119
 30373  01336E                     __ptext119:
 30374                           	opt stack 0
 30375  01336E                     ___almod:
 30376                           	opt stack 18
 30377                           
 30378                           ; BSR set to: 0
 30379                           ;incstack = 0
 30380  01336E  0E00               	movlw	0
 30381  013370  0100               	movlb	0	; () banked
 30382  013372  6F69               	movwf	___almod@sign& (0+255),b
 30383                           
 30384                           ; BSR set to: 0
 30385  013374  AF63               	btfss	(___almod@dividend+3)& (0+255),7,b
 30386  013376  D00A               	goto	l3174
 30387                           
 30388                           ; BSR set to: 0
 30389  013378  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 30390  01337A  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 30391  01337C  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 30392  01337E  6D60               	negf	___almod@dividend& (0+255),b
 30393  013380  0E00               	movlw	0
 30394  013382  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 30395  013384  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 30396  013386  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 30397                           
 30398                           ; BSR set to: 0
 30399  013388  0E01               	movlw	1
 30400  01338A  6F69               	movwf	___almod@sign& (0+255),b
 30401  01338C                     l3174:
 30402                           
 30403                           ; BSR set to: 0
 30404                           
 30405                           ; BSR set to: 0
 30406  01338C  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 30407  01338E  D008               	goto	l3175
 30408                           
 30409                           ; BSR set to: 0
 30410  013390  1F67               	comf	(___almod@divisor+3)& (0+255),f,b
 30411  013392  1F66               	comf	(___almod@divisor+2)& (0+255),f,b
 30412  013394  1F65               	comf	(___almod@divisor+1)& (0+255),f,b
 30413  013396  6D64               	negf	___almod@divisor& (0+255),b
 30414  013398  0E00               	movlw	0
 30415  01339A  2365               	addwfc	(___almod@divisor+1)& (0+255),f,b
 30416  01339C  2366               	addwfc	(___almod@divisor+2)& (0+255),f,b
 30417  01339E  2367               	addwfc	(___almod@divisor+3)& (0+255),f,b
 30418  0133A0                     l3175:
 30419                           
 30420                           ; BSR set to: 0
 30421                           
 30422                           ; BSR set to: 0
 30423  0133A0  5164               	movf	___almod@divisor& (0+255),w,b
 30424  0133A2  1165               	iorwf	(___almod@divisor+1)& (0+255),w,b
 30425  0133A4  1166               	iorwf	(___almod@divisor+2)& (0+255),w,b
 30426  0133A6  1167               	iorwf	(___almod@divisor+3)& (0+255),w,b
 30427  0133A8  B4D8               	btfsc	status,2,c
 30428  0133AA  D024               	goto	l3182
 30429                           
 30430                           ; BSR set to: 0
 30431  0133AC  0E01               	movlw	1
 30432  0133AE  6F68               	movwf	___almod@counter& (0+255),b
 30433  0133B0  D006               	goto	l3177
 30434  0133B2                     
 30435                           ; BSR set to: 0
 30436                           
 30437                           ; BSR set to: 0
 30438  0133B2  90D8               	bcf	status,0,c
 30439  0133B4  3764               	rlcf	___almod@divisor& (0+255),f,b
 30440  0133B6  3765               	rlcf	(___almod@divisor+1)& (0+255),f,b
 30441  0133B8  3766               	rlcf	(___almod@divisor+2)& (0+255),f,b
 30442  0133BA  3767               	rlcf	(___almod@divisor+3)& (0+255),f,b
 30443  0133BC  2B68               	incf	___almod@counter& (0+255),f,b
 30444  0133BE                     l3177:
 30445                           
 30446                           ; BSR set to: 0
 30447                           
 30448                           ; BSR set to: 0
 30449  0133BE  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 30450  0133C0  D7F8               	goto	l3178
 30451  0133C2                     u16210:
 30452                           
 30453                           ; BSR set to: 0
 30454                           
 30455                           ; BSR set to: 0
 30456                           
 30457                           ; BSR set to: 0
 30458  0133C2  5164               	movf	___almod@divisor& (0+255),w,b
 30459  0133C4  5D60               	subwf	___almod@dividend& (0+255),w,b
 30460  0133C6  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 30461  0133C8  5961               	subwfb	(___almod@dividend+1)& (0+255),w,b
 30462  0133CA  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 30463  0133CC  5962               	subwfb	(___almod@dividend+2)& (0+255),w,b
 30464  0133CE  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 30465  0133D0  5963               	subwfb	(___almod@dividend+3)& (0+255),w,b
 30466  0133D2  A0D8               	btfss	status,0,c
 30467  0133D4  D008               	goto	l3181
 30468                           
 30469                           ; BSR set to: 0
 30470  0133D6  5164               	movf	___almod@divisor& (0+255),w,b
 30471  0133D8  5F60               	subwf	___almod@dividend& (0+255),f,b
 30472  0133DA  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 30473  0133DC  5B61               	subwfb	(___almod@dividend+1)& (0+255),f,b
 30474  0133DE  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 30475  0133E0  5B62               	subwfb	(___almod@dividend+2)& (0+255),f,b
 30476  0133E2  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 30477  0133E4  5B63               	subwfb	(___almod@dividend+3)& (0+255),f,b
 30478  0133E6                     l3181:
 30479                           
 30480                           ; BSR set to: 0
 30481                           
 30482                           ; BSR set to: 0
 30483  0133E6  90D8               	bcf	status,0,c
 30484  0133E8  3367               	rrcf	(___almod@divisor+3)& (0+255),f,b
 30485  0133EA  3366               	rrcf	(___almod@divisor+2)& (0+255),f,b
 30486  0133EC  3365               	rrcf	(___almod@divisor+1)& (0+255),f,b
 30487  0133EE  3364               	rrcf	___almod@divisor& (0+255),f,b
 30488                           
 30489                           ; BSR set to: 0
 30490  0133F0  2F68               	decfsz	___almod@counter& (0+255),f,b
 30491  0133F2  D7E7               	goto	u16210
 30492  0133F4                     l3182:
 30493                           
 30494                           ; BSR set to: 0
 30495                           
 30496                           ; BSR set to: 0
 30497                           
 30498                           ; BSR set to: 0
 30499  0133F4  5169               	movf	___almod@sign& (0+255),w,b
 30500  0133F6  B4D8               	btfsc	status,2,c
 30501  0133F8  D008               	goto	l3183
 30502                           
 30503                           ; BSR set to: 0
 30504  0133FA  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 30505  0133FC  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 30506  0133FE  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 30507  013400  6D60               	negf	___almod@dividend& (0+255),b
 30508  013402  0E00               	movlw	0
 30509  013404  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 30510  013406  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 30511  013408  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 30512  01340A                     l3183:
 30513                           
 30514                           ; BSR set to: 0
 30515                           
 30516                           ; BSR set to: 0
 30517  01340A  C060  F060         	movff	___almod@dividend,?___almod
 30518  01340E  C061  F061         	movff	___almod@dividend+1,?___almod+1
 30519  013412  C062  F062         	movff	___almod@dividend+2,?___almod+2
 30520  013416  C063  F063         	movff	___almod@dividend+3,?___almod+3
 30521  01341A  0012               	return	
 30522  01341C                     __end_of___almod:
 30523                           	opt stack 0
 30524                           tblptru	equ	0xFF8
 30525                           tblptrh	equ	0xFF7
 30526                           tblptrl	equ	0xFF6
 30527                           tablat	equ	0xFF5
 30528                           prodh	equ	0xFF4
 30529                           prodl	equ	0xFF3
 30530                           intcon	equ	0xFF2
 30531                           postinc0	equ	0xFEE
 30532                           wreg	equ	0xFE8
 30533                           indf1	equ	0xFE7
 30534                           postinc1	equ	0xFE6
 30535                           postdec1	equ	0xFE5
 30536                           plusw1	equ	0xFE3
 30537                           fsr1h	equ	0xFE2
 30538                           fsr1l	equ	0xFE1
 30539                           indf2	equ	0xFDF
 30540                           postinc2	equ	0xFDE
 30541                           postdec2	equ	0xFDD
 30542                           plusw2	equ	0xFDB
 30543                           fsr2h	equ	0xFDA
 30544                           fsr2l	equ	0xFD9
 30545                           status	equ	0xFD8
 30546                           
 30547 ;; *************** function ___aldiv *****************
 30548 ;; Defined at:
 30549 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
 30550 ;; Parameters:    Size  Location     Type
 30551 ;;  dividend        4    0[BANK0 ] long 
 30552 ;;  divisor         4    4[BANK0 ] long 
 30553 ;; Auto vars:     Size  Location     Type
 30554 ;;  quotient        4   10[BANK0 ] long 
 30555 ;;  sign            1    9[BANK0 ] unsigned char 
 30556 ;;  counter         1    8[BANK0 ] unsigned char 
 30557 ;; Return value:  Size  Location     Type
 30558 ;;                  4    0[BANK0 ] long 
 30559 ;; Registers used:
 30560 ;;		wreg, status,2, status,0
 30561 ;; Tracked objects:
 30562 ;;		On entry : 0/0
 30563 ;;		On exit  : 0/0
 30564 ;;		Unchanged: 0/0
 30565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30566 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30567 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30569 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30570 ;;Total ram usage:       14 bytes
 30571 ;; Hardware stack levels used:    1
 30572 ;; Hardware stack levels required when called:   10
 30573 ;; This function calls:
 30574 ;;		Nothing
 30575 ;; This function is called by:
 30576 ;;		__display_itoa_long
 30577 ;; This function uses a non-reentrant model
 30578 ;;
 30579                           
 30580                           	psect	text120
 30581  012C04                     __ptext120:
 30582                           	opt stack 0
 30583  012C04                     ___aldiv:
 30584                           	opt stack 18
 30585                           
 30586                           ; BSR set to: 0
 30587                           ;incstack = 0
 30588  012C04  0E00               	movlw	0
 30589  012C06  0100               	movlb	0	; () banked
 30590  012C08  6F69               	movwf	___aldiv@sign& (0+255),b
 30591                           
 30592                           ; BSR set to: 0
 30593  012C0A  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 30594  012C0C  D00A               	goto	l3161
 30595                           
 30596                           ; BSR set to: 0
 30597  012C0E  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
 30598  012C10  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
 30599  012C12  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
 30600  012C14  6D64               	negf	___aldiv@divisor& (0+255),b
 30601  012C16  0E00               	movlw	0
 30602  012C18  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 30603  012C1A  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 30604  012C1C  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 30605                           
 30606                           ; BSR set to: 0
 30607  012C1E  0E01               	movlw	1
 30608  012C20  6F69               	movwf	___aldiv@sign& (0+255),b
 30609  012C22                     l3161:
 30610                           
 30611                           ; BSR set to: 0
 30612                           
 30613                           ; BSR set to: 0
 30614  012C22  AF63               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 30615  012C24  D00A               	goto	l3162
 30616                           
 30617                           ; BSR set to: 0
 30618  012C26  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
 30619  012C28  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
 30620  012C2A  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
 30621  012C2C  6D60               	negf	___aldiv@dividend& (0+255),b
 30622  012C2E  0E00               	movlw	0
 30623  012C30  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 30624  012C32  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 30625  012C34  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 30626                           
 30627                           ; BSR set to: 0
 30628  012C36  0E01               	movlw	1
 30629  012C38  1B69               	xorwf	___aldiv@sign& (0+255),f,b
 30630  012C3A                     l3162:
 30631                           
 30632                           ; BSR set to: 0
 30633                           
 30634                           ; BSR set to: 0
 30635  012C3A  0E00               	movlw	0
 30636  012C3C  6F6A               	movwf	___aldiv@quotient& (0+255),b
 30637  012C3E  0E00               	movlw	0
 30638  012C40  6F6B               	movwf	(___aldiv@quotient+1)& (0+255),b
 30639  012C42  0E00               	movlw	0
 30640  012C44  6F6C               	movwf	(___aldiv@quotient+2)& (0+255),b
 30641  012C46  0E00               	movlw	0
 30642  012C48  6F6D               	movwf	(___aldiv@quotient+3)& (0+255),b
 30643                           
 30644                           ; BSR set to: 0
 30645  012C4A  5164               	movf	___aldiv@divisor& (0+255),w,b
 30646  012C4C  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 30647  012C4E  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 30648  012C50  1167               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 30649  012C52  B4D8               	btfsc	status,2,c
 30650  012C54  D02A               	goto	l3169
 30651                           
 30652                           ; BSR set to: 0
 30653  012C56  0E01               	movlw	1
 30654  012C58  6F68               	movwf	___aldiv@counter& (0+255),b
 30655  012C5A  D006               	goto	l3164
 30656  012C5C                     
 30657                           ; BSR set to: 0
 30658                           
 30659                           ; BSR set to: 0
 30660  012C5C  90D8               	bcf	status,0,c
 30661  012C5E  3764               	rlcf	___aldiv@divisor& (0+255),f,b
 30662  012C60  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 30663  012C62  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 30664  012C64  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 30665  012C66  2B68               	incf	___aldiv@counter& (0+255),f,b
 30666  012C68                     l3164:
 30667                           
 30668                           ; BSR set to: 0
 30669                           
 30670                           ; BSR set to: 0
 30671  012C68  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 30672  012C6A  D7F8               	goto	l3165
 30673  012C6C                     u16150:
 30674                           
 30675                           ; BSR set to: 0
 30676                           
 30677                           ; BSR set to: 0
 30678                           
 30679                           ; BSR set to: 0
 30680  012C6C  90D8               	bcf	status,0,c
 30681  012C6E  376A               	rlcf	___aldiv@quotient& (0+255),f,b
 30682  012C70  376B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 30683  012C72  376C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 30684  012C74  376D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 30685                           
 30686                           ; BSR set to: 0
 30687  012C76  5164               	movf	___aldiv@divisor& (0+255),w,b
 30688  012C78  5D60               	subwf	___aldiv@dividend& (0+255),w,b
 30689  012C7A  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 30690  012C7C  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 30691  012C7E  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 30692  012C80  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 30693  012C82  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 30694  012C84  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 30695  012C86  A0D8               	btfss	status,0,c
 30696  012C88  D009               	goto	l3168
 30697                           
 30698                           ; BSR set to: 0
 30699  012C8A  5164               	movf	___aldiv@divisor& (0+255),w,b
 30700  012C8C  5F60               	subwf	___aldiv@dividend& (0+255),f,b
 30701  012C8E  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 30702  012C90  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 30703  012C92  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 30704  012C94  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 30705  012C96  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 30706  012C98  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 30707                           
 30708                           ; BSR set to: 0
 30709  012C9A  816A               	bsf	___aldiv@quotient& (0+255),0,b
 30710  012C9C                     l3168:
 30711                           
 30712                           ; BSR set to: 0
 30713                           
 30714                           ; BSR set to: 0
 30715  012C9C  90D8               	bcf	status,0,c
 30716  012C9E  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 30717  012CA0  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 30718  012CA2  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 30719  012CA4  3364               	rrcf	___aldiv@divisor& (0+255),f,b
 30720                           
 30721                           ; BSR set to: 0
 30722  012CA6  2F68               	decfsz	___aldiv@counter& (0+255),f,b
 30723  012CA8  D7E1               	goto	u16150
 30724  012CAA                     l3169:
 30725                           
 30726                           ; BSR set to: 0
 30727                           
 30728                           ; BSR set to: 0
 30729                           
 30730                           ; BSR set to: 0
 30731  012CAA  5169               	movf	___aldiv@sign& (0+255),w,b
 30732  012CAC  B4D8               	btfsc	status,2,c
 30733  012CAE  D008               	goto	l3170
 30734                           
 30735                           ; BSR set to: 0
 30736  012CB0  1F6D               	comf	(___aldiv@quotient+3)& (0+255),f,b
 30737  012CB2  1F6C               	comf	(___aldiv@quotient+2)& (0+255),f,b
 30738  012CB4  1F6B               	comf	(___aldiv@quotient+1)& (0+255),f,b
 30739  012CB6  6D6A               	negf	___aldiv@quotient& (0+255),b
 30740  012CB8  0E00               	movlw	0
 30741  012CBA  236B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 30742  012CBC  236C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 30743  012CBE  236D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 30744  012CC0                     l3170:
 30745                           
 30746                           ; BSR set to: 0
 30747                           
 30748                           ; BSR set to: 0
 30749  012CC0  C06A  F060         	movff	___aldiv@quotient,?___aldiv
 30750  012CC4  C06B  F061         	movff	___aldiv@quotient+1,?___aldiv+1
 30751  012CC8  C06C  F062         	movff	___aldiv@quotient+2,?___aldiv+2
 30752  012CCC  C06D  F063         	movff	___aldiv@quotient+3,?___aldiv+3
 30753  012CD0  0012               	return	
 30754  012CD2                     __end_of___aldiv:
 30755                           	opt stack 0
 30756                           tblptru	equ	0xFF8
 30757                           tblptrh	equ	0xFF7
 30758                           tblptrl	equ	0xFF6
 30759                           tablat	equ	0xFF5
 30760                           prodh	equ	0xFF4
 30761                           prodl	equ	0xFF3
 30762                           intcon	equ	0xFF2
 30763                           postinc0	equ	0xFEE
 30764                           wreg	equ	0xFE8
 30765                           indf1	equ	0xFE7
 30766                           postinc1	equ	0xFE6
 30767                           postdec1	equ	0xFE5
 30768                           plusw1	equ	0xFE3
 30769                           fsr1h	equ	0xFE2
 30770                           fsr1l	equ	0xFE1
 30771                           indf2	equ	0xFDF
 30772                           postinc2	equ	0xFDE
 30773                           postdec2	equ	0xFDD
 30774                           plusw2	equ	0xFDB
 30775                           fsr2h	equ	0xFDA
 30776                           fsr2l	equ	0xFD9
 30777                           status	equ	0xFD8
 30778                           
 30779 ;; *************** function __display_clear *****************
 30780 ;; Defined at:
 30781 ;;		line 86 in file "display.c"
 30782 ;; Parameters:    Size  Location     Type
 30783 ;;		None
 30784 ;; Auto vars:     Size  Location     Type
 30785 ;;  col             1    3[BANK0 ] unsigned char 
 30786 ;;  row             1    2[BANK0 ] unsigned char 
 30787 ;; Return value:  Size  Location     Type
 30788 ;;                  1    wreg      void 
 30789 ;; Registers used:
 30790 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30791 ;; Tracked objects:
 30792 ;;		On entry : 0/0
 30793 ;;		On exit  : 0/0
 30794 ;;		Unchanged: 0/0
 30795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30797 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30798 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30799 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30800 ;;Total ram usage:        4 bytes
 30801 ;; Hardware stack levels used:    1
 30802 ;; Hardware stack levels required when called:   10
 30803 ;; This function calls:
 30804 ;;		Nothing
 30805 ;; This function is called by:
 30806 ;;		_display_prepare
 30807 ;; This function uses a non-reentrant model
 30808 ;;
 30809                           
 30810                           	psect	text121
 30811  0154FE                     __ptext121:
 30812                           	opt stack 0
 30813  0154FE                     __display_clear:
 30814                           	opt stack 19
 30815                           
 30816                           ;display.c: 88: uint8_t row;;display.c: 89: uint8_t col;;display.c: 90: for(row=0;row<4;
      +                          ++row)
 30817                           
 30818                           ; BSR set to: 0
 30819                           ;incstack = 0
 30820  0154FE  0E00               	movlw	0
 30821  015500  0100               	movlb	0	; () banked
 30822  015502  6F62               	movwf	__display_clear@row& (0+255),b
 30823  015504                     l17584:
 30824                           
 30825                           ; BSR set to: 0
 30826  015504  0E03               	movlw	3
 30827  015506  6562               	cpfsgt	__display_clear@row& (0+255),b
 30828  015508  D001               	goto	l1327
 30829  01550A  0012               	return	
 30830  01550C                     l1327:
 30831                           
 30832                           ; BSR set to: 0
 30833                           ;display.c: 91: {;display.c: 92: for(col=0;col<20;++col)
 30834                           
 30835                           ; BSR set to: 0
 30836  01550C  0E00               	movlw	0
 30837  01550E  6F63               	movwf	__display_clear@col& (0+255),b
 30838  015510                     l17590:
 30839                           
 30840                           ; BSR set to: 0
 30841  015510  0E13               	movlw	19
 30842  015512  6563               	cpfsgt	__display_clear@col& (0+255),b
 30843  015514  D001               	goto	l1329
 30844  015516  D016               	goto	u17080
 30845  015518                     l1329:
 30846                           
 30847                           ; BSR set to: 0
 30848                           ;display.c: 93: {;display.c: 94: display_content[row][col] = ' ';
 30849                           
 30850                           ; BSR set to: 0
 30851  015518  5162               	movf	__display_clear@row& (0+255),w,b
 30852  01551A  0D14               	mullw	20
 30853  01551C  0E48               	movlw	low _display_content
 30854  01551E  6F60               	movwf	??__display_clear& (0+255),b
 30855  015520  0E02               	movlw	high _display_content
 30856  015522  6F61               	movwf	(??__display_clear+1)& (0+255),b
 30857  015524  50F3               	movf	prodl,w,c
 30858  015526  2760               	addwf	??__display_clear& (0+255),f,b
 30859  015528  50F4               	movf	prodh,w,c
 30860  01552A  2361               	addwfc	(??__display_clear+1)& (0+255),f,b
 30861  01552C  5163               	movf	__display_clear@col& (0+255),w,b
 30862  01552E  0D01               	mullw	1
 30863  015530  50F3               	movf	prodl,w,c
 30864  015532  2560               	addwf	??__display_clear& (0+255),w,b
 30865  015534  6ED9               	movwf	fsr2l,c
 30866  015536  50F4               	movf	prodh,w,c
 30867  015538  2161               	addwfc	(??__display_clear+1)& (0+255),w,b
 30868  01553A  6EDA               	movwf	fsr2h,c
 30869  01553C  0E20               	movlw	32
 30870  01553E  6EDF               	movwf	indf2,c
 30871                           
 30872                           ; BSR set to: 0
 30873  015540  2B63               	incf	__display_clear@col& (0+255),f,b
 30874  015542  D7E6               	goto	l17590
 30875  015544                     u17080:
 30876                           
 30877                           ; BSR set to: 0
 30878                           
 30879                           ; BSR set to: 0
 30880  015544  2B62               	incf	__display_clear@row& (0+255),f,b
 30881  015546  D7DE               	goto	l17584
 30882  015548                     __end_of__display_clear:
 30883                           	opt stack 0
 30884                           tblptru	equ	0xFF8
 30885                           tblptrh	equ	0xFF7
 30886                           tblptrl	equ	0xFF6
 30887                           tablat	equ	0xFF5
 30888                           prodh	equ	0xFF4
 30889                           prodl	equ	0xFF3
 30890                           intcon	equ	0xFF2
 30891                           postinc0	equ	0xFEE
 30892                           wreg	equ	0xFE8
 30893                           indf1	equ	0xFE7
 30894                           postinc1	equ	0xFE6
 30895                           postdec1	equ	0xFE5
 30896                           plusw1	equ	0xFE3
 30897                           fsr1h	equ	0xFE2
 30898                           fsr1l	equ	0xFE1
 30899                           indf2	equ	0xFDF
 30900                           postinc2	equ	0xFDE
 30901                           postdec2	equ	0xFDD
 30902                           plusw2	equ	0xFDB
 30903                           fsr2h	equ	0xFDA
 30904                           fsr2l	equ	0xFD9
 30905                           status	equ	0xFD8
 30906                           
 30907 ;; *************** function _adc_read_temperature *****************
 30908 ;; Defined at:
 30909 ;;		line 44 in file "adc.c"
 30910 ;; Parameters:    Size  Location     Type
 30911 ;;		None
 30912 ;; Auto vars:     Size  Location     Type
 30913 ;;  temperature     4   53[BANK0 ] float 
 30914 ;;  adc_result      2   51[BANK0 ] unsigned int 
 30915 ;; Return value:  Size  Location     Type
 30916 ;;                  1    wreg      void 
 30917 ;; Registers used:
 30918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30919 ;; Tracked objects:
 30920 ;;		On entry : 0/0
 30921 ;;		On exit  : 0/0
 30922 ;;		Unchanged: 0/0
 30923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30925 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30926 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30927 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30928 ;;Total ram usage:        8 bytes
 30929 ;; Hardware stack levels used:    1
 30930 ;; Hardware stack levels required when called:   11
 30931 ;; This function calls:
 30932 ;;		___fladd
 30933 ;;		___flmul
 30934 ;;		___flneg
 30935 ;;		___fltol
 30936 ;;		___xxtofl
 30937 ;; This function is called by:
 30938 ;;		_main
 30939 ;; This function uses a non-reentrant model
 30940 ;;
 30941                           
 30942                           	psect	text122
 30943  00EAAA                     __ptext122:
 30944                           	opt stack 0
 30945  00EAAA                     _adc_read_temperature:
 30946                           	opt stack 19
 30947                           
 30948                           ;adc.c: 46: uint16_t adc_result;;adc.c: 47: float temperature;;adc.c: 50: adc_result = A
      +                          DRESH;
 30949                           
 30950                           ; BSR set to: 0
 30951                           ;incstack = 0
 30952  00EAAA  CFC4 F093          	movff	4036,adc_read_temperature@adc_result	;volatile
 30953  00EAAE  0100               	movlb	0	; () banked
 30954  00EAB0  6B94               	clrf	(adc_read_temperature@adc_result+1)& (0+255),b
 30955                           
 30956                           ; BSR set to: 0
 30957                           ;adc.c: 51: adc_result <<= 8;
 30958  00EAB2  5193               	movf	adc_read_temperature@adc_result& (0+255),w,b
 30959  00EAB4  6F94               	movwf	(adc_read_temperature@adc_result+1)& (0+255),b
 30960  00EAB6  6B93               	clrf	adc_read_temperature@adc_result& (0+255),b
 30961                           
 30962                           ; BSR set to: 0
 30963                           ;adc.c: 52: adc_result |= ADRESL;
 30964  00EAB8  50C3               	movf	4035,w,c	;volatile
 30965  00EABA  1393               	iorwf	adc_read_temperature@adc_result& (0+255),f,b
 30966                           
 30967                           ; BSR set to: 0
 30968                           ;adc.c: 55: params.temperature_adc_sum[params.temperature_source] += adc_result;
 30969  00EABC  0102               	movlb	2	; () banked
 30970  00EABE  5131               	movf	_params& (0+255),w,b
 30971  00EAC0  0D02               	mullw	2
 30972  00EAC2  0E32               	movlw	low (_params+1)
 30973  00EAC4  24F3               	addwf	prodl,w,c
 30974  00EAC6  6ED9               	movwf	fsr2l,c
 30975  00EAC8  0E02               	movlw	high (_params+1)
 30976  00EACA  20F4               	addwfc	prodh,w,c
 30977  00EACC  6EDA               	movwf	fsr2h,c
 30978  00EACE  0100               	movlb	0	; () banked
 30979  00EAD0  5193               	movf	adc_read_temperature@adc_result& (0+255),w,b
 30980  00EAD2  26DE               	addwf	postinc2,f,c
 30981  00EAD4  5194               	movf	(adc_read_temperature@adc_result+1)& (0+255),w,b
 30982  00EAD6  22DD               	addwfc	postdec2,f,c
 30983                           
 30984                           ; BSR set to: 0
 30985                           ;adc.c: 56: ++params.temperature_count[params.temperature_source];
 30986  00EAD8  0102               	movlb	2	; () banked
 30987  00EADA  5131               	movf	_params& (0+255),w,b
 30988  00EADC  0D01               	mullw	1
 30989  00EADE  0E36               	movlw	low (_params+5)
 30990  00EAE0  24F3               	addwf	prodl,w,c
 30991  00EAE2  6ED9               	movwf	fsr2l,c
 30992  00EAE4  0E02               	movlw	high (_params+5)
 30993  00EAE6  20F4               	addwfc	prodh,w,c
 30994  00EAE8  6EDA               	movwf	fsr2h,c
 30995  00EAEA  2ADF               	incf	indf2,f,c
 30996                           
 30997                           ; BSR set to: 2
 30998                           ;adc.c: 59: ADCON0bits.GO = 1;
 30999  00EAEC  82C2               	bsf	4034,1,c	;volatile
 31000                           
 31001                           ; BSR set to: 2
 31002                           ;adc.c: 62: if(params.temperature_count[params.temperature_source]==8)
 31003  00EAEE  5131               	movf	_params& (0+255),w,b
 31004  00EAF0  0D01               	mullw	1
 31005  00EAF2  0E36               	movlw	low (_params+5)
 31006  00EAF4  24F3               	addwf	prodl,w,c
 31007  00EAF6  6ED9               	movwf	fsr2l,c
 31008  00EAF8  0E02               	movlw	high (_params+5)
 31009  00EAFA  20F4               	addwfc	prodh,w,c
 31010  00EAFC  6EDA               	movwf	fsr2h,c
 31011  00EAFE  0E08               	movlw	8
 31012  00EB00  18DE               	xorwf	postinc2,w,c
 31013  00EB02  A4D8               	btfss	status,2,c
 31014  00EB04  D0AF               	goto	l2950
 31015                           
 31016                           ; BSR set to: 2
 31017                           ;adc.c: 63: {;adc.c: 67: temperature = 21064.0 - (float) params.temperature_adc_sum[para
      +                          ms.temperature_source];
 31018  00EB06  5131               	movf	_params& (0+255),w,b
 31019  00EB08  0D02               	mullw	2
 31020  00EB0A  0E32               	movlw	low (_params+1)
 31021  00EB0C  24F3               	addwf	prodl,w,c
 31022  00EB0E  6ED9               	movwf	fsr2l,c
 31023  00EB10  0E02               	movlw	high (_params+1)
 31024  00EB12  20F4               	addwfc	prodh,w,c
 31025  00EB14  6EDA               	movwf	fsr2h,c
 31026  00EB16  CFDE F091          	movff	postinc2,??_adc_read_temperature
 31027  00EB1A  CFDD F092          	movff	postdec2,??_adc_read_temperature+1
 31028  00EB1E  C091  F06A         	movff	??_adc_read_temperature,___xxtofl@val
 31029  00EB22  C092  F06B         	movff	??_adc_read_temperature+1,___xxtofl@val+1
 31030  00EB26  0100               	movlb	0	; () banked
 31031  00EB28  6B6C               	clrf	(___xxtofl@val+2)& (0+255),b
 31032  00EB2A  6B6D               	clrf	(___xxtofl@val+3)& (0+255),b
 31033  00EB2C  0E00               	movlw	0
 31034  00EB2E  EC24  F082         	call	___xxtofl
 31035  00EB32  C06A  F078         	movff	?___xxtofl,___flneg@f1
 31036  00EB36  C06B  F079         	movff	?___xxtofl+1,___flneg@f1+1
 31037  00EB3A  C06C  F07A         	movff	?___xxtofl+2,___flneg@f1+2
 31038  00EB3E  C06D  F07B         	movff	?___xxtofl+3,___flneg@f1+3
 31039  00EB42  EC51  F0AD         	call	___flneg	;wreg free
 31040  00EB46  C078  F07C         	movff	?___flneg,___fladd@b
 31041  00EB4A  C079  F07D         	movff	?___flneg+1,___fladd@b+1
 31042  00EB4E  C07A  F07E         	movff	?___flneg+2,___fladd@b+2
 31043  00EB52  C07B  F07F         	movff	?___flneg+3,___fladd@b+3
 31044  00EB56  0E00               	movlw	0
 31045  00EB58  0100               	movlb	0	; () banked
 31046  00EB5A  6F80               	movwf	___fladd@a& (0+255),b
 31047  00EB5C  0E90               	movlw	144
 31048  00EB5E  6F81               	movwf	(___fladd@a+1)& (0+255),b
 31049  00EB60  0EA4               	movlw	164
 31050  00EB62  6F82               	movwf	(___fladd@a+2)& (0+255),b
 31051  00EB64  0E46               	movlw	70
 31052  00EB66  6F83               	movwf	(___fladd@a+3)& (0+255),b
 31053  00EB68  EC84  F066         	call	___fladd	;wreg free
 31054  00EB6C  C07C  F095         	movff	?___fladd,adc_read_temperature@temperature
 31055  00EB70  C07D  F096         	movff	?___fladd+1,adc_read_temperature@temperature+1
 31056  00EB74  C07E  F097         	movff	?___fladd+2,adc_read_temperature@temperature+2
 31057  00EB78  C07F  F098         	movff	?___fladd+3,adc_read_temperature@temperature+3
 31058                           
 31059                           ;adc.c: 68: temperature *= 0.7405;
 31060  00EB7C  C095  F078         	movff	adc_read_temperature@temperature,___flmul@b
 31061  00EB80  C096  F079         	movff	adc_read_temperature@temperature+1,___flmul@b+1
 31062  00EB84  C097  F07A         	movff	adc_read_temperature@temperature+2,___flmul@b+2
 31063  00EB88  C098  F07B         	movff	adc_read_temperature@temperature+3,___flmul@b+3
 31064  00EB8C  0E68               	movlw	104
 31065  00EB8E  0100               	movlb	0	; () banked
 31066  00EB90  6F7C               	movwf	___flmul@a& (0+255),b
 31067  00EB92  0E91               	movlw	145
 31068  00EB94  6F7D               	movwf	(___flmul@a+1)& (0+255),b
 31069  00EB96  0E3D               	movlw	61
 31070  00EB98  6F7E               	movwf	(___flmul@a+2)& (0+255),b
 31071  00EB9A  0E3F               	movlw	63
 31072  00EB9C  6F7F               	movwf	(___flmul@a+3)& (0+255),b
 31073  00EB9E  ECDB  F064         	call	___flmul	;wreg free
 31074  00EBA2  C078  F095         	movff	?___flmul,adc_read_temperature@temperature
 31075  00EBA6  C079  F096         	movff	?___flmul+1,adc_read_temperature@temperature+1
 31076  00EBAA  C07A  F097         	movff	?___flmul+2,adc_read_temperature@temperature+2
 31077  00EBAE  C07B  F098         	movff	?___flmul+3,adc_read_temperature@temperature+3
 31078                           
 31079                           ;adc.c: 71: os.temperature[params.temperature_source] = (int16_t) temperature;
 31080  00EBB2  C095  F060         	movff	adc_read_temperature@temperature,___fltol@f1
 31081  00EBB6  C096  F061         	movff	adc_read_temperature@temperature+1,___fltol@f1+1
 31082  00EBBA  C097  F062         	movff	adc_read_temperature@temperature+2,___fltol@f1+2
 31083  00EBBE  C098  F063         	movff	adc_read_temperature@temperature+3,___fltol@f1+3
 31084  00EBC2  EC81  F093         	call	___fltol	;wreg free
 31085  00EBC6  0102               	movlb	2	; () banked
 31086  00EBC8  5131               	movf	_params& (0+255),w,b
 31087  00EBCA  0D02               	mullw	2
 31088  00EBCC  0E8D               	movlw	low (_os+40)
 31089  00EBCE  24F3               	addwf	prodl,w,c
 31090  00EBD0  6ED9               	movwf	fsr2l,c
 31091  00EBD2  0E01               	movlw	high (_os+40)
 31092  00EBD4  20F4               	addwfc	prodh,w,c
 31093  00EBD6  6EDA               	movwf	fsr2h,c
 31094  00EBD8  0100               	movlb	0	; () banked
 31095  00EBDA  C060  FFDE         	movff	?___fltol,postinc2
 31096  00EBDE  C061  FFDD         	movff	?___fltol+1,postdec2
 31097                           
 31098                           ; BSR set to: 0
 31099                           ;adc.c: 74: params.temperature_adc_sum[params.temperature_source] = 0;
 31100  00EBE2  0102               	movlb	2	; () banked
 31101  00EBE4  5131               	movf	_params& (0+255),w,b
 31102  00EBE6  0D02               	mullw	2
 31103  00EBE8  0E32               	movlw	low (_params+1)
 31104  00EBEA  24F3               	addwf	prodl,w,c
 31105  00EBEC  6ED9               	movwf	fsr2l,c
 31106  00EBEE  0E02               	movlw	high (_params+1)
 31107  00EBF0  20F4               	addwfc	prodh,w,c
 31108  00EBF2  6EDA               	movwf	fsr2h,c
 31109  00EBF4  0E00               	movlw	0
 31110  00EBF6  6EDE               	movwf	postinc2,c
 31111  00EBF8  0E00               	movlw	0
 31112  00EBFA  6EDD               	movwf	postdec2,c
 31113                           
 31114                           ; BSR set to: 2
 31115                           ;adc.c: 75: params.temperature_count[params.temperature_source] = 0;
 31116  00EBFC  5131               	movf	_params& (0+255),w,b
 31117  00EBFE  0D01               	mullw	1
 31118  00EC00  0E36               	movlw	low (_params+5)
 31119  00EC02  24F3               	addwf	prodl,w,c
 31120  00EC04  6ED9               	movwf	fsr2l,c
 31121  00EC06  0E02               	movlw	high (_params+5)
 31122  00EC08  20F4               	addwfc	prodh,w,c
 31123  00EC0A  6EDA               	movwf	fsr2h,c
 31124  00EC0C  0E00               	movlw	0
 31125  00EC0E  6EDF               	movwf	indf2,c
 31126                           
 31127                           ; BSR set to: 2
 31128                           ;adc.c: 78: if(os.fan_on)
 31129  00EC10  0101               	movlb	1	; () banked
 31130  00EC12  5194               	movf	(_os+47)& (0+255),w,b	;volatile
 31131  00EC14  B4D8               	btfsc	status,2,c
 31132  00EC16  D013               	goto	l2947
 31133                           
 31134                           ; BSR set to: 1
 31135                           ;adc.c: 79: {;adc.c: 80: if((os.temperature[TEMPERATURE_SOURCE_INTERNAL]<2400) && (os.te
      +                          mperature[TEMPERATURE_SOURCE_EXTERNAL]<2400))
 31136  00EC18  BF8E               	btfsc	(_os+41)& (0+255),7,b	;volatile
 31137  00EC1A  D006               	goto	u18800
 31138  00EC1C  0E60               	movlw	96
 31139  00EC1E  5D8D               	subwf	(_os+40)& (0+255),w,b	;volatile
 31140  00EC20  0E09               	movlw	9
 31141  00EC22  598E               	subwfb	(_os+41)& (0+255),w,b	;volatile
 31142  00EC24  B0D8               	btfsc	status,0,c
 31143  00EC26  D01E               	goto	l2950
 31144  00EC28                     u18800:
 31145                           
 31146                           ; BSR set to: 1
 31147  00EC28  BF90               	btfsc	(_os+43)& (0+255),7,b	;volatile
 31148  00EC2A  D006               	goto	u18810
 31149  00EC2C  0E60               	movlw	96
 31150  00EC2E  5D8F               	subwf	(_os+42)& (0+255),w,b	;volatile
 31151  00EC30  0E09               	movlw	9
 31152  00EC32  5990               	subwfb	(_os+43)& (0+255),w,b	;volatile
 31153  00EC34  B0D8               	btfsc	status,0,c
 31154  00EC36  D016               	goto	l2950
 31155  00EC38                     u18810:
 31156                           
 31157                           ; BSR set to: 1
 31158                           ;adc.c: 81: {;adc.c: 82: LATCbits.LC6 = 0;
 31159  00EC38  9C8B               	bcf	3979,6,c	;volatile
 31160                           
 31161                           ; BSR set to: 1
 31162                           ;adc.c: 83: os.fan_on = 0;
 31163  00EC3A  0E00               	movlw	0
 31164  00EC3C  D012               	goto	L41
 31165  00EC3E                     l2947:
 31166                           
 31167                           ; BSR set to: 1
 31168                           ;adc.c: 86: else;adc.c: 87: {;adc.c: 88: if((os.temperature[TEMPERATURE_SOURCE_INTERNAL]
      +                          >2500) || (os.temperature[TEMPERATURE_SOURCE_EXTERNAL]>2500))
 31169                           
 31170                           ; BSR set to: 1
 31171  00EC3E  BF8E               	btfsc	(_os+41)& (0+255),7,b	;volatile
 31172  00EC40  D006               	goto	u18820
 31173  00EC42  0EC5               	movlw	197
 31174  00EC44  5D8D               	subwf	(_os+40)& (0+255),w,b	;volatile
 31175  00EC46  0E09               	movlw	9
 31176  00EC48  598E               	subwfb	(_os+41)& (0+255),w,b	;volatile
 31177  00EC4A  B0D8               	btfsc	status,0,c
 31178  00EC4C  D008               	goto	u18830
 31179  00EC4E                     u18820:
 31180                           
 31181                           ; BSR set to: 1
 31182  00EC4E  BF90               	btfsc	(_os+43)& (0+255),7,b	;volatile
 31183  00EC50  D009               	goto	l2950
 31184  00EC52  0EC5               	movlw	197
 31185  00EC54  5D8F               	subwf	(_os+42)& (0+255),w,b	;volatile
 31186  00EC56  0E09               	movlw	9
 31187  00EC58  5990               	subwfb	(_os+43)& (0+255),w,b	;volatile
 31188  00EC5A  A0D8               	btfss	status,0,c
 31189  00EC5C  D003               	goto	l2950
 31190  00EC5E                     u18830:
 31191                           
 31192                           ; BSR set to: 1
 31193                           ;adc.c: 89: {;adc.c: 90: LATCbits.LC6 = 1;
 31194  00EC5E  8C8B               	bsf	3979,6,c	;volatile
 31195                           
 31196                           ; BSR set to: 1
 31197                           ;adc.c: 91: os.fan_on = 1;
 31198  00EC60  0E01               	movlw	1
 31199  00EC62                     L41:
 31200  00EC62  6F94               	movwf	(_os+47)& (0+255),b	;volatile
 31201  00EC64                     l2950:
 31202                           
 31203                           ;adc.c: 92: };adc.c: 93: };adc.c: 94: };adc.c: 97: if(params.temperature_source==TEMPERA
      +                          TURE_SOURCE_INTERNAL)
 31204                           
 31205                           ; BSR set to: 1
 31206                           
 31207                           ; BSR set to: 1
 31208  00EC64  0102               	movlb	2	; () banked
 31209  00EC66  5131               	movf	_params& (0+255),w,b
 31210  00EC68  A4D8               	btfss	status,2,c
 31211  00EC6A  D007               	goto	l2953
 31212                           
 31213                           ; BSR set to: 2
 31214                           ;adc.c: 98: {;adc.c: 99: ADCON0bits.CHS = 0b1011;
 31215  00EC6C  50C2               	movf	4034,w,c	;volatile
 31216  00EC6E  0BC3               	andlw	-61
 31217  00EC70  092C               	iorlw	44
 31218  00EC72  6EC2               	movwf	4034,c	;volatile
 31219                           
 31220                           ;adc.c: 100: params.temperature_source = TEMPERATURE_SOURCE_EXTERNAL;
 31221  00EC74  0E01               	movlw	1
 31222  00EC76  6F31               	movwf	_params& (0+255),b
 31223                           
 31224                           ;adc.c: 101: }
 31225  00EC78  0012               	return	
 31226  00EC7A                     l2953:
 31227                           
 31228                           ; BSR set to: 2
 31229                           ;adc.c: 102: else;adc.c: 103: {;adc.c: 104: ADCON0bits.CHS = 0b1001;
 31230                           
 31231                           ; BSR set to: 2
 31232  00EC7A  50C2               	movf	4034,w,c	;volatile
 31233  00EC7C  0BC3               	andlw	-61
 31234  00EC7E  0924               	iorlw	36
 31235  00EC80  6EC2               	movwf	4034,c	;volatile
 31236                           
 31237                           ;adc.c: 105: params.temperature_source = TEMPERATURE_SOURCE_INTERNAL;
 31238  00EC82  0E00               	movlw	0
 31239  00EC84  6F31               	movwf	_params& (0+255),b
 31240  00EC86  0012               	return	
 31241  00EC88                     __end_of_adc_read_temperature:
 31242                           	opt stack 0
 31243                           tblptru	equ	0xFF8
 31244                           tblptrh	equ	0xFF7
 31245                           tblptrl	equ	0xFF6
 31246                           tablat	equ	0xFF5
 31247                           prodh	equ	0xFF4
 31248                           prodl	equ	0xFF3
 31249                           intcon	equ	0xFF2
 31250                           postinc0	equ	0xFEE
 31251                           wreg	equ	0xFE8
 31252                           indf1	equ	0xFE7
 31253                           postinc1	equ	0xFE6
 31254                           postdec1	equ	0xFE5
 31255                           plusw1	equ	0xFE3
 31256                           fsr1h	equ	0xFE2
 31257                           fsr1l	equ	0xFE1
 31258                           indf2	equ	0xFDF
 31259                           postinc2	equ	0xFDE
 31260                           postdec2	equ	0xFDD
 31261                           plusw2	equ	0xFDB
 31262                           fsr2h	equ	0xFDA
 31263                           fsr2l	equ	0xFD9
 31264                           status	equ	0xFD8
 31265                           
 31266 ;; *************** function ___xxtofl *****************
 31267 ;; Defined at:
 31268 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
 31269 ;; Parameters:    Size  Location     Type
 31270 ;;  sign            1    wreg     unsigned char 
 31271 ;;  val             4   10[BANK0 ] long 
 31272 ;; Auto vars:     Size  Location     Type
 31273 ;;  sign            1   18[BANK0 ] unsigned char 
 31274 ;;  arg             4   20[BANK0 ] unsigned long 
 31275 ;;  exp             1   19[BANK0 ] unsigned char 
 31276 ;; Return value:  Size  Location     Type
 31277 ;;                  4   10[BANK0 ] unsigned char 
 31278 ;; Registers used:
 31279 ;;		wreg, status,2, status,0
 31280 ;; Tracked objects:
 31281 ;;		On entry : 0/0
 31282 ;;		On exit  : 0/0
 31283 ;;		Unchanged: 0/0
 31284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31285 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31286 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31287 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31288 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31289 ;;Total ram usage:       14 bytes
 31290 ;; Hardware stack levels used:    1
 31291 ;; Hardware stack levels required when called:   10
 31292 ;; This function calls:
 31293 ;;		Nothing
 31294 ;; This function is called by:
 31295 ;;		__motor_steps_from_degrees_int
 31296 ;;		_motor_calculate_position_in_degrees
 31297 ;;		__motor_get_speed_in_degrees
 31298 ;;		__step_position_from_divide_position
 31299 ;;		_motor_divide_jump_to_nearest
 31300 ;;		_motor_arc_move
 31301 ;;		_adc_read_temperature
 31302 ;;		__steps_from_degrees
 31303 ;;		__motor_steps_from_degrees_float
 31304 ;;		_motor_steps_from_degrees
 31305 ;; This function uses a non-reentrant model
 31306 ;;
 31307                           
 31308                           	psect	text123
 31309  010448                     __ptext123:
 31310                           	opt stack 0
 31311  010448                     ___xxtofl:
 31312                           	opt stack 18
 31313                           
 31314                           ; BSR set to: 2
 31315                           ;incstack = 0
 31316                           ;___xxtofl@sign stored from wreg
 31317  010448  0100               	movlb	0	; () banked
 31318  01044A  6F72               	movwf	___xxtofl@sign& (0+255),b
 31319  01044C  0100               	movlb	0	; () banked
 31320  01044E  5172               	movf	___xxtofl@sign& (0+255),w,b
 31321  010450  A4D8               	btfss	status,2,c
 31322                           
 31323                           ; BSR set to: 0
 31324  010452  AF6D               	btfss	(___xxtofl@val+3)& (0+255),7,b
 31325  010454  D01A               	goto	l3735
 31326                           
 31327                           ; BSR set to: 0
 31328  010456  C06A  F06E         	movff	___xxtofl@val,??___xxtofl
 31329  01045A  C06B  F06F         	movff	___xxtofl@val+1,??___xxtofl+1
 31330  01045E  C06C  F070         	movff	___xxtofl@val+2,??___xxtofl+2
 31331  010462  C06D  F071         	movff	___xxtofl@val+3,??___xxtofl+3
 31332  010466  1F6E               	comf	??___xxtofl& (0+255),f,b
 31333  010468  1F6F               	comf	(??___xxtofl+1)& (0+255),f,b
 31334  01046A  1F70               	comf	(??___xxtofl+2)& (0+255),f,b
 31335  01046C  1F71               	comf	(??___xxtofl+3)& (0+255),f,b
 31336  01046E  2B6E               	incf	??___xxtofl& (0+255),f,b
 31337  010470  0E00               	movlw	0
 31338  010472  236F               	addwfc	(??___xxtofl+1)& (0+255),f,b
 31339  010474  2370               	addwfc	(??___xxtofl+2)& (0+255),f,b
 31340  010476  2371               	addwfc	(??___xxtofl+3)& (0+255),f,b
 31341  010478  C06E  F074         	movff	??___xxtofl,___xxtofl@arg
 31342  01047C  C06F  F075         	movff	??___xxtofl+1,___xxtofl@arg+1
 31343  010480  C070  F076         	movff	??___xxtofl+2,___xxtofl@arg+2
 31344  010484  C071  F077         	movff	??___xxtofl+3,___xxtofl@arg+3
 31345  010488  D008               	goto	l3736
 31346  01048A                     l3735:
 31347                           
 31348                           ; BSR set to: 0
 31349  01048A  C06A  F074         	movff	___xxtofl@val,___xxtofl@arg
 31350  01048E  C06B  F075         	movff	___xxtofl@val+1,___xxtofl@arg+1
 31351  010492  C06C  F076         	movff	___xxtofl@val+2,___xxtofl@arg+2
 31352  010496  C06D  F077         	movff	___xxtofl@val+3,___xxtofl@arg+3
 31353  01049A                     l3736:
 31354                           
 31355                           ; BSR set to: 0
 31356                           
 31357                           ; BSR set to: 0
 31358  01049A  516A               	movf	___xxtofl@val& (0+255),w,b
 31359  01049C  116B               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 31360  01049E  116C               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 31361  0104A0  116D               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 31362  0104A2  A4D8               	btfss	status,2,c
 31363  0104A4  D009               	goto	l3737
 31364                           
 31365                           ; BSR set to: 0
 31366  0104A6  0E00               	movlw	0
 31367  0104A8  6F6A               	movwf	?___xxtofl& (0+255),b
 31368  0104AA  0E00               	movlw	0
 31369  0104AC  6F6B               	movwf	(?___xxtofl+1)& (0+255),b
 31370  0104AE  0E00               	movlw	0
 31371  0104B0  6F6C               	movwf	(?___xxtofl+2)& (0+255),b
 31372  0104B2  0E00               	movlw	0
 31373  0104B4  6F6D               	movwf	(?___xxtofl+3)& (0+255),b
 31374                           
 31375                           ; BSR set to: 0
 31376  0104B6  0012               	return	
 31377  0104B8                     l3737:
 31378                           
 31379                           ; BSR set to: 0
 31380                           
 31381                           ; BSR set to: 0
 31382  0104B8  0E96               	movlw	150
 31383  0104BA  6F73               	movwf	___xxtofl@exp& (0+255),b
 31384  0104BC  D006               	goto	l3739
 31385  0104BE                     
 31386                           ; BSR set to: 0
 31387                           
 31388                           ; BSR set to: 0
 31389  0104BE  2B73               	incf	___xxtofl@exp& (0+255),f,b
 31390  0104C0  90D8               	bcf	status,0,c
 31391  0104C2  3377               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 31392  0104C4  3376               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 31393  0104C6  3375               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 31394  0104C8  3374               	rrcf	___xxtofl@arg& (0+255),f,b
 31395  0104CA                     l3739:
 31396                           
 31397                           ; BSR set to: 0
 31398                           
 31399                           ; BSR set to: 0
 31400  0104CA  0E00               	movlw	0
 31401  0104CC  1574               	andwf	___xxtofl@arg& (0+255),w,b
 31402  0104CE  6F6E               	movwf	??___xxtofl& (0+255),b
 31403  0104D0  0E00               	movlw	0
 31404  0104D2  1575               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 31405  0104D4  6F6F               	movwf	(??___xxtofl+1)& (0+255),b
 31406  0104D6  0E00               	movlw	0
 31407  0104D8  1576               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 31408  0104DA  6F70               	movwf	(??___xxtofl+2)& (0+255),b
 31409  0104DC  0EFE               	movlw	254
 31410  0104DE  1577               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 31411  0104E0  6F71               	movwf	(??___xxtofl+3)& (0+255),b
 31412  0104E2  516E               	movf	??___xxtofl& (0+255),w,b
 31413  0104E4  116F               	iorwf	(??___xxtofl+1)& (0+255),w,b
 31414  0104E6  1170               	iorwf	(??___xxtofl+2)& (0+255),w,b
 31415  0104E8  1171               	iorwf	(??___xxtofl+3)& (0+255),w,b
 31416  0104EA  B4D8               	btfsc	status,2,c
 31417  0104EC  D00D               	goto	l3742
 31418  0104EE  D7E7               	goto	l3740
 31419  0104F0                     
 31420                           ; BSR set to: 0
 31421                           
 31422                           ; BSR set to: 0
 31423  0104F0  2B73               	incf	___xxtofl@exp& (0+255),f,b
 31424                           
 31425                           ; BSR set to: 0
 31426  0104F2  0E01               	movlw	1
 31427  0104F4  2774               	addwf	___xxtofl@arg& (0+255),f,b
 31428  0104F6  0E00               	movlw	0
 31429  0104F8  2375               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 31430  0104FA  2376               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 31431  0104FC  2377               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 31432                           
 31433                           ; BSR set to: 0
 31434  0104FE  90D8               	bcf	status,0,c
 31435  010500  3377               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 31436  010502  3376               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 31437  010504  3375               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 31438  010506  3374               	rrcf	___xxtofl@arg& (0+255),f,b
 31439  010508                     l3742:
 31440                           
 31441                           ; BSR set to: 0
 31442  010508  0E00               	movlw	0
 31443  01050A  1574               	andwf	___xxtofl@arg& (0+255),w,b
 31444  01050C  6F6E               	movwf	??___xxtofl& (0+255),b
 31445  01050E  0E00               	movlw	0
 31446  010510  1575               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 31447  010512  6F6F               	movwf	(??___xxtofl+1)& (0+255),b
 31448  010514  0E00               	movlw	0
 31449  010516  1576               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 31450  010518  6F70               	movwf	(??___xxtofl+2)& (0+255),b
 31451  01051A  0EFF               	movlw	255
 31452  01051C  1577               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 31453  01051E  6F71               	movwf	(??___xxtofl+3)& (0+255),b
 31454  010520  516E               	movf	??___xxtofl& (0+255),w,b
 31455  010522  116F               	iorwf	(??___xxtofl+1)& (0+255),w,b
 31456  010524  1170               	iorwf	(??___xxtofl+2)& (0+255),w,b
 31457  010526  1171               	iorwf	(??___xxtofl+3)& (0+255),w,b
 31458  010528  B4D8               	btfsc	status,2,c
 31459  01052A  D007               	goto	l3745
 31460  01052C  D7E1               	goto	l3743
 31461  01052E                     
 31462                           ; BSR set to: 0
 31463                           
 31464                           ; BSR set to: 0
 31465  01052E  0773               	decf	___xxtofl@exp& (0+255),f,b
 31466  010530  90D8               	bcf	status,0,c
 31467  010532  3774               	rlcf	___xxtofl@arg& (0+255),f,b
 31468  010534  3775               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 31469  010536  3776               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 31470  010538  3777               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 31471  01053A                     l3745:
 31472                           
 31473                           ; BSR set to: 0
 31474                           
 31475                           ; BSR set to: 0
 31476  01053A  BF76               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 31477  01053C  D003               	goto	u13540
 31478                           
 31479                           ; BSR set to: 0
 31480  01053E  0E02               	movlw	2
 31481  010540  6173               	cpfslt	___xxtofl@exp& (0+255),b
 31482  010542  D7F5               	goto	l3746
 31483  010544                     u13540:
 31484                           
 31485                           ; BSR set to: 0
 31486                           
 31487                           ; BSR set to: 0
 31488  010544  A173               	btfss	___xxtofl@exp& (0+255),0,b
 31489                           
 31490                           ; BSR set to: 0
 31491  010546  9F76               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 31492                           
 31493                           ; BSR set to: 0
 31494                           
 31495                           ; BSR set to: 0
 31496  010548  90D8               	bcf	status,0,c
 31497  01054A  3373               	rrcf	___xxtofl@exp& (0+255),f,b
 31498                           
 31499                           ; BSR set to: 0
 31500  01054C  C073  F06E         	movff	___xxtofl@exp,??___xxtofl
 31501  010550  6B6F               	clrf	(??___xxtofl+1)& (0+255),b
 31502  010552  6B70               	clrf	(??___xxtofl+2)& (0+255),b
 31503  010554  6B71               	clrf	(??___xxtofl+3)& (0+255),b
 31504  010556  C06E  F071         	movff	??___xxtofl,??___xxtofl+3
 31505  01055A  6B70               	clrf	(??___xxtofl+2)& (0+255),b
 31506  01055C  6B6F               	clrf	(??___xxtofl+1)& (0+255),b
 31507  01055E  6B6E               	clrf	??___xxtofl& (0+255),b
 31508  010560  516E               	movf	??___xxtofl& (0+255),w,b
 31509  010562  1374               	iorwf	___xxtofl@arg& (0+255),f,b
 31510  010564  516F               	movf	(??___xxtofl+1)& (0+255),w,b
 31511  010566  1375               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 31512  010568  5170               	movf	(??___xxtofl+2)& (0+255),w,b
 31513  01056A  1376               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 31514  01056C  5171               	movf	(??___xxtofl+3)& (0+255),w,b
 31515  01056E  1377               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 31516                           
 31517                           ; BSR set to: 0
 31518  010570  5172               	movf	___xxtofl@sign& (0+255),w,b
 31519  010572  A4D8               	btfss	status,2,c
 31520                           
 31521                           ; BSR set to: 0
 31522  010574  AF6D               	btfss	(___xxtofl@val+3)& (0+255),7,b
 31523  010576  D001               	goto	l3751
 31524                           
 31525                           ; BSR set to: 0
 31526  010578  8F77               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 31527  01057A                     l3751:
 31528                           
 31529                           ; BSR set to: 0
 31530                           
 31531                           ; BSR set to: 0
 31532  01057A  C074  F06A         	movff	___xxtofl@arg,?___xxtofl
 31533  01057E  C075  F06B         	movff	___xxtofl@arg+1,?___xxtofl+1
 31534  010582  C076  F06C         	movff	___xxtofl@arg+2,?___xxtofl+2
 31535  010586  C077  F06D         	movff	___xxtofl@arg+3,?___xxtofl+3
 31536  01058A  0012               	return	
 31537  01058C                     __end_of___xxtofl:
 31538                           	opt stack 0
 31539                           tblptru	equ	0xFF8
 31540                           tblptrh	equ	0xFF7
 31541                           tblptrl	equ	0xFF6
 31542                           tablat	equ	0xFF5
 31543                           prodh	equ	0xFF4
 31544                           prodl	equ	0xFF3
 31545                           intcon	equ	0xFF2
 31546                           postinc0	equ	0xFEE
 31547                           wreg	equ	0xFE8
 31548                           indf1	equ	0xFE7
 31549                           postinc1	equ	0xFE6
 31550                           postdec1	equ	0xFE5
 31551                           plusw1	equ	0xFE3
 31552                           fsr1h	equ	0xFE2
 31553                           fsr1l	equ	0xFE1
 31554                           indf2	equ	0xFDF
 31555                           postinc2	equ	0xFDE
 31556                           postdec2	equ	0xFDD
 31557                           plusw2	equ	0xFDB
 31558                           fsr2h	equ	0xFDA
 31559                           fsr2l	equ	0xFD9
 31560                           status	equ	0xFD8
 31561                           
 31562 ;; *************** function ___fltol *****************
 31563 ;; Defined at:
 31564 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
 31565 ;; Parameters:    Size  Location     Type
 31566 ;;  f1              4    0[BANK0 ] unsigned char 
 31567 ;; Auto vars:     Size  Location     Type
 31568 ;;  exp1            1    9[BANK0 ] unsigned char 
 31569 ;;  sign1           1    8[BANK0 ] unsigned char 
 31570 ;; Return value:  Size  Location     Type
 31571 ;;                  4    0[BANK0 ] long 
 31572 ;; Registers used:
 31573 ;;		wreg, status,2, status,0
 31574 ;; Tracked objects:
 31575 ;;		On entry : 0/0
 31576 ;;		On exit  : 0/0
 31577 ;;		Unchanged: 0/0
 31578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31579 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31580 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31581 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31582 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31583 ;;Total ram usage:       10 bytes
 31584 ;; Hardware stack levels used:    1
 31585 ;; Hardware stack levels required when called:   10
 31586 ;; This function calls:
 31587 ;;		Nothing
 31588 ;; This function is called by:
 31589 ;;		__motor_steps_from_degrees_int
 31590 ;;		_motor_calculate_position_in_degrees
 31591 ;;		__motor_get_speed_in_degrees
 31592 ;;		__step_position_from_divide_position
 31593 ;;		_motor_divide_jump_to_nearest
 31594 ;;		_motor_arc_move
 31595 ;;		_adc_read_temperature
 31596 ;;		__steps_from_degrees
 31597 ;;		__motor_steps_from_degrees_float
 31598 ;;		_motor_steps_from_degrees
 31599 ;; This function uses a non-reentrant model
 31600 ;;
 31601                           
 31602                           	psect	text124
 31603  012702                     __ptext124:
 31604                           	opt stack 0
 31605  012702                     ___fltol:
 31606                           	opt stack 18
 31607                           
 31608                           ; BSR set to: 0
 31609                           ;incstack = 0
 31610  012702  0100               	movlb	0	; () banked
 31611  012704  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
 31612  012706  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
 31613  012708  6F69               	movwf	___fltol@exp1& (0+255),b
 31614  01270A  5169               	movf	___fltol@exp1& (0+255),w,b
 31615  01270C  A4D8               	btfss	status,2,c
 31616  01270E  D009               	goto	l3380
 31617                           
 31618                           ; BSR set to: 0
 31619  012710  0E00               	movlw	0
 31620  012712  6F60               	movwf	?___fltol& (0+255),b
 31621  012714  0E00               	movlw	0
 31622  012716  6F61               	movwf	(?___fltol+1)& (0+255),b
 31623  012718  0E00               	movlw	0
 31624  01271A  6F62               	movwf	(?___fltol+2)& (0+255),b
 31625  01271C  0E00               	movlw	0
 31626  01271E  6F63               	movwf	(?___fltol+3)& (0+255),b
 31627                           
 31628                           ; BSR set to: 0
 31629  012720  0012               	return	
 31630  012722                     l3380:
 31631                           
 31632                           ; BSR set to: 0
 31633                           
 31634                           ; BSR set to: 0
 31635  012722  C060  F064         	movff	___fltol@f1,??___fltol
 31636  012726  C061  F065         	movff	___fltol@f1+1,??___fltol+1
 31637  01272A  C062  F066         	movff	___fltol@f1+2,??___fltol+2
 31638  01272E  C063  F067         	movff	___fltol@f1+3,??___fltol+3
 31639  012732  0E20               	movlw	32
 31640  012734  D005               	goto	u13420
 31641  012736                     u13425:
 31642  012736  90D8               	bcf	status,0,c
 31643  012738  3367               	rrcf	(??___fltol+3)& (0+255),f,b
 31644  01273A  3366               	rrcf	(??___fltol+2)& (0+255),f,b
 31645  01273C  3365               	rrcf	(??___fltol+1)& (0+255),f,b
 31646  01273E  3364               	rrcf	??___fltol& (0+255),f,b
 31647  012740                     u13420:
 31648  012740  2EE8               	decfsz	wreg,f,c
 31649  012742  D7F9               	goto	u13425
 31650  012744  5164               	movf	??___fltol& (0+255),w,b
 31651  012746  6F68               	movwf	___fltol@sign1& (0+255),b
 31652                           
 31653                           ; BSR set to: 0
 31654  012748  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
 31655                           
 31656                           ; BSR set to: 0
 31657  01274A  0EFF               	movlw	255
 31658  01274C  1760               	andwf	___fltol@f1& (0+255),f,b
 31659  01274E  0EFF               	movlw	255
 31660  012750  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
 31661  012752  0EFF               	movlw	255
 31662  012754  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
 31663  012756  0E00               	movlw	0
 31664  012758  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
 31665                           
 31666                           ; BSR set to: 0
 31667  01275A  0E96               	movlw	150
 31668  01275C  5F69               	subwf	___fltol@exp1& (0+255),f,b
 31669                           
 31670                           ; BSR set to: 0
 31671  01275E  AF69               	btfss	___fltol@exp1& (0+255),7,b
 31672  012760  D016               	goto	l3382
 31673                           
 31674                           ; BSR set to: 0
 31675  012762  5169               	movf	___fltol@exp1& (0+255),w,b
 31676  012764  0A80               	xorlw	128
 31677  012766  0F97               	addlw	151
 31678  012768  B0D8               	btfsc	status,0,c
 31679  01276A  D009               	goto	l3383
 31680                           
 31681                           ; BSR set to: 0
 31682  01276C  0E00               	movlw	0
 31683  01276E  6F60               	movwf	?___fltol& (0+255),b
 31684  012770  0E00               	movlw	0
 31685  012772  6F61               	movwf	(?___fltol+1)& (0+255),b
 31686  012774  0E00               	movlw	0
 31687  012776  6F62               	movwf	(?___fltol+2)& (0+255),b
 31688  012778  0E00               	movlw	0
 31689  01277A  6F63               	movwf	(?___fltol+3)& (0+255),b
 31690                           
 31691                           ; BSR set to: 0
 31692  01277C  0012               	return	
 31693  01277E                     l3383:
 31694                           
 31695                           ; BSR set to: 0
 31696                           
 31697                           ; BSR set to: 0
 31698                           
 31699                           ; BSR set to: 0
 31700  01277E  90D8               	bcf	status,0,c
 31701  012780  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
 31702  012782  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
 31703  012784  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
 31704  012786  3360               	rrcf	___fltol@f1& (0+255),f,b
 31705                           
 31706                           ; BSR set to: 0
 31707  012788  3F69               	incfsz	___fltol@exp1& (0+255),f,b
 31708  01278A  D7F9               	goto	l3383
 31709                           
 31710                           ; BSR set to: 0
 31711  01278C  D015               	goto	u13460
 31712  01278E                     l3382:
 31713                           
 31714                           ; BSR set to: 0
 31715                           
 31716                           ; BSR set to: 0
 31717  01278E  0E1F               	movlw	31
 31718  012790  6569               	cpfsgt	___fltol@exp1& (0+255),b
 31719  012792  D00F               	goto	l3388
 31720                           
 31721                           ; BSR set to: 0
 31722  012794  0E00               	movlw	0
 31723  012796  6F60               	movwf	?___fltol& (0+255),b
 31724  012798  0E00               	movlw	0
 31725  01279A  6F61               	movwf	(?___fltol+1)& (0+255),b
 31726  01279C  0E00               	movlw	0
 31727  01279E  6F62               	movwf	(?___fltol+2)& (0+255),b
 31728  0127A0  0E00               	movlw	0
 31729  0127A2  6F63               	movwf	(?___fltol+3)& (0+255),b
 31730                           
 31731                           ; BSR set to: 0
 31732  0127A4  0012               	return	
 31733  0127A6                     
 31734                           ; BSR set to: 0
 31735                           
 31736                           ; BSR set to: 0
 31737  0127A6  90D8               	bcf	status,0,c
 31738  0127A8  3760               	rlcf	___fltol@f1& (0+255),f,b
 31739  0127AA  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
 31740  0127AC  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
 31741  0127AE  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
 31742  0127B0  0769               	decf	___fltol@exp1& (0+255),f,b
 31743  0127B2                     l3388:
 31744                           
 31745                           ; BSR set to: 0
 31746                           
 31747                           ; BSR set to: 0
 31748  0127B2  5169               	movf	___fltol@exp1& (0+255),w,b
 31749  0127B4  A4D8               	btfss	status,2,c
 31750  0127B6  D7F7               	goto	l3389
 31751  0127B8                     u13460:
 31752                           
 31753                           ; BSR set to: 0
 31754                           
 31755                           ; BSR set to: 0
 31756                           
 31757                           ; BSR set to: 0
 31758  0127B8  5168               	movf	___fltol@sign1& (0+255),w,b
 31759  0127BA  B4D8               	btfsc	status,2,c
 31760  0127BC  D008               	goto	l3391
 31761                           
 31762                           ; BSR set to: 0
 31763  0127BE  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
 31764  0127C0  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
 31765  0127C2  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
 31766  0127C4  6D60               	negf	___fltol@f1& (0+255),b
 31767  0127C6  0E00               	movlw	0
 31768  0127C8  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
 31769  0127CA  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
 31770  0127CC  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
 31771  0127CE                     l3391:
 31772                           
 31773                           ; BSR set to: 0
 31774                           
 31775                           ; BSR set to: 0
 31776  0127CE  C060  F060         	movff	___fltol@f1,?___fltol
 31777  0127D2  C061  F061         	movff	___fltol@f1+1,?___fltol+1
 31778  0127D6  C062  F062         	movff	___fltol@f1+2,?___fltol+2
 31779  0127DA  C063  F063         	movff	___fltol@f1+3,?___fltol+3
 31780  0127DE  0012               	return	
 31781  0127E0                     __end_of___fltol:
 31782                           	opt stack 0
 31783                           tblptru	equ	0xFF8
 31784                           tblptrh	equ	0xFF7
 31785                           tblptrl	equ	0xFF6
 31786                           tablat	equ	0xFF5
 31787                           prodh	equ	0xFF4
 31788                           prodl	equ	0xFF3
 31789                           intcon	equ	0xFF2
 31790                           postinc0	equ	0xFEE
 31791                           wreg	equ	0xFE8
 31792                           indf1	equ	0xFE7
 31793                           postinc1	equ	0xFE6
 31794                           postdec1	equ	0xFE5
 31795                           plusw1	equ	0xFE3
 31796                           fsr1h	equ	0xFE2
 31797                           fsr1l	equ	0xFE1
 31798                           indf2	equ	0xFDF
 31799                           postinc2	equ	0xFDE
 31800                           postdec2	equ	0xFDD
 31801                           plusw2	equ	0xFDB
 31802                           fsr2h	equ	0xFDA
 31803                           fsr2l	equ	0xFD9
 31804                           status	equ	0xFD8
 31805                           
 31806 ;; *************** function ___flneg *****************
 31807 ;; Defined at:
 31808 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
 31809 ;; Parameters:    Size  Location     Type
 31810 ;;  f1              4   24[BANK0 ] long 
 31811 ;; Auto vars:     Size  Location     Type
 31812 ;;		None
 31813 ;; Return value:  Size  Location     Type
 31814 ;;                  4   24[BANK0 ] long 
 31815 ;; Registers used:
 31816 ;;		wreg, status,2, status,0
 31817 ;; Tracked objects:
 31818 ;;		On entry : 0/0
 31819 ;;		On exit  : 0/0
 31820 ;;		Unchanged: 0/0
 31821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31822 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31825 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31826 ;;Total ram usage:        4 bytes
 31827 ;; Hardware stack levels used:    1
 31828 ;; Hardware stack levels required when called:   10
 31829 ;; This function calls:
 31830 ;;		Nothing
 31831 ;; This function is called by:
 31832 ;;		_adc_read_temperature
 31833 ;;		__motor_steps_from_degrees_float
 31834 ;; This function uses a non-reentrant model
 31835 ;;
 31836                           
 31837                           	psect	text125
 31838  015AA2                     __ptext125:
 31839                           	opt stack 0
 31840  015AA2                     ___flneg:
 31841                           	opt stack 19
 31842                           
 31843                           ; BSR set to: 0
 31844                           ;incstack = 0
 31845  015AA2  0100               	movlb	0	; () banked
 31846  015AA4  5178               	movf	___flneg@f1& (0+255),w,b
 31847  015AA6  1179               	iorwf	(___flneg@f1+1)& (0+255),w,b
 31848  015AA8  117A               	iorwf	(___flneg@f1+2)& (0+255),w,b
 31849  015AAA  117B               	iorwf	(___flneg@f1+3)& (0+255),w,b
 31850  015AAC  B4D8               	btfsc	status,2,c
 31851  015AAE  D008               	goto	l3357
 31852                           
 31853                           ; BSR set to: 0
 31854  015AB0  0E00               	movlw	0
 31855  015AB2  1B78               	xorwf	___flneg@f1& (0+255),f,b
 31856  015AB4  0E00               	movlw	0
 31857  015AB6  1B79               	xorwf	(___flneg@f1+1)& (0+255),f,b
 31858  015AB8  0E00               	movlw	0
 31859  015ABA  1B7A               	xorwf	(___flneg@f1+2)& (0+255),f,b
 31860  015ABC  0E80               	movlw	128
 31861  015ABE  1B7B               	xorwf	(___flneg@f1+3)& (0+255),f,b
 31862  015AC0                     l3357:
 31863                           
 31864                           ; BSR set to: 0
 31865                           
 31866                           ; BSR set to: 0
 31867  015AC0  C078  F078         	movff	___flneg@f1,?___flneg
 31868  015AC4  C079  F079         	movff	___flneg@f1+1,?___flneg+1
 31869  015AC8  C07A  F07A         	movff	___flneg@f1+2,?___flneg+2
 31870  015ACC  C07B  F07B         	movff	___flneg@f1+3,?___flneg+3
 31871  015AD0  0012               	return	
 31872  015AD2                     __end_of___flneg:
 31873                           	opt stack 0
 31874                           tblptru	equ	0xFF8
 31875                           tblptrh	equ	0xFF7
 31876                           tblptrl	equ	0xFF6
 31877                           tablat	equ	0xFF5
 31878                           prodh	equ	0xFF4
 31879                           prodl	equ	0xFF3
 31880                           intcon	equ	0xFF2
 31881                           postinc0	equ	0xFEE
 31882                           wreg	equ	0xFE8
 31883                           indf1	equ	0xFE7
 31884                           postinc1	equ	0xFE6
 31885                           postdec1	equ	0xFE5
 31886                           plusw1	equ	0xFE3
 31887                           fsr1h	equ	0xFE2
 31888                           fsr1l	equ	0xFE1
 31889                           indf2	equ	0xFDF
 31890                           postinc2	equ	0xFDE
 31891                           postdec2	equ	0xFDD
 31892                           plusw2	equ	0xFDB
 31893                           fsr2h	equ	0xFDA
 31894                           fsr2l	equ	0xFD9
 31895                           status	equ	0xFD8
 31896                           
 31897 ;; *************** function ___flmul *****************
 31898 ;; Defined at:
 31899 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
 31900 ;; Parameters:    Size  Location     Type
 31901 ;;  b               4   24[BANK0 ] long 
 31902 ;;  a               4   28[BANK0 ] long 
 31903 ;; Auto vars:     Size  Location     Type
 31904 ;;  prod            4   43[BANK0 ] struct .
 31905 ;;  grs             4   37[BANK0 ] unsigned long 
 31906 ;;  temp            2   47[BANK0 ] struct .
 31907 ;;  bexp            1   42[BANK0 ] unsigned char 
 31908 ;;  aexp            1   41[BANK0 ] unsigned char 
 31909 ;;  sign            1   36[BANK0 ] unsigned char 
 31910 ;; Return value:  Size  Location     Type
 31911 ;;                  4   24[BANK0 ] unsigned char 
 31912 ;; Registers used:
 31913 ;;		wreg, status,2, status,0, prodl, prodh
 31914 ;; Tracked objects:
 31915 ;;		On entry : 0/0
 31916 ;;		On exit  : 0/0
 31917 ;;		Unchanged: 0/0
 31918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31919 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31920 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31921 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31922 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31923 ;;Total ram usage:       25 bytes
 31924 ;; Hardware stack levels used:    1
 31925 ;; Hardware stack levels required when called:   10
 31926 ;; This function calls:
 31927 ;;		Nothing
 31928 ;; This function is called by:
 31929 ;;		__motor_steps_from_degrees_int
 31930 ;;		_motor_calculate_position_in_degrees
 31931 ;;		__step_position_from_divide_position
 31932 ;;		_motor_divide_jump_to_nearest
 31933 ;;		_motor_arc_move
 31934 ;;		_adc_read_temperature
 31935 ;;		__steps_from_degrees
 31936 ;;		__motor_steps_from_degrees_float
 31937 ;;		_motor_steps_from_degrees
 31938 ;; This function uses a non-reentrant model
 31939 ;;
 31940                           
 31941                           	psect	text126
 31942  00C9B6                     __ptext126:
 31943                           	opt stack 0
 31944  00C9B6                     ___flmul:
 31945                           	opt stack 18
 31946                           
 31947                           ; BSR set to: 0
 31948                           ;incstack = 0
 31949  00C9B6  0100               	movlb	0	; () banked
 31950  00C9B8  517B               	movf	(___flmul@b+3)& (0+255),w,b
 31951  00C9BA  0B80               	andlw	128
 31952  00C9BC  6F84               	movwf	___flmul@sign& (0+255),b
 31953  00C9BE  517B               	movf	(___flmul@b+3)& (0+255),w,b
 31954  00C9C0  257B               	addwf	(___flmul@b+3)& (0+255),w,b
 31955  00C9C2  6F8A               	movwf	___flmul@bexp& (0+255),b
 31956                           
 31957                           ; BSR set to: 0
 31958  00C9C4  BF7A               	btfsc	(___flmul@b+2)& (0+255),7,b
 31959                           
 31960                           ; BSR set to: 0
 31961  00C9C6  818A               	bsf	___flmul@bexp& (0+255),0,b
 31962                           
 31963                           ; BSR set to: 0
 31964                           
 31965                           ; BSR set to: 0
 31966  00C9C8  518A               	movf	___flmul@bexp& (0+255),w,b
 31967  00C9CA  B4D8               	btfsc	status,2,c
 31968  00C9CC  D00D               	goto	l3688
 31969                           
 31970                           ; BSR set to: 0
 31971  00C9CE  298A               	incf	___flmul@bexp& (0+255),w,b
 31972  00C9D0  A4D8               	btfss	status,2,c
 31973  00C9D2  D008               	goto	l3689
 31974                           
 31975                           ; BSR set to: 0
 31976  00C9D4  0E00               	movlw	0
 31977  00C9D6  6F78               	movwf	___flmul@b& (0+255),b
 31978  00C9D8  0E00               	movlw	0
 31979  00C9DA  6F79               	movwf	(___flmul@b+1)& (0+255),b
 31980  00C9DC  0E00               	movlw	0
 31981  00C9DE  6F7A               	movwf	(___flmul@b+2)& (0+255),b
 31982  00C9E0  0E00               	movlw	0
 31983  00C9E2  6F7B               	movwf	(___flmul@b+3)& (0+255),b
 31984  00C9E4                     l3689:
 31985                           
 31986                           ; BSR set to: 0
 31987                           
 31988                           ; BSR set to: 0
 31989  00C9E4  8F7A               	bsf	(___flmul@b+2)& (0+255),7,b
 31990  00C9E6  D008               	goto	l3690
 31991  00C9E8                     l3688:
 31992                           
 31993                           ; BSR set to: 0
 31994                           
 31995                           ; BSR set to: 0
 31996  00C9E8  0E00               	movlw	0
 31997  00C9EA  6F78               	movwf	___flmul@b& (0+255),b
 31998  00C9EC  0E00               	movlw	0
 31999  00C9EE  6F79               	movwf	(___flmul@b+1)& (0+255),b
 32000  00C9F0  0E00               	movlw	0
 32001  00C9F2  6F7A               	movwf	(___flmul@b+2)& (0+255),b
 32002  00C9F4  0E00               	movlw	0
 32003  00C9F6  6F7B               	movwf	(___flmul@b+3)& (0+255),b
 32004  00C9F8                     l3690:
 32005                           
 32006                           ; BSR set to: 0
 32007                           
 32008                           ; BSR set to: 0
 32009  00C9F8  517F               	movf	(___flmul@a+3)& (0+255),w,b
 32010  00C9FA  0B80               	andlw	128
 32011  00C9FC  1B84               	xorwf	___flmul@sign& (0+255),f,b
 32012                           
 32013                           ; BSR set to: 0
 32014  00C9FE  517F               	movf	(___flmul@a+3)& (0+255),w,b
 32015  00CA00  257F               	addwf	(___flmul@a+3)& (0+255),w,b
 32016  00CA02  6F89               	movwf	___flmul@aexp& (0+255),b
 32017                           
 32018                           ; BSR set to: 0
 32019  00CA04  BF7E               	btfsc	(___flmul@a+2)& (0+255),7,b
 32020                           
 32021                           ; BSR set to: 0
 32022  00CA06  8189               	bsf	___flmul@aexp& (0+255),0,b
 32023                           
 32024                           ; BSR set to: 0
 32025                           
 32026                           ; BSR set to: 0
 32027  00CA08  5189               	movf	___flmul@aexp& (0+255),w,b
 32028  00CA0A  B4D8               	btfsc	status,2,c
 32029  00CA0C  D00D               	goto	l3692
 32030                           
 32031                           ; BSR set to: 0
 32032  00CA0E  2989               	incf	___flmul@aexp& (0+255),w,b
 32033  00CA10  A4D8               	btfss	status,2,c
 32034  00CA12  D008               	goto	l3693
 32035                           
 32036                           ; BSR set to: 0
 32037  00CA14  0E00               	movlw	0
 32038  00CA16  6F7C               	movwf	___flmul@a& (0+255),b
 32039  00CA18  0E00               	movlw	0
 32040  00CA1A  6F7D               	movwf	(___flmul@a+1)& (0+255),b
 32041  00CA1C  0E00               	movlw	0
 32042  00CA1E  6F7E               	movwf	(___flmul@a+2)& (0+255),b
 32043  00CA20  0E00               	movlw	0
 32044  00CA22  6F7F               	movwf	(___flmul@a+3)& (0+255),b
 32045  00CA24                     l3693:
 32046                           
 32047                           ; BSR set to: 0
 32048                           
 32049                           ; BSR set to: 0
 32050  00CA24  8F7E               	bsf	(___flmul@a+2)& (0+255),7,b
 32051  00CA26  D008               	goto	l3694
 32052  00CA28                     l3692:
 32053                           
 32054                           ; BSR set to: 0
 32055                           
 32056                           ; BSR set to: 0
 32057  00CA28  0E00               	movlw	0
 32058  00CA2A  6F7C               	movwf	___flmul@a& (0+255),b
 32059  00CA2C  0E00               	movlw	0
 32060  00CA2E  6F7D               	movwf	(___flmul@a+1)& (0+255),b
 32061  00CA30  0E00               	movlw	0
 32062  00CA32  6F7E               	movwf	(___flmul@a+2)& (0+255),b
 32063  00CA34  0E00               	movlw	0
 32064  00CA36  6F7F               	movwf	(___flmul@a+3)& (0+255),b
 32065  00CA38                     l3694:
 32066                           
 32067                           ; BSR set to: 0
 32068  00CA38  5189               	movf	___flmul@aexp& (0+255),w,b
 32069  00CA3A  B4D8               	btfsc	status,2,c
 32070  00CA3C  D003               	goto	u13240
 32071                           
 32072                           ; BSR set to: 0
 32073  00CA3E  518A               	movf	___flmul@bexp& (0+255),w,b
 32074  00CA40  A4D8               	btfss	status,2,c
 32075  00CA42  D009               	goto	l3695
 32076  00CA44                     u13240:
 32077                           
 32078                           ; BSR set to: 0
 32079                           
 32080                           ; BSR set to: 0
 32081  00CA44  0E00               	movlw	0
 32082  00CA46  6F78               	movwf	?___flmul& (0+255),b
 32083  00CA48  0E00               	movlw	0
 32084  00CA4A  6F79               	movwf	(?___flmul+1)& (0+255),b
 32085  00CA4C  0E00               	movlw	0
 32086  00CA4E  6F7A               	movwf	(?___flmul+2)& (0+255),b
 32087  00CA50  0E00               	movlw	0
 32088  00CA52  6F7B               	movwf	(?___flmul+3)& (0+255),b
 32089                           
 32090                           ; BSR set to: 0
 32091  00CA54  0012               	return	
 32092  00CA56                     l3695:
 32093                           
 32094                           ; BSR set to: 0
 32095                           
 32096                           ; BSR set to: 0
 32097  00CA56  517E               	movf	(___flmul@a+2)& (0+255),w,b
 32098  00CA58  0378               	mulwf	___flmul@b& (0+255),b
 32099  00CA5A  CFF3 F08F          	movff	prodl,___flmul@temp
 32100  00CA5E  CFF4 F090          	movff	prodh,___flmul@temp+1
 32101                           
 32102                           ; BSR set to: 0
 32103  00CA62  518F               	movf	___flmul@temp& (0+255),w,b
 32104  00CA64  6F85               	movwf	___flmul@grs& (0+255),b
 32105  00CA66  6B86               	clrf	(___flmul@grs+1)& (0+255),b
 32106  00CA68  6B87               	clrf	(___flmul@grs+2)& (0+255),b
 32107  00CA6A  6B88               	clrf	(___flmul@grs+3)& (0+255),b
 32108                           
 32109                           ; BSR set to: 0
 32110  00CA6C  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32111  00CA6E  6F8B               	movwf	___flmul@prod& (0+255),b
 32112  00CA70  6B8C               	clrf	(___flmul@prod+1)& (0+255),b
 32113  00CA72  6B8D               	clrf	(___flmul@prod+2)& (0+255),b
 32114  00CA74  6B8E               	clrf	(___flmul@prod+3)& (0+255),b
 32115  00CA76  517D               	movf	(___flmul@a+1)& (0+255),w,b
 32116  00CA78  0379               	mulwf	(___flmul@b+1)& (0+255),b
 32117  00CA7A  CFF3 F08F          	movff	prodl,___flmul@temp
 32118  00CA7E  CFF4 F090          	movff	prodh,___flmul@temp+1
 32119                           
 32120                           ; BSR set to: 0
 32121  00CA82  518F               	movf	___flmul@temp& (0+255),w,b
 32122  00CA84  2785               	addwf	___flmul@grs& (0+255),f,b
 32123  00CA86  0E00               	movlw	0
 32124  00CA88  2386               	addwfc	(___flmul@grs+1)& (0+255),f,b
 32125  00CA8A  2387               	addwfc	(___flmul@grs+2)& (0+255),f,b
 32126  00CA8C  2388               	addwfc	(___flmul@grs+3)& (0+255),f,b
 32127                           
 32128                           ; BSR set to: 0
 32129  00CA8E  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32130  00CA90  278B               	addwf	___flmul@prod& (0+255),f,b
 32131  00CA92  0E00               	movlw	0
 32132  00CA94  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32133  00CA96  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32134  00CA98  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32135  00CA9A  517C               	movf	___flmul@a& (0+255),w,b
 32136  00CA9C  037A               	mulwf	(___flmul@b+2)& (0+255),b
 32137  00CA9E  CFF3 F08F          	movff	prodl,___flmul@temp
 32138  00CAA2  CFF4 F090          	movff	prodh,___flmul@temp+1
 32139                           
 32140                           ; BSR set to: 0
 32141  00CAA6  518F               	movf	___flmul@temp& (0+255),w,b
 32142  00CAA8  2785               	addwf	___flmul@grs& (0+255),f,b
 32143  00CAAA  0E00               	movlw	0
 32144  00CAAC  2386               	addwfc	(___flmul@grs+1)& (0+255),f,b
 32145  00CAAE  2387               	addwfc	(___flmul@grs+2)& (0+255),f,b
 32146  00CAB0  2388               	addwfc	(___flmul@grs+3)& (0+255),f,b
 32147                           
 32148                           ; BSR set to: 0
 32149  00CAB2  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32150  00CAB4  278B               	addwf	___flmul@prod& (0+255),f,b
 32151  00CAB6  0E00               	movlw	0
 32152  00CAB8  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32153  00CABA  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32154  00CABC  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32155                           
 32156                           ; BSR set to: 0
 32157  00CABE  C087  F088         	movff	___flmul@grs+2,___flmul@grs+3
 32158  00CAC2  C086  F087         	movff	___flmul@grs+1,___flmul@grs+2
 32159  00CAC6  C085  F086         	movff	___flmul@grs,___flmul@grs+1
 32160  00CACA  6B85               	clrf	___flmul@grs& (0+255),b
 32161                           
 32162                           ; BSR set to: 0
 32163  00CACC  517C               	movf	___flmul@a& (0+255),w,b
 32164  00CACE  0379               	mulwf	(___flmul@b+1)& (0+255),b
 32165  00CAD0  CFF3 F08F          	movff	prodl,___flmul@temp
 32166  00CAD4  CFF4 F090          	movff	prodh,___flmul@temp+1
 32167                           
 32168                           ; BSR set to: 0
 32169  00CAD8  518F               	movf	___flmul@temp& (0+255),w,b
 32170  00CADA  2785               	addwf	___flmul@grs& (0+255),f,b
 32171  00CADC  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32172  00CADE  2386               	addwfc	(___flmul@grs+1)& (0+255),f,b
 32173  00CAE0  0E00               	movlw	0
 32174  00CAE2  2387               	addwfc	(___flmul@grs+2)& (0+255),f,b
 32175  00CAE4  0E00               	movlw	0
 32176  00CAE6  2388               	addwfc	(___flmul@grs+3)& (0+255),f,b
 32177                           
 32178                           ; BSR set to: 0
 32179  00CAE8  517D               	movf	(___flmul@a+1)& (0+255),w,b
 32180  00CAEA  0378               	mulwf	___flmul@b& (0+255),b
 32181  00CAEC  CFF3 F08F          	movff	prodl,___flmul@temp
 32182  00CAF0  CFF4 F090          	movff	prodh,___flmul@temp+1
 32183                           
 32184                           ; BSR set to: 0
 32185  00CAF4  518F               	movf	___flmul@temp& (0+255),w,b
 32186  00CAF6  2785               	addwf	___flmul@grs& (0+255),f,b
 32187  00CAF8  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32188  00CAFA  2386               	addwfc	(___flmul@grs+1)& (0+255),f,b
 32189  00CAFC  0E00               	movlw	0
 32190  00CAFE  2387               	addwfc	(___flmul@grs+2)& (0+255),f,b
 32191  00CB00  0E00               	movlw	0
 32192  00CB02  2388               	addwfc	(___flmul@grs+3)& (0+255),f,b
 32193                           
 32194                           ; BSR set to: 0
 32195  00CB04  C087  F088         	movff	___flmul@grs+2,___flmul@grs+3
 32196  00CB08  C086  F087         	movff	___flmul@grs+1,___flmul@grs+2
 32197  00CB0C  C085  F086         	movff	___flmul@grs,___flmul@grs+1
 32198  00CB10  6B85               	clrf	___flmul@grs& (0+255),b
 32199  00CB12  517C               	movf	___flmul@a& (0+255),w,b
 32200  00CB14  0378               	mulwf	___flmul@b& (0+255),b
 32201  00CB16  CFF3 F08F          	movff	prodl,___flmul@temp
 32202  00CB1A  CFF4 F090          	movff	prodh,___flmul@temp+1
 32203                           
 32204                           ; BSR set to: 0
 32205  00CB1E  518F               	movf	___flmul@temp& (0+255),w,b
 32206  00CB20  2785               	addwf	___flmul@grs& (0+255),f,b
 32207  00CB22  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32208  00CB24  2386               	addwfc	(___flmul@grs+1)& (0+255),f,b
 32209  00CB26  0E00               	movlw	0
 32210  00CB28  2387               	addwfc	(___flmul@grs+2)& (0+255),f,b
 32211  00CB2A  0E00               	movlw	0
 32212  00CB2C  2388               	addwfc	(___flmul@grs+3)& (0+255),f,b
 32213                           
 32214                           ; BSR set to: 0
 32215  00CB2E  517E               	movf	(___flmul@a+2)& (0+255),w,b
 32216  00CB30  0379               	mulwf	(___flmul@b+1)& (0+255),b
 32217  00CB32  CFF3 F08F          	movff	prodl,___flmul@temp
 32218  00CB36  CFF4 F090          	movff	prodh,___flmul@temp+1
 32219  00CB3A  518F               	movf	___flmul@temp& (0+255),w,b
 32220  00CB3C  278B               	addwf	___flmul@prod& (0+255),f,b
 32221  00CB3E  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32222  00CB40  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32223  00CB42  0E00               	movlw	0
 32224  00CB44  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32225  00CB46  0E00               	movlw	0
 32226  00CB48  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32227                           
 32228                           ; BSR set to: 0
 32229  00CB4A  517D               	movf	(___flmul@a+1)& (0+255),w,b
 32230  00CB4C  037A               	mulwf	(___flmul@b+2)& (0+255),b
 32231  00CB4E  CFF3 F08F          	movff	prodl,___flmul@temp
 32232  00CB52  CFF4 F090          	movff	prodh,___flmul@temp+1
 32233                           
 32234                           ; BSR set to: 0
 32235  00CB56  518F               	movf	___flmul@temp& (0+255),w,b
 32236  00CB58  278B               	addwf	___flmul@prod& (0+255),f,b
 32237  00CB5A  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32238  00CB5C  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32239  00CB5E  0E00               	movlw	0
 32240  00CB60  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32241  00CB62  0E00               	movlw	0
 32242  00CB64  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32243  00CB66  517E               	movf	(___flmul@a+2)& (0+255),w,b
 32244  00CB68  037A               	mulwf	(___flmul@b+2)& (0+255),b
 32245  00CB6A  CFF3 F08F          	movff	prodl,___flmul@temp
 32246  00CB6E  CFF4 F090          	movff	prodh,___flmul@temp+1
 32247                           
 32248                           ; BSR set to: 0
 32249  00CB72  518F               	movf	___flmul@temp& (0+255),w,b
 32250  00CB74  6F80               	movwf	??___flmul& (0+255),b
 32251  00CB76  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32252  00CB78  6F81               	movwf	(??___flmul+1)& (0+255),b
 32253  00CB7A  6B82               	clrf	(??___flmul+2)& (0+255),b
 32254  00CB7C  6B83               	clrf	(??___flmul+3)& (0+255),b
 32255  00CB7E  C082  F083         	movff	??___flmul+2,??___flmul+3
 32256  00CB82  C081  F082         	movff	??___flmul+1,??___flmul+2
 32257  00CB86  C080  F081         	movff	??___flmul,??___flmul+1
 32258  00CB8A  6B80               	clrf	??___flmul& (0+255),b
 32259  00CB8C  5180               	movf	??___flmul& (0+255),w,b
 32260  00CB8E  278B               	addwf	___flmul@prod& (0+255),f,b
 32261  00CB90  5181               	movf	(??___flmul+1)& (0+255),w,b
 32262  00CB92  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32263  00CB94  5182               	movf	(??___flmul+2)& (0+255),w,b
 32264  00CB96  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32265  00CB98  5183               	movf	(??___flmul+3)& (0+255),w,b
 32266  00CB9A  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32267                           
 32268                           ; BSR set to: 0
 32269  00CB9C  C085  F080         	movff	___flmul@grs,??___flmul
 32270  00CBA0  C086  F081         	movff	___flmul@grs+1,??___flmul+1
 32271  00CBA4  C087  F082         	movff	___flmul@grs+2,??___flmul+2
 32272  00CBA8  C088  F083         	movff	___flmul@grs+3,??___flmul+3
 32273  00CBAC  0E19               	movlw	25
 32274  00CBAE  D005               	goto	u13250
 32275  00CBB0                     u13255:
 32276  00CBB0  90D8               	bcf	status,0,c
 32277  00CBB2  3383               	rrcf	(??___flmul+3)& (0+255),f,b
 32278  00CBB4  3382               	rrcf	(??___flmul+2)& (0+255),f,b
 32279  00CBB6  3381               	rrcf	(??___flmul+1)& (0+255),f,b
 32280  00CBB8  3380               	rrcf	??___flmul& (0+255),f,b
 32281  00CBBA                     u13250:
 32282  00CBBA  2EE8               	decfsz	wreg,f,c
 32283  00CBBC  D7F9               	goto	u13255
 32284  00CBBE  5180               	movf	??___flmul& (0+255),w,b
 32285  00CBC0  278B               	addwf	___flmul@prod& (0+255),f,b
 32286  00CBC2  5181               	movf	(??___flmul+1)& (0+255),w,b
 32287  00CBC4  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32288  00CBC6  5182               	movf	(??___flmul+2)& (0+255),w,b
 32289  00CBC8  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32290  00CBCA  5183               	movf	(??___flmul+3)& (0+255),w,b
 32291  00CBCC  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32292                           
 32293                           ; BSR set to: 0
 32294  00CBCE  C087  F088         	movff	___flmul@grs+2,___flmul@grs+3
 32295  00CBD2  C086  F087         	movff	___flmul@grs+1,___flmul@grs+2
 32296  00CBD6  C085  F086         	movff	___flmul@grs,___flmul@grs+1
 32297  00CBDA  6B85               	clrf	___flmul@grs& (0+255),b
 32298                           
 32299                           ; BSR set to: 0
 32300  00CBDC  5189               	movf	___flmul@aexp& (0+255),w,b
 32301  00CBDE  C08A  F080         	movff	___flmul@bexp,??___flmul
 32302  00CBE2  6B81               	clrf	(??___flmul+1)& (0+255),b
 32303  00CBE4  2780               	addwf	??___flmul& (0+255),f,b
 32304  00CBE6  0E00               	movlw	0
 32305  00CBE8  2381               	addwfc	(??___flmul+1)& (0+255),f,b
 32306  00CBEA  0E82               	movlw	130
 32307  00CBEC  2580               	addwf	??___flmul& (0+255),w,b
 32308  00CBEE  6F8F               	movwf	___flmul@temp& (0+255),b
 32309  00CBF0  0EFF               	movlw	255
 32310  00CBF2  2181               	addwfc	(??___flmul+1)& (0+255),w,b
 32311  00CBF4  6F90               	movwf	(___flmul@temp+1)& (0+255),b
 32312  00CBF6  D00F               	goto	l3699
 32313  00CBF8                     
 32314                           ; BSR set to: 0
 32315                           
 32316                           ; BSR set to: 0
 32317  00CBF8  90D8               	bcf	status,0,c
 32318  00CBFA  378B               	rlcf	___flmul@prod& (0+255),f,b
 32319  00CBFC  378C               	rlcf	(___flmul@prod+1)& (0+255),f,b
 32320  00CBFE  378D               	rlcf	(___flmul@prod+2)& (0+255),f,b
 32321  00CC00  378E               	rlcf	(___flmul@prod+3)& (0+255),f,b
 32322                           
 32323                           ; BSR set to: 0
 32324  00CC02  BF88               	btfsc	(___flmul@grs+3)& (0+255),7,b
 32325                           
 32326                           ; BSR set to: 0
 32327  00CC04  818B               	bsf	___flmul@prod& (0+255),0,b
 32328                           
 32329                           ; BSR set to: 0
 32330  00CC06  90D8               	bcf	status,0,c
 32331  00CC08  3785               	rlcf	___flmul@grs& (0+255),f,b
 32332  00CC0A  3786               	rlcf	(___flmul@grs+1)& (0+255),f,b
 32333  00CC0C  3787               	rlcf	(___flmul@grs+2)& (0+255),f,b
 32334  00CC0E  3788               	rlcf	(___flmul@grs+3)& (0+255),f,b
 32335  00CC10  078F               	decf	___flmul@temp& (0+255),f,b
 32336  00CC12  A0D8               	btfss	status,0,c
 32337  00CC14  0790               	decf	(___flmul@temp+1)& (0+255),f,b
 32338  00CC16                     l3699:
 32339                           
 32340                           ; BSR set to: 0
 32341                           
 32342                           ; BSR set to: 0
 32343  00CC16  AF8D               	btfss	(___flmul@prod+2)& (0+255),7,b
 32344  00CC18  D7EF               	goto	l3700
 32345                           
 32346                           ; BSR set to: 0
 32347                           
 32348                           ; BSR set to: 0
 32349  00CC1A  0E00               	movlw	0
 32350  00CC1C  6F89               	movwf	___flmul@aexp& (0+255),b
 32351                           
 32352                           ; BSR set to: 0
 32353  00CC1E  AF88               	btfss	(___flmul@grs+3)& (0+255),7,b
 32354  00CC20  D016               	goto	l3706
 32355                           
 32356                           ; BSR set to: 0
 32357  00CC22  0EFF               	movlw	255
 32358  00CC24  1585               	andwf	___flmul@grs& (0+255),w,b
 32359  00CC26  6F80               	movwf	??___flmul& (0+255),b
 32360  00CC28  0EFF               	movlw	255
 32361  00CC2A  1586               	andwf	(___flmul@grs+1)& (0+255),w,b
 32362  00CC2C  6F81               	movwf	(??___flmul+1)& (0+255),b
 32363  00CC2E  0EFF               	movlw	255
 32364  00CC30  1587               	andwf	(___flmul@grs+2)& (0+255),w,b
 32365  00CC32  6F82               	movwf	(??___flmul+2)& (0+255),b
 32366  00CC34  0E7F               	movlw	127
 32367  00CC36  1588               	andwf	(___flmul@grs+3)& (0+255),w,b
 32368  00CC38  6F83               	movwf	(??___flmul+3)& (0+255),b
 32369  00CC3A  5180               	movf	??___flmul& (0+255),w,b
 32370  00CC3C  1181               	iorwf	(??___flmul+1)& (0+255),w,b
 32371  00CC3E  1182               	iorwf	(??___flmul+2)& (0+255),w,b
 32372  00CC40  1183               	iorwf	(??___flmul+3)& (0+255),w,b
 32373  00CC42  A4D8               	btfss	status,2,c
 32374  00CC44  D002               	goto	u13300
 32375                           
 32376                           ; BSR set to: 0
 32377                           
 32378                           ; BSR set to: 0
 32379  00CC46  A18B               	btfss	___flmul@prod& (0+255),0,b
 32380  00CC48  D002               	goto	l3706
 32381  00CC4A                     u13300:
 32382                           
 32383                           ; BSR set to: 0
 32384  00CC4A  0E01               	movlw	1
 32385  00CC4C  6F89               	movwf	___flmul@aexp& (0+255),b
 32386  00CC4E                     l3706:
 32387                           
 32388                           ; BSR set to: 0
 32389                           
 32390                           ; BSR set to: 0
 32391                           
 32392                           ; BSR set to: 0
 32393  00CC4E  5189               	movf	___flmul@aexp& (0+255),w,b
 32394  00CC50  B4D8               	btfsc	status,2,c
 32395  00CC52  D01F               	goto	l3708
 32396                           
 32397                           ; BSR set to: 0
 32398  00CC54  0E01               	movlw	1
 32399  00CC56  278B               	addwf	___flmul@prod& (0+255),f,b
 32400  00CC58  0E00               	movlw	0
 32401  00CC5A  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32402  00CC5C  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32403  00CC5E  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32404                           
 32405                           ; BSR set to: 0
 32406  00CC60  A18E               	btfss	(___flmul@prod+3)& (0+255),0,b
 32407  00CC62  D017               	goto	l3708
 32408                           
 32409                           ; BSR set to: 0
 32410  00CC64  C08B  F080         	movff	___flmul@prod,??___flmul
 32411  00CC68  C08C  F081         	movff	___flmul@prod+1,??___flmul+1
 32412  00CC6C  C08D  F082         	movff	___flmul@prod+2,??___flmul+2
 32413  00CC70  C08E  F083         	movff	___flmul@prod+3,??___flmul+3
 32414  00CC74  3583               	rlcf	(??___flmul+3)& (0+255),w,b
 32415  00CC76  3383               	rrcf	(??___flmul+3)& (0+255),f,b
 32416  00CC78  3382               	rrcf	(??___flmul+2)& (0+255),f,b
 32417  00CC7A  3381               	rrcf	(??___flmul+1)& (0+255),f,b
 32418  00CC7C  3380               	rrcf	??___flmul& (0+255),f,b
 32419  00CC7E  C080  F08B         	movff	??___flmul,___flmul@prod
 32420  00CC82  C081  F08C         	movff	??___flmul+1,___flmul@prod+1
 32421  00CC86  C082  F08D         	movff	??___flmul+2,___flmul@prod+2
 32422  00CC8A  C083  F08E         	movff	??___flmul+3,___flmul@prod+3
 32423                           
 32424                           ; BSR set to: 0
 32425  00CC8E  4B8F               	infsnz	___flmul@temp& (0+255),f,b
 32426  00CC90  2B90               	incf	(___flmul@temp+1)& (0+255),f,b
 32427  00CC92                     l3708:
 32428                           
 32429                           ; BSR set to: 0
 32430                           
 32431                           ; BSR set to: 0
 32432                           
 32433                           ; BSR set to: 0
 32434  00CC92  BF90               	btfsc	(___flmul@temp+1)& (0+255),7,b
 32435  00CC94  D00D               	goto	l3709
 32436  00CC96  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32437  00CC98  E103               	bnz	u13330
 32438  00CC9A  298F               	incf	___flmul@temp& (0+255),w,b
 32439  00CC9C  A0D8               	btfss	status,0,c
 32440  00CC9E  D008               	goto	l3709
 32441  00CCA0                     u13330:
 32442                           
 32443                           ; BSR set to: 0
 32444  00CCA0  0E00               	movlw	0
 32445  00CCA2  6F8B               	movwf	___flmul@prod& (0+255),b
 32446  00CCA4  0E00               	movlw	0
 32447  00CCA6  6F8C               	movwf	(___flmul@prod+1)& (0+255),b
 32448  00CCA8  0E80               	movlw	128
 32449  00CCAA  6F8D               	movwf	(___flmul@prod+2)& (0+255),b
 32450  00CCAC  0E7F               	movlw	127
 32451  00CCAE  D020               	goto	L42
 32452  00CCB0                     l3709:
 32453                           
 32454                           ; BSR set to: 0
 32455                           
 32456                           ; BSR set to: 0
 32457  00CCB0  BF90               	btfsc	(___flmul@temp+1)& (0+255),7,b
 32458  00CCB2  D005               	goto	u13340
 32459  00CCB4  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32460  00CCB6  E10E               	bnz	l3711
 32461  00CCB8  058F               	decf	___flmul@temp& (0+255),w,b
 32462  00CCBA  B0D8               	btfsc	status,0,c
 32463  00CCBC  D00B               	goto	l3711
 32464  00CCBE                     u13340:
 32465                           
 32466                           ; BSR set to: 0
 32467  00CCBE  0E00               	movlw	0
 32468  00CCC0  6F8B               	movwf	___flmul@prod& (0+255),b
 32469  00CCC2  0E00               	movlw	0
 32470  00CCC4  6F8C               	movwf	(___flmul@prod+1)& (0+255),b
 32471  00CCC6  0E00               	movlw	0
 32472  00CCC8  6F8D               	movwf	(___flmul@prod+2)& (0+255),b
 32473  00CCCA  0E00               	movlw	0
 32474  00CCCC  6F8E               	movwf	(___flmul@prod+3)& (0+255),b
 32475  00CCCE  0E00               	movlw	0
 32476  00CCD0  6F84               	movwf	___flmul@sign& (0+255),b
 32477  00CCD2  D00F               	goto	l3712
 32478  00CCD4                     l3711:
 32479                           
 32480                           ; BSR set to: 0
 32481  00CCD4  C08F  F08A         	movff	___flmul@temp,___flmul@bexp
 32482                           
 32483                           ; BSR set to: 0
 32484  00CCD8  0EFF               	movlw	255
 32485  00CCDA  178B               	andwf	___flmul@prod& (0+255),f,b
 32486  00CCDC  0EFF               	movlw	255
 32487  00CCDE  178C               	andwf	(___flmul@prod+1)& (0+255),f,b
 32488  00CCE0  0E7F               	movlw	127
 32489  00CCE2  178D               	andwf	(___flmul@prod+2)& (0+255),f,b
 32490  00CCE4  0E00               	movlw	0
 32491  00CCE6  178E               	andwf	(___flmul@prod+3)& (0+255),f,b
 32492                           
 32493                           ; BSR set to: 0
 32494  00CCE8  B18A               	btfsc	___flmul@bexp& (0+255),0,b
 32495                           
 32496                           ; BSR set to: 0
 32497  00CCEA  8F8D               	bsf	(___flmul@prod+2)& (0+255),7,b
 32498                           
 32499                           ; BSR set to: 0
 32500                           
 32501                           ; BSR set to: 0
 32502  00CCEC  90D8               	bcf	status,0,c
 32503  00CCEE  318A               	rrcf	___flmul@bexp& (0+255),w,b
 32504  00CCF0                     L42:
 32505  00CCF0  6F8E               	movwf	(___flmul@prod+3)& (0+255),b
 32506  00CCF2                     l3712:
 32507                           
 32508                           ; BSR set to: 0
 32509                           
 32510                           ; BSR set to: 0
 32511                           
 32512                           ; BSR set to: 0
 32513  00CCF2  5184               	movf	___flmul@sign& (0+255),w,b
 32514  00CCF4  138E               	iorwf	(___flmul@prod+3)& (0+255),f,b
 32515                           
 32516                           ; BSR set to: 0
 32517  00CCF6  C08B  F078         	movff	___flmul@prod,?___flmul
 32518  00CCFA  C08C  F079         	movff	___flmul@prod+1,?___flmul+1
 32519  00CCFE  C08D  F07A         	movff	___flmul@prod+2,?___flmul+2
 32520  00CD02  C08E  F07B         	movff	___flmul@prod+3,?___flmul+3
 32521  00CD06  0012               	return	
 32522  00CD08                     __end_of___flmul:
 32523                           	opt stack 0
 32524                           tblptru	equ	0xFF8
 32525                           tblptrh	equ	0xFF7
 32526                           tblptrl	equ	0xFF6
 32527                           tablat	equ	0xFF5
 32528                           prodh	equ	0xFF4
 32529                           prodl	equ	0xFF3
 32530                           intcon	equ	0xFF2
 32531                           postinc0	equ	0xFEE
 32532                           wreg	equ	0xFE8
 32533                           indf1	equ	0xFE7
 32534                           postinc1	equ	0xFE6
 32535                           postdec1	equ	0xFE5
 32536                           plusw1	equ	0xFE3
 32537                           fsr1h	equ	0xFE2
 32538                           fsr1l	equ	0xFE1
 32539                           indf2	equ	0xFDF
 32540                           postinc2	equ	0xFDE
 32541                           postdec2	equ	0xFDD
 32542                           plusw2	equ	0xFDB
 32543                           fsr2h	equ	0xFDA
 32544                           fsr2l	equ	0xFD9
 32545                           status	equ	0xFD8
 32546                           
 32547 ;; *************** function ___fladd *****************
 32548 ;; Defined at:
 32549 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
 32550 ;; Parameters:    Size  Location     Type
 32551 ;;  b               4   28[BANK0 ] unsigned char 
 32552 ;;  a               4   32[BANK0 ] unsigned char 
 32553 ;; Auto vars:     Size  Location     Type
 32554 ;;  grs             1   47[BANK0 ] unsigned char 
 32555 ;;  bexp            1   46[BANK0 ] unsigned char 
 32556 ;;  aexp            1   45[BANK0 ] unsigned char 
 32557 ;;  signs           1   44[BANK0 ] unsigned char 
 32558 ;; Return value:  Size  Location     Type
 32559 ;;                  4   28[BANK0 ] unsigned char 
 32560 ;; Registers used:
 32561 ;;		wreg, status,2, status,0
 32562 ;; Tracked objects:
 32563 ;;		On entry : 0/0
 32564 ;;		On exit  : 0/0
 32565 ;;		Unchanged: 0/0
 32566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32567 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32568 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32569 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32570 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32571 ;;Total ram usage:       20 bytes
 32572 ;; Hardware stack levels used:    1
 32573 ;; Hardware stack levels required when called:   10
 32574 ;; This function calls:
 32575 ;;		Nothing
 32576 ;; This function is called by:
 32577 ;;		__motor_steps_from_degrees_int
 32578 ;;		_motor_divide_jump_to_nearest
 32579 ;;		_adc_read_temperature
 32580 ;;		__motor_steps_from_degrees_float
 32581 ;; This function uses a non-reentrant model
 32582 ;;
 32583                           
 32584                           	psect	text127
 32585  00CD08                     __ptext127:
 32586                           	opt stack 0
 32587  00CD08                     ___fladd:
 32588                           	opt stack 17
 32589                           
 32590                           ; BSR set to: 0
 32591                           ;incstack = 0
 32592  00CD08  0100               	movlb	0	; () banked
 32593  00CD0A  517F               	movf	(___fladd@b+3)& (0+255),w,b
 32594  00CD0C  0B80               	andlw	128
 32595  00CD0E  6F8C               	movwf	___fladd@signs& (0+255),b
 32596  00CD10  517F               	movf	(___fladd@b+3)& (0+255),w,b
 32597  00CD12  257F               	addwf	(___fladd@b+3)& (0+255),w,b
 32598  00CD14  6F8E               	movwf	___fladd@bexp& (0+255),b
 32599                           
 32600                           ; BSR set to: 0
 32601  00CD16  BF7E               	btfsc	(___fladd@b+2)& (0+255),7,b
 32602                           
 32603                           ; BSR set to: 0
 32604  00CD18  818E               	bsf	___fladd@bexp& (0+255),0,b
 32605                           
 32606                           ; BSR set to: 0
 32607                           
 32608                           ; BSR set to: 0
 32609  00CD1A  518E               	movf	___fladd@bexp& (0+255),w,b
 32610  00CD1C  B4D8               	btfsc	status,2,c
 32611  00CD1E  D00D               	goto	l3597
 32612                           
 32613                           ; BSR set to: 0
 32614  00CD20  298E               	incf	___fladd@bexp& (0+255),w,b
 32615  00CD22  A4D8               	btfss	status,2,c
 32616  00CD24  D008               	goto	l3598
 32617                           
 32618                           ; BSR set to: 0
 32619  00CD26  0E00               	movlw	0
 32620  00CD28  6F7C               	movwf	___fladd@b& (0+255),b
 32621  00CD2A  0E00               	movlw	0
 32622  00CD2C  6F7D               	movwf	(___fladd@b+1)& (0+255),b
 32623  00CD2E  0E00               	movlw	0
 32624  00CD30  6F7E               	movwf	(___fladd@b+2)& (0+255),b
 32625  00CD32  0E00               	movlw	0
 32626  00CD34  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 32627  00CD36                     l3598:
 32628                           
 32629                           ; BSR set to: 0
 32630                           
 32631                           ; BSR set to: 0
 32632  00CD36  8F7E               	bsf	(___fladd@b+2)& (0+255),7,b
 32633  00CD38  D006               	goto	L43
 32634  00CD3A                     l3597:
 32635                           
 32636                           ; BSR set to: 0
 32637                           
 32638                           ; BSR set to: 0
 32639  00CD3A  0E00               	movlw	0
 32640  00CD3C  6F7C               	movwf	___fladd@b& (0+255),b
 32641  00CD3E  0E00               	movlw	0
 32642  00CD40  6F7D               	movwf	(___fladd@b+1)& (0+255),b
 32643  00CD42  0E00               	movlw	0
 32644  00CD44  6F7E               	movwf	(___fladd@b+2)& (0+255),b
 32645  00CD46                     L43:
 32646  00CD46  0E00               	movlw	0
 32647  00CD48  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 32648                           
 32649                           ; BSR set to: 0
 32650                           
 32651                           ; BSR set to: 0
 32652  00CD4A  5183               	movf	(___fladd@a+3)& (0+255),w,b
 32653  00CD4C  0B80               	andlw	128
 32654  00CD4E  6F8D               	movwf	___fladd@aexp& (0+255),b
 32655                           
 32656                           ; BSR set to: 0
 32657  00CD50  518C               	movf	___fladd@signs& (0+255),w,b
 32658  00CD52  198D               	xorwf	___fladd@aexp& (0+255),w,b
 32659  00CD54  A4D8               	btfss	status,2,c
 32660                           
 32661                           ; BSR set to: 0
 32662  00CD56  8D8C               	bsf	___fladd@signs& (0+255),6,b
 32663                           
 32664                           ; BSR set to: 0
 32665                           
 32666                           ; BSR set to: 0
 32667  00CD58  5183               	movf	(___fladd@a+3)& (0+255),w,b
 32668  00CD5A  2583               	addwf	(___fladd@a+3)& (0+255),w,b
 32669  00CD5C  6F8D               	movwf	___fladd@aexp& (0+255),b
 32670                           
 32671                           ; BSR set to: 0
 32672  00CD5E  BF82               	btfsc	(___fladd@a+2)& (0+255),7,b
 32673                           
 32674                           ; BSR set to: 0
 32675  00CD60  818D               	bsf	___fladd@aexp& (0+255),0,b
 32676                           
 32677                           ; BSR set to: 0
 32678                           
 32679                           ; BSR set to: 0
 32680  00CD62  518D               	movf	___fladd@aexp& (0+255),w,b
 32681  00CD64  B4D8               	btfsc	status,2,c
 32682  00CD66  D00D               	goto	l3602
 32683                           
 32684                           ; BSR set to: 0
 32685  00CD68  298D               	incf	___fladd@aexp& (0+255),w,b
 32686  00CD6A  A4D8               	btfss	status,2,c
 32687  00CD6C  D008               	goto	l3603
 32688                           
 32689                           ; BSR set to: 0
 32690  00CD6E  0E00               	movlw	0
 32691  00CD70  6F80               	movwf	___fladd@a& (0+255),b
 32692  00CD72  0E00               	movlw	0
 32693  00CD74  6F81               	movwf	(___fladd@a+1)& (0+255),b
 32694  00CD76  0E00               	movlw	0
 32695  00CD78  6F82               	movwf	(___fladd@a+2)& (0+255),b
 32696  00CD7A  0E00               	movlw	0
 32697  00CD7C  6F83               	movwf	(___fladd@a+3)& (0+255),b
 32698  00CD7E                     l3603:
 32699                           
 32700                           ; BSR set to: 0
 32701                           
 32702                           ; BSR set to: 0
 32703  00CD7E  8F82               	bsf	(___fladd@a+2)& (0+255),7,b
 32704  00CD80  D006               	goto	L44
 32705  00CD82                     l3602:
 32706                           
 32707                           ; BSR set to: 0
 32708                           
 32709                           ; BSR set to: 0
 32710  00CD82  0E00               	movlw	0
 32711  00CD84  6F80               	movwf	___fladd@a& (0+255),b
 32712  00CD86  0E00               	movlw	0
 32713  00CD88  6F81               	movwf	(___fladd@a+1)& (0+255),b
 32714  00CD8A  0E00               	movlw	0
 32715  00CD8C  6F82               	movwf	(___fladd@a+2)& (0+255),b
 32716  00CD8E                     L44:
 32717  00CD8E  0E00               	movlw	0
 32718  00CD90  6F83               	movwf	(___fladd@a+3)& (0+255),b
 32719                           
 32720                           ; BSR set to: 0
 32721                           
 32722                           ; BSR set to: 0
 32723  00CD92  518E               	movf	___fladd@bexp& (0+255),w,b
 32724  00CD94  5D8D               	subwf	___fladd@aexp& (0+255),w,b
 32725  00CD96  B0D8               	btfsc	status,0,c
 32726  00CD98  D022               	goto	l3605
 32727                           
 32728                           ; BSR set to: 0
 32729  00CD9A  AD8C               	btfss	___fladd@signs& (0+255),6,b
 32730  00CD9C  D002               	goto	l3606
 32731                           
 32732                           ; BSR set to: 0
 32733  00CD9E  0E80               	movlw	128
 32734  00CDA0  1B8C               	xorwf	___fladd@signs& (0+255),f,b
 32735  00CDA2                     l3606:
 32736                           
 32737                           ; BSR set to: 0
 32738                           
 32739                           ; BSR set to: 0
 32740  00CDA2  C08E  F08F         	movff	___fladd@bexp,___fladd@grs
 32741                           
 32742                           ; BSR set to: 0
 32743  00CDA6  C08D  F08E         	movff	___fladd@aexp,___fladd@bexp
 32744                           
 32745                           ; BSR set to: 0
 32746  00CDAA  C08F  F08D         	movff	___fladd@grs,___fladd@aexp
 32747                           
 32748                           ; BSR set to: 0
 32749  00CDAE  C07C  F08F         	movff	___fladd@b,___fladd@grs
 32750                           
 32751                           ; BSR set to: 0
 32752  00CDB2  C080  F07C         	movff	___fladd@a,___fladd@b
 32753                           
 32754                           ; BSR set to: 0
 32755  00CDB6  C08F  F080         	movff	___fladd@grs,___fladd@a
 32756                           
 32757                           ; BSR set to: 0
 32758  00CDBA  C07D  F08F         	movff	___fladd@b+1,___fladd@grs
 32759                           
 32760                           ; BSR set to: 0
 32761  00CDBE  C081  F07D         	movff	___fladd@a+1,___fladd@b+1
 32762                           
 32763                           ; BSR set to: 0
 32764  00CDC2  C08F  F081         	movff	___fladd@grs,___fladd@a+1
 32765                           
 32766                           ; BSR set to: 0
 32767  00CDC6  C07E  F08F         	movff	___fladd@b+2,___fladd@grs
 32768                           
 32769                           ; BSR set to: 0
 32770  00CDCA  C082  F07E         	movff	___fladd@a+2,___fladd@b+2
 32771                           
 32772                           ; BSR set to: 0
 32773  00CDCE  C08F  F082         	movff	___fladd@grs,___fladd@a+2
 32774                           
 32775                           ; BSR set to: 0
 32776  00CDD2  C07F  F08F         	movff	___fladd@b+3,___fladd@grs
 32777                           
 32778                           ; BSR set to: 0
 32779  00CDD6  C083  F07F         	movff	___fladd@a+3,___fladd@b+3
 32780                           
 32781                           ; BSR set to: 0
 32782  00CDDA  C08F  F083         	movff	___fladd@grs,___fladd@a+3
 32783  00CDDE                     l3605:
 32784                           
 32785                           ; BSR set to: 0
 32786                           
 32787                           ; BSR set to: 0
 32788  00CDDE  0E00               	movlw	0
 32789  00CDE0  6F8F               	movwf	___fladd@grs& (0+255),b
 32790                           
 32791                           ; BSR set to: 0
 32792  00CDE2  518E               	movf	___fladd@bexp& (0+255),w,b
 32793  00CDE4  6F84               	movwf	??___fladd& (0+255),b
 32794  00CDE6  6B85               	clrf	(??___fladd+1)& (0+255),b
 32795  00CDE8  1F84               	comf	??___fladd& (0+255),f,b
 32796  00CDEA  1F85               	comf	(??___fladd+1)& (0+255),f,b
 32797  00CDEC  4B84               	infsnz	??___fladd& (0+255),f,b
 32798  00CDEE  2B85               	incf	(??___fladd+1)& (0+255),f,b
 32799  00CDF0  518D               	movf	___fladd@aexp& (0+255),w,b
 32800  00CDF2  6F86               	movwf	(??___fladd+2)& (0+255),b
 32801  00CDF4  6B87               	clrf	(??___fladd+3)& (0+255),b
 32802  00CDF6  5184               	movf	??___fladd& (0+255),w,b
 32803  00CDF8  2786               	addwf	(??___fladd+2)& (0+255),f,b
 32804  00CDFA  5185               	movf	(??___fladd+1)& (0+255),w,b
 32805  00CDFC  2387               	addwfc	(??___fladd+3)& (0+255),f,b
 32806  00CDFE  BF87               	btfsc	(??___fladd+3)& (0+255),7,b
 32807  00CE00  D02C               	goto	l3609
 32808  00CE02  5187               	movf	(??___fladd+3)& (0+255),w,b
 32809  00CE04  E104               	bnz	u14670
 32810  00CE06  0E1A               	movlw	26
 32811  00CE08  5D86               	subwf	(??___fladd+2)& (0+255),w,b
 32812  00CE0A  A0D8               	btfss	status,0,c
 32813  00CE0C  D026               	goto	l3609
 32814  00CE0E                     u14670:
 32815                           
 32816                           ; BSR set to: 0
 32817  00CE0E  517C               	movf	___fladd@b& (0+255),w,b
 32818  00CE10  117D               	iorwf	(___fladd@b+1)& (0+255),w,b
 32819  00CE12  117E               	iorwf	(___fladd@b+2)& (0+255),w,b
 32820  00CE14  117F               	iorwf	(___fladd@b+3)& (0+255),w,b
 32821  00CE16  B4D8               	btfsc	status,2,c
 32822  00CE18  D002               	goto	u14680
 32823  00CE1A  0E01               	movlw	1
 32824  00CE1C  D001               	goto	u14690
 32825  00CE1E                     u14680:
 32826  00CE1E  0E00               	movlw	0
 32827  00CE20                     u14690:
 32828  00CE20  6F8F               	movwf	___fladd@grs& (0+255),b
 32829                           
 32830                           ; BSR set to: 0
 32831  00CE22  0E00               	movlw	0
 32832  00CE24  6F7C               	movwf	___fladd@b& (0+255),b
 32833  00CE26  0E00               	movlw	0
 32834  00CE28  6F7D               	movwf	(___fladd@b+1)& (0+255),b
 32835  00CE2A  0E00               	movlw	0
 32836  00CE2C  6F7E               	movwf	(___fladd@b+2)& (0+255),b
 32837  00CE2E  0E00               	movlw	0
 32838  00CE30  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 32839                           
 32840                           ; BSR set to: 0
 32841  00CE32  C08D  F08E         	movff	___fladd@aexp,___fladd@bexp
 32842  00CE36  D015               	goto	u14720
 32843  00CE38                     l3610:
 32844                           
 32845                           ; BSR set to: 0
 32846  00CE38  A18F               	btfss	___fladd@grs& (0+255),0,b
 32847  00CE3A  D005               	goto	l3611
 32848                           
 32849                           ; BSR set to: 0
 32850  00CE3C  90D8               	bcf	status,0,c
 32851  00CE3E  318F               	rrcf	___fladd@grs& (0+255),w,b
 32852  00CE40  0901               	iorlw	1
 32853  00CE42  6F8F               	movwf	___fladd@grs& (0+255),b
 32854  00CE44  D002               	goto	l3612
 32855  00CE46                     l3611:
 32856                           
 32857                           ; BSR set to: 0
 32858                           
 32859                           ; BSR set to: 0
 32860  00CE46  90D8               	bcf	status,0,c
 32861  00CE48  338F               	rrcf	___fladd@grs& (0+255),f,b
 32862  00CE4A                     l3612:
 32863                           
 32864                           ; BSR set to: 0
 32865                           
 32866                           ; BSR set to: 0
 32867  00CE4A  B17C               	btfsc	___fladd@b& (0+255),0,b
 32868                           
 32869                           ; BSR set to: 0
 32870  00CE4C  8F8F               	bsf	___fladd@grs& (0+255),7,b
 32871                           
 32872                           ; BSR set to: 0
 32873                           
 32874                           ; BSR set to: 0
 32875  00CE4E  357F               	rlcf	(___fladd@b+3)& (0+255),w,b
 32876  00CE50  337F               	rrcf	(___fladd@b+3)& (0+255),f,b
 32877  00CE52  337E               	rrcf	(___fladd@b+2)& (0+255),f,b
 32878  00CE54  337D               	rrcf	(___fladd@b+1)& (0+255),f,b
 32879  00CE56  337C               	rrcf	___fladd@b& (0+255),f,b
 32880                           
 32881                           ; BSR set to: 0
 32882  00CE58  2B8E               	incf	___fladd@bexp& (0+255),f,b
 32883  00CE5A                     l3609:
 32884                           
 32885                           ; BSR set to: 0
 32886  00CE5A  518D               	movf	___fladd@aexp& (0+255),w,b
 32887  00CE5C  5D8E               	subwf	___fladd@bexp& (0+255),w,b
 32888  00CE5E  A0D8               	btfss	status,0,c
 32889  00CE60  D7EB               	goto	l3610
 32890  00CE62                     u14720:
 32891                           
 32892                           ; BSR set to: 0
 32893                           
 32894                           ; BSR set to: 0
 32895  00CE62  BD8C               	btfsc	___fladd@signs& (0+255),6,b
 32896  00CE64  D028               	goto	l3615
 32897                           
 32898                           ; BSR set to: 0
 32899  00CE66  518E               	movf	___fladd@bexp& (0+255),w,b
 32900  00CE68  A4D8               	btfss	status,2,c
 32901  00CE6A  D009               	goto	l3616
 32902                           
 32903                           ; BSR set to: 0
 32904  00CE6C  0E00               	movlw	0
 32905  00CE6E  6F7C               	movwf	?___fladd& (0+255),b
 32906  00CE70  0E00               	movlw	0
 32907  00CE72  6F7D               	movwf	(?___fladd+1)& (0+255),b
 32908  00CE74  0E00               	movlw	0
 32909  00CE76  6F7E               	movwf	(?___fladd+2)& (0+255),b
 32910  00CE78  0E00               	movlw	0
 32911  00CE7A  6F7F               	movwf	(?___fladd+3)& (0+255),b
 32912                           
 32913                           ; BSR set to: 0
 32914  00CE7C  0012               	return	
 32915  00CE7E                     l3616:
 32916                           
 32917                           ; BSR set to: 0
 32918                           
 32919                           ; BSR set to: 0
 32920  00CE7E  5180               	movf	___fladd@a& (0+255),w,b
 32921  00CE80  277C               	addwf	___fladd@b& (0+255),f,b
 32922  00CE82  5181               	movf	(___fladd@a+1)& (0+255),w,b
 32923  00CE84  237D               	addwfc	(___fladd@b+1)& (0+255),f,b
 32924  00CE86  5182               	movf	(___fladd@a+2)& (0+255),w,b
 32925  00CE88  237E               	addwfc	(___fladd@b+2)& (0+255),f,b
 32926  00CE8A  5183               	movf	(___fladd@a+3)& (0+255),w,b
 32927  00CE8C  237F               	addwfc	(___fladd@b+3)& (0+255),f,b
 32928                           
 32929                           ; BSR set to: 0
 32930  00CE8E  A17F               	btfss	(___fladd@b+3)& (0+255),0,b
 32931  00CE90  D082               	goto	u14850
 32932                           
 32933                           ; BSR set to: 0
 32934  00CE92  A18F               	btfss	___fladd@grs& (0+255),0,b
 32935  00CE94  D005               	goto	l3619
 32936                           
 32937                           ; BSR set to: 0
 32938  00CE96  90D8               	bcf	status,0,c
 32939  00CE98  318F               	rrcf	___fladd@grs& (0+255),w,b
 32940  00CE9A  0901               	iorlw	1
 32941  00CE9C  6F8F               	movwf	___fladd@grs& (0+255),b
 32942  00CE9E  D002               	goto	l3620
 32943  00CEA0                     l3619:
 32944                           
 32945                           ; BSR set to: 0
 32946                           
 32947                           ; BSR set to: 0
 32948  00CEA0  90D8               	bcf	status,0,c
 32949  00CEA2  338F               	rrcf	___fladd@grs& (0+255),f,b
 32950  00CEA4                     l3620:
 32951                           
 32952                           ; BSR set to: 0
 32953                           
 32954                           ; BSR set to: 0
 32955  00CEA4  B17C               	btfsc	___fladd@b& (0+255),0,b
 32956                           
 32957                           ; BSR set to: 0
 32958  00CEA6  8F8F               	bsf	___fladd@grs& (0+255),7,b
 32959                           
 32960                           ; BSR set to: 0
 32961                           
 32962                           ; BSR set to: 0
 32963  00CEA8  357F               	rlcf	(___fladd@b+3)& (0+255),w,b
 32964  00CEAA  337F               	rrcf	(___fladd@b+3)& (0+255),f,b
 32965  00CEAC  337E               	rrcf	(___fladd@b+2)& (0+255),f,b
 32966  00CEAE  337D               	rrcf	(___fladd@b+1)& (0+255),f,b
 32967  00CEB0  337C               	rrcf	___fladd@b& (0+255),f,b
 32968                           
 32969                           ; BSR set to: 0
 32970  00CEB2  2B8E               	incf	___fladd@bexp& (0+255),f,b
 32971                           
 32972                           ; BSR set to: 0
 32973  00CEB4  D070               	goto	u14850
 32974  00CEB6                     l3615:
 32975                           
 32976                           ; BSR set to: 0
 32977                           
 32978                           ; BSR set to: 0
 32979  00CEB6  5180               	movf	___fladd@a& (0+255),w,b
 32980  00CEB8  5D7C               	subwf	___fladd@b& (0+255),w,b
 32981  00CEBA  5181               	movf	(___fladd@a+1)& (0+255),w,b
 32982  00CEBC  597D               	subwfb	(___fladd@b+1)& (0+255),w,b
 32983  00CEBE  5182               	movf	(___fladd@a+2)& (0+255),w,b
 32984  00CEC0  597E               	subwfb	(___fladd@b+2)& (0+255),w,b
 32985  00CEC2  517F               	movf	(___fladd@b+3)& (0+255),w,b
 32986  00CEC4  0A80               	xorlw	128
 32987  00CEC6  6F84               	movwf	??___fladd& (0+255),b
 32988  00CEC8  5183               	movf	(___fladd@a+3)& (0+255),w,b
 32989  00CECA  0A80               	xorlw	128
 32990  00CECC  5984               	subwfb	??___fladd& (0+255),w,b
 32991  00CECE  B0D8               	btfsc	status,0,c
 32992  00CED0  D036               	goto	l3623
 32993                           
 32994                           ; BSR set to: 0
 32995  00CED2  C07C  F084         	movff	___fladd@b,??___fladd
 32996  00CED6  C07D  F085         	movff	___fladd@b+1,??___fladd+1
 32997  00CEDA  C07E  F086         	movff	___fladd@b+2,??___fladd+2
 32998  00CEDE  C07F  F087         	movff	___fladd@b+3,??___fladd+3
 32999  00CEE2  1F84               	comf	??___fladd& (0+255),f,b
 33000  00CEE4  1F85               	comf	(??___fladd+1)& (0+255),f,b
 33001  00CEE6  1F86               	comf	(??___fladd+2)& (0+255),f,b
 33002  00CEE8  1F87               	comf	(??___fladd+3)& (0+255),f,b
 33003  00CEEA  2B84               	incf	??___fladd& (0+255),f,b
 33004  00CEEC  0E00               	movlw	0
 33005  00CEEE  2385               	addwfc	(??___fladd+1)& (0+255),f,b
 33006  00CEF0  2386               	addwfc	(??___fladd+2)& (0+255),f,b
 33007  00CEF2  2387               	addwfc	(??___fladd+3)& (0+255),f,b
 33008  00CEF4  5180               	movf	___fladd@a& (0+255),w,b
 33009  00CEF6  2584               	addwf	??___fladd& (0+255),w,b
 33010  00CEF8  6F88               	movwf	(??___fladd+4)& (0+255),b
 33011  00CEFA  5181               	movf	(___fladd@a+1)& (0+255),w,b
 33012  00CEFC  2185               	addwfc	(??___fladd+1)& (0+255),w,b
 33013  00CEFE  6F89               	movwf	(??___fladd+5)& (0+255),b
 33014  00CF00  5182               	movf	(___fladd@a+2)& (0+255),w,b
 33015  00CF02  2186               	addwfc	(??___fladd+2)& (0+255),w,b
 33016  00CF04  6F8A               	movwf	(??___fladd+6)& (0+255),b
 33017  00CF06  5183               	movf	(___fladd@a+3)& (0+255),w,b
 33018  00CF08  2187               	addwfc	(??___fladd+3)& (0+255),w,b
 33019  00CF0A  6F8B               	movwf	(??___fladd+7)& (0+255),b
 33020  00CF0C  0EFF               	movlw	255
 33021  00CF0E  2588               	addwf	(??___fladd+4)& (0+255),w,b
 33022  00CF10  6F7C               	movwf	___fladd@b& (0+255),b
 33023  00CF12  0EFF               	movlw	255
 33024  00CF14  2189               	addwfc	(??___fladd+5)& (0+255),w,b
 33025  00CF16  6F7D               	movwf	(___fladd@b+1)& (0+255),b
 33026  00CF18  0EFF               	movlw	255
 33027  00CF1A  218A               	addwfc	(??___fladd+6)& (0+255),w,b
 33028  00CF1C  6F7E               	movwf	(___fladd@b+2)& (0+255),b
 33029  00CF1E  0EFF               	movlw	255
 33030  00CF20  218B               	addwfc	(??___fladd+7)& (0+255),w,b
 33031  00CF22  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 33032  00CF24  0E80               	movlw	128
 33033  00CF26  1B8C               	xorwf	___fladd@signs& (0+255),f,b
 33034                           
 33035                           ; BSR set to: 0
 33036  00CF28  6D8F               	negf	___fladd@grs& (0+255),b
 33037                           
 33038                           ; BSR set to: 0
 33039  00CF2A  518F               	movf	___fladd@grs& (0+255),w,b
 33040  00CF2C  A4D8               	btfss	status,2,c
 33041  00CF2E  D00F               	goto	l3625
 33042                           
 33043                           ; BSR set to: 0
 33044  00CF30  0E01               	movlw	1
 33045  00CF32  277C               	addwf	___fladd@b& (0+255),f,b
 33046  00CF34  0E00               	movlw	0
 33047  00CF36  237D               	addwfc	(___fladd@b+1)& (0+255),f,b
 33048  00CF38  237E               	addwfc	(___fladd@b+2)& (0+255),f,b
 33049  00CF3A  237F               	addwfc	(___fladd@b+3)& (0+255),f,b
 33050                           
 33051                           ; BSR set to: 0
 33052  00CF3C  D008               	goto	l3625
 33053  00CF3E                     l3623:
 33054                           
 33055                           ; BSR set to: 0
 33056                           
 33057                           ; BSR set to: 0
 33058  00CF3E  5180               	movf	___fladd@a& (0+255),w,b
 33059  00CF40  5F7C               	subwf	___fladd@b& (0+255),f,b
 33060  00CF42  5181               	movf	(___fladd@a+1)& (0+255),w,b
 33061  00CF44  5B7D               	subwfb	(___fladd@b+1)& (0+255),f,b
 33062  00CF46  5182               	movf	(___fladd@a+2)& (0+255),w,b
 33063  00CF48  5B7E               	subwfb	(___fladd@b+2)& (0+255),f,b
 33064  00CF4A  5183               	movf	(___fladd@a+3)& (0+255),w,b
 33065  00CF4C  5B7F               	subwfb	(___fladd@b+3)& (0+255),f,b
 33066  00CF4E                     l3625:
 33067                           
 33068                           ; BSR set to: 0
 33069  00CF4E  517C               	movf	___fladd@b& (0+255),w,b
 33070  00CF50  117D               	iorwf	(___fladd@b+1)& (0+255),w,b
 33071  00CF52  117E               	iorwf	(___fladd@b+2)& (0+255),w,b
 33072  00CF54  117F               	iorwf	(___fladd@b+3)& (0+255),w,b
 33073  00CF56  A4D8               	btfss	status,2,c
 33074  00CF58  D01C               	goto	l3632
 33075                           
 33076                           ; BSR set to: 0
 33077  00CF5A  518F               	movf	___fladd@grs& (0+255),w,b
 33078  00CF5C  A4D8               	btfss	status,2,c
 33079  00CF5E  D019               	goto	l3632
 33080                           
 33081                           ; BSR set to: 0
 33082  00CF60  0E00               	movlw	0
 33083  00CF62  6F7C               	movwf	?___fladd& (0+255),b
 33084  00CF64  0E00               	movlw	0
 33085  00CF66  6F7D               	movwf	(?___fladd+1)& (0+255),b
 33086  00CF68  0E00               	movlw	0
 33087  00CF6A  6F7E               	movwf	(?___fladd+2)& (0+255),b
 33088  00CF6C  0E00               	movlw	0
 33089  00CF6E  6F7F               	movwf	(?___fladd+3)& (0+255),b
 33090                           
 33091                           ; BSR set to: 0
 33092  00CF70  0012               	return	
 33093  00CF72                     
 33094                           ; BSR set to: 0
 33095                           
 33096                           ; BSR set to: 0
 33097  00CF72  90D8               	bcf	status,0,c
 33098  00CF74  377C               	rlcf	___fladd@b& (0+255),f,b
 33099  00CF76  377D               	rlcf	(___fladd@b+1)& (0+255),f,b
 33100  00CF78  377E               	rlcf	(___fladd@b+2)& (0+255),f,b
 33101  00CF7A  377F               	rlcf	(___fladd@b+3)& (0+255),f,b
 33102                           
 33103                           ; BSR set to: 0
 33104  00CF7C  BF8F               	btfsc	___fladd@grs& (0+255),7,b
 33105                           
 33106                           ; BSR set to: 0
 33107  00CF7E  817C               	bsf	___fladd@b& (0+255),0,b
 33108                           
 33109                           ; BSR set to: 0
 33110                           
 33111                           ; BSR set to: 0
 33112  00CF80  A18F               	btfss	___fladd@grs& (0+255),0,b
 33113  00CF82  D002               	goto	l3630
 33114                           
 33115                           ; BSR set to: 0
 33116  00CF84  80D8               	bsf	status,0,c
 33117  00CF86  D001               	goto	L45
 33118  00CF88                     l3630:
 33119                           
 33120                           ; BSR set to: 0
 33121                           
 33122                           ; BSR set to: 0
 33123  00CF88  90D8               	bcf	status,0,c
 33124  00CF8A                     L45:
 33125  00CF8A  378F               	rlcf	___fladd@grs& (0+255),f,b
 33126                           
 33127                           ; BSR set to: 0
 33128                           
 33129                           ; BSR set to: 0
 33130  00CF8C  518E               	movf	___fladd@bexp& (0+255),w,b
 33131  00CF8E  A4D8               	btfss	status,2,c
 33132                           
 33133                           ; BSR set to: 0
 33134  00CF90  078E               	decf	___fladd@bexp& (0+255),f,b
 33135  00CF92                     l3632:
 33136                           
 33137                           ; BSR set to: 0
 33138                           
 33139                           ; BSR set to: 0
 33140                           
 33141                           ; BSR set to: 0
 33142  00CF92  AF7E               	btfss	(___fladd@b+2)& (0+255),7,b
 33143  00CF94  D7EE               	goto	l3628
 33144  00CF96                     u14850:
 33145                           
 33146                           ; BSR set to: 0
 33147                           
 33148                           ; BSR set to: 0
 33149                           
 33150                           ; BSR set to: 0
 33151  00CF96  0E00               	movlw	0
 33152  00CF98  6F8D               	movwf	___fladd@aexp& (0+255),b
 33153                           
 33154                           ; BSR set to: 0
 33155  00CF9A  AF8F               	btfss	___fladd@grs& (0+255),7,b
 33156  00CF9C  D00A               	goto	l3637
 33157                           
 33158                           ; BSR set to: 0
 33159  00CF9E  C08F  F084         	movff	___fladd@grs,??___fladd
 33160  00CFA2  0E7F               	movlw	127
 33161  00CFA4  1784               	andwf	??___fladd& (0+255),f,b
 33162  00CFA6  A4D8               	btfss	status,2,c
 33163  00CFA8  D002               	goto	u14880
 33164                           
 33165                           ; BSR set to: 0
 33166                           
 33167                           ; BSR set to: 0
 33168  00CFAA  A17C               	btfss	___fladd@b& (0+255),0,b
 33169  00CFAC  D002               	goto	l3637
 33170  00CFAE                     u14880:
 33171                           
 33172                           ; BSR set to: 0
 33173  00CFAE  0E01               	movlw	1
 33174  00CFB0  6F8D               	movwf	___fladd@aexp& (0+255),b
 33175  00CFB2                     l3637:
 33176                           
 33177                           ; BSR set to: 0
 33178                           
 33179                           ; BSR set to: 0
 33180                           
 33181                           ; BSR set to: 0
 33182  00CFB2  518D               	movf	___fladd@aexp& (0+255),w,b
 33183  00CFB4  B4D8               	btfsc	status,2,c
 33184  00CFB6  D020               	goto	l3640
 33185                           
 33186                           ; BSR set to: 0
 33187  00CFB8  0E01               	movlw	1
 33188  00CFBA  277C               	addwf	___fladd@b& (0+255),f,b
 33189  00CFBC  0E00               	movlw	0
 33190  00CFBE  237D               	addwfc	(___fladd@b+1)& (0+255),f,b
 33191  00CFC0  237E               	addwfc	(___fladd@b+2)& (0+255),f,b
 33192  00CFC2  237F               	addwfc	(___fladd@b+3)& (0+255),f,b
 33193                           
 33194                           ; BSR set to: 0
 33195  00CFC4  A17F               	btfss	(___fladd@b+3)& (0+255),0,b
 33196  00CFC6  D018               	goto	l3640
 33197                           
 33198                           ; BSR set to: 0
 33199  00CFC8  C07C  F084         	movff	___fladd@b,??___fladd
 33200  00CFCC  C07D  F085         	movff	___fladd@b+1,??___fladd+1
 33201  00CFD0  C07E  F086         	movff	___fladd@b+2,??___fladd+2
 33202  00CFD4  C07F  F087         	movff	___fladd@b+3,??___fladd+3
 33203  00CFD8  3587               	rlcf	(??___fladd+3)& (0+255),w,b
 33204  00CFDA  3387               	rrcf	(??___fladd+3)& (0+255),f,b
 33205  00CFDC  3386               	rrcf	(??___fladd+2)& (0+255),f,b
 33206  00CFDE  3385               	rrcf	(??___fladd+1)& (0+255),f,b
 33207  00CFE0  3384               	rrcf	??___fladd& (0+255),f,b
 33208  00CFE2  C084  F07C         	movff	??___fladd,___fladd@b
 33209  00CFE6  C085  F07D         	movff	??___fladd+1,___fladd@b+1
 33210  00CFEA  C086  F07E         	movff	??___fladd+2,___fladd@b+2
 33211  00CFEE  C087  F07F         	movff	??___fladd+3,___fladd@b+3
 33212  00CFF2  298E               	incf	___fladd@bexp& (0+255),w,b
 33213  00CFF4  A4D8               	btfss	status,2,c
 33214                           
 33215                           ; BSR set to: 0
 33216  00CFF6  2B8E               	incf	___fladd@bexp& (0+255),f,b
 33217  00CFF8                     l3640:
 33218                           
 33219                           ; BSR set to: 0
 33220                           
 33221                           ; BSR set to: 0
 33222                           
 33223                           ; BSR set to: 0
 33224                           
 33225                           ; BSR set to: 0
 33226  00CFF8  298E               	incf	___fladd@bexp& (0+255),w,b
 33227  00CFFA  B4D8               	btfsc	status,2,c
 33228  00CFFC  D003               	goto	u14930
 33229                           
 33230                           ; BSR set to: 0
 33231  00CFFE  518E               	movf	___fladd@bexp& (0+255),w,b
 33232  00D000  A4D8               	btfss	status,2,c
 33233  00D002  D00D               	goto	l3644
 33234  00D004                     u14930:
 33235                           
 33236                           ; BSR set to: 0
 33237                           
 33238                           ; BSR set to: 0
 33239  00D004  0E00               	movlw	0
 33240  00D006  6F7C               	movwf	___fladd@b& (0+255),b
 33241  00D008  0E00               	movlw	0
 33242  00D00A  6F7D               	movwf	(___fladd@b+1)& (0+255),b
 33243  00D00C  0E00               	movlw	0
 33244  00D00E  6F7E               	movwf	(___fladd@b+2)& (0+255),b
 33245  00D010  0E00               	movlw	0
 33246  00D012  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 33247  00D014  518E               	movf	___fladd@bexp& (0+255),w,b
 33248  00D016  A4D8               	btfss	status,2,c
 33249  00D018  D002               	goto	l3644
 33250                           
 33251                           ; BSR set to: 0
 33252  00D01A  0E00               	movlw	0
 33253  00D01C  6F8C               	movwf	___fladd@signs& (0+255),b
 33254  00D01E                     l3644:
 33255                           
 33256                           ; BSR set to: 0
 33257                           
 33258                           ; BSR set to: 0
 33259                           
 33260                           ; BSR set to: 0
 33261  00D01E  A18E               	btfss	___fladd@bexp& (0+255),0,b
 33262  00D020  D002               	goto	l3645
 33263                           
 33264                           ; BSR set to: 0
 33265  00D022  8F7E               	bsf	(___fladd@b+2)& (0+255),7,b
 33266  00D024  D001               	goto	l3646
 33267  00D026                     l3645:
 33268                           
 33269                           ; BSR set to: 0
 33270                           
 33271                           ; BSR set to: 0
 33272  00D026  9F7E               	bcf	(___fladd@b+2)& (0+255),7,b
 33273  00D028                     l3646:
 33274                           
 33275                           ; BSR set to: 0
 33276                           
 33277                           ; BSR set to: 0
 33278  00D028  90D8               	bcf	status,0,c
 33279  00D02A  318E               	rrcf	___fladd@bexp& (0+255),w,b
 33280  00D02C  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 33281                           
 33282                           ; BSR set to: 0
 33283  00D02E  BF8C               	btfsc	___fladd@signs& (0+255),7,b
 33284                           
 33285                           ; BSR set to: 0
 33286  00D030  8F7F               	bsf	(___fladd@b+3)& (0+255),7,b
 33287                           
 33288                           ; BSR set to: 0
 33289                           
 33290                           ; BSR set to: 0
 33291  00D032  C07C  F07C         	movff	___fladd@b,?___fladd
 33292  00D036  C07D  F07D         	movff	___fladd@b+1,?___fladd+1
 33293  00D03A  C07E  F07E         	movff	___fladd@b+2,?___fladd+2
 33294  00D03E  C07F  F07F         	movff	___fladd@b+3,?___fladd+3
 33295  00D042  0012               	return	
 33296  00D044                     __end_of___fladd:
 33297                           	opt stack 0
 33298                           tblptru	equ	0xFF8
 33299                           tblptrh	equ	0xFF7
 33300                           tblptrl	equ	0xFF6
 33301                           tablat	equ	0xFF5
 33302                           prodh	equ	0xFF4
 33303                           prodl	equ	0xFF3
 33304                           intcon	equ	0xFF2
 33305                           postinc0	equ	0xFEE
 33306                           wreg	equ	0xFE8
 33307                           indf1	equ	0xFE7
 33308                           postinc1	equ	0xFE6
 33309                           postdec1	equ	0xFE5
 33310                           plusw1	equ	0xFE3
 33311                           fsr1h	equ	0xFE2
 33312                           fsr1l	equ	0xFE1
 33313                           indf2	equ	0xFDF
 33314                           postinc2	equ	0xFDE
 33315                           postdec2	equ	0xFDD
 33316                           plusw2	equ	0xFDB
 33317                           fsr2h	equ	0xFDA
 33318                           fsr2l	equ	0xFD9
 33319                           status	equ	0xFD8
 33320                           
 33321 ;; *************** function _USBDeviceInit *****************
 33322 ;; Defined at:
 33323 ;;		line 277 in file "usb_device.c"
 33324 ;; Parameters:    Size  Location     Type
 33325 ;;		None
 33326 ;; Auto vars:     Size  Location     Type
 33327 ;;  i               1    8[BANK0 ] unsigned char 
 33328 ;; Return value:  Size  Location     Type
 33329 ;;                  1    wreg      void 
 33330 ;; Registers used:
 33331 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33332 ;; Tracked objects:
 33333 ;;		On entry : 0/0
 33334 ;;		On exit  : 0/0
 33335 ;;		Unchanged: 0/0
 33336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33338 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33340 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33341 ;;Total ram usage:        1 bytes
 33342 ;; Hardware stack levels used:    1
 33343 ;; Hardware stack levels required when called:   11
 33344 ;; This function calls:
 33345 ;;		_memset
 33346 ;; This function is called by:
 33347 ;;		_main
 33348 ;; This function uses a non-reentrant model
 33349 ;;
 33350                           
 33351                           	psect	text128
 33352  00FF28                     __ptext128:
 33353                           	opt stack 0
 33354  00FF28                     _USBDeviceInit:
 33355                           	opt stack 19
 33356                           
 33357                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 33358                           
 33359                           ; BSR set to: 0
 33360                           ;incstack = 0
 33361  00FF28  98A0               	bcf	4000,4,c	;volatile
 33362                           
 33363                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 33364  00FF2A  0E00               	movlw	0
 33365  00FF2C  6E63               	movwf	3939,c	;volatile
 33366                           
 33367                           ;usb_device.c: 291: {UIR = 0;};
 33368  00FF2E  0E00               	movlw	0
 33369  00FF30  6E62               	movwf	3938,c	;volatile
 33370                           
 33371                           ;usb_device.c: 294: UEP0 = 0;
 33372  00FF32  0E00               	movlw	0
 33373  00FF34  010F               	movlb	15	; () banked
 33374  00FF36  6F26               	movwf	38,b	;volatile
 33375                           
 33376                           ; BSR set to: 15
 33377                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 33378  00FF38  0E27               	movlw	39
 33379  00FF3A  0100               	movlb	0	; () banked
 33380  00FF3C  6F60               	movwf	memset@p1& (0+255),b
 33381  00FF3E  0E0F               	movlw	15
 33382  00FF40  6F61               	movwf	(memset@p1+1)& (0+255),b
 33383  00FF42  0E00               	movlw	0
 33384  00FF44  6F63               	movwf	(memset@c+1)& (0+255),b
 33385  00FF46  0E00               	movlw	0
 33386  00FF48  6F62               	movwf	memset@c& (0+255),b
 33387  00FF4A  0E00               	movlw	0
 33388  00FF4C  6F65               	movwf	(memset@n+1)& (0+255),b
 33389  00FF4E  0E02               	movlw	2
 33390  00FF50  6F64               	movwf	memset@n& (0+255),b
 33391  00FF52  EC69  F0AD         	call	_memset	;wreg free
 33392                           
 33393                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 33394  00FF56  0E16               	movlw	22
 33395  00FF58  010F               	movlb	15	; () banked
 33396  00FF5A  6F39               	movwf	57,b	;volatile
 33397                           
 33398                           ; BSR set to: 15
 33399  00FF5C  0E9F               	movlw	159
 33400  00FF5E  6F37               	movwf	55,b	;volatile
 33401                           
 33402                           ; BSR set to: 15
 33403  00FF60  0E7B               	movlw	123
 33404  00FF62  6F36               	movwf	54,b	;volatile
 33405                           
 33406                           ; BSR set to: 15
 33407                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 33408  00FF64  0E00               	movlw	0
 33409  00FF66  0100               	movlb	0	; () banked
 33410  00FF68  6F68               	movwf	USBDeviceInit@i& (0+255),b
 33411  00FF6A                     l17996:
 33412                           
 33413                           ; BSR set to: 0
 33414  00FF6A  0E0B               	movlw	11
 33415  00FF6C  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 33416  00FF6E  D001               	goto	l145
 33417  00FF70  D00E               	goto	u17390
 33418  00FF72                     l145:
 33419                           
 33420                           ; BSR set to: 0
 33421                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 33422                           
 33423                           ; BSR set to: 0
 33424  00FF72  5168               	movf	USBDeviceInit@i& (0+255),w,b
 33425  00FF74  0D04               	mullw	4
 33426  00FF76  0E00               	movlw	0
 33427  00FF78  24F3               	addwf	prodl,w,c
 33428  00FF7A  6ED9               	movwf	fsr2l,c
 33429  00FF7C  0E0D               	movlw	13
 33430  00FF7E  20F4               	addwfc	prodh,w,c
 33431  00FF80  6EDA               	movwf	fsr2h,c
 33432  00FF82  6ADE               	clrf	postinc2,c
 33433  00FF84  6ADE               	clrf	postinc2,c
 33434  00FF86  6ADE               	clrf	postinc2,c
 33435  00FF88  6ADD               	clrf	postdec2,c
 33436                           
 33437                           ; BSR set to: 0
 33438  00FF8A  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 33439  00FF8C  D7EE               	goto	l17996
 33440  00FF8E                     u17390:
 33441                           
 33442                           ; BSR set to: 0
 33443                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 33444  00FF8E  8C65               	bsf	3941,6,c	;volatile
 33445                           
 33446                           ; BSR set to: 0
 33447                           ;usb_device.c: 316: UADDR = 0x00;
 33448  00FF90  0E00               	movlw	0
 33449  00FF92  010F               	movlb	15	; () banked
 33450  00FF94  6F38               	movwf	56,b	;volatile
 33451                           
 33452                           ; BSR set to: 15
 33453                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 33454  00FF96  9865               	bcf	3941,4,c	;volatile
 33455                           
 33456                           ; BSR set to: 15
 33457                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 33458  00FF98  9C65               	bcf	3941,6,c	;volatile
 33459  00FF9A                     
 33460                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 33461                           
 33462                           ; BSR set to: 15
 33463  00FF9A  9662               	bcf	3938,3,c	;volatile
 33464                           
 33465                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 33466  00FF9C  0E00               	movlw	0
 33467  00FF9E  0101               	movlb	1	; () banked
 33468  00FFA0  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 33469                           
 33470                           ; BSR set to: 1
 33471                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 33472  00FFA2  0E00               	movlw	0
 33473  00FFA4  6F03               	movwf	(_outPipes+3)& (0+255),b	;volatile
 33474                           
 33475                           ; BSR set to: 1
 33476                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 33477  00FFA6  0E00               	movlw	0
 33478  00FFA8  6F05               	movwf	(_outPipes+5)& (0+255),b	;volatile
 33479  00FFAA  0E00               	movlw	0
 33480  00FFAC  6F04               	movwf	(_outPipes+4)& (0+255),b	;volatile
 33481                           
 33482                           ; BSR set to: 1
 33483                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 33484  00FFAE  B662               	btfsc	3938,3,c	;volatile
 33485  00FFB0  D7F4               	goto	l147
 33486                           
 33487                           ; BSR set to: 1
 33488                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 33489                           
 33490                           ; BSR set to: 1
 33491  00FFB2  0E01               	movlw	1
 33492  00FFB4  6F5D               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 33493                           
 33494                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 33495  00FFB6  0E01               	movlw	1
 33496  00FFB8  6F5C               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 33497                           
 33498                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 33499  00FFBA  0E00               	movlw	0
 33500  00FFBC  6F5B               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 33501                           
 33502                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 33503  00FFBE  0E00               	movlw	0
 33504  00FFC0  6F5A               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 33505                           
 33506                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 33507  00FFC2  0E00               	movlw	0
 33508  00FFC4  6F62               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 33509                           
 33510                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 33511  00FFC6  0E00               	movlw	0
 33512  00FFC8  0100               	movlb	0	; () banked
 33513  00FFCA  6F68               	movwf	USBDeviceInit@i& (0+255),b
 33514  00FFCC                     l18024:
 33515                           
 33516                           ; BSR set to: 0
 33517  00FFCC  0E02               	movlw	2
 33518  00FFCE  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 33519  00FFD0  D001               	goto	l149
 33520  00FFD2  D02E               	goto	u17420
 33521  00FFD4                     l149:
 33522                           
 33523                           ; BSR set to: 0
 33524                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 33525                           
 33526                           ; BSR set to: 0
 33527  00FFD4  5168               	movf	USBDeviceInit@i& (0+255),w,b
 33528  00FFD6  0D02               	mullw	2
 33529  00FFD8  0E0F               	movlw	low _pBDTEntryIn
 33530  00FFDA  24F3               	addwf	prodl,w,c
 33531  00FFDC  6ED9               	movwf	fsr2l,c
 33532  00FFDE  0E01               	movlw	high _pBDTEntryIn
 33533  00FFE0  20F4               	addwfc	prodh,w,c
 33534  00FFE2  6EDA               	movwf	fsr2h,c
 33535  00FFE4  0E00               	movlw	0
 33536  00FFE6  6EDE               	movwf	postinc2,c
 33537  00FFE8  0E00               	movlw	0
 33538  00FFEA  6EDD               	movwf	postdec2,c
 33539                           
 33540                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 33541  00FFEC  5168               	movf	USBDeviceInit@i& (0+255),w,b
 33542  00FFEE  0D02               	mullw	2
 33543  00FFF0  0E15               	movlw	low _pBDTEntryOut
 33544  00FFF2  24F3               	addwf	prodl,w,c
 33545  00FFF4  6ED9               	movwf	fsr2l,c
 33546  00FFF6  0E01               	movlw	high _pBDTEntryOut
 33547  00FFF8  20F4               	addwfc	prodh,w,c
 33548  00FFFA  6EDA               	movwf	fsr2h,c
 33549  00FFFC  0E00               	movlw	0
 33550  00FFFE  6EDE               	movwf	postinc2,c
 33551  010000  0E00               	movlw	0
 33552  010002  6EDD               	movwf	postdec2,c
 33553                           
 33554                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 33555  010004  5168               	movf	USBDeviceInit@i& (0+255),w,b
 33556  010006  0D01               	mullw	1
 33557  010008  0E34               	movlw	low _ep_data_in
 33558  01000A  24F3               	addwf	prodl,w,c
 33559  01000C  6ED9               	movwf	fsr2l,c
 33560  01000E  0E01               	movlw	high _ep_data_in
 33561  010010  20F4               	addwfc	prodh,w,c
 33562  010012  6EDA               	movwf	fsr2h,c
 33563  010014  0E00               	movlw	0
 33564  010016  6EDF               	movwf	indf2,c
 33565                           
 33566                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 33567  010018  5168               	movf	USBDeviceInit@i& (0+255),w,b
 33568  01001A  0D01               	mullw	1
 33569  01001C  0E31               	movlw	low _ep_data_out
 33570  01001E  24F3               	addwf	prodl,w,c
 33571  010020  6ED9               	movwf	fsr2l,c
 33572  010022  0E01               	movlw	high _ep_data_out
 33573  010024  20F4               	addwfc	prodh,w,c
 33574  010026  6EDA               	movwf	fsr2h,c
 33575  010028  0E00               	movlw	0
 33576  01002A  6EDF               	movwf	indf2,c
 33577                           
 33578                           ; BSR set to: 0
 33579  01002C  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 33580  01002E  D7CE               	goto	l18024
 33581  010030                     u17420:
 33582                           
 33583                           ; BSR set to: 0
 33584                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 33585                           
 33586                           ; BSR set to: 0
 33587  010030  0E08               	movlw	8
 33588  010032  0101               	movlb	1	; () banked
 33589  010034  6F0F               	movwf	_pBDTEntryIn& (0+255),b
 33590  010036  0E0D               	movlw	13
 33591  010038  6F10               	movwf	(_pBDTEntryIn+1)& (0+255),b
 33592                           
 33593                           ; BSR set to: 1
 33594                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 33595  01003A  0E16               	movlw	22
 33596  01003C  010F               	movlb	15	; () banked
 33597  01003E  6F26               	movwf	38,b	;volatile
 33598                           
 33599                           ; BSR set to: 15
 33600                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 33601  010040  0E0D               	movlw	13
 33602  010042  010D               	movlb	13	; () banked
 33603  010044  6F03               	movwf	3,b	;volatile
 33604  010046  0E30               	movlw	48
 33605  010048  6F02               	movwf	2,b	;volatile
 33606                           
 33607                           ; BSR set to: 13
 33608                           ;usb_device.c: 359: BDT[0].CNT = 8;
 33609  01004A  0E08               	movlw	8
 33610  01004C  6F01               	movwf	1,b	;volatile
 33611                           
 33612                           ; BSR set to: 13
 33613                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 33614  01004E  0E04               	movlw	4
 33615  010050  6F00               	movwf	0,b	;volatile
 33616                           
 33617                           ; BSR set to: 13
 33618                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 33619  010052  8F00               	bsf	0,7,b	;volatile
 33620                           
 33621                           ; BSR set to: 13
 33622                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 33623  010054  0E00               	movlw	0
 33624  010056  0101               	movlb	1	; () banked
 33625  010058  6FC3               	movwf	_USBActiveConfiguration& (0+255),b	;volatile
 33626                           
 33627                           ; BSR set to: 1
 33628                           ;usb_device.c: 366: USB1msTickCount = 0;
 33629  01005A  0E00               	movlw	0
 33630  01005C  6F27               	movwf	_USB1msTickCount& (0+255),b	;volatile
 33631  01005E  0E00               	movlw	0
 33632  010060  6F28               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 33633  010062  0E00               	movlw	0
 33634  010064  6F29               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 33635  010066  0E00               	movlw	0
 33636  010068  6F2A               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 33637                           
 33638                           ; BSR set to: 1
 33639                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 33640  01006A  0E00               	movlw	0
 33641  01006C  6F59               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 33642                           
 33643                           ; BSR set to: 1
 33644                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 33645  01006E  0E00               	movlw	0
 33646  010070  6E5D               	movwf	_USBDeviceState,c	;volatile
 33647                           
 33648                           ; BSR set to: 1
 33649  010072  0012               	return		;funcret
 33650  010074                     __end_of_USBDeviceInit:
 33651                           	opt stack 0
 33652                           tblptru	equ	0xFF8
 33653                           tblptrh	equ	0xFF7
 33654                           tblptrl	equ	0xFF6
 33655                           tablat	equ	0xFF5
 33656                           prodh	equ	0xFF4
 33657                           prodl	equ	0xFF3
 33658                           intcon	equ	0xFF2
 33659                           postinc0	equ	0xFEE
 33660                           wreg	equ	0xFE8
 33661                           indf1	equ	0xFE7
 33662                           postinc1	equ	0xFE6
 33663                           postdec1	equ	0xFE5
 33664                           plusw1	equ	0xFE3
 33665                           fsr1h	equ	0xFE2
 33666                           fsr1l	equ	0xFE1
 33667                           indf2	equ	0xFDF
 33668                           postinc2	equ	0xFDE
 33669                           postdec2	equ	0xFDD
 33670                           plusw2	equ	0xFDB
 33671                           fsr2h	equ	0xFDA
 33672                           fsr2l	equ	0xFD9
 33673                           status	equ	0xFD8
 33674                           
 33675 ;; *************** function _memset *****************
 33676 ;; Defined at:
 33677 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 33678 ;; Parameters:    Size  Location     Type
 33679 ;;  p1              2    0[BANK0 ] PTR void 
 33680 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 33681 ;;  c               2    2[BANK0 ] int 
 33682 ;;  n               2    4[BANK0 ] unsigned int 
 33683 ;; Auto vars:     Size  Location     Type
 33684 ;;  p               2    6[BANK0 ] PTR unsigned char 
 33685 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 33686 ;; Return value:  Size  Location     Type
 33687 ;;                  2    0[BANK0 ] PTR void 
 33688 ;; Registers used:
 33689 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33690 ;; Tracked objects:
 33691 ;;		On entry : 0/0
 33692 ;;		On exit  : 0/0
 33693 ;;		Unchanged: 0/0
 33694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33695 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33696 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33698 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33699 ;;Total ram usage:        8 bytes
 33700 ;; Hardware stack levels used:    1
 33701 ;; Hardware stack levels required when called:   10
 33702 ;; This function calls:
 33703 ;;		Nothing
 33704 ;; This function is called by:
 33705 ;;		_USBDeviceInit
 33706 ;; This function uses a non-reentrant model
 33707 ;;
 33708                           
 33709                           	psect	text129
 33710  015AD2                     __ptext129:
 33711                           	opt stack 0
 33712  015AD2                     _memset:
 33713                           	opt stack 19
 33714                           
 33715                           ; BSR set to: 1
 33716                           ;incstack = 0
 33717  015AD2  C060  F066         	movff	memset@p1,memset@p
 33718  015AD6  C061  F067         	movff	memset@p1+1,memset@p+1
 33719  015ADA  D009               	goto	l3822
 33720  015ADC                     l17024:
 33721  015ADC  C066  FFD9         	movff	memset@p,fsr2l
 33722  015AE0  C067  FFDA         	movff	memset@p+1,fsr2h
 33723  015AE4  C062  FFDF         	movff	memset@c,indf2
 33724  015AE8  0100               	movlb	0	; () banked
 33725  015AEA  4B66               	infsnz	memset@p& (0+255),f,b
 33726  015AEC  2B67               	incf	(memset@p+1)& (0+255),f,b
 33727  015AEE                     l3822:
 33728                           
 33729                           ; BSR set to: 0
 33730  015AEE  0100               	movlb	0	; () banked
 33731  015AF0  0764               	decf	memset@n& (0+255),f,b
 33732  015AF2  A0D8               	btfss	status,0,c
 33733  015AF4  0765               	decf	(memset@n+1)& (0+255),f,b
 33734  015AF6  2964               	incf	memset@n& (0+255),w,b
 33735  015AF8  E1F1               	bnz	l17024
 33736  015AFA  2965               	incf	(memset@n+1)& (0+255),w,b
 33737  015AFC  B4D8               	btfsc	status,2,c
 33738  015AFE  0012               	return	
 33739  015B00  D7ED               	goto	l3823
 33740  015B02                     __end_of_memset:
 33741                           	opt stack 0
 33742                           tblptru	equ	0xFF8
 33743                           tblptrh	equ	0xFF7
 33744                           tblptrl	equ	0xFF6
 33745                           tablat	equ	0xFF5
 33746                           prodh	equ	0xFF4
 33747                           prodl	equ	0xFF3
 33748                           intcon	equ	0xFF2
 33749                           postinc0	equ	0xFEE
 33750                           wreg	equ	0xFE8
 33751                           indf1	equ	0xFE7
 33752                           postinc1	equ	0xFE6
 33753                           postdec1	equ	0xFE5
 33754                           plusw1	equ	0xFE3
 33755                           fsr1h	equ	0xFE2
 33756                           fsr1l	equ	0xFE1
 33757                           indf2	equ	0xFDF
 33758                           postinc2	equ	0xFDE
 33759                           postdec2	equ	0xFDD
 33760                           plusw2	equ	0xFDB
 33761                           fsr2h	equ	0xFDA
 33762                           fsr2l	equ	0xFD9
 33763                           status	equ	0xFD8
 33764                           
 33765 ;; *************** function _USBDeviceAttach *****************
 33766 ;; Defined at:
 33767 ;;		line 1354 in file "usb_device.c"
 33768 ;; Parameters:    Size  Location     Type
 33769 ;;		None
 33770 ;; Auto vars:     Size  Location     Type
 33771 ;;		None
 33772 ;; Return value:  Size  Location     Type
 33773 ;;                  1    wreg      void 
 33774 ;; Registers used:
 33775 ;;		wreg, status,2
 33776 ;; Tracked objects:
 33777 ;;		On entry : 0/0
 33778 ;;		On exit  : 0/0
 33779 ;;		Unchanged: 0/0
 33780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33785 ;;Total ram usage:        0 bytes
 33786 ;; Hardware stack levels used:    1
 33787 ;; Hardware stack levels required when called:   10
 33788 ;; This function calls:
 33789 ;;		Nothing
 33790 ;; This function is called by:
 33791 ;;		_main
 33792 ;; This function uses a non-reentrant model
 33793 ;;
 33794                           
 33795                           	psect	text130
 33796  015A40                     __ptext130:
 33797                           	opt stack 0
 33798  015A40                     _USBDeviceAttach:
 33799                           	opt stack 20
 33800                           
 33801                           ;usb_device.c: 1358: {;usb_device.c: 1359: if(1 == 1)
 33802                           
 33803                           ; BSR set to: 0
 33804                           ;incstack = 0
 33805  015A40  505D               	movf	_USBDeviceState,w,c	;volatile
 33806  015A42  A4D8               	btfss	status,2,c
 33807  015A44  0012               	return	
 33808                           
 33809                           ;usb_device.c: 1360: {;usb_device.c: 1362: UCON = 0;
 33810  015A46  0E00               	movlw	0
 33811  015A48  6E65               	movwf	3941,c	;volatile
 33812                           
 33813                           ;usb_device.c: 1365: UIE = 0;
 33814  015A4A  0E00               	movlw	0
 33815  015A4C  010F               	movlb	15	; () banked
 33816  015A4E  6F36               	movwf	54,b	;volatile
 33817                           
 33818                           ;usb_device.c: 1369: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 33819  015A50  0E16               	movlw	22
 33820  015A52  6F39               	movwf	57,b	;volatile
 33821  015A54  0E9F               	movlw	159
 33822  015A56  6F37               	movwf	55,b	;volatile
 33823  015A58  0E7B               	movlw	123
 33824  015A5A  6F36               	movwf	54,b	;volatile
 33825                           
 33826                           ; BSR set to: 15
 33827                           ;usb_device.c: 1371: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 33828  015A5C  8ED0               	bsf	4048,7,c	;volatile
 33829                           
 33830                           ; BSR set to: 15
 33831  015A5E  88A2               	bsf	4002,4,c	;volatile
 33832                           
 33833                           ; BSR set to: 15
 33834  015A60  88A0               	bsf	4000,4,c	;volatile
 33835                           
 33836                           ; BSR set to: 15
 33837  015A62  8EF2               	bsf	intcon,7,c	;volatile
 33838                           
 33839                           ;usb_device.c: 1374: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 33840  015A64  D001               	goto	l206
 33841  015A66                     l207:
 33842  015A66  8665               	bsf	3941,3,c	;volatile
 33843  015A68                     l206:
 33844  015A68  A665               	btfss	3941,3,c	;volatile
 33845  015A6A  D7FD               	goto	l207
 33846                           
 33847                           ;usb_device.c: 1377: USBDeviceState = ATTACHED_STATE;
 33848  015A6C  0E01               	movlw	1
 33849  015A6E  6E5D               	movwf	_USBDeviceState,c	;volatile
 33850  015A70  0012               	return	
 33851  015A72                     __end_of_USBDeviceAttach:
 33852                           	opt stack 0
 33853                           tblptru	equ	0xFF8
 33854                           tblptrh	equ	0xFF7
 33855                           tblptrl	equ	0xFF6
 33856                           tablat	equ	0xFF5
 33857                           prodh	equ	0xFF4
 33858                           prodl	equ	0xFF3
 33859                           intcon	equ	0xFF2
 33860                           postinc0	equ	0xFEE
 33861                           wreg	equ	0xFE8
 33862                           indf1	equ	0xFE7
 33863                           postinc1	equ	0xFE6
 33864                           postdec1	equ	0xFE5
 33865                           plusw1	equ	0xFE3
 33866                           fsr1h	equ	0xFE2
 33867                           fsr1l	equ	0xFE1
 33868                           indf2	equ	0xFDF
 33869                           postinc2	equ	0xFDE
 33870                           postdec2	equ	0xFDD
 33871                           plusw2	equ	0xFDB
 33872                           fsr2h	equ	0xFDA
 33873                           fsr2l	equ	0xFD9
 33874                           status	equ	0xFD8
 33875                           
 33876 ;; *************** function _SYSTEM_Initialize *****************
 33877 ;; Defined at:
 33878 ;;		line 39 in file "system.c"
 33879 ;; Parameters:    Size  Location     Type
 33880 ;;  state           1    wreg     enum E6623
 33881 ;; Auto vars:     Size  Location     Type
 33882 ;;  state           1    4[BANK0 ] enum E6623
 33883 ;;  pll_startup_    2    2[BANK0 ] unsigned int 
 33884 ;;  pll_startup_    2    0[BANK0 ] unsigned int 
 33885 ;; Return value:  Size  Location     Type
 33886 ;;                  1    wreg      void 
 33887 ;; Registers used:
 33888 ;;		wreg, status,2, status,0
 33889 ;; Tracked objects:
 33890 ;;		On entry : 0/0
 33891 ;;		On exit  : 0/0
 33892 ;;		Unchanged: 0/0
 33893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33895 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33897 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33898 ;;Total ram usage:        5 bytes
 33899 ;; Hardware stack levels used:    1
 33900 ;; Hardware stack levels required when called:   10
 33901 ;; This function calls:
 33902 ;;		Nothing
 33903 ;; This function is called by:
 33904 ;;		_main
 33905 ;; This function uses a non-reentrant model
 33906 ;;
 33907                           
 33908                           	psect	text131
 33909  014D26                     __ptext131:
 33910                           	opt stack 0
 33911  014D26                     _SYSTEM_Initialize:
 33912                           	opt stack 20
 33913                           
 33914                           ;incstack = 0
 33915                           ;SYSTEM_Initialize@state stored from wreg
 33916  014D26  0100               	movlb	0	; () banked
 33917  014D28  6F64               	movwf	SYSTEM_Initialize@state& (0+255),b
 33918                           
 33919                           ;system.c: 41: switch(state)
 33920  014D2A  D01E               	goto	l897
 33921  014D2C                     
 33922                           ;system.c: 50: {;system.c: 51: unsigned int pll_startup_counter = 600;
 33923  014D2C  0E02               	movlw	2
 33924  014D2E  0100               	movlb	0	; () banked
 33925  014D30  6F61               	movwf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),b
 33926  014D32  0E58               	movlw	88
 33927  014D34  6F60               	movwf	SYSTEM_Initialize@pll_startup_counter& (0+255),b
 33928                           
 33929                           ; BSR set to: 0
 33930                           ;system.c: 52: OSCTUNEbits.PLLEN = 1;
 33931  014D36  8C9B               	bsf	3995,6,c	;volatile
 33932  014D38                     l18176:
 33933                           
 33934                           ; BSR set to: 0
 33935  014D38  0760               	decf	SYSTEM_Initialize@pll_startup_counter& (0+255),f,b
 33936  014D3A  A0D8               	btfss	status,0,c
 33937  014D3C  0761               	decf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),f,b
 33938  014D3E  2960               	incf	SYSTEM_Initialize@pll_startup_counter& (0+255),w,b
 33939  014D40  E1FB               	bnz	l18176
 33940  014D42  2961               	incf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),w,b
 33941  014D44  B4D8               	btfsc	status,2,c
 33942  014D46  0012               	return	
 33943  014D48  D7F7               	goto	l900
 33944  014D4A                     
 33945                           ; BSR set to: 0
 33946                           ;system.c: 78: OSCCON = 0x70;
 33947                           
 33948                           ; BSR set to: 0
 33949  014D4A  0E70               	movlw	112
 33950  014D4C  6ED3               	movwf	4051,c	;volatile
 33951                           
 33952                           ;system.c: 84: {;system.c: 85: unsigned int pll_startup_counter = 800;
 33953  014D4E  0E03               	movlw	3
 33954  014D50  6F63               	movwf	(SYSTEM_Initialize@pll_startup_counter_3143+1)& (0+255),b
 33955  014D52  0E20               	movlw	32
 33956  014D54  6F62               	movwf	SYSTEM_Initialize@pll_startup_counter_3143& (0+255),b
 33957  014D56                     l18180:
 33958                           
 33959                           ; BSR set to: 0
 33960  014D56  0762               	decf	SYSTEM_Initialize@pll_startup_counter_3143& (0+255),f,b
 33961  014D58  A0D8               	btfss	status,0,c
 33962  014D5A  0763               	decf	(SYSTEM_Initialize@pll_startup_counter_3143+1)& (0+255),f,b
 33963  014D5C  2962               	incf	SYSTEM_Initialize@pll_startup_counter_3143& (0+255),w,b
 33964  014D5E  E1FB               	bnz	l18180
 33965  014D60  2963               	incf	(SYSTEM_Initialize@pll_startup_counter_3143+1)& (0+255),w,b
 33966  014D62  B4D8               	btfsc	status,2,c
 33967  014D64  0012               	return	
 33968  014D66  D7F7               	goto	l906
 33969  014D68                     l897:
 33970                           
 33971                           ; BSR set to: 0
 33972  014D68  0100               	movlb	0	; () banked
 33973  014D6A  5164               	movf	SYSTEM_Initialize@state& (0+255),w,b
 33974                           
 33975                           ; Switch size 1, requested type "space"
 33976                           ; Number of cases is 3, Range of values is 0 to 2
 33977                           ; switch strategies available:
 33978                           ; Name         Instructions Cycles
 33979                           ; simple_byte           10     6 (average)
 33980                           ;	Chosen strategy is simple_byte
 33981  014D6C  0A00               	xorlw	0	; case 0
 33982  014D6E  B4D8               	btfsc	status,2,c
 33983  014D70  D7DD               	goto	l898
 33984  014D72  0A01               	xorlw	1	; case 1
 33985  014D74  B4D8               	btfsc	status,2,c
 33986  014D76  0012               	return	
 33987  014D78  0A03               	xorlw	3	; case 2
 33988  014D7A  A4D8               	btfss	status,2,c
 33989  014D7C  0012               	return	
 33990  014D7E  D7E5               	goto	l904
 33991  014D80                     __end_of_SYSTEM_Initialize:
 33992                           	opt stack 0
 33993                           tblptru	equ	0xFF8
 33994                           tblptrh	equ	0xFF7
 33995                           tblptrl	equ	0xFF6
 33996                           tablat	equ	0xFF5
 33997                           prodh	equ	0xFF4
 33998                           prodl	equ	0xFF3
 33999                           intcon	equ	0xFF2
 34000                           postinc0	equ	0xFEE
 34001                           wreg	equ	0xFE8
 34002                           indf1	equ	0xFE7
 34003                           postinc1	equ	0xFE6
 34004                           postdec1	equ	0xFE5
 34005                           plusw1	equ	0xFE3
 34006                           fsr1h	equ	0xFE2
 34007                           fsr1l	equ	0xFE1
 34008                           indf2	equ	0xFDF
 34009                           postinc2	equ	0xFDE
 34010                           postdec2	equ	0xFDD
 34011                           plusw2	equ	0xFDB
 34012                           fsr2h	equ	0xFDA
 34013                           fsr2l	equ	0xFD9
 34014                           status	equ	0xFD8
 34015                           
 34016 ;; *************** function _APP_DeviceMSDTasks *****************
 34017 ;; Defined at:
 34018 ;;		line 110 in file "app_device_msd.c"
 34019 ;; Parameters:    Size  Location     Type
 34020 ;;		None
 34021 ;; Auto vars:     Size  Location     Type
 34022 ;;		None
 34023 ;; Return value:  Size  Location     Type
 34024 ;;                  1    wreg      void 
 34025 ;; Registers used:
 34026 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 34027 ;; Tracked objects:
 34028 ;;		On entry : 0/0
 34029 ;;		On exit  : 0/0
 34030 ;;		Unchanged: 0/0
 34031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34036 ;;Total ram usage:        0 bytes
 34037 ;; Hardware stack levels used:    1
 34038 ;; Hardware stack levels required when called:   21
 34039 ;; This function calls:
 34040 ;;		_MSDTasks
 34041 ;; This function is called by:
 34042 ;;		_main
 34043 ;; This function uses a non-reentrant model
 34044 ;;
 34045                           
 34046                           	psect	text132
 34047  015FA4                     __ptext132:
 34048                           	opt stack 0
 34049  015FA4                     _APP_DeviceMSDTasks:
 34050                           	opt stack 9
 34051                           
 34052                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 34053                           
 34054                           ; BSR set to: 0
 34055                           ;incstack = 0
 34056  015FA4  0E20               	movlw	32
 34057  015FA6  605D               	cpfslt	_USBDeviceState,c	;volatile
 34058  015FA8  D001               	goto	l986
 34059  015FAA  0012               	return	
 34060  015FAC                     l986:
 34061                           
 34062                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 34063  015FAC  B265               	btfsc	3941,1,c	;volatile
 34064  015FAE  0012               	return	
 34065                           
 34066                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 34067                           
 34068                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 34069  015FB0  ECDC  F06E         	call	_MSDTasks	;wreg free
 34070  015FB4  0012               	return		;funcret
 34071  015FB6                     __end_of_APP_DeviceMSDTasks:
 34072                           	opt stack 0
 34073                           tblptru	equ	0xFF8
 34074                           tblptrh	equ	0xFF7
 34075                           tblptrl	equ	0xFF6
 34076                           tablat	equ	0xFF5
 34077                           prodh	equ	0xFF4
 34078                           prodl	equ	0xFF3
 34079                           intcon	equ	0xFF2
 34080                           postinc0	equ	0xFEE
 34081                           wreg	equ	0xFE8
 34082                           indf1	equ	0xFE7
 34083                           postinc1	equ	0xFE6
 34084                           postdec1	equ	0xFE5
 34085                           plusw1	equ	0xFE3
 34086                           fsr1h	equ	0xFE2
 34087                           fsr1l	equ	0xFE1
 34088                           indf2	equ	0xFDF
 34089                           postinc2	equ	0xFDE
 34090                           postdec2	equ	0xFDD
 34091                           plusw2	equ	0xFDB
 34092                           fsr2h	equ	0xFDA
 34093                           fsr2l	equ	0xFD9
 34094                           status	equ	0xFD8
 34095                           
 34096 ;; *************** function _MSDTasks *****************
 34097 ;; Defined at:
 34098 ;;		line 335 in file "usb_device_msd.c"
 34099 ;; Parameters:    Size  Location     Type
 34100 ;;		None
 34101 ;; Auto vars:     Size  Location     Type
 34102 ;;  i               1   81[BANK0 ] unsigned char 
 34103 ;; Return value:  Size  Location     Type
 34104 ;;                  1    wreg      unsigned char 
 34105 ;; Registers used:
 34106 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 34107 ;; Tracked objects:
 34108 ;;		On entry : 0/0
 34109 ;;		On exit  : 0/0
 34110 ;;		Unchanged: 0/0
 34111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34113 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34114 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34115 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34116 ;;Total ram usage:        6 bytes
 34117 ;; Hardware stack levels used:    1
 34118 ;; Hardware stack levels required when called:   20
 34119 ;; This function calls:
 34120 ;;		_MSDProcessCommand
 34121 ;;		_USBStallEndpoint
 34122 ;;		_USBTransferOnePacket
 34123 ;; This function is called by:
 34124 ;;		_APP_DeviceMSDTasks
 34125 ;; This function uses a non-reentrant model
 34126 ;;
 34127                           
 34128                           	psect	text133
 34129  00DDB8                     __ptext133:
 34130                           	opt stack 0
 34131  00DDB8                     _MSDTasks:
 34132                           	opt stack 9
 34133                           
 34134                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 34135                           
 34136                           ;incstack = 0
 34137  00DDB8  0E20               	movlw	32
 34138  00DDBA  185D               	xorwf	_USBDeviceState,w,c	;volatile
 34139  00DDBC  A4D8               	btfss	status,2,c
 34140  00DDBE  0012               	return	
 34141                           
 34142                           ;usb_device_msd.c: 345: };usb_device_msd.c: 353: {PIE2bits.USBIE = 0;};
 34143                           
 34144                           ;usb_device_msd.c: 343: {;usb_device_msd.c: 344: return 0x00;;	Return value of _MSDTasks
      +                           is never used
 34145  00DDC0  98A0               	bcf	4000,4,c	;volatile
 34146                           
 34147                           ;usb_device_msd.c: 357: switch(MSD_State)
 34148  00DDC2  D11C               	goto	l570
 34149  00DDC4                     
 34150                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 34151  00DDC4  0101               	movlb	1	; () banked
 34152  00DDC6  5141               	movf	_USBMSDOutHandle& (0+255),w,b
 34153  00DDC8  1142               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 34154  00DDCA  B4D8               	btfsc	status,2,c
 34155  00DDCC  D006               	goto	u16380
 34156                           
 34157                           ; BSR set to: 1
 34158  00DDCE  C141  FFD9         	movff	_USBMSDOutHandle,fsr2l
 34159  00DDD2  C142  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 34160  00DDD6  BEDF               	btfsc	indf2,7,c
 34161  00DDD8  D120               	goto	l586
 34162  00DDDA                     u16380:
 34163                           
 34164                           ; BSR set to: 1
 34165                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 34166                           
 34167                           ; BSR set to: 1
 34168  00DDDA  0E00               	movlw	0
 34169  00DDDC  0100               	movlb	0	; () banked
 34170  00DDDE  6FB1               	movwf	MSDTasks@i& (0+255),b
 34171  00DDE0                     l17110:
 34172                           
 34173                           ; BSR set to: 0
 34174  00DDE0  0E1E               	movlw	30
 34175  00DDE2  65B1               	cpfsgt	MSDTasks@i& (0+255),b
 34176  00DDE4  D001               	goto	l575
 34177  00DDE6  D014               	goto	u16400
 34178  00DDE8                     l575:
 34179                           
 34180                           ; BSR set to: 0
 34181                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 34182                           
 34183                           ; BSR set to: 0
 34184  00DDE8  51B1               	movf	MSDTasks@i& (0+255),w,b
 34185  00DDEA  0D01               	mullw	1
 34186  00DDEC  0E40               	movlw	64
 34187  00DDEE  24F3               	addwf	prodl,w,c
 34188  00DDF0  6ED9               	movwf	fsr2l,c
 34189  00DDF2  0E0D               	movlw	13
 34190  00DDF4  20F4               	addwfc	prodh,w,c
 34191  00DDF6  6EDA               	movwf	fsr2h,c
 34192  00DDF8  51B1               	movf	MSDTasks@i& (0+255),w,b
 34193  00DDFA  0D01               	mullw	1
 34194  00DDFC  0E00               	movlw	low _gblCBW
 34195  00DDFE  24F3               	addwf	prodl,w,c
 34196  00DE00  6EE1               	movwf	fsr1l,c
 34197  00DE02  0E02               	movlw	high _gblCBW
 34198  00DE04  20F4               	addwfc	prodh,w,c
 34199  00DE06  6EE2               	movwf	fsr1h,c
 34200  00DE08  CFDF FFE7          	movff	indf2,indf1
 34201                           
 34202                           ; BSR set to: 0
 34203  00DE0C  2BB1               	incf	MSDTasks@i& (0+255),f,b
 34204  00DE0E  D7E8               	goto	l17110
 34205  00DE10                     u16400:
 34206                           
 34207                           ; BSR set to: 0
 34208                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 34209                           
 34210                           ; BSR set to: 0
 34211  00DE10  0101               	movlb	1	; () banked
 34212  00DE12  EE20 F001          	lfsr	2,1
 34213  00DE16  5141               	movf	_USBMSDOutHandle& (0+255),w,b
 34214  00DE18  26D9               	addwf	fsr2l,f,c
 34215  00DE1A  5142               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 34216  00DE1C  22DA               	addwfc	fsr2h,f,c
 34217  00DE1E  0E1F               	movlw	31
 34218  00DE20  18DE               	xorwf	postinc2,w,c
 34219  00DE22  A4D8               	btfss	status,2,c
 34220  00DE24  D075               	goto	l577
 34221                           
 34222                           ; BSR set to: 1
 34223  00DE26  0E55               	movlw	85
 34224  00DE28  0102               	movlb	2	; () banked
 34225  00DE2A  1900               	xorwf	_gblCBW& (0+255),w,b
 34226  00DE2C  E171               	bnz	l577
 34227  00DE2E  0E53               	movlw	83
 34228  00DE30  1901               	xorwf	(_gblCBW+1)& (0+255),w,b
 34229  00DE32  E16E               	bnz	l577
 34230  00DE34  0E42               	movlw	66
 34231  00DE36  1902               	xorwf	(_gblCBW+2)& (0+255),w,b
 34232  00DE38  E16B               	bnz	l577
 34233  00DE3A  0E43               	movlw	67
 34234  00DE3C  1903               	xorwf	(_gblCBW+3)& (0+255),w,b
 34235  00DE3E  A4D8               	btfss	status,2,c
 34236  00DE40  D067               	goto	l577
 34237                           
 34238                           ; BSR set to: 2
 34239                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 34240  00DE42  0E01               	movlw	1
 34241  00DE44  0101               	movlb	1	; () banked
 34242  00DE46  6F50               	movwf	_MSDCBWValid& (0+255),b
 34243                           
 34244                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 34245  00DE48  0102               	movlb	2	; () banked
 34246  00DE4A  510D               	movf	(_gblCBW+13)& (0+255),w,b
 34247  00DE4C  A4D8               	btfss	status,2,c
 34248  00DE4E  D053               	goto	l578
 34249                           
 34250                           ; BSR set to: 2
 34251  00DE50  0E11               	movlw	17
 34252  00DE52  610E               	cpfslt	(_gblCBW+14)& (0+255),b
 34253  00DE54  D050               	goto	l578
 34254                           
 34255                           ; BSR set to: 2
 34256  00DE56  510E               	movf	(_gblCBW+14)& (0+255),w,b
 34257  00DE58  B4D8               	btfsc	status,2,c
 34258  00DE5A  D04D               	goto	l578
 34259                           
 34260                           ; BSR set to: 2
 34261  00DE5C  C20C  F0AC         	movff	_gblCBW+12,??_MSDTasks
 34262  00DE60  0E3F               	movlw	63
 34263  00DE62  0100               	movlb	0	; () banked
 34264  00DE64  17AC               	andwf	??_MSDTasks& (0+255),f,b
 34265  00DE66  A4D8               	btfss	status,2,c
 34266  00DE68  D046               	goto	l578
 34267                           
 34268                           ; BSR set to: 0
 34269                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 34270  00DE6A  0E55               	movlw	85
 34271  00DE6C  010D               	movlb	13	; () banked
 34272  00DE6E  6F80               	movwf	128,b	;volatile
 34273  00DE70  0E53               	movlw	83
 34274  00DE72  6F81               	movwf	129,b	;volatile
 34275  00DE74  0E42               	movlw	66
 34276  00DE76  6F82               	movwf	130,b	;volatile
 34277  00DE78  0E53               	movlw	83
 34278  00DE7A  6F83               	movwf	131,b	;volatile
 34279                           
 34280                           ; BSR set to: 13
 34281                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 34282  00DE7C  C204  FD84         	movff	_gblCBW+4,3460	;volatile
 34283  00DE80  C205  FD85         	movff	_gblCBW+5,3461	;volatile
 34284  00DE84  C206  FD86         	movff	_gblCBW+6,3462	;volatile
 34285  00DE88  C207  FD87         	movff	_gblCBW+7,3463	;volatile
 34286                           
 34287                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 34288  00DE8C  0E00               	movlw	0
 34289  00DE8E  6F88               	movwf	136,b	;volatile
 34290  00DE90  0E00               	movlw	0
 34291  00DE92  6F89               	movwf	137,b	;volatile
 34292  00DE94  0E00               	movlw	0
 34293  00DE96  6F8A               	movwf	138,b	;volatile
 34294  00DE98  0E00               	movlw	0
 34295  00DE9A  6F8B               	movwf	139,b	;volatile
 34296                           
 34297                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 34298  00DE9C  0E00               	movlw	0
 34299  00DE9E  6F8C               	movwf	140,b	;volatile
 34300                           
 34301                           ; BSR set to: 13
 34302                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 34303  00DEA0  0101               	movlb	1	; () banked
 34304  00DEA2  6957               	setf	_MSDCommandState& (0+255),b
 34305                           
 34306                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 34307  00DEA4  0E00               	movlw	0
 34308  00DEA6  6F56               	movwf	_MSDReadState& (0+255),b
 34309                           
 34310                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 34311  00DEA8  0E00               	movlw	0
 34312  00DEAA  6F55               	movwf	_MSDWriteState& (0+255),b
 34313                           
 34314                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 34315  00DEAC  0E00               	movlw	0
 34316  00DEAE  6F54               	movwf	_MSDRetryAttempt& (0+255),b
 34317                           
 34318                           ; BSR set to: 1
 34319                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 34320  00DEB0  0E03               	movlw	3
 34321  00DEB2  0102               	movlb	2	; () banked
 34322  00DEB4  190F               	xorwf	(_gblCBW+15)& (0+255),w,b
 34323  00DEB6  B4D8               	btfsc	status,2,c
 34324  00DEB8  D008               	goto	l579
 34325                           
 34326                           ; BSR set to: 2
 34327                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 34328  00DEBA  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 34329  00DEBC  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 34330  00DEBE  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 34331  00DEC0  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 34332                           
 34333                           ; BSR set to: 2
 34334                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 34335  00DEC2  0E00               	movlw	0
 34336  00DEC4  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 34337                           
 34338                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 34339  00DEC6  0E00               	movlw	0
 34340  00DEC8  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 34341  00DECA                     l579:
 34342                           
 34343                           ; BSR set to: 2
 34344                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 34345                           
 34346                           ; BSR set to: 2
 34347  00DECA  AF0C               	btfss	(_gblCBW+12)& (0+255),7,b
 34348  00DECC  D002               	goto	l580
 34349                           
 34350                           ; BSR set to: 2
 34351                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 34352  00DECE  0E01               	movlw	1
 34353  00DED0  D001               	goto	L47
 34354  00DED2                     l580:
 34355                           
 34356                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 34357                           
 34358                           ; BSR set to: 1
 34359  00DED2  0E02               	movlw	2
 34360  00DED4                     L47:
 34361  00DED4  0101               	movlb	1	; () banked
 34362  00DED6  6F58               	movwf	_MSD_State& (0+255),b
 34363                           
 34364                           ; BSR set to: 1
 34365                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 34366                           
 34367                           ; BSR set to: 1
 34368  00DED8  0102               	movlb	2	; () banked
 34369  00DEDA  5108               	movf	(_gblCBW+8)& (0+255),w,b
 34370  00DEDC  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 34371  00DEDE  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 34372  00DEE0  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 34373  00DEE2  B4D8               	btfsc	status,2,c
 34374  00DEE4  D002               	goto	l582
 34375                           
 34376                           ; BSR set to: 2
 34377                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 34378  00DEE6  0E00               	movlw	0
 34379  00DEE8  D001               	goto	L48
 34380  00DEEA                     l582:
 34381                           
 34382                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 34383                           
 34384                           ; BSR set to: 1
 34385  00DEEA  0E01               	movlw	1
 34386  00DEEC                     L48:
 34387  00DEEC  0101               	movlb	1	; () banked
 34388  00DEEE  6F51               	movwf	_MSDHostNoData& (0+255),b
 34389                           
 34390                           ; BSR set to: 1
 34391                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 34392                           
 34393                           ; BSR set to: 1
 34394  00DEF0  C20F  F157         	movff	_gblCBW+15,_MSDCommandState
 34395                           
 34396                           ;usb_device_msd.c: 454: }
 34397  00DEF4  D092               	goto	l586
 34398  00DEF6                     l578:
 34399                           
 34400                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 34401                           
 34402                           ; BSR set to: 1
 34403  00DEF6  0E01               	movlw	1
 34404  00DEF8  0100               	movlb	0	; () banked
 34405  00DEFA  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34406  00DEFC  0E02               	movlw	2
 34407  00DEFE  EC9A  F089         	call	_USBStallEndpoint
 34408                           
 34409                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 34410  00DF02  0E00               	movlw	0
 34411  00DF04  0100               	movlb	0	; () banked
 34412  00DF06  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34413  00DF08  0E02               	movlw	2
 34414  00DF0A  EC9A  F089         	call	_USBStallEndpoint
 34415                           
 34416                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 34417  00DF0E  D085               	goto	l586
 34418  00DF10                     l577:
 34419                           
 34420                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 34421  00DF10  0E01               	movlw	1
 34422  00DF12  0100               	movlb	0	; () banked
 34423  00DF14  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34424  00DF16  0E02               	movlw	2
 34425  00DF18  EC9A  F089         	call	_USBStallEndpoint
 34426                           
 34427                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 34428  00DF1C  0E00               	movlw	0
 34429  00DF1E  0100               	movlb	0	; () banked
 34430  00DF20  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34431  00DF22  0E02               	movlw	2
 34432  00DF24  EC9A  F089         	call	_USBStallEndpoint
 34433                           
 34434                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 34435  00DF28  0E00               	movlw	0
 34436  00DF2A  0101               	movlb	1	; () banked
 34437  00DF2C  6F50               	movwf	_MSDCBWValid& (0+255),b
 34438                           
 34439                           ; BSR set to: 1
 34440                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 34441                           
 34442                           ; BSR set to: 1
 34443  00DF2E  D075               	goto	l586
 34444  00DF30                     
 34445                           ; BSR set to: 1
 34446                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 34447                           
 34448                           ; BSR set to: 1
 34449  00DF30  ECA1  F084         	call	_MSDProcessCommand	;wreg free
 34450  00DF34  0AFF               	xorlw	255
 34451  00DF36  A4D8               	btfss	status,2,c
 34452  00DF38  D070               	goto	l586
 34453  00DF3A  D011               	goto	l591
 34454  00DF3C                     
 34455                           ; BSR set to: 1
 34456                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 34457                           
 34458                           ; BSR set to: 1
 34459  00DF3C  ECA1  F084         	call	_MSDProcessCommand	;wreg free
 34460  00DF40  0AFF               	xorlw	255
 34461  00DF42  A4D8               	btfss	status,2,c
 34462  00DF44  D06A               	goto	l586
 34463                           
 34464                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 34465  00DF46  010D               	movlb	13	; () banked
 34466  00DF48  518C               	movf	140,w,b	;volatile
 34467  00DF4A  A4D8               	btfss	status,2,c
 34468  00DF4C  D008               	goto	l591
 34469                           
 34470                           ; BSR set to: 13
 34471  00DF4E  5188               	movf	136,w,b	;volatile
 34472  00DF50  1189               	iorwf	137,w,b	;volatile
 34473  00DF52  118A               	iorwf	138,w,b	;volatile
 34474  00DF54  118B               	iorwf	139,w,b	;volatile
 34475  00DF56  B4D8               	btfsc	status,2,c
 34476  00DF58  D002               	goto	l591
 34477                           
 34478                           ; BSR set to: 13
 34479                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 34480  00DF5A  0E02               	movlw	2
 34481  00DF5C  6F8C               	movwf	140,b	;volatile
 34482  00DF5E                     l591:
 34483                           
 34484                           ; BSR set to: 13
 34485                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 34486  00DF5E  0E03               	movlw	3
 34487  00DF60  D03E               	goto	L46
 34488  00DF62                     
 34489                           ; BSR set to: 1
 34490                           
 34491                           ; BSR set to: 1
 34492  00DF62  C113  F0AD         	movff	_pBDTEntryIn+4,_MSDTasks$2588
 34493  00DF66  C114  F0AE         	movff	_pBDTEntryIn+5,_MSDTasks$2588+1
 34494                           
 34495                           ; BSR set to: 1
 34496                           
 34497                           ; BSR set to: 1
 34498                           
 34499                           ; BSR set to: 1
 34500  00DF6A  0100               	movlb	0	; () banked
 34501  00DF6C  51AD               	movf	_MSDTasks$2588& (0+255),w,b
 34502  00DF6E  11AE               	iorwf	(_MSDTasks$2588+1)& (0+255),w,b
 34503  00DF70  B4D8               	btfsc	status,2,c
 34504  00DF72  D00A               	goto	l593
 34505                           
 34506                           ; BSR set to: 0
 34507  00DF74  C113  F0AF         	movff	_pBDTEntryIn+4,_MSDTasks$2589
 34508  00DF78  C114  F0B0         	movff	_pBDTEntryIn+5,_MSDTasks$2589+1
 34509                           
 34510                           ; BSR set to: 0
 34511                           
 34512                           ; BSR set to: 0
 34513                           
 34514                           ; BSR set to: 0
 34515                           
 34516                           ; BSR set to: 0
 34517  00DF7C  C0AF  FFD9         	movff	_MSDTasks$2589,fsr2l
 34518  00DF80  C0B0  FFDA         	movff	_MSDTasks$2589+1,fsr2h
 34519  00DF84  BEDF               	btfsc	indf2,7,c
 34520  00DF86  D049               	goto	l586
 34521  00DF88                     l593:
 34522                           
 34523                           ; BSR set to: 0
 34524                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 34525                           
 34526                           ; BSR set to: 0
 34527  00DF88  0E01               	movlw	1
 34528  00DF8A  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 34529  00DF8C  0E80               	movlw	128
 34530  00DF8E  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 34531  00DF90  0E0D               	movlw	13
 34532  00DF92  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 34533  00DF94  0E0D               	movlw	13
 34534  00DF96  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 34535  00DF98  0E02               	movlw	2
 34536  00DF9A  EC1F  F08A         	call	_USBTransferOnePacket
 34537  00DF9E  C060  F13F         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 34538  00DFA2  C061  F140         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 34539                           
 34540                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 34541  00DFA6  0101               	movlb	1	; () banked
 34542  00DFA8  5141               	movf	_USBMSDOutHandle& (0+255),w,b
 34543  00DFAA  1142               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 34544  00DFAC  B4D8               	btfsc	status,2,c
 34545  00DFAE  D006               	goto	u16570
 34546                           
 34547                           ; BSR set to: 1
 34548  00DFB0  C141  FFD9         	movff	_USBMSDOutHandle,fsr2l
 34549  00DFB4  C142  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 34550  00DFB8  BEDF               	btfsc	indf2,7,c
 34551  00DFBA  D010               	goto	l602
 34552  00DFBC                     u16570:
 34553                           
 34554                           ; BSR set to: 1
 34555                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 34556                           
 34557                           ; BSR set to: 1
 34558  00DFBC  0E00               	movlw	0
 34559  00DFBE  0100               	movlb	0	; () banked
 34560  00DFC0  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 34561  00DFC2  0E40               	movlw	64
 34562  00DFC4  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 34563  00DFC6  0E0D               	movlw	13
 34564  00DFC8  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 34565  00DFCA  0E40               	movlw	64
 34566  00DFCC  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 34567  00DFCE  0E02               	movlw	2
 34568  00DFD0  EC1F  F08A         	call	_USBTransferOnePacket
 34569  00DFD4  C060  F141         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 34570  00DFD8  C061  F142         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 34571  00DFDC                     l602:
 34572                           
 34573                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 34574  00DFDC  0E00               	movlw	0
 34575  00DFDE                     L46:
 34576  00DFDE  0101               	movlb	1	; () banked
 34577  00DFE0  6F58               	movwf	_MSD_State& (0+255),b
 34578                           
 34579                           ;usb_device_msd.c: 513: break;
 34580  00DFE2  D01B               	goto	l586
 34581  00DFE4                     
 34582                           ; BSR set to: 1
 34583                           ;usb_device_msd.c: 518: MSD_State=0x00;
 34584                           
 34585                           ; BSR set to: 1
 34586  00DFE4  0E00               	movlw	0
 34587  00DFE6  6F58               	movwf	_MSD_State& (0+255),b
 34588                           
 34589                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 34590  00DFE8  0E02               	movlw	2
 34591  00DFEA  010D               	movlb	13	; () banked
 34592  00DFEC  6F8C               	movwf	140,b	;volatile
 34593                           
 34594                           ; BSR set to: 13
 34595                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 34596  00DFEE  0E00               	movlw	0
 34597  00DFF0  0100               	movlb	0	; () banked
 34598  00DFF2  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34599  00DFF4  0E02               	movlw	2
 34600  00DFF6  EC9A  F089         	call	_USBStallEndpoint
 34601                           
 34602                           ;usb_device_msd.c: 521: }
 34603  00DFFA  D00F               	goto	l586
 34604  00DFFC                     l570:
 34605  00DFFC  0101               	movlb	1	; () banked
 34606  00DFFE  5158               	movf	_MSD_State& (0+255),w,b
 34607                           
 34608                           ; Switch size 1, requested type "space"
 34609                           ; Number of cases is 4, Range of values is 0 to 3
 34610                           ; switch strategies available:
 34611                           ; Name         Instructions Cycles
 34612                           ; simple_byte           13     7 (average)
 34613                           ;	Chosen strategy is simple_byte
 34614  00E000  0A00               	xorlw	0	; case 0
 34615  00E002  B4D8               	btfsc	status,2,c
 34616  00E004  D6DF               	goto	l571
 34617  00E006  0A01               	xorlw	1	; case 1
 34618  00E008  B4D8               	btfsc	status,2,c
 34619  00E00A  D792               	goto	l587
 34620  00E00C  0A03               	xorlw	3	; case 2
 34621  00E00E  B4D8               	btfsc	status,2,c
 34622  00E010  D795               	goto	l589
 34623  00E012  0A01               	xorlw	1	; case 3
 34624  00E014  B4D8               	btfsc	status,2,c
 34625  00E016  D7A5               	goto	l592
 34626  00E018  D7E5               	goto	l605
 34627  00E01A                     l586:
 34628                           
 34629                           ;usb_device_msd.c: 524: {PIE2bits.USBIE = 1;};
 34630  00E01A  88A0               	bsf	4000,4,c	;volatile
 34631                           
 34632                           ;usb_device_msd.c: 526: return MSD_State;;	Return value of _MSDTasks is never used
 34633  00E01C  0012               	return		;funcret
 34634  00E01E                     __end_of_MSDTasks:
 34635                           	opt stack 0
 34636                           tblptru	equ	0xFF8
 34637                           tblptrh	equ	0xFF7
 34638                           tblptrl	equ	0xFF6
 34639                           tablat	equ	0xFF5
 34640                           prodh	equ	0xFF4
 34641                           prodl	equ	0xFF3
 34642                           intcon	equ	0xFF2
 34643                           postinc0	equ	0xFEE
 34644                           wreg	equ	0xFE8
 34645                           indf1	equ	0xFE7
 34646                           postinc1	equ	0xFE6
 34647                           postdec1	equ	0xFE5
 34648                           plusw1	equ	0xFE3
 34649                           fsr1h	equ	0xFE2
 34650                           fsr1l	equ	0xFE1
 34651                           indf2	equ	0xFDF
 34652                           postinc2	equ	0xFDE
 34653                           postdec2	equ	0xFDD
 34654                           plusw2	equ	0xFDB
 34655                           fsr2h	equ	0xFDA
 34656                           fsr2l	equ	0xFD9
 34657                           status	equ	0xFD8
 34658                           
 34659 ;; *************** function _MSDProcessCommand *****************
 34660 ;; Defined at:
 34661 ;;		line 553 in file "usb_device_msd.c"
 34662 ;; Parameters:    Size  Location     Type
 34663 ;;		None
 34664 ;; Auto vars:     Size  Location     Type
 34665 ;;		None
 34666 ;; Return value:  Size  Location     Type
 34667 ;;                  1    wreg      unsigned char 
 34668 ;; Registers used:
 34669 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 34670 ;; Tracked objects:
 34671 ;;		On entry : 0/0
 34672 ;;		On exit  : 0/0
 34673 ;;		Unchanged: 0/0
 34674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34677 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34678 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34679 ;;Total ram usage:        5 bytes
 34680 ;; Hardware stack levels used:    1
 34681 ;; Hardware stack levels required when called:   19
 34682 ;; This function calls:
 34683 ;;		_ExternalFlash_MediaDetect
 34684 ;;		_ExternalFlash_MediaInitialize
 34685 ;;		_MSDProcessCommandMediaAbsent
 34686 ;;		_MSDProcessCommandMediaPresent
 34687 ;; This function is called by:
 34688 ;;		_MSDTasks
 34689 ;; This function uses a non-reentrant model
 34690 ;;
 34691                           
 34692                           	psect	text134
 34693  010942                     __ptext134:
 34694                           	opt stack 0
 34695  010942                     _MSDProcessCommand:
 34696                           	opt stack 9
 34697                           
 34698                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 34699                           
 34700                           ;incstack = 0
 34701  010942  C2B2  F060         	movff	_LUN+21,ExternalFlash_MediaDetect@config
 34702  010946  C2B3  F061         	movff	_LUN+22,ExternalFlash_MediaDetect@config+1
 34703  01094A  EE22  F0A6         	lfsr	2,_LUN+9
 34704  01094E  D801               	call	u15068
 34705  010950  D00A               	goto	u15069
 34706  010952                     u15068:
 34707  010952  0005               	push	
 34708  010954  6EFA               	movwf	pclath,c
 34709  010956  50DE               	movf	postinc2,w,c
 34710  010958  6EFD               	movwf	tosl,c
 34711  01095A  50DE               	movf	postinc2,w,c
 34712  01095C  6EFE               	movwf	tosh,c
 34713  01095E  50DE               	movf	postinc2,w,c
 34714  010960  6EFF               	movwf	tosu,c
 34715  010962  50FA               	movf	pclath,w,c
 34716  010964  0012               	return		;indir
 34717  010966                     u15069:
 34718  010966  0900               	iorlw	0
 34719  010968  B4D8               	btfsc	status,2,c
 34720  01096A  D00C               	goto	u15080
 34721  01096C  0102               	movlb	2	; () banked
 34722  01096E  510D               	movf	(_gblCBW+13)& (0+255),w,b
 34723  010970  0D01               	mullw	1
 34724  010972  0E52               	movlw	low _SoftDetach
 34725  010974  24F3               	addwf	prodl,w,c
 34726  010976  6ED9               	movwf	fsr2l,c
 34727  010978  0E01               	movlw	high _SoftDetach
 34728  01097A  20F4               	addwfc	prodh,w,c
 34729  01097C  6EDA               	movwf	fsr2h,c
 34730  01097E  04DE               	decf	postinc2,w,c
 34731  010980  A4D8               	btfss	status,2,c
 34732  010982  D01D               	goto	l608
 34733  010984                     u15080:
 34734                           
 34735                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 34736                           
 34737                           ; BSR set to: 2
 34738  010984  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 34739  010988  0E01               	movlw	1
 34740  01098A  0100               	movlb	0	; () banked
 34741  01098C  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 34742  01098E  0E00               	movlw	0
 34743  010990  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 34744  010992  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 34745  010994  D003               	goto	u15094
 34746  010996                     u15095:
 34747  010996  90D8               	bcf	status,0,c
 34748  010998  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 34749  01099A  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 34750  01099C                     u15094:
 34751  01099C  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 34752  01099E  D7FB               	goto	u15095
 34753  0109A0  0100               	movlb	0	; () banked
 34754  0109A2  1DA8               	comf	(??_MSDProcessCommand+1)& (0+255),w,b
 34755  0109A4  6FAA               	movwf	(??_MSDProcessCommand+3)& (0+255),b
 34756  0109A6  1DA9               	comf	(??_MSDProcessCommand+2)& (0+255),w,b
 34757  0109A8  6FAB               	movwf	(??_MSDProcessCommand+4)& (0+255),b
 34758  0109AA  51AA               	movf	(??_MSDProcessCommand+3)& (0+255),w,b
 34759  0109AC  0102               	movlb	2	; () banked
 34760  0109AE  1744               	andwf	_gblMediaPresent& (0+255),f,b
 34761  0109B0  0100               	movlb	0	; () banked
 34762  0109B2  51AB               	movf	(??_MSDProcessCommand+4)& (0+255),w,b
 34763  0109B4  0102               	movlb	2	; () banked
 34764  0109B6  1745               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 34765                           
 34766                           ; BSR set to: 2
 34767                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 34768  0109B8  ECE8  F0A4         	call	_MSDProcessCommandMediaAbsent	;wreg free
 34769                           
 34770                           ;usb_device_msd.c: 563: }
 34771  0109BC  D058               	goto	l615
 34772  0109BE                     l608:
 34773                           
 34774                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 34775  0109BE  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 34776  0109C2  0E01               	movlw	1
 34777  0109C4  0100               	movlb	0	; () banked
 34778  0109C6  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 34779  0109C8  0E00               	movlw	0
 34780  0109CA  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 34781  0109CC  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 34782  0109CE  D003               	goto	u15104
 34783  0109D0                     u15105:
 34784  0109D0  90D8               	bcf	status,0,c
 34785  0109D2  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 34786  0109D4  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 34787  0109D6                     u15104:
 34788  0109D6  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 34789  0109D8  D7FB               	goto	u15105
 34790  0109DA  0102               	movlb	2	; () banked
 34791  0109DC  5144               	movf	_gblMediaPresent& (0+255),w,b
 34792  0109DE  0100               	movlb	0	; () banked
 34793  0109E0  17A8               	andwf	(??_MSDProcessCommand+1)& (0+255),f,b
 34794  0109E2  0102               	movlb	2	; () banked
 34795  0109E4  5145               	movf	(_gblMediaPresent+1)& (0+255),w,b
 34796  0109E6  0100               	movlb	0	; () banked
 34797  0109E8  17A9               	andwf	(??_MSDProcessCommand+2)& (0+255),f,b
 34798  0109EA  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 34799  0109EC  11A9               	iorwf	(??_MSDProcessCommand+2)& (0+255),w,b
 34800  0109EE  A4D8               	btfss	status,2,c
 34801  0109F0  D03C               	goto	l612
 34802                           
 34803                           ; BSR set to: 0
 34804                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 34805  0109F2  C2B2  F060         	movff	_LUN+21,ExternalFlash_MediaInitialize@config
 34806  0109F6  C2B3  F061         	movff	_LUN+22,ExternalFlash_MediaInitialize@config+1
 34807  0109FA  D801               	call	u15128
 34808  0109FC  D00B               	goto	u15129
 34809  0109FE                     u15128:
 34810  0109FE  0005               	push	
 34811  010A00  6EFA               	movwf	pclath,c
 34812  010A02  0102               	movlb	2	; () banked
 34813  010A04  519D               	movf	_LUN& (0+255),w,b
 34814  010A06  6EFD               	movwf	tosl,c
 34815  010A08  519E               	movf	(_LUN+1)& (0+255),w,b
 34816  010A0A  6EFE               	movwf	tosh,c
 34817  010A0C  519F               	movf	(_LUN+2)& (0+255),w,b
 34818  010A0E  6EFF               	movwf	tosu,c
 34819  010A10  50FA               	movf	pclath,w,c
 34820  010A12  0012               	return		;indir
 34821  010A14                     u15129:
 34822  010A14  0100               	movlb	0	; () banked
 34823  010A16  5160               	movf	?_ExternalFlash_MediaInitialize& (0+255),w,b
 34824  010A18  1161               	iorwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),w,b
 34825  010A1A  B4D8               	btfsc	status,2,c
 34826  010A1C  D023               	goto	l613
 34827                           
 34828                           ; BSR set to: 0
 34829                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 34830  010A1E  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 34831  010A22  0E01               	movlw	1
 34832  010A24  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 34833  010A26  0E00               	movlw	0
 34834  010A28  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 34835  010A2A  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 34836  010A2C  D003               	goto	u15144
 34837  010A2E                     u15145:
 34838  010A2E  90D8               	bcf	status,0,c
 34839  010A30  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 34840  010A32  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 34841  010A34                     u15144:
 34842  010A34  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 34843  010A36  D7FB               	goto	u15145
 34844  010A38  0100               	movlb	0	; () banked
 34845  010A3A  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 34846  010A3C  0102               	movlb	2	; () banked
 34847  010A3E  1344               	iorwf	_gblMediaPresent& (0+255),f,b
 34848  010A40  0100               	movlb	0	; () banked
 34849  010A42  51A9               	movf	(??_MSDProcessCommand+2)& (0+255),w,b
 34850  010A44  0102               	movlb	2	; () banked
 34851  010A46  1345               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 34852                           
 34853                           ; BSR set to: 2
 34854                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 34855  010A48  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 34856  010A4A  0BF0               	andlw	-16
 34857  010A4C  0906               	iorlw	6
 34858  010A4E  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 34859                           
 34860                           ; BSR set to: 2
 34861                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 34862  010A50  0E28               	movlw	40
 34863  010A52  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 34864                           
 34865                           ; BSR set to: 2
 34866                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 34867  010A54  0E00               	movlw	0
 34868  010A56  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 34869                           
 34870                           ; BSR set to: 2
 34871                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 34872  010A58  0E01               	movlw	1
 34873  010A5A  010D               	movlb	13	; () banked
 34874  010A5C  6F8C               	movwf	140,b	;volatile
 34875                           
 34876                           ; BSR set to: 13
 34877                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 34878  010A5E  ECE4  F062         	call	_MSDProcessCommandMediaPresent	;wreg free
 34879                           
 34880                           ;usb_device_msd.c: 589: }
 34881  010A62  D005               	goto	l615
 34882  010A64                     l613:
 34883                           
 34884                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 34885  010A64  ECE8  F0A4         	call	_MSDProcessCommandMediaAbsent	;wreg free
 34886                           
 34887                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 34888  010A68  D002               	goto	l615
 34889  010A6A                     l612:
 34890                           
 34891                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 34892  010A6A  ECE4  F062         	call	_MSDProcessCommandMediaPresent	;wreg free
 34893  010A6E                     l615:
 34894                           
 34895                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 34896  010A6E  0101               	movlb	1	; () banked
 34897  010A70  5157               	movf	_MSDCommandState& (0+255),w,b
 34898  010A72  0012               	return	
 34899  010A74                     __end_of_MSDProcessCommand:
 34900                           	opt stack 0
 34901                           tosu	equ	0xFFF
 34902                           tosh	equ	0xFFE
 34903                           tosl	equ	0xFFD
 34904                           pclath	equ	0xFFA
 34905                           tblptru	equ	0xFF8
 34906                           tblptrh	equ	0xFF7
 34907                           tblptrl	equ	0xFF6
 34908                           tablat	equ	0xFF5
 34909                           prodh	equ	0xFF4
 34910                           prodl	equ	0xFF3
 34911                           intcon	equ	0xFF2
 34912                           postinc0	equ	0xFEE
 34913                           wreg	equ	0xFE8
 34914                           indf1	equ	0xFE7
 34915                           postinc1	equ	0xFE6
 34916                           postdec1	equ	0xFE5
 34917                           plusw1	equ	0xFE3
 34918                           fsr1h	equ	0xFE2
 34919                           fsr1l	equ	0xFE1
 34920                           indf2	equ	0xFDF
 34921                           postinc2	equ	0xFDE
 34922                           postdec2	equ	0xFDD
 34923                           plusw2	equ	0xFDB
 34924                           fsr2h	equ	0xFDA
 34925                           fsr2l	equ	0xFD9
 34926                           status	equ	0xFD8
 34927                           
 34928 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 34929 ;; Defined at:
 34930 ;;		line 635 in file "usb_device_msd.c"
 34931 ;; Parameters:    Size  Location     Type
 34932 ;;		None
 34933 ;; Auto vars:     Size  Location     Type
 34934 ;;		None
 34935 ;; Return value:  Size  Location     Type
 34936 ;;                  1    wreg      void 
 34937 ;; Registers used:
 34938 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 34939 ;; Tracked objects:
 34940 ;;		On entry : 0/0
 34941 ;;		On exit  : 0/0
 34942 ;;		Unchanged: 0/0
 34943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34948 ;;Total ram usage:        0 bytes
 34949 ;; Hardware stack levels used:    1
 34950 ;; Hardware stack levels required when called:   18
 34951 ;; This function calls:
 34952 ;;		_MSDErrorHandler
 34953 ;;		_MSDProcessCommandMediaPresent
 34954 ;;		_ResetSenseData
 34955 ;; This function is called by:
 34956 ;;		_MSDProcessCommand
 34957 ;; This function uses a non-reentrant model
 34958 ;;
 34959                           
 34960                           	psect	text135
 34961  0149D0                     __ptext135:
 34962                           	opt stack 0
 34963  0149D0                     _MSDProcessCommandMediaAbsent:
 34964                           	opt stack 9
 34965                           
 34966                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 34967                           
 34968                           ; BSR set to: 1
 34969                           ;incstack = 0
 34970  0149D0  D01E               	goto	l619
 34971  0149D2                     
 34972                           ;usb_device_msd.c: 646: ResetSenseData();
 34973  0149D2  EC19  F0A5         	call	_ResetSenseData	;wreg free
 34974                           
 34975                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 34976  0149D6  0102               	movlb	2	; () banked
 34977  0149D8  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 34978  0149DA  0BF0               	andlw	-16
 34979  0149DC  0902               	iorlw	2
 34980  0149DE  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 34981                           
 34982                           ; BSR set to: 2
 34983                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 34984  0149E0  0E3A               	movlw	58
 34985  0149E2  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 34986                           
 34987                           ; BSR set to: 2
 34988                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 34989  0149E4  0E00               	movlw	0
 34990  0149E6  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 34991                           
 34992                           ; BSR set to: 2
 34993                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 34994  0149E8  ECE4  F062         	call	_MSDProcessCommandMediaPresent	;wreg free
 34995                           
 34996                           ;usb_device_msd.c: 655: break;
 34997  0149EC  0012               	return	
 34998  0149EE                     
 34999                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 35000  0149EE  0E01               	movlw	1
 35001  0149F0  010D               	movlb	13	; () banked
 35002  0149F2  6F8C               	movwf	140,b	;volatile
 35003                           
 35004                           ; BSR set to: 13
 35005                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 35006  0149F4  0101               	movlb	1	; () banked
 35007  0149F6  6957               	setf	_MSDCommandState& (0+255),b
 35008                           
 35009                           ;usb_device_msd.c: 665: break;
 35010  0149F8  0012               	return	
 35011  0149FA                     
 35012                           ; BSR set to: 1
 35013                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 35014                           
 35015                           ; BSR set to: 1
 35016  0149FA  ECE4  F062         	call	_MSDProcessCommandMediaPresent	;wreg free
 35017                           
 35018                           ;usb_device_msd.c: 671: break;
 35019  0149FE  0012               	return	
 35020  014A00                     
 35021                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 35022  014A00  ECE4  F062         	call	_MSDProcessCommandMediaPresent	;wreg free
 35023                           
 35024                           ;usb_device_msd.c: 677: break;
 35025  014A04  0012               	return	
 35026  014A06                     
 35027                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 35028  014A06  0E7F               	movlw	127
 35029  014A08  ECED  F086         	call	_MSDErrorHandler
 35030                           
 35031                           ;usb_device_msd.c: 685: }
 35032                           
 35033                           ;usb_device_msd.c: 684: break;
 35034  014A0C  0012               	return	
 35035  014A0E                     l619:
 35036  014A0E  0101               	movlb	1	; () banked
 35037  014A10  5157               	movf	_MSDCommandState& (0+255),w,b
 35038                           
 35039                           ; Switch size 1, requested type "space"
 35040                           ; Number of cases is 5, Range of values is 0 to 253
 35041                           ; switch strategies available:
 35042                           ; Name         Instructions Cycles
 35043                           ; simple_byte           16     9 (average)
 35044                           ;	Chosen strategy is simple_byte
 35045  014A12  0A00               	xorlw	0	; case 0
 35046  014A14  B4D8               	btfsc	status,2,c
 35047  014A16  D7EB               	goto	l622
 35048  014A18  0A03               	xorlw	3	; case 3
 35049  014A1A  B4D8               	btfsc	status,2,c
 35050  014A1C  D7DA               	goto	l620
 35051  014A1E  0A11               	xorlw	17	; case 18
 35052  014A20  B4D8               	btfsc	status,2,c
 35053  014A22  D7EB               	goto	l624
 35054  014A24  0A0C               	xorlw	12	; case 30
 35055  014A26  B4D8               	btfsc	status,2,c
 35056  014A28  D7E2               	goto	l622
 35057  014A2A  0AE3               	xorlw	227	; case 253
 35058  014A2C  B4D8               	btfsc	status,2,c
 35059  014A2E  D7E8               	goto	l625
 35060  014A30  D7EA               	goto	l626
 35061  014A32                     __end_of_MSDProcessCommandMediaAbsent:
 35062                           	opt stack 0
 35063                           tosu	equ	0xFFF
 35064                           tosh	equ	0xFFE
 35065                           tosl	equ	0xFFD
 35066                           pclath	equ	0xFFA
 35067                           tblptru	equ	0xFF8
 35068                           tblptrh	equ	0xFF7
 35069                           tblptrl	equ	0xFF6
 35070                           tablat	equ	0xFF5
 35071                           prodh	equ	0xFF4
 35072                           prodl	equ	0xFF3
 35073                           intcon	equ	0xFF2
 35074                           postinc0	equ	0xFEE
 35075                           wreg	equ	0xFE8
 35076                           indf1	equ	0xFE7
 35077                           postinc1	equ	0xFE6
 35078                           postdec1	equ	0xFE5
 35079                           plusw1	equ	0xFE3
 35080                           fsr1h	equ	0xFE2
 35081                           fsr1l	equ	0xFE1
 35082                           indf2	equ	0xFDF
 35083                           postinc2	equ	0xFDE
 35084                           postdec2	equ	0xFDD
 35085                           plusw2	equ	0xFDB
 35086                           fsr2h	equ	0xFDA
 35087                           fsr2l	equ	0xFD9
 35088                           status	equ	0xFD8
 35089                           
 35090 ;; *************** function _MSDProcessCommandMediaPresent *****************
 35091 ;; Defined at:
 35092 ;;		line 712 in file "usb_device_msd.c"
 35093 ;; Parameters:    Size  Location     Type
 35094 ;;		None
 35095 ;; Auto vars:     Size  Location     Type
 35096 ;;  capacity        4   66[BANK0 ] struct .
 35097 ;;  sectorSize      4   62[BANK0 ] struct .
 35098 ;;  i               1   70[BANK0 ] unsigned char 
 35099 ;;  NumBytesInPa    1   61[BANK0 ] unsigned char 
 35100 ;; Return value:  Size  Location     Type
 35101 ;;                  1    wreg      void 
 35102 ;; Registers used:
 35103 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 35104 ;; Tracked objects:
 35105 ;;		On entry : 0/0
 35106 ;;		On exit  : 0/0
 35107 ;;		Unchanged: 0/0
 35108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35110 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35111 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35112 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35113 ;;Total ram usage:       14 bytes
 35114 ;; Hardware stack levels used:    1
 35115 ;; Hardware stack levels required when called:   17
 35116 ;; This function calls:
 35117 ;;		_ExternalFlash_CapacityRead
 35118 ;;		_ExternalFlash_SectorSizeRead
 35119 ;;		_ExternalFlash_WriteProtectStateGet
 35120 ;;		_MSDCheckForErrorCases
 35121 ;;		_MSDComputeDeviceInAndResidue
 35122 ;;		_MSDErrorHandler
 35123 ;;		_MSDReadHandler
 35124 ;;		_MSDWriteHandler
 35125 ;;		_ResetSenseData
 35126 ;;		_USBTransferOnePacket
 35127 ;;		_memcpy
 35128 ;; This function is called by:
 35129 ;;		_MSDProcessCommand
 35130 ;;		_MSDProcessCommandMediaAbsent
 35131 ;; This function uses a non-reentrant model
 35132 ;;
 35133                           
 35134                           	psect	text136
 35135  00C5C8                     __ptext136:
 35136                           	opt stack 0
 35137  00C5C8                     _MSDProcessCommandMediaPresent:
 35138                           	opt stack 10
 35139                           
 35140                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 35141                           
 35142                           ;incstack = 0
 35143  00C5C8  D1D1               	goto	l630
 35144  00C5CA                     
 35145                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 35146  00C5CA  EC60  F074         	call	_MSDReadHandler	;wreg free
 35147  00C5CE  0900               	iorlw	0
 35148  00C5D0  A4D8               	btfss	status,2,c
 35149  00C5D2  0012               	return	
 35150                           
 35151                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 35152  00C5D4  0101               	movlb	1	; () banked
 35153  00C5D6  6957               	setf	_MSDCommandState& (0+255),b
 35154                           
 35155                           ; BSR set to: 1
 35156                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 35157  00C5D8  0012               	return	
 35158  00C5DA                     
 35159                           ; BSR set to: 1
 35160                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 35161                           
 35162                           ; BSR set to: 1
 35163  00C5DA  EC22  F068         	call	_MSDWriteHandler	;wreg free
 35164  00C5DE  0900               	iorlw	0
 35165  00C5E0  A4D8               	btfss	status,2,c
 35166  00C5E2  0012               	return	
 35167                           
 35168                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 35169  00C5E4  0101               	movlb	1	; () banked
 35170  00C5E6  6957               	setf	_MSDCommandState& (0+255),b
 35171                           
 35172                           ; BSR set to: 1
 35173                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 35174  00C5E8  0012               	return	
 35175  00C5EA                     
 35176                           ; BSR set to: 1
 35177                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 35178                           
 35179                           ; BSR set to: 1
 35180  00C5EA  0551               	decf	_MSDHostNoData& (0+255),w,b
 35181  00C5EC  A4D8               	btfss	status,2,c
 35182  00C5EE  D002               	goto	l637
 35183                           
 35184                           ; BSR set to: 1
 35185                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 35186  00C5F0  6957               	setf	_MSDCommandState& (0+255),b
 35187                           
 35188                           ;usb_device_msd.c: 751: break;
 35189  00C5F2  0012               	return	
 35190  00C5F4                     l637:
 35191                           
 35192                           ; BSR set to: 1
 35193                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 35194  00C5F4  C212  F13E         	movff	_gblCBW+18,_TransferLength+1
 35195                           
 35196                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 35197  00C5F8  C213  F13D         	movff	_gblCBW+19,_TransferLength
 35198                           
 35199                           ; BSR set to: 1
 35200                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 35201  00C5FC  C13D  F06A         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 35202  00C600  C13E  F06B         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 35203  00C604  0100               	movlb	0	; () banked
 35204  00C606  6B6C               	clrf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 35205  00C608  6B6D               	clrf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 35206  00C60A  EC7A  F087         	call	_MSDCheckForErrorCases	;wreg free
 35207  00C60E  0900               	iorlw	0
 35208  00C610  A4D8               	btfss	status,2,c
 35209  00C612  0012               	return	
 35210                           
 35211                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 35212                           
 35213                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 35214  00C614  0E00               	movlw	0
 35215  00C616  0100               	movlb	0	; () banked
 35216  00C618  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 35217  00C61A  0E24               	movlw	36
 35218  00C61C  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 35219  00C61E  EC95  F097         	call	_MSDComputeDeviceInAndResidue	;wreg free
 35220                           
 35221                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 35222  00C622  0E00               	movlw	0
 35223  00C624  0100               	movlb	0	; () banked
 35224  00C626  6F60               	movwf	memcpy@d1& (0+255),b
 35225  00C628  0E06               	movlw	6
 35226  00C62A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 35227  00C62C  0E60               	movlw	low _inq_resp
 35228  00C62E  6F62               	movwf	memcpy@s1& (0+255),b
 35229  00C630  0EA1               	movlw	high _inq_resp
 35230  00C632  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 35231  00C634  0E00               	movlw	0
 35232  00C636  6F65               	movwf	(memcpy@n+1)& (0+255),b
 35233  00C638  0E24               	movlw	36
 35234  00C63A  6F64               	movwf	memcpy@n& (0+255),b
 35235  00C63C  ECAC  F0A5         	call	_memcpy	;wreg free
 35236                           
 35237                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 35238  00C640  0EFD               	movlw	253
 35239  00C642  0101               	movlb	1	; () banked
 35240  00C644  6F57               	movwf	_MSDCommandState& (0+255),b
 35241                           
 35242                           ;usb_device_msd.c: 773: break;
 35243  00C646  0012               	return	
 35244  00C648                     
 35245                           ; BSR set to: 1
 35246                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 35247                           
 35248                           ; BSR set to: 1
 35249  00C648  C2B2  F060         	movff	_LUN+21,ExternalFlash_CapacityRead@config
 35250  00C64C  C2B3  F061         	movff	_LUN+22,ExternalFlash_CapacityRead@config+1
 35251  00C650  EE22  F0A0         	lfsr	2,_LUN+3
 35252  00C654  D801               	call	u12398
 35253  00C656  D00A               	goto	u12399
 35254  00C658                     u12398:
 35255  00C658  0005               	push	
 35256  00C65A  6EFA               	movwf	pclath,c
 35257  00C65C  50DE               	movf	postinc2,w,c
 35258  00C65E  6EFD               	movwf	tosl,c
 35259  00C660  50DE               	movf	postinc2,w,c
 35260  00C662  6EFE               	movwf	tosh,c
 35261  00C664  50DE               	movf	postinc2,w,c
 35262  00C666  6EFF               	movwf	tosu,c
 35263  00C668  50FA               	movf	pclath,w,c
 35264  00C66A  0012               	return		;indir
 35265  00C66C                     u12399:
 35266  00C66C  C060  F0A2         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 35267  00C670  C061  F0A3         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 35268  00C674  C062  F0A4         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 35269  00C678  C063  F0A5         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 35270                           
 35271                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 35272  00C67C  C2B2  F060         	movff	_LUN+21,ExternalFlash_SectorSizeRead@config
 35273  00C680  C2B3  F061         	movff	_LUN+22,ExternalFlash_SectorSizeRead@config+1
 35274  00C684  EE22  F0A3         	lfsr	2,_LUN+6
 35275  00C688  D801               	call	u12408
 35276  00C68A  D00A               	goto	u12409
 35277  00C68C                     u12408:
 35278  00C68C  0005               	push	
 35279  00C68E  6EFA               	movwf	pclath,c
 35280  00C690  50DE               	movf	postinc2,w,c
 35281  00C692  6EFD               	movwf	tosl,c
 35282  00C694  50DE               	movf	postinc2,w,c
 35283  00C696  6EFE               	movwf	tosh,c
 35284  00C698  50DE               	movf	postinc2,w,c
 35285  00C69A  6EFF               	movwf	tosu,c
 35286  00C69C  50FA               	movf	pclath,w,c
 35287  00C69E  0012               	return		;indir
 35288  00C6A0                     u12409:
 35289  00C6A0  0100               	movlb	0	; () banked
 35290  00C6A2  C060  F09E         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 35291  00C6A6  C061  F09F         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 35292  00C6AA  6BA0               	clrf	(MSDProcessCommandMediaPresent@sectorSize+2)& (0+255),b
 35293  00C6AC  6BA1               	clrf	(MSDProcessCommandMediaPresent@sectorSize+3)& (0+255),b
 35294                           
 35295                           ; BSR set to: 0
 35296                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 35297  00C6AE  EE26 F000          	lfsr	2,1536
 35298  00C6B2  C0A5  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 35299                           
 35300                           ; BSR set to: 0
 35301                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 35302  00C6B6  EE26 F001          	lfsr	2,1537	;volatile
 35303  00C6BA  C0A4  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 35304                           
 35305                           ; BSR set to: 0
 35306                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 35307  00C6BE  EE26 F002          	lfsr	2,1538	;volatile
 35308  00C6C2  C0A3  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 35309                           
 35310                           ; BSR set to: 0
 35311                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 35312  00C6C6  EE26 F003          	lfsr	2,1539	;volatile
 35313  00C6CA  C0A2  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 35314                           
 35315                           ; BSR set to: 0
 35316                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 35317  00C6CE  EE26 F004          	lfsr	2,1540	;volatile
 35318  00C6D2  C0A1  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 35319                           
 35320                           ; BSR set to: 0
 35321                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 35322  00C6D6  EE26 F005          	lfsr	2,1541	;volatile
 35323  00C6DA  C0A0  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 35324                           
 35325                           ; BSR set to: 0
 35326                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 35327  00C6DE  EE26 F006          	lfsr	2,1542	;volatile
 35328  00C6E2  C09F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 35329                           
 35330                           ; BSR set to: 0
 35331                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 35332  00C6E6  EE26 F007          	lfsr	2,1543	;volatile
 35333  00C6EA  C09E  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 35334                           
 35335                           ; BSR set to: 0
 35336                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 35337  00C6EE  0E00               	movlw	0
 35338  00C6F0  0101               	movlb	1	; () banked
 35339  00C6F2  6F3E               	movwf	(_TransferLength+1)& (0+255),b
 35340  00C6F4  0E08               	movlw	8
 35341  00C6F6  6F3D               	movwf	_TransferLength& (0+255),b
 35342                           
 35343                           ; BSR set to: 1
 35344                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 35345  00C6F8  0E00               	movlw	0
 35346  00C6FA  0100               	movlb	0	; () banked
 35347  00C6FC  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 35348  00C6FE  0E08               	movlw	8
 35349  00C700  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 35350  00C702  EC95  F097         	call	_MSDComputeDeviceInAndResidue	;wreg free
 35351                           
 35352                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 35353  00C706  0EFD               	movlw	253
 35354  00C708  0101               	movlb	1	; () banked
 35355  00C70A  6F57               	movwf	_MSDCommandState& (0+255),b
 35356                           
 35357                           ;usb_device_msd.c: 802: break;
 35358  00C70C  0012               	return	
 35359  00C70E                     
 35360                           ; BSR set to: 1
 35361                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 35362                           
 35363                           ; BSR set to: 1
 35364  00C70E  0551               	decf	_MSDHostNoData& (0+255),w,b
 35365  00C710  A4D8               	btfss	status,2,c
 35366  00C712  D002               	goto	l641
 35367                           
 35368                           ; BSR set to: 1
 35369                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 35370  00C714  6957               	setf	_MSDCommandState& (0+255),b
 35371                           
 35372                           ;usb_device_msd.c: 814: break;
 35373  00C716  0012               	return	
 35374  00C718                     l641:
 35375                           
 35376                           ; BSR set to: 1
 35377                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 35378                           
 35379                           ; BSR set to: 1
 35380  00C718  0E00               	movlw	0
 35381  00C71A  6F3E               	movwf	(_TransferLength+1)& (0+255),b
 35382  00C71C  0E12               	movlw	18
 35383  00C71E  6F3D               	movwf	_TransferLength& (0+255),b
 35384                           
 35385                           ; BSR set to: 1
 35386                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 35387  00C720  0E00               	movlw	0
 35388  00C722  0100               	movlb	0	; () banked
 35389  00C724  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 35390  00C726  0E12               	movlw	18
 35391  00C728  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 35392  00C72A  EC95  F097         	call	_MSDComputeDeviceInAndResidue	;wreg free
 35393                           
 35394                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 35395  00C72E  0E00               	movlw	0
 35396  00C730  0100               	movlb	0	; () banked
 35397  00C732  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 35398  00C734                     l13840:
 35399                           
 35400                           ; BSR set to: 0
 35401  00C734  0E11               	movlw	17
 35402  00C736  65A6               	cpfsgt	MSDProcessCommandMediaPresent@i& (0+255),b
 35403  00C738  D001               	goto	l642
 35404  00C73A  D014               	goto	u12430
 35405  00C73C                     l642:
 35406                           
 35407                           ; BSR set to: 0
 35408                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 35409                           
 35410                           ; BSR set to: 0
 35411  00C73C  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 35412  00C73E  0D01               	mullw	1
 35413  00C740  0E1F               	movlw	low _gblSenseData
 35414  00C742  24F3               	addwf	prodl,w,c
 35415  00C744  6ED9               	movwf	fsr2l,c
 35416  00C746  0E02               	movlw	high _gblSenseData
 35417  00C748  20F4               	addwfc	prodh,w,c
 35418  00C74A  6EDA               	movwf	fsr2h,c
 35419  00C74C  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 35420  00C74E  0D01               	mullw	1
 35421  00C750  0E00               	movlw	0
 35422  00C752  24F3               	addwf	prodl,w,c
 35423  00C754  6EE1               	movwf	fsr1l,c
 35424  00C756  0E06               	movlw	6
 35425  00C758  20F4               	addwfc	prodh,w,c
 35426  00C75A  6EE2               	movwf	fsr1h,c
 35427  00C75C  CFDF FFE7          	movff	indf2,indf1
 35428                           
 35429                           ; BSR set to: 0
 35430  00C760  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 35431  00C762  D7E8               	goto	l13840
 35432  00C764                     u12430:
 35433                           
 35434                           ; BSR set to: 0
 35435                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 35436                           
 35437                           ; BSR set to: 0
 35438  00C764  0EFD               	movlw	253
 35439  00C766  0101               	movlb	1	; () banked
 35440  00C768  6F57               	movwf	_MSDCommandState& (0+255),b
 35441                           
 35442                           ;usb_device_msd.c: 827: break;
 35443  00C76A  0012               	return	
 35444  00C76C                     l644:
 35445                           
 35446                           ; BSR set to: 1
 35447                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 35448  00C76C  0E03               	movlw	3
 35449  00C76E  CFE8 F600          	movff	wreg,1536
 35450                           
 35451                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 35452  00C772  0E00               	movlw	0
 35453  00C774  CFE8 F601          	movff	wreg,1537	;volatile
 35454                           
 35455                           ; BSR set to: 1
 35456                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 35457  00C778  C2B2  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 35458  00C77C  C2B3  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 35459  00C780  EE22  F0AC         	lfsr	2,_LUN+15
 35460  00C784  D801               	call	u12448
 35461  00C786  D00A               	goto	u12449
 35462  00C788                     u12448:
 35463  00C788  0005               	push	
 35464  00C78A  6EFA               	movwf	pclath,c
 35465  00C78C  50DE               	movf	postinc2,w,c
 35466  00C78E  6EFD               	movwf	tosl,c
 35467  00C790  50DE               	movf	postinc2,w,c
 35468  00C792  6EFE               	movwf	tosh,c
 35469  00C794  50DE               	movf	postinc2,w,c
 35470  00C796  6EFF               	movwf	tosu,c
 35471  00C798  50FA               	movf	pclath,w,c
 35472  00C79A  0012               	return		;indir
 35473  00C79C                     u12449:
 35474  00C79C  0900               	iorlw	0
 35475  00C79E  A4D8               	btfss	status,2,c
 35476  00C7A0  D005               	goto	l646
 35477  00C7A2  0E00               	movlw	0
 35478  00C7A4  0100               	movlb	0	; () banked
 35479  00C7A6  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2606+1)& (0+255),b
 35480  00C7A8  0E00               	movlw	0
 35481  00C7AA  D004               	goto	L49
 35482  00C7AC                     l646:
 35483                           
 35484                           ; BSR set to: 0
 35485  00C7AC  0E00               	movlw	0
 35486  00C7AE  0100               	movlb	0	; () banked
 35487  00C7B0  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2606+1)& (0+255),b
 35488  00C7B2  0E80               	movlw	128
 35489  00C7B4                     L49:
 35490  00C7B4  6F9B               	movwf	_MSDProcessCommandMediaPresent$2606& (0+255),b
 35491                           
 35492                           ; BSR set to: 0
 35493                           
 35494                           ; BSR set to: 0
 35495  00C7B6  EE26 F002          	lfsr	2,1538	;volatile
 35496  00C7BA  C09B  FFDF         	movff	_MSDProcessCommandMediaPresent$2606,indf2
 35497                           
 35498                           ; BSR set to: 0
 35499                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 35500  00C7BE  0E00               	movlw	0
 35501  00C7C0  CFE8 F603          	movff	wreg,1539	;volatile
 35502                           
 35503                           ; BSR set to: 0
 35504                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 35505  00C7C4  0E00               	movlw	0
 35506  00C7C6  0101               	movlb	1	; () banked
 35507  00C7C8  6F3E               	movwf	(_TransferLength+1)& (0+255),b
 35508  00C7CA  0E04               	movlw	4
 35509  00C7CC  6F3D               	movwf	_TransferLength& (0+255),b
 35510                           
 35511                           ; BSR set to: 1
 35512                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 35513  00C7CE  0E00               	movlw	0
 35514  00C7D0  0100               	movlb	0	; () banked
 35515  00C7D2  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 35516  00C7D4  0E04               	movlw	4
 35517  00C7D6  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 35518  00C7D8  EC95  F097         	call	_MSDComputeDeviceInAndResidue	;wreg free
 35519                           
 35520                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 35521  00C7DC  0EFD               	movlw	253
 35522  00C7DE  0101               	movlb	1	; () banked
 35523  00C7E0  6F57               	movwf	_MSDCommandState& (0+255),b
 35524                           
 35525                           ;usb_device_msd.c: 839: break;
 35526  00C7E2  0012               	return	
 35527  00C7E4                     
 35528                           ; BSR set to: 1
 35529                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 35530                           
 35531                           ; BSR set to: 1
 35532  00C7E4  0102               	movlb	2	; () banked
 35533  00C7E6  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 35534  00C7E8  0BF0               	andlw	-16
 35535  00C7EA  0905               	iorlw	5
 35536  00C7EC  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 35537                           
 35538                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 35539  00C7EE  0E20               	movlw	32
 35540  00C7F0  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 35541                           
 35542                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 35543  00C7F2  0E00               	movlw	0
 35544  00C7F4  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 35545                           
 35546                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 35547  00C7F6  0E01               	movlw	1
 35548  00C7F8  010D               	movlb	13	; () banked
 35549  00C7FA  6F8C               	movwf	140,b	;volatile
 35550                           
 35551                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 35552  00C7FC  0E00               	movlw	0
 35553  00C7FE  6F88               	movwf	136,b	;volatile
 35554  00C800  0E00               	movlw	0
 35555  00C802  6F89               	movwf	137,b	;volatile
 35556  00C804  0E00               	movlw	0
 35557  00C806  6F8A               	movwf	138,b	;volatile
 35558  00C808  0E00               	movlw	0
 35559  00C80A  6F8B               	movwf	139,b	;volatile
 35560                           
 35561                           ; BSR set to: 13
 35562                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 35563  00C80C  0101               	movlb	1	; () banked
 35564  00C80E  6957               	setf	_MSDCommandState& (0+255),b
 35565                           
 35566                           ;usb_device_msd.c: 848: break;
 35567  00C810  0012               	return	
 35568  00C812                     
 35569                           ; BSR set to: 1
 35570                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 35571                           
 35572                           ; BSR set to: 1
 35573  00C812  0E00               	movlw	0
 35574  00C814  0100               	movlb	0	; () banked
 35575  00C816  6F6A               	movwf	MSDCheckForErrorCases@DeviceBytes& (0+255),b
 35576  00C818  0E00               	movlw	0
 35577  00C81A  6F6B               	movwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),b
 35578  00C81C  0E00               	movlw	0
 35579  00C81E  6F6C               	movwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 35580  00C820  0E00               	movlw	0
 35581  00C822  6F6D               	movwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 35582  00C824  EC7A  F087         	call	_MSDCheckForErrorCases	;wreg free
 35583  00C828  0900               	iorlw	0
 35584  00C82A  A4D8               	btfss	status,2,c
 35585  00C82C  0012               	return	
 35586                           
 35587                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 35588                           
 35589                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 35590  00C82E  0102               	movlb	2	; () banked
 35591  00C830  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 35592  00C832  0B0F               	andlw	15
 35593  00C834  0A06               	xorlw	6
 35594  00C836  A4D8               	btfss	status,2,c
 35595  00C838  D007               	goto	l652
 35596                           
 35597                           ; BSR set to: 2
 35598  00C83A  010D               	movlb	13	; () banked
 35599  00C83C  058C               	decf	140,w,b	;volatile
 35600  00C83E  A4D8               	btfss	status,2,c
 35601  00C840  D003               	goto	l652
 35602                           
 35603                           ; BSR set to: 13
 35604                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 35605  00C842  0101               	movlb	1	; () banked
 35606  00C844  6957               	setf	_MSDCommandState& (0+255),b
 35607                           
 35608                           ;usb_device_msd.c: 870: }
 35609  00C846  0012               	return	
 35610  00C848                     l652:
 35611                           
 35612                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 35613                           
 35614                           ; BSR set to: 1
 35615  00C848  EC19  F0A5         	call	_ResetSenseData	;wreg free
 35616                           
 35617                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 35618  00C84C  0E00               	movlw	0
 35619  00C84E  010D               	movlb	13	; () banked
 35620  00C850  6F88               	movwf	136,b	;volatile
 35621  00C852  0E00               	movlw	0
 35622  00C854  6F89               	movwf	137,b	;volatile
 35623  00C856  0E00               	movlw	0
 35624  00C858  6F8A               	movwf	138,b	;volatile
 35625  00C85A  0E00               	movlw	0
 35626  00C85C  6F8B               	movwf	139,b	;volatile
 35627                           
 35628                           ; BSR set to: 13
 35629                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 35630  00C85E  0101               	movlb	1	; () banked
 35631  00C860  6957               	setf	_MSDCommandState& (0+255),b
 35632                           
 35633                           ; BSR set to: 1
 35634                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 35635  00C862  0012               	return	
 35636  00C864                     
 35637                           ; BSR set to: 1
 35638                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 35639                           
 35640                           ; BSR set to: 1
 35641                           
 35642                           ; BSR set to: 1
 35643  00C864  0E00               	movlw	0
 35644  00C866  010D               	movlb	13	; () banked
 35645  00C868  6F88               	movwf	136,b	;volatile
 35646  00C86A  0E00               	movlw	0
 35647  00C86C  6F89               	movwf	137,b	;volatile
 35648  00C86E  0E00               	movlw	0
 35649  00C870  6F8A               	movwf	138,b	;volatile
 35650  00C872  0E00               	movlw	0
 35651  00C874  6F8B               	movwf	139,b	;volatile
 35652                           
 35653                           ; BSR set to: 13
 35654                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 35655  00C876  0101               	movlb	1	; () banked
 35656  00C878  6957               	setf	_MSDCommandState& (0+255),b
 35657                           
 35658                           ;usb_device_msd.c: 885: break;
 35659  00C87A  0012               	return	
 35660  00C87C                     
 35661                           ; BSR set to: 1
 35662                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 35663                           
 35664                           ; BSR set to: 1
 35665  00C87C  513F               	movf	_USBMSDInHandle& (0+255),w,b
 35666  00C87E  1140               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 35667  00C880  B4D8               	btfsc	status,2,c
 35668  00C882  D006               	goto	u12500
 35669                           
 35670                           ; BSR set to: 1
 35671  00C884  C13F  FFD9         	movff	_USBMSDInHandle,fsr2l
 35672  00C888  C140  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 35673  00C88C  BEDF               	btfsc	indf2,7,c
 35674  00C88E  0012               	return	
 35675  00C890                     u12500:
 35676                           
 35677                           ; BSR set to: 1
 35678                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 35679                           
 35680                           ; BSR set to: 1
 35681  00C890  0102               	movlb	2	; () banked
 35682  00C892  510B               	movf	(_gblCBW+11)& (0+255),w,b
 35683  00C894  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 35684  00C896  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 35685  00C898  E104               	bnz	u12510
 35686  00C89A  0E40               	movlw	64
 35687  00C89C  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 35688  00C89E  A0D8               	btfss	status,0,c
 35689  00C8A0  D00B               	goto	l660
 35690  00C8A2                     u12510:
 35691                           
 35692                           ; BSR set to: 2
 35693                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 35694  00C8A2  0E40               	movlw	64
 35695  00C8A4  0100               	movlb	0	; () banked
 35696  00C8A6  6F9D               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),b
 35697                           
 35698                           ; BSR set to: 0
 35699                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 35700  00C8A8  0E40               	movlw	64
 35701  00C8AA  0102               	movlb	2	; () banked
 35702  00C8AC  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 35703  00C8AE  0E00               	movlw	0
 35704  00C8B0  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 35705  00C8B2  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 35706  00C8B4  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 35707                           
 35708                           ;usb_device_msd.c: 900: }
 35709  00C8B6  D00A               	goto	l661
 35710  00C8B8                     l660:
 35711                           
 35712                           ; BSR set to: 2
 35713                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 35714  00C8B8  C208  F09D         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 35715                           
 35716                           ; BSR set to: 2
 35717                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 35718  00C8BC  0E00               	movlw	0
 35719  00C8BE  6F08               	movwf	(_gblCBW+8)& (0+255),b
 35720  00C8C0  0E00               	movlw	0
 35721  00C8C2  6F09               	movwf	(_gblCBW+9)& (0+255),b
 35722  00C8C4  0E00               	movlw	0
 35723  00C8C6  6F0A               	movwf	(_gblCBW+10)& (0+255),b
 35724  00C8C8  0E00               	movlw	0
 35725  00C8CA  6F0B               	movwf	(_gblCBW+11)& (0+255),b
 35726  00C8CC                     l661:
 35727                           
 35728                           ; BSR set to: 2
 35729                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 35730                           
 35731                           ; BSR set to: 2
 35732  00C8CC  0100               	movlb	0	; () banked
 35733  00C8CE  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 35734  00C8D0  6F99               	movwf	??_MSDProcessCommandMediaPresent& (0+255),b
 35735  00C8D2  6B9A               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),b
 35736  00C8D4  5199               	movf	??_MSDProcessCommandMediaPresent& (0+255),w,b
 35737  00C8D6  0101               	movlb	1	; () banked
 35738  00C8D8  5D3D               	subwf	_TransferLength& (0+255),w,b
 35739  00C8DA  0100               	movlb	0	; () banked
 35740  00C8DC  519A               	movf	(??_MSDProcessCommandMediaPresent+1)& (0+255),w,b
 35741  00C8DE  0101               	movlb	1	; () banked
 35742  00C8E0  593E               	subwfb	(_TransferLength+1)& (0+255),w,b
 35743  00C8E2  A0D8               	btfss	status,0,c
 35744  00C8E4  D007               	goto	l662
 35745                           
 35746                           ; BSR set to: 1
 35747                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 35748  00C8E6  0100               	movlb	0	; () banked
 35749  00C8E8  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 35750  00C8EA  0101               	movlb	1	; () banked
 35751  00C8EC  5F3D               	subwf	_TransferLength& (0+255),f,b
 35752  00C8EE  0E00               	movlw	0
 35753  00C8F0  5B3E               	subwfb	(_TransferLength+1)& (0+255),f,b
 35754                           
 35755                           ;usb_device_msd.c: 918: }
 35756  00C8F2  D01E               	goto	u12540
 35757  00C8F4                     l662:
 35758                           
 35759                           ; BSR set to: 1
 35760                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 35761                           
 35762                           ; BSR set to: 1
 35763  00C8F4  0E00               	movlw	0
 35764  00C8F6  0100               	movlb	0	; () banked
 35765  00C8F8  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 35766  00C8FA  D016               	goto	l664
 35767  00C8FC                     
 35768                           ; BSR set to: 0
 35769                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 35770                           
 35771                           ; BSR set to: 0
 35772  00C8FC  0101               	movlb	1	; () banked
 35773  00C8FE  513D               	movf	_TransferLength& (0+255),w,b
 35774  00C900  113E               	iorwf	(_TransferLength+1)& (0+255),w,b
 35775  00C902  B4D8               	btfsc	status,2,c
 35776  00C904  D004               	goto	l666
 35777                           
 35778                           ; BSR set to: 1
 35779                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 35780  00C906  073D               	decf	_TransferLength& (0+255),f,b
 35781  00C908  A0D8               	btfss	status,0,c
 35782  00C90A  073E               	decf	(_TransferLength+1)& (0+255),f,b
 35783                           
 35784                           ;usb_device_msd.c: 932: }
 35785  00C90C  D00B               	goto	l667
 35786  00C90E                     l666:
 35787                           
 35788                           ; BSR set to: 1
 35789                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 35790                           
 35791                           ; BSR set to: 1
 35792  00C90E  0100               	movlb	0	; () banked
 35793  00C910  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 35794  00C912  0D01               	mullw	1
 35795  00C914  0E00               	movlw	0
 35796  00C916  24F3               	addwf	prodl,w,c
 35797  00C918  6ED9               	movwf	fsr2l,c
 35798  00C91A  0E06               	movlw	6
 35799  00C91C  20F4               	addwfc	prodh,w,c
 35800  00C91E  6EDA               	movwf	fsr2h,c
 35801  00C920  0E00               	movlw	0
 35802  00C922  6EDF               	movwf	indf2,c
 35803  00C924                     l667:
 35804                           
 35805                           ; BSR set to: 0
 35806  00C924  0100               	movlb	0	; () banked
 35807  00C926  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 35808  00C928                     l664:
 35809                           
 35810                           ; BSR set to: 0
 35811                           
 35812                           ; BSR set to: 0
 35813  00C928  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 35814  00C92A  5DA6               	subwf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 35815  00C92C  A0D8               	btfss	status,0,c
 35816  00C92E  D7E6               	goto	l665
 35817  00C930                     u12540:
 35818                           
 35819                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 35820                           
 35821                           ; BSR set to: 0
 35822                           
 35823                           ; BSR set to: 0
 35824  00C930  0E01               	movlw	1
 35825  00C932  0100               	movlb	0	; () banked
 35826  00C934  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 35827  00C936  0E00               	movlw	0
 35828  00C938  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 35829  00C93A  0E06               	movlw	6
 35830  00C93C  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 35831  00C93E  C09D  F063         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 35832  00C942  0E02               	movlw	2
 35833  00C944  EC1F  F08A         	call	_USBTransferOnePacket
 35834  00C948  C060  F13F         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 35835  00C94C  C061  F140         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 35836                           
 35837                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 35838  00C950  0102               	movlb	2	; () banked
 35839  00C952  5108               	movf	(_gblCBW+8)& (0+255),w,b
 35840  00C954  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 35841  00C956  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 35842  00C958  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 35843  00C95A  A4D8               	btfss	status,2,c
 35844  00C95C  0012               	return	
 35845                           
 35846                           ; BSR set to: 2
 35847                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 35848  00C95E  0101               	movlb	1	; () banked
 35849  00C960  6957               	setf	_MSDCommandState& (0+255),b
 35850                           
 35851                           ; BSR set to: 1
 35852                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 35853                           
 35854                           ; BSR set to: 1
 35855                           
 35856                           ;usb_device_msd.c: 949: break;
 35857  00C962  0012               	return	
 35858  00C964                     
 35859                           ; BSR set to: 1
 35860                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 35861                           
 35862                           ; BSR set to: 1
 35863                           
 35864                           ;usb_device_msd.c: 954: default:
 35865                           
 35866                           ; BSR set to: 1
 35867  00C964  0E7F               	movlw	127
 35868  00C966  ECED  F086         	call	_MSDErrorHandler
 35869                           
 35870                           ;usb_device_msd.c: 960: }
 35871                           
 35872                           ;usb_device_msd.c: 959: break;
 35873  00C96A  0012               	return	
 35874  00C96C                     l630:
 35875  00C96C  0101               	movlb	1	; () banked
 35876  00C96E  5157               	movf	_MSDCommandState& (0+255),w,b
 35877                           
 35878                           ; Switch size 1, requested type "space"
 35879                           ; Number of cases is 12, Range of values is 0 to 254
 35880                           ; switch strategies available:
 35881                           ; Name         Instructions Cycles
 35882                           ; simple_byte           37    19 (average)
 35883                           ;	Chosen strategy is simple_byte
 35884  00C970  0A00               	xorlw	0	; case 0
 35885  00C972  B4D8               	btfsc	status,2,c
 35886  00C974  D74E               	goto	l650
 35887  00C976  0A03               	xorlw	3	; case 3
 35888  00C978  B4D8               	btfsc	status,2,c
 35889  00C97A  D6C9               	goto	l640
 35890  00C97C  0A11               	xorlw	17	; case 18
 35891  00C97E  B4D8               	btfsc	status,2,c
 35892  00C980  D634               	goto	l636
 35893  00C982  0A08               	xorlw	8	; case 26
 35894  00C984  B4D8               	btfsc	status,2,c
 35895  00C986  D6F2               	goto	l644
 35896  00C988  0A01               	xorlw	1	; case 27
 35897  00C98A  B4D8               	btfsc	status,2,c
 35898  00C98C  D76B               	goto	l654
 35899  00C98E  0A05               	xorlw	5	; case 30
 35900  00C990  B4D8               	btfsc	status,2,c
 35901  00C992  D728               	goto	l649
 35902  00C994  0A3B               	xorlw	59	; case 37
 35903  00C996  B4D8               	btfsc	status,2,c
 35904  00C998  D657               	goto	l639
 35905  00C99A  0A0D               	xorlw	13	; case 40
 35906  00C99C  B4D8               	btfsc	status,2,c
 35907  00C99E  D615               	goto	l631
 35908  00C9A0  0A02               	xorlw	2	; case 42
 35909  00C9A2  B4D8               	btfsc	status,2,c
 35910  00C9A4  D61A               	goto	l634
 35911  00C9A6  0A05               	xorlw	5	; case 47
 35912  00C9A8  B4D8               	btfsc	status,2,c
 35913  00C9AA  D75C               	goto	l654
 35914  00C9AC  0AD2               	xorlw	210	; case 253
 35915  00C9AE  B4D8               	btfsc	status,2,c
 35916  00C9B0  D765               	goto	l656
 35917  00C9B2  0A03               	xorlw	3	; case 254
 35918  00C9B4  D7D7               	goto	l670
 35919  00C9B6                     __end_of_MSDProcessCommandMediaPresent:
 35920                           	opt stack 0
 35921                           tosu	equ	0xFFF
 35922                           tosh	equ	0xFFE
 35923                           tosl	equ	0xFFD
 35924                           pclath	equ	0xFFA
 35925                           tblptru	equ	0xFF8
 35926                           tblptrh	equ	0xFF7
 35927                           tblptrl	equ	0xFF6
 35928                           tablat	equ	0xFF5
 35929                           prodh	equ	0xFF4
 35930                           prodl	equ	0xFF3
 35931                           intcon	equ	0xFF2
 35932                           postinc0	equ	0xFEE
 35933                           wreg	equ	0xFE8
 35934                           indf1	equ	0xFE7
 35935                           postinc1	equ	0xFE6
 35936                           postdec1	equ	0xFE5
 35937                           plusw1	equ	0xFE3
 35938                           fsr1h	equ	0xFE2
 35939                           fsr1l	equ	0xFE1
 35940                           indf2	equ	0xFDF
 35941                           postinc2	equ	0xFDE
 35942                           postdec2	equ	0xFDD
 35943                           plusw2	equ	0xFDB
 35944                           fsr2h	equ	0xFDA
 35945                           fsr2l	equ	0xFD9
 35946                           status	equ	0xFD8
 35947                           
 35948 ;; *************** function _MSDWriteHandler *****************
 35949 ;; Defined at:
 35950 ;;		line 1188 in file "usb_device_msd.c"
 35951 ;; Parameters:    Size  Location     Type
 35952 ;;		None
 35953 ;; Auto vars:     Size  Location     Type
 35954 ;;		None
 35955 ;; Return value:  Size  Location     Type
 35956 ;;                  1    wreg      unsigned char 
 35957 ;; Registers used:
 35958 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 35959 ;; Tracked objects:
 35960 ;;		On entry : 0/0
 35961 ;;		On exit  : 0/0
 35962 ;;		Unchanged: 0/0
 35963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35966 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35967 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35968 ;;Total ram usage:        5 bytes
 35969 ;; Hardware stack levels used:    1
 35970 ;; Hardware stack levels required when called:   16
 35971 ;; This function calls:
 35972 ;;		_ExternalFlash_SectorWrite
 35973 ;;		_ExternalFlash_WriteProtectStateGet
 35974 ;;		_MSDCheckForErrorCases
 35975 ;;		_USBStallEndpoint
 35976 ;;		_USBTransferOnePacket
 35977 ;; This function is called by:
 35978 ;;		_MSDProcessCommandMediaPresent
 35979 ;; This function uses a non-reentrant model
 35980 ;;
 35981                           
 35982                           	psect	text137
 35983  00D044                     __ptext137:
 35984                           	opt stack 0
 35985  00D044                     _MSDWriteHandler:
 35986                           	opt stack 10
 35987                           
 35988                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 35989                           
 35990                           ;incstack = 0
 35991  00D044  D160               	goto	l700
 35992  00D046                     l701:
 35993                           
 35994                           ; BSR set to: 1
 35995                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 35996  00D046  C211  F126         	movff	_gblCBW+17,_LBA+3
 35997                           
 35998                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 35999  00D04A  C212  F125         	movff	_gblCBW+18,_LBA+2
 36000                           
 36001                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 36002  00D04E  C213  F124         	movff	_gblCBW+19,_LBA+1
 36003                           
 36004                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 36005  00D052  C214  F123         	movff	_gblCBW+20,_LBA
 36006                           
 36007                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 36008  00D056  C216  F13E         	movff	_gblCBW+22,_TransferLength+1
 36009                           
 36010                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 36011  00D05A  C217  F13D         	movff	_gblCBW+23,_TransferLength
 36012                           
 36013                           ; BSR set to: 1
 36014                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 36015  00D05E  513D               	movf	_TransferLength& (0+255),w,b
 36016  00D060  0100               	movlb	0	; () banked
 36017  00D062  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 36018  00D064  0101               	movlb	1	; () banked
 36019  00D066  513E               	movf	(_TransferLength+1)& (0+255),w,b
 36020  00D068  0100               	movlb	0	; () banked
 36021  00D06A  6F90               	movwf	(??_MSDWriteHandler+1)& (0+255),b
 36022  00D06C  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 36023  00D06E  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 36024  00D070  0E09               	movlw	9
 36025  00D072                     u11295:
 36026  00D072  90D8               	bcf	status,0,c
 36027  00D074  378F               	rlcf	??_MSDWriteHandler& (0+255),f,b
 36028  00D076  3790               	rlcf	(??_MSDWriteHandler+1)& (0+255),f,b
 36029  00D078  3791               	rlcf	(??_MSDWriteHandler+2)& (0+255),f,b
 36030  00D07A  3792               	rlcf	(??_MSDWriteHandler+3)& (0+255),f,b
 36031  00D07C  2EE8               	decfsz	wreg,f,c
 36032  00D07E  D7F9               	goto	u11295
 36033  00D080  C08F  F06A         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 36034  00D084  C090  F06B         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 36035  00D088  C091  F06C         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 36036  00D08C  C092  F06D         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 36037  00D090  EC7A  F087         	call	_MSDCheckForErrorCases	;wreg free
 36038  00D094  0900               	iorlw	0
 36039  00D096  A4D8               	btfss	status,2,c
 36040  00D098  D148               	goto	l703
 36041                           
 36042                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 36043                           
 36044                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 36045  00D09A  C2B2  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 36046  00D09E  C2B3  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 36047  00D0A2  EE22  F0AC         	lfsr	2,_LUN+15
 36048  00D0A6  D801               	call	u11318
 36049  00D0A8  D00A               	goto	u11319
 36050  00D0AA                     u11318:
 36051  00D0AA  0005               	push	
 36052  00D0AC  6EFA               	movwf	pclath,c
 36053  00D0AE  50DE               	movf	postinc2,w,c
 36054  00D0B0  6EFD               	movwf	tosl,c
 36055  00D0B2  50DE               	movf	postinc2,w,c
 36056  00D0B4  6EFE               	movwf	tosh,c
 36057  00D0B6  50DE               	movf	postinc2,w,c
 36058  00D0B8  6EFF               	movwf	tosu,c
 36059  00D0BA  50FA               	movf	pclath,w,c
 36060  00D0BC  0012               	return		;indir
 36061  00D0BE                     u11319:
 36062  00D0BE  0900               	iorlw	0
 36063  00D0C0  B4D8               	btfsc	status,2,c
 36064  00D0C2  D017               	goto	l704
 36065                           
 36066                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 36067  00D0C4  0E01               	movlw	1
 36068  00D0C6  010D               	movlb	13	; () banked
 36069  00D0C8  6F8C               	movwf	140,b	;volatile
 36070                           
 36071                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 36072  00D0CA  0102               	movlb	2	; () banked
 36073  00D0CC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 36074  00D0CE  0BF0               	andlw	-16
 36075  00D0D0  0907               	iorlw	7
 36076  00D0D2  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 36077                           
 36078                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 36079  00D0D4  0E27               	movlw	39
 36080  00D0D6  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 36081                           
 36082                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 36083  00D0D8  0E00               	movlw	0
 36084  00D0DA  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 36085                           
 36086                           ; BSR set to: 2
 36087                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 36088  00D0DC  0E00               	movlw	0
 36089  00D0DE  0100               	movlb	0	; () banked
 36090  00D0E0  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 36091  00D0E2  0E02               	movlw	2
 36092  00D0E4  EC9A  F089         	call	_USBStallEndpoint
 36093                           
 36094                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 36095  00D0E8  0E00               	movlw	0
 36096  00D0EA  0101               	movlb	1	; () banked
 36097  00D0EC  6F55               	movwf	_MSDWriteState& (0+255),b
 36098                           
 36099                           ; BSR set to: 1
 36100                           ;usb_device_msd.c: 1228: return MSDWriteState;
 36101  00D0EE  5155               	movf	_MSDWriteState& (0+255),w,b
 36102                           
 36103                           ; BSR set to: 1
 36104  00D0F0  0012               	return	
 36105  00D0F2                     l704:
 36106                           
 36107                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 36108                           
 36109                           ; BSR set to: 1
 36110  00D0F2  0E01               	movlw	1
 36111  00D0F4  0101               	movlb	1	; () banked
 36112  00D0F6  6F58               	movwf	_MSD_State& (0+255),b
 36113  00D0F8                     
 36114                           ; BSR set to: 1
 36115                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 36116                           
 36117                           ; BSR set to: 1
 36118  00D0F8  513D               	movf	_TransferLength& (0+255),w,b
 36119  00D0FA  113E               	iorwf	(_TransferLength+1)& (0+255),w,b
 36120  00D0FC  A4D8               	btfss	status,2,c
 36121  00D0FE  D002               	goto	l707
 36122                           
 36123                           ; BSR set to: 1
 36124                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 36125  00D100  0E00               	movlw	0
 36126  00D102  D0FF               	goto	L53
 36127  00D104                     l707:
 36128                           
 36129                           ; BSR set to: 1
 36130                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 36131                           
 36132                           ; BSR set to: 1
 36133  00D104  0E03               	movlw	3
 36134  00D106  6F55               	movwf	_MSDWriteState& (0+255),b
 36135                           
 36136                           ; BSR set to: 1
 36137                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 36138  00D108  0E00               	movlw	0
 36139  00D10A  6F43               	movwf	_ptrNextData& (0+255),b
 36140  00D10C  0E06               	movlw	6
 36141  00D10E  6F44               	movwf	(_ptrNextData+1)& (0+255),b
 36142                           
 36143                           ; BSR set to: 1
 36144                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 36145  00D110  0E00               	movlw	0
 36146  00D112  010D               	movlb	13	; () banked
 36147  00D114  6F88               	movwf	136,b	;volatile
 36148  00D116  0E02               	movlw	2
 36149  00D118  6F89               	movwf	137,b	;volatile
 36150  00D11A  0E00               	movlw	0
 36151  00D11C  6F8A               	movwf	138,b	;volatile
 36152  00D11E  0E00               	movlw	0
 36153  00D120  6F8B               	movwf	139,b	;volatile
 36154  00D122                     l708:
 36155                           
 36156                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 36157  00D122  010D               	movlb	13	; () banked
 36158  00D124  5188               	movf	136,w,b	;volatile
 36159  00D126  1189               	iorwf	137,w,b	;volatile
 36160  00D128  118A               	iorwf	138,w,b	;volatile
 36161  00D12A  118B               	iorwf	139,w,b	;volatile
 36162  00D12C  B4D8               	btfsc	status,2,c
 36163  00D12E  D01F               	goto	l709
 36164                           
 36165                           ; BSR set to: 13
 36166                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 36167  00D130  0101               	movlb	1	; () banked
 36168  00D132  5141               	movf	_USBMSDOutHandle& (0+255),w,b
 36169  00D134  1142               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 36170  00D136  B4D8               	btfsc	status,2,c
 36171  00D138  D006               	goto	l710
 36172                           
 36173                           ; BSR set to: 1
 36174  00D13A  C141  FFD9         	movff	_USBMSDOutHandle,fsr2l
 36175  00D13E  C142  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 36176  00D142  BEDF               	btfsc	indf2,7,c
 36177  00D144  D0F2               	goto	l703
 36178  00D146                     l710:
 36179                           
 36180                           ; BSR set to: 1
 36181                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 36182                           
 36183                           ; BSR set to: 1
 36184  00D146  0E00               	movlw	0
 36185  00D148  0100               	movlb	0	; () banked
 36186  00D14A  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 36187  00D14C  C143  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 36188  00D150  C144  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 36189  00D154  0E40               	movlw	64
 36190  00D156  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 36191  00D158  0E02               	movlw	2
 36192  00D15A  EC1F  F08A         	call	_USBTransferOnePacket
 36193  00D15E  C060  F141         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 36194  00D162  C061  F142         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 36195                           
 36196                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 36197  00D166  0E04               	movlw	4
 36198  00D168  0101               	movlb	1	; () banked
 36199  00D16A  6F55               	movwf	_MSDWriteState& (0+255),b
 36200                           
 36201                           ;usb_device_msd.c: 1260: }
 36202  00D16C  D023               	goto	l711
 36203  00D16E                     l709:
 36204                           
 36205                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 36206                           
 36207                           ; BSR set to: 1
 36208  00D16E  C2B2  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 36209  00D172  C2B3  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 36210  00D176  EE22  F0AC         	lfsr	2,_LUN+15
 36211  00D17A  D801               	call	u11378
 36212  00D17C  D00A               	goto	u11379
 36213  00D17E                     u11378:
 36214  00D17E  0005               	push	
 36215  00D180  6EFA               	movwf	pclath,c
 36216  00D182  50DE               	movf	postinc2,w,c
 36217  00D184  6EFD               	movwf	tosl,c
 36218  00D186  50DE               	movf	postinc2,w,c
 36219  00D188  6EFE               	movwf	tosh,c
 36220  00D18A  50DE               	movf	postinc2,w,c
 36221  00D18C  6EFF               	movwf	tosu,c
 36222  00D18E  50FA               	movf	pclath,w,c
 36223  00D190  0012               	return		;indir
 36224  00D192                     u11379:
 36225  00D192  0900               	iorlw	0
 36226  00D194  B4D8               	btfsc	status,2,c
 36227  00D196  D00C               	goto	l712
 36228                           
 36229                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 36230  00D198  0E01               	movlw	1
 36231  00D19A  010D               	movlb	13	; () banked
 36232  00D19C  6F8C               	movwf	140,b	;volatile
 36233                           
 36234                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 36235  00D19E  0102               	movlb	2	; () banked
 36236  00D1A0  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 36237  00D1A2  0BF0               	andlw	-16
 36238  00D1A4  0902               	iorlw	2
 36239  00D1A6  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 36240                           
 36241                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 36242  00D1A8  0E27               	movlw	39
 36243  00D1AA  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 36244                           
 36245                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 36246  00D1AC  0E00               	movlw	0
 36247  00D1AE  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 36248  00D1B0                     l712:
 36249                           
 36250                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 36251  00D1B0  0E02               	movlw	2
 36252  00D1B2  D0A6               	goto	L90
 36253  00D1B4                     l711:
 36254                           
 36255                           ; BSR set to: 1
 36256                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 36257                           
 36258                           ; BSR set to: 1
 36259                           
 36260                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 36261                           
 36262                           ; BSR set to: 1
 36263  00D1B4  5141               	movf	_USBMSDOutHandle& (0+255),w,b
 36264  00D1B6  1142               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 36265  00D1B8  B4D8               	btfsc	status,2,c
 36266  00D1BA  D006               	goto	l714
 36267                           
 36268                           ; BSR set to: 1
 36269  00D1BC  C141  FFD9         	movff	_USBMSDOutHandle,fsr2l
 36270  00D1C0  C142  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 36271  00D1C4  BEDF               	btfsc	indf2,7,c
 36272  00D1C6  D0B1               	goto	l703
 36273  00D1C8                     l714:
 36274                           
 36275                           ; BSR set to: 1
 36276                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 36277                           
 36278                           ; BSR set to: 1
 36279  00D1C8  EE20 F001          	lfsr	2,1
 36280  00D1CC  5141               	movf	_USBMSDOutHandle& (0+255),w,b
 36281  00D1CE  26D9               	addwf	fsr2l,f,c
 36282  00D1D0  5142               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 36283  00D1D2  22DA               	addwfc	fsr2h,f,c
 36284  00D1D4  50DF               	movf	indf2,w,c
 36285  00D1D6  0100               	movlb	0	; () banked
 36286  00D1D8  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 36287  00D1DA  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 36288  00D1DE  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 36289  00D1E0  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 36290  00D1E2  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 36291  00D1E4  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 36292  00D1E6  0102               	movlb	2	; () banked
 36293  00D1E8  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 36294  00D1EA  0100               	movlb	0	; () banked
 36295  00D1EC  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 36296  00D1EE  0102               	movlb	2	; () banked
 36297  00D1F0  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 36298  00D1F2  0100               	movlb	0	; () banked
 36299  00D1F4  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 36300  00D1F6  0102               	movlb	2	; () banked
 36301  00D1F8  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 36302  00D1FA  0100               	movlb	0	; () banked
 36303  00D1FC  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 36304  00D1FE  0102               	movlb	2	; () banked
 36305  00D200  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 36306                           
 36307                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 36308  00D202  0101               	movlb	1	; () banked
 36309  00D204  EE20 F001          	lfsr	2,1
 36310  00D208  5141               	movf	_USBMSDOutHandle& (0+255),w,b
 36311  00D20A  26D9               	addwf	fsr2l,f,c
 36312  00D20C  5142               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 36313  00D20E  22DA               	addwfc	fsr2h,f,c
 36314  00D210  50DF               	movf	indf2,w,c
 36315  00D212  0100               	movlb	0	; () banked
 36316  00D214  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 36317  00D216  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 36318  00D21A  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 36319  00D21C  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 36320  00D21E  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 36321  00D220  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 36322  00D222  010D               	movlb	13	; () banked
 36323  00D224  5F88               	subwf	136,f,b	;volatile
 36324  00D226  0100               	movlb	0	; () banked
 36325  00D228  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 36326  00D22A  010D               	movlb	13	; () banked
 36327  00D22C  5B89               	subwfb	137,f,b	;volatile
 36328  00D22E  0100               	movlb	0	; () banked
 36329  00D230  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 36330  00D232  010D               	movlb	13	; () banked
 36331  00D234  5B8A               	subwfb	138,f,b	;volatile
 36332  00D236  0100               	movlb	0	; () banked
 36333  00D238  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 36334  00D23A  010D               	movlb	13	; () banked
 36335  00D23C  5B8B               	subwfb	139,f,b	;volatile
 36336                           
 36337                           ; BSR set to: 13
 36338                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 36339  00D23E  0E40               	movlw	64
 36340  00D240  0101               	movlb	1	; () banked
 36341  00D242  2743               	addwf	_ptrNextData& (0+255),f,b
 36342  00D244  0E00               	movlw	0
 36343  00D246  2344               	addwfc	(_ptrNextData+1)& (0+255),f,b
 36344                           
 36345                           ; BSR set to: 1
 36346                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 36347  00D248  0E03               	movlw	3
 36348  00D24A  D05B               	goto	L53
 36349  00D24C                     
 36350                           ; BSR set to: 1
 36351                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 36352                           
 36353                           ; BSR set to: 1
 36354  00D24C  010D               	movlb	13	; () banked
 36355  00D24E  518C               	movf	140,w,b	;volatile
 36356  00D250  A4D8               	btfss	status,2,c
 36357  00D252  D040               	goto	l719
 36358                           
 36359                           ; BSR set to: 13
 36360                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 36361  00D254  C2B2  F084         	movff	_LUN+21,ExternalFlash_SectorWrite@config
 36362  00D258  C2B3  F085         	movff	_LUN+22,ExternalFlash_SectorWrite@config+1
 36363  00D25C  C123  F086         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 36364  00D260  C124  F087         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 36365  00D264  C125  F088         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 36366  00D268  C126  F089         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 36367  00D26C  0E00               	movlw	0
 36368  00D26E  0100               	movlb	0	; () banked
 36369  00D270  6F8A               	movwf	ExternalFlash_SectorWrite@buffer& (0+255),b
 36370  00D272  0E06               	movlw	6
 36371  00D274  6F8B               	movwf	(ExternalFlash_SectorWrite@buffer+1)& (0+255),b
 36372  00D276  0101               	movlb	1	; () banked
 36373  00D278  5123               	movf	_LBA& (0+255),w,b
 36374  00D27A  1124               	iorwf	(_LBA+1)& (0+255),w,b
 36375  00D27C  1125               	iorwf	(_LBA+2)& (0+255),w,b
 36376  00D27E  1126               	iorwf	(_LBA+3)& (0+255),w,b
 36377  00D280  A4D8               	btfss	status,2,c
 36378  00D282  D002               	goto	u11420
 36379  00D284  0E01               	movlw	1
 36380  00D286  D001               	goto	u11430
 36381  00D288                     u11420:
 36382  00D288  0E00               	movlw	0
 36383  00D28A                     u11430:
 36384  00D28A  0100               	movlb	0	; () banked
 36385  00D28C  6F8C               	movwf	ExternalFlash_SectorWrite@allowWriteToZero& (0+255),b
 36386  00D28E  EE22  F0AF         	lfsr	2,_LUN+18
 36387  00D292  D801               	call	u11448
 36388  00D294  D00A               	goto	u11449
 36389  00D296                     u11448:
 36390  00D296  0005               	push	
 36391  00D298  6EFA               	movwf	pclath,c
 36392  00D29A  50DE               	movf	postinc2,w,c
 36393  00D29C  6EFD               	movwf	tosl,c
 36394  00D29E  50DE               	movf	postinc2,w,c
 36395  00D2A0  6EFE               	movwf	tosh,c
 36396  00D2A2  50DE               	movf	postinc2,w,c
 36397  00D2A4  6EFF               	movwf	tosu,c
 36398  00D2A6  50FA               	movf	pclath,w,c
 36399  00D2A8  0012               	return		;indir
 36400  00D2AA                     u11449:
 36401  00D2AA  06E8               	decf	wreg,f,c
 36402  00D2AC  B4D8               	btfsc	status,2,c
 36403  00D2AE  D012               	goto	l719
 36404                           
 36405                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 36406  00D2B0  0E64               	movlw	100
 36407  00D2B2  0101               	movlb	1	; () banked
 36408  00D2B4  6154               	cpfslt	_MSDRetryAttempt& (0+255),b
 36409  00D2B6  D002               	goto	l718
 36410                           
 36411                           ; BSR set to: 1
 36412                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 36413  00D2B8  2B54               	incf	_MSDRetryAttempt& (0+255),f,b
 36414                           
 36415                           ;usb_device_msd.c: 1314: break;
 36416  00D2BA  D037               	goto	l703
 36417  00D2BC                     l718:
 36418                           
 36419                           ; BSR set to: 1
 36420                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 36421                           
 36422                           ; BSR set to: 1
 36423  00D2BC  0E01               	movlw	1
 36424  00D2BE  010D               	movlb	13	; () banked
 36425  00D2C0  6F8C               	movwf	140,b	;volatile
 36426                           
 36427                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 36428  00D2C2  0102               	movlb	2	; () banked
 36429  00D2C4  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 36430  00D2C6  0BF0               	andlw	-16
 36431  00D2C8  0903               	iorlw	3
 36432  00D2CA  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 36433                           
 36434                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 36435  00D2CC  0E00               	movlw	0
 36436  00D2CE  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 36437                           
 36438                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 36439  00D2D0  0E00               	movlw	0
 36440  00D2D2  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 36441  00D2D4                     l719:
 36442                           
 36443                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 36444                           
 36445                           ; BSR set to: 2
 36446                           
 36447                           ; BSR set to: 2
 36448                           
 36449                           ; BSR set to: 2
 36450  00D2D4  0E01               	movlw	1
 36451  00D2D6  0101               	movlb	1	; () banked
 36452  00D2D8  2723               	addwf	_LBA& (0+255),f,b
 36453  00D2DA  0E00               	movlw	0
 36454  00D2DC  2324               	addwfc	(_LBA+1)& (0+255),f,b
 36455  00D2DE  2325               	addwfc	(_LBA+2)& (0+255),f,b
 36456  00D2E0  2326               	addwfc	(_LBA+3)& (0+255),f,b
 36457                           
 36458                           ; BSR set to: 1
 36459                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 36460  00D2E2  073D               	decf	_TransferLength& (0+255),f,b
 36461  00D2E4  A0D8               	btfss	status,0,c
 36462  00D2E6  073E               	decf	(_TransferLength+1)& (0+255),f,b
 36463                           
 36464                           ; BSR set to: 1
 36465                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 36466  00D2E8  0E01               	movlw	1
 36467  00D2EA  D00B               	goto	L53
 36468  00D2EC                     
 36469                           ; BSR set to: 1
 36470                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 36471                           
 36472                           ; BSR set to: 1
 36473  00D2EC  0E02               	movlw	2
 36474  00D2EE  010D               	movlb	13	; () banked
 36475  00D2F0  6F8C               	movwf	140,b	;volatile
 36476                           
 36477                           ; BSR set to: 13
 36478                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 36479  00D2F2  0E00               	movlw	0
 36480  00D2F4  0100               	movlb	0	; () banked
 36481  00D2F6  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 36482  00D2F8  0E02               	movlw	2
 36483  00D2FA  EC9A  F089         	call	_USBStallEndpoint
 36484                           
 36485                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 36486  00D2FE  0E00               	movlw	0
 36487  00D300                     L90:
 36488  00D300  0101               	movlb	1	; () banked
 36489  00D302                     L53:
 36490  00D302  6F55               	movwf	_MSDWriteState& (0+255),b
 36491                           
 36492                           ; BSR set to: 1
 36493                           ;usb_device_msd.c: 1345: }
 36494                           
 36495                           ;usb_device_msd.c: 1344: break;
 36496  00D304  D012               	goto	l703
 36497  00D306                     l700:
 36498                           
 36499                           ; BSR set to: 1
 36500  00D306  0101               	movlb	1	; () banked
 36501  00D308  5155               	movf	_MSDWriteState& (0+255),w,b
 36502                           
 36503                           ; Switch size 1, requested type "space"
 36504                           ; Number of cases is 5, Range of values is 0 to 4
 36505                           ; switch strategies available:
 36506                           ; Name         Instructions Cycles
 36507                           ; simple_byte           16     9 (average)
 36508                           ;	Chosen strategy is simple_byte
 36509  00D30A  0A00               	xorlw	0	; case 0
 36510  00D30C  B4D8               	btfsc	status,2,c
 36511  00D30E  D69B               	goto	l701
 36512  00D310  0A01               	xorlw	1	; case 1
 36513  00D312  B4D8               	btfsc	status,2,c
 36514  00D314  D6F1               	goto	l706
 36515  00D316  0A03               	xorlw	3	; case 2
 36516  00D318  B4D8               	btfsc	status,2,c
 36517  00D31A  D798               	goto	l715
 36518  00D31C  0A01               	xorlw	1	; case 3
 36519  00D31E  B4D8               	btfsc	status,2,c
 36520  00D320  D700               	goto	l708
 36521  00D322  0A07               	xorlw	7	; case 4
 36522  00D324  B4D8               	btfsc	status,2,c
 36523  00D326  D746               	goto	l711
 36524  00D328  D7E1               	goto	l720
 36525  00D32A                     l703:
 36526                           
 36527                           ;usb_device_msd.c: 1347: return MSDWriteState;
 36528                           
 36529                           ; BSR set to: 1
 36530  00D32A  0101               	movlb	1	; () banked
 36531  00D32C  5155               	movf	_MSDWriteState& (0+255),w,b
 36532  00D32E  0012               	return	
 36533  00D330                     __end_of_MSDWriteHandler:
 36534                           	opt stack 0
 36535                           tosu	equ	0xFFF
 36536                           tosh	equ	0xFFE
 36537                           tosl	equ	0xFFD
 36538                           pclath	equ	0xFFA
 36539                           tblptru	equ	0xFF8
 36540                           tblptrh	equ	0xFF7
 36541                           tblptrl	equ	0xFF6
 36542                           tablat	equ	0xFF5
 36543                           prodh	equ	0xFF4
 36544                           prodl	equ	0xFF3
 36545                           intcon	equ	0xFF2
 36546                           postinc0	equ	0xFEE
 36547                           wreg	equ	0xFE8
 36548                           indf1	equ	0xFE7
 36549                           postinc1	equ	0xFE6
 36550                           postdec1	equ	0xFE5
 36551                           plusw1	equ	0xFE3
 36552                           fsr1h	equ	0xFE2
 36553                           fsr1l	equ	0xFE1
 36554                           indf2	equ	0xFDF
 36555                           postinc2	equ	0xFDE
 36556                           postdec2	equ	0xFDD
 36557                           plusw2	equ	0xFDB
 36558                           fsr2h	equ	0xFDA
 36559                           fsr2l	equ	0xFD9
 36560                           status	equ	0xFD8
 36561                           
 36562 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 36563 ;; Defined at:
 36564 ;;		line 34 in file "external_flash.c"
 36565 ;; Parameters:    Size  Location     Type
 36566 ;;  config          2    0[BANK0 ] PTR void 
 36567 ;;		 -> NULL(0), 
 36568 ;; Auto vars:     Size  Location     Type
 36569 ;;		None
 36570 ;; Return value:  Size  Location     Type
 36571 ;;                  1    wreg      unsigned char 
 36572 ;; Registers used:
 36573 ;;		wreg
 36574 ;; Tracked objects:
 36575 ;;		On entry : 0/0
 36576 ;;		On exit  : 0/0
 36577 ;;		Unchanged: 0/0
 36578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36579 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36582 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36583 ;;Total ram usage:        2 bytes
 36584 ;; Hardware stack levels used:    1
 36585 ;; Hardware stack levels required when called:   10
 36586 ;; This function calls:
 36587 ;;		Nothing
 36588 ;; This function is called by:
 36589 ;;		_MSDWriteHandler
 36590 ;;		_MSDProcessCommandMediaPresent
 36591 ;; This function uses a non-reentrant model
 36592 ;;
 36593                           
 36594                           	psect	text138
 36595  016098                     __ptext138:
 36596                           	opt stack 0
 36597  016098                     _ExternalFlash_WriteProtectStateGet:
 36598                           	opt stack 15
 36599                           
 36600                           ;external_flash.c: 37: return 0;
 36601                           
 36602                           ; BSR set to: 1
 36603                           ;incstack = 0
 36604  016098  0E00               	movlw	0
 36605  01609A  0012               	return	
 36606  01609C                     __end_of_ExternalFlash_WriteProtectStateGet:
 36607                           	opt stack 0
 36608                           tosu	equ	0xFFF
 36609                           tosh	equ	0xFFE
 36610                           tosl	equ	0xFFD
 36611                           pclath	equ	0xFFA
 36612                           tblptru	equ	0xFF8
 36613                           tblptrh	equ	0xFF7
 36614                           tblptrl	equ	0xFF6
 36615                           tablat	equ	0xFF5
 36616                           prodh	equ	0xFF4
 36617                           prodl	equ	0xFF3
 36618                           intcon	equ	0xFF2
 36619                           postinc0	equ	0xFEE
 36620                           wreg	equ	0xFE8
 36621                           indf1	equ	0xFE7
 36622                           postinc1	equ	0xFE6
 36623                           postdec1	equ	0xFE5
 36624                           plusw1	equ	0xFE3
 36625                           fsr1h	equ	0xFE2
 36626                           fsr1l	equ	0xFE1
 36627                           indf2	equ	0xFDF
 36628                           postinc2	equ	0xFDE
 36629                           postdec2	equ	0xFDD
 36630                           plusw2	equ	0xFDB
 36631                           fsr2h	equ	0xFDA
 36632                           fsr2l	equ	0xFD9
 36633                           status	equ	0xFD8
 36634                           
 36635 ;; *************** function _ExternalFlash_SectorWrite *****************
 36636 ;; Defined at:
 36637 ;;		line 56 in file "external_flash.c"
 36638 ;; Parameters:    Size  Location     Type
 36639 ;;  config          2   36[BANK0 ] PTR void 
 36640 ;;		 -> NULL(0), 
 36641 ;;  sector_addr     4   38[BANK0 ] unsigned long 
 36642 ;;  buffer          2   42[BANK0 ] PTR unsigned char 
 36643 ;;		 -> msd_buffer(512), 
 36644 ;;  allowWriteTo    1   44[BANK0 ] unsigned char 
 36645 ;; Auto vars:     Size  Location     Type
 36646 ;;  page            2   45[BANK0 ] unsigned int 
 36647 ;; Return value:  Size  Location     Type
 36648 ;;                  1    wreg      unsigned char 
 36649 ;; Registers used:
 36650 ;;		wreg, status,2, status,0, cstack
 36651 ;; Tracked objects:
 36652 ;;		On entry : 0/0
 36653 ;;		On exit  : 0/0
 36654 ;;		Unchanged: 0/0
 36655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36656 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36657 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36659 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36660 ;;Total ram usage:       11 bytes
 36661 ;; Hardware stack levels used:    1
 36662 ;; Hardware stack levels required when called:   15
 36663 ;; This function calls:
 36664 ;;		_flash_sector_write
 36665 ;; This function is called by:
 36666 ;;		_MSDWriteHandler
 36667 ;; This function uses a non-reentrant model
 36668 ;;
 36669                           
 36670                           	psect	text139
 36671  015970                     __ptext139:
 36672                           	opt stack 0
 36673  015970                     _ExternalFlash_SectorWrite:
 36674                           	opt stack 10
 36675                           
 36676                           ;external_flash.c: 58: uint16_t page = (uint16_t) sector_addr;
 36677                           
 36678                           ;incstack = 0
 36679  015970  C086  F08D         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 36680  015974  C087  F08E         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 36681                           
 36682                           ;external_flash.c: 61: if(sector_addr >= 8192)
 36683  015978  0100               	movlb	0	; () banked
 36684  01597A  5189               	movf	(ExternalFlash_SectorWrite@sector_addr+3)& (0+255),w,b
 36685  01597C  1188               	iorwf	(ExternalFlash_SectorWrite@sector_addr+2)& (0+255),w,b
 36686  01597E  E104               	bnz	u10860
 36687  015980  0E20               	movlw	32
 36688  015982  5D87               	subwf	(ExternalFlash_SectorWrite@sector_addr+1)& (0+255),w,b
 36689  015984  A0D8               	btfss	status,0,c
 36690  015986  D002               	goto	l1703
 36691  015988                     u10860:
 36692                           
 36693                           ; BSR set to: 0
 36694                           ;external_flash.c: 62: {;external_flash.c: 63: return 0;
 36695  015988  0E00               	movlw	0
 36696                           
 36697                           ; BSR set to: 0
 36698  01598A  0012               	return	
 36699  01598C                     l1703:
 36700                           
 36701                           ; BSR set to: 0
 36702                           ;external_flash.c: 64: };external_flash.c: 67: flash_sector_write(page, buffer);
 36703                           
 36704                           ; BSR set to: 0
 36705  01598C  C08D  F07F         	movff	ExternalFlash_SectorWrite@page,flash_sector_write@page
 36706  015990  C08E  F080         	movff	ExternalFlash_SectorWrite@page+1,flash_sector_write@page+1
 36707  015994  C08A  F081         	movff	ExternalFlash_SectorWrite@buffer,flash_sector_write@data
 36708  015998  C08B  F082         	movff	ExternalFlash_SectorWrite@buffer+1,flash_sector_write@data+1
 36709  01599C  ECBD  F0A9         	call	_flash_sector_write	;wreg free
 36710                           
 36711                           ;external_flash.c: 69: return 1;
 36712  0159A0  0E01               	movlw	1
 36713  0159A2  0012               	return	
 36714  0159A4                     __end_of_ExternalFlash_SectorWrite:
 36715                           	opt stack 0
 36716                           tosu	equ	0xFFF
 36717                           tosh	equ	0xFFE
 36718                           tosl	equ	0xFFD
 36719                           pclath	equ	0xFFA
 36720                           tblptru	equ	0xFF8
 36721                           tblptrh	equ	0xFF7
 36722                           tblptrl	equ	0xFF6
 36723                           tablat	equ	0xFF5
 36724                           prodh	equ	0xFF4
 36725                           prodl	equ	0xFF3
 36726                           intcon	equ	0xFF2
 36727                           postinc0	equ	0xFEE
 36728                           wreg	equ	0xFE8
 36729                           indf1	equ	0xFE7
 36730                           postinc1	equ	0xFE6
 36731                           postdec1	equ	0xFE5
 36732                           plusw1	equ	0xFE3
 36733                           fsr1h	equ	0xFE2
 36734                           fsr1l	equ	0xFE1
 36735                           indf2	equ	0xFDF
 36736                           postinc2	equ	0xFDE
 36737                           postdec2	equ	0xFDD
 36738                           plusw2	equ	0xFDB
 36739                           fsr2h	equ	0xFDA
 36740                           fsr2l	equ	0xFD9
 36741                           status	equ	0xFD8
 36742                           
 36743 ;; *************** function _flash_sector_write *****************
 36744 ;; Defined at:
 36745 ;;		line 434 in file "flash.c"
 36746 ;; Parameters:    Size  Location     Type
 36747 ;;  page            2   31[BANK0 ] unsigned int 
 36748 ;;  data            2   33[BANK0 ] PTR unsigned char 
 36749 ;;		 -> buffer(512), msd_buffer(512), 
 36750 ;; Auto vars:     Size  Location     Type
 36751 ;;  match           1   35[BANK0 ] enum E7062
 36752 ;; Return value:  Size  Location     Type
 36753 ;;                  1    wreg      void 
 36754 ;; Registers used:
 36755 ;;		wreg, status,2, status,0, cstack
 36756 ;; Tracked objects:
 36757 ;;		On entry : 0/0
 36758 ;;		On exit  : 0/0
 36759 ;;		Unchanged: 0/0
 36760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36761 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36762 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36764 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36765 ;;Total ram usage:        5 bytes
 36766 ;; Hardware stack levels used:    1
 36767 ;; Hardware stack levels required when called:   14
 36768 ;; This function calls:
 36769 ;;		__flash_compare_page_to_buffer
 36770 ;;		__flash_write_page_from_buffer
 36771 ;;		__flash_write_to_buffer
 36772 ;; This function is called by:
 36773 ;;		_ExternalFlash_SectorWrite
 36774 ;;		__make_cluster_chain
 36775 ;;		_fat_restore_mbr_fbr
 36776 ;;		_fat_format
 36777 ;; This function uses a non-reentrant model
 36778 ;;
 36779                           
 36780                           	psect	text140
 36781  01537A                     __ptext140:
 36782                           	opt stack 0
 36783  01537A                     _flash_sector_write:
 36784                           	opt stack 13
 36785                           
 36786                           ;flash.c: 436: flashMatchResult_t match;;flash.c: 439: _flash_write_to_buffer(0, data, 5
      +                          12, FLASH_BUFFER_1);
 36787                           
 36788                           ;incstack = 0
 36789  01537A  0E00               	movlw	0
 36790  01537C  0100               	movlb	0	; () banked
 36791  01537E  6F74               	movwf	(__flash_write_to_buffer@start+1)& (0+255),b
 36792  015380  0E00               	movlw	0
 36793  015382  6F73               	movwf	__flash_write_to_buffer@start& (0+255),b
 36794  015384  C081  F075         	movff	flash_sector_write@data,__flash_write_to_buffer@data
 36795  015388  C082  F076         	movff	flash_sector_write@data+1,__flash_write_to_buffer@data+1
 36796  01538C  0E02               	movlw	2
 36797  01538E  6F78               	movwf	(__flash_write_to_buffer@data_length+1)& (0+255),b
 36798  015390  0E00               	movlw	0
 36799  015392  6F77               	movwf	__flash_write_to_buffer@data_length& (0+255),b
 36800  015394  0E00               	movlw	0
 36801  015396  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 36802  015398  ECF4  F0A8         	call	__flash_write_to_buffer	;wreg free
 36803                           
 36804                           ;flash.c: 442: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 36805  01539C  C07F  F073         	movff	flash_sector_write@page,__flash_compare_page_to_buffer@page
 36806  0153A0  C080  F074         	movff	flash_sector_write@page+1,__flash_compare_page_to_buffer@page+1
 36807  0153A4  0E00               	movlw	0
 36808  0153A6  0100               	movlb	0	; () banked
 36809  0153A8  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 36810  0153AA  EC96  F0A1         	call	__flash_compare_page_to_buffer	;wreg free
 36811  0153AE  0100               	movlb	0	; () banked
 36812  0153B0  6F83               	movwf	flash_sector_write@match& (0+255),b
 36813                           
 36814                           ; BSR set to: 0
 36815                           ;flash.c: 445: if(match==DATA_DOES_NOT_MATCH)
 36816  0153B2  0583               	decf	flash_sector_write@match& (0+255),w,b
 36817  0153B4  A4D8               	btfss	status,2,c
 36818  0153B6  0012               	return	
 36819                           
 36820                           ; BSR set to: 0
 36821                           ;flash.c: 446: {;flash.c: 447: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 36822  0153B8  C07F  F073         	movff	flash_sector_write@page,__flash_write_page_from_buffer@page
 36823  0153BC  C080  F074         	movff	flash_sector_write@page+1,__flash_write_page_from_buffer@page+1
 36824  0153C0  0E00               	movlw	0
 36825  0153C2  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 36826  0153C4  ECC0  F0A6         	call	__flash_write_page_from_buffer	;wreg free
 36827  0153C8  0012               	return	
 36828  0153CA                     __end_of_flash_sector_write:
 36829                           	opt stack 0
 36830                           tosu	equ	0xFFF
 36831                           tosh	equ	0xFFE
 36832                           tosl	equ	0xFFD
 36833                           pclath	equ	0xFFA
 36834                           tblptru	equ	0xFF8
 36835                           tblptrh	equ	0xFF7
 36836                           tblptrl	equ	0xFF6
 36837                           tablat	equ	0xFF5
 36838                           prodh	equ	0xFF4
 36839                           prodl	equ	0xFF3
 36840                           intcon	equ	0xFF2
 36841                           postinc0	equ	0xFEE
 36842                           wreg	equ	0xFE8
 36843                           indf1	equ	0xFE7
 36844                           postinc1	equ	0xFE6
 36845                           postdec1	equ	0xFE5
 36846                           plusw1	equ	0xFE3
 36847                           fsr1h	equ	0xFE2
 36848                           fsr1l	equ	0xFE1
 36849                           indf2	equ	0xFDF
 36850                           postinc2	equ	0xFDE
 36851                           postdec2	equ	0xFDD
 36852                           plusw2	equ	0xFDB
 36853                           fsr2h	equ	0xFDA
 36854                           fsr2l	equ	0xFD9
 36855                           status	equ	0xFD8
 36856                           
 36857 ;; *************** function __flash_write_to_buffer *****************
 36858 ;; Defined at:
 36859 ;;		line 236 in file "flash.c"
 36860 ;; Parameters:    Size  Location     Type
 36861 ;;  start           2   19[BANK0 ] unsigned int 
 36862 ;;  data            2   21[BANK0 ] PTR unsigned char 
 36863 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 36864 ;;		 -> _delete_root@deleted_value(1), buffer(512), msd_buffer(512), 
 36865 ;;  data_length     2   23[BANK0 ] unsigned int 
 36866 ;;  buffer          1   25[BANK0 ] enum E7058
 36867 ;; Auto vars:     Size  Location     Type
 36868 ;;  command         4   26[BANK0 ] unsigned char [4]
 36869 ;; Return value:  Size  Location     Type
 36870 ;;                  1    wreg      void 
 36871 ;; Registers used:
 36872 ;;		wreg, status,2, status,0, cstack
 36873 ;; Tracked objects:
 36874 ;;		On entry : 0/0
 36875 ;;		On exit  : 0/0
 36876 ;;		Unchanged: 0/0
 36877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36878 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36879 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36881 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36882 ;;Total ram usage:       11 bytes
 36883 ;; Hardware stack levels used:    1
 36884 ;; Hardware stack levels required when called:   13
 36885 ;; This function calls:
 36886 ;;		__flash_is_busy
 36887 ;;		_spi_tx_tx
 36888 ;; This function is called by:
 36889 ;;		_flash_sector_write
 36890 ;;		_flash_partial_write
 36891 ;;		_flash_write_to_buffer
 36892 ;; This function uses a non-reentrant model
 36893 ;;
 36894                           
 36895                           	psect	text141
 36896  0151E8                     __ptext141:
 36897                           	opt stack 0
 36898  0151E8                     __flash_write_to_buffer:
 36899                           	opt stack 13
 36900                           
 36901                           ;flash.c: 238: uint8_t command[4];;flash.c: 241: while(_flash_is_busy());
 36902                           
 36903                           ;incstack = 0
 36904  0151E8  ECFA  F0AE         	call	__flash_is_busy	;wreg free
 36905  0151EC  0900               	iorlw	0
 36906  0151EE  A4D8               	btfss	status,2,c
 36907  0151F0  D7FB               	goto	__flash_write_to_buffer
 36908                           
 36909                           ;flash.c: 244: if(buffer==FLASH_BUFFER_1)
 36910  0151F2  0100               	movlb	0	; () banked
 36911  0151F4  5179               	movf	__flash_write_to_buffer@buffer& (0+255),w,b
 36912  0151F6  A4D8               	btfss	status,2,c
 36913  0151F8  D002               	goto	l1589
 36914                           
 36915                           ; BSR set to: 0
 36916                           ;flash.c: 245: command[0] = 0x84;
 36917  0151FA  0E84               	movlw	132
 36918  0151FC  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 36919  0151FE                     l1589:
 36920                           
 36921                           ; BSR set to: 0
 36922                           ;flash.c: 246: if(buffer==FLASH_BUFFER_2)
 36923                           
 36924                           ; BSR set to: 0
 36925  0151FE  0579               	decf	__flash_write_to_buffer@buffer& (0+255),w,b
 36926  015200  A4D8               	btfss	status,2,c
 36927  015202  D002               	goto	l1590
 36928                           
 36929                           ; BSR set to: 0
 36930                           ;flash.c: 247: command[0] = 0x87;
 36931  015204  0E87               	movlw	135
 36932  015206  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 36933  015208                     l1590:
 36934                           
 36935                           ; BSR set to: 0
 36936                           ;flash.c: 249: command[1] = 0x00;
 36937  015208  0E00               	movlw	0
 36938  01520A  6F7B               	movwf	(__flash_write_to_buffer@command+1)& (0+255),b
 36939                           
 36940                           ;flash.c: 250: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 36941  01520C  5174               	movf	(__flash_write_to_buffer@start+1)& (0+255),w,b
 36942  01520E  6F7C               	movwf	(__flash_write_to_buffer@command+2)& (0+255),b
 36943                           
 36944                           ; BSR set to: 0
 36945                           ;flash.c: 251: command[3] = ((unsigned char)((start)&0xFF));
 36946  015210  C073  F07D         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 36947                           
 36948                           ; BSR set to: 0
 36949                           ;flash.c: 254: spi_tx_tx(command, 4, data, data_length);
 36950  015214  0E7A               	movlw	low __flash_write_to_buffer@command
 36951  015216  6F60               	movwf	spi_tx_tx@command& (0+255),b
 36952  015218  0E00               	movlw	high __flash_write_to_buffer@command
 36953  01521A  6F61               	movwf	(spi_tx_tx@command+1)& (0+255),b
 36954  01521C  0E00               	movlw	0
 36955  01521E  6F63               	movwf	(spi_tx_tx@command_length+1)& (0+255),b
 36956  015220  0E04               	movlw	4
 36957  015222  6F62               	movwf	spi_tx_tx@command_length& (0+255),b
 36958  015224  C075  F064         	movff	__flash_write_to_buffer@data,spi_tx_tx@data
 36959  015228  C076  F065         	movff	__flash_write_to_buffer@data+1,spi_tx_tx@data+1
 36960  01522C  C077  F066         	movff	__flash_write_to_buffer@data_length,spi_tx_tx@data_length
 36961  015230  C078  F067         	movff	__flash_write_to_buffer@data_length+1,spi_tx_tx@data_length+1
 36962  015234  EC3E  F09F         	call	_spi_tx_tx	;wreg free
 36963  015238  0012               	return		;funcret
 36964  01523A                     __end_of__flash_write_to_buffer:
 36965                           	opt stack 0
 36966                           tosu	equ	0xFFF
 36967                           tosh	equ	0xFFE
 36968                           tosl	equ	0xFFD
 36969                           pclath	equ	0xFFA
 36970                           tblptru	equ	0xFF8
 36971                           tblptrh	equ	0xFF7
 36972                           tblptrl	equ	0xFF6
 36973                           tablat	equ	0xFF5
 36974                           prodh	equ	0xFF4
 36975                           prodl	equ	0xFF3
 36976                           intcon	equ	0xFF2
 36977                           postinc0	equ	0xFEE
 36978                           wreg	equ	0xFE8
 36979                           indf1	equ	0xFE7
 36980                           postinc1	equ	0xFE6
 36981                           postdec1	equ	0xFE5
 36982                           plusw1	equ	0xFE3
 36983                           fsr1h	equ	0xFE2
 36984                           fsr1l	equ	0xFE1
 36985                           indf2	equ	0xFDF
 36986                           postinc2	equ	0xFDE
 36987                           postdec2	equ	0xFDD
 36988                           plusw2	equ	0xFDB
 36989                           fsr2h	equ	0xFDA
 36990                           fsr2l	equ	0xFD9
 36991                           status	equ	0xFD8
 36992                           
 36993 ;; *************** function _spi_tx_tx *****************
 36994 ;; Defined at:
 36995 ;;		line 146 in file "spi.c"
 36996 ;; Parameters:    Size  Location     Type
 36997 ;;  command         2    0[BANK0 ] PTR unsigned char 
 36998 ;;		 -> _flash_write_to_buffer@command(4), 
 36999 ;;  command_leng    2    2[BANK0 ] unsigned int 
 37000 ;;  data            2    4[BANK0 ] PTR unsigned char 
 37001 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 37002 ;;		 -> _delete_root@deleted_value(1), buffer(512), msd_buffer(512), 
 37003 ;;  data_length     2    6[BANK0 ] unsigned int 
 37004 ;; Auto vars:     Size  Location     Type
 37005 ;;		None
 37006 ;; Return value:  Size  Location     Type
 37007 ;;                  1    wreg      void 
 37008 ;; Registers used:
 37009 ;;		wreg, status,2, status,0
 37010 ;; Tracked objects:
 37011 ;;		On entry : 0/0
 37012 ;;		On exit  : 0/0
 37013 ;;		Unchanged: 0/0
 37014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37015 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37017 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37018 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37019 ;;Total ram usage:       12 bytes
 37020 ;; Hardware stack levels used:    1
 37021 ;; Hardware stack levels required when called:   10
 37022 ;; This function calls:
 37023 ;;		Nothing
 37024 ;; This function is called by:
 37025 ;;		__flash_write_to_buffer
 37026 ;; This function uses a non-reentrant model
 37027 ;;
 37028                           
 37029                           	psect	text142
 37030  013E7C                     __ptext142:
 37031                           	opt stack 0
 37032  013E7C                     _spi_tx_tx:
 37033                           	opt stack 15
 37034                           
 37035                           ;spi.c: 149: DMACON1bits.SSCON1 = 0;
 37036                           
 37037                           ;incstack = 0
 37038  013E7C  9E88               	bcf	3976,7,c	;volatile
 37039                           
 37040                           ;spi.c: 150: DMACON1bits.SSCON0 = 0;
 37041  013E7E  9C88               	bcf	3976,6,c	;volatile
 37042                           
 37043                           ;spi.c: 152: DMACON1bits.TXINC = 1;
 37044  013E80  8A88               	bsf	3976,5,c	;volatile
 37045                           
 37046                           ;spi.c: 154: DMACON1bits.RXINC = 0;
 37047  013E82  9888               	bcf	3976,4,c	;volatile
 37048                           
 37049                           ;spi.c: 156: DMACON1bits.DUPLEX1 = 0;
 37050  013E84  9688               	bcf	3976,3,c	;volatile
 37051                           
 37052                           ;spi.c: 157: DMACON1bits.DUPLEX0 = 1;
 37053  013E86  8488               	bsf	3976,2,c	;volatile
 37054                           
 37055                           ;spi.c: 159: DMACON1bits.DLYINTEN = 0;
 37056  013E88  9288               	bcf	3976,1,c	;volatile
 37057                           
 37058                           ;spi.c: 161: DMACON2bits.DLYCYC = 0b0000;
 37059  013E8A  9886               	bcf	3974,4,c	;volatile
 37060  013E8C  9A86               	bcf	3974,5,c	;volatile
 37061  013E8E  9C86               	bcf	3974,6,c	;volatile
 37062  013E90  9E86               	bcf	3974,7,c	;volatile
 37063                           
 37064                           ;spi.c: 163: DMACON2bits.INTLVL = 0b0000;
 37065  013E92  9086               	bcf	3974,0,c	;volatile
 37066  013E94  9286               	bcf	3974,1,c	;volatile
 37067  013E96  9486               	bcf	3974,2,c	;volatile
 37068  013E98  9686               	bcf	3974,3,c	;volatile
 37069                           
 37070                           ;spi.c: 166: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 37071  013E9A  0100               	movlb	0	; () banked
 37072  013E9C  5161               	movf	(spi_tx_tx@command+1)& (0+255),w,b
 37073  013E9E  6E6A               	movwf	3946,c	;volatile
 37074                           
 37075                           ; BSR set to: 0
 37076                           ;spi.c: 167: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 37077  013EA0  C060  FF6B         	movff	spi_tx_tx@command,3947	;volatile
 37078                           
 37079                           ; BSR set to: 0
 37080                           ;spi.c: 170: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 37081  013EA4  0EFF               	movlw	255
 37082  013EA6  6F68               	movwf	??_spi_tx_tx& (0+255),b
 37083  013EA8  0EFF               	movlw	255
 37084  013EAA  6F69               	movwf	(??_spi_tx_tx+1)& (0+255),b
 37085  013EAC  C062  F06A         	movff	spi_tx_tx@command_length,??_spi_tx_tx+2
 37086  013EB0  C063  F06B         	movff	spi_tx_tx@command_length+1,??_spi_tx_tx+3
 37087  013EB4  5168               	movf	??_spi_tx_tx& (0+255),w,b
 37088  013EB6  276A               	addwf	(??_spi_tx_tx+2)& (0+255),f,b
 37089  013EB8  5169               	movf	(??_spi_tx_tx+1)& (0+255),w,b
 37090  013EBA  236B               	addwfc	(??_spi_tx_tx+3)& (0+255),f,b
 37091  013EBC  C06B  F06A         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 37092  013EC0  6B6B               	clrf	(??_spi_tx_tx+3)& (0+255),b
 37093  013EC2  516A               	movf	(??_spi_tx_tx+2)& (0+255),w,b
 37094  013EC4  6E66               	movwf	3942,c	;volatile
 37095                           
 37096                           ; BSR set to: 0
 37097                           ;spi.c: 171: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 37098  013EC6  0562               	decf	spi_tx_tx@command_length& (0+255),w,b
 37099  013EC8  6E67               	movwf	3943,c	;volatile
 37100                           
 37101                           ; BSR set to: 0
 37102                           ;spi.c: 174: LATDbits.LD7 = 0;
 37103  013ECA  9E8C               	bcf	3980,7,c	;volatile
 37104                           
 37105                           ; BSR set to: 0
 37106                           ;spi.c: 177: DMACON1bits.DMAEN = 1;
 37107  013ECC  8088               	bsf	3976,0,c	;volatile
 37108  013ECE                     
 37109                           ; BSR set to: 0
 37110  013ECE  B088               	btfsc	3976,0,c	;volatile
 37111  013ED0  D7FE               	goto	l2205
 37112                           
 37113                           ;spi.c: 181: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 37114  013ED2  0100               	movlb	0	; () banked
 37115  013ED4  5165               	movf	(spi_tx_tx@data+1)& (0+255),w,b
 37116  013ED6  6E6A               	movwf	3946,c	;volatile
 37117                           
 37118                           ; BSR set to: 0
 37119                           ;spi.c: 182: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 37120  013ED8  C064  FF6B         	movff	spi_tx_tx@data,3947	;volatile
 37121                           
 37122                           ; BSR set to: 0
 37123                           ;spi.c: 185: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 37124  013EDC  0EFF               	movlw	255
 37125  013EDE  6F68               	movwf	??_spi_tx_tx& (0+255),b
 37126  013EE0  0EFF               	movlw	255
 37127  013EE2  6F69               	movwf	(??_spi_tx_tx+1)& (0+255),b
 37128  013EE4  C066  F06A         	movff	spi_tx_tx@data_length,??_spi_tx_tx+2
 37129  013EE8  C067  F06B         	movff	spi_tx_tx@data_length+1,??_spi_tx_tx+3
 37130  013EEC  5168               	movf	??_spi_tx_tx& (0+255),w,b
 37131  013EEE  276A               	addwf	(??_spi_tx_tx+2)& (0+255),f,b
 37132  013EF0  5169               	movf	(??_spi_tx_tx+1)& (0+255),w,b
 37133  013EF2  236B               	addwfc	(??_spi_tx_tx+3)& (0+255),f,b
 37134  013EF4  C06B  F06A         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 37135  013EF8  6B6B               	clrf	(??_spi_tx_tx+3)& (0+255),b
 37136  013EFA  516A               	movf	(??_spi_tx_tx+2)& (0+255),w,b
 37137  013EFC  6E66               	movwf	3942,c	;volatile
 37138                           
 37139                           ; BSR set to: 0
 37140                           ;spi.c: 186: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 37141  013EFE  0566               	decf	spi_tx_tx@data_length& (0+255),w,b
 37142  013F00  6E67               	movwf	3943,c	;volatile
 37143                           
 37144                           ; BSR set to: 0
 37145                           ;spi.c: 189: DMACON1bits.DMAEN = 1;
 37146  013F02  8088               	bsf	3976,0,c	;volatile
 37147  013F04                     
 37148                           ; BSR set to: 0
 37149  013F04  B088               	btfsc	3976,0,c	;volatile
 37150  013F06  D7FE               	goto	l2208
 37151                           
 37152                           ;spi.c: 193: LATDbits.LD7 = 1;
 37153  013F08  8E8C               	bsf	3980,7,c	;volatile
 37154  013F0A  0012               	return		;funcret
 37155  013F0C                     __end_of_spi_tx_tx:
 37156                           	opt stack 0
 37157                           tosu	equ	0xFFF
 37158                           tosh	equ	0xFFE
 37159                           tosl	equ	0xFFD
 37160                           pclath	equ	0xFFA
 37161                           tblptru	equ	0xFF8
 37162                           tblptrh	equ	0xFF7
 37163                           tblptrl	equ	0xFF6
 37164                           tablat	equ	0xFF5
 37165                           prodh	equ	0xFF4
 37166                           prodl	equ	0xFF3
 37167                           intcon	equ	0xFF2
 37168                           postinc0	equ	0xFEE
 37169                           wreg	equ	0xFE8
 37170                           indf1	equ	0xFE7
 37171                           postinc1	equ	0xFE6
 37172                           postdec1	equ	0xFE5
 37173                           plusw1	equ	0xFE3
 37174                           fsr1h	equ	0xFE2
 37175                           fsr1l	equ	0xFE1
 37176                           indf2	equ	0xFDF
 37177                           postinc2	equ	0xFDE
 37178                           postdec2	equ	0xFDD
 37179                           plusw2	equ	0xFDB
 37180                           fsr2h	equ	0xFDA
 37181                           fsr2l	equ	0xFD9
 37182                           status	equ	0xFD8
 37183                           
 37184 ;; *************** function __flash_write_page_from_buffer *****************
 37185 ;; Defined at:
 37186 ;;		line 258 in file "flash.c"
 37187 ;; Parameters:    Size  Location     Type
 37188 ;;  page            2   19[BANK0 ] unsigned int 
 37189 ;;  buffer          1   21[BANK0 ] enum E7058
 37190 ;; Auto vars:     Size  Location     Type
 37191 ;;  command         4   25[BANK0 ] unsigned char [4]
 37192 ;; Return value:  Size  Location     Type
 37193 ;;                  1    wreg      void 
 37194 ;; Registers used:
 37195 ;;		wreg, status,2, status,0, cstack
 37196 ;; Tracked objects:
 37197 ;;		On entry : 0/0
 37198 ;;		On exit  : 0/0
 37199 ;;		Unchanged: 0/0
 37200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37201 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37202 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37203 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37204 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37205 ;;Total ram usage:       10 bytes
 37206 ;; Hardware stack levels used:    1
 37207 ;; Hardware stack levels required when called:   13
 37208 ;; This function calls:
 37209 ;;		__flash_is_busy
 37210 ;;		_spi_tx
 37211 ;; This function is called by:
 37212 ;;		_flash_sector_write
 37213 ;;		_flash_partial_write
 37214 ;;		_flash_write_page_from_buffer
 37215 ;; This function uses a non-reentrant model
 37216 ;;
 37217                           
 37218                           	psect	text143
 37219  014D80                     __ptext143:
 37220                           	opt stack 0
 37221  014D80                     __flash_write_page_from_buffer:
 37222                           	opt stack 13
 37223                           
 37224                           ;flash.c: 260: uint8_t command[4];;flash.c: 263: while(_flash_is_busy());
 37225                           
 37226                           ;incstack = 0
 37227  014D80  ECFA  F0AE         	call	__flash_is_busy	;wreg free
 37228  014D84  0900               	iorlw	0
 37229  014D86  A4D8               	btfss	status,2,c
 37230  014D88  D7FB               	goto	__flash_write_page_from_buffer
 37231                           
 37232                           ;flash.c: 266: if(buffer==FLASH_BUFFER_1)
 37233  014D8A  0100               	movlb	0	; () banked
 37234  014D8C  5175               	movf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 37235  014D8E  A4D8               	btfss	status,2,c
 37236  014D90  D002               	goto	l1597
 37237                           
 37238                           ; BSR set to: 0
 37239                           ;flash.c: 267: command[0] = 0x83;
 37240  014D92  0E83               	movlw	131
 37241  014D94  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 37242  014D96                     l1597:
 37243                           
 37244                           ; BSR set to: 0
 37245                           ;flash.c: 268: if(buffer==FLASH_BUFFER_2)
 37246                           
 37247                           ; BSR set to: 0
 37248  014D96  0575               	decf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 37249  014D98  A4D8               	btfss	status,2,c
 37250  014D9A  D002               	goto	l1598
 37251                           
 37252                           ; BSR set to: 0
 37253                           ;flash.c: 269: command[0] = 0x86;
 37254  014D9C  0E86               	movlw	134
 37255  014D9E  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 37256  014DA0                     l1598:
 37257                           
 37258                           ; BSR set to: 0
 37259                           ;flash.c: 271: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 37260                           
 37261                           ; BSR set to: 0
 37262  014DA0  C073  F076         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 37263  014DA4  C074  F077         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 37264  014DA8  0E07               	movlw	7
 37265  014DAA  6F78               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),b
 37266  014DAC                     u10255:
 37267  014DAC  90D8               	bcf	status,0,c
 37268  014DAE  3377               	rrcf	(??__flash_write_page_from_buffer+1)& (0+255),f,b
 37269  014DB0  3376               	rrcf	??__flash_write_page_from_buffer& (0+255),f,b
 37270  014DB2  2F78               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,b
 37271  014DB4  D7FB               	goto	u10255
 37272  014DB6  5176               	movf	??__flash_write_page_from_buffer& (0+255),w,b
 37273  014DB8  6F7A               	movwf	(__flash_write_page_from_buffer@command+1)& (0+255),b
 37274                           
 37275                           ; BSR set to: 0
 37276                           ;flash.c: 272: command[2] = ((unsigned char)((page<<1)&0xFF));
 37277  014DBA  5173               	movf	__flash_write_page_from_buffer@page& (0+255),w,b
 37278  014DBC  2573               	addwf	__flash_write_page_from_buffer@page& (0+255),w,b
 37279  014DBE  6F7B               	movwf	(__flash_write_page_from_buffer@command+2)& (0+255),b
 37280                           
 37281                           ;flash.c: 273: command[3] = 0x00;
 37282  014DC0  0E00               	movlw	0
 37283  014DC2  6F7C               	movwf	(__flash_write_page_from_buffer@command+3)& (0+255),b
 37284                           
 37285                           ; BSR set to: 0
 37286                           ;flash.c: 276: spi_tx(command, 4);
 37287  014DC4  0E79               	movlw	low __flash_write_page_from_buffer@command
 37288  014DC6  6F60               	movwf	spi_tx@data& (0+255),b
 37289  014DC8  0E00               	movlw	high __flash_write_page_from_buffer@command
 37290  014DCA  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 37291  014DCC  0E00               	movlw	0
 37292  014DCE  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 37293  014DD0  0E04               	movlw	4
 37294  014DD2  6F62               	movwf	spi_tx@length& (0+255),b
 37295  014DD4  ECED  F0A6         	call	_spi_tx	;wreg free
 37296  014DD8  0012               	return		;funcret
 37297  014DDA                     __end_of__flash_write_page_from_buffer:
 37298                           	opt stack 0
 37299                           tosu	equ	0xFFF
 37300                           tosh	equ	0xFFE
 37301                           tosl	equ	0xFFD
 37302                           pclath	equ	0xFFA
 37303                           tblptru	equ	0xFF8
 37304                           tblptrh	equ	0xFF7
 37305                           tblptrl	equ	0xFF6
 37306                           tablat	equ	0xFF5
 37307                           prodh	equ	0xFF4
 37308                           prodl	equ	0xFF3
 37309                           intcon	equ	0xFF2
 37310                           postinc0	equ	0xFEE
 37311                           wreg	equ	0xFE8
 37312                           indf1	equ	0xFE7
 37313                           postinc1	equ	0xFE6
 37314                           postdec1	equ	0xFE5
 37315                           plusw1	equ	0xFE3
 37316                           fsr1h	equ	0xFE2
 37317                           fsr1l	equ	0xFE1
 37318                           indf2	equ	0xFDF
 37319                           postinc2	equ	0xFDE
 37320                           postdec2	equ	0xFDD
 37321                           plusw2	equ	0xFDB
 37322                           fsr2h	equ	0xFDA
 37323                           fsr2l	equ	0xFD9
 37324                           status	equ	0xFD8
 37325                           
 37326 ;; *************** function __flash_compare_page_to_buffer *****************
 37327 ;; Defined at:
 37328 ;;		line 176 in file "flash.c"
 37329 ;; Parameters:    Size  Location     Type
 37330 ;;  page            2   19[BANK0 ] unsigned int 
 37331 ;;  buffer          1   21[BANK0 ] enum E7058
 37332 ;; Auto vars:     Size  Location     Type
 37333 ;;  command         4   27[BANK0 ] unsigned char [4]
 37334 ;;  status          2   25[BANK0 ] unsigned int 
 37335 ;; Return value:  Size  Location     Type
 37336 ;;                  1    wreg      enum E7062
 37337 ;; Registers used:
 37338 ;;		wreg, status,2, status,0, cstack
 37339 ;; Tracked objects:
 37340 ;;		On entry : 0/0
 37341 ;;		On exit  : 0/0
 37342 ;;		Unchanged: 0/0
 37343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37344 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37345 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37346 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37347 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37348 ;;Total ram usage:       12 bytes
 37349 ;; Hardware stack levels used:    1
 37350 ;; Hardware stack levels required when called:   13
 37351 ;; This function calls:
 37352 ;;		__flash_get_status
 37353 ;;		__flash_is_busy
 37354 ;;		_spi_tx
 37355 ;; This function is called by:
 37356 ;;		_flash_sector_write
 37357 ;;		_flash_partial_write
 37358 ;; This function uses a non-reentrant model
 37359 ;;
 37360                           
 37361                           	psect	text144
 37362  01432C                     __ptext144:
 37363                           	opt stack 0
 37364  01432C                     __flash_compare_page_to_buffer:
 37365                           	opt stack 13
 37366                           
 37367                           ;flash.c: 178: uint8_t command[4];;flash.c: 179: uint16_t status;;flash.c: 182: while(_f
      +                          lash_is_busy());
 37368                           
 37369                           ;incstack = 0
 37370  01432C  ECFA  F0AE         	call	__flash_is_busy	;wreg free
 37371  014330  0900               	iorlw	0
 37372  014332  A4D8               	btfss	status,2,c
 37373  014334  D7FB               	goto	__flash_compare_page_to_buffer
 37374                           
 37375                           ;flash.c: 185: if(buffer==FLASH_BUFFER_1)
 37376  014336  0100               	movlb	0	; () banked
 37377  014338  5175               	movf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 37378  01433A  A4D8               	btfss	status,2,c
 37379  01433C  D002               	goto	l1570
 37380                           
 37381                           ; BSR set to: 0
 37382                           ;flash.c: 186: command[0] = 0x60;
 37383  01433E  0E60               	movlw	96
 37384  014340  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 37385  014342                     l1570:
 37386                           
 37387                           ; BSR set to: 0
 37388                           ;flash.c: 187: if(buffer==FLASH_BUFFER_2)
 37389                           
 37390                           ; BSR set to: 0
 37391  014342  0575               	decf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 37392  014344  A4D8               	btfss	status,2,c
 37393  014346  D002               	goto	l1571
 37394                           
 37395                           ; BSR set to: 0
 37396                           ;flash.c: 188: command[0] = 0x60;
 37397  014348  0E60               	movlw	96
 37398  01434A  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 37399  01434C                     l1571:
 37400                           
 37401                           ; BSR set to: 0
 37402                           ;flash.c: 190: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 37403                           
 37404                           ; BSR set to: 0
 37405  01434C  C073  F076         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 37406  014350  C074  F077         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 37407  014354  0E07               	movlw	7
 37408  014356  6F78               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),b
 37409  014358                     u10165:
 37410  014358  90D8               	bcf	status,0,c
 37411  01435A  3377               	rrcf	(??__flash_compare_page_to_buffer+1)& (0+255),f,b
 37412  01435C  3376               	rrcf	??__flash_compare_page_to_buffer& (0+255),f,b
 37413  01435E  2F78               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,b
 37414  014360  D7FB               	goto	u10165
 37415  014362  5176               	movf	??__flash_compare_page_to_buffer& (0+255),w,b
 37416  014364  6F7C               	movwf	(__flash_compare_page_to_buffer@command+1)& (0+255),b
 37417                           
 37418                           ; BSR set to: 0
 37419                           ;flash.c: 191: command[2] = ((unsigned char)((page<<1)&0xFF));
 37420  014366  5173               	movf	__flash_compare_page_to_buffer@page& (0+255),w,b
 37421  014368  2573               	addwf	__flash_compare_page_to_buffer@page& (0+255),w,b
 37422  01436A  6F7D               	movwf	(__flash_compare_page_to_buffer@command+2)& (0+255),b
 37423                           
 37424                           ;flash.c: 192: command[3] = 0x00;
 37425  01436C  0E00               	movlw	0
 37426  01436E  6F7E               	movwf	(__flash_compare_page_to_buffer@command+3)& (0+255),b
 37427                           
 37428                           ; BSR set to: 0
 37429                           ;flash.c: 195: spi_tx(command, 4);
 37430  014370  0E7B               	movlw	low __flash_compare_page_to_buffer@command
 37431  014372  6F60               	movwf	spi_tx@data& (0+255),b
 37432  014374  0E00               	movlw	high __flash_compare_page_to_buffer@command
 37433  014376  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 37434  014378  0E00               	movlw	0
 37435  01437A  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 37436  01437C  0E04               	movlw	4
 37437  01437E  6F62               	movwf	spi_tx@length& (0+255),b
 37438  014380  ECED  F0A6         	call	_spi_tx	;wreg free
 37439  014384  ECFA  F0AE         	call	__flash_is_busy	;wreg free
 37440  014388  0900               	iorlw	0
 37441  01438A  A4D8               	btfss	status,2,c
 37442  01438C  D7FB               	goto	l1573
 37443                           
 37444                           ;flash.c: 201: status = _flash_get_status();
 37445  01438E  ECEC  F0AC         	call	__flash_get_status	;wreg free
 37446  014392  C06C  F079         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 37447  014396  C06D  F07A         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 37448                           
 37449                           ;flash.c: 204: if(status & 0b0000000001000000)
 37450  01439A  0100               	movlb	0	; () banked
 37451  01439C  AD79               	btfss	__flash_compare_page_to_buffer@status& (0+255),6,b
 37452  01439E  D002               	goto	l1575
 37453                           
 37454                           ; BSR set to: 0
 37455                           ;flash.c: 205: {;flash.c: 207: return DATA_DOES_NOT_MATCH;
 37456  0143A0  0E01               	movlw	1
 37457                           
 37458                           ; BSR set to: 0
 37459                           ;flash.c: 208: }
 37460                           
 37461                           ; BSR set to: 0
 37462  0143A2  0012               	return	
 37463  0143A4                     l1575:
 37464                           
 37465                           ; BSR set to: 0
 37466                           ;flash.c: 209: else;flash.c: 210: {;flash.c: 212: return DATA_DOES_MATCH;
 37467                           
 37468                           ; BSR set to: 0
 37469  0143A4  0E00               	movlw	0
 37470                           
 37471                           ; BSR set to: 0
 37472  0143A6  0012               	return	
 37473  0143A8                     __end_of__flash_compare_page_to_buffer:
 37474                           	opt stack 0
 37475                           tosu	equ	0xFFF
 37476                           tosh	equ	0xFFE
 37477                           tosl	equ	0xFFD
 37478                           pclath	equ	0xFFA
 37479                           tblptru	equ	0xFF8
 37480                           tblptrh	equ	0xFF7
 37481                           tblptrl	equ	0xFF6
 37482                           tablat	equ	0xFF5
 37483                           prodh	equ	0xFF4
 37484                           prodl	equ	0xFF3
 37485                           intcon	equ	0xFF2
 37486                           postinc0	equ	0xFEE
 37487                           wreg	equ	0xFE8
 37488                           indf1	equ	0xFE7
 37489                           postinc1	equ	0xFE6
 37490                           postdec1	equ	0xFE5
 37491                           plusw1	equ	0xFE3
 37492                           fsr1h	equ	0xFE2
 37493                           fsr1l	equ	0xFE1
 37494                           indf2	equ	0xFDF
 37495                           postinc2	equ	0xFDE
 37496                           postdec2	equ	0xFDD
 37497                           plusw2	equ	0xFDB
 37498                           fsr2h	equ	0xFDA
 37499                           fsr2l	equ	0xFD9
 37500                           status	equ	0xFD8
 37501                           
 37502 ;; *************** function _MSDReadHandler *****************
 37503 ;; Defined at:
 37504 ;;		line 1038 in file "usb_device_msd.c"
 37505 ;; Parameters:    Size  Location     Type
 37506 ;;		None
 37507 ;; Auto vars:     Size  Location     Type
 37508 ;;		None
 37509 ;; Return value:  Size  Location     Type
 37510 ;;                  1    wreg      unsigned char 
 37511 ;; Registers used:
 37512 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 37513 ;; Tracked objects:
 37514 ;;		On entry : 0/0
 37515 ;;		On exit  : 0/0
 37516 ;;		Unchanged: 0/0
 37517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37520 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37521 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37522 ;;Total ram usage:        4 bytes
 37523 ;; Hardware stack levels used:    1
 37524 ;; Hardware stack levels required when called:   16
 37525 ;; This function calls:
 37526 ;;		_ExternalFlash_SectorRead
 37527 ;;		_MSDCheckForErrorCases
 37528 ;;		_USBStallEndpoint
 37529 ;;		_USBTransferOnePacket
 37530 ;; This function is called by:
 37531 ;;		_MSDProcessCommandMediaPresent
 37532 ;; This function uses a non-reentrant model
 37533 ;;
 37534                           
 37535                           	psect	text145
 37536  00E8C0                     __ptext145:
 37537                           	opt stack 0
 37538  00E8C0                     _MSDReadHandler:
 37539                           	opt stack 10
 37540                           
 37541                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 37542                           
 37543                           ; BSR set to: 0
 37544                           ;incstack = 0
 37545  00E8C0  D0DF               	goto	l681
 37546  00E8C2                     l682:
 37547                           
 37548                           ; BSR set to: 1
 37549                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 37550  00E8C2  C211  F126         	movff	_gblCBW+17,_LBA+3
 37551                           
 37552                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 37553  00E8C6  C212  F125         	movff	_gblCBW+18,_LBA+2
 37554                           
 37555                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 37556  00E8CA  C213  F124         	movff	_gblCBW+19,_LBA+1
 37557                           
 37558                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 37559  00E8CE  C214  F123         	movff	_gblCBW+20,_LBA
 37560                           
 37561                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 37562  00E8D2  C216  F13E         	movff	_gblCBW+22,_TransferLength+1
 37563                           
 37564                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 37565  00E8D6  C217  F13D         	movff	_gblCBW+23,_TransferLength
 37566                           
 37567                           ; BSR set to: 1
 37568                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 37569  00E8DA  513D               	movf	_TransferLength& (0+255),w,b
 37570  00E8DC  0100               	movlb	0	; () banked
 37571  00E8DE  6F95               	movwf	??_MSDReadHandler& (0+255),b
 37572  00E8E0  0101               	movlb	1	; () banked
 37573  00E8E2  513E               	movf	(_TransferLength+1)& (0+255),w,b
 37574  00E8E4  0100               	movlb	0	; () banked
 37575  00E8E6  6F96               	movwf	(??_MSDReadHandler+1)& (0+255),b
 37576  00E8E8  6B97               	clrf	(??_MSDReadHandler+2)& (0+255),b
 37577  00E8EA  6B98               	clrf	(??_MSDReadHandler+3)& (0+255),b
 37578  00E8EC  0E09               	movlw	9
 37579  00E8EE                     u11185:
 37580  00E8EE  90D8               	bcf	status,0,c
 37581  00E8F0  3795               	rlcf	??_MSDReadHandler& (0+255),f,b
 37582  00E8F2  3796               	rlcf	(??_MSDReadHandler+1)& (0+255),f,b
 37583  00E8F4  3797               	rlcf	(??_MSDReadHandler+2)& (0+255),f,b
 37584  00E8F6  3798               	rlcf	(??_MSDReadHandler+3)& (0+255),f,b
 37585  00E8F8  2EE8               	decfsz	wreg,f,c
 37586  00E8FA  D7F9               	goto	u11185
 37587  00E8FC  C095  F06A         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 37588  00E900  C096  F06B         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 37589  00E904  C097  F06C         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 37590  00E908  C098  F06D         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 37591  00E90C  EC7A  F087         	call	_MSDCheckForErrorCases	;wreg free
 37592  00E910  0900               	iorlw	0
 37593  00E912  A4D8               	btfss	status,2,c
 37594  00E914  D0C7               	goto	l684
 37595                           
 37596                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 37597                           
 37598                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 37599  00E916  0E01               	movlw	1
 37600  00E918  0101               	movlb	1	; () banked
 37601  00E91A  6F56               	movwf	_MSDReadState& (0+255),b
 37602  00E91C                     
 37603                           ; BSR set to: 1
 37604                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 37605                           
 37606                           ; BSR set to: 1
 37607  00E91C  513D               	movf	_TransferLength& (0+255),w,b
 37608  00E91E  113E               	iorwf	(_TransferLength+1)& (0+255),w,b
 37609  00E920  A4D8               	btfss	status,2,c
 37610  00E922  D002               	goto	l686
 37611                           
 37612                           ; BSR set to: 1
 37613                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 37614  00E924  0E00               	movlw	0
 37615  00E926  D04A               	goto	L54
 37616  00E928                     l686:
 37617                           
 37618                           ; BSR set to: 1
 37619                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 37620                           
 37621                           ; BSR set to: 1
 37622  00E928  073D               	decf	_TransferLength& (0+255),f,b
 37623  00E92A  A0D8               	btfss	status,0,c
 37624  00E92C  073E               	decf	(_TransferLength+1)& (0+255),f,b
 37625                           
 37626                           ; BSR set to: 1
 37627                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 37628  00E92E  0E02               	movlw	2
 37629  00E930  6F56               	movwf	_MSDReadState& (0+255),b
 37630  00E932                     
 37631                           ; BSR set to: 1
 37632                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 37633                           
 37634                           ; BSR set to: 1
 37635  00E932  513F               	movf	_USBMSDInHandle& (0+255),w,b
 37636  00E934  1140               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 37637  00E936  B4D8               	btfsc	status,2,c
 37638  00E938  D006               	goto	l688
 37639                           
 37640                           ; BSR set to: 1
 37641  00E93A  C13F  FFD9         	movff	_USBMSDInHandle,fsr2l
 37642  00E93E  C140  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 37643  00E942  BEDF               	btfsc	indf2,7,c
 37644  00E944  D0AF               	goto	l684
 37645  00E946                     l688:
 37646                           
 37647                           ; BSR set to: 1
 37648                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 37649                           
 37650                           ; BSR set to: 1
 37651  00E946  C2B2  F08B         	movff	_LUN+21,ExternalFlash_SectorRead@config
 37652  00E94A  C2B3  F08C         	movff	_LUN+22,ExternalFlash_SectorRead@config+1
 37653  00E94E  C123  F08D         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 37654  00E952  C124  F08E         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 37655  00E956  C125  F08F         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 37656  00E95A  C126  F090         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 37657  00E95E  0E00               	movlw	0
 37658  00E960  0100               	movlb	0	; () banked
 37659  00E962  6F91               	movwf	ExternalFlash_SectorRead@buffer& (0+255),b
 37660  00E964  0E06               	movlw	6
 37661  00E966  6F92               	movwf	(ExternalFlash_SectorRead@buffer+1)& (0+255),b
 37662  00E968  EE22  F0A9         	lfsr	2,_LUN+12
 37663  00E96C  D801               	call	u11238
 37664  00E96E  D00A               	goto	u11239
 37665  00E970                     u11238:
 37666  00E970  0005               	push	
 37667  00E972  6EFA               	movwf	pclath,c
 37668  00E974  50DE               	movf	postinc2,w,c
 37669  00E976  6EFD               	movwf	tosl,c
 37670  00E978  50DE               	movf	postinc2,w,c
 37671  00E97A  6EFE               	movwf	tosh,c
 37672  00E97C  50DE               	movf	postinc2,w,c
 37673  00E97E  6EFF               	movwf	tosu,c
 37674  00E980  50FA               	movf	pclath,w,c
 37675  00E982  0012               	return		;indir
 37676  00E984                     u11239:
 37677  00E984  06E8               	decf	wreg,f,c
 37678  00E986  B4D8               	btfsc	status,2,c
 37679  00E988  D01B               	goto	l691
 37680                           
 37681                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 37682  00E98A  0E64               	movlw	100
 37683  00E98C  0101               	movlb	1	; () banked
 37684  00E98E  6154               	cpfslt	_MSDRetryAttempt& (0+255),b
 37685  00E990  D002               	goto	l690
 37686                           
 37687                           ; BSR set to: 1
 37688                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 37689  00E992  2B54               	incf	_MSDRetryAttempt& (0+255),f,b
 37690                           
 37691                           ;usb_device_msd.c: 1088: break;
 37692  00E994  D087               	goto	l684
 37693  00E996                     l690:
 37694                           
 37695                           ; BSR set to: 1
 37696                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 37697                           
 37698                           ; BSR set to: 1
 37699  00E996  0E02               	movlw	2
 37700  00E998  010D               	movlb	13	; () banked
 37701  00E99A  6F8C               	movwf	140,b	;volatile
 37702                           
 37703                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 37704  00E99C  0102               	movlb	2	; () banked
 37705  00E99E  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 37706  00E9A0  0BF0               	andlw	-16
 37707  00E9A2  0903               	iorlw	3
 37708  00E9A4  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 37709                           
 37710                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 37711  00E9A6  0E00               	movlw	0
 37712  00E9A8  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 37713                           
 37714                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 37715  00E9AA  0E00               	movlw	0
 37716  00E9AC  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 37717                           
 37718                           ; BSR set to: 2
 37719                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 37720  00E9AE  0E01               	movlw	1
 37721  00E9B0  0100               	movlb	0	; () banked
 37722  00E9B2  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 37723  00E9B4  0E02               	movlw	2
 37724  00E9B6  EC9A  F089         	call	_USBStallEndpoint
 37725  00E9BA  D05F               	goto	l13148
 37726  00E9BC                     L54:
 37727  00E9BC  6F56               	movwf	_MSDReadState& (0+255),b
 37728                           
 37729                           ;usb_device_msd.c: 1109: break;
 37730  00E9BE  D072               	goto	l684
 37731  00E9C0                     l691:
 37732                           
 37733                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 37734                           
 37735                           ; BSR set to: 1
 37736                           
 37737                           ; BSR set to: 1
 37738  00E9C0  0E01               	movlw	1
 37739  00E9C2  0101               	movlb	1	; () banked
 37740  00E9C4  2723               	addwf	_LBA& (0+255),f,b
 37741  00E9C6  0E00               	movlw	0
 37742  00E9C8  2324               	addwfc	(_LBA+1)& (0+255),f,b
 37743  00E9CA  2325               	addwfc	(_LBA+2)& (0+255),f,b
 37744  00E9CC  2326               	addwfc	(_LBA+3)& (0+255),f,b
 37745                           
 37746                           ; BSR set to: 1
 37747                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 37748  00E9CE  0E00               	movlw	0
 37749  00E9D0  010D               	movlb	13	; () banked
 37750  00E9D2  6F88               	movwf	136,b	;volatile
 37751  00E9D4  0E02               	movlw	2
 37752  00E9D6  6F89               	movwf	137,b	;volatile
 37753  00E9D8  0E00               	movlw	0
 37754  00E9DA  6F8A               	movwf	138,b	;volatile
 37755  00E9DC  0E00               	movlw	0
 37756  00E9DE  6F8B               	movwf	139,b	;volatile
 37757                           
 37758                           ; BSR set to: 13
 37759                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 37760  00E9E0  0E00               	movlw	0
 37761  00E9E2  0101               	movlb	1	; () banked
 37762  00E9E4  6F43               	movwf	_ptrNextData& (0+255),b
 37763  00E9E6  0E06               	movlw	6
 37764  00E9E8  6F44               	movwf	(_ptrNextData+1)& (0+255),b
 37765                           
 37766                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 37767  00E9EA  0E03               	movlw	3
 37768  00E9EC  6F56               	movwf	_MSDReadState& (0+255),b
 37769  00E9EE                     
 37770                           ; BSR set to: 1
 37771                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 37772                           
 37773                           ; BSR set to: 1
 37774  00E9EE  010D               	movlb	13	; () banked
 37775  00E9F0  5188               	movf	136,w,b	;volatile
 37776  00E9F2  1189               	iorwf	137,w,b	;volatile
 37777  00E9F4  118A               	iorwf	138,w,b	;volatile
 37778  00E9F6  118B               	iorwf	139,w,b	;volatile
 37779  00E9F8  A4D8               	btfss	status,2,c
 37780  00E9FA  D002               	goto	l693
 37781                           
 37782                           ; BSR set to: 13
 37783                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 37784  00E9FC  0E01               	movlw	1
 37785  00E9FE  D03E               	goto	L56
 37786  00EA00                     l693:
 37787                           
 37788                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 37789                           
 37790                           ; BSR set to: 1
 37791  00EA00  0E04               	movlw	4
 37792  00EA02  0101               	movlb	1	; () banked
 37793  00EA04  6F56               	movwf	_MSDReadState& (0+255),b
 37794  00EA06                     
 37795                           ; BSR set to: 1
 37796                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 37797                           
 37798                           ; BSR set to: 1
 37799  00EA06  513F               	movf	_USBMSDInHandle& (0+255),w,b
 37800  00EA08  1140               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 37801  00EA0A  B4D8               	btfsc	status,2,c
 37802  00EA0C  D006               	goto	l695
 37803                           
 37804                           ; BSR set to: 1
 37805  00EA0E  C13F  FFD9         	movff	_USBMSDInHandle,fsr2l
 37806  00EA12  C140  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 37807  00EA16  BEDF               	btfsc	indf2,7,c
 37808  00EA18  D045               	goto	l684
 37809  00EA1A                     l695:
 37810                           
 37811                           ; BSR set to: 1
 37812                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 37813                           
 37814                           ; BSR set to: 1
 37815  00EA1A  0E01               	movlw	1
 37816  00EA1C  0100               	movlb	0	; () banked
 37817  00EA1E  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 37818  00EA20  C143  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 37819  00EA24  C144  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 37820  00EA28  0E40               	movlw	64
 37821  00EA2A  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 37822  00EA2C  0E02               	movlw	2
 37823  00EA2E  EC1F  F08A         	call	_USBTransferOnePacket
 37824  00EA32  C060  F13F         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 37825  00EA36  C061  F140         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 37826                           
 37827                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 37828  00EA3A  0E03               	movlw	3
 37829  00EA3C  0101               	movlb	1	; () banked
 37830  00EA3E  6F56               	movwf	_MSDReadState& (0+255),b
 37831                           
 37832                           ; BSR set to: 1
 37833                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 37834  00EA40  0E40               	movlw	64
 37835  00EA42  0102               	movlb	2	; () banked
 37836  00EA44  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 37837  00EA46  0E00               	movlw	0
 37838  00EA48  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 37839  00EA4A  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 37840  00EA4C  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 37841                           
 37842                           ; BSR set to: 2
 37843                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 37844  00EA4E  0E40               	movlw	64
 37845  00EA50  010D               	movlb	13	; () banked
 37846  00EA52  5F88               	subwf	136,f,b	;volatile
 37847  00EA54  0E00               	movlw	0
 37848  00EA56  5B89               	subwfb	137,f,b	;volatile
 37849  00EA58  5B8A               	subwfb	138,f,b	;volatile
 37850  00EA5A  5B8B               	subwfb	139,f,b	;volatile
 37851                           
 37852                           ; BSR set to: 13
 37853                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 37854  00EA5C  0E40               	movlw	64
 37855  00EA5E  0101               	movlb	1	; () banked
 37856  00EA60  2743               	addwf	_ptrNextData& (0+255),f,b
 37857  00EA62  0E00               	movlw	0
 37858  00EA64  2344               	addwfc	(_ptrNextData+1)& (0+255),f,b
 37859                           
 37860                           ;usb_device_msd.c: 1149: break;
 37861  00EA66  D01E               	goto	l684
 37862  00EA68                     
 37863                           ; BSR set to: 1
 37864                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 37865                           
 37866                           ; BSR set to: 1
 37867  00EA68  0E02               	movlw	2
 37868  00EA6A  010D               	movlb	13	; () banked
 37869  00EA6C  6F8C               	movwf	140,b	;volatile
 37870                           
 37871                           ; BSR set to: 13
 37872                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 37873  00EA6E  0E01               	movlw	1
 37874  00EA70  0100               	movlb	0	; () banked
 37875  00EA72  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 37876  00EA74  0E02               	movlw	2
 37877  00EA76  EC9A  F089         	call	_USBStallEndpoint
 37878  00EA7A                     l13148:
 37879                           
 37880                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 37881  00EA7A  0E00               	movlw	0
 37882  00EA7C                     L56:
 37883  00EA7C  0101               	movlb	1	; () banked
 37884  00EA7E  D79E               	goto	L54
 37885  00EA80                     l681:
 37886                           
 37887                           ; BSR set to: 1
 37888  00EA80  0101               	movlb	1	; () banked
 37889  00EA82  5156               	movf	_MSDReadState& (0+255),w,b
 37890                           
 37891                           ; Switch size 1, requested type "space"
 37892                           ; Number of cases is 5, Range of values is 0 to 4
 37893                           ; switch strategies available:
 37894                           ; Name         Instructions Cycles
 37895                           ; simple_byte           16     9 (average)
 37896                           ;	Chosen strategy is simple_byte
 37897  00EA84  0A00               	xorlw	0	; case 0
 37898  00EA86  B4D8               	btfsc	status,2,c
 37899  00EA88  D71C               	goto	l682
 37900  00EA8A  0A01               	xorlw	1	; case 1
 37901  00EA8C  B4D8               	btfsc	status,2,c
 37902  00EA8E  D746               	goto	l685
 37903  00EA90  0A03               	xorlw	3	; case 2
 37904  00EA92  B4D8               	btfsc	status,2,c
 37905  00EA94  D74E               	goto	l687
 37906  00EA96  0A01               	xorlw	1	; case 3
 37907  00EA98  B4D8               	btfsc	status,2,c
 37908  00EA9A  D7A9               	goto	l692
 37909  00EA9C  0A07               	xorlw	7	; case 4
 37910  00EA9E  B4D8               	btfsc	status,2,c
 37911  00EAA0  D7B2               	goto	l694
 37912  00EAA2  D7E2               	goto	l696
 37913  00EAA4                     l684:
 37914                           
 37915                           ;usb_device_msd.c: 1161: return MSDReadState;
 37916                           
 37917                           ; BSR set to: 1
 37918  00EAA4  0101               	movlb	1	; () banked
 37919  00EAA6  5156               	movf	_MSDReadState& (0+255),w,b
 37920  00EAA8  0012               	return	
 37921  00EAAA                     __end_of_MSDReadHandler:
 37922                           	opt stack 0
 37923                           tosu	equ	0xFFF
 37924                           tosh	equ	0xFFE
 37925                           tosl	equ	0xFFD
 37926                           pclath	equ	0xFFA
 37927                           tblptru	equ	0xFF8
 37928                           tblptrh	equ	0xFF7
 37929                           tblptrl	equ	0xFF6
 37930                           tablat	equ	0xFF5
 37931                           prodh	equ	0xFF4
 37932                           prodl	equ	0xFF3
 37933                           intcon	equ	0xFF2
 37934                           postinc0	equ	0xFEE
 37935                           wreg	equ	0xFE8
 37936                           indf1	equ	0xFE7
 37937                           postinc1	equ	0xFE6
 37938                           postdec1	equ	0xFE5
 37939                           plusw1	equ	0xFE3
 37940                           fsr1h	equ	0xFE2
 37941                           fsr1l	equ	0xFE1
 37942                           indf2	equ	0xFDF
 37943                           postinc2	equ	0xFDE
 37944                           postdec2	equ	0xFDD
 37945                           plusw2	equ	0xFDB
 37946                           fsr2h	equ	0xFDA
 37947                           fsr2l	equ	0xFD9
 37948                           status	equ	0xFD8
 37949                           
 37950 ;; *************** function _MSDCheckForErrorCases *****************
 37951 ;; Defined at:
 37952 ;;		line 1434 in file "usb_device_msd.c"
 37953 ;; Parameters:    Size  Location     Type
 37954 ;;  DeviceBytes     4   10[BANK0 ] unsigned long 
 37955 ;; Auto vars:     Size  Location     Type
 37956 ;;  DeviceNoData    1   16[BANK0 ] unsigned char 
 37957 ;;  MSDErrorCase    1   15[BANK0 ] unsigned char 
 37958 ;;  HostMoreData    1   14[BANK0 ] unsigned char 
 37959 ;; Return value:  Size  Location     Type
 37960 ;;                  1    wreg      unsigned char 
 37961 ;; Registers used:
 37962 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37963 ;; Tracked objects:
 37964 ;;		On entry : 0/0
 37965 ;;		On exit  : 0/0
 37966 ;;		Unchanged: 0/0
 37967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37968 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37969 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37971 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37972 ;;Total ram usage:        7 bytes
 37973 ;; Hardware stack levels used:    1
 37974 ;; Hardware stack levels required when called:   12
 37975 ;; This function calls:
 37976 ;;		_MSDErrorHandler
 37977 ;; This function is called by:
 37978 ;;		_MSDProcessCommandMediaPresent
 37979 ;;		_MSDReadHandler
 37980 ;;		_MSDWriteHandler
 37981 ;; This function uses a non-reentrant model
 37982 ;;
 37983                           
 37984                           	psect	text146
 37985  010EF4                     __ptext146:
 37986                           	opt stack 0
 37987  010EF4                     _MSDCheckForErrorCases:
 37988                           	opt stack 13
 37989                           
 37990                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 37991                           
 37992                           ; BSR set to: 1
 37993                           ;incstack = 0
 37994  010EF4  0100               	movlb	0	; () banked
 37995  010EF6  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 37996  010EF8  116B               	iorwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 37997  010EFA  116C               	iorwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 37998  010EFC  116D               	iorwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 37999  010EFE  A4D8               	btfss	status,2,c
 38000  010F00  D002               	goto	l726
 38001                           
 38002                           ; BSR set to: 0
 38003                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 38004  010F02  0E01               	movlw	1
 38005  010F04  D001               	goto	L57
 38006  010F06                     l726:
 38007                           
 38008                           ; BSR set to: 0
 38009                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 38010                           
 38011                           ; BSR set to: 0
 38012  010F06  0E00               	movlw	0
 38013  010F08                     L57:
 38014  010F08  6F70               	movwf	MSDCheckForErrorCases@DeviceNoData& (0+255),b
 38015                           
 38016                           ; BSR set to: 0
 38017                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 38018                           
 38019                           ; BSR set to: 0
 38020  010F0A  0101               	movlb	1	; () banked
 38021  010F0C  0551               	decf	_MSDHostNoData& (0+255),w,b
 38022  010F0E  A4D8               	btfss	status,2,c
 38023  010F10  D006               	goto	l728
 38024                           
 38025                           ; BSR set to: 1
 38026  010F12  0100               	movlb	0	; () banked
 38027  010F14  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 38028  010F16  A4D8               	btfss	status,2,c
 38029  010F18  D002               	goto	l728
 38030                           
 38031                           ; BSR set to: 0
 38032                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 38033  010F1A  0E00               	movlw	0
 38034                           
 38035                           ; BSR set to: 0
 38036  010F1C  0012               	return	
 38037  010F1E                     l728:
 38038                           
 38039                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 38040                           
 38041                           ; BSR set to: 0
 38042  010F1E  0100               	movlb	0	; () banked
 38043  010F20  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 38044  010F22  0102               	movlb	2	; () banked
 38045  010F24  1908               	xorwf	(_gblCBW+8)& (0+255),w,b
 38046  010F26  E120               	bnz	l12740
 38047  010F28  0100               	movlb	0	; () banked
 38048  010F2A  516B               	movf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 38049  010F2C  0102               	movlb	2	; () banked
 38050  010F2E  1909               	xorwf	(_gblCBW+9)& (0+255),w,b
 38051  010F30  E11B               	bnz	l12740
 38052  010F32  0100               	movlb	0	; () banked
 38053  010F34  516C               	movf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 38054  010F36  0102               	movlb	2	; () banked
 38055  010F38  190A               	xorwf	(_gblCBW+10)& (0+255),w,b
 38056  010F3A  E116               	bnz	l12740
 38057  010F3C  0100               	movlb	0	; () banked
 38058  010F3E  516D               	movf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 38059  010F40  0102               	movlb	2	; () banked
 38060  010F42  190B               	xorwf	(_gblCBW+11)& (0+255),w,b
 38061  010F44  A4D8               	btfss	status,2,c
 38062  010F46  D010               	goto	l734
 38063                           
 38064                           ; BSR set to: 2
 38065                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 38066  010F48  0101               	movlb	1	; () banked
 38067  010F4A  0558               	decf	_MSD_State& (0+255),w,b
 38068  010F4C  A4D8               	btfss	status,2,c
 38069  010F4E  D006               	goto	l731
 38070                           
 38071                           ; BSR set to: 1
 38072                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 38073  010F50  0E2A               	movlw	42
 38074  010F52  1957               	xorwf	_MSDCommandState& (0+255),w,b
 38075  010F54  B4D8               	btfsc	status,2,c
 38076  010F56  D008               	goto	l734
 38077                           
 38078                           ; BSR set to: 1
 38079                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 38080  010F58  0E00               	movlw	0
 38081                           
 38082                           ; BSR set to: 1
 38083  010F5A  0012               	return	
 38084  010F5C                     l731:
 38085                           
 38086                           ; BSR set to: 1
 38087                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 38088                           
 38089                           ; BSR set to: 1
 38090  010F5C  0E2A               	movlw	42
 38091  010F5E  1957               	xorwf	_MSDCommandState& (0+255),w,b
 38092  010F60  A4D8               	btfss	status,2,c
 38093  010F62  D002               	goto	l734
 38094                           
 38095                           ; BSR set to: 1
 38096                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 38097  010F64  0E00               	movlw	0
 38098                           
 38099                           ; BSR set to: 1
 38100  010F66  0012               	return	
 38101  010F68                     l734:
 38102  010F68                     l12740:
 38103                           
 38104                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 38105  010F68  0102               	movlb	2	; () banked
 38106  010F6A  5108               	movf	(_gblCBW+8)& (0+255),w,b
 38107  010F6C  0100               	movlb	0	; () banked
 38108  010F6E  5D6A               	subwf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 38109  010F70  0102               	movlb	2	; () banked
 38110  010F72  5109               	movf	(_gblCBW+9)& (0+255),w,b
 38111  010F74  0100               	movlb	0	; () banked
 38112  010F76  596B               	subwfb	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 38113  010F78  0102               	movlb	2	; () banked
 38114  010F7A  510A               	movf	(_gblCBW+10)& (0+255),w,b
 38115  010F7C  0100               	movlb	0	; () banked
 38116  010F7E  596C               	subwfb	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 38117  010F80  0102               	movlb	2	; () banked
 38118  010F82  510B               	movf	(_gblCBW+11)& (0+255),w,b
 38119  010F84  0100               	movlb	0	; () banked
 38120  010F86  596D               	subwfb	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 38121  010F88  B0D8               	btfsc	status,0,c
 38122  010F8A  D002               	goto	l735
 38123                           
 38124                           ; BSR set to: 0
 38125                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 38126  010F8C  0E01               	movlw	1
 38127  010F8E  D001               	goto	L58
 38128  010F90                     l735:
 38129                           
 38130                           ; BSR set to: 0
 38131                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 38132                           
 38133                           ; BSR set to: 0
 38134  010F90  0E00               	movlw	0
 38135  010F92                     L58:
 38136  010F92  6F6E               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),b
 38137                           
 38138                           ; BSR set to: 0
 38139                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 38140                           
 38141                           ; BSR set to: 0
 38142  010F94  0E02               	movlw	2
 38143  010F96  0101               	movlb	1	; () banked
 38144  010F98  1958               	xorwf	_MSD_State& (0+255),w,b
 38145  010F9A  A4D8               	btfss	status,2,c
 38146  010F9C  D017               	goto	l737
 38147                           
 38148                           ; BSR set to: 1
 38149                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 38150  010F9E  0E2A               	movlw	42
 38151  010FA0  1957               	xorwf	_MSDCommandState& (0+255),w,b
 38152  010FA2  B4D8               	btfsc	status,2,c
 38153  010FA4  D006               	goto	l738
 38154                           
 38155                           ; BSR set to: 1
 38156  010FA6  0100               	movlb	0	; () banked
 38157  010FA8  5170               	movf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 38158  010FAA  A4D8               	btfss	status,2,c
 38159  010FAC  D002               	goto	l738
 38160  010FAE                     u10750:
 38161                           
 38162                           ; BSR set to: 0
 38163                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 38164  010FAE  0E05               	movlw	5
 38165  010FB0  D025               	goto	L63
 38166  010FB2                     l738:
 38167                           
 38168                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 38169                           
 38170                           ; BSR set to: 0
 38171  010FB2  0101               	movlb	1	; () banked
 38172  010FB4  0551               	decf	_MSDHostNoData& (0+255),w,b
 38173  010FB6  B4D8               	btfsc	status,2,c
 38174  010FB8  D014               	goto	u10800
 38175                           
 38176                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 38177                           
 38178                           ; BSR set to: 0
 38179                           
 38180                           ; BSR set to: 1
 38181                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 38182  010FBA  0100               	movlb	0	; () banked
 38183  010FBC  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 38184  010FBE  B4D8               	btfsc	status,2,c
 38185  010FC0  D003               	goto	u10780
 38186                           
 38187                           ; BSR set to: 0
 38188                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 38189                           
 38190                           ; BSR set to: 0
 38191                           
 38192                           ; BSR set to: 0
 38193                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 38194  010FC2  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 38195  010FC4  A4D8               	btfss	status,2,c
 38196  010FC6  D7F3               	goto	u10750
 38197  010FC8                     u10780:
 38198                           
 38199                           ; BSR set to: 0
 38200                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 38201  010FC8  0E04               	movlw	4
 38202  010FCA  D018               	goto	L63
 38203  010FCC                     l737:
 38204                           
 38205                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 38206                           
 38207                           ; BSR set to: 0
 38208  010FCC  0E2A               	movlw	42
 38209  010FCE  0101               	movlb	1	; () banked
 38210  010FD0  1957               	xorwf	_MSDCommandState& (0+255),w,b
 38211  010FD2  A4D8               	btfss	status,2,c
 38212  010FD4  D002               	goto	l747
 38213                           
 38214                           ; BSR set to: 1
 38215                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 38216  010FD6  0E03               	movlw	3
 38217  010FD8  D005               	goto	L62
 38218  010FDA                     l747:
 38219                           
 38220                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 38221                           
 38222                           ; BSR set to: 0
 38223  010FDA  0101               	movlb	1	; () banked
 38224  010FDC  0551               	decf	_MSDHostNoData& (0+255),w,b
 38225  010FDE  A4D8               	btfss	status,2,c
 38226  010FE0  D003               	goto	l749
 38227  010FE2                     u10800:
 38228                           
 38229                           ; BSR set to: 1
 38230                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 38231  010FE2  0E01               	movlw	1
 38232  010FE4                     L62:
 38233  010FE4  0100               	movlb	0	; () banked
 38234  010FE6  D00A               	goto	L63
 38235  010FE8                     l749:
 38236                           
 38237                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 38238                           
 38239                           ; BSR set to: 0
 38240  010FE8  0100               	movlb	0	; () banked
 38241  010FEA  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 38242  010FEC  B4D8               	btfsc	status,2,c
 38243  010FEE  D003               	goto	u10820
 38244                           
 38245                           ; BSR set to: 0
 38246                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 38247                           
 38248                           ; BSR set to: 0
 38249                           
 38250                           ; BSR set to: 0
 38251                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 38252  010FF0  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 38253  010FF2  A4D8               	btfss	status,2,c
 38254  010FF4  D002               	goto	l753
 38255  010FF6                     u10820:
 38256                           
 38257                           ; BSR set to: 0
 38258                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 38259  010FF6  0E02               	movlw	2
 38260  010FF8  D001               	goto	L63
 38261  010FFA                     l753:
 38262                           
 38263                           ; BSR set to: 0
 38264                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 38265                           
 38266                           ; BSR set to: 0
 38267  010FFA  0E03               	movlw	3
 38268  010FFC                     L63:
 38269  010FFC  6F6F               	movwf	MSDCheckForErrorCases@MSDErrorCase& (0+255),b
 38270                           
 38271                           ; BSR set to: 0
 38272                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 38273                           
 38274                           ; BSR set to: 0
 38275                           
 38276                           ; BSR set to: 0
 38277                           
 38278                           ; BSR set to: 0
 38279                           
 38280                           ; BSR set to: 0
 38281                           
 38282                           ; BSR set to: 0
 38283  010FFE  516F               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 38284  011000  ECED  F086         	call	_MSDErrorHandler
 38285                           
 38286                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 38287  011004  0100               	movlb	0	; () banked
 38288  011006  516F               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 38289  011008  0012               	return	
 38290  01100A                     __end_of_MSDCheckForErrorCases:
 38291                           	opt stack 0
 38292                           tosu	equ	0xFFF
 38293                           tosh	equ	0xFFE
 38294                           tosl	equ	0xFFD
 38295                           pclath	equ	0xFFA
 38296                           tblptru	equ	0xFF8
 38297                           tblptrh	equ	0xFF7
 38298                           tblptrl	equ	0xFF6
 38299                           tablat	equ	0xFF5
 38300                           prodh	equ	0xFF4
 38301                           prodl	equ	0xFF3
 38302                           intcon	equ	0xFF2
 38303                           postinc0	equ	0xFEE
 38304                           wreg	equ	0xFE8
 38305                           indf1	equ	0xFE7
 38306                           postinc1	equ	0xFE6
 38307                           postdec1	equ	0xFE5
 38308                           plusw1	equ	0xFE3
 38309                           fsr1h	equ	0xFE2
 38310                           fsr1l	equ	0xFE1
 38311                           indf2	equ	0xFDF
 38312                           postinc2	equ	0xFDE
 38313                           postdec2	equ	0xFDD
 38314                           plusw2	equ	0xFDB
 38315                           fsr2h	equ	0xFDA
 38316                           fsr2l	equ	0xFD9
 38317                           status	equ	0xFD8
 38318                           
 38319 ;; *************** function _MSDErrorHandler *****************
 38320 ;; Defined at:
 38321 ;;		line 1577 in file "usb_device_msd.c"
 38322 ;; Parameters:    Size  Location     Type
 38323 ;;  ErrorCase       1    wreg     unsigned char 
 38324 ;; Auto vars:     Size  Location     Type
 38325 ;;  ErrorCase       1    8[BANK0 ] unsigned char 
 38326 ;;  OldMSD_State    1    9[BANK0 ] unsigned char 
 38327 ;; Return value:  Size  Location     Type
 38328 ;;                  1    wreg      void 
 38329 ;; Registers used:
 38330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38331 ;; Tracked objects:
 38332 ;;		On entry : 0/0
 38333 ;;		On exit  : 0/0
 38334 ;;		Unchanged: 0/0
 38335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38337 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38339 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38340 ;;Total ram usage:        2 bytes
 38341 ;; Hardware stack levels used:    1
 38342 ;; Hardware stack levels required when called:   11
 38343 ;; This function calls:
 38344 ;;		_ResetSenseData
 38345 ;;		_USBStallEndpoint
 38346 ;; This function is called by:
 38347 ;;		_MSDProcessCommandMediaAbsent
 38348 ;;		_MSDProcessCommandMediaPresent
 38349 ;;		_MSDCheckForErrorCases
 38350 ;; This function uses a non-reentrant model
 38351 ;;
 38352                           
 38353                           	psect	text147
 38354  010DDA                     __ptext147:
 38355                           	opt stack 0
 38356  010DDA                     _MSDErrorHandler:
 38357                           	opt stack 13
 38358                           
 38359                           ;incstack = 0
 38360                           ;MSDErrorHandler@ErrorCase stored from wreg
 38361  010DDA  0100               	movlb	0	; () banked
 38362  010DDC  6F68               	movwf	MSDErrorHandler@ErrorCase& (0+255),b
 38363                           
 38364                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 38365  010DDE  0101               	movlb	1	; () banked
 38366  010DE0  513F               	movf	_USBMSDInHandle& (0+255),w,b
 38367  010DE2  1140               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 38368  010DE4  B4D8               	btfsc	status,2,c
 38369  010DE6  D006               	goto	u10400
 38370                           
 38371                           ; BSR set to: 1
 38372  010DE8  C13F  FFD9         	movff	_USBMSDInHandle,fsr2l
 38373  010DEC  C140  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 38374  010DF0  BEDF               	btfsc	indf2,7,c
 38375  010DF2  0012               	return	
 38376  010DF4                     u10400:
 38377                           
 38378                           ; BSR set to: 1
 38379                           
 38380                           ; BSR set to: 1
 38381  010DF4  5141               	movf	_USBMSDOutHandle& (0+255),w,b
 38382  010DF6  1142               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 38383  010DF8  B4D8               	btfsc	status,2,c
 38384  010DFA  D006               	goto	l757
 38385                           
 38386                           ; BSR set to: 1
 38387  010DFC  C141  FFD9         	movff	_USBMSDOutHandle,fsr2l
 38388  010E00  C142  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 38389  010E04  BEDF               	btfsc	indf2,7,c
 38390  010E06  0012               	return	
 38391  010E08                     l757:
 38392                           
 38393                           ; BSR set to: 1
 38394                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 38395  010E08  C158  F069         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 38396                           
 38397                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 38398  010E0C  6957               	setf	_MSDCommandState& (0+255),b
 38399                           
 38400                           ; BSR set to: 1
 38401                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 38402  010E0E  0E00               	movlw	0
 38403  010E10  6F56               	movwf	_MSDReadState& (0+255),b
 38404                           
 38405                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 38406  010E12  0E00               	movlw	0
 38407  010E14  6F55               	movwf	_MSDWriteState& (0+255),b
 38408                           
 38409                           ; BSR set to: 1
 38410                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 38411  010E16  C208  FD88         	movff	_gblCBW+8,3464	;volatile
 38412  010E1A  C209  FD89         	movff	_gblCBW+9,3465	;volatile
 38413  010E1E  C20A  FD8A         	movff	_gblCBW+10,3466	;volatile
 38414  010E22  C20B  FD8B         	movff	_gblCBW+11,3467	;volatile
 38415                           
 38416                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 38417  010E26  0E01               	movlw	1
 38418  010E28  010D               	movlb	13	; () banked
 38419  010E2A  6F8C               	movwf	140,b	;volatile
 38420                           
 38421                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 38422  010E2C  0E03               	movlw	3
 38423  010E2E  0101               	movlb	1	; () banked
 38424  010E30  6F58               	movwf	_MSD_State& (0+255),b
 38425                           
 38426                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 38427  010E32  D04B               	goto	l763
 38428  010E34                     
 38429                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 38430                           
 38431                           ; BSR set to: 1
 38432  010E34  0E02               	movlw	2
 38433  010E36  010D               	movlb	13	; () banked
 38434  010E38  6F8C               	movwf	140,b	;volatile
 38435                           
 38436                           ;usb_device_msd.c: 1607: break;
 38437  010E3A  0012               	return	
 38438  010E3C                     
 38439                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 38440                           
 38441                           ; BSR set to: 13
 38442  010E3C  0E01               	movlw	1
 38443  010E3E  0100               	movlb	0	; () banked
 38444  010E40  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 38445  010E42  0E02               	movlw	2
 38446  010E44  EC9A  F089         	call	_USBStallEndpoint
 38447                           
 38448                           ;usb_device_msd.c: 1611: break;
 38449  010E48  0012               	return	
 38450  010E4A                     
 38451                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 38452  010E4A  0E02               	movlw	2
 38453  010E4C  010D               	movlb	13	; () banked
 38454  010E4E  6F8C               	movwf	140,b	;volatile
 38455                           
 38456                           ; BSR set to: 13
 38457                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 38458  010E50  0E01               	movlw	1
 38459  010E52  0100               	movlb	0	; () banked
 38460  010E54  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 38461  010E56  0E02               	movlw	2
 38462  010E58  EC9A  F089         	call	_USBStallEndpoint
 38463                           
 38464                           ;usb_device_msd.c: 1616: break;
 38465  010E5C  0012               	return	
 38466  010E5E                     
 38467                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 38468  010E5E  0E00               	movlw	0
 38469  010E60  0100               	movlb	0	; () banked
 38470  010E62  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 38471  010E64  0E02               	movlw	2
 38472  010E66  EC9A  F089         	call	_USBStallEndpoint
 38473                           
 38474                           ;usb_device_msd.c: 1620: break;
 38475  010E6A  0012               	return	
 38476  010E6C                     
 38477                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 38478  010E6C  0E02               	movlw	2
 38479  010E6E  010D               	movlb	13	; () banked
 38480  010E70  6F8C               	movwf	140,b	;volatile
 38481                           
 38482                           ; BSR set to: 13
 38483                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 38484  010E72  0E00               	movlw	0
 38485  010E74  0100               	movlb	0	; () banked
 38486  010E76  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 38487  010E78  0E02               	movlw	2
 38488  010E7A  EC9A  F089         	call	_USBStallEndpoint
 38489                           
 38490                           ;usb_device_msd.c: 1625: break;
 38491  010E7E  0012               	return	
 38492  010E80                     
 38493                           ;usb_device_msd.c: 1628: ResetSenseData();
 38494  010E80  EC19  F0A5         	call	_ResetSenseData	;wreg free
 38495                           
 38496                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 38497  010E84  0102               	movlb	2	; () banked
 38498  010E86  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 38499  010E88  0BF0               	andlw	-16
 38500  010E8A  0905               	iorlw	5
 38501  010E8C  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 38502                           
 38503                           ; BSR set to: 2
 38504                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 38505  010E8E  0E20               	movlw	32
 38506  010E90  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 38507                           
 38508                           ; BSR set to: 2
 38509                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 38510  010E92  0E00               	movlw	0
 38511  010E94  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 38512                           
 38513                           ; BSR set to: 2
 38514                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 38515  010E96  0E02               	movlw	2
 38516  010E98  0100               	movlb	0	; () banked
 38517  010E9A  1969               	xorwf	MSDErrorHandler@OldMSD_State& (0+255),w,b
 38518  010E9C  A4D8               	btfss	status,2,c
 38519  010E9E  D00E               	goto	l771
 38520                           
 38521                           ; BSR set to: 0
 38522  010EA0  0102               	movlb	2	; () banked
 38523  010EA2  5108               	movf	(_gblCBW+8)& (0+255),w,b
 38524  010EA4  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 38525  010EA6  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 38526  010EA8  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 38527  010EAA  B4D8               	btfsc	status,2,c
 38528  010EAC  D007               	goto	l771
 38529                           
 38530                           ; BSR set to: 2
 38531                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 38532  010EAE  0E00               	movlw	0
 38533  010EB0  0100               	movlb	0	; () banked
 38534  010EB2  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 38535  010EB4  0E02               	movlw	2
 38536  010EB6  EC9A  F089         	call	_USBStallEndpoint
 38537                           
 38538                           ;usb_device_msd.c: 1636: }
 38539  010EBA  0012               	return	
 38540  010EBC                     l771:
 38541                           
 38542                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 38543  010EBC  0E01               	movlw	1
 38544  010EBE  0100               	movlb	0	; () banked
 38545  010EC0  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 38546  010EC2  0E02               	movlw	2
 38547  010EC4  EC9A  F089         	call	_USBStallEndpoint
 38548                           
 38549                           ;usb_device_msd.c: 1644: }
 38550                           
 38551                           ;usb_device_msd.c: 1643: break;
 38552                           
 38553                           ;usb_device_msd.c: 1642: default:
 38554                           
 38555                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 38556  010EC8  0012               	return	
 38557  010ECA                     l763:
 38558  010ECA  0100               	movlb	0	; () banked
 38559  010ECC  5168               	movf	MSDErrorHandler@ErrorCase& (0+255),w,b
 38560                           
 38561                           ; Switch size 1, requested type "space"
 38562                           ; Number of cases is 6, Range of values is 1 to 127
 38563                           ; switch strategies available:
 38564                           ; Name         Instructions Cycles
 38565                           ; simple_byte           19    10 (average)
 38566                           ;	Chosen strategy is simple_byte
 38567  010ECE  0A01               	xorlw	1	; case 1
 38568  010ED0  B4D8               	btfsc	status,2,c
 38569  010ED2  D7B0               	goto	l764
 38570  010ED4  0A03               	xorlw	3	; case 2
 38571  010ED6  B4D8               	btfsc	status,2,c
 38572  010ED8  D7B1               	goto	l766
 38573  010EDA  0A01               	xorlw	1	; case 3
 38574  010EDC  B4D8               	btfsc	status,2,c
 38575  010EDE  D7B5               	goto	l767
 38576  010EE0  0A07               	xorlw	7	; case 4
 38577  010EE2  B4D8               	btfsc	status,2,c
 38578  010EE4  D7BC               	goto	l768
 38579  010EE6  0A01               	xorlw	1	; case 5
 38580  010EE8  B4D8               	btfsc	status,2,c
 38581  010EEA  D7C0               	goto	l769
 38582  010EEC  0A7A               	xorlw	122	; case 127
 38583  010EEE  A4D8               	btfss	status,2,c
 38584  010EF0  0012               	return	
 38585  010EF2  D7C6               	goto	l770
 38586  010EF4                     __end_of_MSDErrorHandler:
 38587                           	opt stack 0
 38588                           tosu	equ	0xFFF
 38589                           tosh	equ	0xFFE
 38590                           tosl	equ	0xFFD
 38591                           pclath	equ	0xFFA
 38592                           tblptru	equ	0xFF8
 38593                           tblptrh	equ	0xFF7
 38594                           tblptrl	equ	0xFF6
 38595                           tablat	equ	0xFF5
 38596                           prodh	equ	0xFF4
 38597                           prodl	equ	0xFF3
 38598                           intcon	equ	0xFF2
 38599                           postinc0	equ	0xFEE
 38600                           wreg	equ	0xFE8
 38601                           indf1	equ	0xFE7
 38602                           postinc1	equ	0xFE6
 38603                           postdec1	equ	0xFE5
 38604                           plusw1	equ	0xFE3
 38605                           fsr1h	equ	0xFE2
 38606                           fsr1l	equ	0xFE1
 38607                           indf2	equ	0xFDF
 38608                           postinc2	equ	0xFDE
 38609                           postdec2	equ	0xFDD
 38610                           plusw2	equ	0xFDB
 38611                           fsr2h	equ	0xFDA
 38612                           fsr2l	equ	0xFD9
 38613                           status	equ	0xFD8
 38614                           
 38615 ;; *************** function _USBStallEndpoint *****************
 38616 ;; Defined at:
 38617 ;;		line 1073 in file "usb_device.c"
 38618 ;; Parameters:    Size  Location     Type
 38619 ;;  ep              1    wreg     unsigned char 
 38620 ;;  dir             1    0[BANK0 ] unsigned char 
 38621 ;; Auto vars:     Size  Location     Type
 38622 ;;  ep              1    5[BANK0 ] unsigned char 
 38623 ;;  p               2    6[BANK0 ] PTR struct __BDT
 38624 ;;		 -> BDT(48), 
 38625 ;; Return value:  Size  Location     Type
 38626 ;;                  1    wreg      void 
 38627 ;; Registers used:
 38628 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 38629 ;; Tracked objects:
 38630 ;;		On entry : 0/0
 38631 ;;		On exit  : 0/0
 38632 ;;		Unchanged: 0/0
 38633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38634 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38635 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38636 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38637 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38638 ;;Total ram usage:        8 bytes
 38639 ;; Hardware stack levels used:    1
 38640 ;; Hardware stack levels required when called:   10
 38641 ;; This function calls:
 38642 ;;		Nothing
 38643 ;; This function is called by:
 38644 ;;		_MSDTasks
 38645 ;;		_MSDReadHandler
 38646 ;;		_MSDWriteHandler
 38647 ;;		_MSDErrorHandler
 38648 ;; This function uses a non-reentrant model
 38649 ;;
 38650                           
 38651                           	psect	text148
 38652  011334                     __ptext148:
 38653                           	opt stack 0
 38654  011334                     _USBStallEndpoint:
 38655                           	opt stack 18
 38656                           
 38657                           ;incstack = 0
 38658                           ;USBStallEndpoint@ep stored from wreg
 38659  011334  0100               	movlb	0	; () banked
 38660  011336  6F65               	movwf	USBStallEndpoint@ep& (0+255),b
 38661                           
 38662                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 38663  011338  0100               	movlb	0	; () banked
 38664  01133A  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 38665  01133C  A4D8               	btfss	status,2,c
 38666  01133E  D02B               	goto	l192
 38667                           
 38668                           ; BSR set to: 0
 38669                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 38670  011340  EE20 F001          	lfsr	2,1
 38671  011344  5059               	movf	_pBDTEntryEP0OutNext,w,c
 38672  011346  26D9               	addwf	fsr2l,f,c
 38673  011348  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 38674  01134A  22DA               	addwfc	fsr2h,f,c
 38675  01134C  0E08               	movlw	8
 38676  01134E  6EDF               	movwf	indf2,c
 38677                           
 38678                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 38679  011350  EE20 F002          	lfsr	2,2
 38680  011354  5059               	movf	_pBDTEntryEP0OutNext,w,c
 38681  011356  26D9               	addwf	fsr2l,f,c
 38682  011358  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 38683  01135A  22DA               	addwfc	fsr2h,f,c
 38684  01135C  0E30               	movlw	48
 38685  01135E  6EDE               	movwf	postinc2,c
 38686  011360  0E0D               	movlw	13
 38687  011362  6EDD               	movwf	postdec2,c
 38688                           
 38689                           ; BSR set to: 0
 38690                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 38691  011364  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 38692  011368  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 38693  01136C  0E0C               	movlw	12
 38694  01136E  6EDF               	movwf	indf2,c
 38695                           
 38696                           ; BSR set to: 0
 38697                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 38698  011370  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 38699  011374  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 38700  011378  0E00               	movlw	0
 38701  01137A  8EDB               	bsf	plusw2,7,c
 38702                           
 38703                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 38704  01137C  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 38705  011380  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 38706  011384  0E04               	movlw	4
 38707  011386  6EDF               	movwf	indf2,c
 38708                           
 38709                           ; BSR set to: 0
 38710                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 38711  011388  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 38712  01138C  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 38713  011390  0E00               	movlw	0
 38714  011392  8EDB               	bsf	plusw2,7,c
 38715                           
 38716                           ;usb_device.c: 1089: }
 38717  011394  0012               	return	
 38718  011396                     l192:
 38719                           
 38720                           ; BSR set to: 0
 38721                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 38722                           
 38723                           ; BSR set to: 0
 38724  011396  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 38725  011398  6F61               	movwf	??_USBStallEndpoint& (0+255),b
 38726  01139A  6B62               	clrf	(??_USBStallEndpoint+1)& (0+255),b
 38727  01139C  90D8               	bcf	status,0,c
 38728  01139E  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 38729  0113A0  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 38730  0113A2  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 38731  0113A4  6F63               	movwf	(??_USBStallEndpoint+2)& (0+255),b
 38732  0113A6  6B64               	clrf	(??_USBStallEndpoint+3)& (0+255),b
 38733  0113A8  90D8               	bcf	status,0,c
 38734  0113AA  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 38735  0113AC  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 38736  0113AE  90D8               	bcf	status,0,c
 38737  0113B0  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 38738  0113B2  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 38739  0113B4  5161               	movf	??_USBStallEndpoint& (0+255),w,b
 38740  0113B6  2763               	addwf	(??_USBStallEndpoint+2)& (0+255),f,b
 38741  0113B8  5162               	movf	(??_USBStallEndpoint+1)& (0+255),w,b
 38742  0113BA  2364               	addwfc	(??_USBStallEndpoint+3)& (0+255),f,b
 38743  0113BC  90D8               	bcf	status,0,c
 38744  0113BE  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 38745  0113C0  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 38746  0113C2  90D8               	bcf	status,0,c
 38747  0113C4  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 38748  0113C6  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 38749  0113C8  0E00               	movlw	0
 38750  0113CA  2563               	addwf	(??_USBStallEndpoint+2)& (0+255),w,b
 38751  0113CC  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 38752  0113CE  0E0D               	movlw	13
 38753  0113D0  2164               	addwfc	(??_USBStallEndpoint+3)& (0+255),w,b
 38754  0113D2  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 38755                           
 38756                           ; BSR set to: 0
 38757                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 38758  0113D4  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 38759  0113D8  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 38760  0113DC  0E00               	movlw	0
 38761  0113DE  84DB               	bsf	plusw2,2,c
 38762                           
 38763                           ; BSR set to: 0
 38764                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 38765  0113E0  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 38766  0113E4  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 38767  0113E8  0E00               	movlw	0
 38768  0113EA  8EDB               	bsf	plusw2,7,c
 38769                           
 38770                           ; BSR set to: 0
 38771                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 38772  0113EC  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 38773  0113EE  0D04               	mullw	4
 38774  0113F0  CFF3 F061          	movff	prodl,??_USBStallEndpoint
 38775  0113F4  CFF4 F062          	movff	prodh,??_USBStallEndpoint+1
 38776  0113F8  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 38777  0113FA  0D02               	mullw	2
 38778  0113FC  50F3               	movf	prodl,w,c
 38779  0113FE  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 38780  011400  50F4               	movf	prodh,w,c
 38781  011402  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 38782  011404  90D8               	bcf	status,0,c
 38783  011406  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 38784  011408  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 38785  01140A  90D8               	bcf	status,0,c
 38786  01140C  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 38787  01140E  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 38788  011410  0E04               	movlw	4
 38789  011412  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 38790  011414  0E00               	movlw	0
 38791  011416  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 38792  011418  0E00               	movlw	0
 38793  01141A  2561               	addwf	??_USBStallEndpoint& (0+255),w,b
 38794  01141C  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 38795  01141E  0E0D               	movlw	13
 38796  011420  2162               	addwfc	(??_USBStallEndpoint+1)& (0+255),w,b
 38797  011422  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 38798                           
 38799                           ; BSR set to: 0
 38800                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 38801  011424  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 38802  011428  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 38803  01142C  0E00               	movlw	0
 38804  01142E  84DB               	bsf	plusw2,2,c
 38805                           
 38806                           ; BSR set to: 0
 38807                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 38808  011430  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 38809  011434  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 38810  011438  0E00               	movlw	0
 38811  01143A  8EDB               	bsf	plusw2,7,c
 38812  01143C  0012               	return	
 38813  01143E                     __end_of_USBStallEndpoint:
 38814                           	opt stack 0
 38815                           tosu	equ	0xFFF
 38816                           tosh	equ	0xFFE
 38817                           tosl	equ	0xFFD
 38818                           pclath	equ	0xFFA
 38819                           tblptru	equ	0xFF8
 38820                           tblptrh	equ	0xFF7
 38821                           tblptrl	equ	0xFF6
 38822                           tablat	equ	0xFF5
 38823                           prodh	equ	0xFF4
 38824                           prodl	equ	0xFF3
 38825                           intcon	equ	0xFF2
 38826                           postinc0	equ	0xFEE
 38827                           wreg	equ	0xFE8
 38828                           indf1	equ	0xFE7
 38829                           postinc1	equ	0xFE6
 38830                           postdec1	equ	0xFE5
 38831                           plusw1	equ	0xFE3
 38832                           fsr1h	equ	0xFE2
 38833                           fsr1l	equ	0xFE1
 38834                           indf2	equ	0xFDF
 38835                           postinc2	equ	0xFDE
 38836                           postdec2	equ	0xFDD
 38837                           plusw2	equ	0xFDB
 38838                           fsr2h	equ	0xFDA
 38839                           fsr2l	equ	0xFD9
 38840                           status	equ	0xFD8
 38841                           
 38842 ;; *************** function _ResetSenseData *****************
 38843 ;; Defined at:
 38844 ;;		line 1373 in file "usb_device_msd.c"
 38845 ;; Parameters:    Size  Location     Type
 38846 ;;		None
 38847 ;; Auto vars:     Size  Location     Type
 38848 ;;		None
 38849 ;; Return value:  Size  Location     Type
 38850 ;;                  1    wreg      void 
 38851 ;; Registers used:
 38852 ;;		wreg, status,2
 38853 ;; Tracked objects:
 38854 ;;		On entry : 0/0
 38855 ;;		On exit  : 0/0
 38856 ;;		Unchanged: 0/0
 38857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38862 ;;Total ram usage:        0 bytes
 38863 ;; Hardware stack levels used:    1
 38864 ;; Hardware stack levels required when called:   10
 38865 ;; This function calls:
 38866 ;;		Nothing
 38867 ;; This function is called by:
 38868 ;;		_MSDProcessCommandMediaAbsent
 38869 ;;		_MSDProcessCommandMediaPresent
 38870 ;;		_MSDErrorHandler
 38871 ;; This function uses a non-reentrant model
 38872 ;;
 38873                           
 38874                           	psect	text149
 38875  014A32                     __ptext149:
 38876                           	opt stack 0
 38877  014A32                     _ResetSenseData:
 38878                           	opt stack 16
 38879                           
 38880                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 38881                           
 38882                           ; BSR set to: 0
 38883                           ;incstack = 0
 38884  014A32  0102               	movlb	2	; () banked
 38885  014A34  911F               	bcf	_gblSenseData& (0+255),0,b
 38886  014A36  931F               	bcf	_gblSenseData& (0+255),1,b
 38887  014A38  951F               	bcf	_gblSenseData& (0+255),2,b
 38888  014A3A  971F               	bcf	_gblSenseData& (0+255),3,b
 38889  014A3C  891F               	bsf	_gblSenseData& (0+255),4,b
 38890  014A3E  8B1F               	bsf	_gblSenseData& (0+255),5,b
 38891  014A40  8D1F               	bsf	_gblSenseData& (0+255),6,b
 38892                           
 38893                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 38894  014A42  9F1F               	bcf	_gblSenseData& (0+255),7,b
 38895                           
 38896                           ; BSR set to: 2
 38897                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 38898  014A44  0E00               	movlw	0
 38899  014A46  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 38900                           
 38901                           ; BSR set to: 2
 38902                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 38903  014A48  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 38904  014A4A  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 38905  014A4C  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 38906  014A4E  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 38907                           
 38908                           ; BSR set to: 2
 38909                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 38910  014A50  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 38911                           
 38912                           ; BSR set to: 2
 38913                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 38914  014A52  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 38915                           
 38916                           ; BSR set to: 2
 38917                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 38918  014A54  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 38919                           
 38920                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 38921  014A56  0E00               	movlw	0
 38922  014A58  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 38923                           
 38924                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 38925  014A5A  0E00               	movlw	0
 38926  014A5C  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 38927                           
 38928                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 38929  014A5E  0E00               	movlw	0
 38930  014A60  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 38931                           
 38932                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 38933  014A62  0E00               	movlw	0
 38934  014A64  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 38935                           
 38936                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 38937  014A66  0E0A               	movlw	10
 38938  014A68  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 38939                           
 38940                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 38941  014A6A  0E00               	movlw	0
 38942  014A6C  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 38943  014A6E  0E00               	movlw	0
 38944  014A70  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 38945  014A72  0E00               	movlw	0
 38946  014A74  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 38947  014A76  0E00               	movlw	0
 38948  014A78  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 38949                           
 38950                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 38951  014A7A  0E00               	movlw	0
 38952  014A7C  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 38953                           
 38954                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 38955  014A7E  0E00               	movlw	0
 38956  014A80  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 38957                           
 38958                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 38959  014A82  0E00               	movlw	0
 38960  014A84  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 38961                           
 38962                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 38963  014A86  0E00               	movlw	0
 38964  014A88  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 38965                           
 38966                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 38967  014A8A  0E00               	movlw	0
 38968  014A8C  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 38969                           
 38970                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 38971  014A8E  0E00               	movlw	0
 38972  014A90  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 38973                           
 38974                           ; BSR set to: 2
 38975  014A92  0012               	return		;funcret
 38976  014A94                     __end_of_ResetSenseData:
 38977                           	opt stack 0
 38978                           tosu	equ	0xFFF
 38979                           tosh	equ	0xFFE
 38980                           tosl	equ	0xFFD
 38981                           pclath	equ	0xFFA
 38982                           tblptru	equ	0xFF8
 38983                           tblptrh	equ	0xFF7
 38984                           tblptrl	equ	0xFF6
 38985                           tablat	equ	0xFF5
 38986                           prodh	equ	0xFF4
 38987                           prodl	equ	0xFF3
 38988                           intcon	equ	0xFF2
 38989                           postinc0	equ	0xFEE
 38990                           wreg	equ	0xFE8
 38991                           indf1	equ	0xFE7
 38992                           postinc1	equ	0xFE6
 38993                           postdec1	equ	0xFE5
 38994                           plusw1	equ	0xFE3
 38995                           fsr1h	equ	0xFE2
 38996                           fsr1l	equ	0xFE1
 38997                           indf2	equ	0xFDF
 38998                           postinc2	equ	0xFDE
 38999                           postdec2	equ	0xFDD
 39000                           plusw2	equ	0xFDB
 39001                           fsr2h	equ	0xFDA
 39002                           fsr2l	equ	0xFD9
 39003                           status	equ	0xFD8
 39004                           
 39005 ;; *************** function _ExternalFlash_SectorRead *****************
 39006 ;; Defined at:
 39007 ;;		line 40 in file "external_flash.c"
 39008 ;; Parameters:    Size  Location     Type
 39009 ;;  config          2   43[BANK0 ] PTR void 
 39010 ;;		 -> NULL(0), 
 39011 ;;  sector_addr     4   45[BANK0 ] unsigned long 
 39012 ;;  buffer          2   49[BANK0 ] PTR unsigned char 
 39013 ;;		 -> msd_buffer(512), 
 39014 ;; Auto vars:     Size  Location     Type
 39015 ;;  page            2   51[BANK0 ] unsigned int 
 39016 ;; Return value:  Size  Location     Type
 39017 ;;                  1    wreg      unsigned char 
 39018 ;; Registers used:
 39019 ;;		wreg, status,2, status,0, cstack
 39020 ;; Tracked objects:
 39021 ;;		On entry : 0/0
 39022 ;;		On exit  : 0/0
 39023 ;;		Unchanged: 0/0
 39024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39025 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39026 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39028 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39029 ;;Total ram usage:       10 bytes
 39030 ;; Hardware stack levels used:    1
 39031 ;; Hardware stack levels required when called:   15
 39032 ;; This function calls:
 39033 ;;		_flash_sector_read
 39034 ;; This function is called by:
 39035 ;;		_MSDReadHandler
 39036 ;; This function uses a non-reentrant model
 39037 ;;
 39038                           
 39039                           	psect	text150
 39040  0159A4                     __ptext150:
 39041                           	opt stack 0
 39042  0159A4                     _ExternalFlash_SectorRead:
 39043                           	opt stack 10
 39044                           
 39045                           ;external_flash.c: 42: uint16_t page = (uint16_t) sector_addr;
 39046                           
 39047                           ; BSR set to: 2
 39048                           ;incstack = 0
 39049  0159A4  C08D  F093         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 39050  0159A8  C08E  F094         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 39051                           
 39052                           ;external_flash.c: 45: if(sector_addr >= 8192)
 39053  0159AC  0100               	movlb	0	; () banked
 39054  0159AE  5190               	movf	(ExternalFlash_SectorRead@sector_addr+3)& (0+255),w,b
 39055  0159B0  118F               	iorwf	(ExternalFlash_SectorRead@sector_addr+2)& (0+255),w,b
 39056  0159B2  E104               	bnz	u10850
 39057  0159B4  0E20               	movlw	32
 39058  0159B6  5D8E               	subwf	(ExternalFlash_SectorRead@sector_addr+1)& (0+255),w,b
 39059  0159B8  A0D8               	btfss	status,0,c
 39060  0159BA  D002               	goto	l1699
 39061  0159BC                     u10850:
 39062                           
 39063                           ; BSR set to: 0
 39064                           ;external_flash.c: 46: {;external_flash.c: 47: return 0;
 39065  0159BC  0E00               	movlw	0
 39066                           
 39067                           ; BSR set to: 0
 39068  0159BE  0012               	return	
 39069  0159C0                     l1699:
 39070                           
 39071                           ; BSR set to: 0
 39072                           ;external_flash.c: 48: };external_flash.c: 51: flash_sector_read(page, buffer);
 39073                           
 39074                           ; BSR set to: 0
 39075  0159C0  C093  F087         	movff	ExternalFlash_SectorRead@page,flash_sector_read@page
 39076  0159C4  C094  F088         	movff	ExternalFlash_SectorRead@page+1,flash_sector_read@page+1
 39077  0159C8  C091  F089         	movff	ExternalFlash_SectorRead@buffer,flash_sector_read@data
 39078  0159CC  C092  F08A         	movff	ExternalFlash_SectorRead@buffer+1,flash_sector_read@data+1
 39079  0159D0  EC9C  F0AE         	call	_flash_sector_read	;wreg free
 39080                           
 39081                           ;external_flash.c: 53: return 1;
 39082  0159D4  0E01               	movlw	1
 39083  0159D6  0012               	return	
 39084  0159D8                     __end_of_ExternalFlash_SectorRead:
 39085                           	opt stack 0
 39086                           tosu	equ	0xFFF
 39087                           tosh	equ	0xFFE
 39088                           tosl	equ	0xFFD
 39089                           pclath	equ	0xFFA
 39090                           tblptru	equ	0xFF8
 39091                           tblptrh	equ	0xFF7
 39092                           tblptrl	equ	0xFF6
 39093                           tablat	equ	0xFF5
 39094                           prodh	equ	0xFF4
 39095                           prodl	equ	0xFF3
 39096                           intcon	equ	0xFF2
 39097                           postinc0	equ	0xFEE
 39098                           wreg	equ	0xFE8
 39099                           indf1	equ	0xFE7
 39100                           postinc1	equ	0xFE6
 39101                           postdec1	equ	0xFE5
 39102                           plusw1	equ	0xFE3
 39103                           fsr1h	equ	0xFE2
 39104                           fsr1l	equ	0xFE1
 39105                           indf2	equ	0xFDF
 39106                           postinc2	equ	0xFDE
 39107                           postdec2	equ	0xFDD
 39108                           plusw2	equ	0xFDB
 39109                           fsr2h	equ	0xFDA
 39110                           fsr2l	equ	0xFD9
 39111                           status	equ	0xFD8
 39112                           
 39113 ;; *************** function _flash_sector_read *****************
 39114 ;; Defined at:
 39115 ;;		line 426 in file "flash.c"
 39116 ;; Parameters:    Size  Location     Type
 39117 ;;  page            2   39[BANK0 ] unsigned int 
 39118 ;;  data            2   41[BANK0 ] PTR unsigned char 
 39119 ;;		 -> buffer(512), msd_buffer(512), 
 39120 ;; Auto vars:     Size  Location     Type
 39121 ;;		None
 39122 ;; Return value:  Size  Location     Type
 39123 ;;                  1    wreg      void 
 39124 ;; Registers used:
 39125 ;;		wreg, status,2, status,0, cstack
 39126 ;; Tracked objects:
 39127 ;;		On entry : 0/0
 39128 ;;		On exit  : 0/0
 39129 ;;		Unchanged: 0/0
 39130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39131 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39134 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39135 ;;Total ram usage:        4 bytes
 39136 ;; Hardware stack levels used:    1
 39137 ;; Hardware stack levels required when called:   14
 39138 ;; This function calls:
 39139 ;;		__flash_partial_read
 39140 ;; This function is called by:
 39141 ;;		_ExternalFlash_SectorRead
 39142 ;;		__get_available_cluster
 39143 ;;		__find_nth_cluster
 39144 ;;		__make_cluster_chain
 39145 ;;		_fat_find_file
 39146 ;;		_fat_get_format_status
 39147 ;; This function uses a non-reentrant model
 39148 ;;
 39149                           
 39150                           	psect	text151
 39151  015D38                     __ptext151:
 39152                           	opt stack 0
 39153  015D38                     _flash_sector_read:
 39154                           	opt stack 13
 39155                           
 39156                           ;flash.c: 429: _flash_partial_read(page, 0, 512, data);
 39157                           
 39158                           ;incstack = 0
 39159  015D38  C087  F073         	movff	flash_sector_read@page,__flash_partial_read@page
 39160  015D3C  C088  F074         	movff	flash_sector_read@page+1,__flash_partial_read@page+1
 39161  015D40  0E00               	movlw	0
 39162  015D42  0100               	movlb	0	; () banked
 39163  015D44  6F76               	movwf	(__flash_partial_read@start+1)& (0+255),b
 39164  015D46  0E00               	movlw	0
 39165  015D48  6F75               	movwf	__flash_partial_read@start& (0+255),b
 39166  015D4A  0E02               	movlw	2
 39167  015D4C  6F78               	movwf	(__flash_partial_read@length+1)& (0+255),b
 39168  015D4E  0E00               	movlw	0
 39169  015D50  6F77               	movwf	__flash_partial_read@length& (0+255),b
 39170  015D52  C089  F079         	movff	flash_sector_read@data,__flash_partial_read@data
 39171  015D56  C08A  F07A         	movff	flash_sector_read@data+1,__flash_partial_read@data+1
 39172  015D5A  EC4E  F0A2         	call	__flash_partial_read	;wreg free
 39173  015D5E  0012               	return		;funcret
 39174  015D60                     __end_of_flash_sector_read:
 39175                           	opt stack 0
 39176                           tosu	equ	0xFFF
 39177                           tosh	equ	0xFFE
 39178                           tosl	equ	0xFFD
 39179                           pclath	equ	0xFFA
 39180                           tblptru	equ	0xFF8
 39181                           tblptrh	equ	0xFF7
 39182                           tblptrl	equ	0xFF6
 39183                           tablat	equ	0xFF5
 39184                           prodh	equ	0xFF4
 39185                           prodl	equ	0xFF3
 39186                           intcon	equ	0xFF2
 39187                           postinc0	equ	0xFEE
 39188                           wreg	equ	0xFE8
 39189                           indf1	equ	0xFE7
 39190                           postinc1	equ	0xFE6
 39191                           postdec1	equ	0xFE5
 39192                           plusw1	equ	0xFE3
 39193                           fsr1h	equ	0xFE2
 39194                           fsr1l	equ	0xFE1
 39195                           indf2	equ	0xFDF
 39196                           postinc2	equ	0xFDE
 39197                           postdec2	equ	0xFDD
 39198                           plusw2	equ	0xFDB
 39199                           fsr2h	equ	0xFDA
 39200                           fsr2l	equ	0xFD9
 39201                           status	equ	0xFD8
 39202                           
 39203 ;; *************** function __flash_partial_read *****************
 39204 ;; Defined at:
 39205 ;;		line 309 in file "flash.c"
 39206 ;; Parameters:    Size  Location     Type
 39207 ;;  page            2   19[BANK0 ] unsigned int 
 39208 ;;  start           2   21[BANK0 ] unsigned int 
 39209 ;;  length          2   23[BANK0 ] unsigned int 
 39210 ;;  data            2   25[BANK0 ] PTR unsigned char 
 39211 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 39212 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 39213 ;;		 -> _root_is_available@first_byte(1), buffer(512), msd_buffer(512), 
 39214 ;; Auto vars:     Size  Location     Type
 39215 ;;  command         4   31[BANK0 ] unsigned char [4]
 39216 ;;  address         4   35[BANK0 ] unsigned long 
 39217 ;; Return value:  Size  Location     Type
 39218 ;;                  1    wreg      void 
 39219 ;; Registers used:
 39220 ;;		wreg, status,2, status,0, cstack
 39221 ;; Tracked objects:
 39222 ;;		On entry : 0/0
 39223 ;;		On exit  : 0/0
 39224 ;;		Unchanged: 0/0
 39225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39226 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39227 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39228 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39229 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39230 ;;Total ram usage:       20 bytes
 39231 ;; Hardware stack levels used:    1
 39232 ;; Hardware stack levels required when called:   13
 39233 ;; This function calls:
 39234 ;;		__flash_is_busy
 39235 ;;		_spi_tx_rx
 39236 ;; This function is called by:
 39237 ;;		_flash_sector_read
 39238 ;;		_flash_partial_read
 39239 ;; This function uses a non-reentrant model
 39240 ;;
 39241                           
 39242                           	psect	text152
 39243  01449C                     __ptext152:
 39244                           	opt stack 0
 39245  01449C                     __flash_partial_read:
 39246                           	opt stack 13
 39247                           
 39248                           ;flash.c: 311: uint32_t address;;flash.c: 312: uint8_t command[4];;flash.c: 315: while(_
      +                          flash_is_busy());
 39249                           
 39250                           ;incstack = 0
 39251  01449C  ECFA  F0AE         	call	__flash_is_busy	;wreg free
 39252  0144A0  0900               	iorlw	0
 39253  0144A2  A4D8               	btfss	status,2,c
 39254  0144A4  D7FB               	goto	__flash_partial_read
 39255                           
 39256                           ;flash.c: 318: address = page;
 39257  0144A6  C073  F083         	movff	__flash_partial_read@page,__flash_partial_read@address
 39258  0144AA  C074  F084         	movff	__flash_partial_read@page+1,__flash_partial_read@address+1
 39259  0144AE  0100               	movlb	0	; () banked
 39260  0144B0  6B85               	clrf	(__flash_partial_read@address+2)& (0+255),b
 39261  0144B2  6B86               	clrf	(__flash_partial_read@address+3)& (0+255),b
 39262                           
 39263                           ; BSR set to: 0
 39264                           ;flash.c: 319: address <<= 9;
 39265  0144B4  0E09               	movlw	9
 39266  0144B6                     u10275:
 39267  0144B6  90D8               	bcf	status,0,c
 39268  0144B8  3783               	rlcf	__flash_partial_read@address& (0+255),f,b
 39269  0144BA  3784               	rlcf	(__flash_partial_read@address+1)& (0+255),f,b
 39270  0144BC  3785               	rlcf	(__flash_partial_read@address+2)& (0+255),f,b
 39271  0144BE  3786               	rlcf	(__flash_partial_read@address+3)& (0+255),f,b
 39272  0144C0  2EE8               	decfsz	wreg,f,c
 39273  0144C2  D7F9               	goto	u10275
 39274                           
 39275                           ; BSR set to: 0
 39276                           ;flash.c: 320: address |= start;
 39277  0144C4  5175               	movf	__flash_partial_read@start& (0+255),w,b
 39278  0144C6  6F7B               	movwf	??__flash_partial_read& (0+255),b
 39279  0144C8  5176               	movf	(__flash_partial_read@start+1)& (0+255),w,b
 39280  0144CA  6F7C               	movwf	(??__flash_partial_read+1)& (0+255),b
 39281  0144CC  6B7D               	clrf	(??__flash_partial_read+2)& (0+255),b
 39282  0144CE  6B7E               	clrf	(??__flash_partial_read+3)& (0+255),b
 39283  0144D0  517B               	movf	??__flash_partial_read& (0+255),w,b
 39284  0144D2  1383               	iorwf	__flash_partial_read@address& (0+255),f,b
 39285  0144D4  517C               	movf	(??__flash_partial_read+1)& (0+255),w,b
 39286  0144D6  1384               	iorwf	(__flash_partial_read@address+1)& (0+255),f,b
 39287  0144D8  517D               	movf	(??__flash_partial_read+2)& (0+255),w,b
 39288  0144DA  1385               	iorwf	(__flash_partial_read@address+2)& (0+255),f,b
 39289  0144DC  517E               	movf	(??__flash_partial_read+3)& (0+255),w,b
 39290  0144DE  1386               	iorwf	(__flash_partial_read@address+3)& (0+255),f,b
 39291                           
 39292                           ; BSR set to: 0
 39293                           ;flash.c: 323: command[0] = 0x03;
 39294  0144E0  0E03               	movlw	3
 39295  0144E2  6F7F               	movwf	__flash_partial_read@command& (0+255),b
 39296                           
 39297                           ; BSR set to: 0
 39298                           ;flash.c: 324: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 39299  0144E4  C085  F080         	movff	__flash_partial_read@address+2,__flash_partial_read@command+1
 39300                           
 39301                           ; BSR set to: 0
 39302                           ;flash.c: 325: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 39303  0144E8  5184               	movf	(__flash_partial_read@address+1)& (0+255),w,b
 39304  0144EA  6F81               	movwf	(__flash_partial_read@command+2)& (0+255),b
 39305                           
 39306                           ; BSR set to: 0
 39307                           ;flash.c: 326: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 39308  0144EC  C083  F082         	movff	__flash_partial_read@address,__flash_partial_read@command+3
 39309                           
 39310                           ; BSR set to: 0
 39311                           ;flash.c: 329: spi_tx_rx(command, 4, data, length);
 39312  0144F0  0E7F               	movlw	low __flash_partial_read@command
 39313  0144F2  6F60               	movwf	spi_tx_rx@command& (0+255),b
 39314  0144F4  0E00               	movlw	high __flash_partial_read@command
 39315  0144F6  6F61               	movwf	(spi_tx_rx@command+1)& (0+255),b
 39316  0144F8  0E00               	movlw	0
 39317  0144FA  6F63               	movwf	(spi_tx_rx@command_length+1)& (0+255),b
 39318  0144FC  0E04               	movlw	4
 39319  0144FE  6F62               	movwf	spi_tx_rx@command_length& (0+255),b
 39320  014500  C079  F064         	movff	__flash_partial_read@data,spi_tx_rx@data
 39321  014504  C07A  F065         	movff	__flash_partial_read@data+1,spi_tx_rx@data+1
 39322  014508  C077  F066         	movff	__flash_partial_read@length,spi_tx_rx@data_length
 39323  01450C  C078  F067         	movff	__flash_partial_read@length+1,spi_tx_rx@data_length+1
 39324  014510  ECEB  F09C         	call	_spi_tx_rx	;wreg free
 39325  014514  0012               	return		;funcret
 39326  014516                     __end_of__flash_partial_read:
 39327                           	opt stack 0
 39328                           tosu	equ	0xFFF
 39329                           tosh	equ	0xFFE
 39330                           tosl	equ	0xFFD
 39331                           pclath	equ	0xFFA
 39332                           tblptru	equ	0xFF8
 39333                           tblptrh	equ	0xFF7
 39334                           tblptrl	equ	0xFF6
 39335                           tablat	equ	0xFF5
 39336                           prodh	equ	0xFF4
 39337                           prodl	equ	0xFF3
 39338                           intcon	equ	0xFF2
 39339                           postinc0	equ	0xFEE
 39340                           wreg	equ	0xFE8
 39341                           indf1	equ	0xFE7
 39342                           postinc1	equ	0xFE6
 39343                           postdec1	equ	0xFE5
 39344                           plusw1	equ	0xFE3
 39345                           fsr1h	equ	0xFE2
 39346                           fsr1l	equ	0xFE1
 39347                           indf2	equ	0xFDF
 39348                           postinc2	equ	0xFDE
 39349                           postdec2	equ	0xFDD
 39350                           plusw2	equ	0xFDB
 39351                           fsr2h	equ	0xFDA
 39352                           fsr2l	equ	0xFD9
 39353                           status	equ	0xFD8
 39354                           
 39355 ;; *************** function __flash_is_busy *****************
 39356 ;; Defined at:
 39357 ;;		line 281 in file "flash.c"
 39358 ;; Parameters:    Size  Location     Type
 39359 ;;		None
 39360 ;; Auto vars:     Size  Location     Type
 39361 ;;  status          2   17[BANK0 ] unsigned int 
 39362 ;; Return value:  Size  Location     Type
 39363 ;;                  1    wreg      unsigned char 
 39364 ;; Registers used:
 39365 ;;		wreg, status,2, status,0, cstack
 39366 ;; Tracked objects:
 39367 ;;		On entry : 0/0
 39368 ;;		On exit  : 0/0
 39369 ;;		Unchanged: 0/0
 39370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39372 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39374 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39375 ;;Total ram usage:        2 bytes
 39376 ;; Hardware stack levels used:    1
 39377 ;; Hardware stack levels required when called:   12
 39378 ;; This function calls:
 39379 ;;		__flash_get_status
 39380 ;;		__flash_wakeup
 39381 ;; This function is called by:
 39382 ;;		__flash_set_page_size
 39383 ;;		__flash_copy_page_to_buffer
 39384 ;;		__flash_compare_page_to_buffer
 39385 ;;		__flash_write_to_buffer
 39386 ;;		__flash_write_page_from_buffer
 39387 ;;		__flash_partial_read
 39388 ;;		_flash_partial_write
 39389 ;;		__flash_erase_page
 39390 ;;		__flash_buffer_read
 39391 ;;		_flash_is_busy
 39392 ;;		_flash_set_power_state
 39393 ;; This function uses a non-reentrant model
 39394 ;;
 39395                           
 39396                           	psect	text153
 39397  015DF4                     __ptext153:
 39398                           	opt stack 0
 39399  015DF4                     __flash_is_busy:
 39400                           	opt stack 15
 39401                           
 39402                           ;flash.c: 283: uint16_t status;;flash.c: 286: if(power_state!=FLASH_POWER_STATE_NORMAL)
 39403                           
 39404                           ;incstack = 0
 39405  015DF4  0101               	movlb	1	; () banked
 39406  015DF6  514F               	movf	_power_state& (0+255),w,b
 39407  015DF8  A4D8               	btfss	status,2,c
 39408                           
 39409                           ; BSR set to: 1
 39410                           ;flash.c: 287: {;flash.c: 288: _flash_wakeup();
 39411  015DFA  EC72  F0A7         	call	__flash_wakeup	;wreg free
 39412                           
 39413                           ;flash.c: 289: };flash.c: 292: status = _flash_get_status();
 39414  015DFE  ECEC  F0AC         	call	__flash_get_status	;wreg free
 39415  015E02  C06C  F071         	movff	?__flash_get_status,__flash_is_busy@status
 39416  015E06  C06D  F072         	movff	?__flash_get_status+1,__flash_is_busy@status+1
 39417                           
 39418                           ;flash.c: 295: if(status & 0b0000000010000000)
 39419  015E0A  0100               	movlb	0	; () banked
 39420  015E0C  AF71               	btfss	__flash_is_busy@status& (0+255),7,b
 39421  015E0E  D002               	goto	l1603
 39422                           
 39423                           ; BSR set to: 0
 39424                           ;flash.c: 296: {;flash.c: 298: return 0;
 39425  015E10  0E00               	movlw	0
 39426                           
 39427                           ; BSR set to: 0
 39428                           ;flash.c: 299: }
 39429                           
 39430                           ; BSR set to: 0
 39431  015E12  0012               	return	
 39432  015E14                     l1603:
 39433                           
 39434                           ; BSR set to: 0
 39435                           ;flash.c: 300: else;flash.c: 301: {;flash.c: 303: return 1;
 39436                           
 39437                           ; BSR set to: 0
 39438  015E14  0E01               	movlw	1
 39439                           
 39440                           ; BSR set to: 0
 39441  015E16  0012               	return	
 39442  015E18                     __end_of__flash_is_busy:
 39443                           	opt stack 0
 39444                           tosu	equ	0xFFF
 39445                           tosh	equ	0xFFE
 39446                           tosl	equ	0xFFD
 39447                           pclath	equ	0xFFA
 39448                           tblptru	equ	0xFF8
 39449                           tblptrh	equ	0xFF7
 39450                           tblptrl	equ	0xFF6
 39451                           tablat	equ	0xFF5
 39452                           prodh	equ	0xFF4
 39453                           prodl	equ	0xFF3
 39454                           intcon	equ	0xFF2
 39455                           postinc0	equ	0xFEE
 39456                           wreg	equ	0xFE8
 39457                           indf1	equ	0xFE7
 39458                           postinc1	equ	0xFE6
 39459                           postdec1	equ	0xFE5
 39460                           plusw1	equ	0xFE3
 39461                           fsr1h	equ	0xFE2
 39462                           fsr1l	equ	0xFE1
 39463                           indf2	equ	0xFDF
 39464                           postinc2	equ	0xFDE
 39465                           postdec2	equ	0xFDD
 39466                           plusw2	equ	0xFDB
 39467                           fsr2h	equ	0xFDA
 39468                           fsr2l	equ	0xFD9
 39469                           status	equ	0xFD8
 39470                           
 39471 ;; *************** function __flash_wakeup *****************
 39472 ;; Defined at:
 39473 ;;		line 128 in file "flash.c"
 39474 ;; Parameters:    Size  Location     Type
 39475 ;;		None
 39476 ;; Auto vars:     Size  Location     Type
 39477 ;;  command         1    8[BANK0 ] unsigned char 
 39478 ;; Return value:  Size  Location     Type
 39479 ;;                  1    wreg      void 
 39480 ;; Registers used:
 39481 ;;		wreg, status,2, status,0, cstack
 39482 ;; Tracked objects:
 39483 ;;		On entry : 0/0
 39484 ;;		On exit  : 0/0
 39485 ;;		Unchanged: 0/0
 39486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39488 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39490 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39491 ;;Total ram usage:        1 bytes
 39492 ;; Hardware stack levels used:    1
 39493 ;; Hardware stack levels required when called:   11
 39494 ;; This function calls:
 39495 ;;		_spi_tx
 39496 ;; This function is called by:
 39497 ;;		__flash_is_busy
 39498 ;;		_flash_set_power_state
 39499 ;; This function uses a non-reentrant model
 39500 ;;
 39501                           
 39502                           	psect	text154
 39503  014EE4                     __ptext154:
 39504                           	opt stack 0
 39505  014EE4                     __flash_wakeup:
 39506                           	opt stack 15
 39507                           
 39508                           ;flash.c: 130: uint8_t command;;flash.c: 132: switch(power_state)
 39509                           
 39510                           ; BSR set to: 0
 39511                           ;incstack = 0
 39512  014EE4  D022               	goto	l1552
 39513  014EE6                     
 39514                           ;flash.c: 135: command = 0xAB;
 39515  014EE6  0EAB               	movlw	171
 39516  014EE8  0100               	movlb	0	; () banked
 39517  014EEA  6F68               	movwf	__flash_wakeup@command& (0+255),b
 39518                           
 39519                           ; BSR set to: 0
 39520                           ;flash.c: 136: spi_tx(&command, 1);
 39521  014EEC  0E68               	movlw	low __flash_wakeup@command
 39522  014EEE  6F60               	movwf	spi_tx@data& (0+255),b
 39523  014EF0  0E00               	movlw	high __flash_wakeup@command
 39524  014EF2  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 39525  014EF4  0E00               	movlw	0
 39526  014EF6  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 39527  014EF8  0E01               	movlw	1
 39528  014EFA  6F62               	movwf	spi_tx@length& (0+255),b
 39529  014EFC  ECED  F0A6         	call	_spi_tx	;wreg free
 39530                           
 39531                           ;flash.c: 137: _delay((unsigned long)((35)*(8000000/4000000.0)));
 39532  014F00  0E17               	movlw	23
 39533  014F02                     u20067:
 39534  014F02  2EE8               	decfsz	wreg,f,c
 39535  014F04  D7FE               	bra	u20067
 39536  014F06  F000               	nop	
 39537                           
 39538                           ;flash.c: 138: power_state = FLASH_POWER_STATE_NORMAL;
 39539  014F08  0E00               	movlw	0
 39540  014F0A  0101               	movlb	1	; () banked
 39541  014F0C  6F4F               	movwf	_power_state& (0+255),b
 39542                           
 39543                           ;flash.c: 139: break;
 39544  014F0E  0012               	return	
 39545  014F10                     l1555:
 39546                           
 39547                           ; BSR set to: 1
 39548                           ;flash.c: 144: LATDbits.LD7 = 0;
 39549  014F10  9E8C               	bcf	3980,7,c	;volatile
 39550                           
 39551                           ; BSR set to: 1
 39552                           ;flash.c: 145: _delay((unsigned long)((20)*(8000000/4000000.0)));
 39553  014F12  0E0D               	movlw	13
 39554  014F14                     u20077:
 39555  014F14  2EE8               	decfsz	wreg,f,c
 39556  014F16  D7FE               	bra	u20077
 39557  014F18  F000               	nop	
 39558                           
 39559                           ;flash.c: 146: LATDbits.LD7 = 1;
 39560  014F1A  8E8C               	bsf	3980,7,c	;volatile
 39561                           
 39562                           ;flash.c: 147: _delay((unsigned long)((120)*(8000000/4000000.0)));
 39563  014F1C  0E50               	movlw	80
 39564  014F1E                     u20087:
 39565  014F1E  2EE8               	decfsz	wreg,f,c
 39566  014F20  D7FE               	bra	u20087
 39567                           
 39568                           ;flash.c: 148: power_state = FLASH_POWER_STATE_NORMAL;
 39569  014F22  0E00               	movlw	0
 39570  014F24  0101               	movlb	1	; () banked
 39571  014F26  6F4F               	movwf	_power_state& (0+255),b
 39572                           
 39573                           ; BSR set to: 1
 39574                           ;flash.c: 150: }
 39575                           
 39576                           ;flash.c: 149: break;
 39577  014F28  0012               	return	
 39578  014F2A                     l1552:
 39579                           
 39580                           ; BSR set to: 1
 39581  014F2A  0101               	movlb	1	; () banked
 39582  014F2C  514F               	movf	_power_state& (0+255),w,b
 39583                           
 39584                           ; Switch size 1, requested type "space"
 39585                           ; Number of cases is 2, Range of values is 1 to 2
 39586                           ; switch strategies available:
 39587                           ; Name         Instructions Cycles
 39588                           ; simple_byte            7     4 (average)
 39589                           ;	Chosen strategy is simple_byte
 39590  014F2E  0A01               	xorlw	1	; case 1
 39591  014F30  B4D8               	btfsc	status,2,c
 39592  014F32  D7D9               	goto	l1553
 39593  014F34  0A03               	xorlw	3	; case 2
 39594  014F36  A4D8               	btfss	status,2,c
 39595  014F38  0012               	return	
 39596  014F3A  D7EA               	goto	l1555
 39597  014F3C                     __end_of__flash_wakeup:
 39598                           	opt stack 0
 39599                           tosu	equ	0xFFF
 39600                           tosh	equ	0xFFE
 39601                           tosl	equ	0xFFD
 39602                           pclath	equ	0xFFA
 39603                           tblptru	equ	0xFF8
 39604                           tblptrh	equ	0xFF7
 39605                           tblptrl	equ	0xFF6
 39606                           tablat	equ	0xFF5
 39607                           prodh	equ	0xFF4
 39608                           prodl	equ	0xFF3
 39609                           intcon	equ	0xFF2
 39610                           postinc0	equ	0xFEE
 39611                           wreg	equ	0xFE8
 39612                           indf1	equ	0xFE7
 39613                           postinc1	equ	0xFE6
 39614                           postdec1	equ	0xFE5
 39615                           plusw1	equ	0xFE3
 39616                           fsr1h	equ	0xFE2
 39617                           fsr1l	equ	0xFE1
 39618                           indf2	equ	0xFDF
 39619                           postinc2	equ	0xFDE
 39620                           postdec2	equ	0xFDD
 39621                           plusw2	equ	0xFDB
 39622                           fsr2h	equ	0xFDA
 39623                           fsr2l	equ	0xFD9
 39624                           status	equ	0xFD8
 39625                           
 39626 ;; *************** function _spi_tx *****************
 39627 ;; Defined at:
 39628 ;;		line 108 in file "spi.c"
 39629 ;; Parameters:    Size  Location     Type
 39630 ;;  data            2    0[BANK0 ] PTR unsigned char 
 39631 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 39632 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 39633 ;;  length          2    2[BANK0 ] unsigned int 
 39634 ;; Auto vars:     Size  Location     Type
 39635 ;;		None
 39636 ;; Return value:  Size  Location     Type
 39637 ;;                  1    wreg      void 
 39638 ;; Registers used:
 39639 ;;		wreg, status,2, status,0
 39640 ;; Tracked objects:
 39641 ;;		On entry : 0/0
 39642 ;;		On exit  : 0/0
 39643 ;;		Unchanged: 0/0
 39644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39645 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39647 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39648 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39649 ;;Total ram usage:        8 bytes
 39650 ;; Hardware stack levels used:    1
 39651 ;; Hardware stack levels required when called:   10
 39652 ;; This function calls:
 39653 ;;		Nothing
 39654 ;; This function is called by:
 39655 ;;		__flash_set_page_size
 39656 ;;		__flash_wakeup
 39657 ;;		__flash_copy_page_to_buffer
 39658 ;;		__flash_compare_page_to_buffer
 39659 ;;		__flash_write_page_from_buffer
 39660 ;;		__flash_erase_page
 39661 ;;		_flash_set_power_state
 39662 ;; This function uses a non-reentrant model
 39663 ;;
 39664                           
 39665                           	psect	text155
 39666  014DDA                     __ptext155:
 39667                           	opt stack 0
 39668  014DDA                     _spi_tx:
 39669                           	opt stack 17
 39670                           
 39671                           ;spi.c: 111: DMACON1bits.SSCON1 = 0;
 39672                           
 39673                           ; BSR set to: 1
 39674                           ;incstack = 0
 39675  014DDA  9E88               	bcf	3976,7,c	;volatile
 39676                           
 39677                           ;spi.c: 112: DMACON1bits.SSCON0 = 0;
 39678  014DDC  9C88               	bcf	3976,6,c	;volatile
 39679                           
 39680                           ;spi.c: 114: DMACON1bits.TXINC = 1;
 39681  014DDE  8A88               	bsf	3976,5,c	;volatile
 39682                           
 39683                           ;spi.c: 116: DMACON1bits.RXINC = 0;
 39684  014DE0  9888               	bcf	3976,4,c	;volatile
 39685                           
 39686                           ;spi.c: 118: DMACON1bits.DUPLEX1 = 0;
 39687  014DE2  9688               	bcf	3976,3,c	;volatile
 39688                           
 39689                           ;spi.c: 119: DMACON1bits.DUPLEX0 = 1;
 39690  014DE4  8488               	bsf	3976,2,c	;volatile
 39691                           
 39692                           ;spi.c: 121: DMACON1bits.DLYINTEN = 0;
 39693  014DE6  9288               	bcf	3976,1,c	;volatile
 39694                           
 39695                           ;spi.c: 123: DMACON2bits.DLYCYC = 0b0000;
 39696  014DE8  9886               	bcf	3974,4,c	;volatile
 39697  014DEA  9A86               	bcf	3974,5,c	;volatile
 39698  014DEC  9C86               	bcf	3974,6,c	;volatile
 39699  014DEE  9E86               	bcf	3974,7,c	;volatile
 39700                           
 39701                           ;spi.c: 125: DMACON2bits.INTLVL = 0b0000;
 39702  014DF0  9086               	bcf	3974,0,c	;volatile
 39703  014DF2  9286               	bcf	3974,1,c	;volatile
 39704  014DF4  9486               	bcf	3974,2,c	;volatile
 39705  014DF6  9686               	bcf	3974,3,c	;volatile
 39706                           
 39707                           ;spi.c: 128: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 39708  014DF8  0100               	movlb	0	; () banked
 39709  014DFA  5161               	movf	(spi_tx@data+1)& (0+255),w,b
 39710  014DFC  6E6A               	movwf	3946,c	;volatile
 39711                           
 39712                           ; BSR set to: 0
 39713                           ;spi.c: 129: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 39714  014DFE  C060  FF6B         	movff	spi_tx@data,3947	;volatile
 39715                           
 39716                           ; BSR set to: 0
 39717                           ;spi.c: 132: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 39718  014E02  0EFF               	movlw	255
 39719  014E04  6F64               	movwf	??_spi_tx& (0+255),b
 39720  014E06  0EFF               	movlw	255
 39721  014E08  6F65               	movwf	(??_spi_tx+1)& (0+255),b
 39722  014E0A  C062  F066         	movff	spi_tx@length,??_spi_tx+2
 39723  014E0E  C063  F067         	movff	spi_tx@length+1,??_spi_tx+3
 39724  014E12  5164               	movf	??_spi_tx& (0+255),w,b
 39725  014E14  2766               	addwf	(??_spi_tx+2)& (0+255),f,b
 39726  014E16  5165               	movf	(??_spi_tx+1)& (0+255),w,b
 39727  014E18  2367               	addwfc	(??_spi_tx+3)& (0+255),f,b
 39728  014E1A  C067  F066         	movff	??_spi_tx+3,??_spi_tx+2
 39729  014E1E  6B67               	clrf	(??_spi_tx+3)& (0+255),b
 39730  014E20  5166               	movf	(??_spi_tx+2)& (0+255),w,b
 39731  014E22  6E66               	movwf	3942,c	;volatile
 39732                           
 39733                           ; BSR set to: 0
 39734                           ;spi.c: 133: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 39735  014E24  0562               	decf	spi_tx@length& (0+255),w,b
 39736  014E26  6E67               	movwf	3943,c	;volatile
 39737                           
 39738                           ; BSR set to: 0
 39739                           ;spi.c: 136: LATDbits.LD7 = 0;
 39740  014E28  9E8C               	bcf	3980,7,c	;volatile
 39741                           
 39742                           ; BSR set to: 0
 39743                           ;spi.c: 137: DMACON1bits.DMAEN = 1;
 39744  014E2A  8088               	bsf	3976,0,c	;volatile
 39745  014E2C                     
 39746                           ; BSR set to: 0
 39747  014E2C  B088               	btfsc	3976,0,c	;volatile
 39748  014E2E  D7FE               	goto	l2199
 39749                           
 39750                           ;spi.c: 139: LATDbits.LD7 = 1;
 39751  014E30  8E8C               	bsf	3980,7,c	;volatile
 39752  014E32  0012               	return		;funcret
 39753  014E34                     __end_of_spi_tx:
 39754                           	opt stack 0
 39755                           tosu	equ	0xFFF
 39756                           tosh	equ	0xFFE
 39757                           tosl	equ	0xFFD
 39758                           pclath	equ	0xFFA
 39759                           tblptru	equ	0xFF8
 39760                           tblptrh	equ	0xFF7
 39761                           tblptrl	equ	0xFF6
 39762                           tablat	equ	0xFF5
 39763                           prodh	equ	0xFF4
 39764                           prodl	equ	0xFF3
 39765                           intcon	equ	0xFF2
 39766                           postinc0	equ	0xFEE
 39767                           wreg	equ	0xFE8
 39768                           indf1	equ	0xFE7
 39769                           postinc1	equ	0xFE6
 39770                           postdec1	equ	0xFE5
 39771                           plusw1	equ	0xFE3
 39772                           fsr1h	equ	0xFE2
 39773                           fsr1l	equ	0xFE1
 39774                           indf2	equ	0xFDF
 39775                           postinc2	equ	0xFDE
 39776                           postdec2	equ	0xFDD
 39777                           plusw2	equ	0xFDB
 39778                           fsr2h	equ	0xFDA
 39779                           fsr2l	equ	0xFD9
 39780                           status	equ	0xFD8
 39781                           
 39782 ;; *************** function __flash_get_status *****************
 39783 ;; Defined at:
 39784 ;;		line 117 in file "flash.c"
 39785 ;; Parameters:    Size  Location     Type
 39786 ;;		None
 39787 ;; Auto vars:     Size  Location     Type
 39788 ;;  status          2   15[BANK0 ] unsigned int 
 39789 ;;  command         1   14[BANK0 ] unsigned char 
 39790 ;; Return value:  Size  Location     Type
 39791 ;;                  2   12[BANK0 ] unsigned int 
 39792 ;; Registers used:
 39793 ;;		wreg, status,2, status,0, cstack
 39794 ;; Tracked objects:
 39795 ;;		On entry : 0/0
 39796 ;;		On exit  : 0/0
 39797 ;;		Unchanged: 0/0
 39798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39799 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39800 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39802 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39803 ;;Total ram usage:        5 bytes
 39804 ;; Hardware stack levels used:    1
 39805 ;; Hardware stack levels required when called:   11
 39806 ;; This function calls:
 39807 ;;		_spi_tx_rx
 39808 ;; This function is called by:
 39809 ;;		__flash_compare_page_to_buffer
 39810 ;;		__flash_is_busy
 39811 ;; This function uses a non-reentrant model
 39812 ;;
 39813                           
 39814                           	psect	text156
 39815  0159D8                     __ptext156:
 39816                           	opt stack 0
 39817  0159D8                     __flash_get_status:
 39818                           	opt stack 15
 39819                           
 39820                           ;flash.c: 121: uint8_t command = 0xD7;
 39821                           
 39822                           ;incstack = 0
 39823  0159D8  0ED7               	movlw	215
 39824  0159DA  0100               	movlb	0	; () banked
 39825  0159DC  6F6E               	movwf	__flash_get_status@command& (0+255),b
 39826                           
 39827                           ; BSR set to: 0
 39828                           ;flash.c: 122: uint16_t status;;flash.c: 123: spi_tx_rx(&command, 1, (uint8_t*) &status,
      +                           2);
 39829  0159DE  0E6E               	movlw	low __flash_get_status@command
 39830  0159E0  6F60               	movwf	spi_tx_rx@command& (0+255),b
 39831  0159E2  0E00               	movlw	high __flash_get_status@command
 39832  0159E4  6F61               	movwf	(spi_tx_rx@command+1)& (0+255),b
 39833  0159E6  0E00               	movlw	0
 39834  0159E8  6F63               	movwf	(spi_tx_rx@command_length+1)& (0+255),b
 39835  0159EA  0E01               	movlw	1
 39836  0159EC  6F62               	movwf	spi_tx_rx@command_length& (0+255),b
 39837  0159EE  0E6F               	movlw	low __flash_get_status@status
 39838  0159F0  6F64               	movwf	spi_tx_rx@data& (0+255),b
 39839  0159F2  0E00               	movlw	high __flash_get_status@status
 39840  0159F4  6F65               	movwf	(spi_tx_rx@data+1)& (0+255),b
 39841  0159F6  0E00               	movlw	0
 39842  0159F8  6F67               	movwf	(spi_tx_rx@data_length+1)& (0+255),b
 39843  0159FA  0E02               	movlw	2
 39844  0159FC  6F66               	movwf	spi_tx_rx@data_length& (0+255),b
 39845  0159FE  ECEB  F09C         	call	_spi_tx_rx	;wreg free
 39846                           
 39847                           ;flash.c: 124: return status;
 39848  015A02  C06F  F06C         	movff	__flash_get_status@status,?__flash_get_status
 39849  015A06  C070  F06D         	movff	__flash_get_status@status+1,?__flash_get_status+1
 39850  015A0A  0012               	return	
 39851  015A0C                     __end_of__flash_get_status:
 39852                           	opt stack 0
 39853                           tosu	equ	0xFFF
 39854                           tosh	equ	0xFFE
 39855                           tosl	equ	0xFFD
 39856                           pclath	equ	0xFFA
 39857                           tblptru	equ	0xFF8
 39858                           tblptrh	equ	0xFF7
 39859                           tblptrl	equ	0xFF6
 39860                           tablat	equ	0xFF5
 39861                           prodh	equ	0xFF4
 39862                           prodl	equ	0xFF3
 39863                           intcon	equ	0xFF2
 39864                           postinc0	equ	0xFEE
 39865                           wreg	equ	0xFE8
 39866                           indf1	equ	0xFE7
 39867                           postinc1	equ	0xFE6
 39868                           postdec1	equ	0xFE5
 39869                           plusw1	equ	0xFE3
 39870                           fsr1h	equ	0xFE2
 39871                           fsr1l	equ	0xFE1
 39872                           indf2	equ	0xFDF
 39873                           postinc2	equ	0xFDE
 39874                           postdec2	equ	0xFDD
 39875                           plusw2	equ	0xFDB
 39876                           fsr2h	equ	0xFDA
 39877                           fsr2l	equ	0xFD9
 39878                           status	equ	0xFD8
 39879                           
 39880 ;; *************** function _spi_tx_rx *****************
 39881 ;; Defined at:
 39882 ;;		line 199 in file "spi.c"
 39883 ;; Parameters:    Size  Location     Type
 39884 ;;  command         2    0[BANK0 ] PTR unsigned char 
 39885 ;;		 -> _flash_buffer_read@command(4), _flash_partial_read@command(4), _flash_get_status@command(1), 
 39886 ;;  command_leng    2    2[BANK0 ] unsigned int 
 39887 ;;  data            2    4[BANK0 ] PTR unsigned char 
 39888 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 39889 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 39890 ;;		 -> _root_is_available@first_byte(1), buffer(512), _flash_get_status@status(2), msd_buffer(512), 
 39891 ;;  data_length     2    6[BANK0 ] unsigned int 
 39892 ;; Auto vars:     Size  Location     Type
 39893 ;;		None
 39894 ;; Return value:  Size  Location     Type
 39895 ;;                  1    wreg      void 
 39896 ;; Registers used:
 39897 ;;		wreg, status,2, status,0
 39898 ;; Tracked objects:
 39899 ;;		On entry : 0/0
 39900 ;;		On exit  : 0/0
 39901 ;;		Unchanged: 0/0
 39902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39903 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39905 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39906 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39907 ;;Total ram usage:       12 bytes
 39908 ;; Hardware stack levels used:    1
 39909 ;; Hardware stack levels required when called:   10
 39910 ;; This function calls:
 39911 ;;		Nothing
 39912 ;; This function is called by:
 39913 ;;		__flash_get_status
 39914 ;;		__flash_partial_read
 39915 ;;		__flash_buffer_read
 39916 ;; This function uses a non-reentrant model
 39917 ;;
 39918                           
 39919                           	psect	text157
 39920  0139D6                     __ptext157:
 39921                           	opt stack 0
 39922  0139D6                     _spi_tx_rx:
 39923                           	opt stack 15
 39924                           
 39925                           ;spi.c: 202: DMACON1bits.SSCON1 = 0;
 39926                           
 39927                           ;incstack = 0
 39928  0139D6  9E88               	bcf	3976,7,c	;volatile
 39929                           
 39930                           ;spi.c: 203: DMACON1bits.SSCON0 = 0;
 39931  0139D8  9C88               	bcf	3976,6,c	;volatile
 39932                           
 39933                           ;spi.c: 205: DMACON1bits.TXINC = 1;
 39934  0139DA  8A88               	bsf	3976,5,c	;volatile
 39935                           
 39936                           ;spi.c: 207: DMACON1bits.RXINC = 0;
 39937  0139DC  9888               	bcf	3976,4,c	;volatile
 39938                           
 39939                           ;spi.c: 209: DMACON1bits.DUPLEX1 = 0;
 39940  0139DE  9688               	bcf	3976,3,c	;volatile
 39941                           
 39942                           ;spi.c: 210: DMACON1bits.DUPLEX0 = 1;
 39943  0139E0  8488               	bsf	3976,2,c	;volatile
 39944                           
 39945                           ;spi.c: 212: DMACON1bits.DLYINTEN = 0;
 39946  0139E2  9288               	bcf	3976,1,c	;volatile
 39947                           
 39948                           ;spi.c: 214: DMACON2bits.DLYCYC = 0b0000;
 39949  0139E4  9886               	bcf	3974,4,c	;volatile
 39950  0139E6  9A86               	bcf	3974,5,c	;volatile
 39951  0139E8  9C86               	bcf	3974,6,c	;volatile
 39952  0139EA  9E86               	bcf	3974,7,c	;volatile
 39953                           
 39954                           ;spi.c: 216: DMACON2bits.INTLVL = 0b0000;
 39955  0139EC  9086               	bcf	3974,0,c	;volatile
 39956  0139EE  9286               	bcf	3974,1,c	;volatile
 39957  0139F0  9486               	bcf	3974,2,c	;volatile
 39958  0139F2  9686               	bcf	3974,3,c	;volatile
 39959                           
 39960                           ;spi.c: 219: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 39961  0139F4  0100               	movlb	0	; () banked
 39962  0139F6  5161               	movf	(spi_tx_rx@command+1)& (0+255),w,b
 39963  0139F8  6E6A               	movwf	3946,c	;volatile
 39964                           
 39965                           ; BSR set to: 0
 39966                           ;spi.c: 220: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 39967  0139FA  C060  FF6B         	movff	spi_tx_rx@command,3947	;volatile
 39968                           
 39969                           ; BSR set to: 0
 39970                           ;spi.c: 223: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 39971  0139FE  0EFF               	movlw	255
 39972  013A00  6F68               	movwf	??_spi_tx_rx& (0+255),b
 39973  013A02  0EFF               	movlw	255
 39974  013A04  6F69               	movwf	(??_spi_tx_rx+1)& (0+255),b
 39975  013A06  C062  F06A         	movff	spi_tx_rx@command_length,??_spi_tx_rx+2
 39976  013A0A  C063  F06B         	movff	spi_tx_rx@command_length+1,??_spi_tx_rx+3
 39977  013A0E  5168               	movf	??_spi_tx_rx& (0+255),w,b
 39978  013A10  276A               	addwf	(??_spi_tx_rx+2)& (0+255),f,b
 39979  013A12  5169               	movf	(??_spi_tx_rx+1)& (0+255),w,b
 39980  013A14  236B               	addwfc	(??_spi_tx_rx+3)& (0+255),f,b
 39981  013A16  C06B  F06A         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 39982  013A1A  6B6B               	clrf	(??_spi_tx_rx+3)& (0+255),b
 39983  013A1C  516A               	movf	(??_spi_tx_rx+2)& (0+255),w,b
 39984  013A1E  6E66               	movwf	3942,c	;volatile
 39985                           
 39986                           ; BSR set to: 0
 39987                           ;spi.c: 224: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 39988  013A20  0562               	decf	spi_tx_rx@command_length& (0+255),w,b
 39989  013A22  6E67               	movwf	3943,c	;volatile
 39990                           
 39991                           ; BSR set to: 0
 39992                           ;spi.c: 227: LATDbits.LD7 = 0;
 39993  013A24  9E8C               	bcf	3980,7,c	;volatile
 39994                           
 39995                           ; BSR set to: 0
 39996                           ;spi.c: 230: DMACON1bits.DMAEN = 1;
 39997  013A26  8088               	bsf	3976,0,c	;volatile
 39998  013A28                     
 39999                           ; BSR set to: 0
 40000  013A28  B088               	btfsc	3976,0,c	;volatile
 40001  013A2A  D7FE               	goto	l2214
 40002                           
 40003                           ;spi.c: 234: DMACON1bits.TXINC = 0;
 40004  013A2C  9A88               	bcf	3976,5,c	;volatile
 40005                           
 40006                           ;spi.c: 236: DMACON1bits.RXINC = 1;
 40007  013A2E  8888               	bsf	3976,4,c	;volatile
 40008                           
 40009                           ;spi.c: 238: DMACON1bits.DUPLEX1 = 0;
 40010  013A30  9688               	bcf	3976,3,c	;volatile
 40011                           
 40012                           ;spi.c: 239: DMACON1bits.DUPLEX0 = 0;
 40013  013A32  9488               	bcf	3976,2,c	;volatile
 40014                           
 40015                           ;spi.c: 242: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 40016  013A34  0100               	movlb	0	; () banked
 40017  013A36  5165               	movf	(spi_tx_rx@data+1)& (0+255),w,b
 40018  013A38  6E68               	movwf	3944,c	;volatile
 40019                           
 40020                           ; BSR set to: 0
 40021                           ;spi.c: 243: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 40022  013A3A  C064  FF69         	movff	spi_tx_rx@data,3945	;volatile
 40023                           
 40024                           ; BSR set to: 0
 40025                           ;spi.c: 246: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 40026  013A3E  0EFF               	movlw	255
 40027  013A40  6F68               	movwf	??_spi_tx_rx& (0+255),b
 40028  013A42  0EFF               	movlw	255
 40029  013A44  6F69               	movwf	(??_spi_tx_rx+1)& (0+255),b
 40030  013A46  C066  F06A         	movff	spi_tx_rx@data_length,??_spi_tx_rx+2
 40031  013A4A  C067  F06B         	movff	spi_tx_rx@data_length+1,??_spi_tx_rx+3
 40032  013A4E  5168               	movf	??_spi_tx_rx& (0+255),w,b
 40033  013A50  276A               	addwf	(??_spi_tx_rx+2)& (0+255),f,b
 40034  013A52  5169               	movf	(??_spi_tx_rx+1)& (0+255),w,b
 40035  013A54  236B               	addwfc	(??_spi_tx_rx+3)& (0+255),f,b
 40036  013A56  C06B  F06A         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 40037  013A5A  6B6B               	clrf	(??_spi_tx_rx+3)& (0+255),b
 40038  013A5C  516A               	movf	(??_spi_tx_rx+2)& (0+255),w,b
 40039  013A5E  6E66               	movwf	3942,c	;volatile
 40040                           
 40041                           ; BSR set to: 0
 40042                           ;spi.c: 247: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 40043  013A60  0566               	decf	spi_tx_rx@data_length& (0+255),w,b
 40044  013A62  6E67               	movwf	3943,c	;volatile
 40045                           
 40046                           ; BSR set to: 0
 40047                           ;spi.c: 250: DMACON1bits.DMAEN = 1;
 40048  013A64  8088               	bsf	3976,0,c	;volatile
 40049  013A66                     
 40050                           ; BSR set to: 0
 40051  013A66  B088               	btfsc	3976,0,c	;volatile
 40052  013A68  D7FE               	goto	l2217
 40053                           
 40054                           ;spi.c: 254: LATDbits.LD7 = 1;
 40055  013A6A  8E8C               	bsf	3980,7,c	;volatile
 40056  013A6C  0012               	return		;funcret
 40057  013A6E                     __end_of_spi_tx_rx:
 40058                           	opt stack 0
 40059                           tosu	equ	0xFFF
 40060                           tosh	equ	0xFFE
 40061                           tosl	equ	0xFFD
 40062                           pclath	equ	0xFFA
 40063                           tblptru	equ	0xFF8
 40064                           tblptrh	equ	0xFF7
 40065                           tblptrl	equ	0xFF6
 40066                           tablat	equ	0xFF5
 40067                           prodh	equ	0xFF4
 40068                           prodl	equ	0xFF3
 40069                           intcon	equ	0xFF2
 40070                           postinc0	equ	0xFEE
 40071                           wreg	equ	0xFE8
 40072                           indf1	equ	0xFE7
 40073                           postinc1	equ	0xFE6
 40074                           postdec1	equ	0xFE5
 40075                           plusw1	equ	0xFE3
 40076                           fsr1h	equ	0xFE2
 40077                           fsr1l	equ	0xFE1
 40078                           indf2	equ	0xFDF
 40079                           postinc2	equ	0xFDE
 40080                           postdec2	equ	0xFDD
 40081                           plusw2	equ	0xFDB
 40082                           fsr2h	equ	0xFDA
 40083                           fsr2l	equ	0xFD9
 40084                           status	equ	0xFD8
 40085                           
 40086 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 40087 ;; Defined at:
 40088 ;;		line 993 in file "usb_device_msd.c"
 40089 ;; Parameters:    Size  Location     Type
 40090 ;;  DiExpected      2    0[BANK0 ] unsigned int 
 40091 ;; Auto vars:     Size  Location     Type
 40092 ;;		None
 40093 ;; Return value:  Size  Location     Type
 40094 ;;                  1    wreg      void 
 40095 ;; Registers used:
 40096 ;;		wreg, status,2, status,0
 40097 ;; Tracked objects:
 40098 ;;		On entry : 0/0
 40099 ;;		On exit  : 0/0
 40100 ;;		Unchanged: 0/0
 40101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40102 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40104 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40105 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40106 ;;Total ram usage:        6 bytes
 40107 ;; Hardware stack levels used:    1
 40108 ;; Hardware stack levels required when called:   10
 40109 ;; This function calls:
 40110 ;;		Nothing
 40111 ;; This function is called by:
 40112 ;;		_MSDProcessCommandMediaPresent
 40113 ;; This function uses a non-reentrant model
 40114 ;;
 40115                           
 40116                           	psect	text158
 40117  012F2A                     __ptext158:
 40118                           	opt stack 0
 40119  012F2A                     _MSDComputeDeviceInAndResidue:
 40120                           	opt stack 16
 40121                           
 40122                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 40123                           
 40124                           ;incstack = 0
 40125  012F2A  0100               	movlb	0	; () banked
 40126  012F2C  5160               	movf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 40127  012F2E  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 40128  012F30  5161               	movf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 40129  012F32  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 40130  012F34  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 40131  012F36  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 40132  012F38  5162               	movf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 40133  012F3A  0102               	movlb	2	; () banked
 40134  012F3C  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 40135  012F3E  0100               	movlb	0	; () banked
 40136  012F40  5163               	movf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 40137  012F42  0102               	movlb	2	; () banked
 40138  012F44  5909               	subwfb	(_gblCBW+9)& (0+255),w,b
 40139  012F46  0100               	movlb	0	; () banked
 40140  012F48  5164               	movf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 40141  012F4A  0102               	movlb	2	; () banked
 40142  012F4C  590A               	subwfb	(_gblCBW+10)& (0+255),w,b
 40143  012F4E  0100               	movlb	0	; () banked
 40144  012F50  5165               	movf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 40145  012F52  0102               	movlb	2	; () banked
 40146  012F54  590B               	subwfb	(_gblCBW+11)& (0+255),w,b
 40147  012F56  B0D8               	btfsc	status,0,c
 40148  012F58  D00E               	goto	l675
 40149                           
 40150                           ; BSR set to: 2
 40151                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 40152  012F5A  0E00               	movlw	0
 40153  012F5C  010D               	movlb	13	; () banked
 40154  012F5E  6F88               	movwf	136,b	;volatile
 40155  012F60  0E00               	movlw	0
 40156  012F62  6F89               	movwf	137,b	;volatile
 40157  012F64  0E00               	movlw	0
 40158  012F66  6F8A               	movwf	138,b	;volatile
 40159  012F68  0E00               	movlw	0
 40160  012F6A  6F8B               	movwf	139,b	;volatile
 40161                           
 40162                           ; BSR set to: 13
 40163                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 40164  012F6C  C208  F13D         	movff	_gblCBW+8,_TransferLength
 40165  012F70  C209  F13E         	movff	_gblCBW+9,_TransferLength+1
 40166                           
 40167                           ;usb_device_msd.c: 1002: }
 40168  012F74  0012               	return	
 40169  012F76                     l675:
 40170                           
 40171                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 40172                           
 40173                           ; BSR set to: 13
 40174  012F76  0101               	movlb	1	; () banked
 40175  012F78  513D               	movf	_TransferLength& (0+255),w,b
 40176  012F7A  0100               	movlb	0	; () banked
 40177  012F7C  5D60               	subwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 40178  012F7E  0101               	movlb	1	; () banked
 40179  012F80  513E               	movf	(_TransferLength+1)& (0+255),w,b
 40180  012F82  0100               	movlb	0	; () banked
 40181  012F84  5961               	subwfb	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 40182  012F86  B0D8               	btfsc	status,0,c
 40183  012F88  D004               	goto	l677
 40184                           
 40185                           ; BSR set to: 0
 40186                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 40187  012F8A  C060  F13D         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 40188  012F8E  C061  F13E         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 40189  012F92                     l677:
 40190                           
 40191                           ; BSR set to: 0
 40192                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 40193                           
 40194                           ; BSR set to: 0
 40195  012F92  0101               	movlb	1	; () banked
 40196  012F94  513D               	movf	_TransferLength& (0+255),w,b
 40197  012F96  0100               	movlb	0	; () banked
 40198  012F98  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 40199  012F9A  0101               	movlb	1	; () banked
 40200  012F9C  513E               	movf	(_TransferLength+1)& (0+255),w,b
 40201  012F9E  0100               	movlb	0	; () banked
 40202  012FA0  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 40203  012FA2  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 40204  012FA4  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 40205  012FA6  1F62               	comf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 40206  012FA8  1F63               	comf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 40207  012FAA  1F64               	comf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 40208  012FAC  1F65               	comf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 40209  012FAE  2B62               	incf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 40210  012FB0  0E00               	movlw	0
 40211  012FB2  2363               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 40212  012FB4  2364               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 40213  012FB6  2365               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 40214  012FB8  0102               	movlb	2	; () banked
 40215  012FBA  5108               	movf	(_gblCBW+8)& (0+255),w,b
 40216  012FBC  0100               	movlb	0	; () banked
 40217  012FBE  2562               	addwf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 40218  012FC0  010D               	movlb	13	; () banked
 40219  012FC2  6F88               	movwf	136,b	;volatile
 40220  012FC4  0102               	movlb	2	; () banked
 40221  012FC6  5109               	movf	(_gblCBW+9)& (0+255),w,b
 40222  012FC8  0100               	movlb	0	; () banked
 40223  012FCA  2163               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 40224  012FCC  010D               	movlb	13	; () banked
 40225  012FCE  6F89               	movwf	137,b	;volatile
 40226  012FD0  0102               	movlb	2	; () banked
 40227  012FD2  510A               	movf	(_gblCBW+10)& (0+255),w,b
 40228  012FD4  0100               	movlb	0	; () banked
 40229  012FD6  2164               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 40230  012FD8  010D               	movlb	13	; () banked
 40231  012FDA  6F8A               	movwf	138,b	;volatile
 40232  012FDC  0102               	movlb	2	; () banked
 40233  012FDE  510B               	movf	(_gblCBW+11)& (0+255),w,b
 40234  012FE0  0100               	movlb	0	; () banked
 40235  012FE2  2165               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 40236  012FE4  010D               	movlb	13	; () banked
 40237  012FE6  6F8B               	movwf	139,b	;volatile
 40238  012FE8  0012               	return	
 40239  012FEA                     __end_of_MSDComputeDeviceInAndResidue:
 40240                           	opt stack 0
 40241                           tosu	equ	0xFFF
 40242                           tosh	equ	0xFFE
 40243                           tosl	equ	0xFFD
 40244                           pclath	equ	0xFFA
 40245                           tblptru	equ	0xFF8
 40246                           tblptrh	equ	0xFF7
 40247                           tblptrl	equ	0xFF6
 40248                           tablat	equ	0xFF5
 40249                           prodh	equ	0xFF4
 40250                           prodl	equ	0xFF3
 40251                           intcon	equ	0xFF2
 40252                           postinc0	equ	0xFEE
 40253                           wreg	equ	0xFE8
 40254                           indf1	equ	0xFE7
 40255                           postinc1	equ	0xFE6
 40256                           postdec1	equ	0xFE5
 40257                           plusw1	equ	0xFE3
 40258                           fsr1h	equ	0xFE2
 40259                           fsr1l	equ	0xFE1
 40260                           indf2	equ	0xFDF
 40261                           postinc2	equ	0xFDE
 40262                           postdec2	equ	0xFDD
 40263                           plusw2	equ	0xFDB
 40264                           fsr2h	equ	0xFDA
 40265                           fsr2l	equ	0xFD9
 40266                           status	equ	0xFD8
 40267                           
 40268 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 40269 ;; Defined at:
 40270 ;;		line 18 in file "external_flash.c"
 40271 ;; Parameters:    Size  Location     Type
 40272 ;;  config          2    0[BANK0 ] PTR void 
 40273 ;;		 -> NULL(0), 
 40274 ;; Auto vars:     Size  Location     Type
 40275 ;;		None
 40276 ;; Return value:  Size  Location     Type
 40277 ;;                  2    0[BANK0 ] unsigned int 
 40278 ;; Registers used:
 40279 ;;		wreg, status,2
 40280 ;; Tracked objects:
 40281 ;;		On entry : 0/0
 40282 ;;		On exit  : 0/0
 40283 ;;		Unchanged: 0/0
 40284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40285 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40288 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40289 ;;Total ram usage:        2 bytes
 40290 ;; Hardware stack levels used:    1
 40291 ;; Hardware stack levels required when called:   10
 40292 ;; This function calls:
 40293 ;;		Nothing
 40294 ;; This function is called by:
 40295 ;;		_MSDProcessCommandMediaPresent
 40296 ;; This function uses a non-reentrant model
 40297 ;;
 40298                           
 40299                           	psect	text159
 40300  01600C                     __ptext159:
 40301                           	opt stack 0
 40302  01600C                     _ExternalFlash_SectorSizeRead:
 40303                           	opt stack 16
 40304                           
 40305                           ;external_flash.c: 20: return 512;
 40306                           
 40307                           ; BSR set to: 13
 40308                           ;incstack = 0
 40309  01600C  0E02               	movlw	2
 40310  01600E  0100               	movlb	0	; () banked
 40311  016010  6F61               	movwf	(?_ExternalFlash_SectorSizeRead+1)& (0+255),b
 40312  016012  0E00               	movlw	0
 40313  016014  6F60               	movwf	?_ExternalFlash_SectorSizeRead& (0+255),b
 40314  016016  0012               	return	
 40315  016018                     __end_of_ExternalFlash_SectorSizeRead:
 40316                           	opt stack 0
 40317                           tosu	equ	0xFFF
 40318                           tosh	equ	0xFFE
 40319                           tosl	equ	0xFFD
 40320                           pclath	equ	0xFFA
 40321                           tblptru	equ	0xFF8
 40322                           tblptrh	equ	0xFF7
 40323                           tblptrl	equ	0xFF6
 40324                           tablat	equ	0xFF5
 40325                           prodh	equ	0xFF4
 40326                           prodl	equ	0xFF3
 40327                           intcon	equ	0xFF2
 40328                           postinc0	equ	0xFEE
 40329                           wreg	equ	0xFE8
 40330                           indf1	equ	0xFE7
 40331                           postinc1	equ	0xFE6
 40332                           postdec1	equ	0xFE5
 40333                           plusw1	equ	0xFE3
 40334                           fsr1h	equ	0xFE2
 40335                           fsr1l	equ	0xFE1
 40336                           indf2	equ	0xFDF
 40337                           postinc2	equ	0xFDE
 40338                           postdec2	equ	0xFDD
 40339                           plusw2	equ	0xFDB
 40340                           fsr2h	equ	0xFDA
 40341                           fsr2l	equ	0xFD9
 40342                           status	equ	0xFD8
 40343                           
 40344 ;; *************** function _ExternalFlash_CapacityRead *****************
 40345 ;; Defined at:
 40346 ;;		line 23 in file "external_flash.c"
 40347 ;; Parameters:    Size  Location     Type
 40348 ;;  config          2    0[BANK0 ] PTR void 
 40349 ;;		 -> NULL(0), 
 40350 ;; Auto vars:     Size  Location     Type
 40351 ;;		None
 40352 ;; Return value:  Size  Location     Type
 40353 ;;                  4    0[BANK0 ] unsigned long 
 40354 ;; Registers used:
 40355 ;;		wreg, status,2
 40356 ;; Tracked objects:
 40357 ;;		On entry : 0/0
 40358 ;;		On exit  : 0/0
 40359 ;;		Unchanged: 0/0
 40360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40361 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40364 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40365 ;;Total ram usage:        4 bytes
 40366 ;; Hardware stack levels used:    1
 40367 ;; Hardware stack levels required when called:   10
 40368 ;; This function calls:
 40369 ;;		Nothing
 40370 ;; This function is called by:
 40371 ;;		_MSDProcessCommandMediaPresent
 40372 ;; This function uses a non-reentrant model
 40373 ;;
 40374                           
 40375                           	psect	text160
 40376  015F90                     __ptext160:
 40377                           	opt stack 0
 40378  015F90                     _ExternalFlash_CapacityRead:
 40379                           	opt stack 16
 40380                           
 40381                           ;external_flash.c: 26: return ((uint32_t) 8192 - 1);
 40382                           
 40383                           ; BSR set to: 0
 40384                           ;incstack = 0
 40385  015F90  0EFF               	movlw	255
 40386  015F92  0100               	movlb	0	; () banked
 40387  015F94  6F60               	movwf	?_ExternalFlash_CapacityRead& (0+255),b
 40388  015F96  0E1F               	movlw	31
 40389  015F98  6F61               	movwf	(?_ExternalFlash_CapacityRead+1)& (0+255),b
 40390  015F9A  0E00               	movlw	0
 40391  015F9C  6F62               	movwf	(?_ExternalFlash_CapacityRead+2)& (0+255),b
 40392  015F9E  0E00               	movlw	0
 40393  015FA0  6F63               	movwf	(?_ExternalFlash_CapacityRead+3)& (0+255),b
 40394  015FA2  0012               	return	
 40395  015FA4                     __end_of_ExternalFlash_CapacityRead:
 40396                           	opt stack 0
 40397                           tosu	equ	0xFFF
 40398                           tosh	equ	0xFFE
 40399                           tosl	equ	0xFFD
 40400                           pclath	equ	0xFFA
 40401                           tblptru	equ	0xFF8
 40402                           tblptrh	equ	0xFF7
 40403                           tblptrl	equ	0xFF6
 40404                           tablat	equ	0xFF5
 40405                           prodh	equ	0xFF4
 40406                           prodl	equ	0xFF3
 40407                           intcon	equ	0xFF2
 40408                           postinc0	equ	0xFEE
 40409                           wreg	equ	0xFE8
 40410                           indf1	equ	0xFE7
 40411                           postinc1	equ	0xFE6
 40412                           postdec1	equ	0xFE5
 40413                           plusw1	equ	0xFE3
 40414                           fsr1h	equ	0xFE2
 40415                           fsr1l	equ	0xFE1
 40416                           indf2	equ	0xFDF
 40417                           postinc2	equ	0xFDE
 40418                           postdec2	equ	0xFDD
 40419                           plusw2	equ	0xFDB
 40420                           fsr2h	equ	0xFDA
 40421                           fsr2l	equ	0xFD9
 40422                           status	equ	0xFD8
 40423                           
 40424 ;; *************** function _ExternalFlash_MediaInitialize *****************
 40425 ;; Defined at:
 40426 ;;		line 10 in file "external_flash.c"
 40427 ;; Parameters:    Size  Location     Type
 40428 ;;  config          2    0[BANK0 ] PTR void 
 40429 ;;		 -> NULL(0), 
 40430 ;; Auto vars:     Size  Location     Type
 40431 ;;		None
 40432 ;; Return value:  Size  Location     Type
 40433 ;;                  2    0[BANK0 ] PTR struct .
 40434 ;; Registers used:
 40435 ;;		wreg, status,2, status,0
 40436 ;; Tracked objects:
 40437 ;;		On entry : 0/0
 40438 ;;		On exit  : 0/0
 40439 ;;		Unchanged: 0/0
 40440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40441 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40444 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40445 ;;Total ram usage:        2 bytes
 40446 ;; Hardware stack levels used:    1
 40447 ;; Hardware stack levels required when called:   10
 40448 ;; This function calls:
 40449 ;;		Nothing
 40450 ;; This function is called by:
 40451 ;;		_USBMSDInit
 40452 ;;		_MSDProcessCommand
 40453 ;; This function uses a non-reentrant model
 40454 ;;
 40455                           
 40456                           	psect	text161
 40457  015E7E                     __ptext161:
 40458                           	opt stack 0
 40459  015E7E                     _ExternalFlash_MediaInitialize:
 40460                           	opt stack 0
 40461                           
 40462                           ; BSR set to: 0
 40463                           ;Skip over the trampoline to the duplicate function for level 2
 40464  015E7E  B25F               	btfsc	btemp,1,c
 40465  015E80  EFA4  F0AF         	goto	i2_ExternalFlash_MediaInitialize
 40466  015E84                     _ExternalFlash_MediaInitialize$intlevel0:
 40467                           	opt stack 17
 40468                           
 40469                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 40470                           
 40471                           ;incstack = 0
 40472  015E84  0102               	movlb	2	; () banked
 40473  015E86  8199               	bsf	(_mediaInformation+1)& (0+255),0,b
 40474                           
 40475                           ; BSR set to: 2
 40476                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 40477  015E88  0E02               	movlw	2
 40478  015E8A  6F9B               	movwf	(_mediaInformation+3)& (0+255),b
 40479  015E8C  0E00               	movlw	0
 40480  015E8E  6F9A               	movwf	(_mediaInformation+2)& (0+255),b
 40481                           
 40482                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 40483  015E90  0E00               	movlw	0
 40484  015E92  6F98               	movwf	_mediaInformation& (0+255),b
 40485                           
 40486                           ; BSR set to: 2
 40487                           ;external_flash.c: 15: return &mediaInformation;
 40488  015E94  0E98               	movlw	low _mediaInformation
 40489  015E96  0100               	movlb	0	; () banked
 40490  015E98  6F60               	movwf	?_ExternalFlash_MediaInitialize& (0+255),b
 40491  015E9A  0E02               	movlw	high _mediaInformation
 40492  015E9C  6F61               	movwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),b
 40493  015E9E  0012               	return	
 40494  015EA0                     __end_of_ExternalFlash_MediaInitialize:
 40495                           	opt stack 0
 40496                           tosu	equ	0xFFF
 40497                           tosh	equ	0xFFE
 40498                           tosl	equ	0xFFD
 40499                           pclath	equ	0xFFA
 40500                           tblptru	equ	0xFF8
 40501                           tblptrh	equ	0xFF7
 40502                           tblptrl	equ	0xFF6
 40503                           tablat	equ	0xFF5
 40504                           prodh	equ	0xFF4
 40505                           prodl	equ	0xFF3
 40506                           intcon	equ	0xFF2
 40507                           postinc0	equ	0xFEE
 40508                           wreg	equ	0xFE8
 40509                           indf1	equ	0xFE7
 40510                           postinc1	equ	0xFE6
 40511                           postdec1	equ	0xFE5
 40512                           plusw1	equ	0xFE3
 40513                           fsr1h	equ	0xFE2
 40514                           fsr1l	equ	0xFE1
 40515                           indf2	equ	0xFDF
 40516                           postinc2	equ	0xFDE
 40517                           postdec2	equ	0xFDD
 40518                           plusw2	equ	0xFDB
 40519                           fsr2h	equ	0xFDA
 40520                           fsr2l	equ	0xFD9
 40521                           status	equ	0xFD8
 40522                           
 40523 ;; *************** function _ExternalFlash_MediaDetect *****************
 40524 ;; Defined at:
 40525 ;;		line 29 in file "external_flash.c"
 40526 ;; Parameters:    Size  Location     Type
 40527 ;;  config          2    0[BANK0 ] PTR void 
 40528 ;;		 -> NULL(0), 
 40529 ;; Auto vars:     Size  Location     Type
 40530 ;;		None
 40531 ;; Return value:  Size  Location     Type
 40532 ;;                  1    wreg      unsigned char 
 40533 ;; Registers used:
 40534 ;;		wreg
 40535 ;; Tracked objects:
 40536 ;;		On entry : 0/0
 40537 ;;		On exit  : 0/0
 40538 ;;		Unchanged: 0/0
 40539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40540 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40543 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40544 ;;Total ram usage:        2 bytes
 40545 ;; Hardware stack levels used:    1
 40546 ;; Hardware stack levels required when called:   10
 40547 ;; This function calls:
 40548 ;;		Nothing
 40549 ;; This function is called by:
 40550 ;;		_USBMSDInit
 40551 ;;		_MSDProcessCommand
 40552 ;; This function uses a non-reentrant model
 40553 ;;
 40554                           
 40555                           	psect	text162
 40556  016058                     __ptext162:
 40557                           	opt stack 0
 40558  016058                     _ExternalFlash_MediaDetect:
 40559                           	opt stack 0
 40560                           
 40561                           ; BSR set to: 0
 40562                           ;Skip over the trampoline to the duplicate function for level 2
 40563  016058  B25F               	btfsc	btemp,1,c
 40564  01605A  EF4E  F0B0         	goto	i2_ExternalFlash_MediaDetect
 40565  01605E                     _ExternalFlash_MediaDetect$intlevel0:
 40566                           	opt stack 17
 40567                           
 40568                           ;external_flash.c: 31: return 1;
 40569                           
 40570                           ;incstack = 0
 40571  01605E  0E01               	movlw	1
 40572  016060  0012               	return	
 40573  016062                     __end_of_ExternalFlash_MediaDetect:
 40574                           	opt stack 0
 40575                           tosu	equ	0xFFF
 40576                           tosh	equ	0xFFE
 40577                           tosl	equ	0xFFD
 40578                           pclath	equ	0xFFA
 40579                           tblptru	equ	0xFF8
 40580                           tblptrh	equ	0xFF7
 40581                           tblptrl	equ	0xFF6
 40582                           tablat	equ	0xFF5
 40583                           prodh	equ	0xFF4
 40584                           prodl	equ	0xFF3
 40585                           intcon	equ	0xFF2
 40586                           postinc0	equ	0xFEE
 40587                           wreg	equ	0xFE8
 40588                           indf1	equ	0xFE7
 40589                           postinc1	equ	0xFE6
 40590                           postdec1	equ	0xFE5
 40591                           plusw1	equ	0xFE3
 40592                           fsr1h	equ	0xFE2
 40593                           fsr1l	equ	0xFE1
 40594                           indf2	equ	0xFDF
 40595                           postinc2	equ	0xFDE
 40596                           postdec2	equ	0xFDD
 40597                           plusw2	equ	0xFDB
 40598                           fsr2h	equ	0xFDA
 40599                           fsr2l	equ	0xFD9
 40600                           status	equ	0xFD8
 40601                           
 40602 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 40603 ;; Defined at:
 40604 ;;		line 73 in file "app_device_custom_hid.c"
 40605 ;; Parameters:    Size  Location     Type
 40606 ;;		None
 40607 ;; Auto vars:     Size  Location     Type
 40608 ;;  idx             1    0        unsigned char 
 40609 ;; Return value:  Size  Location     Type
 40610 ;;                  1    wreg      void 
 40611 ;; Registers used:
 40612 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40613 ;; Tracked objects:
 40614 ;;		On entry : 0/0
 40615 ;;		On exit  : 0/0
 40616 ;;		Unchanged: 0/0
 40617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40622 ;;Total ram usage:        0 bytes
 40623 ;; Hardware stack levels used:    1
 40624 ;; Hardware stack levels required when called:   17
 40625 ;; This function calls:
 40626 ;;		_USBTransferOnePacket
 40627 ;;		_api_parse
 40628 ;;		_api_prepare
 40629 ;; This function is called by:
 40630 ;;		_main
 40631 ;; This function uses a non-reentrant model
 40632 ;;
 40633                           
 40634                           	psect	text163
 40635  01361A                     __ptext163:
 40636                           	opt stack 0
 40637  01361A                     _APP_DeviceCustomHIDTasks:
 40638                           	opt stack 13
 40639                           
 40640                           ;app_device_custom_hid.c: 75: uint8_t idx;;app_device_custom_hid.c: 80: if( USBDeviceSta
      +                          te < CONFIGURED_STATE )
 40641                           
 40642                           ;incstack = 0
 40643  01361A  0E20               	movlw	32
 40644  01361C  605D               	cpfslt	_USBDeviceState,c	;volatile
 40645  01361E  D001               	goto	l944
 40646  013620  0012               	return	
 40647  013622                     l944:
 40648                           
 40649                           ;app_device_custom_hid.c: 83: };app_device_custom_hid.c: 89: if( UCONbits.SUSPND== 1 )
 40650  013622  B265               	btfsc	3941,1,c	;volatile
 40651  013624  0012               	return	
 40652                           
 40653                           ;app_device_custom_hid.c: 92: };app_device_custom_hid.c: 95: if(((USBOutHandle != 0x0000
      +                          ) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 40654                           
 40655                           ;app_device_custom_hid.c: 90: {;app_device_custom_hid.c: 91: return;
 40656  013626  0101               	movlb	1	; () banked
 40657  013628  513B               	movf	_USBOutHandle& (0+255),w,b
 40658  01362A  113C               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 40659  01362C  B4D8               	btfsc	status,2,c
 40660  01362E  D006               	goto	u17790
 40661                           
 40662                           ; BSR set to: 1
 40663  013630  C13B  FFD9         	movff	_USBOutHandle,fsr2l
 40664  013634  C13C  FFDA         	movff	_USBOutHandle+1,fsr2h
 40665  013638  BEDF               	btfsc	indf2,7,c
 40666  01363A  0012               	return	
 40667  01363C                     u17790:
 40668                           
 40669                           ; BSR set to: 1
 40670                           ;app_device_custom_hid.c: 96: {;app_device_custom_hid.c: 101: if(!((USBInHandle != 0x000
      +                          0) && ((*(volatile uint8_t*)USBInHandle & 0x80) != 0x00)))
 40671                           
 40672                           ; BSR set to: 1
 40673  01363C  5139               	movf	_USBInHandle& (0+255),w,b
 40674  01363E  113A               	iorwf	(_USBInHandle+1)& (0+255),w,b
 40675  013640  B4D8               	btfsc	status,2,c
 40676  013642  D006               	goto	u17810
 40677                           
 40678                           ; BSR set to: 1
 40679  013644  C139  FFD9         	movff	_USBInHandle,fsr2l
 40680  013648  C13A  FFDA         	movff	_USBInHandle+1,fsr2h
 40681  01364C  BEDF               	btfsc	indf2,7,c
 40682  01364E  D01B               	goto	l950
 40683  013650                     u17810:
 40684                           
 40685                           ; BSR set to: 1
 40686                           ;app_device_custom_hid.c: 102: {;app_device_custom_hid.c: 104: api_prepare((uint8_t*) Re
      +                          ceivedDataBuffer, (uint8_t*) ToSendDataBuffer);
 40687                           
 40688                           ; BSR set to: 1
 40689  013650  0E80               	movlw	low _ReceivedDataBuffer
 40690  013652  0100               	movlb	0	; () banked
 40691  013654  6F70               	movwf	api_prepare@inBuffer& (0+255),b
 40692  013656  0E03               	movlw	high _ReceivedDataBuffer
 40693  013658  6F71               	movwf	(api_prepare@inBuffer+1)& (0+255),b
 40694  01365A  0E40               	movlw	low _ToSendDataBuffer
 40695  01365C  6F72               	movwf	api_prepare@outBuffer& (0+255),b
 40696  01365E  0E03               	movlw	high _ToSendDataBuffer
 40697  013660  6F73               	movwf	(api_prepare@outBuffer+1)& (0+255),b
 40698  013662  ECF0  F093         	call	_api_prepare	;wreg free
 40699                           
 40700                           ;app_device_custom_hid.c: 106: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 40701  013666  0E01               	movlw	1
 40702  013668  0100               	movlb	0	; () banked
 40703  01366A  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 40704  01366C  0E40               	movlw	low _ToSendDataBuffer
 40705  01366E  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 40706  013670  0E03               	movlw	high _ToSendDataBuffer
 40707  013672  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 40708  013674  0E40               	movlw	64
 40709  013676  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 40710  013678  0E01               	movlw	1
 40711  01367A  EC1F  F08A         	call	_USBTransferOnePacket
 40712  01367E  C060  F139         	movff	?_USBTransferOnePacket,_USBInHandle
 40713  013682  C061  F13A         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 40714  013686                     l950:
 40715                           
 40716                           ;app_device_custom_hid.c: 107: };app_device_custom_hid.c: 110: api_parse(ReceivedDataBuf
      +                          fer, 64, ToSendDataBuffer);
 40717  013686  0E80               	movlw	low _ReceivedDataBuffer
 40718  013688  0100               	movlb	0	; () banked
 40719  01368A  6FA7               	movwf	api_parse@inBuffer& (0+255),b
 40720  01368C  0E03               	movlw	high _ReceivedDataBuffer
 40721  01368E  6FA8               	movwf	(api_parse@inBuffer+1)& (0+255),b
 40722  013690  0E40               	movlw	64
 40723  013692  6FA9               	movwf	api_parse@receivedDataLength& (0+255),b
 40724  013694  0E40               	movlw	low _ToSendDataBuffer
 40725  013696  6FAA               	movwf	api_parse@outBuffer& (0+255),b
 40726  013698  0E03               	movlw	high _ToSendDataBuffer
 40727  01369A  6FAB               	movwf	(api_parse@outBuffer+1)& (0+255),b
 40728  01369C  EC3A  F085         	call	_api_parse	;wreg free
 40729                           
 40730                           ;app_device_custom_hid.c: 114: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 40731  0136A0  0E00               	movlw	0
 40732  0136A2  0100               	movlb	0	; () banked
 40733  0136A4  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 40734  0136A6  0E80               	movlw	low _ReceivedDataBuffer
 40735  0136A8  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 40736  0136AA  0E03               	movlw	high _ReceivedDataBuffer
 40737  0136AC  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 40738  0136AE  0E40               	movlw	64
 40739  0136B0  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 40740  0136B2  0E01               	movlw	1
 40741  0136B4  EC1F  F08A         	call	_USBTransferOnePacket
 40742  0136B8  C060  F13B         	movff	?_USBTransferOnePacket,_USBOutHandle
 40743  0136BC  C061  F13C         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 40744  0136C0  0012               	return	
 40745  0136C2                     __end_of_APP_DeviceCustomHIDTasks:
 40746                           	opt stack 0
 40747                           tosu	equ	0xFFF
 40748                           tosh	equ	0xFFE
 40749                           tosl	equ	0xFFD
 40750                           pclath	equ	0xFFA
 40751                           tblptru	equ	0xFF8
 40752                           tblptrh	equ	0xFF7
 40753                           tblptrl	equ	0xFF6
 40754                           tablat	equ	0xFF5
 40755                           prodh	equ	0xFF4
 40756                           prodl	equ	0xFF3
 40757                           intcon	equ	0xFF2
 40758                           postinc0	equ	0xFEE
 40759                           wreg	equ	0xFE8
 40760                           indf1	equ	0xFE7
 40761                           postinc1	equ	0xFE6
 40762                           postdec1	equ	0xFE5
 40763                           plusw1	equ	0xFE3
 40764                           fsr1h	equ	0xFE2
 40765                           fsr1l	equ	0xFE1
 40766                           indf2	equ	0xFDF
 40767                           postinc2	equ	0xFDE
 40768                           postdec2	equ	0xFDD
 40769                           plusw2	equ	0xFDB
 40770                           fsr2h	equ	0xFDA
 40771                           fsr2l	equ	0xFD9
 40772                           status	equ	0xFD8
 40773                           
 40774 ;; *************** function _api_prepare *****************
 40775 ;; Defined at:
 40776 ;;		line 38 in file "api.c"
 40777 ;; Parameters:    Size  Location     Type
 40778 ;;  inBuffer        2   16[BANK0 ] PTR unsigned char 
 40779 ;;		 -> ReceivedDataBuffer(64), 
 40780 ;;  outBuffer       2   18[BANK0 ] PTR unsigned char 
 40781 ;;		 -> ToSendDataBuffer(64), 
 40782 ;; Auto vars:     Size  Location     Type
 40783 ;;  command         1   20[BANK0 ] enum E6715
 40784 ;; Return value:  Size  Location     Type
 40785 ;;                  1    wreg      void 
 40786 ;; Registers used:
 40787 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40788 ;; Tracked objects:
 40789 ;;		On entry : 0/0
 40790 ;;		On exit  : 0/0
 40791 ;;		Unchanged: 0/0
 40792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40793 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40794 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40796 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40797 ;;Total ram usage:        5 bytes
 40798 ;; Hardware stack levels used:    1
 40799 ;; Hardware stack levels required when called:   12
 40800 ;; This function calls:
 40801 ;;		__fill_buffer_get_display
 40802 ;;		__fill_buffer_get_mode_details
 40803 ;;		__fill_buffer_get_status
 40804 ;;		_memcpy
 40805 ;; This function is called by:
 40806 ;;		_APP_DeviceCustomHIDTasks
 40807 ;; This function uses a non-reentrant model
 40808 ;;
 40809                           
 40810                           	psect	text164
 40811  0127E0                     __ptext164:
 40812                           	opt stack 0
 40813  0127E0                     _api_prepare:
 40814                           	opt stack 17
 40815                           
 40816                           ;api.c: 40: apiDataRequest_t command = (apiDataRequest_t) inBuffer[0];
 40817                           
 40818                           ;incstack = 0
 40819  0127E0  C070  FFD9         	movff	api_prepare@inBuffer,fsr2l
 40820  0127E4  C071  FFDA         	movff	api_prepare@inBuffer+1,fsr2h
 40821  0127E8  50DF               	movf	indf2,w,c
 40822  0127EA  0100               	movlb	0	; () banked
 40823  0127EC  6F74               	movwf	api_prepare@command& (0+255),b
 40824                           
 40825                           ; BSR set to: 0
 40826                           ;api.c: 42: if(command>0x7F)
 40827  0127EE  0E7F               	movlw	127
 40828  0127F0  6574               	cpfsgt	api_prepare@command& (0+255),b
 40829  0127F2  D051               	goto	l2265
 40830                           
 40831                           ; BSR set to: 0
 40832                           ;api.c: 49: outBuffer[0] = 0x99;
 40833                           
 40834                           ; BSR set to: 0
 40835                           
 40836                           ;api.c: 45: {;api.c: 48: default:
 40837                           
 40838                           ; BSR set to: 0
 40839                           ;api.c: 43: {;api.c: 44: switch(command)
 40840  0127F4  C072  FFD9         	movff	api_prepare@outBuffer,fsr2l
 40841  0127F8  C073  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 40842  0127FC  0E99               	movlw	153
 40843  0127FE  6EDF               	movwf	indf2,c
 40844                           
 40845                           ; BSR set to: 0
 40846                           ;api.c: 50: outBuffer[1] = 0x99;
 40847  012800  EE20 F001          	lfsr	2,1
 40848  012804  5172               	movf	api_prepare@outBuffer& (0+255),w,b
 40849  012806  26D9               	addwf	fsr2l,f,c
 40850  012808  5173               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 40851  01280A  22DA               	addwfc	fsr2h,f,c
 40852  01280C  0E99               	movlw	153
 40853  01280E  6EDF               	movwf	indf2,c
 40854                           
 40855                           ;api.c: 51: }
 40856  012810  0012               	return	
 40857  012812                     
 40858                           ; BSR set to: 0
 40859                           ;api.c: 64: _fill_buffer_get_status(outBuffer);
 40860                           
 40861                           ; BSR set to: 0
 40862  012812  C072  F06B         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 40863  012816  C073  F06C         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 40864  01281A  EC4E  F073         	call	__fill_buffer_get_status	;wreg free
 40865                           
 40866                           ;api.c: 65: break;
 40867  01281E  0012               	return	
 40868  012820                     
 40869                           ;api.c: 69: _fill_buffer_get_display(outBuffer, 0);
 40870  012820  C072  F064         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 40871  012824  C073  F065         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 40872  012828  0E00               	movlw	0
 40873  01282A  0100               	movlb	0	; () banked
 40874  01282C  6F66               	movwf	__fill_buffer_get_display@secondHalf& (0+255),b
 40875  01282E  EC51  F098         	call	__fill_buffer_get_display	;wreg free
 40876                           
 40877                           ;api.c: 70: break;
 40878  012832  0012               	return	
 40879  012834                     
 40880                           ;api.c: 74: _fill_buffer_get_display(outBuffer, 1);
 40881  012834  C072  F064         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 40882  012838  C073  F065         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 40883  01283C  0E01               	movlw	1
 40884  01283E  0100               	movlb	0	; () banked
 40885  012840  6F66               	movwf	__fill_buffer_get_display@secondHalf& (0+255),b
 40886  012842  EC51  F098         	call	__fill_buffer_get_display	;wreg free
 40887                           
 40888                           ;api.c: 75: break;
 40889  012846  0012               	return	
 40890  012848                     
 40891                           ;api.c: 79: _fill_buffer_get_mode_details(outBuffer);
 40892  012848  C072  F060         	movff	api_prepare@outBuffer,__fill_buffer_get_mode_details@outBuffer
 40893  01284C  C073  F061         	movff	api_prepare@outBuffer+1,__fill_buffer_get_mode_details@outBuffer+1
 40894  012850  ECF3  F078         	call	__fill_buffer_get_mode_details	;wreg free
 40895                           
 40896                           ;api.c: 80: break;
 40897  012854  0012               	return	
 40898  012856                     
 40899                           ;api.c: 84: memcpy(outBuffer, inBuffer, 64);
 40900  012856  C072  F060         	movff	api_prepare@outBuffer,memcpy@d1
 40901  01285A  C073  F061         	movff	api_prepare@outBuffer+1,memcpy@d1+1
 40902  01285E  C070  F062         	movff	api_prepare@inBuffer,memcpy@s1
 40903  012862  C071  F063         	movff	api_prepare@inBuffer+1,memcpy@s1+1
 40904  012866  0E00               	movlw	0
 40905  012868  0100               	movlb	0	; () banked
 40906  01286A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 40907  01286C  0E40               	movlw	64
 40908  01286E  6F64               	movwf	memcpy@n& (0+255),b
 40909  012870  ECAC  F0A5         	call	_memcpy	;wreg free
 40910                           
 40911                           ;api.c: 85: break;
 40912  012874  0012               	return	
 40913  012876                     
 40914                           ;api.c: 88: outBuffer[0] = 0x99;
 40915  012876  C072  FFD9         	movff	api_prepare@outBuffer,fsr2l
 40916  01287A  C073  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 40917  01287E  0E99               	movlw	153
 40918  012880  6EDF               	movwf	indf2,c
 40919                           
 40920                           ;api.c: 89: outBuffer[1] = 0x99;
 40921  012882  0100               	movlb	0	; () banked
 40922  012884  EE20 F001          	lfsr	2,1
 40923  012888  5172               	movf	api_prepare@outBuffer& (0+255),w,b
 40924  01288A  26D9               	addwf	fsr2l,f,c
 40925  01288C  5173               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 40926  01288E  22DA               	addwfc	fsr2h,f,c
 40927  012890  0E99               	movlw	153
 40928  012892  6EDF               	movwf	indf2,c
 40929                           
 40930                           ;api.c: 90: }
 40931  012894  0012               	return	
 40932  012896                     l2265:
 40933                           
 40934                           ; BSR set to: 0
 40935                           
 40936                           ; BSR set to: 0
 40937  012896  5174               	movf	api_prepare@command& (0+255),w,b
 40938                           
 40939                           ; Switch size 1, requested type "space"
 40940                           ; Number of cases is 6, Range of values is 0 to 32
 40941                           ; switch strategies available:
 40942                           ; Name         Instructions Cycles
 40943                           ; simple_byte           19    10 (average)
 40944                           ;	Chosen strategy is simple_byte
 40945  012898  0A00               	xorlw	0	; case 0
 40946  01289A  B4D8               	btfsc	status,2,c
 40947  01289C  0012               	return	
 40948  01289E  0A10               	xorlw	16	; case 16
 40949  0128A0  B4D8               	btfsc	status,2,c
 40950  0128A2  D7B7               	goto	l2268
 40951  0128A4  0A01               	xorlw	1	; case 17
 40952  0128A6  B4D8               	btfsc	status,2,c
 40953  0128A8  D7BB               	goto	l2269
 40954  0128AA  0A03               	xorlw	3	; case 18
 40955  0128AC  B4D8               	btfsc	status,2,c
 40956  0128AE  D7C2               	goto	l2270
 40957  0128B0  0A01               	xorlw	1	; case 19
 40958  0128B2  B4D8               	btfsc	status,2,c
 40959  0128B4  D7C9               	goto	l2271
 40960  0128B6  0A33               	xorlw	51	; case 32
 40961  0128B8  B4D8               	btfsc	status,2,c
 40962  0128BA  D7CD               	goto	l2272
 40963  0128BC  D7DC               	goto	l2273
 40964  0128BE                     __end_of_api_prepare:
 40965                           	opt stack 0
 40966                           tosu	equ	0xFFF
 40967                           tosh	equ	0xFFE
 40968                           tosl	equ	0xFFD
 40969                           pclath	equ	0xFFA
 40970                           tblptru	equ	0xFF8
 40971                           tblptrh	equ	0xFF7
 40972                           tblptrl	equ	0xFF6
 40973                           tablat	equ	0xFF5
 40974                           prodh	equ	0xFF4
 40975                           prodl	equ	0xFF3
 40976                           intcon	equ	0xFF2
 40977                           postinc0	equ	0xFEE
 40978                           wreg	equ	0xFE8
 40979                           indf1	equ	0xFE7
 40980                           postinc1	equ	0xFE6
 40981                           postdec1	equ	0xFE5
 40982                           plusw1	equ	0xFE3
 40983                           fsr1h	equ	0xFE2
 40984                           fsr1l	equ	0xFE1
 40985                           indf2	equ	0xFDF
 40986                           postinc2	equ	0xFDE
 40987                           postdec2	equ	0xFDD
 40988                           plusw2	equ	0xFDB
 40989                           fsr2h	equ	0xFDA
 40990                           fsr2l	equ	0xFD9
 40991                           status	equ	0xFD8
 40992                           
 40993 ;; *************** function __fill_buffer_get_status *****************
 40994 ;; Defined at:
 40995 ;;		line 171 in file "api.c"
 40996 ;; Parameters:    Size  Location     Type
 40997 ;;  outBuffer       2   11[BANK0 ] PTR unsigned char 
 40998 ;;		 -> ToSendDataBuffer(64), 
 40999 ;; Auto vars:     Size  Location     Type
 41000 ;;		None
 41001 ;; Return value:  Size  Location     Type
 41002 ;;                  1    wreg      void 
 41003 ;; Registers used:
 41004 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 41005 ;; Tracked objects:
 41006 ;;		On entry : 0/0
 41007 ;;		On exit  : 0/0
 41008 ;;		Unchanged: 0/0
 41009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41010 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41013 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41014 ;;Total ram usage:        2 bytes
 41015 ;; Hardware stack levels used:    1
 41016 ;; Hardware stack levels required when called:   11
 41017 ;; This function calls:
 41018 ;;		_memcpy
 41019 ;; This function is called by:
 41020 ;;		_api_prepare
 41021 ;; This function uses a non-reentrant model
 41022 ;;
 41023                           
 41024                           	psect	text165
 41025  00E69C                     __ptext165:
 41026                           	opt stack 0
 41027  00E69C                     __fill_buffer_get_status:
 41028                           	opt stack 17
 41029                           
 41030                           ;api.c: 174: outBuffer[0] = DATAREQUEST_GET_STATUS;
 41031                           
 41032                           ;incstack = 0
 41033  00E69C  C06B  FFD9         	movff	__fill_buffer_get_status@outBuffer,fsr2l
 41034  00E6A0  C06C  FFDA         	movff	__fill_buffer_get_status@outBuffer+1,fsr2h
 41035  00E6A4  0E10               	movlw	16
 41036  00E6A6  6EDF               	movwf	indf2,c
 41037                           
 41038                           ;api.c: 177: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 41039  00E6A8  0100               	movlb	0	; () banked
 41040  00E6AA  EE20 F001          	lfsr	2,1
 41041  00E6AE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41042  00E6B0  26D9               	addwf	fsr2l,f,c
 41043  00E6B2  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41044  00E6B4  22DA               	addwfc	fsr2h,f,c
 41045  00E6B6  0EBC               	movlw	188
 41046  00E6B8  6EDF               	movwf	indf2,c
 41047                           
 41048                           ; BSR set to: 0
 41049                           ;api.c: 178: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 41050  00E6BA  EE20 F002          	lfsr	2,2
 41051  00E6BE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41052  00E6C0  26D9               	addwf	fsr2l,f,c
 41053  00E6C2  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41054  00E6C4  22DA               	addwfc	fsr2h,f,c
 41055  00E6C6  0E26               	movlw	38
 41056  00E6C8  6EDF               	movwf	indf2,c
 41057                           
 41058                           ; BSR set to: 0
 41059                           ;api.c: 181: outBuffer[3] = 0x00;
 41060  00E6CA  EE20 F003          	lfsr	2,3
 41061  00E6CE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41062  00E6D0  26D9               	addwf	fsr2l,f,c
 41063  00E6D2  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41064  00E6D4  22DA               	addwfc	fsr2h,f,c
 41065  00E6D6  0E00               	movlw	0
 41066  00E6D8  6EDF               	movwf	indf2,c
 41067                           
 41068                           ; BSR set to: 0
 41069                           ;api.c: 182: outBuffer[4] = 0x06;
 41070  00E6DA  EE20 F004          	lfsr	2,4
 41071  00E6DE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41072  00E6E0  26D9               	addwf	fsr2l,f,c
 41073  00E6E2  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41074  00E6E4  22DA               	addwfc	fsr2h,f,c
 41075  00E6E6  0E06               	movlw	6
 41076  00E6E8  6EDF               	movwf	indf2,c
 41077                           
 41078                           ; BSR set to: 0
 41079                           ;api.c: 183: outBuffer[5] = 0x04;
 41080  00E6EA  EE20 F005          	lfsr	2,5
 41081  00E6EE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41082  00E6F0  26D9               	addwf	fsr2l,f,c
 41083  00E6F2  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41084  00E6F4  22DA               	addwfc	fsr2h,f,c
 41085  00E6F6  0E04               	movlw	4
 41086  00E6F8  6EDF               	movwf	indf2,c
 41087                           
 41088                           ; BSR set to: 0
 41089                           ;api.c: 186: outBuffer[6] = os.subTimeSlot;
 41090  00E6FA  EE20 F006          	lfsr	2,6
 41091  00E6FE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41092  00E700  26D9               	addwf	fsr2l,f,c
 41093  00E702  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41094  00E704  22DA               	addwfc	fsr2h,f,c
 41095  00E706  C165  FFDF         	movff	_os,indf2	;volatile
 41096                           
 41097                           ; BSR set to: 0
 41098                           ;api.c: 187: outBuffer[7] = os.timeSlot;
 41099  00E70A  EE20 F007          	lfsr	2,7
 41100  00E70E  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41101  00E710  26D9               	addwf	fsr2l,f,c
 41102  00E712  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41103  00E714  22DA               	addwfc	fsr2h,f,c
 41104  00E716  C166  FFDF         	movff	_os+1,indf2	;volatile
 41105                           
 41106                           ; BSR set to: 0
 41107                           ;api.c: 188: outBuffer[8] = os.done;
 41108  00E71A  EE20 F008          	lfsr	2,8
 41109  00E71E  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41110  00E720  26D9               	addwf	fsr2l,f,c
 41111  00E722  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41112  00E724  22DA               	addwfc	fsr2h,f,c
 41113  00E726  C167  FFDF         	movff	_os+2,indf2	;volatile
 41114                           
 41115                           ; BSR set to: 0
 41116                           ;api.c: 189: outBuffer[9] = os.encoder1Count;
 41117  00E72A  EE20 F009          	lfsr	2,9
 41118  00E72E  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41119  00E730  26D9               	addwf	fsr2l,f,c
 41120  00E732  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41121  00E734  22DA               	addwfc	fsr2h,f,c
 41122  00E736  C168  FFDF         	movff	_os+3,indf2	;volatile
 41123                           
 41124                           ; BSR set to: 0
 41125                           ;api.c: 190: outBuffer[10] = os.button1;
 41126  00E73A  EE20 F00A          	lfsr	2,10
 41127  00E73E  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41128  00E740  26D9               	addwf	fsr2l,f,c
 41129  00E742  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41130  00E744  22DA               	addwfc	fsr2h,f,c
 41131  00E746  C169  FFDF         	movff	_os+4,indf2	;volatile
 41132                           
 41133                           ; BSR set to: 0
 41134                           ;api.c: 191: outBuffer[11] = os.encoder2Count;
 41135  00E74A  EE20 F00B          	lfsr	2,11
 41136  00E74E  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41137  00E750  26D9               	addwf	fsr2l,f,c
 41138  00E752  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41139  00E754  22DA               	addwfc	fsr2h,f,c
 41140  00E756  C16A  FFDF         	movff	_os+5,indf2	;volatile
 41141                           
 41142                           ; BSR set to: 0
 41143                           ;api.c: 192: outBuffer[12] = os.button2;
 41144  00E75A  EE20 F00C          	lfsr	2,12
 41145  00E75E  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41146  00E760  26D9               	addwf	fsr2l,f,c
 41147  00E762  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41148  00E764  22DA               	addwfc	fsr2h,f,c
 41149  00E766  C16B  FFDF         	movff	_os+6,indf2	;volatile
 41150                           
 41151                           ; BSR set to: 0
 41152                           ;api.c: 193: memcpy(&outBuffer[13], &os.current_position_in_steps, 4);
 41153  00E76A  0E0D               	movlw	13
 41154  00E76C  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41155  00E76E  6F60               	movwf	memcpy@d1& (0+255),b
 41156  00E770  0E00               	movlw	0
 41157  00E772  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41158  00E774  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 41159  00E776  0E6C               	movlw	low (_os+7)
 41160  00E778  6F62               	movwf	memcpy@s1& (0+255),b
 41161  00E77A  0E01               	movlw	high (_os+7)
 41162  00E77C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 41163  00E77E  0E00               	movlw	0
 41164  00E780  6F65               	movwf	(memcpy@n+1)& (0+255),b
 41165  00E782  0E04               	movlw	4
 41166  00E784  6F64               	movwf	memcpy@n& (0+255),b
 41167  00E786  ECAC  F0A5         	call	_memcpy	;wreg free
 41168                           
 41169                           ;api.c: 198: memcpy(&outBuffer[17], &os.current_position_in_degrees, 4);
 41170  00E78A  0E11               	movlw	17
 41171  00E78C  0100               	movlb	0	; () banked
 41172  00E78E  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41173  00E790  6F60               	movwf	memcpy@d1& (0+255),b
 41174  00E792  0E00               	movlw	0
 41175  00E794  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41176  00E796  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 41177  00E798  0E72               	movlw	low (_os+13)
 41178  00E79A  6F62               	movwf	memcpy@s1& (0+255),b
 41179  00E79C  0E01               	movlw	high (_os+13)
 41180  00E79E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 41181  00E7A0  0E00               	movlw	0
 41182  00E7A2  6F65               	movwf	(memcpy@n+1)& (0+255),b
 41183  00E7A4  0E04               	movlw	4
 41184  00E7A6  6F64               	movwf	memcpy@n& (0+255),b
 41185  00E7A8  ECAC  F0A5         	call	_memcpy	;wreg free
 41186                           
 41187                           ;api.c: 203: outBuffer[21] = os.displayState;
 41188  00E7AC  0100               	movlb	0	; () banked
 41189  00E7AE  EE20 F015          	lfsr	2,21
 41190  00E7B2  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41191  00E7B4  26D9               	addwf	fsr2l,f,c
 41192  00E7B6  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41193  00E7B8  22DA               	addwfc	fsr2h,f,c
 41194  00E7BA  C174  FFDF         	movff	_os+15,indf2	;volatile
 41195                           
 41196                           ; BSR set to: 0
 41197                           ;api.c: 204: outBuffer[22] = os.beep_count;
 41198  00E7BE  EE20 F016          	lfsr	2,22
 41199  00E7C2  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41200  00E7C4  26D9               	addwf	fsr2l,f,c
 41201  00E7C6  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41202  00E7C8  22DA               	addwfc	fsr2h,f,c
 41203  00E7CA  C18C  FFDF         	movff	_os+39,indf2	;volatile
 41204                           
 41205                           ; BSR set to: 0
 41206                           ;api.c: 205: outBuffer[23] = ((unsigned char)((os.temperature[TEMPERATURE_SOURCE_INTERNA
      +                          L])&0xFF));
 41207  00E7CE  EE20 F017          	lfsr	2,23
 41208  00E7D2  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41209  00E7D4  26D9               	addwf	fsr2l,f,c
 41210  00E7D6  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41211  00E7D8  22DA               	addwfc	fsr2h,f,c
 41212  00E7DA  C18D  FFDF         	movff	_os+40,indf2	;volatile
 41213                           
 41214                           ; BSR set to: 0
 41215                           ;api.c: 206: outBuffer[24] = ((unsigned char)(((os.temperature[TEMPERATURE_SOURCE_INTERN
      +                          AL])>>8)&0xFF));
 41216  00E7DE  EE20 F018          	lfsr	2,24
 41217  00E7E2  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41218  00E7E4  26D9               	addwf	fsr2l,f,c
 41219  00E7E6  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41220  00E7E8  22DA               	addwfc	fsr2h,f,c
 41221  00E7EA  0101               	movlb	1	; () banked
 41222  00E7EC  518E               	movf	(_os+41)& (0+255),w,b	;volatile
 41223  00E7EE  6EDF               	movwf	indf2,c
 41224                           
 41225                           ; BSR set to: 1
 41226                           ;api.c: 207: outBuffer[25] = ((unsigned char)((os.temperature[TEMPERATURE_SOURCE_EXTERNA
      +                          L])&0xFF));
 41227  00E7F0  0100               	movlb	0	; () banked
 41228  00E7F2  EE20 F019          	lfsr	2,25
 41229  00E7F6  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41230  00E7F8  26D9               	addwf	fsr2l,f,c
 41231  00E7FA  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41232  00E7FC  22DA               	addwfc	fsr2h,f,c
 41233  00E7FE  C18F  FFDF         	movff	_os+42,indf2	;volatile
 41234                           
 41235                           ; BSR set to: 0
 41236                           ;api.c: 208: outBuffer[26] = ((unsigned char)(((os.temperature[TEMPERATURE_SOURCE_EXTERN
      +                          AL])>>8)&0xFF));
 41237  00E802  EE20 F01A          	lfsr	2,26
 41238  00E806  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41239  00E808  26D9               	addwf	fsr2l,f,c
 41240  00E80A  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41241  00E80C  22DA               	addwfc	fsr2h,f,c
 41242  00E80E  0101               	movlb	1	; () banked
 41243  00E810  5190               	movf	(_os+43)& (0+255),w,b	;volatile
 41244  00E812  6EDF               	movwf	indf2,c
 41245                           
 41246                           ; BSR set to: 1
 41247                           ;api.c: 209: outBuffer[27] = os.fan_on;
 41248  00E814  0100               	movlb	0	; () banked
 41249  00E816  EE20 F01B          	lfsr	2,27
 41250  00E81A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41251  00E81C  26D9               	addwf	fsr2l,f,c
 41252  00E81E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41253  00E820  22DA               	addwfc	fsr2h,f,c
 41254  00E822  C194  FFDF         	movff	_os+47,indf2	;volatile
 41255                           
 41256                           ; BSR set to: 0
 41257                           ;api.c: 210: outBuffer[28] = os.brake_on;
 41258  00E826  EE20 F01C          	lfsr	2,28
 41259  00E82A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41260  00E82C  26D9               	addwf	fsr2l,f,c
 41261  00E82E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41262  00E830  22DA               	addwfc	fsr2h,f,c
 41263  00E832  C195  FFDF         	movff	_os+48,indf2	;volatile
 41264                           
 41265                           ; BSR set to: 0
 41266                           ;api.c: 211: outBuffer[29] = os.busy;
 41267  00E836  EE20 F01D          	lfsr	2,29
 41268  00E83A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41269  00E83C  26D9               	addwf	fsr2l,f,c
 41270  00E83E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41271  00E840  22DA               	addwfc	fsr2h,f,c
 41272  00E842  C175  FFDF         	movff	_os+16,indf2	;volatile
 41273                           
 41274                           ; BSR set to: 0
 41275                           ;api.c: 213: outBuffer[30] = ((unsigned char)((os.manual_speed)&0xFF));
 41276  00E846  EE20 F01E          	lfsr	2,30
 41277  00E84A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41278  00E84C  26D9               	addwf	fsr2l,f,c
 41279  00E84E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41280  00E850  22DA               	addwfc	fsr2h,f,c
 41281  00E852  C189  FFDF         	movff	_os+36,indf2	;volatile
 41282                           
 41283                           ; BSR set to: 0
 41284                           ;api.c: 214: outBuffer[31] = ((unsigned char)(((os.manual_speed)>>8)&0xFF));
 41285  00E856  EE20 F01F          	lfsr	2,31
 41286  00E85A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41287  00E85C  26D9               	addwf	fsr2l,f,c
 41288  00E85E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41289  00E860  22DA               	addwfc	fsr2h,f,c
 41290  00E862  0101               	movlb	1	; () banked
 41291  00E864  518A               	movf	(_os+37)& (0+255),w,b	;volatile
 41292  00E866  6EDF               	movwf	indf2,c
 41293                           
 41294                           ; BSR set to: 1
 41295                           ;api.c: 215: outBuffer[32] = ((unsigned char)((os.absolute_position)&0xFF));
 41296  00E868  0100               	movlb	0	; () banked
 41297  00E86A  EE20 F020          	lfsr	2,32
 41298  00E86E  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41299  00E870  26D9               	addwf	fsr2l,f,c
 41300  00E872  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41301  00E874  22DA               	addwfc	fsr2h,f,c
 41302  00E876  C170  FFDF         	movff	_os+11,indf2	;volatile
 41303                           
 41304                           ; BSR set to: 0
 41305                           ;api.c: 216: outBuffer[33] = ((unsigned char)(((os.absolute_position)>>8)&0xFF));
 41306  00E87A  EE20 F021          	lfsr	2,33
 41307  00E87E  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41308  00E880  26D9               	addwf	fsr2l,f,c
 41309  00E882  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41310  00E884  22DA               	addwfc	fsr2h,f,c
 41311  00E886  0101               	movlb	1	; () banked
 41312  00E888  5171               	movf	(_os+12)& (0+255),w,b	;volatile
 41313  00E88A  6EDF               	movwf	indf2,c
 41314                           
 41315                           ; BSR set to: 1
 41316                           ;api.c: 218: outBuffer[34] = config.position_display_180;
 41317  00E88C  0100               	movlb	0	; () banked
 41318  00E88E  EE20 F022          	lfsr	2,34
 41319  00E892  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41320  00E894  26D9               	addwf	fsr2l,f,c
 41321  00E896  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41322  00E898  22DA               	addwfc	fsr2h,f,c
 41323  00E89A  C1BE  FFDF         	movff	_config+40,indf2
 41324                           
 41325                           ; BSR set to: 0
 41326                           ;api.c: 232: memcpy(&outBuffer[42], &config, 22);
 41327  00E89E  0E2A               	movlw	42
 41328  00E8A0  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 41329  00E8A2  6F60               	movwf	memcpy@d1& (0+255),b
 41330  00E8A4  0E00               	movlw	0
 41331  00E8A6  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 41332  00E8A8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 41333  00E8AA  0E96               	movlw	low _config
 41334  00E8AC  6F62               	movwf	memcpy@s1& (0+255),b
 41335  00E8AE  0E01               	movlw	high _config
 41336  00E8B0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 41337  00E8B2  0E00               	movlw	0
 41338  00E8B4  6F65               	movwf	(memcpy@n+1)& (0+255),b
 41339  00E8B6  0E16               	movlw	22
 41340  00E8B8  6F64               	movwf	memcpy@n& (0+255),b
 41341  00E8BA  ECAC  F0A5         	call	_memcpy	;wreg free
 41342  00E8BE  0012               	return		;funcret
 41343  00E8C0                     __end_of__fill_buffer_get_status:
 41344                           	opt stack 0
 41345                           tosu	equ	0xFFF
 41346                           tosh	equ	0xFFE
 41347                           tosl	equ	0xFFD
 41348                           pclath	equ	0xFFA
 41349                           tblptru	equ	0xFF8
 41350                           tblptrh	equ	0xFF7
 41351                           tblptrl	equ	0xFF6
 41352                           tablat	equ	0xFF5
 41353                           prodh	equ	0xFF4
 41354                           prodl	equ	0xFF3
 41355                           intcon	equ	0xFF2
 41356                           postinc0	equ	0xFEE
 41357                           wreg	equ	0xFE8
 41358                           indf1	equ	0xFE7
 41359                           postinc1	equ	0xFE6
 41360                           postdec1	equ	0xFE5
 41361                           plusw1	equ	0xFE3
 41362                           fsr1h	equ	0xFE2
 41363                           fsr1l	equ	0xFE1
 41364                           indf2	equ	0xFDF
 41365                           postinc2	equ	0xFDE
 41366                           postdec2	equ	0xFDD
 41367                           plusw2	equ	0xFDB
 41368                           fsr2h	equ	0xFDA
 41369                           fsr2l	equ	0xFD9
 41370                           status	equ	0xFD8
 41371                           
 41372 ;; *************** function _memcpy *****************
 41373 ;; Defined at:
 41374 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 41375 ;; Parameters:    Size  Location     Type
 41376 ;;  d1              2    0[BANK0 ] PTR void 
 41377 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), i2c_eeprom_save_position@b
      +uffer(11), 
 41378 ;;		 -> os.divide_position(2), os.division(2), os.absolute_position(2), os.current_position_in_steps(4), 
 41379 ;;		 -> ToSendDataBuffer(64), os(49), msd_buffer(512), SetupPkt(8), 
 41380 ;;  s1              2    2[BANK0 ] PTR const void 
 41381 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 41382 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 41383 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 41384 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 41385 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main(80), dc_startup(80), 
 41386 ;;		 -> i2c_eeprom_recover_position@buffer(11), config(41), os.current_position_in_degrees(2), os.current_position_in_st
      +eps(4), 
 41387 ;;		 -> ReceivedDataBuffer(64), os(49), inq_resp(36), RAM(3759), 
 41388 ;;  n               2    4[BANK0 ] unsigned int 
 41389 ;; Auto vars:     Size  Location     Type
 41390 ;;  s               2    8[BANK0 ] PTR const unsigned char 
 41391 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 41392 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 41393 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 41394 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 41395 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main(80), dc_startup(80), 
 41396 ;;		 -> i2c_eeprom_recover_position@buffer(11), config(41), os.current_position_in_degrees(2), os.current_position_in_st
      +eps(4), 
 41397 ;;		 -> ReceivedDataBuffer(64), os(49), inq_resp(36), RAM(3759), 
 41398 ;;  d               2    6[BANK0 ] PTR unsigned char 
 41399 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), i2c_eeprom_save_position@b
      +uffer(11), 
 41400 ;;		 -> os.divide_position(2), os.division(2), os.absolute_position(2), os.current_position_in_steps(4), 
 41401 ;;		 -> ToSendDataBuffer(64), os(49), msd_buffer(512), SetupPkt(8), 
 41402 ;;  tmp             1   10[BANK0 ] unsigned char 
 41403 ;; Return value:  Size  Location     Type
 41404 ;;                  2    0[BANK0 ] PTR void 
 41405 ;; Registers used:
 41406 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 41407 ;; Tracked objects:
 41408 ;;		On entry : 0/0
 41409 ;;		On exit  : 0/0
 41410 ;;		Unchanged: 0/0
 41411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41412 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41413 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41415 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41416 ;;Total ram usage:       11 bytes
 41417 ;; Hardware stack levels used:    1
 41418 ;; Hardware stack levels required when called:   10
 41419 ;; This function calls:
 41420 ;;		Nothing
 41421 ;; This function is called by:
 41422 ;;		_MSDProcessCommandMediaPresent
 41423 ;;		_i2c_eeprom_recover_position
 41424 ;;		__display_start
 41425 ;;		_display_prepare
 41426 ;;		__flash_set_page_size
 41427 ;;		_fat_create_file
 41428 ;;		_api_prepare
 41429 ;;		__fill_buffer_get_status
 41430 ;; This function uses a non-reentrant model
 41431 ;;
 41432                           
 41433                           	psect	text166
 41434  014B58                     __ptext166:
 41435                           	opt stack 0
 41436  014B58                     _memcpy:
 41437                           	opt stack 18
 41438                           
 41439                           ;incstack = 0
 41440  014B58  C062  F068         	movff	memcpy@s1,memcpy@s
 41441  014B5C  C063  F069         	movff	memcpy@s1+1,memcpy@s+1
 41442  014B60  C060  F066         	movff	memcpy@d1,memcpy@d
 41443  014B64  C061  F067         	movff	memcpy@d1+1,memcpy@d+1
 41444  014B68  D01D               	goto	l3816
 41445  014B6A                     l13070:
 41446  014B6A  C068  FFF6         	movff	memcpy@s,tblptrl
 41447  014B6E  C069  FFF7         	movff	memcpy@s+1,tblptrh
 41448  014B72  0E00               	movlw	low (__mediumconst shr (0+16))
 41449  014B74  6EF8               	movwf	tblptru,c
 41450  014B76  0E0E               	movlw	(high __ramtop+-1)
 41451  014B78  64F7               	cpfsgt	tblptrh,c
 41452  014B7A  D003               	bra	u11167
 41453  014B7C  0008               	tblrd		*
 41454  014B7E  50F5               	movf	tablat,w,c
 41455  014B80  D005               	bra	u11160
 41456  014B82                     u11167:
 41457  014B82  CFF6 FFE9          	movff	tblptrl,fsr0l
 41458  014B86  CFF7 FFEA          	movff	tblptrh,fsr0h
 41459  014B8A  50EF               	movf	indf0,w,c
 41460  014B8C                     u11160:
 41461  014B8C  0100               	movlb	0	; () banked
 41462  014B8E  6F6A               	movwf	memcpy@tmp& (0+255),b
 41463                           
 41464                           ; BSR set to: 0
 41465  014B90  4B68               	infsnz	memcpy@s& (0+255),f,b
 41466  014B92  2B69               	incf	(memcpy@s+1)& (0+255),f,b
 41467                           
 41468                           ; BSR set to: 0
 41469  014B94  C066  FFD9         	movff	memcpy@d,fsr2l
 41470  014B98  C067  FFDA         	movff	memcpy@d+1,fsr2h
 41471  014B9C  C06A  FFDF         	movff	memcpy@tmp,indf2
 41472                           
 41473                           ; BSR set to: 0
 41474  014BA0  4B66               	infsnz	memcpy@d& (0+255),f,b
 41475  014BA2  2B67               	incf	(memcpy@d+1)& (0+255),f,b
 41476  014BA4                     l3816:
 41477                           
 41478                           ; BSR set to: 0
 41479  014BA4  0100               	movlb	0	; () banked
 41480  014BA6  0764               	decf	memcpy@n& (0+255),f,b
 41481  014BA8  A0D8               	btfss	status,0,c
 41482  014BAA  0765               	decf	(memcpy@n+1)& (0+255),f,b
 41483  014BAC  2964               	incf	memcpy@n& (0+255),w,b
 41484  014BAE  E1DD               	bnz	l13070
 41485  014BB0  2965               	incf	(memcpy@n+1)& (0+255),w,b
 41486  014BB2  B4D8               	btfsc	status,2,c
 41487  014BB4  0012               	return	
 41488  014BB6  D7D9               	goto	l3817
 41489  014BB8                     __end_of_memcpy:
 41490                           	opt stack 0
 41491                           tosu	equ	0xFFF
 41492                           tosh	equ	0xFFE
 41493                           tosl	equ	0xFFD
 41494                           pclath	equ	0xFFA
 41495                           tblptru	equ	0xFF8
 41496                           tblptrh	equ	0xFF7
 41497                           tblptrl	equ	0xFF6
 41498                           tablat	equ	0xFF5
 41499                           prodh	equ	0xFF4
 41500                           prodl	equ	0xFF3
 41501                           intcon	equ	0xFF2
 41502                           indf0	equ	0xFEF
 41503                           postinc0	equ	0xFEE
 41504                           fsr0h	equ	0xFEA
 41505                           fsr0l	equ	0xFE9
 41506                           wreg	equ	0xFE8
 41507                           indf1	equ	0xFE7
 41508                           postinc1	equ	0xFE6
 41509                           postdec1	equ	0xFE5
 41510                           plusw1	equ	0xFE3
 41511                           fsr1h	equ	0xFE2
 41512                           fsr1l	equ	0xFE1
 41513                           indf2	equ	0xFDF
 41514                           postinc2	equ	0xFDE
 41515                           postdec2	equ	0xFDD
 41516                           plusw2	equ	0xFDB
 41517                           fsr2h	equ	0xFDA
 41518                           fsr2l	equ	0xFD9
 41519                           status	equ	0xFD8
 41520                           
 41521 ;; *************** function __fill_buffer_get_mode_details *****************
 41522 ;; Defined at:
 41523 ;;		line 277 in file "api.c"
 41524 ;; Parameters:    Size  Location     Type
 41525 ;;  outBuffer       2    0[BANK0 ] PTR unsigned char 
 41526 ;;		 -> ToSendDataBuffer(64), 
 41527 ;; Auto vars:     Size  Location     Type
 41528 ;;		None
 41529 ;; Return value:  Size  Location     Type
 41530 ;;                  1    wreg      void 
 41531 ;; Registers used:
 41532 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 41533 ;; Tracked objects:
 41534 ;;		On entry : 0/0
 41535 ;;		On exit  : 0/0
 41536 ;;		Unchanged: 0/0
 41537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41538 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41540 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41541 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41542 ;;Total ram usage:        4 bytes
 41543 ;; Hardware stack levels used:    1
 41544 ;; Hardware stack levels required when called:   10
 41545 ;; This function calls:
 41546 ;;		Nothing
 41547 ;; This function is called by:
 41548 ;;		_api_prepare
 41549 ;; This function uses a non-reentrant model
 41550 ;;
 41551                           
 41552                           	psect	text167
 41553  00F1E6                     __ptext167:
 41554                           	opt stack 0
 41555  00F1E6                     __fill_buffer_get_mode_details:
 41556                           	opt stack 18
 41557                           
 41558                           ;api.c: 280: outBuffer[0] = DATAREQUEST_GET_MODE_DETAILS;
 41559                           
 41560                           ; BSR set to: 0
 41561                           ;incstack = 0
 41562  00F1E6  C060  FFD9         	movff	__fill_buffer_get_mode_details@outBuffer,fsr2l
 41563  00F1EA  C061  FFDA         	movff	__fill_buffer_get_mode_details@outBuffer+1,fsr2h
 41564  00F1EE  0E13               	movlw	19
 41565  00F1F0  6EDF               	movwf	indf2,c
 41566                           
 41567                           ;api.c: 283: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 41568  00F1F2  0100               	movlb	0	; () banked
 41569  00F1F4  EE20 F001          	lfsr	2,1
 41570  00F1F8  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41571  00F1FA  26D9               	addwf	fsr2l,f,c
 41572  00F1FC  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41573  00F1FE  22DA               	addwfc	fsr2h,f,c
 41574  00F200  0EBC               	movlw	188
 41575  00F202  6EDF               	movwf	indf2,c
 41576                           
 41577                           ; BSR set to: 0
 41578                           ;api.c: 284: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 41579  00F204  EE20 F002          	lfsr	2,2
 41580  00F208  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41581  00F20A  26D9               	addwf	fsr2l,f,c
 41582  00F20C  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41583  00F20E  22DA               	addwfc	fsr2h,f,c
 41584  00F210  0E26               	movlw	38
 41585  00F212  6EDF               	movwf	indf2,c
 41586                           
 41587                           ; BSR set to: 0
 41588                           ;api.c: 287: outBuffer[3] = os.displayState;
 41589  00F214  EE20 F003          	lfsr	2,3
 41590  00F218  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41591  00F21A  26D9               	addwf	fsr2l,f,c
 41592  00F21C  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41593  00F21E  22DA               	addwfc	fsr2h,f,c
 41594  00F220  C174  FFDF         	movff	_os+15,indf2	;volatile
 41595                           
 41596                           ;api.c: 289: switch(os.displayState & 0x0F)
 41597  00F224  D090               	goto	l2308
 41598  00F226                     
 41599                           ; BSR set to: 0
 41600                           ;api.c: 295: case DISPLAY_STATE_SETUP2:;api.c: 296: outBuffer[4] = os.setup_step_size;
 41601                           
 41602                           ; BSR set to: 0
 41603                           
 41604                           ; BSR set to: 0
 41605  00F226  EE20 F004          	lfsr	2,4
 41606  00F22A  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41607  00F22C  26D9               	addwf	fsr2l,f,c
 41608  00F22E  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41609  00F230  22DA               	addwfc	fsr2h,f,c
 41610  00F232  C176  FFDF         	movff	_os+17,indf2	;volatile
 41611                           
 41612                           ;api.c: 297: break;
 41613  00F236  0012               	return	
 41614  00F238                     
 41615                           ; BSR set to: 0
 41616                           ;api.c: 300: case DISPLAY_STATE_DIVIDE2:;api.c: 302: outBuffer[4] = os.divide_step_size;
 41617                           
 41618                           ; BSR set to: 0
 41619                           
 41620                           ; BSR set to: 0
 41621  00F238  EE20 F004          	lfsr	2,4
 41622  00F23C  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41623  00F23E  26D9               	addwf	fsr2l,f,c
 41624  00F240  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41625  00F242  22DA               	addwfc	fsr2h,f,c
 41626  00F244  C17B  FFDF         	movff	_os+22,indf2	;volatile
 41627                           
 41628                           ;api.c: 303: outBuffer[5] = ((unsigned char)(((os.division)>>8)&0xFF));
 41629  00F248  EE20 F005          	lfsr	2,5
 41630  00F24C  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41631  00F24E  26D9               	addwf	fsr2l,f,c
 41632  00F250  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41633  00F252  22DA               	addwfc	fsr2h,f,c
 41634  00F254  0101               	movlb	1	; () banked
 41635  00F256  517A               	movf	(_os+21)& (0+255),w,b	;volatile
 41636  00F258  6EDF               	movwf	indf2,c
 41637                           
 41638                           ;api.c: 304: outBuffer[6] = ((unsigned char)((os.division)&0xFF));
 41639  00F25A  0100               	movlb	0	; () banked
 41640  00F25C  EE20 F006          	lfsr	2,6
 41641  00F260  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41642  00F262  26D9               	addwf	fsr2l,f,c
 41643  00F264  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41644  00F266  22DA               	addwfc	fsr2h,f,c
 41645  00F268  C179  FFDF         	movff	_os+20,indf2	;volatile
 41646                           
 41647                           ;api.c: 305: outBuffer[7] = ((unsigned char)(((os.divide_jump_size)>>8)&0xFF));
 41648  00F26C  EE20 F007          	lfsr	2,7
 41649  00F270  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41650  00F272  26D9               	addwf	fsr2l,f,c
 41651  00F274  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41652  00F276  22DA               	addwfc	fsr2h,f,c
 41653  00F278  0101               	movlb	1	; () banked
 41654  00F27A  517F               	movf	(_os+26)& (0+255),w,b	;volatile
 41655  00F27C  6EDF               	movwf	indf2,c
 41656                           
 41657                           ;api.c: 306: outBuffer[8] = ((unsigned char)((os.divide_jump_size)&0xFF));
 41658  00F27E  0100               	movlb	0	; () banked
 41659  00F280  EE20 F008          	lfsr	2,8
 41660  00F284  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41661  00F286  26D9               	addwf	fsr2l,f,c
 41662  00F288  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41663  00F28A  22DA               	addwfc	fsr2h,f,c
 41664  00F28C  C17E  FFDF         	movff	_os+25,indf2	;volatile
 41665                           
 41666                           ;api.c: 307: outBuffer[9] = ((unsigned char)(((os.divide_position)>>8)&0xFF));
 41667  00F290  EE20 F009          	lfsr	2,9
 41668  00F294  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41669  00F296  26D9               	addwf	fsr2l,f,c
 41670  00F298  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41671  00F29A  22DA               	addwfc	fsr2h,f,c
 41672  00F29C  0101               	movlb	1	; () banked
 41673  00F29E  517D               	movf	(_os+24)& (0+255),w,b	;volatile
 41674  00F2A0  6EDF               	movwf	indf2,c
 41675                           
 41676                           ;api.c: 308: outBuffer[10] = ((unsigned char)((os.divide_position)&0xFF));
 41677  00F2A2  0100               	movlb	0	; () banked
 41678  00F2A4  EE20 F00A          	lfsr	2,10
 41679  00F2A8  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41680  00F2AA  26D9               	addwf	fsr2l,f,c
 41681  00F2AC  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41682  00F2AE  22DA               	addwfc	fsr2h,f,c
 41683  00F2B0  C17C  FFDF         	movff	_os+23,indf2	;volatile
 41684                           
 41685                           ;api.c: 309: break;
 41686  00F2B4  0012               	return	
 41687  00F2B6                     
 41688                           ; BSR set to: 0
 41689                           ;api.c: 312: case DISPLAY_STATE_ARC2:;api.c: 313: outBuffer[4] = ((unsigned char)(((os.a
      +                          rc_step_size)>>8)&0xFF));
 41690                           
 41691                           ; BSR set to: 0
 41692                           
 41693                           ; BSR set to: 0
 41694  00F2B6  EE20 F004          	lfsr	2,4
 41695  00F2BA  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41696  00F2BC  26D9               	addwf	fsr2l,f,c
 41697  00F2BE  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41698  00F2C0  22DA               	addwfc	fsr2h,f,c
 41699  00F2C2  0101               	movlb	1	; () banked
 41700  00F2C4  5181               	movf	(_os+28)& (0+255),w,b	;volatile
 41701  00F2C6  6EDF               	movwf	indf2,c
 41702                           
 41703                           ;api.c: 314: outBuffer[5] = ((unsigned char)((os.arc_step_size)&0xFF));
 41704  00F2C8  0100               	movlb	0	; () banked
 41705  00F2CA  EE20 F005          	lfsr	2,5
 41706  00F2CE  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41707  00F2D0  26D9               	addwf	fsr2l,f,c
 41708  00F2D2  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41709  00F2D4  22DA               	addwfc	fsr2h,f,c
 41710  00F2D6  C180  FFDF         	movff	_os+27,indf2	;volatile
 41711                           
 41712                           ;api.c: 315: outBuffer[6] = os.arc_direction;
 41713  00F2DA  EE20 F006          	lfsr	2,6
 41714  00F2DE  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41715  00F2E0  26D9               	addwf	fsr2l,f,c
 41716  00F2E2  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41717  00F2E4  22DA               	addwfc	fsr2h,f,c
 41718  00F2E6  C188  FFDF         	movff	_os+35,indf2	;volatile
 41719                           
 41720                           ;api.c: 316: outBuffer[7] = ((unsigned char)(((os.arc_speed)>>8)&0xFF));
 41721  00F2EA  EE20 F007          	lfsr	2,7
 41722  00F2EE  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41723  00F2F0  26D9               	addwf	fsr2l,f,c
 41724  00F2F2  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41725  00F2F4  22DA               	addwfc	fsr2h,f,c
 41726  00F2F6  0101               	movlb	1	; () banked
 41727  00F2F8  5187               	movf	(_os+34)& (0+255),w,b	;volatile
 41728  00F2FA  6EDF               	movwf	indf2,c
 41729                           
 41730                           ;api.c: 317: outBuffer[8] = ((unsigned char)((os.arc_speed)&0xFF));
 41731  00F2FC  0100               	movlb	0	; () banked
 41732  00F2FE  EE20 F008          	lfsr	2,8
 41733  00F302  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41734  00F304  26D9               	addwf	fsr2l,f,c
 41735  00F306  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41736  00F308  22DA               	addwfc	fsr2h,f,c
 41737  00F30A  C186  FFDF         	movff	_os+33,indf2	;volatile
 41738                           
 41739                           ; BSR set to: 0
 41740                           ;api.c: 321: break;
 41741                           
 41742                           ;api.c: 320: case DISPLAY_STATE_ZERO:
 41743                           
 41744                           ;api.c: 318: break;
 41745  00F30E  0012               	return	
 41746  00F310                     
 41747                           ; BSR set to: 0
 41748                           ;api.c: 324: outBuffer[4] = os.manual_direction;
 41749                           
 41750                           ; BSR set to: 0
 41751  00F310  EE20 F004          	lfsr	2,4
 41752  00F314  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41753  00F316  26D9               	addwf	fsr2l,f,c
 41754  00F318  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41755  00F31A  22DA               	addwfc	fsr2h,f,c
 41756  00F31C  C18B  FFDF         	movff	_os+38,indf2	;volatile
 41757                           
 41758                           ;api.c: 325: outBuffer[5] = ((unsigned char)(((os.manual_speed)>>8)&0xFF));
 41759  00F320  EE20 F005          	lfsr	2,5
 41760  00F324  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41761  00F326  26D9               	addwf	fsr2l,f,c
 41762  00F328  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41763  00F32A  22DA               	addwfc	fsr2h,f,c
 41764  00F32C  0101               	movlb	1	; () banked
 41765  00F32E  518A               	movf	(_os+37)& (0+255),w,b	;volatile
 41766  00F330  6EDF               	movwf	indf2,c
 41767                           
 41768                           ;api.c: 326: outBuffer[6] = ((unsigned char)((os.manual_speed)&0xFF));
 41769  00F332  0100               	movlb	0	; () banked
 41770  00F334  EE20 F006          	lfsr	2,6
 41771  00F338  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41772  00F33A  26D9               	addwf	fsr2l,f,c
 41773  00F33C  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41774  00F33E  22DA               	addwfc	fsr2h,f,c
 41775  00F340  C189  FFDF         	movff	_os+36,indf2	;volatile
 41776                           
 41777                           ; BSR set to: 0
 41778                           ;api.c: 328: }
 41779                           
 41780                           ;api.c: 327: break;
 41781  00F344  0012               	return	
 41782  00F346                     l2308:
 41783                           
 41784                           ; BSR set to: 0
 41785                           
 41786                           ; BSR set to: 0
 41787  00F346  0101               	movlb	1	; () banked
 41788  00F348  5174               	movf	(_os+15)& (0+255),w,b	;volatile
 41789  00F34A  0B0F               	andlw	15
 41790  00F34C  0100               	movlb	0	; () banked
 41791  00F34E  6F62               	movwf	??__fill_buffer_get_mode_details& (0+255),b
 41792  00F350  6B63               	clrf	(??__fill_buffer_get_mode_details+1)& (0+255),b
 41793                           
 41794                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 41795                           ; Switch size 1, requested type "space"
 41796                           ; Number of cases is 1, Range of values is 0 to 0
 41797                           ; switch strategies available:
 41798                           ; Name         Instructions Cycles
 41799                           ; simple_byte            4     3 (average)
 41800                           ;	Chosen strategy is simple_byte
 41801  00F352  5163               	movf	(??__fill_buffer_get_mode_details+1)& (0+255),w,b
 41802  00F354  0A00               	xorlw	0	; case 0
 41803  00F356  A4D8               	btfss	status,2,c
 41804  00F358  0012               	return	
 41805                           
 41806                           ; BSR set to: 0
 41807                           ; Switch size 1, requested type "space"
 41808                           ; Number of cases is 9, Range of values is 0 to 128
 41809                           ; switch strategies available:
 41810                           ; Name         Instructions Cycles
 41811                           ; simple_byte           28    15 (average)
 41812                           ;	Chosen strategy is simple_byte
 41813  00F35A  5162               	movf	??__fill_buffer_get_mode_details& (0+255),w,b
 41814  00F35C  0A00               	xorlw	0	; case 0
 41815  00F35E  B4D8               	btfsc	status,2,c
 41816  00F360  0012               	return	
 41817  00F362  0A10               	xorlw	16	; case 16
 41818  00F364  B4D8               	btfsc	status,2,c
 41819  00F366  D75F               	goto	l2311
 41820  00F368  0A30               	xorlw	48	; case 32
 41821  00F36A  B4D8               	btfsc	status,2,c
 41822  00F36C  D75C               	goto	l2311
 41823  00F36E  0A10               	xorlw	16	; case 48
 41824  00F370  B4D8               	btfsc	status,2,c
 41825  00F372  D762               	goto	l2313
 41826  00F374  0A70               	xorlw	112	; case 64
 41827  00F376  B4D8               	btfsc	status,2,c
 41828  00F378  D75F               	goto	l2313
 41829  00F37A  0A10               	xorlw	16	; case 80
 41830  00F37C  B4D8               	btfsc	status,2,c
 41831  00F37E  D79B               	goto	l2315
 41832  00F380  0A30               	xorlw	48	; case 96
 41833  00F382  B4D8               	btfsc	status,2,c
 41834  00F384  D798               	goto	l2315
 41835  00F386  0A10               	xorlw	16	; case 112
 41836  00F388  B4D8               	btfsc	status,2,c
 41837  00F38A  0012               	return	
 41838  00F38C  0AF0               	xorlw	240	; case 128
 41839  00F38E  A4D8               	btfss	status,2,c
 41840  00F390  0012               	return	
 41841  00F392  D7BE               	goto	l2318
 41842  00F394                     __end_of__fill_buffer_get_mode_details:
 41843                           	opt stack 0
 41844                           tosu	equ	0xFFF
 41845                           tosh	equ	0xFFE
 41846                           tosl	equ	0xFFD
 41847                           pclath	equ	0xFFA
 41848                           tblptru	equ	0xFF8
 41849                           tblptrh	equ	0xFF7
 41850                           tblptrl	equ	0xFF6
 41851                           tablat	equ	0xFF5
 41852                           prodh	equ	0xFF4
 41853                           prodl	equ	0xFF3
 41854                           intcon	equ	0xFF2
 41855                           indf0	equ	0xFEF
 41856                           postinc0	equ	0xFEE
 41857                           fsr0h	equ	0xFEA
 41858                           fsr0l	equ	0xFE9
 41859                           wreg	equ	0xFE8
 41860                           indf1	equ	0xFE7
 41861                           postinc1	equ	0xFE6
 41862                           postdec1	equ	0xFE5
 41863                           plusw1	equ	0xFE3
 41864                           fsr1h	equ	0xFE2
 41865                           fsr1l	equ	0xFE1
 41866                           indf2	equ	0xFDF
 41867                           postinc2	equ	0xFDE
 41868                           postdec2	equ	0xFDD
 41869                           plusw2	equ	0xFDB
 41870                           fsr2h	equ	0xFDA
 41871                           fsr2l	equ	0xFD9
 41872                           status	equ	0xFD8
 41873                           
 41874 ;; *************** function __fill_buffer_get_display *****************
 41875 ;; Defined at:
 41876 ;;		line 236 in file "api.c"
 41877 ;; Parameters:    Size  Location     Type
 41878 ;;  outBuffer       2    4[BANK0 ] PTR unsigned char 
 41879 ;;		 -> ToSendDataBuffer(64), 
 41880 ;;  secondHalf      1    6[BANK0 ] unsigned char 
 41881 ;; Auto vars:     Size  Location     Type
 41882 ;;  position        1   15[BANK0 ] unsigned char 
 41883 ;;  start_line      1   14[BANK0 ] unsigned char 
 41884 ;;  line            1   13[BANK0 ] unsigned char 
 41885 ;;  cntr            1   12[BANK0 ] unsigned char 
 41886 ;; Return value:  Size  Location     Type
 41887 ;;                  1    wreg      void 
 41888 ;; Registers used:
 41889 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41890 ;; Tracked objects:
 41891 ;;		On entry : 0/0
 41892 ;;		On exit  : 0/0
 41893 ;;		Unchanged: 0/0
 41894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41895 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41896 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41897 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41898 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41899 ;;Total ram usage:       12 bytes
 41900 ;; Hardware stack levels used:    1
 41901 ;; Hardware stack levels required when called:   11
 41902 ;; This function calls:
 41903 ;;		_display_get_character
 41904 ;; This function is called by:
 41905 ;;		_api_prepare
 41906 ;; This function uses a non-reentrant model
 41907 ;;
 41908                           
 41909                           	psect	text168
 41910  0130A2                     __ptext168:
 41911                           	opt stack 0
 41912  0130A2                     __fill_buffer_get_display:
 41913                           	opt stack 17
 41914                           
 41915                           ;api.c: 238: uint8_t cntr;;api.c: 239: uint8_t line;;api.c: 240: uint8_t start_line;;api
      +                          .c: 241: uint8_t position;;api.c: 244: if(secondHalf)
 41916                           
 41917                           ; BSR set to: 0
 41918                           ;incstack = 0
 41919  0130A2  0100               	movlb	0	; () banked
 41920  0130A4  5166               	movf	__fill_buffer_get_display@secondHalf& (0+255),w,b
 41921  0130A6  B4D8               	btfsc	status,2,c
 41922  0130A8  D006               	goto	l2296
 41923                           
 41924                           ; BSR set to: 0
 41925                           ;api.c: 245: {;api.c: 246: outBuffer[0] = DATAREQUEST_GET_DISPLAY_2;
 41926  0130AA  C064  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 41927  0130AE  C065  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 41928  0130B2  0E12               	movlw	18
 41929  0130B4  D005               	goto	L64
 41930  0130B6                     l2296:
 41931                           
 41932                           ; BSR set to: 0
 41933                           ;api.c: 248: else;api.c: 249: {;api.c: 250: outBuffer[0] = DATAREQUEST_GET_DISPLAY_1;
 41934                           
 41935                           ; BSR set to: 0
 41936  0130B6  C064  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 41937  0130BA  C065  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 41938  0130BE  0E11               	movlw	17
 41939  0130C0                     L64:
 41940  0130C0  6EDF               	movwf	indf2,c
 41941                           
 41942                           ; BSR set to: 0
 41943                           ;api.c: 251: };api.c: 254: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 41944                           
 41945                           ; BSR set to: 0
 41946  0130C2  EE20 F001          	lfsr	2,1
 41947  0130C6  5164               	movf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 41948  0130C8  26D9               	addwf	fsr2l,f,c
 41949  0130CA  5165               	movf	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 41950  0130CC  22DA               	addwfc	fsr2h,f,c
 41951  0130CE  0EBC               	movlw	188
 41952  0130D0  6EDF               	movwf	indf2,c
 41953                           
 41954                           ; BSR set to: 0
 41955                           ;api.c: 255: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 41956  0130D2  EE20 F002          	lfsr	2,2
 41957  0130D6  5164               	movf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 41958  0130D8  26D9               	addwf	fsr2l,f,c
 41959  0130DA  5165               	movf	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 41960  0130DC  22DA               	addwfc	fsr2h,f,c
 41961  0130DE  0E26               	movlw	38
 41962  0130E0  6EDF               	movwf	indf2,c
 41963                           
 41964                           ; BSR set to: 0
 41965                           ;api.c: 258: cntr = 3;
 41966  0130E2  0E03               	movlw	3
 41967  0130E4  6F6C               	movwf	__fill_buffer_get_display@cntr& (0+255),b
 41968                           
 41969                           ; BSR set to: 0
 41970                           ;api.c: 259: if(secondHalf)
 41971  0130E6  5166               	movf	__fill_buffer_get_display@secondHalf& (0+255),w,b
 41972  0130E8  B4D8               	btfsc	status,2,c
 41973  0130EA  D002               	goto	l2298
 41974                           
 41975                           ; BSR set to: 0
 41976                           ;api.c: 260: {;api.c: 261: start_line = 2;
 41977  0130EC  0E02               	movlw	2
 41978  0130EE  D001               	goto	L65
 41979  0130F0                     l2298:
 41980                           
 41981                           ; BSR set to: 0
 41982                           ;api.c: 263: else;api.c: 264: {;api.c: 265: start_line = 0;
 41983                           
 41984                           ; BSR set to: 0
 41985  0130F0  0E00               	movlw	0
 41986  0130F2                     L65:
 41987  0130F2  6F6E               	movwf	__fill_buffer_get_display@start_line& (0+255),b
 41988                           
 41989                           ; BSR set to: 0
 41990                           ;api.c: 266: };api.c: 267: for(line=start_line; line<start_line+2; ++line)
 41991                           
 41992                           ; BSR set to: 0
 41993  0130F4  C06E  F06D         	movff	__fill_buffer_get_display@start_line,__fill_buffer_get_display@line
 41994  0130F8  D01B               	goto	l2300
 41995  0130FA                     
 41996                           ; BSR set to: 0
 41997                           ;api.c: 268: {;api.c: 269: for(position=0; position<20; ++position)
 41998                           
 41999                           ; BSR set to: 0
 42000  0130FA  0E00               	movlw	0
 42001  0130FC  6F6F               	movwf	__fill_buffer_get_display@position& (0+255),b
 42002  0130FE                     l16582:
 42003                           
 42004                           ; BSR set to: 0
 42005  0130FE  0E13               	movlw	19
 42006  013100  656F               	cpfsgt	__fill_buffer_get_display@position& (0+255),b
 42007  013102  D001               	goto	l2302
 42008  013104  D014               	goto	u15750
 42009  013106                     l2302:
 42010                           
 42011                           ; BSR set to: 0
 42012                           ;api.c: 270: {;api.c: 271: outBuffer[cntr] = (uint8_t) display_get_character(line, posit
      +                          ion);
 42013                           
 42014                           ; BSR set to: 0
 42015  013106  C06F  F060         	movff	__fill_buffer_get_display@position,display_get_character@position
 42016  01310A  516D               	movf	__fill_buffer_get_display@line& (0+255),w,b
 42017  01310C  ECB0  F0AD         	call	_display_get_character
 42018  013110  0100               	movlb	0	; () banked
 42019  013112  6F67               	movwf	??__fill_buffer_get_display& (0+255),b
 42020  013114  516C               	movf	__fill_buffer_get_display@cntr& (0+255),w,b
 42021  013116  0D01               	mullw	1
 42022  013118  50F3               	movf	prodl,w,c
 42023  01311A  2564               	addwf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 42024  01311C  6ED9               	movwf	fsr2l,c
 42025  01311E  50F4               	movf	prodh,w,c
 42026  013120  2165               	addwfc	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 42027  013122  6EDA               	movwf	fsr2h,c
 42028  013124  C067  FFDF         	movff	??__fill_buffer_get_display,indf2
 42029                           
 42030                           ; BSR set to: 0
 42031                           ;api.c: 272: ++cntr;
 42032  013128  2B6C               	incf	__fill_buffer_get_display@cntr& (0+255),f,b
 42033                           
 42034                           ; BSR set to: 0
 42035  01312A  2B6F               	incf	__fill_buffer_get_display@position& (0+255),f,b
 42036  01312C  D7E8               	goto	l16582
 42037  01312E                     u15750:
 42038                           
 42039                           ; BSR set to: 0
 42040                           
 42041                           ; BSR set to: 0
 42042  01312E  2B6D               	incf	__fill_buffer_get_display@line& (0+255),f,b
 42043  013130                     l2300:
 42044                           
 42045                           ; BSR set to: 0
 42046                           
 42047                           ; BSR set to: 0
 42048  013130  516E               	movf	__fill_buffer_get_display@start_line& (0+255),w,b
 42049  013132  6F67               	movwf	??__fill_buffer_get_display& (0+255),b
 42050  013134  6B68               	clrf	(??__fill_buffer_get_display+1)& (0+255),b
 42051  013136  0E02               	movlw	2
 42052  013138  2767               	addwf	??__fill_buffer_get_display& (0+255),f,b
 42053  01313A  0E00               	movlw	0
 42054  01313C  2368               	addwfc	(??__fill_buffer_get_display+1)& (0+255),f,b
 42055  01313E  516D               	movf	__fill_buffer_get_display@line& (0+255),w,b
 42056  013140  6F69               	movwf	(??__fill_buffer_get_display+2)& (0+255),b
 42057  013142  6B6A               	clrf	(??__fill_buffer_get_display+3)& (0+255),b
 42058  013144  5167               	movf	??__fill_buffer_get_display& (0+255),w,b
 42059  013146  5D69               	subwf	(??__fill_buffer_get_display+2)& (0+255),w,b
 42060  013148  516A               	movf	(??__fill_buffer_get_display+3)& (0+255),w,b
 42061  01314A  0A80               	xorlw	128
 42062  01314C  6F6B               	movwf	(??__fill_buffer_get_display+4)& (0+255),b
 42063  01314E  5168               	movf	(??__fill_buffer_get_display+1)& (0+255),w,b
 42064  013150  0A80               	xorlw	128
 42065  013152  596B               	subwfb	(??__fill_buffer_get_display+4)& (0+255),w,b
 42066  013154  B0D8               	btfsc	status,0,c
 42067  013156  0012               	return	
 42068  013158  D7D0               	goto	l2301
 42069  01315A                     __end_of__fill_buffer_get_display:
 42070                           	opt stack 0
 42071                           tosu	equ	0xFFF
 42072                           tosh	equ	0xFFE
 42073                           tosl	equ	0xFFD
 42074                           pclath	equ	0xFFA
 42075                           tblptru	equ	0xFF8
 42076                           tblptrh	equ	0xFF7
 42077                           tblptrl	equ	0xFF6
 42078                           tablat	equ	0xFF5
 42079                           prodh	equ	0xFF4
 42080                           prodl	equ	0xFF3
 42081                           intcon	equ	0xFF2
 42082                           indf0	equ	0xFEF
 42083                           postinc0	equ	0xFEE
 42084                           fsr0h	equ	0xFEA
 42085                           fsr0l	equ	0xFE9
 42086                           wreg	equ	0xFE8
 42087                           indf1	equ	0xFE7
 42088                           postinc1	equ	0xFE6
 42089                           postdec1	equ	0xFE5
 42090                           plusw1	equ	0xFE3
 42091                           fsr1h	equ	0xFE2
 42092                           fsr1l	equ	0xFE1
 42093                           indf2	equ	0xFDF
 42094                           postinc2	equ	0xFDE
 42095                           postdec2	equ	0xFDD
 42096                           plusw2	equ	0xFDB
 42097                           fsr2h	equ	0xFDA
 42098                           fsr2l	equ	0xFD9
 42099                           status	equ	0xFD8
 42100                           
 42101 ;; *************** function _display_get_character *****************
 42102 ;; Defined at:
 42103 ;;		line 646 in file "display.c"
 42104 ;; Parameters:    Size  Location     Type
 42105 ;;  line            1    wreg     unsigned char 
 42106 ;;  position        1    0[BANK0 ] unsigned char 
 42107 ;; Auto vars:     Size  Location     Type
 42108 ;;  line            1    3[BANK0 ] unsigned char 
 42109 ;; Return value:  Size  Location     Type
 42110 ;;                  1    wreg      unsigned char 
 42111 ;; Registers used:
 42112 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 42113 ;; Tracked objects:
 42114 ;;		On entry : 0/0
 42115 ;;		On exit  : 0/0
 42116 ;;		Unchanged: 0/0
 42117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42118 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42119 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42120 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42121 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42122 ;;Total ram usage:        4 bytes
 42123 ;; Hardware stack levels used:    1
 42124 ;; Hardware stack levels required when called:   10
 42125 ;; This function calls:
 42126 ;;		Nothing
 42127 ;; This function is called by:
 42128 ;;		__fill_buffer_get_display
 42129 ;; This function uses a non-reentrant model
 42130 ;;
 42131                           
 42132                           	psect	text169
 42133  015B60                     __ptext169:
 42134                           	opt stack 0
 42135  015B60                     _display_get_character:
 42136                           	opt stack 17
 42137                           
 42138                           ; BSR set to: 0
 42139                           ;incstack = 0
 42140                           ;display_get_character@line stored from wreg
 42141  015B60  0100               	movlb	0	; () banked
 42142  015B62  6F63               	movwf	display_get_character@line& (0+255),b
 42143                           
 42144                           ;display.c: 648: return display_content[line][position];
 42145  015B64  0100               	movlb	0	; () banked
 42146  015B66  5163               	movf	display_get_character@line& (0+255),w,b
 42147  015B68  0D14               	mullw	20
 42148  015B6A  0E48               	movlw	low _display_content
 42149  015B6C  6F61               	movwf	??_display_get_character& (0+255),b
 42150  015B6E  0E02               	movlw	high _display_content
 42151  015B70  6F62               	movwf	(??_display_get_character+1)& (0+255),b
 42152  015B72  50F3               	movf	prodl,w,c
 42153  015B74  2761               	addwf	??_display_get_character& (0+255),f,b
 42154  015B76  50F4               	movf	prodh,w,c
 42155  015B78  2362               	addwfc	(??_display_get_character+1)& (0+255),f,b
 42156  015B7A  5160               	movf	display_get_character@position& (0+255),w,b
 42157  015B7C  0D01               	mullw	1
 42158  015B7E  50F3               	movf	prodl,w,c
 42159  015B80  2561               	addwf	??_display_get_character& (0+255),w,b
 42160  015B82  6ED9               	movwf	fsr2l,c
 42161  015B84  50F4               	movf	prodh,w,c
 42162  015B86  2162               	addwfc	(??_display_get_character+1)& (0+255),w,b
 42163  015B88  6EDA               	movwf	fsr2h,c
 42164  015B8A  50DF               	movf	indf2,w,c
 42165  015B8C  0012               	return	
 42166  015B8E                     __end_of_display_get_character:
 42167                           	opt stack 0
 42168                           tosu	equ	0xFFF
 42169                           tosh	equ	0xFFE
 42170                           tosl	equ	0xFFD
 42171                           pclath	equ	0xFFA
 42172                           tblptru	equ	0xFF8
 42173                           tblptrh	equ	0xFF7
 42174                           tblptrl	equ	0xFF6
 42175                           tablat	equ	0xFF5
 42176                           prodh	equ	0xFF4
 42177                           prodl	equ	0xFF3
 42178                           intcon	equ	0xFF2
 42179                           indf0	equ	0xFEF
 42180                           postinc0	equ	0xFEE
 42181                           fsr0h	equ	0xFEA
 42182                           fsr0l	equ	0xFE9
 42183                           wreg	equ	0xFE8
 42184                           indf1	equ	0xFE7
 42185                           postinc1	equ	0xFE6
 42186                           postdec1	equ	0xFE5
 42187                           plusw1	equ	0xFE3
 42188                           fsr1h	equ	0xFE2
 42189                           fsr1l	equ	0xFE1
 42190                           indf2	equ	0xFDF
 42191                           postinc2	equ	0xFDE
 42192                           postdec2	equ	0xFDD
 42193                           plusw2	equ	0xFDB
 42194                           fsr2h	equ	0xFDA
 42195                           fsr2l	equ	0xFD9
 42196                           status	equ	0xFD8
 42197                           
 42198 ;; *************** function _api_parse *****************
 42199 ;; Defined at:
 42200 ;;		line 94 in file "api.c"
 42201 ;; Parameters:    Size  Location     Type
 42202 ;;  inBuffer        2   71[BANK0 ] PTR unsigned char 
 42203 ;;		 -> ReceivedDataBuffer(64), 
 42204 ;;  receivedData    1   73[BANK0 ] unsigned char 
 42205 ;;  outBuffer       2   74[BANK0 ] PTR unsigned char 
 42206 ;;		 -> ToSendDataBuffer(64), 
 42207 ;; Auto vars:     Size  Location     Type
 42208 ;;  out_idx_ptr     2   78[BANK0 ] PTR unsigned char 
 42209 ;;		 -> api_parse@out_idx(1), 
 42210 ;;  in_idx          1   81[BANK0 ] unsigned char 
 42211 ;;  out_idx         1   80[BANK0 ] unsigned char 
 42212 ;; Return value:  Size  Location     Type
 42213 ;;                  1    wreg      void 
 42214 ;; Registers used:
 42215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42216 ;; Tracked objects:
 42217 ;;		On entry : 0/0
 42218 ;;		On exit  : 0/0
 42219 ;;		Unchanged: 0/0
 42220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42221 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42222 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42223 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42224 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42225 ;;Total ram usage:       11 bytes
 42226 ;; Hardware stack levels used:    1
 42227 ;; Hardware stack levels required when called:   16
 42228 ;; This function calls:
 42229 ;;		__parse_command_long
 42230 ;;		__parse_command_short
 42231 ;; This function is called by:
 42232 ;;		_APP_DeviceCustomHIDTasks
 42233 ;; This function uses a non-reentrant model
 42234 ;;
 42235                           
 42236                           	psect	text170
 42237  010A74                     __ptext170:
 42238                           	opt stack 0
 42239  010A74                     _api_parse:
 42240                           	opt stack 13
 42241                           
 42242                           ;api.c: 98: uint8_t in_idx;;api.c: 99: uint8_t out_idx;;api.c: 100: uint8_t *out_idx_ptr
      +                          ;;api.c: 102: out_idx = 0;
 42243                           
 42244                           ; BSR set to: 0
 42245                           ;incstack = 0
 42246  010A74  0E00               	movlw	0
 42247  010A76  0100               	movlb	0	; () banked
 42248  010A78  6FB0               	movwf	api_parse@out_idx& (0+255),b
 42249                           
 42250                           ; BSR set to: 0
 42251                           ;api.c: 103: out_idx_ptr = &out_idx;
 42252  010A7A  0EB0               	movlw	low api_parse@out_idx
 42253  010A7C  6FAE               	movwf	api_parse@out_idx_ptr& (0+255),b
 42254  010A7E  0E00               	movlw	high api_parse@out_idx
 42255  010A80  6FAF               	movwf	(api_parse@out_idx_ptr+1)& (0+255),b
 42256                           
 42257                           ; BSR set to: 0
 42258                           ;api.c: 105: if(inBuffer[0]>0x7F)
 42259  010A82  C0A7  FFD9         	movff	api_parse@inBuffer,fsr2l
 42260  010A86  C0A8  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 42261  010A8A  0E7F               	movlw	127
 42262  010A8C  64DF               	cpfsgt	indf2,c
 42263  010A8E  D001               	goto	l2277
 42264  010A90  0012               	return	
 42265  010A92                     l2277:
 42266                           
 42267                           ; BSR set to: 0
 42268                           ;api.c: 110: };api.c: 112: if(inBuffer[0]==DATAREQUEST_GET_ECHO)
 42269                           
 42270                           ; BSR set to: 0
 42271  010A92  C0A7  FFD9         	movff	api_parse@inBuffer,fsr2l
 42272  010A96  C0A8  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 42273  010A9A  0E20               	movlw	32
 42274  010A9C  18DE               	xorwf	postinc2,w,c
 42275  010A9E  B4D8               	btfsc	status,2,c
 42276  010AA0  0012               	return	
 42277                           
 42278                           ; BSR set to: 0
 42279                           ;api.c: 117: };api.c: 119: if(inBuffer[0]==DATAREQUEST_GET_COMMAND_RESPONSE)
 42280                           
 42281                           ; BSR set to: 0
 42282                           
 42283                           ; BSR set to: 0
 42284                           ;api.c: 113: {;api.c: 116: return;
 42285  010AA2  C0A7  FFD9         	movff	api_parse@inBuffer,fsr2l
 42286  010AA6  C0A8  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 42287  010AAA  50DF               	movf	indf2,w,c
 42288  010AAC  A4D8               	btfss	status,2,c
 42289  010AAE  D018               	goto	l2280
 42290                           
 42291                           ; BSR set to: 0
 42292                           ;api.c: 120: {;api.c: 122: outBuffer[0] = DATAREQUEST_GET_COMMAND_RESPONSE;
 42293  010AB0  C0AA  FFD9         	movff	api_parse@outBuffer,fsr2l
 42294  010AB4  C0AB  FFDA         	movff	api_parse@outBuffer+1,fsr2h
 42295  010AB8  0E00               	movlw	0
 42296  010ABA  6EDF               	movwf	indf2,c
 42297                           
 42298                           ; BSR set to: 0
 42299                           ;api.c: 125: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 42300  010ABC  EE20 F001          	lfsr	2,1
 42301  010AC0  51AA               	movf	api_parse@outBuffer& (0+255),w,b
 42302  010AC2  26D9               	addwf	fsr2l,f,c
 42303  010AC4  51AB               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 42304  010AC6  22DA               	addwfc	fsr2h,f,c
 42305  010AC8  0EBC               	movlw	188
 42306  010ACA  6EDF               	movwf	indf2,c
 42307                           
 42308                           ; BSR set to: 0
 42309                           ;api.c: 126: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 42310  010ACC  EE20 F002          	lfsr	2,2
 42311  010AD0  51AA               	movf	api_parse@outBuffer& (0+255),w,b
 42312  010AD2  26D9               	addwf	fsr2l,f,c
 42313  010AD4  51AB               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 42314  010AD6  22DA               	addwfc	fsr2h,f,c
 42315  010AD8  0E26               	movlw	38
 42316  010ADA  6EDF               	movwf	indf2,c
 42317                           
 42318                           ; BSR set to: 0
 42319                           ;api.c: 129: out_idx = 3;
 42320  010ADC  0E03               	movlw	3
 42321  010ADE  6FB0               	movwf	api_parse@out_idx& (0+255),b
 42322  010AE0                     l2280:
 42323                           
 42324                           ; BSR set to: 0
 42325                           ;api.c: 130: };api.c: 132: in_idx = 1;
 42326                           
 42327                           ; BSR set to: 0
 42328  010AE0  0E01               	movlw	1
 42329  010AE2  6FB1               	movwf	api_parse@in_idx& (0+255),b
 42330                           
 42331                           ;api.c: 133: while(in_idx<receivedDataLength)
 42332  010AE4  D057               	goto	l2286
 42333  010AE6                     
 42334                           ; BSR set to: 0
 42335                           ;api.c: 134: {;api.c: 136: if(inBuffer[in_idx]==COMMAND_STOP_PARSING)
 42336                           
 42337                           ; BSR set to: 0
 42338  010AE6  51B1               	movf	api_parse@in_idx& (0+255),w,b
 42339  010AE8  0D01               	mullw	1
 42340  010AEA  50F3               	movf	prodl,w,c
 42341  010AEC  25A7               	addwf	api_parse@inBuffer& (0+255),w,b
 42342  010AEE  6ED9               	movwf	fsr2l,c
 42343  010AF0  50F4               	movf	prodh,w,c
 42344  010AF2  21A8               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 42345  010AF4  6EDA               	movwf	fsr2h,c
 42346  010AF6  0E99               	movlw	153
 42347  010AF8  18DE               	xorwf	postinc2,w,c
 42348  010AFA  B4D8               	btfsc	status,2,c
 42349  010AFC  0012               	return	
 42350  010AFE  D02F               	goto	l2284
 42351  010B00                     
 42352                           ; BSR set to: 0
 42353                           ;api.c: 144: _parse_command_short(inBuffer[in_idx]);
 42354                           
 42355                           ; BSR set to: 0
 42356  010B00  51B1               	movf	api_parse@in_idx& (0+255),w,b
 42357  010B02  0D01               	mullw	1
 42358  010B04  50F3               	movf	prodl,w,c
 42359  010B06  25A7               	addwf	api_parse@inBuffer& (0+255),w,b
 42360  010B08  6ED9               	movwf	fsr2l,c
 42361  010B0A  50F4               	movf	prodh,w,c
 42362  010B0C  21A8               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 42363  010B0E  6EDA               	movwf	fsr2h,c
 42364  010B10  50DF               	movf	indf2,w,c
 42365  010B12  EC94  F07D         	call	__parse_command_short
 42366  010B16  D00B               	goto	l17288
 42367  010B18                     
 42368                           ; BSR set to: 0
 42369                           ;api.c: 149: _parse_command_short(inBuffer[in_idx]);
 42370                           
 42371                           ; BSR set to: 0
 42372  010B18  51B1               	movf	api_parse@in_idx& (0+255),w,b
 42373  010B1A  0D01               	mullw	1
 42374  010B1C  50F3               	movf	prodl,w,c
 42375  010B1E  25A7               	addwf	api_parse@inBuffer& (0+255),w,b
 42376  010B20  6ED9               	movwf	fsr2l,c
 42377  010B22  50F4               	movf	prodh,w,c
 42378  010B24  21A8               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 42379  010B26  6EDA               	movwf	fsr2h,c
 42380  010B28  50DF               	movf	indf2,w,c
 42381  010B2A  EC94  F07D         	call	__parse_command_short
 42382  010B2E                     l17288:
 42383                           
 42384                           ;api.c: 150: ++in_idx;
 42385  010B2E  0100               	movlb	0	; () banked
 42386  010B30  2BB1               	incf	api_parse@in_idx& (0+255),f,b
 42387                           
 42388                           ;api.c: 151: break;
 42389  010B32  D030               	goto	l2286
 42390  010B34                     
 42391                           ; BSR set to: 0
 42392                           ;api.c: 154: in_idx += _parse_command_long(&inBuffer[in_idx], outBuffer, out_idx_ptr);
 42393                           
 42394                           ; BSR set to: 0
 42395  010B34  51B1               	movf	api_parse@in_idx& (0+255),w,b
 42396  010B36  0D01               	mullw	1
 42397  010B38  50F3               	movf	prodl,w,c
 42398  010B3A  25A7               	addwf	api_parse@inBuffer& (0+255),w,b
 42399  010B3C  6FA0               	movwf	__parse_command_long@data& (0+255),b
 42400  010B3E  50F4               	movf	prodh,w,c
 42401  010B40  21A8               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 42402  010B42  6FA1               	movwf	(__parse_command_long@data+1)& (0+255),b
 42403  010B44  C0AA  F0A2         	movff	api_parse@outBuffer,__parse_command_long@out_buffer
 42404  010B48  C0AB  F0A3         	movff	api_parse@outBuffer+1,__parse_command_long@out_buffer+1
 42405  010B4C  C0AE  F0A4         	movff	api_parse@out_idx_ptr,__parse_command_long@out_idx_ptr
 42406  010B50  C0AF  F0A5         	movff	api_parse@out_idx_ptr+1,__parse_command_long@out_idx_ptr+1
 42407  010B54  ECCD  F09F         	call	__parse_command_long	;wreg free
 42408  010B58  0100               	movlb	0	; () banked
 42409  010B5A  27B1               	addwf	api_parse@in_idx& (0+255),f,b
 42410                           
 42411                           ;api.c: 155: break;
 42412  010B5C  D01B               	goto	l2286
 42413  010B5E                     l2284:
 42414                           
 42415                           ; BSR set to: 0
 42416                           
 42417                           ; BSR set to: 0
 42418  010B5E  51B1               	movf	api_parse@in_idx& (0+255),w,b
 42419  010B60  0D01               	mullw	1
 42420  010B62  50F3               	movf	prodl,w,c
 42421  010B64  25A7               	addwf	api_parse@inBuffer& (0+255),w,b
 42422  010B66  6ED9               	movwf	fsr2l,c
 42423  010B68  50F4               	movf	prodh,w,c
 42424  010B6A  21A8               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 42425  010B6C  6EDA               	movwf	fsr2h,c
 42426  010B6E  50DF               	movf	indf2,w,c
 42427  010B70  0BF0               	andlw	240
 42428  010B72  6FAC               	movwf	??_api_parse& (0+255),b
 42429  010B74  6BAD               	clrf	(??_api_parse+1)& (0+255),b
 42430                           
 42431                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 42432                           ; Switch size 1, requested type "space"
 42433                           ; Number of cases is 1, Range of values is 0 to 0
 42434                           ; switch strategies available:
 42435                           ; Name         Instructions Cycles
 42436                           ; simple_byte            4     3 (average)
 42437                           ;	Chosen strategy is simple_byte
 42438  010B76  51AD               	movf	(??_api_parse+1)& (0+255),w,b
 42439  010B78  0A00               	xorlw	0	; case 0
 42440  010B7A  A4D8               	btfss	status,2,c
 42441  010B7C  0012               	return	
 42442                           
 42443                           ; BSR set to: 0
 42444                           ; Switch size 1, requested type "space"
 42445                           ; Number of cases is 3, Range of values is 32 to 144
 42446                           ; switch strategies available:
 42447                           ; Name         Instructions Cycles
 42448                           ; simple_byte           10     6 (average)
 42449                           ;	Chosen strategy is simple_byte
 42450  010B7E  51AC               	movf	??_api_parse& (0+255),w,b
 42451  010B80  0A20               	xorlw	32	; case 32
 42452  010B82  B4D8               	btfsc	status,2,c
 42453  010B84  D7BD               	goto	l2285
 42454  010B86  0A10               	xorlw	16	; case 48
 42455  010B88  B4D8               	btfsc	status,2,c
 42456  010B8A  D7C6               	goto	l2287
 42457  010B8C  0AA0               	xorlw	160	; case 144
 42458  010B8E  A4D8               	btfss	status,2,c
 42459  010B90  0012               	return	
 42460  010B92  D7D0               	goto	l2288
 42461  010B94                     l2286:
 42462                           
 42463                           ; BSR set to: 0
 42464                           
 42465                           ; BSR set to: 0
 42466                           
 42467                           ; BSR set to: 0
 42468  010B94  51A9               	movf	api_parse@receivedDataLength& (0+255),w,b
 42469  010B96  5DB1               	subwf	api_parse@in_idx& (0+255),w,b
 42470  010B98  B0D8               	btfsc	status,0,c
 42471  010B9A  0012               	return	
 42472  010B9C  D7A4               	goto	l2282
 42473  010B9E                     __end_of_api_parse:
 42474                           	opt stack 0
 42475                           tosu	equ	0xFFF
 42476                           tosh	equ	0xFFE
 42477                           tosl	equ	0xFFD
 42478                           pclath	equ	0xFFA
 42479                           tblptru	equ	0xFF8
 42480                           tblptrh	equ	0xFF7
 42481                           tblptrl	equ	0xFF6
 42482                           tablat	equ	0xFF5
 42483                           prodh	equ	0xFF4
 42484                           prodl	equ	0xFF3
 42485                           intcon	equ	0xFF2
 42486                           indf0	equ	0xFEF
 42487                           postinc0	equ	0xFEE
 42488                           fsr0h	equ	0xFEA
 42489                           fsr0l	equ	0xFE9
 42490                           wreg	equ	0xFE8
 42491                           indf1	equ	0xFE7
 42492                           postinc1	equ	0xFE6
 42493                           postdec1	equ	0xFE5
 42494                           plusw1	equ	0xFE3
 42495                           fsr1h	equ	0xFE2
 42496                           fsr1l	equ	0xFE1
 42497                           indf2	equ	0xFDF
 42498                           postinc2	equ	0xFDE
 42499                           postdec2	equ	0xFDD
 42500                           plusw2	equ	0xFDB
 42501                           fsr2h	equ	0xFDA
 42502                           fsr2l	equ	0xFD9
 42503                           status	equ	0xFD8
 42504                           
 42505 ;; *************** function __parse_command_short *****************
 42506 ;; Defined at:
 42507 ;;		line 331 in file "api.c"
 42508 ;; Parameters:    Size  Location     Type
 42509 ;;  cmd             1    wreg     unsigned char 
 42510 ;; Auto vars:     Size  Location     Type
 42511 ;;  cmd             1   62[BANK0 ] unsigned char 
 42512 ;; Return value:  Size  Location     Type
 42513 ;;                  1    wreg      void 
 42514 ;; Registers used:
 42515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42516 ;; Tracked objects:
 42517 ;;		On entry : 0/0
 42518 ;;		On exit  : 0/0
 42519 ;;		Unchanged: 0/0
 42520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42522 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42524 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42525 ;;Total ram usage:        1 bytes
 42526 ;; Hardware stack levels used:    1
 42527 ;; Hardware stack levels required when called:   14
 42528 ;; This function calls:
 42529 ;;		_motor_clear_command_cue
 42530 ;;		_motor_goto_steps
 42531 ;;		_motor_move_endless
 42532 ;;		_motor_set_zero
 42533 ;;		_motor_stop
 42534 ;; This function is called by:
 42535 ;;		_api_parse
 42536 ;; This function uses a non-reentrant model
 42537 ;;
 42538                           
 42539                           	psect	text171
 42540  00FB28                     __ptext171:
 42541                           	opt stack 0
 42542  00FB28                     __parse_command_short:
 42543                           	opt stack 14
 42544                           
 42545                           ; BSR set to: 0
 42546                           ;incstack = 0
 42547                           ;__parse_command_short@cmd stored from wreg
 42548  00FB28  0100               	movlb	0	; () banked
 42549  00FB2A  6F9E               	movwf	__parse_command_short@cmd& (0+255),b
 42550                           
 42551                           ;api.c: 333: switch(cmd)
 42552  00FB2C  D072               	goto	l2322
 42553  00FB2E                     
 42554                           ;api.c: 351: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 42555  00FB2E  0E01               	movlw	1
 42556  00FB30  0101               	movlb	1	; () banked
 42557  00FB32  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 42558                           
 42559                           ;api.c: 352: break;
 42560  00FB34  0012               	return	
 42561  00FB36                     
 42562                           ;api.c: 355: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 42563                           
 42564                           ; BSR set to: 1
 42565  00FB36  0E11               	movlw	17
 42566  00FB38  0101               	movlb	1	; () banked
 42567  00FB3A  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 42568                           
 42569                           ;api.c: 356: break;
 42570  00FB3C  0012               	return	
 42571  00FB3E                     
 42572                           ;api.c: 359: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 42573                           
 42574                           ; BSR set to: 1
 42575  00FB3E  0E31               	movlw	49
 42576  00FB40  0101               	movlb	1	; () banked
 42577  00FB42  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 42578                           
 42579                           ;api.c: 360: break;
 42580  00FB44  0012               	return	
 42581  00FB46                     
 42582                           ;api.c: 363: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 42583                           
 42584                           ; BSR set to: 1
 42585  00FB46  0E51               	movlw	81
 42586  00FB48  0101               	movlb	1	; () banked
 42587  00FB4A  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 42588                           
 42589                           ;api.c: 364: break;
 42590  00FB4C  0012               	return	
 42591  00FB4E                     
 42592                           ;api.c: 367: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 42593                           
 42594                           ; BSR set to: 1
 42595  00FB4E  0E82               	movlw	130
 42596  00FB50  0101               	movlb	1	; () banked
 42597  00FB52  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 42598                           
 42599                           ;api.c: 368: break;
 42600  00FB54  0012               	return	
 42601  00FB56                     
 42602                           ;api.c: 371: os.displayState = DISPLAY_STATE_ZERO_NORMAL;
 42603                           
 42604                           ; BSR set to: 1
 42605  00FB56  0E71               	movlw	113
 42606  00FB58  0101               	movlb	1	; () banked
 42607  00FB5A  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 42608                           
 42609                           ;api.c: 372: break;
 42610  00FB5C  0012               	return	
 42611  00FB5E                     
 42612                           ;api.c: 375: motor_set_zero(MOTOR_DIRECTION_CCW);
 42613                           
 42614                           ; BSR set to: 1
 42615  00FB5E  0EFF               	movlw	255
 42616  00FB60  ECD3  F0AB         	call	_motor_set_zero
 42617                           
 42618                           ;api.c: 376: break;
 42619  00FB64  0012               	return	
 42620  00FB66                     
 42621                           ;api.c: 379: motor_set_zero(MOTOR_DIRECTION_CW);
 42622  00FB66  0E01               	movlw	1
 42623  00FB68  ECD3  F0AB         	call	_motor_set_zero
 42624                           
 42625                           ;api.c: 380: break;
 42626  00FB6C  0012               	return	
 42627  00FB6E                     
 42628                           ;api.c: 383: motor_goto_steps(MOTOR_DIRECTION_SHORTEST, 0, 0xFFFF, MOTOR_OVERSHOOT_WITH_
      +                          OVERSHOOT);
 42629  00FB6E  0E00               	movlw	0
 42630  00FB70  0100               	movlb	0	; () banked
 42631  00FB72  6F92               	movwf	motor_goto_steps@position& (0+255),b
 42632  00FB74  0E00               	movlw	0
 42633  00FB76  6F93               	movwf	(motor_goto_steps@position+1)& (0+255),b
 42634  00FB78  0E00               	movlw	0
 42635  00FB7A  6F94               	movwf	(motor_goto_steps@position+2)& (0+255),b
 42636  00FB7C  0E00               	movlw	0
 42637  00FB7E  6F95               	movwf	(motor_goto_steps@position+3)& (0+255),b
 42638  00FB80  0EFF               	movlw	255
 42639  00FB82  6F97               	movwf	(motor_goto_steps@speed+1)& (0+255),b
 42640  00FB84  6996               	setf	motor_goto_steps@speed& (0+255),b
 42641  00FB86  0E00               	movlw	0
 42642  00FB88  6F98               	movwf	motor_goto_steps@overshoot& (0+255),b
 42643  00FB8A  0E00               	movlw	0
 42644  00FB8C  EC52  F09C         	call	_motor_goto_steps
 42645                           
 42646                           ;api.c: 385: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 42647  00FB90  0E05               	movlw	5
 42648  00FB92  0101               	movlb	1	; () banked
 42649  00FB94  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 42650                           
 42651                           ; BSR set to: 1
 42652                           ;api.c: 386: os.divide_position = 0;
 42653  00FB96  0E00               	movlw	0
 42654  00FB98  6F7D               	movwf	(_os+24)& (0+255),b	;volatile
 42655  00FB9A  0E00               	movlw	0
 42656  00FB9C  6F7C               	movwf	(_os+23)& (0+255),b	;volatile
 42657  00FB9E                     
 42658                           ;api.c: 389: --os.encoder2Count;
 42659                           
 42660                           ; BSR set to: 1
 42661  00FB9E  0101               	movlb	1	; () banked
 42662  00FBA0  076A               	decf	(_os+5)& (0+255),f,b	;volatile
 42663                           
 42664                           ;api.c: 390: break;
 42665  00FBA2  0012               	return	
 42666  00FBA4                     
 42667                           ;api.c: 393: ++os.encoder2Count;
 42668                           
 42669                           ; BSR set to: 1
 42670  00FBA4  0101               	movlb	1	; () banked
 42671  00FBA6  2B6A               	incf	(_os+5)& (0+255),f,b	;volatile
 42672                           
 42673                           ;api.c: 394: break;
 42674  00FBA8  0012               	return	
 42675  00FBAA                     
 42676                           ;api.c: 397: ++os.button2;
 42677                           
 42678                           ; BSR set to: 1
 42679  00FBAA  0101               	movlb	1	; () banked
 42680  00FBAC  2B6B               	incf	(_os+6)& (0+255),f,b	;volatile
 42681                           
 42682                           ;api.c: 398: break;
 42683  00FBAE  0012               	return	
 42684  00FBB0                     
 42685                           ;api.c: 401: --os.encoder1Count;
 42686                           
 42687                           ; BSR set to: 1
 42688  00FBB0  0101               	movlb	1	; () banked
 42689  00FBB2  0768               	decf	(_os+3)& (0+255),f,b	;volatile
 42690                           
 42691                           ;api.c: 402: break;
 42692  00FBB4  0012               	return	
 42693  00FBB6                     
 42694                           ;api.c: 405: ++os.encoder1Count;
 42695                           
 42696                           ; BSR set to: 1
 42697  00FBB6  0101               	movlb	1	; () banked
 42698  00FBB8  2B68               	incf	(_os+3)& (0+255),f,b	;volatile
 42699                           
 42700                           ;api.c: 406: break;
 42701  00FBBA  0012               	return	
 42702  00FBBC                     
 42703                           ;api.c: 409: ++os.button1;
 42704                           
 42705                           ; BSR set to: 1
 42706  00FBBC  0101               	movlb	1	; () banked
 42707  00FBBE  2B69               	incf	(_os+4)& (0+255),f,b	;volatile
 42708                           
 42709                           ;api.c: 410: break;
 42710  00FBC0  0012               	return	
 42711  00FBC2                     
 42712                           ;api.c: 413: if(!os.busy)
 42713                           
 42714                           ; BSR set to: 1
 42715  00FBC2  0101               	movlb	1	; () banked
 42716  00FBC4  5175               	movf	(_os+16)& (0+255),w,b	;volatile
 42717  00FBC6  A4D8               	btfss	status,2,c
 42718  00FBC8  0012               	return	
 42719                           
 42720                           ; BSR set to: 1
 42721                           ;api.c: 414: {;api.c: 415: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 42722  00FBCA  0E84               	movlw	132
 42723  00FBCC  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 42724                           
 42725                           ; BSR set to: 1
 42726                           ;api.c: 416: motor_move_endless(MOTOR_DIRECTION_CCW, os.manual_speed);
 42727  00FBCE  C189  F08C         	movff	_os+36,motor_move_endless@speed	;volatile
 42728  00FBD2  C18A  F08D         	movff	_os+37,motor_move_endless@speed+1	;volatile
 42729  00FBD6  0EFF               	movlw	255
 42730  00FBD8  ECC7  F0AD         	call	_motor_move_endless
 42731                           
 42732                           ;api.c: 417: };api.c: 418: break;
 42733  00FBDC  0012               	return	
 42734  00FBDE                     
 42735                           ;api.c: 421: if(!os.busy)
 42736  00FBDE  0101               	movlb	1	; () banked
 42737  00FBE0  5175               	movf	(_os+16)& (0+255),w,b	;volatile
 42738  00FBE2  A4D8               	btfss	status,2,c
 42739  00FBE4  0012               	return	
 42740                           
 42741                           ; BSR set to: 1
 42742                           ;api.c: 422: {;api.c: 423: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 42743  00FBE6  0E84               	movlw	132
 42744  00FBE8  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 42745                           
 42746                           ; BSR set to: 1
 42747                           ;api.c: 424: motor_move_endless(MOTOR_DIRECTION_CW, os.manual_speed);
 42748  00FBEA  C189  F08C         	movff	_os+36,motor_move_endless@speed	;volatile
 42749  00FBEE  C18A  F08D         	movff	_os+37,motor_move_endless@speed+1	;volatile
 42750  00FBF2  0E01               	movlw	1
 42751  00FBF4  ECC7  F0AD         	call	_motor_move_endless
 42752                           
 42753                           ;api.c: 425: };api.c: 426: break;
 42754  00FBF8  0012               	return	
 42755  00FBFA                     
 42756                           ;api.c: 429: if(os.busy)
 42757  00FBFA  0101               	movlb	1	; () banked
 42758  00FBFC  5175               	movf	(_os+16)& (0+255),w,b	;volatile
 42759  00FBFE  B4D8               	btfsc	status,2,c
 42760  00FC00  0012               	return	
 42761                           
 42762                           ; BSR set to: 1
 42763                           ;api.c: 430: {;api.c: 431: motor_stop();
 42764  00FC02  ECE5  F0A9         	call	_motor_stop	;wreg free
 42765                           
 42766                           ;api.c: 432: motor_clear_command_cue();
 42767  00FC06  EC0C  F0B0         	call	_motor_clear_command_cue	;wreg free
 42768                           
 42769                           ;api.c: 433: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 42770  00FC0A  0E82               	movlw	130
 42771  00FC0C  0101               	movlb	1	; () banked
 42772  00FC0E  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 42773                           
 42774                           ; BSR set to: 1
 42775                           ;api.c: 436: }
 42776                           
 42777                           ; BSR set to: 1
 42778                           ;api.c: 434: };api.c: 435: break;
 42779  00FC10  0012               	return	
 42780  00FC12                     l2322:
 42781                           
 42782                           ; BSR set to: 1
 42783  00FC12  0100               	movlb	0	; () banked
 42784  00FC14  519E               	movf	__parse_command_short@cmd& (0+255),w,b
 42785                           
 42786                           ; Switch size 1, requested type "space"
 42787                           ; Number of cases is 18, Range of values is 32 to 56
 42788                           ; switch strategies available:
 42789                           ; Name         Instructions Cycles
 42790                           ; simple_byte           55    28 (average)
 42791                           ;	Chosen strategy is simple_byte
 42792  00FC16  0A20               	xorlw	32	; case 32
 42793  00FC18  B4D8               	btfsc	status,2,c
 42794  00FC1A  D789               	goto	l2323
 42795  00FC1C  0A01               	xorlw	1	; case 33
 42796  00FC1E  B4D8               	btfsc	status,2,c
 42797  00FC20  D78A               	goto	l2325
 42798  00FC22  0A03               	xorlw	3	; case 34
 42799  00FC24  B4D8               	btfsc	status,2,c
 42800  00FC26  D78B               	goto	l2326
 42801  00FC28  0A01               	xorlw	1	; case 35
 42802  00FC2A  B4D8               	btfsc	status,2,c
 42803  00FC2C  D78C               	goto	l2327
 42804  00FC2E  0A07               	xorlw	7	; case 36
 42805  00FC30  B4D8               	btfsc	status,2,c
 42806  00FC32  D78D               	goto	l2328
 42807  00FC34  0A01               	xorlw	1	; case 37
 42808  00FC36  B4D8               	btfsc	status,2,c
 42809  00FC38  D78E               	goto	l2329
 42810  00FC3A  0A03               	xorlw	3	; case 38
 42811  00FC3C  B4D8               	btfsc	status,2,c
 42812  00FC3E  D78F               	goto	l2330
 42813  00FC40  0A01               	xorlw	1	; case 39
 42814  00FC42  B4D8               	btfsc	status,2,c
 42815  00FC44  D790               	goto	l2331
 42816  00FC46  0A0F               	xorlw	15	; case 40
 42817  00FC48  B4D8               	btfsc	status,2,c
 42818  00FC4A  D791               	goto	l2332
 42819  00FC4C  0A18               	xorlw	24	; case 48
 42820  00FC4E  B4D8               	btfsc	status,2,c
 42821  00FC50  D7A6               	goto	l2333
 42822  00FC52  0A01               	xorlw	1	; case 49
 42823  00FC54  B4D8               	btfsc	status,2,c
 42824  00FC56  D7A6               	goto	l2334
 42825  00FC58  0A03               	xorlw	3	; case 50
 42826  00FC5A  B4D8               	btfsc	status,2,c
 42827  00FC5C  D7A6               	goto	l2335
 42828  00FC5E  0A01               	xorlw	1	; case 51
 42829  00FC60  B4D8               	btfsc	status,2,c
 42830  00FC62  D7A6               	goto	l2336
 42831  00FC64  0A07               	xorlw	7	; case 52
 42832  00FC66  B4D8               	btfsc	status,2,c
 42833  00FC68  D7A6               	goto	l2337
 42834  00FC6A  0A01               	xorlw	1	; case 53
 42835  00FC6C  B4D8               	btfsc	status,2,c
 42836  00FC6E  D7A6               	goto	l2338
 42837  00FC70  0A03               	xorlw	3	; case 54
 42838  00FC72  B4D8               	btfsc	status,2,c
 42839  00FC74  D7A6               	goto	l2339
 42840  00FC76  0A01               	xorlw	1	; case 55
 42841  00FC78  B4D8               	btfsc	status,2,c
 42842  00FC7A  D7B1               	goto	l2341
 42843  00FC7C  0A0F               	xorlw	15	; case 56
 42844  00FC7E  A4D8               	btfss	status,2,c
 42845  00FC80  0012               	return	
 42846  00FC82  D7BB               	goto	l2343
 42847  00FC84                     __end_of__parse_command_short:
 42848                           	opt stack 0
 42849                           tosu	equ	0xFFF
 42850                           tosh	equ	0xFFE
 42851                           tosl	equ	0xFFD
 42852                           pclath	equ	0xFFA
 42853                           tblptru	equ	0xFF8
 42854                           tblptrh	equ	0xFF7
 42855                           tblptrl	equ	0xFF6
 42856                           tablat	equ	0xFF5
 42857                           prodh	equ	0xFF4
 42858                           prodl	equ	0xFF3
 42859                           intcon	equ	0xFF2
 42860                           indf0	equ	0xFEF
 42861                           postinc0	equ	0xFEE
 42862                           fsr0h	equ	0xFEA
 42863                           fsr0l	equ	0xFE9
 42864                           wreg	equ	0xFE8
 42865                           indf1	equ	0xFE7
 42866                           postinc1	equ	0xFE6
 42867                           postdec1	equ	0xFE5
 42868                           plusw1	equ	0xFE3
 42869                           fsr1h	equ	0xFE2
 42870                           fsr1l	equ	0xFE1
 42871                           indf2	equ	0xFDF
 42872                           postinc2	equ	0xFDE
 42873                           postdec2	equ	0xFDD
 42874                           plusw2	equ	0xFDB
 42875                           fsr2h	equ	0xFDA
 42876                           fsr2l	equ	0xFD9
 42877                           status	equ	0xFD8
 42878                           
 42879 ;; *************** function _motor_stop *****************
 42880 ;; Defined at:
 42881 ;;		line 853 in file "motor.c"
 42882 ;; Parameters:    Size  Location     Type
 42883 ;;		None
 42884 ;; Auto vars:     Size  Location     Type
 42885 ;;		None
 42886 ;; Return value:  Size  Location     Type
 42887 ;;                  1    wreg      void 
 42888 ;; Registers used:
 42889 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 42890 ;; Tracked objects:
 42891 ;;		On entry : 0/0
 42892 ;;		On exit  : 0/0
 42893 ;;		Unchanged: 0/0
 42894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42897 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42898 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42899 ;;Total ram usage:        2 bytes
 42900 ;; Hardware stack levels used:    1
 42901 ;; Hardware stack levels required when called:   10
 42902 ;; This function calls:
 42903 ;;		Nothing
 42904 ;; This function is called by:
 42905 ;;		__parse_command_short
 42906 ;;		_encoder_statemachine
 42907 ;; This function uses a non-reentrant model
 42908 ;;
 42909                           
 42910                           	psect	text172
 42911  0153CA                     __ptext172:
 42912                           	opt stack 0
 42913  0153CA                     _motor_stop:
 42914                           	opt stack 19
 42915                           
 42916                           ;motor.c: 856: INTCONbits.GIE = 0;
 42917                           
 42918                           ;incstack = 0
 42919  0153CA  9EF2               	bcf	intcon,7,c	;volatile
 42920                           
 42921                           ;motor.c: 859: motor_move_type=MOTOR_MOVE_TYPE_NORMAL;
 42922  0153CC  0E00               	movlw	0
 42923  0153CE  0101               	movlb	1	; () banked
 42924  0153D0  6F4B               	movwf	_motor_move_type& (0+255),b
 42925                           
 42926                           ; BSR set to: 1
 42927                           ;motor.c: 860: motor_final_stepcount = motor_current_stepcount + motor_steps_lookup[moto
      +                          r_current_speed];
 42928  0153D2  90D8               	bcf	status,0,c
 42929  0153D4  3457               	rlcf	_motor_current_speed,w,c	;volatile
 42930  0153D6  6EF6               	movwf	tblptrl,c
 42931  0153D8  3458               	rlcf	_motor_current_speed+1,w,c	;volatile
 42932  0153DA  6EF7               	movwf	tblptrh,c
 42933  0153DC  0E61               	movlw	low _motor_steps_lookup
 42934  0153DE  26F6               	addwf	tblptrl,f,c
 42935  0153E0  0E94               	movlw	high _motor_steps_lookup
 42936  0153E2  22F7               	addwfc	tblptrh,f,c
 42937  0153E4                     	if	1	;There are 3 active tblptr bytes
 42938  0153E4  6AF8               	clrf	tblptru,c
 42939  0153E6  0E00               	movlw	low (__mediumconst shr (0+16))
 42940  0153E8  22F8               	addwfc	tblptru,f,c
 42941  0153EA                     	endif
 42942  0153EA  0009               	tblrd		*+
 42943  0153EC  CFF5 F060          	movff	tablat,??_motor_stop
 42944  0153F0  0009               	tblrd		*+
 42945  0153F2  CFF5 F061          	movff	tablat,??_motor_stop+1
 42946  0153F6  0100               	movlb	0	; () banked
 42947  0153F8  5160               	movf	??_motor_stop& (0+255),w,b
 42948  0153FA  0101               	movlb	1	; () banked
 42949  0153FC  251F               	addwf	_motor_current_stepcount& (0+255),w,b	;volatile
 42950  0153FE  6F1B               	movwf	_motor_final_stepcount& (0+255),b	;volatile
 42951  015400  0100               	movlb	0	; () banked
 42952  015402  5161               	movf	(??_motor_stop+1)& (0+255),w,b
 42953  015404  0101               	movlb	1	; () banked
 42954  015406  2120               	addwfc	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 42955  015408  6F1C               	movwf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 42956  01540A  0E00               	movlw	0
 42957  01540C  2121               	addwfc	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 42958  01540E  6F1D               	movwf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 42959  015410  0E00               	movlw	0
 42960  015412  2122               	addwfc	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 42961  015414  6F1E               	movwf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 42962                           
 42963                           ; BSR set to: 1
 42964                           ;motor.c: 863: INTCONbits.GIE = 1;
 42965  015416  8EF2               	bsf	intcon,7,c	;volatile
 42966                           
 42967                           ; BSR set to: 1
 42968  015418  0012               	return		;funcret
 42969  01541A                     __end_of_motor_stop:
 42970                           	opt stack 0
 42971                           tosu	equ	0xFFF
 42972                           tosh	equ	0xFFE
 42973                           tosl	equ	0xFFD
 42974                           pclath	equ	0xFFA
 42975                           tblptru	equ	0xFF8
 42976                           tblptrh	equ	0xFF7
 42977                           tblptrl	equ	0xFF6
 42978                           tablat	equ	0xFF5
 42979                           prodh	equ	0xFF4
 42980                           prodl	equ	0xFF3
 42981                           intcon	equ	0xFF2
 42982                           indf0	equ	0xFEF
 42983                           postinc0	equ	0xFEE
 42984                           fsr0h	equ	0xFEA
 42985                           fsr0l	equ	0xFE9
 42986                           wreg	equ	0xFE8
 42987                           indf1	equ	0xFE7
 42988                           postinc1	equ	0xFE6
 42989                           postdec1	equ	0xFE5
 42990                           plusw1	equ	0xFE3
 42991                           fsr1h	equ	0xFE2
 42992                           fsr1l	equ	0xFE1
 42993                           indf2	equ	0xFDF
 42994                           postinc2	equ	0xFDE
 42995                           postdec2	equ	0xFDD
 42996                           plusw2	equ	0xFDB
 42997                           fsr2h	equ	0xFDA
 42998                           fsr2l	equ	0xFD9
 42999                           status	equ	0xFD8
 43000                           
 43001 ;; *************** function _motor_set_zero *****************
 43002 ;; Defined at:
 43003 ;;		line 977 in file "motor.c"
 43004 ;; Parameters:    Size  Location     Type
 43005 ;;  direction       1    wreg     enum E6622
 43006 ;; Auto vars:     Size  Location     Type
 43007 ;;  direction       1   10[BANK0 ] enum E6622
 43008 ;; Return value:  Size  Location     Type
 43009 ;;                  1    wreg      void 
 43010 ;; Registers used:
 43011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43012 ;; Tracked objects:
 43013 ;;		On entry : 0/0
 43014 ;;		On exit  : 0/0
 43015 ;;		Unchanged: 0/0
 43016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43018 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43020 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43021 ;;Total ram usage:        1 bytes
 43022 ;; Hardware stack levels used:    1
 43023 ;; Hardware stack levels required when called:   13
 43024 ;; This function calls:
 43025 ;;		__motor_move_back_forth
 43026 ;; This function is called by:
 43027 ;;		__parse_command_short
 43028 ;;		_encoder_statemachine
 43029 ;; This function uses a non-reentrant model
 43030 ;;
 43031                           
 43032                           	psect	text173
 43033  0157A6                     __ptext173:
 43034                           	opt stack 0
 43035  0157A6                     _motor_set_zero:
 43036                           	opt stack 16
 43037                           
 43038                           ; BSR set to: 1
 43039                           ;incstack = 0
 43040                           ;motor_set_zero@direction stored from wreg
 43041  0157A6  0100               	movlb	0	; () banked
 43042  0157A8  6F6A               	movwf	motor_set_zero@direction& (0+255),b
 43043                           
 43044                           ;motor.c: 980: os.approach_direction = direction;
 43045  0157AA  C06A  F178         	movff	motor_set_zero@direction,_os+19	;volatile
 43046                           
 43047                           ;motor.c: 981: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 43048  0157AE  0E01               	movlw	1
 43049  0157B0  0101               	movlb	1	; () banked
 43050  0157B2  6F74               	movwf	(_os+15)& (0+255),b	;volatile
 43051                           
 43052                           ; BSR set to: 1
 43053                           ;motor.c: 982: os.current_position_in_steps = 0;
 43054  0157B4  0E00               	movlw	0
 43055  0157B6  6F6C               	movwf	(_os+7)& (0+255),b	;volatile
 43056  0157B8  0E00               	movlw	0
 43057  0157BA  6F6D               	movwf	(_os+8)& (0+255),b	;volatile
 43058  0157BC  0E00               	movlw	0
 43059  0157BE  6F6E               	movwf	(_os+9)& (0+255),b	;volatile
 43060  0157C0  0E00               	movlw	0
 43061  0157C2  6F6F               	movwf	(_os+10)& (0+255),b	;volatile
 43062                           
 43063                           ; BSR set to: 1
 43064                           ;motor.c: 983: os.absolute_position = 0;
 43065  0157C4  0E00               	movlw	0
 43066  0157C6  6F71               	movwf	(_os+12)& (0+255),b	;volatile
 43067  0157C8  0E00               	movlw	0
 43068  0157CA  6F70               	movwf	(_os+11)& (0+255),b	;volatile
 43069                           
 43070                           ; BSR set to: 1
 43071                           ;motor.c: 984: os.current_position_in_degrees = 0;
 43072  0157CC  0E00               	movlw	0
 43073  0157CE  6F73               	movwf	(_os+14)& (0+255),b	;volatile
 43074  0157D0  0E00               	movlw	0
 43075  0157D2  6F72               	movwf	(_os+13)& (0+255),b	;volatile
 43076                           
 43077                           ; BSR set to: 1
 43078                           ;motor.c: 985: os.divide_position = 0;
 43079  0157D4  0E00               	movlw	0
 43080  0157D6  6F7D               	movwf	(_os+24)& (0+255),b	;volatile
 43081  0157D8  0E00               	movlw	0
 43082  0157DA  6F7C               	movwf	(_os+23)& (0+255),b	;volatile
 43083                           
 43084                           ; BSR set to: 1
 43085                           ;motor.c: 988: _motor_move_back_forth();
 43086  0157DC  EC63  F09A         	call	__motor_move_back_forth	;wreg free
 43087  0157E0  0012               	return		;funcret
 43088  0157E2                     __end_of_motor_set_zero:
 43089                           	opt stack 0
 43090                           tosu	equ	0xFFF
 43091                           tosh	equ	0xFFE
 43092                           tosl	equ	0xFFD
 43093                           pclath	equ	0xFFA
 43094                           tblptru	equ	0xFF8
 43095                           tblptrh	equ	0xFF7
 43096                           tblptrl	equ	0xFF6
 43097                           tablat	equ	0xFF5
 43098                           prodh	equ	0xFF4
 43099                           prodl	equ	0xFF3
 43100                           intcon	equ	0xFF2
 43101                           indf0	equ	0xFEF
 43102                           postinc0	equ	0xFEE
 43103                           fsr0h	equ	0xFEA
 43104                           fsr0l	equ	0xFE9
 43105                           wreg	equ	0xFE8
 43106                           indf1	equ	0xFE7
 43107                           postinc1	equ	0xFE6
 43108                           postdec1	equ	0xFE5
 43109                           plusw1	equ	0xFE3
 43110                           fsr1h	equ	0xFE2
 43111                           fsr1l	equ	0xFE1
 43112                           indf2	equ	0xFDF
 43113                           postinc2	equ	0xFDE
 43114                           postdec2	equ	0xFDD
 43115                           plusw2	equ	0xFDB
 43116                           fsr2h	equ	0xFDA
 43117                           fsr2l	equ	0xFD9
 43118                           status	equ	0xFD8
 43119                           
 43120 ;; *************** function __motor_move_back_forth *****************
 43121 ;; Defined at:
 43122 ;;		line 296 in file "motor.c"
 43123 ;; Parameters:    Size  Location     Type
 43124 ;;		None
 43125 ;; Auto vars:     Size  Location     Type
 43126 ;;  return_value    1    9[BANK0 ] enum E6639
 43127 ;;  return_value    1    8[BANK0 ] enum E6639
 43128 ;; Return value:  Size  Location     Type
 43129 ;;                  1    wreg      enum E6639
 43130 ;; Registers used:
 43131 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43132 ;; Tracked objects:
 43133 ;;		On entry : 0/0
 43134 ;;		On exit  : 0/0
 43135 ;;		Unchanged: 0/0
 43136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43138 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43140 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43141 ;;Total ram usage:        2 bytes
 43142 ;; Hardware stack levels used:    1
 43143 ;; Hardware stack levels required when called:   12
 43144 ;; This function calls:
 43145 ;;		__motor_schedule_command
 43146 ;;		_motor_items_in_cue
 43147 ;; This function is called by:
 43148 ;;		_motor_set_zero
 43149 ;; This function uses a non-reentrant model
 43150 ;;
 43151                           
 43152                           	psect	text174
 43153  0134C6                     __ptext174:
 43154                           	opt stack 0
 43155  0134C6                     __motor_move_back_forth:
 43156                           	opt stack 16
 43157                           
 43158                           ;motor.c: 298: motorReturnValue_t return_value_1;;motor.c: 299: motorReturnValue_t retur
      +                          n_value_2;;motor.c: 301: if(os.busy || motor_items_in_cue()!=0)
 43159                           
 43160                           ;incstack = 0
 43161  0134C6  0101               	movlb	1	; () banked
 43162  0134C8  5175               	movf	(_os+16)& (0+255),w,b	;volatile
 43163  0134CA  A4D8               	btfss	status,2,c
 43164  0134CC  0012               	return	
 43165                           
 43166                           ; BSR set to: 1
 43167  0134CE  EC12  F0B0         	call	_motor_items_in_cue	;wreg free
 43168  0134D2  0900               	iorlw	0
 43169  0134D4  A4D8               	btfss	status,2,c
 43170  0134D6  0012               	return	
 43171                           
 43172                           ;motor.c: 305: };motor.c: 307: if(config.overshoot_in_steps==0)
 43173                           
 43174                           ;motor.c: 302: {;motor.c: 304: return MOTOR_RETURN_VALUE_BUSY;;	Return value of __motor_
      +                          move_back_forth is never used
 43175  0134D8  0101               	movlb	1	; () banked
 43176  0134DA  519B               	movf	(_config+5)& (0+255),w,b
 43177  0134DC  119C               	iorwf	(_config+6)& (0+255),w,b
 43178  0134DE  B4D8               	btfsc	status,2,c
 43179  0134E0  0012               	return	
 43180                           
 43181                           ; BSR set to: 1
 43182                           ;motor.c: 311: };motor.c: 313: if(os.approach_direction==MOTOR_DIRECTION_CW)
 43183                           
 43184                           ; BSR set to: 1
 43185                           
 43186                           ; BSR set to: 1
 43187                           ;motor.c: 308: {;motor.c: 310: return MOTOR_RETURN_VALUE_OK;;	Return value of __motor_mo
      +                          ve_back_forth is never used
 43188  0134E2  0578               	decf	(_os+19)& (0+255),w,b	;volatile
 43189  0134E4  A4D8               	btfss	status,2,c
 43190  0134E6  D022               	goto	l2495
 43191                           
 43192                           ; BSR set to: 1
 43193                           ;motor.c: 314: {;motor.c: 315: return_value_1 = _motor_schedule_command(MOTOR_DIRECTION_
      +                          CCW, config.overshoot_in_steps, 0xFFFF, MOTOR_MOVE_TYPE_NORMAL);
 43194  0134E8  C19B  F060         	movff	_config+5,__motor_schedule_command@distance_in_steps
 43195  0134EC  C19C  F061         	movff	_config+6,__motor_schedule_command@distance_in_steps+1
 43196  0134F0  0100               	movlb	0	; () banked
 43197  0134F2  6B62               	clrf	(__motor_schedule_command@distance_in_steps+2)& (0+255),b
 43198  0134F4  6B63               	clrf	(__motor_schedule_command@distance_in_steps+3)& (0+255),b
 43199  0134F6  0EFF               	movlw	255
 43200  0134F8  6F65               	movwf	(__motor_schedule_command@speed+1)& (0+255),b
 43201  0134FA  6964               	setf	__motor_schedule_command@speed& (0+255),b
 43202  0134FC  0E00               	movlw	0
 43203  0134FE  6F66               	movwf	__motor_schedule_command@type& (0+255),b
 43204  013500  0EFF               	movlw	255
 43205  013502  EC10  F08F         	call	__motor_schedule_command
 43206  013506  0100               	movlb	0	; () banked
 43207  013508  6F68               	movwf	__motor_move_back_forth@return_value_1& (0+255),b
 43208                           
 43209                           ;motor.c: 316: return_value_2 = _motor_schedule_command(MOTOR_DIRECTION_CW, config.overs
      +                          hoot_in_steps, 0xFFFF, MOTOR_MOVE_TYPE_NORMAL);
 43210  01350A  C19B  F060         	movff	_config+5,__motor_schedule_command@distance_in_steps
 43211  01350E  C19C  F061         	movff	_config+6,__motor_schedule_command@distance_in_steps+1
 43212  013512  6B62               	clrf	(__motor_schedule_command@distance_in_steps+2)& (0+255),b
 43213  013514  6B63               	clrf	(__motor_schedule_command@distance_in_steps+3)& (0+255),b
 43214  013516  0EFF               	movlw	255
 43215  013518  6F65               	movwf	(__motor_schedule_command@speed+1)& (0+255),b
 43216  01351A  6964               	setf	__motor_schedule_command@speed& (0+255),b
 43217  01351C  0E00               	movlw	0
 43218  01351E  6F66               	movwf	__motor_schedule_command@type& (0+255),b
 43219  013520  0E01               	movlw	1
 43220  013522  EC10  F08F         	call	__motor_schedule_command
 43221  013526  0100               	movlb	0	; () banked
 43222  013528  6F69               	movwf	__motor_move_back_forth@return_value_2& (0+255),b
 43223                           
 43224                           ;motor.c: 317: }
 43225  01352A  0012               	return	
 43226  01352C                     l2495:
 43227                           
 43228                           ;motor.c: 318: else;motor.c: 319: {;motor.c: 320: return_value_1 = _motor_schedule_comma
      +                          nd(MOTOR_DIRECTION_CW, config.overshoot_in_steps, 0xFFFF, MOTOR_MOVE_TYPE_NORMAL);
 43229                           
 43230                           ; BSR set to: 0
 43231  01352C  C19B  F060         	movff	_config+5,__motor_schedule_command@distance_in_steps
 43232  013530  C19C  F061         	movff	_config+6,__motor_schedule_command@distance_in_steps+1
 43233  013534  0100               	movlb	0	; () banked
 43234  013536  6B62               	clrf	(__motor_schedule_command@distance_in_steps+2)& (0+255),b
 43235  013538  6B63               	clrf	(__motor_schedule_command@distance_in_steps+3)& (0+255),b
 43236  01353A  0EFF               	movlw	255
 43237  01353C  6F65               	movwf	(__motor_schedule_command@speed+1)& (0+255),b
 43238  01353E  6964               	setf	__motor_schedule_command@speed& (0+255),b
 43239  013540  0E00               	movlw	0
 43240  013542  6F66               	movwf	__motor_schedule_command@type& (0+255),b
 43241  013544  0E01               	movlw	1
 43242  013546  EC10  F08F         	call	__motor_schedule_command
 43243  01354A  0100               	movlb	0	; () banked
 43244  01354C  6F68               	movwf	__motor_move_back_forth@return_value_1& (0+255),b
 43245                           
 43246                           ;motor.c: 321: return_value_2 = _motor_schedule_command(MOTOR_DIRECTION_CCW, config.over
      +                          shoot_in_steps, 0xFFFF, MOTOR_MOVE_TYPE_NORMAL);
 43247  01354E  C19B  F060         	movff	_config+5,__motor_schedule_command@distance_in_steps
 43248  013552  C19C  F061         	movff	_config+6,__motor_schedule_command@distance_in_steps+1
 43249  013556  6B62               	clrf	(__motor_schedule_command@distance_in_steps+2)& (0+255),b
 43250  013558  6B63               	clrf	(__motor_schedule_command@distance_in_steps+3)& (0+255),b
 43251  01355A  0EFF               	movlw	255
 43252  01355C  6F65               	movwf	(__motor_schedule_command@speed+1)& (0+255),b
 43253  01355E  6964               	setf	__motor_schedule_command@speed& (0+255),b
 43254  013560  0E00               	movlw	0
 43255  013562  6F66               	movwf	__motor_schedule_command@type& (0+255),b
 43256  013564  0EFF               	movlw	255
 43257  013566  EC10  F08F         	call	__motor_schedule_command
 43258  01356A  0100               	movlb	0	; () banked
 43259  01356C  6F69               	movwf	__motor_move_back_forth@return_value_2& (0+255),b
 43260                           
 43261                           ; BSR set to: 0
 43262                           ;motor.c: 330: else;motor.c: 331: {;motor.c: 332: return return_value_2;;	Return value o
      +                          f __motor_move_back_forth is never used
 43263                           
 43264                           ; BSR set to: 0
 43265                           ;motor.c: 329: }
 43266                           
 43267                           ; BSR set to: 0
 43268                           ;motor.c: 327: {;motor.c: 328: return return_value_1;;	Return value of __motor_move_back
      +                          _forth is never used
 43269                           
 43270                           ; BSR set to: 0
 43271                           
 43272                           ; BSR set to: 0
 43273  01356E  0012               	return	
 43274  013570                     __end_of__motor_move_back_forth:
 43275                           	opt stack 0
 43276                           tosu	equ	0xFFF
 43277                           tosh	equ	0xFFE
 43278                           tosl	equ	0xFFD
 43279                           pclath	equ	0xFFA
 43280                           tblptru	equ	0xFF8
 43281                           tblptrh	equ	0xFF7
 43282                           tblptrl	equ	0xFF6
 43283                           tablat	equ	0xFF5
 43284                           prodh	equ	0xFF4
 43285                           prodl	equ	0xFF3
 43286                           intcon	equ	0xFF2
 43287                           indf0	equ	0xFEF
 43288                           postinc0	equ	0xFEE
 43289                           fsr0h	equ	0xFEA
 43290                           fsr0l	equ	0xFE9
 43291                           wreg	equ	0xFE8
 43292                           indf1	equ	0xFE7
 43293                           postinc1	equ	0xFE6
 43294                           postdec1	equ	0xFE5
 43295                           plusw1	equ	0xFE3
 43296                           fsr1h	equ	0xFE2
 43297                           fsr1l	equ	0xFE1
 43298                           indf2	equ	0xFDF
 43299                           postinc2	equ	0xFDE
 43300                           postdec2	equ	0xFDD
 43301                           plusw2	equ	0xFDB
 43302                           fsr2h	equ	0xFDA
 43303                           fsr2l	equ	0xFD9
 43304                           status	equ	0xFD8
 43305                           
 43306 ;; *************** function _motor_move_endless *****************
 43307 ;; Defined at:
 43308 ;;		line 1109 in file "motor.c"
 43309 ;; Parameters:    Size  Location     Type
 43310 ;;  direction       1    wreg     enum E6622
 43311 ;;  speed           2   44[BANK0 ] unsigned int 
 43312 ;; Auto vars:     Size  Location     Type
 43313 ;;  direction       1   46[BANK0 ] enum E6622
 43314 ;; Return value:  Size  Location     Type
 43315 ;;                  1    wreg      enum E6782
 43316 ;; Registers used:
 43317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43318 ;; Tracked objects:
 43319 ;;		On entry : 0/0
 43320 ;;		On exit  : 0/0
 43321 ;;		Unchanged: 0/0
 43322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43323 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43324 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43326 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43327 ;;Total ram usage:        3 bytes
 43328 ;; Hardware stack levels used:    1
 43329 ;; Hardware stack levels required when called:   13
 43330 ;; This function calls:
 43331 ;;		__motor_move_steps
 43332 ;; This function is called by:
 43333 ;;		__parse_command_short
 43334 ;;		_encoder_statemachine
 43335 ;; This function uses a non-reentrant model
 43336 ;;
 43337                           
 43338                           	psect	text175
 43339  015B8E                     __ptext175:
 43340                           	opt stack 0
 43341  015B8E                     _motor_move_endless:
 43342                           	opt stack 16
 43343                           
 43344                           ;incstack = 0
 43345                           ;motor_move_endless@direction stored from wreg
 43346  015B8E  0100               	movlb	0	; () banked
 43347  015B90  6F8E               	movwf	motor_move_endless@direction& (0+255),b
 43348                           
 43349                           ;motor.c: 1111: return _motor_move_steps(direction, 0xFFFFFFFF, speed, MOTOR_OVERSHOOT_N
      +                          O_OVERSHOOT, MOTOR_MOVE_TYPE_ENDLESS);;	Return value of _motor_move_endless is never use
      +                          d
 43350  015B92  0EFF               	movlw	255
 43351  015B94  0100               	movlb	0	; () banked
 43352  015B96  6F7D               	movwf	__motor_move_steps@distance_in_steps& (0+255),b
 43353  015B98  0EFF               	movlw	255
 43354  015B9A  6F7E               	movwf	(__motor_move_steps@distance_in_steps+1)& (0+255),b
 43355  015B9C  0EFF               	movlw	255
 43356  015B9E  6F7F               	movwf	(__motor_move_steps@distance_in_steps+2)& (0+255),b
 43357  015BA0  0EFF               	movlw	255
 43358  015BA2  6F80               	movwf	(__motor_move_steps@distance_in_steps+3)& (0+255),b
 43359  015BA4  C08C  F081         	movff	motor_move_endless@speed,__motor_move_steps@speed
 43360  015BA8  C08D  F082         	movff	motor_move_endless@speed+1,__motor_move_steps@speed+1
 43361  015BAC  0E01               	movlw	1
 43362  015BAE  6F83               	movwf	__motor_move_steps@overshoot& (0+255),b
 43363  015BB0  0E01               	movlw	1
 43364  015BB2  6F84               	movwf	__motor_move_steps@type& (0+255),b
 43365  015BB4  518E               	movf	motor_move_endless@direction& (0+255),w,b
 43366  015BB6  EC2E  F077         	call	__motor_move_steps
 43367  015BBA  0012               	return	
 43368  015BBC                     __end_of_motor_move_endless:
 43369                           	opt stack 0
 43370                           tosu	equ	0xFFF
 43371                           tosh	equ	0xFFE
 43372                           tosl	equ	0xFFD
 43373                           pclath	equ	0xFFA
 43374                           tblptru	equ	0xFF8
 43375                           tblptrh	equ	0xFF7
 43376                           tblptrl	equ	0xFF6
 43377                           tablat	equ	0xFF5
 43378                           prodh	equ	0xFF4
 43379                           prodl	equ	0xFF3
 43380                           intcon	equ	0xFF2
 43381                           indf0	equ	0xFEF
 43382                           postinc0	equ	0xFEE
 43383                           fsr0h	equ	0xFEA
 43384                           fsr0l	equ	0xFE9
 43385                           wreg	equ	0xFE8
 43386                           indf1	equ	0xFE7
 43387                           postinc1	equ	0xFE6
 43388                           postdec1	equ	0xFE5
 43389                           plusw1	equ	0xFE3
 43390                           fsr1h	equ	0xFE2
 43391                           fsr1l	equ	0xFE1
 43392                           indf2	equ	0xFDF
 43393                           postinc2	equ	0xFDE
 43394                           postdec2	equ	0xFDD
 43395                           plusw2	equ	0xFDB
 43396                           fsr2h	equ	0xFDA
 43397                           fsr2l	equ	0xFD9
 43398                           status	equ	0xFD8
 43399                           
 43400 ;; *************** function _motor_goto_steps *****************
 43401 ;; Defined at:
 43402 ;;		line 1032 in file "motor.c"
 43403 ;; Parameters:    Size  Location     Type
 43404 ;;  direction       1    wreg     enum E6622
 43405 ;;  position        4   50[BANK0 ] unsigned long 
 43406 ;;  speed           2   54[BANK0 ] unsigned int 
 43407 ;;  overshoot       1   56[BANK0 ] enum E6635
 43408 ;; Auto vars:     Size  Location     Type
 43409 ;;  direction       1   61[BANK0 ] enum E6622
 43410 ;;  distance_in_    4   57[BANK0 ] unsigned long 
 43411 ;; Return value:  Size  Location     Type
 43412 ;;                  1    wreg      enum E6782
 43413 ;; Registers used:
 43414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43415 ;; Tracked objects:
 43416 ;;		On entry : 0/0
 43417 ;;		On exit  : 0/0
 43418 ;;		Unchanged: 0/0
 43419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43420 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43421 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43423 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43424 ;;Total ram usage:       12 bytes
 43425 ;; Hardware stack levels used:    1
 43426 ;; Hardware stack levels required when called:   13
 43427 ;; This function calls:
 43428 ;;		__motor_calculate_distance
 43429 ;;		__motor_decide_direction
 43430 ;;		__motor_move_steps
 43431 ;; This function is called by:
 43432 ;;		__parse_command_short
 43433 ;;		_motor_divide_jump
 43434 ;;		_motor_divide_jump_to_nearest
 43435 ;;		_encoder_statemachine
 43436 ;; This function uses a non-reentrant model
 43437 ;;
 43438                           
 43439                           	psect	text176
 43440  0138A4                     __ptext176:
 43441                           	opt stack 0
 43442  0138A4                     _motor_goto_steps:
 43443                           	opt stack 16
 43444                           
 43445                           ;incstack = 0
 43446                           ;motor_goto_steps@direction stored from wreg
 43447  0138A4  0100               	movlb	0	; () banked
 43448  0138A6  6F9D               	movwf	motor_goto_steps@direction& (0+255),b
 43449                           
 43450                           ;motor.c: 1034: uint32_t distance_in_steps;;motor.c: 1036: if(position>=config.full_circ
      +                          le_in_steps)
 43451  0138A8  0101               	movlb	1	; () banked
 43452  0138AA  5196               	movf	_config& (0+255),w,b
 43453  0138AC  0100               	movlb	0	; () banked
 43454  0138AE  5D92               	subwf	motor_goto_steps@position& (0+255),w,b
 43455  0138B0  0101               	movlb	1	; () banked
 43456  0138B2  5197               	movf	(_config+1)& (0+255),w,b
 43457  0138B4  0100               	movlb	0	; () banked
 43458  0138B6  5993               	subwfb	(motor_goto_steps@position+1)& (0+255),w,b
 43459  0138B8  0101               	movlb	1	; () banked
 43460  0138BA  5198               	movf	(_config+2)& (0+255),w,b
 43461  0138BC  0100               	movlb	0	; () banked
 43462  0138BE  5994               	subwfb	(motor_goto_steps@position+2)& (0+255),w,b
 43463  0138C0  0101               	movlb	1	; () banked
 43464  0138C2  5199               	movf	(_config+3)& (0+255),w,b
 43465  0138C4  0100               	movlb	0	; () banked
 43466  0138C6  5995               	subwfb	(motor_goto_steps@position+3)& (0+255),w,b
 43467  0138C8  B0D8               	btfsc	status,0,c
 43468  0138CA  0012               	return	
 43469                           
 43470                           ; BSR set to: 0
 43471                           ;motor.c: 1040: };motor.c: 1043: if(direction==MOTOR_DIRECTION_SHORTEST)
 43472                           
 43473                           ; BSR set to: 0
 43474                           
 43475                           ; BSR set to: 0
 43476                           ;motor.c: 1037: {;motor.c: 1039: return MOTOR_RETURN_VALUE_INVALID_POSITION;;	Return val
      +                          ue of _motor_goto_steps is never used
 43477  0138CC  519D               	movf	motor_goto_steps@direction& (0+255),w,b
 43478  0138CE  A4D8               	btfss	status,2,c
 43479  0138D0  D00E               	goto	l2654
 43480                           
 43481                           ; BSR set to: 0
 43482                           ;motor.c: 1044: {;motor.c: 1045: direction = _motor_decide_direction(position, overshoot
      +                          );
 43483  0138D2  C092  F07D         	movff	motor_goto_steps@position,__motor_decide_direction@target_position_in_steps
 43484  0138D6  C093  F07E         	movff	motor_goto_steps@position+1,__motor_decide_direction@target_position_in_steps+1
 43485  0138DA  C094  F07F         	movff	motor_goto_steps@position+2,__motor_decide_direction@target_position_in_steps+2
 43486  0138DE  C095  F080         	movff	motor_goto_steps@position+3,__motor_decide_direction@target_position_in_steps+3
 43487  0138E2  C098  F081         	movff	motor_goto_steps@overshoot,__motor_decide_direction@overshoot
 43488  0138E6  EC9C  F07A         	call	__motor_decide_direction	;wreg free
 43489  0138EA  0100               	movlb	0	; () banked
 43490  0138EC  6F9D               	movwf	motor_goto_steps@direction& (0+255),b
 43491  0138EE                     l2654:
 43492                           
 43493                           ; BSR set to: 0
 43494                           ;motor.c: 1046: };motor.c: 1049: distance_in_steps = _motor_calculate_distance(direction
      +                          , position);
 43495                           
 43496                           ; BSR set to: 0
 43497  0138EE  C092  F060         	movff	motor_goto_steps@position,__motor_calculate_distance@target_position
 43498  0138F2  C093  F061         	movff	motor_goto_steps@position+1,__motor_calculate_distance@target_position+1
 43499  0138F6  C094  F062         	movff	motor_goto_steps@position+2,__motor_calculate_distance@target_position+2
 43500  0138FA  C095  F063         	movff	motor_goto_steps@position+3,__motor_calculate_distance@target_position+3
 43501  0138FE  519D               	movf	motor_goto_steps@direction& (0+255),w,b
 43502  013900  EC32  F092         	call	__motor_calculate_distance
 43503  013904  C060  F099         	movff	?__motor_calculate_distance,motor_goto_steps@distance_in_steps
 43504  013908  C061  F09A         	movff	?__motor_calculate_distance+1,motor_goto_steps@distance_in_steps+1
 43505  01390C  C062  F09B         	movff	?__motor_calculate_distance+2,motor_goto_steps@distance_in_steps+2
 43506  013910  C063  F09C         	movff	?__motor_calculate_distance+3,motor_goto_steps@distance_in_steps+3
 43507                           
 43508                           ;motor.c: 1052: return _motor_move_steps(direction, distance_in_steps, speed, overshoot,
      +                           MOTOR_MOVE_TYPE_NORMAL);;	Return value of _motor_goto_steps is never used
 43509  013914  C099  F07D         	movff	motor_goto_steps@distance_in_steps,__motor_move_steps@distance_in_steps
 43510  013918  C09A  F07E         	movff	motor_goto_steps@distance_in_steps+1,__motor_move_steps@distance_in_steps+1
 43511  01391C  C09B  F07F         	movff	motor_goto_steps@distance_in_steps+2,__motor_move_steps@distance_in_steps+2
 43512  013920  C09C  F080         	movff	motor_goto_steps@distance_in_steps+3,__motor_move_steps@distance_in_steps+3
 43513  013924  C096  F081         	movff	motor_goto_steps@speed,__motor_move_steps@speed
 43514  013928  C097  F082         	movff	motor_goto_steps@speed+1,__motor_move_steps@speed+1
 43515  01392C  C098  F083         	movff	motor_goto_steps@overshoot,__motor_move_steps@overshoot
 43516  013930  0E00               	movlw	0
 43517  013932  0100               	movlb	0	; () banked
 43518  013934  6F84               	movwf	__motor_move_steps@type& (0+255),b
 43519  013936  519D               	movf	motor_goto_steps@direction& (0+255),w,b
 43520  013938  EC2E  F077         	call	__motor_move_steps
 43521  01393C  0012               	return	
 43522  01393E                     __end_of_motor_goto_steps:
 43523                           	opt stack 0
 43524                           tosu	equ	0xFFF
 43525                           tosh	equ	0xFFE
 43526                           tosl	equ	0xFFD
 43527                           pclath	equ	0xFFA
 43528                           tblptru	equ	0xFF8
 43529                           tblptrh	equ	0xFF7
 43530                           tblptrl	equ	0xFF6
 43531                           tablat	equ	0xFF5
 43532                           prodh	equ	0xFF4
 43533                           prodl	equ	0xFF3
 43534                           intcon	equ	0xFF2
 43535                           indf0	equ	0xFEF
 43536                           postinc0	equ	0xFEE
 43537                           fsr0h	equ	0xFEA
 43538                           fsr0l	equ	0xFE9
 43539                           wreg	equ	0xFE8
 43540                           indf1	equ	0xFE7
 43541                           postinc1	equ	0xFE6
 43542                           postdec1	equ	0xFE5
 43543                           plusw1	equ	0xFE3
 43544                           fsr1h	equ	0xFE2
 43545                           fsr1l	equ	0xFE1
 43546                           indf2	equ	0xFDF
 43547                           postinc2	equ	0xFDE
 43548                           postdec2	equ	0xFDD
 43549                           plusw2	equ	0xFDB
 43550                           fsr2h	equ	0xFDA
 43551                           fsr2l	equ	0xFD9
 43552                           status	equ	0xFD8
 43553                           
 43554 ;; *************** function __motor_decide_direction *****************
 43555 ;; Defined at:
 43556 ;;		line 336 in file "motor.c"
 43557 ;; Parameters:    Size  Location     Type
 43558 ;;  target_posit    4   29[BANK0 ] unsigned long 
 43559 ;;  overshoot       1   33[BANK0 ] enum E6635
 43560 ;; Auto vars:     Size  Location     Type
 43561 ;;  distance_to_    4   46[BANK0 ] unsigned long 
 43562 ;;  distance_to_    4   42[BANK0 ] unsigned long 
 43563 ;;  distance_to_    4   38[BANK0 ] long 
 43564 ;;  distance_to_    4   34[BANK0 ] long 
 43565 ;; Return value:  Size  Location     Type
 43566 ;;                  1    wreg      enum E6622
 43567 ;; Registers used:
 43568 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 43569 ;; Tracked objects:
 43570 ;;		On entry : 0/0
 43571 ;;		On exit  : 0/0
 43572 ;;		Unchanged: 0/0
 43573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43574 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43575 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43577 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43578 ;;Total ram usage:       21 bytes
 43579 ;; Hardware stack levels used:    1
 43580 ;; Hardware stack levels required when called:   12
 43581 ;; This function calls:
 43582 ;;		__motor_calculate_distance
 43583 ;;		__motor_distance_to_limit
 43584 ;; This function is called by:
 43585 ;;		_motor_goto_steps
 43586 ;;		_motor_goto_degrees_float
 43587 ;;		_motor_goto_degrees_int
 43588 ;; This function uses a non-reentrant model
 43589 ;;
 43590                           
 43591                           	psect	text177
 43592  00F538                     __ptext177:
 43593                           	opt stack 0
 43594  00F538                     __motor_decide_direction:
 43595                           	opt stack 16
 43596                           
 43597                           ;motor.c: 343: uint32_t distance_to_target_cw;;motor.c: 344: uint32_t distance_to_target
      +                          _ccw;;motor.c: 346: int32_t distance_to_limit_cw;;motor.c: 347: int32_t distance_to_limi
      +                          t_ccw;;motor.c: 350: distance_to_target_cw = _motor_calculate_distance(MOTOR_DIRECTION_C
      +                          W, target_position_in_steps);
 43598                           
 43599                           ;incstack = 0
 43600  00F538  C07D  F060         	movff	__motor_decide_direction@target_position_in_steps,__motor_calculate_distance@targ
      +                          et_position
 43601  00F53C  C07E  F061         	movff	__motor_decide_direction@target_position_in_steps+1,__motor_calculate_distance@ta
      +                          rget_position+1
 43602  00F540  C07F  F062         	movff	__motor_decide_direction@target_position_in_steps+2,__motor_calculate_distance@ta
      +                          rget_position+2
 43603  00F544  C080  F063         	movff	__motor_decide_direction@target_position_in_steps+3,__motor_calculate_distance@ta
      +                          rget_position+3
 43604  00F548  0E01               	movlw	1
 43605  00F54A  EC32  F092         	call	__motor_calculate_distance
 43606  00F54E  C060  F08A         	movff	?__motor_calculate_distance,__motor_decide_direction@distance_to_target_cw
 43607  00F552  C061  F08B         	movff	?__motor_calculate_distance+1,__motor_decide_direction@distance_to_target_cw+1
 43608  00F556  C062  F08C         	movff	?__motor_calculate_distance+2,__motor_decide_direction@distance_to_target_cw+2
 43609  00F55A  C063  F08D         	movff	?__motor_calculate_distance+3,__motor_decide_direction@distance_to_target_cw+3
 43610                           
 43611                           ;motor.c: 351: distance_to_target_ccw = _motor_calculate_distance(MOTOR_DIRECTION_CCW, t
      +                          arget_position_in_steps);
 43612  00F55E  C07D  F060         	movff	__motor_decide_direction@target_position_in_steps,__motor_calculate_distance@targ
      +                          et_position
 43613  00F562  C07E  F061         	movff	__motor_decide_direction@target_position_in_steps+1,__motor_calculate_distance@ta
      +                          rget_position+1
 43614  00F566  C07F  F062         	movff	__motor_decide_direction@target_position_in_steps+2,__motor_calculate_distance@ta
      +                          rget_position+2
 43615  00F56A  C080  F063         	movff	__motor_decide_direction@target_position_in_steps+3,__motor_calculate_distance@ta
      +                          rget_position+3
 43616  00F56E  0EFF               	movlw	255
 43617  00F570  EC32  F092         	call	__motor_calculate_distance
 43618  00F574  C060  F08E         	movff	?__motor_calculate_distance,__motor_decide_direction@distance_to_target_ccw
 43619  00F578  C061  F08F         	movff	?__motor_calculate_distance+1,__motor_decide_direction@distance_to_target_ccw+1
 43620  00F57C  C062  F090         	movff	?__motor_calculate_distance+2,__motor_decide_direction@distance_to_target_ccw+2
 43621  00F580  C063  F091         	movff	?__motor_calculate_distance+3,__motor_decide_direction@distance_to_target_ccw+3
 43622                           
 43623                           ;motor.c: 354: distance_to_limit_cw = _motor_distance_to_limit(MOTOR_DIRECTION_CW);
 43624  00F584  0E01               	movlw	1
 43625  00F586  EC3A  F080         	call	__motor_distance_to_limit
 43626  00F58A  C06C  F082         	movff	?__motor_distance_to_limit,__motor_decide_direction@distance_to_limit_cw
 43627  00F58E  C06D  F083         	movff	?__motor_distance_to_limit+1,__motor_decide_direction@distance_to_limit_cw+1
 43628  00F592  C06E  F084         	movff	?__motor_distance_to_limit+2,__motor_decide_direction@distance_to_limit_cw+2
 43629  00F596  C06F  F085         	movff	?__motor_distance_to_limit+3,__motor_decide_direction@distance_to_limit_cw+3
 43630                           
 43631                           ;motor.c: 355: distance_to_limit_ccw = _motor_distance_to_limit(MOTOR_DIRECTION_CCW);
 43632  00F59A  0EFF               	movlw	255
 43633  00F59C  EC3A  F080         	call	__motor_distance_to_limit
 43634  00F5A0  C06C  F086         	movff	?__motor_distance_to_limit,__motor_decide_direction@distance_to_limit_ccw
 43635  00F5A4  C06D  F087         	movff	?__motor_distance_to_limit+1,__motor_decide_direction@distance_to_limit_ccw+1
 43636  00F5A8  C06E  F088         	movff	?__motor_distance_to_limit+2,__motor_decide_direction@distance_to_limit_ccw+2
 43637  00F5AC  C06F  F089         	movff	?__motor_distance_to_limit+3,__motor_decide_direction@distance_to_limit_ccw+3
 43638                           
 43639                           ;motor.c: 359: if((distance_to_target_cw>distance_to_limit_cw) && (distance_to_target_cc
      +                          w>distance_to_limit_ccw))
 43640  00F5B0  0100               	movlb	0	; () banked
 43641  00F5B2  518A               	movf	__motor_decide_direction@distance_to_target_cw& (0+255),w,b
 43642  00F5B4  5D82               	subwf	__motor_decide_direction@distance_to_limit_cw& (0+255),w,b
 43643  00F5B6  518B               	movf	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),w,b
 43644  00F5B8  5983               	subwfb	(__motor_decide_direction@distance_to_limit_cw+1)& (0+255),w,b
 43645  00F5BA  518C               	movf	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),w,b
 43646  00F5BC  5984               	subwfb	(__motor_decide_direction@distance_to_limit_cw+2)& (0+255),w,b
 43647  00F5BE  518D               	movf	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),w,b
 43648  00F5C0  5985               	subwfb	(__motor_decide_direction@distance_to_limit_cw+3)& (0+255),w,b
 43649  00F5C2  B0D8               	btfsc	status,0,c
 43650  00F5C4  D00C               	goto	l2501
 43651                           
 43652                           ; BSR set to: 0
 43653  00F5C6  518E               	movf	__motor_decide_direction@distance_to_target_ccw& (0+255),w,b
 43654  00F5C8  5D86               	subwf	__motor_decide_direction@distance_to_limit_ccw& (0+255),w,b
 43655  00F5CA  518F               	movf	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),w,b
 43656  00F5CC  5987               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+1)& (0+255),w,b
 43657  00F5CE  5190               	movf	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),w,b
 43658  00F5D0  5988               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+2)& (0+255),w,b
 43659  00F5D2  5191               	movf	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),w,b
 43660  00F5D4  5989               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+3)& (0+255),w,b
 43661  00F5D6  B0D8               	btfsc	status,0,c
 43662  00F5D8  D002               	goto	l2501
 43663                           
 43664                           ; BSR set to: 0
 43665                           ;motor.c: 360: {;motor.c: 361: return MOTOR_DIRECTION_SHORTEST;
 43666  00F5DA  0E00               	movlw	0
 43667                           
 43668                           ; BSR set to: 0
 43669  00F5DC  0012               	return	
 43670  00F5DE                     l2501:
 43671                           
 43672                           ; BSR set to: 0
 43673                           ;motor.c: 362: };motor.c: 363: if(distance_to_target_cw>distance_to_limit_cw)
 43674                           
 43675                           ; BSR set to: 0
 43676  00F5DE  518A               	movf	__motor_decide_direction@distance_to_target_cw& (0+255),w,b
 43677  00F5E0  5D82               	subwf	__motor_decide_direction@distance_to_limit_cw& (0+255),w,b
 43678  00F5E2  518B               	movf	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),w,b
 43679  00F5E4  5983               	subwfb	(__motor_decide_direction@distance_to_limit_cw+1)& (0+255),w,b
 43680  00F5E6  518C               	movf	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),w,b
 43681  00F5E8  5984               	subwfb	(__motor_decide_direction@distance_to_limit_cw+2)& (0+255),w,b
 43682  00F5EA  518D               	movf	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),w,b
 43683  00F5EC  5985               	subwfb	(__motor_decide_direction@distance_to_limit_cw+3)& (0+255),w,b
 43684  00F5EE  B0D8               	btfsc	status,0,c
 43685  00F5F0  D002               	goto	l2503
 43686                           
 43687                           ; BSR set to: 0
 43688                           ;motor.c: 364: {;motor.c: 365: return MOTOR_DIRECTION_CCW;
 43689  00F5F2  0EFF               	movlw	255
 43690                           
 43691                           ; BSR set to: 0
 43692  00F5F4  0012               	return	
 43693  00F5F6                     l2503:
 43694                           
 43695                           ; BSR set to: 0
 43696                           ;motor.c: 366: };motor.c: 367: if(distance_to_target_ccw>distance_to_limit_ccw)
 43697                           
 43698                           ; BSR set to: 0
 43699  00F5F6  518E               	movf	__motor_decide_direction@distance_to_target_ccw& (0+255),w,b
 43700  00F5F8  5D86               	subwf	__motor_decide_direction@distance_to_limit_ccw& (0+255),w,b
 43701  00F5FA  518F               	movf	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),w,b
 43702  00F5FC  5987               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+1)& (0+255),w,b
 43703  00F5FE  5190               	movf	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),w,b
 43704  00F600  5988               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+2)& (0+255),w,b
 43705  00F602  5191               	movf	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),w,b
 43706  00F604  5989               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+3)& (0+255),w,b
 43707  00F606  B0D8               	btfsc	status,0,c
 43708  00F608  D002               	goto	l2504
 43709                           
 43710                           ; BSR set to: 0
 43711                           ;motor.c: 368: {;motor.c: 369: return MOTOR_DIRECTION_CW;
 43712  00F60A  0E01               	movlw	1
 43713                           
 43714                           ; BSR set to: 0
 43715  00F60C  0012               	return	
 43716  00F60E                     l2504:
 43717                           
 43718                           ; BSR set to: 0
 43719                           ;motor.c: 370: };motor.c: 374: if(overshoot==MOTOR_OVERSHOOT_WITH_OVERSHOOT)
 43720                           
 43721                           ; BSR set to: 0
 43722  00F60E  5181               	movf	__motor_decide_direction@overshoot& (0+255),w,b
 43723  00F610  A4D8               	btfss	status,2,c
 43724  00F612  D04E               	goto	l2507
 43725                           
 43726                           ; BSR set to: 0
 43727                           ;motor.c: 375: {;motor.c: 376: if(os.approach_direction==MOTOR_DIRECTION_CW)
 43728  00F614  0101               	movlb	1	; () banked
 43729  00F616  0578               	decf	(_os+19)& (0+255),w,b	;volatile
 43730  00F618  A4D8               	btfss	status,2,c
 43731  00F61A  D023               	goto	l2506
 43732                           
 43733                           ; BSR set to: 1
 43734                           ;motor.c: 377: {;motor.c: 379: distance_to_target_ccw += config.overshoot_in_steps;
 43735  00F61C  519B               	movf	(_config+5)& (0+255),w,b
 43736  00F61E  0100               	movlb	0	; () banked
 43737  00F620  278E               	addwf	__motor_decide_direction@distance_to_target_ccw& (0+255),f,b
 43738  00F622  0101               	movlb	1	; () banked
 43739  00F624  519C               	movf	(_config+6)& (0+255),w,b
 43740  00F626  0100               	movlb	0	; () banked
 43741  00F628  238F               	addwfc	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),f,b
 43742  00F62A  0E00               	movlw	0
 43743  00F62C  2390               	addwfc	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),f,b
 43744  00F62E  0E00               	movlw	0
 43745  00F630  2391               	addwfc	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),f,b
 43746                           
 43747                           ;motor.c: 380: distance_to_target_ccw += config.overshoot_in_steps;
 43748  00F632  0101               	movlb	1	; () banked
 43749  00F634  519B               	movf	(_config+5)& (0+255),w,b
 43750  00F636  0100               	movlb	0	; () banked
 43751  00F638  278E               	addwf	__motor_decide_direction@distance_to_target_ccw& (0+255),f,b
 43752  00F63A  0101               	movlb	1	; () banked
 43753  00F63C  519C               	movf	(_config+6)& (0+255),w,b
 43754  00F63E  0100               	movlb	0	; () banked
 43755  00F640  238F               	addwfc	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),f,b
 43756  00F642  0E00               	movlw	0
 43757  00F644  2390               	addwfc	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),f,b
 43758  00F646  0E00               	movlw	0
 43759  00F648  2391               	addwfc	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),f,b
 43760                           
 43761                           ;motor.c: 381: distance_to_target_ccw += config.overshoot_cost_in_steps;
 43762  00F64A  0101               	movlb	1	; () banked
 43763  00F64C  519D               	movf	(_config+7)& (0+255),w,b
 43764  00F64E  0100               	movlb	0	; () banked
 43765  00F650  278E               	addwf	__motor_decide_direction@distance_to_target_ccw& (0+255),f,b
 43766  00F652  0101               	movlb	1	; () banked
 43767  00F654  519E               	movf	(_config+8)& (0+255),w,b
 43768  00F656  0100               	movlb	0	; () banked
 43769  00F658  238F               	addwfc	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),f,b
 43770  00F65A  0E00               	movlw	0
 43771  00F65C  2390               	addwfc	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),f,b
 43772  00F65E  0E00               	movlw	0
 43773  00F660  2391               	addwfc	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),f,b
 43774  00F662                     l2506:
 43775                           
 43776                           ;motor.c: 382: };motor.c: 383: if(os.approach_direction==MOTOR_DIRECTION_CCW)
 43777                           
 43778                           ; BSR set to: 0
 43779  00F662  0101               	movlb	1	; () banked
 43780  00F664  2978               	incf	(_os+19)& (0+255),w,b	;volatile
 43781  00F666  A4D8               	btfss	status,2,c
 43782  00F668  D023               	goto	l2507
 43783                           
 43784                           ; BSR set to: 1
 43785                           ;motor.c: 384: {;motor.c: 386: distance_to_target_cw += config.overshoot_in_steps;
 43786  00F66A  519B               	movf	(_config+5)& (0+255),w,b
 43787  00F66C  0100               	movlb	0	; () banked
 43788  00F66E  278A               	addwf	__motor_decide_direction@distance_to_target_cw& (0+255),f,b
 43789  00F670  0101               	movlb	1	; () banked
 43790  00F672  519C               	movf	(_config+6)& (0+255),w,b
 43791  00F674  0100               	movlb	0	; () banked
 43792  00F676  238B               	addwfc	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),f,b
 43793  00F678  0E00               	movlw	0
 43794  00F67A  238C               	addwfc	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),f,b
 43795  00F67C  0E00               	movlw	0
 43796  00F67E  238D               	addwfc	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),f,b
 43797                           
 43798                           ;motor.c: 387: distance_to_target_cw += config.overshoot_in_steps;
 43799  00F680  0101               	movlb	1	; () banked
 43800  00F682  519B               	movf	(_config+5)& (0+255),w,b
 43801  00F684  0100               	movlb	0	; () banked
 43802  00F686  278A               	addwf	__motor_decide_direction@distance_to_target_cw& (0+255),f,b
 43803  00F688  0101               	movlb	1	; () banked
 43804  00F68A  519C               	movf	(_config+6)& (0+255),w,b
 43805  00F68C  0100               	movlb	0	; () banked
 43806  00F68E  238B               	addwfc	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),f,b
 43807  00F690  0E00               	movlw	0
 43808  00F692  238C               	addwfc	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),f,b
 43809  00F694  0E00               	movlw	0
 43810  00F696  238D               	addwfc	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),f,b
 43811                           
 43812                           ;motor.c: 388: distance_to_target_cw += config.overshoot_cost_in_steps;
 43813  00F698  0101               	movlb	1	; () banked
 43814  00F69A  519D               	movf	(_config+7)& (0+255),w,b
 43815  00F69C  0100               	movlb	0	; () banked
 43816  00F69E  278A               	addwf	__motor_decide_direction@distance_to_target_cw& (0+255),f,b
 43817  00F6A0  0101               	movlb	1	; () banked
 43818  00F6A2  519E               	movf	(_config+8)& (0+255),w,b
 43819  00F6A4  0100               	movlb	0	; () banked
 43820  00F6A6  238B               	addwfc	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),f,b
 43821  00F6A8  0E00               	movlw	0
 43822  00F6AA  238C               	addwfc	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),f,b
 43823  00F6AC  0E00               	movlw	0
 43824  00F6AE  238D               	addwfc	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),f,b
 43825  00F6B0                     l2507:
 43826                           
 43827                           ;motor.c: 389: };motor.c: 390: };motor.c: 393: if(distance_to_target_ccw<distance_to_tar
      +                          get_cw)
 43828                           
 43829                           ; BSR set to: 0
 43830                           
 43831                           ; BSR set to: 0
 43832  00F6B0  0100               	movlb	0	; () banked
 43833  00F6B2  518A               	movf	__motor_decide_direction@distance_to_target_cw& (0+255),w,b
 43834  00F6B4  5D8E               	subwf	__motor_decide_direction@distance_to_target_ccw& (0+255),w,b
 43835  00F6B6  518B               	movf	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),w,b
 43836  00F6B8  598F               	subwfb	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),w,b
 43837  00F6BA  518C               	movf	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),w,b
 43838  00F6BC  5990               	subwfb	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),w,b
 43839  00F6BE  518D               	movf	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),w,b
 43840  00F6C0  5991               	subwfb	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),w,b
 43841  00F6C2  B0D8               	btfsc	status,0,c
 43842  00F6C4  D002               	goto	l2508
 43843                           
 43844                           ; BSR set to: 0
 43845                           ;motor.c: 394: {;motor.c: 395: return MOTOR_DIRECTION_CCW;
 43846  00F6C6  0EFF               	movlw	255
 43847                           
 43848                           ; BSR set to: 0
 43849                           ;motor.c: 396: }
 43850                           
 43851                           ; BSR set to: 0
 43852  00F6C8  0012               	return	
 43853  00F6CA                     l2508:
 43854                           
 43855                           ; BSR set to: 0
 43856                           ;motor.c: 397: else;motor.c: 398: {;motor.c: 399: return MOTOR_DIRECTION_CW;
 43857                           
 43858                           ; BSR set to: 0
 43859  00F6CA  0E01               	movlw	1
 43860                           
 43861                           ; BSR set to: 0
 43862  00F6CC  0012               	return	
 43863  00F6CE                     __end_of__motor_decide_direction:
 43864                           	opt stack 0
 43865                           tosu	equ	0xFFF
 43866                           tosh	equ	0xFFE
 43867                           tosl	equ	0xFFD
 43868                           pclath	equ	0xFFA
 43869                           tblptru	equ	0xFF8
 43870                           tblptrh	equ	0xFF7
 43871                           tblptrl	equ	0xFF6
 43872                           tablat	equ	0xFF5
 43873                           prodh	equ	0xFF4
 43874                           prodl	equ	0xFF3
 43875                           intcon	equ	0xFF2
 43876                           indf0	equ	0xFEF
 43877                           postinc0	equ	0xFEE
 43878                           fsr0h	equ	0xFEA
 43879                           fsr0l	equ	0xFE9
 43880                           wreg	equ	0xFE8
 43881                           indf1	equ	0xFE7
 43882                           postinc1	equ	0xFE6
 43883                           postdec1	equ	0xFE5
 43884                           plusw1	equ	0xFE3
 43885                           fsr1h	equ	0xFE2
 43886                           fsr1l	equ	0xFE1
 43887                           indf2	equ	0xFDF
 43888                           postinc2	equ	0xFDE
 43889                           postdec2	equ	0xFDD
 43890                           plusw2	equ	0xFDB
 43891                           fsr2h	equ	0xFDA
 43892                           fsr2l	equ	0xFD9
 43893                           status	equ	0xFD8
 43894                           
 43895 ;; *************** function __motor_calculate_distance *****************
 43896 ;; Defined at:
 43897 ;;		line 482 in file "motor.c"
 43898 ;; Parameters:    Size  Location     Type
 43899 ;;  direction       1    wreg     enum E6622
 43900 ;;  target_posit    4    0[BANK0 ] unsigned long 
 43901 ;; Auto vars:     Size  Location     Type
 43902 ;;  direction       1    8[BANK0 ] enum E6622
 43903 ;;  distance        4    9[BANK0 ] unsigned long 
 43904 ;; Return value:  Size  Location     Type
 43905 ;;                  4    0[BANK0 ] unsigned long 
 43906 ;; Registers used:
 43907 ;;		wreg, status,2, status,0
 43908 ;; Tracked objects:
 43909 ;;		On entry : 0/0
 43910 ;;		On exit  : 0/0
 43911 ;;		Unchanged: 0/0
 43912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43913 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43914 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43915 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43916 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43917 ;;Total ram usage:       13 bytes
 43918 ;; Hardware stack levels used:    1
 43919 ;; Hardware stack levels required when called:   10
 43920 ;; This function calls:
 43921 ;;		Nothing
 43922 ;; This function is called by:
 43923 ;;		__motor_decide_direction
 43924 ;;		_motor_goto_steps
 43925 ;;		_motor_goto_degrees_float
 43926 ;;		_motor_goto_degrees_int
 43927 ;; This function uses a non-reentrant model
 43928 ;;
 43929                           
 43930                           	psect	text178
 43931  012464                     __ptext178:
 43932                           	opt stack 0
 43933  012464                     __motor_calculate_distance:
 43934                           	opt stack 17
 43935                           
 43936                           ; BSR set to: 0
 43937                           ;incstack = 0
 43938                           ;__motor_calculate_distance@direction stored from wreg
 43939  012464  0100               	movlb	0	; () banked
 43940  012466  6F68               	movwf	__motor_calculate_distance@direction& (0+255),b
 43941                           
 43942                           ;motor.c: 484: uint32_t distance;;motor.c: 487: if(direction==MOTOR_DIRECTION_CW)
 43943  012468  0100               	movlb	0	; () banked
 43944  01246A  0568               	decf	__motor_calculate_distance@direction& (0+255),w,b
 43945  01246C  A4D8               	btfss	status,2,c
 43946  01246E  D01C               	goto	l2528
 43947                           
 43948                           ; BSR set to: 0
 43949                           ;motor.c: 488: {;motor.c: 489: distance = target_position - os.current_position_in_steps
      +                          ;
 43950  012470  C16C  F064         	movff	_os+7,??__motor_calculate_distance	;volatile
 43951  012474  C16D  F065         	movff	_os+8,??__motor_calculate_distance+1	;volatile
 43952  012478  C16E  F066         	movff	_os+9,??__motor_calculate_distance+2	;volatile
 43953  01247C  C16F  F067         	movff	_os+10,??__motor_calculate_distance+3	;volatile
 43954  012480  1F64               	comf	??__motor_calculate_distance& (0+255),f,b
 43955  012482  1F65               	comf	(??__motor_calculate_distance+1)& (0+255),f,b
 43956  012484  1F66               	comf	(??__motor_calculate_distance+2)& (0+255),f,b
 43957  012486  1F67               	comf	(??__motor_calculate_distance+3)& (0+255),f,b
 43958  012488  2B64               	incf	??__motor_calculate_distance& (0+255),f,b
 43959  01248A  0E00               	movlw	0
 43960  01248C  2365               	addwfc	(??__motor_calculate_distance+1)& (0+255),f,b
 43961  01248E  2366               	addwfc	(??__motor_calculate_distance+2)& (0+255),f,b
 43962  012490  2367               	addwfc	(??__motor_calculate_distance+3)& (0+255),f,b
 43963  012492  5160               	movf	__motor_calculate_distance@target_position& (0+255),w,b
 43964  012494  2564               	addwf	??__motor_calculate_distance& (0+255),w,b
 43965  012496  6F69               	movwf	__motor_calculate_distance@distance& (0+255),b
 43966  012498  5161               	movf	(__motor_calculate_distance@target_position+1)& (0+255),w,b
 43967  01249A  2165               	addwfc	(??__motor_calculate_distance+1)& (0+255),w,b
 43968  01249C  6F6A               	movwf	(__motor_calculate_distance@distance+1)& (0+255),b
 43969  01249E  5162               	movf	(__motor_calculate_distance@target_position+2)& (0+255),w,b
 43970  0124A0  2166               	addwfc	(??__motor_calculate_distance+2)& (0+255),w,b
 43971  0124A2  6F6B               	movwf	(__motor_calculate_distance@distance+2)& (0+255),b
 43972  0124A4  5163               	movf	(__motor_calculate_distance@target_position+3)& (0+255),w,b
 43973  0124A6  D023               	goto	L91
 43974  0124A8                     l2528:
 43975                           
 43976                           ; BSR set to: 0
 43977                           ;motor.c: 496: else;motor.c: 497: {;motor.c: 498: distance = os.current_position_in_step
      +                          s - target_position;
 43978                           
 43979                           ; BSR set to: 0
 43980  0124A8  C060  F064         	movff	__motor_calculate_distance@target_position,??__motor_calculate_distance
 43981  0124AC  C061  F065         	movff	__motor_calculate_distance@target_position+1,??__motor_calculate_distance+1
 43982  0124B0  C062  F066         	movff	__motor_calculate_distance@target_position+2,??__motor_calculate_distance+2
 43983  0124B4  C063  F067         	movff	__motor_calculate_distance@target_position+3,??__motor_calculate_distance+3
 43984  0124B8  1F64               	comf	??__motor_calculate_distance& (0+255),f,b
 43985  0124BA  1F65               	comf	(??__motor_calculate_distance+1)& (0+255),f,b
 43986  0124BC  1F66               	comf	(??__motor_calculate_distance+2)& (0+255),f,b
 43987  0124BE  1F67               	comf	(??__motor_calculate_distance+3)& (0+255),f,b
 43988  0124C0  2B64               	incf	??__motor_calculate_distance& (0+255),f,b
 43989  0124C2  0E00               	movlw	0
 43990  0124C4  2365               	addwfc	(??__motor_calculate_distance+1)& (0+255),f,b
 43991  0124C6  2366               	addwfc	(??__motor_calculate_distance+2)& (0+255),f,b
 43992  0124C8  2367               	addwfc	(??__motor_calculate_distance+3)& (0+255),f,b
 43993  0124CA  0101               	movlb	1	; () banked
 43994  0124CC  516C               	movf	(_os+7)& (0+255),w,b	;volatile
 43995  0124CE  0100               	movlb	0	; () banked
 43996  0124D0  2564               	addwf	??__motor_calculate_distance& (0+255),w,b
 43997  0124D2  6F69               	movwf	__motor_calculate_distance@distance& (0+255),b
 43998  0124D4  0101               	movlb	1	; () banked
 43999  0124D6  516D               	movf	(_os+8)& (0+255),w,b	;volatile
 44000  0124D8  0100               	movlb	0	; () banked
 44001  0124DA  2165               	addwfc	(??__motor_calculate_distance+1)& (0+255),w,b
 44002  0124DC  6F6A               	movwf	(__motor_calculate_distance@distance+1)& (0+255),b
 44003  0124DE  0101               	movlb	1	; () banked
 44004  0124E0  516E               	movf	(_os+9)& (0+255),w,b	;volatile
 44005  0124E2  0100               	movlb	0	; () banked
 44006  0124E4  2166               	addwfc	(??__motor_calculate_distance+2)& (0+255),w,b
 44007  0124E6  6F6B               	movwf	(__motor_calculate_distance@distance+2)& (0+255),b
 44008  0124E8  0101               	movlb	1	; () banked
 44009  0124EA  516F               	movf	(_os+10)& (0+255),w,b	;volatile
 44010  0124EC  0100               	movlb	0	; () banked
 44011  0124EE                     L91:
 44012  0124EE  2167               	addwfc	(??__motor_calculate_distance+3)& (0+255),w,b
 44013  0124F0  6F6C               	movwf	(__motor_calculate_distance@distance+3)& (0+255),b
 44014                           
 44015                           ;motor.c: 499: if(distance>config.full_circle_in_steps)
 44016  0124F2  5169               	movf	__motor_calculate_distance@distance& (0+255),w,b
 44017  0124F4  0101               	movlb	1	; () banked
 44018  0124F6  5D96               	subwf	_config& (0+255),w,b
 44019  0124F8  0100               	movlb	0	; () banked
 44020  0124FA  516A               	movf	(__motor_calculate_distance@distance+1)& (0+255),w,b
 44021  0124FC  0101               	movlb	1	; () banked
 44022  0124FE  5997               	subwfb	(_config+1)& (0+255),w,b
 44023  012500  0100               	movlb	0	; () banked
 44024  012502  516B               	movf	(__motor_calculate_distance@distance+2)& (0+255),w,b
 44025  012504  0101               	movlb	1	; () banked
 44026  012506  5998               	subwfb	(_config+2)& (0+255),w,b
 44027  012508  0100               	movlb	0	; () banked
 44028  01250A  516C               	movf	(__motor_calculate_distance@distance+3)& (0+255),w,b
 44029  01250C  0101               	movlb	1	; () banked
 44030  01250E  5999               	subwfb	(_config+3)& (0+255),w,b
 44031  012510  B0D8               	btfsc	status,0,c
 44032  012512  D00F               	goto	l2531
 44033                           
 44034                           ; BSR set to: 1
 44035                           ;motor.c: 500: {;motor.c: 502: distance += config.full_circle_in_steps;
 44036  012514  5196               	movf	_config& (0+255),w,b
 44037  012516  0100               	movlb	0	; () banked
 44038  012518  2769               	addwf	__motor_calculate_distance@distance& (0+255),f,b
 44039  01251A  0101               	movlb	1	; () banked
 44040  01251C  5197               	movf	(_config+1)& (0+255),w,b
 44041  01251E  0100               	movlb	0	; () banked
 44042  012520  236A               	addwfc	(__motor_calculate_distance@distance+1)& (0+255),f,b
 44043  012522  0101               	movlb	1	; () banked
 44044  012524  5198               	movf	(_config+2)& (0+255),w,b
 44045  012526  0100               	movlb	0	; () banked
 44046  012528  236B               	addwfc	(__motor_calculate_distance@distance+2)& (0+255),f,b
 44047  01252A  0101               	movlb	1	; () banked
 44048  01252C  5199               	movf	(_config+3)& (0+255),w,b
 44049  01252E  0100               	movlb	0	; () banked
 44050  012530  236C               	addwfc	(__motor_calculate_distance@distance+3)& (0+255),f,b
 44051  012532                     l2531:
 44052                           
 44053                           ;motor.c: 503: };motor.c: 504: };motor.c: 506: return distance;
 44054                           
 44055                           ; BSR set to: 0
 44056                           
 44057                           ; BSR set to: 0
 44058  012532  C069  F060         	movff	__motor_calculate_distance@distance,?__motor_calculate_distance
 44059  012536  C06A  F061         	movff	__motor_calculate_distance@distance+1,?__motor_calculate_distance+1
 44060  01253A  C06B  F062         	movff	__motor_calculate_distance@distance+2,?__motor_calculate_distance+2
 44061  01253E  C06C  F063         	movff	__motor_calculate_distance@distance+3,?__motor_calculate_distance+3
 44062  012542  0012               	return	
 44063  012544                     __end_of__motor_calculate_distance:
 44064                           	opt stack 0
 44065                           tosu	equ	0xFFF
 44066                           tosh	equ	0xFFE
 44067                           tosl	equ	0xFFD
 44068                           pclath	equ	0xFFA
 44069                           tblptru	equ	0xFF8
 44070                           tblptrh	equ	0xFF7
 44071                           tblptrl	equ	0xFF6
 44072                           tablat	equ	0xFF5
 44073                           prodh	equ	0xFF4
 44074                           prodl	equ	0xFF3
 44075                           intcon	equ	0xFF2
 44076                           indf0	equ	0xFEF
 44077                           postinc0	equ	0xFEE
 44078                           fsr0h	equ	0xFEA
 44079                           fsr0l	equ	0xFE9
 44080                           wreg	equ	0xFE8
 44081                           indf1	equ	0xFE7
 44082                           postinc1	equ	0xFE6
 44083                           postdec1	equ	0xFE5
 44084                           plusw1	equ	0xFE3
 44085                           fsr1h	equ	0xFE2
 44086                           fsr1l	equ	0xFE1
 44087                           indf2	equ	0xFDF
 44088                           postinc2	equ	0xFDE
 44089                           postdec2	equ	0xFDD
 44090                           plusw2	equ	0xFDB
 44091                           fsr2h	equ	0xFDA
 44092                           fsr2l	equ	0xFD9
 44093                           status	equ	0xFD8
 44094                           
 44095 ;; *************** function _motor_clear_command_cue *****************
 44096 ;; Defined at:
 44097 ;;		line 613 in file "motor.c"
 44098 ;; Parameters:    Size  Location     Type
 44099 ;;		None
 44100 ;; Auto vars:     Size  Location     Type
 44101 ;;		None
 44102 ;; Return value:  Size  Location     Type
 44103 ;;                  1    wreg      void 
 44104 ;; Registers used:
 44105 ;;		wreg, status,2
 44106 ;; Tracked objects:
 44107 ;;		On entry : 0/0
 44108 ;;		On exit  : 0/0
 44109 ;;		Unchanged: 0/0
 44110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44115 ;;Total ram usage:        0 bytes
 44116 ;; Hardware stack levels used:    1
 44117 ;; Hardware stack levels required when called:   10
 44118 ;; This function calls:
 44119 ;;		Nothing
 44120 ;; This function is called by:
 44121 ;;		__parse_command_short
 44122 ;; This function uses a non-reentrant model
 44123 ;;
 44124                           
 44125                           	psect	text179
 44126  016018                     __ptext179:
 44127                           	opt stack 0
 44128  016018                     _motor_clear_command_cue:
 44129                           	opt stack 17
 44130                           
 44131                           ;motor.c: 616: motor_cue_read_index = 0;
 44132                           
 44133                           ;incstack = 0
 44134  016018  0E00               	movlw	0
 44135  01601A  0101               	movlb	1	; () banked
 44136  01601C  6F4D               	movwf	_motor_cue_read_index& (0+255),b
 44137                           
 44138                           ;motor.c: 617: motor_cue_write_index = 0;
 44139  01601E  0E00               	movlw	0
 44140  016020  6F4C               	movwf	_motor_cue_write_index& (0+255),b
 44141                           
 44142                           ; BSR set to: 1
 44143  016022  0012               	return		;funcret
 44144  016024                     __end_of_motor_clear_command_cue:
 44145                           	opt stack 0
 44146                           tosu	equ	0xFFF
 44147                           tosh	equ	0xFFE
 44148                           tosl	equ	0xFFD
 44149                           pclath	equ	0xFFA
 44150                           tblptru	equ	0xFF8
 44151                           tblptrh	equ	0xFF7
 44152                           tblptrl	equ	0xFF6
 44153                           tablat	equ	0xFF5
 44154                           prodh	equ	0xFF4
 44155                           prodl	equ	0xFF3
 44156                           intcon	equ	0xFF2
 44157                           indf0	equ	0xFEF
 44158                           postinc0	equ	0xFEE
 44159                           fsr0h	equ	0xFEA
 44160                           fsr0l	equ	0xFE9
 44161                           wreg	equ	0xFE8
 44162                           indf1	equ	0xFE7
 44163                           postinc1	equ	0xFE6
 44164                           postdec1	equ	0xFE5
 44165                           plusw1	equ	0xFE3
 44166                           fsr1h	equ	0xFE2
 44167                           fsr1l	equ	0xFE1
 44168                           indf2	equ	0xFDF
 44169                           postinc2	equ	0xFDE
 44170                           postdec2	equ	0xFDD
 44171                           plusw2	equ	0xFDB
 44172                           fsr2h	equ	0xFDA
 44173                           fsr2l	equ	0xFD9
 44174                           status	equ	0xFD8
 44175                           
 44176 ;; *************** function __parse_command_long *****************
 44177 ;; Defined at:
 44178 ;;		line 439 in file "api.c"
 44179 ;; Parameters:    Size  Location     Type
 44180 ;;  data            2   64[BANK0 ] PTR unsigned char 
 44181 ;;		 -> ReceivedDataBuffer(64), 
 44182 ;;  out_buffer      2   66[BANK0 ] PTR unsigned char 
 44183 ;;		 -> ToSendDataBuffer(64), 
 44184 ;;  out_idx_ptr     2   68[BANK0 ] PTR unsigned char 
 44185 ;;		 -> api_parse@out_idx(1), 
 44186 ;; Auto vars:     Size  Location     Type
 44187 ;;  length          1   70[BANK0 ] unsigned char 
 44188 ;; Return value:  Size  Location     Type
 44189 ;;                  1    wreg      unsigned char 
 44190 ;; Registers used:
 44191 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44192 ;; Tracked objects:
 44193 ;;		On entry : 0/0
 44194 ;;		On exit  : 0/0
 44195 ;;		Unchanged: 0/0
 44196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44197 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44198 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44200 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44201 ;;Total ram usage:        7 bytes
 44202 ;; Hardware stack levels used:    1
 44203 ;; Hardware stack levels required when called:   15
 44204 ;; This function calls:
 44205 ;;		__parse_jump_steps
 44206 ;;		__parse_jump_steps_with_overshoot
 44207 ;;		__parse_set_manual_speed
 44208 ;; This function is called by:
 44209 ;;		_api_parse
 44210 ;; This function uses a non-reentrant model
 44211 ;;
 44212                           
 44213                           	psect	text180
 44214  013F9A                     __ptext180:
 44215                           	opt stack 0
 44216  013F9A                     __parse_command_long:
 44217                           	opt stack 13
 44218                           
 44219                           ;api.c: 441: uint8_t length = 65;
 44220                           
 44221                           ; BSR set to: 1
 44222                           ;incstack = 0
 44223  013F9A  0E41               	movlw	65
 44224  013F9C  0100               	movlb	0	; () banked
 44225  013F9E  6FA6               	movwf	__parse_command_long@length& (0+255),b
 44226                           
 44227                           ;api.c: 443: switch(data[0])
 44228  013FA0  D02F               	goto	l2348
 44229  013FA2                     
 44230                           ; BSR set to: 0
 44231                           ;api.c: 450: length = _parse_jump_steps(data, out_buffer, out_idx_ptr);
 44232                           
 44233                           ; BSR set to: 0
 44234  013FA2  C0A0  F094         	movff	__parse_command_long@data,__parse_jump_steps@data
 44235  013FA6  C0A1  F095         	movff	__parse_command_long@data+1,__parse_jump_steps@data+1
 44236  013FAA  C0A2  F096         	movff	__parse_command_long@out_buffer,__parse_jump_steps@out_buffer
 44237  013FAE  C0A3  F097         	movff	__parse_command_long@out_buffer+1,__parse_jump_steps@out_buffer+1
 44238  013FB2  C0A4  F098         	movff	__parse_command_long@out_idx_ptr,__parse_jump_steps@out_idx_ptr
 44239  013FB6  C0A5  F099         	movff	__parse_command_long@out_idx_ptr+1,__parse_jump_steps@out_idx_ptr+1
 44240  013FBA  ECEB  F07E         	call	__parse_jump_steps	;wreg free
 44241  013FBE  D01D               	goto	L67
 44242  013FC0                     
 44243                           ; BSR set to: 0
 44244                           ;api.c: 454: length = _parse_jump_steps_with_overshoot(data, out_buffer, out_idx_ptr);
 44245                           
 44246                           ; BSR set to: 0
 44247  013FC0  C0A0  F094         	movff	__parse_command_long@data,__parse_jump_steps_with_overshoot@data
 44248  013FC4  C0A1  F095         	movff	__parse_command_long@data+1,__parse_jump_steps_with_overshoot@data+1
 44249  013FC8  C0A2  F096         	movff	__parse_command_long@out_buffer,__parse_jump_steps_with_overshoot@out_buffer
 44250  013FCC  C0A3  F097         	movff	__parse_command_long@out_buffer+1,__parse_jump_steps_with_overshoot@out_buffer+1
 44251  013FD0  C0A4  F098         	movff	__parse_command_long@out_idx_ptr,__parse_jump_steps_with_overshoot@out_idx_ptr
 44252  013FD4  C0A5  F099         	movff	__parse_command_long@out_idx_ptr+1,__parse_jump_steps_with_overshoot@out_idx_ptr+
      +                          1
 44253  013FD8  EC42  F07E         	call	__parse_jump_steps_with_overshoot	;wreg free
 44254  013FDC  D00E               	goto	L67
 44255  013FDE                     
 44256                           ; BSR set to: 0
 44257                           ;api.c: 458: length = _parse_set_manual_speed(data, out_buffer, out_idx_ptr);
 44258                           
 44259                           ; BSR set to: 0
 44260  013FDE  C0A0  F066         	movff	__parse_command_long@data,__parse_set_manual_speed@data
 44261  013FE2  C0A1  F067         	movff	__parse_command_long@data+1,__parse_set_manual_speed@data+1
 44262  013FE6  C0A2  F068         	movff	__parse_command_long@out_buffer,__parse_set_manual_speed@out_buffer
 44263  013FEA  C0A3  F069         	movff	__parse_command_long@out_buffer+1,__parse_set_manual_speed@out_buffer+1
 44264  013FEE  C0A4  F06A         	movff	__parse_command_long@out_idx_ptr,__parse_set_manual_speed@out_idx_ptr
 44265  013FF2  C0A5  F06B         	movff	__parse_command_long@out_idx_ptr+1,__parse_set_manual_speed@out_idx_ptr+1
 44266  013FF6  EC95  F0A0         	call	__parse_set_manual_speed	;wreg free
 44267  013FFA                     L67:
 44268  013FFA  0100               	movlb	0	; () banked
 44269  013FFC  6FA6               	movwf	__parse_command_long@length& (0+255),b
 44270                           
 44271                           ; BSR set to: 0
 44272                           ;api.c: 460: }
 44273                           
 44274                           ;api.c: 459: break;
 44275  013FFE  D00E               	goto	l2350
 44276  014000                     l2348:
 44277                           
 44278                           ; BSR set to: 0
 44279                           
 44280                           ; BSR set to: 0
 44281  014000  C0A0  FFD9         	movff	__parse_command_long@data,fsr2l
 44282  014004  C0A1  FFDA         	movff	__parse_command_long@data+1,fsr2h
 44283  014008  50DF               	movf	indf2,w,c
 44284                           
 44285                           ; Switch size 1, requested type "space"
 44286                           ; Number of cases is 3, Range of values is 144 to 146
 44287                           ; switch strategies available:
 44288                           ; Name         Instructions Cycles
 44289                           ; simple_byte           10     6 (average)
 44290                           ;	Chosen strategy is simple_byte
 44291  01400A  0A90               	xorlw	144	; case 144
 44292  01400C  B4D8               	btfsc	status,2,c
 44293  01400E  D7C9               	goto	l2349
 44294  014010  0A01               	xorlw	1	; case 145
 44295  014012  B4D8               	btfsc	status,2,c
 44296  014014  D7D5               	goto	l2351
 44297  014016  0A03               	xorlw	3	; case 146
 44298  014018  B4D8               	btfsc	status,2,c
 44299  01401A  D7E1               	goto	l2352
 44300  01401C                     l2350:
 44301                           
 44302                           ; BSR set to: 0
 44303                           ;api.c: 464: return length;
 44304                           
 44305                           ; BSR set to: 0
 44306  01401C  51A6               	movf	__parse_command_long@length& (0+255),w,b
 44307  01401E  0012               	return	
 44308  014020                     __end_of__parse_command_long:
 44309                           	opt stack 0
 44310                           tosu	equ	0xFFF
 44311                           tosh	equ	0xFFE
 44312                           tosl	equ	0xFFD
 44313                           pclath	equ	0xFFA
 44314                           tblptru	equ	0xFF8
 44315                           tblptrh	equ	0xFF7
 44316                           tblptrl	equ	0xFF6
 44317                           tablat	equ	0xFF5
 44318                           prodh	equ	0xFF4
 44319                           prodl	equ	0xFF3
 44320                           intcon	equ	0xFF2
 44321                           indf0	equ	0xFEF
 44322                           postinc0	equ	0xFEE
 44323                           fsr0h	equ	0xFEA
 44324                           fsr0l	equ	0xFE9
 44325                           wreg	equ	0xFE8
 44326                           indf1	equ	0xFE7
 44327                           postinc1	equ	0xFE6
 44328                           postdec1	equ	0xFE5
 44329                           plusw1	equ	0xFE3
 44330                           fsr1h	equ	0xFE2
 44331                           fsr1l	equ	0xFE1
 44332                           indf2	equ	0xFDF
 44333                           postinc2	equ	0xFDE
 44334                           postdec2	equ	0xFDD
 44335                           plusw2	equ	0xFDB
 44336                           fsr2h	equ	0xFDA
 44337                           fsr2l	equ	0xFD9
 44338                           status	equ	0xFD8
 44339                           
 44340 ;; *************** function __parse_set_manual_speed *****************
 44341 ;; Defined at:
 44342 ;;		line 559 in file "api.c"
 44343 ;; Parameters:    Size  Location     Type
 44344 ;;  data            2    6[BANK0 ] PTR unsigned char 
 44345 ;;		 -> ReceivedDataBuffer(64), 
 44346 ;;  out_buffer      2    8[BANK0 ] PTR unsigned char 
 44347 ;;		 -> ToSendDataBuffer(64), 
 44348 ;;  out_idx_ptr     2   10[BANK0 ] PTR unsigned char 
 44349 ;;		 -> api_parse@out_idx(1), 
 44350 ;; Auto vars:     Size  Location     Type
 44351 ;;  new_speed       2   13[BANK0 ] unsigned int 
 44352 ;; Return value:  Size  Location     Type
 44353 ;;                  1    wreg      unsigned char 
 44354 ;; Registers used:
 44355 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44356 ;; Tracked objects:
 44357 ;;		On entry : 0/0
 44358 ;;		On exit  : 0/0
 44359 ;;		Unchanged: 0/0
 44360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44361 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44362 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44363 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44364 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44365 ;;Total ram usage:        9 bytes
 44366 ;; Hardware stack levels used:    1
 44367 ;; Hardware stack levels required when called:   12
 44368 ;; This function calls:
 44369 ;;		_motor_set_manual_speed
 44370 ;; This function is called by:
 44371 ;;		__parse_command_long
 44372 ;; This function uses a non-reentrant model
 44373 ;;
 44374                           
 44375                           	psect	text181
 44376  01412A                     __ptext181:
 44377                           	opt stack 0
 44378  01412A                     __parse_set_manual_speed:
 44379                           	opt stack 15
 44380                           
 44381                           ;api.c: 563: uint16_t new_speed;;api.c: 565: new_speed = data[1];
 44382                           
 44383                           ; BSR set to: 0
 44384                           ;incstack = 0
 44385  01412A  0100               	movlb	0	; () banked
 44386  01412C  EE20 F001          	lfsr	2,1
 44387  014130  5166               	movf	__parse_set_manual_speed@data& (0+255),w,b
 44388  014132  26D9               	addwf	fsr2l,f,c
 44389  014134  5167               	movf	(__parse_set_manual_speed@data+1)& (0+255),w,b
 44390  014136  22DA               	addwfc	fsr2h,f,c
 44391  014138  50DF               	movf	indf2,w,c
 44392  01413A  6F6C               	movwf	??__parse_set_manual_speed& (0+255),b
 44393  01413C  516C               	movf	??__parse_set_manual_speed& (0+255),w,b
 44394  01413E  6F6D               	movwf	__parse_set_manual_speed@new_speed& (0+255),b
 44395  014140  6B6E               	clrf	(__parse_set_manual_speed@new_speed+1)& (0+255),b
 44396                           
 44397                           ; BSR set to: 0
 44398                           ;api.c: 566: new_speed <<= 8;
 44399  014142  516D               	movf	__parse_set_manual_speed@new_speed& (0+255),w,b
 44400  014144  6F6E               	movwf	(__parse_set_manual_speed@new_speed+1)& (0+255),b
 44401  014146  6B6D               	clrf	__parse_set_manual_speed@new_speed& (0+255),b
 44402                           
 44403                           ; BSR set to: 0
 44404                           ;api.c: 567: new_speed |= data[2];
 44405  014148  EE20 F002          	lfsr	2,2
 44406  01414C  5166               	movf	__parse_set_manual_speed@data& (0+255),w,b
 44407  01414E  26D9               	addwf	fsr2l,f,c
 44408  014150  5167               	movf	(__parse_set_manual_speed@data+1)& (0+255),w,b
 44409  014152  22DA               	addwfc	fsr2h,f,c
 44410  014154  50DF               	movf	indf2,w,c
 44411  014156  6F6C               	movwf	??__parse_set_manual_speed& (0+255),b
 44412  014158  516C               	movf	??__parse_set_manual_speed& (0+255),w,b
 44413  01415A  136D               	iorwf	__parse_set_manual_speed@new_speed& (0+255),f,b
 44414                           
 44415                           ; BSR set to: 0
 44416                           ;api.c: 569: motor_set_manual_speed(new_speed);
 44417  01415C  C06D  F062         	movff	__parse_set_manual_speed@new_speed,motor_set_manual_speed@new_speed
 44418  014160  C06E  F063         	movff	__parse_set_manual_speed@new_speed+1,motor_set_manual_speed@new_speed+1
 44419  014164  ECC7  F0A2         	call	_motor_set_manual_speed	;wreg free
 44420                           
 44421                           ;api.c: 572: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 44422  014168  C06A  FFD9         	movff	__parse_set_manual_speed@out_idx_ptr,fsr2l
 44423  01416C  C06B  FFDA         	movff	__parse_set_manual_speed@out_idx_ptr+1,fsr2h
 44424  014170  50DF               	movf	indf2,w,c
 44425  014172  B4D8               	btfsc	status,2,c
 44426  014174  D01A               	goto	l2368
 44427  014176  C06A  FFD9         	movff	__parse_set_manual_speed@out_idx_ptr,fsr2l
 44428  01417A  C06B  FFDA         	movff	__parse_set_manual_speed@out_idx_ptr+1,fsr2h
 44429  01417E  0E3F               	movlw	63
 44430  014180  60DF               	cpfslt	indf2,c
 44431  014182  D013               	goto	l2368
 44432                           
 44433                           ;api.c: 573: {;api.c: 574: out_buffer[(*out_idx_ptr)++] = COMMAND_SET_MANUAL_SPEED;
 44434  014184  C06A  FFD9         	movff	__parse_set_manual_speed@out_idx_ptr,fsr2l
 44435  014188  C06B  FFDA         	movff	__parse_set_manual_speed@out_idx_ptr+1,fsr2h
 44436  01418C  CFDF F06C          	movff	indf2,??__parse_set_manual_speed
 44437  014190  0E01               	movlw	1
 44438  014192  26DF               	addwf	indf2,f,c
 44439  014194  0100               	movlb	0	; () banked
 44440  014196  516C               	movf	??__parse_set_manual_speed& (0+255),w,b
 44441  014198  0D01               	mullw	1
 44442  01419A  50F3               	movf	prodl,w,c
 44443  01419C  2568               	addwf	__parse_set_manual_speed@out_buffer& (0+255),w,b
 44444  01419E  6ED9               	movwf	fsr2l,c
 44445  0141A0  50F4               	movf	prodh,w,c
 44446  0141A2  2169               	addwfc	(__parse_set_manual_speed@out_buffer+1)& (0+255),w,b
 44447  0141A4  6EDA               	movwf	fsr2h,c
 44448  0141A6  0E92               	movlw	146
 44449  0141A8  6EDF               	movwf	indf2,c
 44450  0141AA                     l2368:
 44451                           
 44452                           ;api.c: 575: };api.c: 577: return 3;
 44453                           
 44454                           ; BSR set to: 0
 44455  0141AA  0E03               	movlw	3
 44456  0141AC  0012               	return	
 44457  0141AE                     __end_of__parse_set_manual_speed:
 44458                           	opt stack 0
 44459                           tosu	equ	0xFFF
 44460                           tosh	equ	0xFFE
 44461                           tosl	equ	0xFFD
 44462                           pclath	equ	0xFFA
 44463                           tblptru	equ	0xFF8
 44464                           tblptrh	equ	0xFF7
 44465                           tblptrl	equ	0xFF6
 44466                           tablat	equ	0xFF5
 44467                           prodh	equ	0xFF4
 44468                           prodl	equ	0xFF3
 44469                           intcon	equ	0xFF2
 44470                           indf0	equ	0xFEF
 44471                           postinc0	equ	0xFEE
 44472                           fsr0h	equ	0xFEA
 44473                           fsr0l	equ	0xFE9
 44474                           wreg	equ	0xFE8
 44475                           indf1	equ	0xFE7
 44476                           postinc1	equ	0xFE6
 44477                           postdec1	equ	0xFE5
 44478                           plusw1	equ	0xFE3
 44479                           fsr1h	equ	0xFE2
 44480                           fsr1l	equ	0xFE1
 44481                           indf2	equ	0xFDF
 44482                           postinc2	equ	0xFDE
 44483                           postdec2	equ	0xFDD
 44484                           plusw2	equ	0xFDB
 44485                           fsr2h	equ	0xFDA
 44486                           fsr2l	equ	0xFD9
 44487                           status	equ	0xFD8
 44488                           
 44489 ;; *************** function _motor_set_manual_speed *****************
 44490 ;; Defined at:
 44491 ;;		line 882 in file "motor.c"
 44492 ;; Parameters:    Size  Location     Type
 44493 ;;  new_speed       2    2[BANK0 ] unsigned int 
 44494 ;; Auto vars:     Size  Location     Type
 44495 ;;  old_speed       2    4[BANK0 ] unsigned int 
 44496 ;; Return value:  Size  Location     Type
 44497 ;;                  1    wreg      void 
 44498 ;; Registers used:
 44499 ;;		wreg, status,2, status,0, cstack
 44500 ;; Tracked objects:
 44501 ;;		On entry : 0/0
 44502 ;;		On exit  : 0/0
 44503 ;;		Unchanged: 0/0
 44504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44505 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44506 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44508 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44509 ;;Total ram usage:        4 bytes
 44510 ;; Hardware stack levels used:    1
 44511 ;; Hardware stack levels required when called:   11
 44512 ;; This function calls:
 44513 ;;		_motor_change_speed
 44514 ;; This function is called by:
 44515 ;;		__parse_set_manual_speed
 44516 ;;		_motor_increase_manual_speed
 44517 ;;		_motor_decrease_manual_speed
 44518 ;; This function uses a non-reentrant model
 44519 ;;
 44520                           
 44521                           	psect	text182
 44522  01458E                     __ptext182:
 44523                           	opt stack 0
 44524  01458E                     _motor_set_manual_speed:
 44525                           	opt stack 17
 44526                           
 44527                           ;motor.c: 884: uint16_t old_speed;;motor.c: 885: old_speed = os.manual_speed;
 44528                           
 44529                           ;incstack = 0
 44530  01458E  C189  F064         	movff	_os+36,motor_set_manual_speed@old_speed	;volatile
 44531  014592  C18A  F065         	movff	_os+37,motor_set_manual_speed@old_speed+1	;volatile
 44532                           
 44533                           ;motor.c: 887: if(new_speed>config.maximum_speed_manual)
 44534  014596  0100               	movlb	0	; () banked
 44535  014598  5162               	movf	motor_set_manual_speed@new_speed& (0+255),w,b
 44536  01459A  0101               	movlb	1	; () banked
 44537  01459C  5DA9               	subwf	(_config+19)& (0+255),w,b
 44538  01459E  0100               	movlb	0	; () banked
 44539  0145A0  5163               	movf	(motor_set_manual_speed@new_speed+1)& (0+255),w,b
 44540  0145A2  0101               	movlb	1	; () banked
 44541  0145A4  59AA               	subwfb	(_config+20)& (0+255),w,b
 44542  0145A6  B0D8               	btfsc	status,0,c
 44543  0145A8  D005               	goto	l2614
 44544                           
 44545                           ; BSR set to: 1
 44546                           ;motor.c: 888: {;motor.c: 889: os.manual_speed = config.maximum_speed_manual;
 44547  0145AA  C1A9  F189         	movff	_config+19,_os+36	;volatile
 44548  0145AE  C1AA  F18A         	movff	_config+20,_os+37	;volatile
 44549                           
 44550                           ;motor.c: 890: }
 44551  0145B2  D012               	goto	l2617
 44552  0145B4                     l2614:
 44553                           
 44554                           ; BSR set to: 1
 44555                           ;motor.c: 891: else if(new_speed<config.minimum_speed)
 44556                           
 44557                           ; BSR set to: 1
 44558  0145B4  519F               	movf	(_config+9)& (0+255),w,b
 44559  0145B6  0100               	movlb	0	; () banked
 44560  0145B8  5D62               	subwf	motor_set_manual_speed@new_speed& (0+255),w,b
 44561  0145BA  0101               	movlb	1	; () banked
 44562  0145BC  51A0               	movf	(_config+10)& (0+255),w,b
 44563  0145BE  0100               	movlb	0	; () banked
 44564  0145C0  5963               	subwfb	(motor_set_manual_speed@new_speed+1)& (0+255),w,b
 44565  0145C2  B0D8               	btfsc	status,0,c
 44566  0145C4  D005               	goto	l2616
 44567                           
 44568                           ; BSR set to: 0
 44569                           ;motor.c: 892: {;motor.c: 893: os.manual_speed = config.minimum_speed;
 44570  0145C6  C19F  F189         	movff	_config+9,_os+36	;volatile
 44571  0145CA  C1A0  F18A         	movff	_config+10,_os+37	;volatile
 44572                           
 44573                           ;motor.c: 894: }
 44574  0145CE  D004               	goto	l2617
 44575  0145D0                     l2616:
 44576                           
 44577                           ; BSR set to: 0
 44578                           ;motor.c: 895: else;motor.c: 896: {;motor.c: 897: os.manual_speed = new_speed;
 44579  0145D0  C062  F189         	movff	motor_set_manual_speed@new_speed,_os+36	;volatile
 44580  0145D4  C063  F18A         	movff	motor_set_manual_speed@new_speed+1,_os+37	;volatile
 44581  0145D8                     l2617:
 44582                           
 44583                           ;motor.c: 898: };motor.c: 902: if(os.busy && motor_maximum_speed==old_speed)
 44584                           
 44585                           ; BSR set to: 0
 44586                           
 44587                           ; BSR set to: 0
 44588  0145D8  0101               	movlb	1	; () banked
 44589  0145DA  5175               	movf	(_os+16)& (0+255),w,b	;volatile
 44590  0145DC  B4D8               	btfsc	status,2,c
 44591  0145DE  0012               	return	
 44592                           
 44593                           ; BSR set to: 1
 44594  0145E0  0100               	movlb	0	; () banked
 44595  0145E2  5164               	movf	motor_set_manual_speed@old_speed& (0+255),w,b
 44596  0145E4  0101               	movlb	1	; () banked
 44597  0145E6  1937               	xorwf	_motor_maximum_speed& (0+255),w,b
 44598  0145E8  E10D               	bnz	l2619
 44599  0145EA  0100               	movlb	0	; () banked
 44600  0145EC  5165               	movf	(motor_set_manual_speed@old_speed+1)& (0+255),w,b
 44601  0145EE  0101               	movlb	1	; () banked
 44602  0145F0  1938               	xorwf	(_motor_maximum_speed+1)& (0+255),w,b
 44603  0145F2  A4D8               	btfss	status,2,c
 44604  0145F4  0012               	return	
 44605                           
 44606                           ; BSR set to: 1
 44607                           ;motor.c: 903: {;motor.c: 904: motor_change_speed(os.manual_speed);
 44608  0145F6  C189  F060         	movff	_os+36,motor_change_speed@new_speed	;volatile
 44609  0145FA  C18A  F061         	movff	_os+37,motor_change_speed@new_speed+1	;volatile
 44610  0145FE  EC31  F0B0         	call	_motor_change_speed	;wreg free
 44611  014602  0012               	return	
 44612  014604                     l2619:
 44613  014604  0012               	return		;funcret
 44614  014606                     __end_of_motor_set_manual_speed:
 44615                           	opt stack 0
 44616                           tosu	equ	0xFFF
 44617                           tosh	equ	0xFFE
 44618                           tosl	equ	0xFFD
 44619                           pclath	equ	0xFFA
 44620                           tblptru	equ	0xFF8
 44621                           tblptrh	equ	0xFF7
 44622                           tblptrl	equ	0xFF6
 44623                           tablat	equ	0xFF5
 44624                           prodh	equ	0xFF4
 44625                           prodl	equ	0xFF3
 44626                           intcon	equ	0xFF2
 44627                           indf0	equ	0xFEF
 44628                           postinc0	equ	0xFEE
 44629                           fsr0h	equ	0xFEA
 44630                           fsr0l	equ	0xFE9
 44631                           wreg	equ	0xFE8
 44632                           indf1	equ	0xFE7
 44633                           postinc1	equ	0xFE6
 44634                           postdec1	equ	0xFE5
 44635                           plusw1	equ	0xFE3
 44636                           fsr1h	equ	0xFE2
 44637                           fsr1l	equ	0xFE1
 44638                           indf2	equ	0xFDF
 44639                           postinc2	equ	0xFDE
 44640                           postdec2	equ	0xFDD
 44641                           plusw2	equ	0xFDB
 44642                           fsr2h	equ	0xFDA
 44643                           fsr2l	equ	0xFD9
 44644                           status	equ	0xFD8
 44645                           
 44646 ;; *************** function _motor_change_speed *****************
 44647 ;; Defined at:
 44648 ;;		line 908 in file "motor.c"
 44649 ;; Parameters:    Size  Location     Type
 44650 ;;  new_speed       2    0[BANK0 ] unsigned int 
 44651 ;; Auto vars:     Size  Location     Type
 44652 ;;		None
 44653 ;; Return value:  Size  Location     Type
 44654 ;;                  1    wreg      void 
 44655 ;; Registers used:
 44656 ;;		None
 44657 ;; Tracked objects:
 44658 ;;		On entry : 0/0
 44659 ;;		On exit  : 0/0
 44660 ;;		Unchanged: 0/0
 44661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44662 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44665 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44666 ;;Total ram usage:        2 bytes
 44667 ;; Hardware stack levels used:    1
 44668 ;; Hardware stack levels required when called:   10
 44669 ;; This function calls:
 44670 ;;		Nothing
 44671 ;; This function is called by:
 44672 ;;		_motor_set_manual_speed
 44673 ;;		_encoder_statemachine
 44674 ;; This function uses a non-reentrant model
 44675 ;;
 44676                           
 44677                           	psect	text183
 44678  016062                     __ptext183:
 44679                           	opt stack 0
 44680  016062                     _motor_change_speed:
 44681                           	opt stack 17
 44682                           
 44683                           ;motor.c: 910: motor_maximum_speed = new_speed;
 44684                           
 44685                           ;incstack = 0
 44686  016062  C060  F137         	movff	motor_change_speed@new_speed,_motor_maximum_speed
 44687  016066  C061  F138         	movff	motor_change_speed@new_speed+1,_motor_maximum_speed+1
 44688  01606A  0012               	return		;funcret
 44689  01606C                     __end_of_motor_change_speed:
 44690                           	opt stack 0
 44691                           tosu	equ	0xFFF
 44692                           tosh	equ	0xFFE
 44693                           tosl	equ	0xFFD
 44694                           pclath	equ	0xFFA
 44695                           tblptru	equ	0xFF8
 44696                           tblptrh	equ	0xFF7
 44697                           tblptrl	equ	0xFF6
 44698                           tablat	equ	0xFF5
 44699                           prodh	equ	0xFF4
 44700                           prodl	equ	0xFF3
 44701                           intcon	equ	0xFF2
 44702                           indf0	equ	0xFEF
 44703                           postinc0	equ	0xFEE
 44704                           fsr0h	equ	0xFEA
 44705                           fsr0l	equ	0xFE9
 44706                           wreg	equ	0xFE8
 44707                           indf1	equ	0xFE7
 44708                           postinc1	equ	0xFE6
 44709                           postdec1	equ	0xFE5
 44710                           plusw1	equ	0xFE3
 44711                           fsr1h	equ	0xFE2
 44712                           fsr1l	equ	0xFE1
 44713                           indf2	equ	0xFDF
 44714                           postinc2	equ	0xFDE
 44715                           postdec2	equ	0xFDD
 44716                           plusw2	equ	0xFDB
 44717                           fsr2h	equ	0xFDA
 44718                           fsr2l	equ	0xFD9
 44719                           status	equ	0xFD8
 44720                           
 44721 ;; *************** function __parse_jump_steps_with_overshoot *****************
 44722 ;; Defined at:
 44723 ;;		line 525 in file "api.c"
 44724 ;; Parameters:    Size  Location     Type
 44725 ;;  data            2   52[BANK0 ] PTR unsigned char 
 44726 ;;		 -> ReceivedDataBuffer(64), 
 44727 ;;  out_buffer      2   54[BANK0 ] PTR unsigned char 
 44728 ;;		 -> ToSendDataBuffer(64), 
 44729 ;;  out_idx_ptr     2   56[BANK0 ] PTR unsigned char 
 44730 ;;		 -> api_parse@out_idx(1), 
 44731 ;; Auto vars:     Size  Location     Type
 44732 ;;  number_of_st    4   60[BANK0 ] long 
 44733 ;;  return_value    1   59[BANK0 ] unsigned char 
 44734 ;; Return value:  Size  Location     Type
 44735 ;;                  1    wreg      unsigned char 
 44736 ;; Registers used:
 44737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44738 ;; Tracked objects:
 44739 ;;		On entry : 0/0
 44740 ;;		On exit  : 0/0
 44741 ;;		Unchanged: 0/0
 44742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44743 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44744 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44745 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44746 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44747 ;;Total ram usage:       12 bytes
 44748 ;; Hardware stack levels used:    1
 44749 ;; Hardware stack levels required when called:   14
 44750 ;; This function calls:
 44751 ;;		_motor_move_steps
 44752 ;; This function is called by:
 44753 ;;		__parse_command_long
 44754 ;; This function uses a non-reentrant model
 44755 ;;
 44756                           
 44757                           	psect	text184
 44758  00FC84                     __ptext184:
 44759                           	opt stack 0
 44760  00FC84                     __parse_jump_steps_with_overshoot:
 44761                           	opt stack 13
 44762                           
 44763                           ;api.c: 528: uint8_t return_value;;api.c: 529: int32_t number_of_steps;;api.c: 531: numb
      +                          er_of_steps = data[1];
 44764                           
 44765                           ;incstack = 0
 44766  00FC84  0100               	movlb	0	; () banked
 44767  00FC86  EE20 F001          	lfsr	2,1
 44768  00FC8A  5194               	movf	__parse_jump_steps_with_overshoot@data& (0+255),w,b
 44769  00FC8C  26D9               	addwf	fsr2l,f,c
 44770  00FC8E  5195               	movf	(__parse_jump_steps_with_overshoot@data+1)& (0+255),w,b
 44771  00FC90  22DA               	addwfc	fsr2h,f,c
 44772  00FC92  50DF               	movf	indf2,w,c
 44773  00FC94  6F9A               	movwf	??__parse_jump_steps_with_overshoot& (0+255),b
 44774  00FC96  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 44775  00FC98  6F9C               	movwf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 44776  00FC9A  6B9D               	clrf	(__parse_jump_steps_with_overshoot@number_of_steps+1)& (0+255),b
 44777  00FC9C  6B9E               	clrf	(__parse_jump_steps_with_overshoot@number_of_steps+2)& (0+255),b
 44778  00FC9E  6B9F               	clrf	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),b
 44779                           
 44780                           ; BSR set to: 0
 44781                           ;api.c: 532: number_of_steps <<= 8;
 44782  00FCA0  C09E  F09F         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+3
 44783  00FCA4  C09D  F09E         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+2
 44784  00FCA8  C09C  F09D         	movff	__parse_jump_steps_with_overshoot@number_of_steps,__parse_jump_steps_with_oversho
      +                          ot@number_of_steps+1
 44785  00FCAC  6B9C               	clrf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 44786                           
 44787                           ; BSR set to: 0
 44788                           ;api.c: 533: number_of_steps |= data[2];
 44789  00FCAE  EE20 F002          	lfsr	2,2
 44790  00FCB2  5194               	movf	__parse_jump_steps_with_overshoot@data& (0+255),w,b
 44791  00FCB4  26D9               	addwf	fsr2l,f,c
 44792  00FCB6  5195               	movf	(__parse_jump_steps_with_overshoot@data+1)& (0+255),w,b
 44793  00FCB8  22DA               	addwfc	fsr2h,f,c
 44794  00FCBA  50DF               	movf	indf2,w,c
 44795  00FCBC  6F9A               	movwf	??__parse_jump_steps_with_overshoot& (0+255),b
 44796  00FCBE  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 44797  00FCC0  139C               	iorwf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),f,b
 44798                           
 44799                           ;api.c: 534: number_of_steps <<= 8;
 44800  00FCC2  C09E  F09F         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+3
 44801  00FCC6  C09D  F09E         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+2
 44802  00FCCA  C09C  F09D         	movff	__parse_jump_steps_with_overshoot@number_of_steps,__parse_jump_steps_with_oversho
      +                          ot@number_of_steps+1
 44803  00FCCE  6B9C               	clrf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 44804                           
 44805                           ; BSR set to: 0
 44806                           ;api.c: 535: number_of_steps |= data[3];
 44807  00FCD0  EE20 F003          	lfsr	2,3
 44808  00FCD4  5194               	movf	__parse_jump_steps_with_overshoot@data& (0+255),w,b
 44809  00FCD6  26D9               	addwf	fsr2l,f,c
 44810  00FCD8  5195               	movf	(__parse_jump_steps_with_overshoot@data+1)& (0+255),w,b
 44811  00FCDA  22DA               	addwfc	fsr2h,f,c
 44812  00FCDC  50DF               	movf	indf2,w,c
 44813  00FCDE  6F9A               	movwf	??__parse_jump_steps_with_overshoot& (0+255),b
 44814  00FCE0  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 44815  00FCE2  139C               	iorwf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),f,b
 44816                           
 44817                           ; BSR set to: 0
 44818                           ;api.c: 536: number_of_steps <<= 8;
 44819  00FCE4  C09E  F09F         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+3
 44820  00FCE8  C09D  F09E         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+2
 44821  00FCEC  C09C  F09D         	movff	__parse_jump_steps_with_overshoot@number_of_steps,__parse_jump_steps_with_oversho
      +                          ot@number_of_steps+1
 44822  00FCF0  6B9C               	clrf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 44823                           
 44824                           ;api.c: 537: number_of_steps |= data[4];
 44825  00FCF2  EE20 F004          	lfsr	2,4
 44826  00FCF6  5194               	movf	__parse_jump_steps_with_overshoot@data& (0+255),w,b
 44827  00FCF8  26D9               	addwf	fsr2l,f,c
 44828  00FCFA  5195               	movf	(__parse_jump_steps_with_overshoot@data+1)& (0+255),w,b
 44829  00FCFC  22DA               	addwfc	fsr2h,f,c
 44830  00FCFE  50DF               	movf	indf2,w,c
 44831  00FD00  6F9A               	movwf	??__parse_jump_steps_with_overshoot& (0+255),b
 44832  00FD02  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 44833  00FD04  139C               	iorwf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),f,b
 44834                           
 44835                           ; BSR set to: 0
 44836                           ;api.c: 539: if(number_of_steps>0)
 44837  00FD06  BF9F               	btfsc	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),7,b
 44838  00FD08  D018               	goto	l2362
 44839  00FD0A  519F               	movf	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),w,b
 44840  00FD0C  119E               	iorwf	(__parse_jump_steps_with_overshoot@number_of_steps+2)& (0+255),w,b
 44841  00FD0E  119D               	iorwf	(__parse_jump_steps_with_overshoot@number_of_steps+1)& (0+255),w,b
 44842  00FD10  E103               	bnz	u14350
 44843  00FD12  059C               	decf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),w,b
 44844  00FD14  A0D8               	btfss	status,0,c
 44845  00FD16  D011               	goto	l2362
 44846  00FD18                     u14350:
 44847                           
 44848                           ; BSR set to: 0
 44849                           ;api.c: 540: {;api.c: 541: motor_move_steps(MOTOR_DIRECTION_CW, (uint32_t) number_of_ste
      +                          ps, 0xFFFF, MOTOR_OVERSHOOT_WITH_OVERSHOOT);
 44850  00FD18  C09C  F08C         	movff	__parse_jump_steps_with_overshoot@number_of_steps,motor_move_steps@distance
 44851  00FD1C  C09D  F08D         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,motor_move_steps@distance+1
 44852  00FD20  C09E  F08E         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,motor_move_steps@distance+2
 44853  00FD24  C09F  F08F         	movff	__parse_jump_steps_with_overshoot@number_of_steps+3,motor_move_steps@distance+3
 44854  00FD28  0EFF               	movlw	255
 44855  00FD2A  6F91               	movwf	(motor_move_steps@speed+1)& (0+255),b
 44856  00FD2C  6990               	setf	motor_move_steps@speed& (0+255),b
 44857  00FD2E  0E00               	movlw	0
 44858  00FD30  6F92               	movwf	motor_move_steps@overshoot& (0+255),b
 44859  00FD32  0E01               	movlw	1
 44860  00FD34  ECDE  F0AD         	call	_motor_move_steps
 44861                           
 44862                           ;api.c: 542: }
 44863  00FD38  D019               	goto	l2363
 44864  00FD3A                     l2362:
 44865                           
 44866                           ;api.c: 543: else;api.c: 544: {;api.c: 545: number_of_steps = -number_of_steps;
 44867  00FD3A  0100               	movlb	0	; () banked
 44868  00FD3C  1F9F               	comf	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),f,b
 44869  00FD3E  1F9E               	comf	(__parse_jump_steps_with_overshoot@number_of_steps+2)& (0+255),f,b
 44870  00FD40  1F9D               	comf	(__parse_jump_steps_with_overshoot@number_of_steps+1)& (0+255),f,b
 44871  00FD42  6D9C               	negf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 44872  00FD44  0E00               	movlw	0
 44873  00FD46  239D               	addwfc	(__parse_jump_steps_with_overshoot@number_of_steps+1)& (0+255),f,b
 44874  00FD48  239E               	addwfc	(__parse_jump_steps_with_overshoot@number_of_steps+2)& (0+255),f,b
 44875  00FD4A  239F               	addwfc	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),f,b
 44876                           
 44877                           ; BSR set to: 0
 44878                           ;api.c: 546: motor_move_steps(MOTOR_DIRECTION_CCW, (uint32_t) number_of_steps, 0xFFFF, M
      +                          OTOR_OVERSHOOT_WITH_OVERSHOOT);
 44879  00FD4C  C09C  F08C         	movff	__parse_jump_steps_with_overshoot@number_of_steps,motor_move_steps@distance
 44880  00FD50  C09D  F08D         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,motor_move_steps@distance+1
 44881  00FD54  C09E  F08E         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,motor_move_steps@distance+2
 44882  00FD58  C09F  F08F         	movff	__parse_jump_steps_with_overshoot@number_of_steps+3,motor_move_steps@distance+3
 44883  00FD5C  0EFF               	movlw	255
 44884  00FD5E  6F91               	movwf	(motor_move_steps@speed+1)& (0+255),b
 44885  00FD60  6990               	setf	motor_move_steps@speed& (0+255),b
 44886  00FD62  0E00               	movlw	0
 44887  00FD64  6F92               	movwf	motor_move_steps@overshoot& (0+255),b
 44888  00FD66  0EFF               	movlw	255
 44889  00FD68  ECDE  F0AD         	call	_motor_move_steps
 44890  00FD6C                     l2363:
 44891                           
 44892                           ;api.c: 547: };api.c: 550: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<62))
 44893  00FD6C  C098  FFD9         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr,fsr2l
 44894  00FD70  C099  FFDA         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr+1,fsr2h
 44895  00FD74  50DF               	movf	indf2,w,c
 44896  00FD76  B4D8               	btfsc	status,2,c
 44897  00FD78  D02C               	goto	l2364
 44898  00FD7A  C098  FFD9         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr,fsr2l
 44899  00FD7E  C099  FFDA         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr+1,fsr2h
 44900  00FD82  0E3E               	movlw	62
 44901  00FD84  60DF               	cpfslt	indf2,c
 44902  00FD86  D025               	goto	l2364
 44903                           
 44904                           ;api.c: 551: {;api.c: 552: out_buffer[(*out_idx_ptr)++] = COMMAND_JUMP_STEPS_WITH_OVERSH
      +                          OOT;
 44905  00FD88  C098  FFD9         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr,fsr2l
 44906  00FD8C  C099  FFDA         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr+1,fsr2h
 44907  00FD90  CFDF F09A          	movff	indf2,??__parse_jump_steps_with_overshoot
 44908  00FD94  0E01               	movlw	1
 44909  00FD96  26DF               	addwf	indf2,f,c
 44910  00FD98  0100               	movlb	0	; () banked
 44911  00FD9A  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 44912  00FD9C  0D01               	mullw	1
 44913  00FD9E  50F3               	movf	prodl,w,c
 44914  00FDA0  2596               	addwf	__parse_jump_steps_with_overshoot@out_buffer& (0+255),w,b
 44915  00FDA2  6ED9               	movwf	fsr2l,c
 44916  00FDA4  50F4               	movf	prodh,w,c
 44917  00FDA6  2197               	addwfc	(__parse_jump_steps_with_overshoot@out_buffer+1)& (0+255),w,b
 44918  00FDA8  6EDA               	movwf	fsr2h,c
 44919  00FDAA  0E91               	movlw	145
 44920  00FDAC  6EDF               	movwf	indf2,c
 44921                           
 44922                           ;api.c: 553: out_buffer[(*out_idx_ptr)++] = return_value;
 44923  00FDAE  C098  FFD9         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr,fsr2l
 44924  00FDB2  C099  FFDA         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr+1,fsr2h
 44925  00FDB6  CFDF F09A          	movff	indf2,??__parse_jump_steps_with_overshoot
 44926  00FDBA  0E01               	movlw	1
 44927  00FDBC  26DF               	addwf	indf2,f,c
 44928  00FDBE  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 44929  00FDC0  0D01               	mullw	1
 44930  00FDC2  50F3               	movf	prodl,w,c
 44931  00FDC4  2596               	addwf	__parse_jump_steps_with_overshoot@out_buffer& (0+255),w,b
 44932  00FDC6  6ED9               	movwf	fsr2l,c
 44933  00FDC8  50F4               	movf	prodh,w,c
 44934  00FDCA  2197               	addwfc	(__parse_jump_steps_with_overshoot@out_buffer+1)& (0+255),w,b
 44935  00FDCC  6EDA               	movwf	fsr2h,c
 44936  00FDCE  C09B  FFDF         	movff	__parse_jump_steps_with_overshoot@return_value,indf2
 44937  00FDD2                     l2364:
 44938                           
 44939                           ;api.c: 554: };api.c: 556: return 5;
 44940                           
 44941                           ; BSR set to: 0
 44942  00FDD2  0E05               	movlw	5
 44943  00FDD4  0012               	return	
 44944  00FDD6                     __end_of__parse_jump_steps_with_overshoot:
 44945                           	opt stack 0
 44946                           tosu	equ	0xFFF
 44947                           tosh	equ	0xFFE
 44948                           tosl	equ	0xFFD
 44949                           pclath	equ	0xFFA
 44950                           tblptru	equ	0xFF8
 44951                           tblptrh	equ	0xFF7
 44952                           tblptrl	equ	0xFF6
 44953                           tablat	equ	0xFF5
 44954                           prodh	equ	0xFF4
 44955                           prodl	equ	0xFF3
 44956                           intcon	equ	0xFF2
 44957                           indf0	equ	0xFEF
 44958                           postinc0	equ	0xFEE
 44959                           fsr0h	equ	0xFEA
 44960                           fsr0l	equ	0xFE9
 44961                           wreg	equ	0xFE8
 44962                           indf1	equ	0xFE7
 44963                           postinc1	equ	0xFE6
 44964                           postdec1	equ	0xFE5
 44965                           plusw1	equ	0xFE3
 44966                           fsr1h	equ	0xFE2
 44967                           fsr1l	equ	0xFE1
 44968                           indf2	equ	0xFDF
 44969                           postinc2	equ	0xFDE
 44970                           postdec2	equ	0xFDD
 44971                           plusw2	equ	0xFDB
 44972                           fsr2h	equ	0xFDA
 44973                           fsr2l	equ	0xFD9
 44974                           status	equ	0xFD8
 44975                           
 44976 ;; *************** function __parse_jump_steps *****************
 44977 ;; Defined at:
 44978 ;;		line 490 in file "api.c"
 44979 ;; Parameters:    Size  Location     Type
 44980 ;;  data            2   52[BANK0 ] PTR unsigned char 
 44981 ;;		 -> ReceivedDataBuffer(64), 
 44982 ;;  out_buffer      2   54[BANK0 ] PTR unsigned char 
 44983 ;;		 -> ToSendDataBuffer(64), 
 44984 ;;  out_idx_ptr     2   56[BANK0 ] PTR unsigned char 
 44985 ;;		 -> api_parse@out_idx(1), 
 44986 ;; Auto vars:     Size  Location     Type
 44987 ;;  number_of_st    4   60[BANK0 ] long 
 44988 ;;  return_value    1   59[BANK0 ] unsigned char 
 44989 ;; Return value:  Size  Location     Type
 44990 ;;                  1    wreg      unsigned char 
 44991 ;; Registers used:
 44992 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44993 ;; Tracked objects:
 44994 ;;		On entry : 0/0
 44995 ;;		On exit  : 0/0
 44996 ;;		Unchanged: 0/0
 44997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44998 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44999 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45000 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45001 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45002 ;;Total ram usage:       12 bytes
 45003 ;; Hardware stack levels used:    1
 45004 ;; Hardware stack levels required when called:   14
 45005 ;; This function calls:
 45006 ;;		_motor_move_steps
 45007 ;; This function is called by:
 45008 ;;		__parse_command_long
 45009 ;; This function uses a non-reentrant model
 45010 ;;
 45011                           
 45012                           	psect	text185
 45013  00FDD6                     __ptext185:
 45014                           	opt stack 0
 45015  00FDD6                     __parse_jump_steps:
 45016                           	opt stack 13
 45017                           
 45018                           ;api.c: 494: uint8_t return_value;;api.c: 495: int32_t number_of_steps;;api.c: 497: numb
      +                          er_of_steps = data[1];
 45019                           
 45020                           ;incstack = 0
 45021  00FDD6  0100               	movlb	0	; () banked
 45022  00FDD8  EE20 F001          	lfsr	2,1
 45023  00FDDC  5194               	movf	__parse_jump_steps@data& (0+255),w,b
 45024  00FDDE  26D9               	addwf	fsr2l,f,c
 45025  00FDE0  5195               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 45026  00FDE2  22DA               	addwfc	fsr2h,f,c
 45027  00FDE4  50DF               	movf	indf2,w,c
 45028  00FDE6  6F9A               	movwf	??__parse_jump_steps& (0+255),b
 45029  00FDE8  519A               	movf	??__parse_jump_steps& (0+255),w,b
 45030  00FDEA  6F9C               	movwf	__parse_jump_steps@number_of_steps& (0+255),b
 45031  00FDEC  6B9D               	clrf	(__parse_jump_steps@number_of_steps+1)& (0+255),b
 45032  00FDEE  6B9E               	clrf	(__parse_jump_steps@number_of_steps+2)& (0+255),b
 45033  00FDF0  6B9F               	clrf	(__parse_jump_steps@number_of_steps+3)& (0+255),b
 45034                           
 45035                           ; BSR set to: 0
 45036                           ;api.c: 498: number_of_steps <<= 8;
 45037  00FDF2  C09E  F09F         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 45038  00FDF6  C09D  F09E         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 45039  00FDFA  C09C  F09D         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 45040  00FDFE  6B9C               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 45041                           
 45042                           ; BSR set to: 0
 45043                           ;api.c: 499: number_of_steps |= data[2];
 45044  00FE00  EE20 F002          	lfsr	2,2
 45045  00FE04  5194               	movf	__parse_jump_steps@data& (0+255),w,b
 45046  00FE06  26D9               	addwf	fsr2l,f,c
 45047  00FE08  5195               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 45048  00FE0A  22DA               	addwfc	fsr2h,f,c
 45049  00FE0C  50DF               	movf	indf2,w,c
 45050  00FE0E  6F9A               	movwf	??__parse_jump_steps& (0+255),b
 45051  00FE10  519A               	movf	??__parse_jump_steps& (0+255),w,b
 45052  00FE12  139C               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 45053                           
 45054                           ;api.c: 500: number_of_steps <<= 8;
 45055  00FE14  C09E  F09F         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 45056  00FE18  C09D  F09E         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 45057  00FE1C  C09C  F09D         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 45058  00FE20  6B9C               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 45059                           
 45060                           ; BSR set to: 0
 45061                           ;api.c: 501: number_of_steps |= data[3];
 45062  00FE22  EE20 F003          	lfsr	2,3
 45063  00FE26  5194               	movf	__parse_jump_steps@data& (0+255),w,b
 45064  00FE28  26D9               	addwf	fsr2l,f,c
 45065  00FE2A  5195               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 45066  00FE2C  22DA               	addwfc	fsr2h,f,c
 45067  00FE2E  50DF               	movf	indf2,w,c
 45068  00FE30  6F9A               	movwf	??__parse_jump_steps& (0+255),b
 45069  00FE32  519A               	movf	??__parse_jump_steps& (0+255),w,b
 45070  00FE34  139C               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 45071                           
 45072                           ; BSR set to: 0
 45073                           ;api.c: 502: number_of_steps <<= 8;
 45074  00FE36  C09E  F09F         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 45075  00FE3A  C09D  F09E         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 45076  00FE3E  C09C  F09D         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 45077  00FE42  6B9C               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 45078                           
 45079                           ;api.c: 503: number_of_steps |= data[4];
 45080  00FE44  EE20 F004          	lfsr	2,4
 45081  00FE48  5194               	movf	__parse_jump_steps@data& (0+255),w,b
 45082  00FE4A  26D9               	addwf	fsr2l,f,c
 45083  00FE4C  5195               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 45084  00FE4E  22DA               	addwfc	fsr2h,f,c
 45085  00FE50  50DF               	movf	indf2,w,c
 45086  00FE52  6F9A               	movwf	??__parse_jump_steps& (0+255),b
 45087  00FE54  519A               	movf	??__parse_jump_steps& (0+255),w,b
 45088  00FE56  139C               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 45089                           
 45090                           ; BSR set to: 0
 45091                           ;api.c: 505: if(number_of_steps>0)
 45092  00FE58  BF9F               	btfsc	(__parse_jump_steps@number_of_steps+3)& (0+255),7,b
 45093  00FE5A  D018               	goto	l2356
 45094  00FE5C  519F               	movf	(__parse_jump_steps@number_of_steps+3)& (0+255),w,b
 45095  00FE5E  119E               	iorwf	(__parse_jump_steps@number_of_steps+2)& (0+255),w,b
 45096  00FE60  119D               	iorwf	(__parse_jump_steps@number_of_steps+1)& (0+255),w,b
 45097  00FE62  E103               	bnz	u14320
 45098  00FE64  059C               	decf	__parse_jump_steps@number_of_steps& (0+255),w,b
 45099  00FE66  A0D8               	btfss	status,0,c
 45100  00FE68  D011               	goto	l2356
 45101  00FE6A                     u14320:
 45102                           
 45103                           ; BSR set to: 0
 45104                           ;api.c: 506: {;api.c: 507: return_value = motor_move_steps(MOTOR_DIRECTION_CW, (uint32_t
      +                          ) number_of_steps, 0xFFFF, MOTOR_OVERSHOOT_NO_OVERSHOOT);
 45105  00FE6A  C09C  F08C         	movff	__parse_jump_steps@number_of_steps,motor_move_steps@distance
 45106  00FE6E  C09D  F08D         	movff	__parse_jump_steps@number_of_steps+1,motor_move_steps@distance+1
 45107  00FE72  C09E  F08E         	movff	__parse_jump_steps@number_of_steps+2,motor_move_steps@distance+2
 45108  00FE76  C09F  F08F         	movff	__parse_jump_steps@number_of_steps+3,motor_move_steps@distance+3
 45109  00FE7A  0EFF               	movlw	255
 45110  00FE7C  6F91               	movwf	(motor_move_steps@speed+1)& (0+255),b
 45111  00FE7E  6990               	setf	motor_move_steps@speed& (0+255),b
 45112  00FE80  0E01               	movlw	1
 45113  00FE82  6F92               	movwf	motor_move_steps@overshoot& (0+255),b
 45114  00FE84  0E01               	movlw	1
 45115  00FE86  ECDE  F0AD         	call	_motor_move_steps
 45116  00FE8A  D018               	goto	L68
 45117  00FE8C                     l2356:
 45118                           
 45119                           ; BSR set to: 0
 45120                           ;api.c: 509: else;api.c: 510: {;api.c: 511: number_of_steps = -number_of_steps;
 45121                           
 45122                           ; BSR set to: 0
 45123  00FE8C  1F9F               	comf	(__parse_jump_steps@number_of_steps+3)& (0+255),f,b
 45124  00FE8E  1F9E               	comf	(__parse_jump_steps@number_of_steps+2)& (0+255),f,b
 45125  00FE90  1F9D               	comf	(__parse_jump_steps@number_of_steps+1)& (0+255),f,b
 45126  00FE92  6D9C               	negf	__parse_jump_steps@number_of_steps& (0+255),b
 45127  00FE94  0E00               	movlw	0
 45128  00FE96  239D               	addwfc	(__parse_jump_steps@number_of_steps+1)& (0+255),f,b
 45129  00FE98  239E               	addwfc	(__parse_jump_steps@number_of_steps+2)& (0+255),f,b
 45130  00FE9A  239F               	addwfc	(__parse_jump_steps@number_of_steps+3)& (0+255),f,b
 45131                           
 45132                           ; BSR set to: 0
 45133                           ;api.c: 512: return_value = motor_move_steps(MOTOR_DIRECTION_CCW, (uint32_t) number_of_s
      +                          teps, 0xFFFF, MOTOR_OVERSHOOT_NO_OVERSHOOT);
 45134  00FE9C  C09C  F08C         	movff	__parse_jump_steps@number_of_steps,motor_move_steps@distance
 45135  00FEA0  C09D  F08D         	movff	__parse_jump_steps@number_of_steps+1,motor_move_steps@distance+1
 45136  00FEA4  C09E  F08E         	movff	__parse_jump_steps@number_of_steps+2,motor_move_steps@distance+2
 45137  00FEA8  C09F  F08F         	movff	__parse_jump_steps@number_of_steps+3,motor_move_steps@distance+3
 45138  00FEAC  0EFF               	movlw	255
 45139  00FEAE  6F91               	movwf	(motor_move_steps@speed+1)& (0+255),b
 45140  00FEB0  6990               	setf	motor_move_steps@speed& (0+255),b
 45141  00FEB2  0E01               	movlw	1
 45142  00FEB4  6F92               	movwf	motor_move_steps@overshoot& (0+255),b
 45143  00FEB6  0EFF               	movlw	255
 45144  00FEB8  ECDE  F0AD         	call	_motor_move_steps
 45145  00FEBC                     L68:
 45146  00FEBC  0100               	movlb	0	; () banked
 45147  00FEBE  6F9B               	movwf	__parse_jump_steps@return_value& (0+255),b
 45148                           
 45149                           ; BSR set to: 0
 45150                           ;api.c: 513: };api.c: 516: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<62))
 45151                           
 45152                           ; BSR set to: 0
 45153  00FEC0  C098  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 45154  00FEC4  C099  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 45155  00FEC8  50DF               	movf	indf2,w,c
 45156  00FECA  B4D8               	btfsc	status,2,c
 45157  00FECC  D02B               	goto	l2358
 45158                           
 45159                           ; BSR set to: 0
 45160  00FECE  C098  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 45161  00FED2  C099  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 45162  00FED6  0E3E               	movlw	62
 45163  00FED8  60DF               	cpfslt	indf2,c
 45164  00FEDA  D024               	goto	l2358
 45165                           
 45166                           ; BSR set to: 0
 45167                           ;api.c: 517: {;api.c: 518: out_buffer[(*out_idx_ptr)++] = COMMAND_JUMP_STEPS;
 45168  00FEDC  C098  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 45169  00FEE0  C099  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 45170  00FEE4  CFDF F09A          	movff	indf2,??__parse_jump_steps
 45171  00FEE8  0E01               	movlw	1
 45172  00FEEA  26DF               	addwf	indf2,f,c
 45173  00FEEC  519A               	movf	??__parse_jump_steps& (0+255),w,b
 45174  00FEEE  0D01               	mullw	1
 45175  00FEF0  50F3               	movf	prodl,w,c
 45176  00FEF2  2596               	addwf	__parse_jump_steps@out_buffer& (0+255),w,b
 45177  00FEF4  6ED9               	movwf	fsr2l,c
 45178  00FEF6  50F4               	movf	prodh,w,c
 45179  00FEF8  2197               	addwfc	(__parse_jump_steps@out_buffer+1)& (0+255),w,b
 45180  00FEFA  6EDA               	movwf	fsr2h,c
 45181  00FEFC  0E90               	movlw	144
 45182  00FEFE  6EDF               	movwf	indf2,c
 45183                           
 45184                           ;api.c: 519: out_buffer[(*out_idx_ptr)++] = return_value;
 45185  00FF00  C098  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 45186  00FF04  C099  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 45187  00FF08  CFDF F09A          	movff	indf2,??__parse_jump_steps
 45188  00FF0C  0E01               	movlw	1
 45189  00FF0E  26DF               	addwf	indf2,f,c
 45190  00FF10  519A               	movf	??__parse_jump_steps& (0+255),w,b
 45191  00FF12  0D01               	mullw	1
 45192  00FF14  50F3               	movf	prodl,w,c
 45193  00FF16  2596               	addwf	__parse_jump_steps@out_buffer& (0+255),w,b
 45194  00FF18  6ED9               	movwf	fsr2l,c
 45195  00FF1A  50F4               	movf	prodh,w,c
 45196  00FF1C  2197               	addwfc	(__parse_jump_steps@out_buffer+1)& (0+255),w,b
 45197  00FF1E  6EDA               	movwf	fsr2h,c
 45198  00FF20  C09B  FFDF         	movff	__parse_jump_steps@return_value,indf2
 45199  00FF24                     l2358:
 45200                           
 45201                           ; BSR set to: 0
 45202                           ;api.c: 520: };api.c: 522: return 5;
 45203                           
 45204                           ; BSR set to: 0
 45205  00FF24  0E05               	movlw	5
 45206  00FF26  0012               	return	
 45207  00FF28                     __end_of__parse_jump_steps:
 45208                           	opt stack 0
 45209                           tosu	equ	0xFFF
 45210                           tosh	equ	0xFFE
 45211                           tosl	equ	0xFFD
 45212                           pclath	equ	0xFFA
 45213                           tblptru	equ	0xFF8
 45214                           tblptrh	equ	0xFF7
 45215                           tblptrl	equ	0xFF6
 45216                           tablat	equ	0xFF5
 45217                           prodh	equ	0xFF4
 45218                           prodl	equ	0xFF3
 45219                           intcon	equ	0xFF2
 45220                           indf0	equ	0xFEF
 45221                           postinc0	equ	0xFEE
 45222                           fsr0h	equ	0xFEA
 45223                           fsr0l	equ	0xFE9
 45224                           wreg	equ	0xFE8
 45225                           indf1	equ	0xFE7
 45226                           postinc1	equ	0xFE6
 45227                           postdec1	equ	0xFE5
 45228                           plusw1	equ	0xFE3
 45229                           fsr1h	equ	0xFE2
 45230                           fsr1l	equ	0xFE1
 45231                           indf2	equ	0xFDF
 45232                           postinc2	equ	0xFDE
 45233                           postdec2	equ	0xFDD
 45234                           plusw2	equ	0xFDB
 45235                           fsr2h	equ	0xFDA
 45236                           fsr2l	equ	0xFD9
 45237                           status	equ	0xFD8
 45238                           
 45239 ;; *************** function _motor_move_steps *****************
 45240 ;; Defined at:
 45241 ;;		line 995 in file "motor.c"
 45242 ;; Parameters:    Size  Location     Type
 45243 ;;  direction       1    wreg     enum E6622
 45244 ;;  distance        4   44[BANK0 ] unsigned long 
 45245 ;;  speed           2   48[BANK0 ] unsigned int 
 45246 ;;  overshoot       1   50[BANK0 ] enum E6635
 45247 ;; Auto vars:     Size  Location     Type
 45248 ;;  direction       1   51[BANK0 ] enum E6622
 45249 ;; Return value:  Size  Location     Type
 45250 ;;                  1    wreg      enum E6782
 45251 ;; Registers used:
 45252 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45253 ;; Tracked objects:
 45254 ;;		On entry : 0/0
 45255 ;;		On exit  : 0/0
 45256 ;;		Unchanged: 0/0
 45257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45258 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45259 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45261 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45262 ;;Total ram usage:        8 bytes
 45263 ;; Hardware stack levels used:    1
 45264 ;; Hardware stack levels required when called:   13
 45265 ;; This function calls:
 45266 ;;		__motor_move_steps
 45267 ;; This function is called by:
 45268 ;;		__parse_jump_steps
 45269 ;;		__parse_jump_steps_with_overshoot
 45270 ;;		_motor_arc_move
 45271 ;; This function uses a non-reentrant model
 45272 ;;
 45273                           
 45274                           	psect	text186
 45275  015BBC                     __ptext186:
 45276                           	opt stack 0
 45277  015BBC                     _motor_move_steps:
 45278                           	opt stack 15
 45279                           
 45280                           ; BSR set to: 0
 45281                           ;incstack = 0
 45282                           ;motor_move_steps@direction stored from wreg
 45283  015BBC  0100               	movlb	0	; () banked
 45284  015BBE  6F93               	movwf	motor_move_steps@direction& (0+255),b
 45285                           
 45286                           ;motor.c: 998: return _motor_move_steps(direction, distance, speed, overshoot, MOTOR_MOV
      +                          E_TYPE_NORMAL);
 45287  015BC0  C08C  F07D         	movff	motor_move_steps@distance,__motor_move_steps@distance_in_steps
 45288  015BC4  C08D  F07E         	movff	motor_move_steps@distance+1,__motor_move_steps@distance_in_steps+1
 45289  015BC8  C08E  F07F         	movff	motor_move_steps@distance+2,__motor_move_steps@distance_in_steps+2
 45290  015BCC  C08F  F080         	movff	motor_move_steps@distance+3,__motor_move_steps@distance_in_steps+3
 45291  015BD0  C090  F081         	movff	motor_move_steps@speed,__motor_move_steps@speed
 45292  015BD4  C091  F082         	movff	motor_move_steps@speed+1,__motor_move_steps@speed+1
 45293  015BD8  C092  F083         	movff	motor_move_steps@overshoot,__motor_move_steps@overshoot
 45294  015BDC  0E00               	movlw	0
 45295  015BDE  0100               	movlb	0	; () banked
 45296  015BE0  6F84               	movwf	__motor_move_steps@type& (0+255),b
 45297  015BE2  5193               	movf	motor_move_steps@direction& (0+255),w,b
 45298  015BE4  EC2E  F077         	call	__motor_move_steps
 45299  015BE8  0012               	return	
 45300  015BEA                     __end_of_motor_move_steps:
 45301                           	opt stack 0
 45302                           tosu	equ	0xFFF
 45303                           tosh	equ	0xFFE
 45304                           tosl	equ	0xFFD
 45305                           pclath	equ	0xFFA
 45306                           tblptru	equ	0xFF8
 45307                           tblptrh	equ	0xFF7
 45308                           tblptrl	equ	0xFF6
 45309                           tablat	equ	0xFF5
 45310                           prodh	equ	0xFF4
 45311                           prodl	equ	0xFF3
 45312                           intcon	equ	0xFF2
 45313                           indf0	equ	0xFEF
 45314                           postinc0	equ	0xFEE
 45315                           fsr0h	equ	0xFEA
 45316                           fsr0l	equ	0xFE9
 45317                           wreg	equ	0xFE8
 45318                           indf1	equ	0xFE7
 45319                           postinc1	equ	0xFE6
 45320                           postdec1	equ	0xFE5
 45321                           plusw1	equ	0xFE3
 45322                           fsr1h	equ	0xFE2
 45323                           fsr1l	equ	0xFE1
 45324                           indf2	equ	0xFDF
 45325                           postinc2	equ	0xFDE
 45326                           postdec2	equ	0xFDD
 45327                           plusw2	equ	0xFDB
 45328                           fsr2h	equ	0xFDA
 45329                           fsr2l	equ	0xFD9
 45330                           status	equ	0xFD8
 45331                           
 45332 ;; *************** function __motor_move_steps *****************
 45333 ;; Defined at:
 45334 ;;		line 187 in file "motor.c"
 45335 ;; Parameters:    Size  Location     Type
 45336 ;;  direction       1    wreg     enum E6622
 45337 ;;  distance_in_    4   29[BANK0 ] unsigned long 
 45338 ;;  speed           2   33[BANK0 ] unsigned int 
 45339 ;;  overshoot       1   35[BANK0 ] enum E6635
 45340 ;;  type            1   36[BANK0 ] enum E6631
 45341 ;; Auto vars:     Size  Location     Type
 45342 ;;  direction       1   43[BANK0 ] enum E6622
 45343 ;;  distance_to_    4   39[BANK0 ] long 
 45344 ;;  return_value    1   38[BANK0 ] enum E6639
 45345 ;;  return_value    1   37[BANK0 ] enum E6639
 45346 ;; Return value:  Size  Location     Type
 45347 ;;                  1    wreg      enum E6639
 45348 ;; Registers used:
 45349 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45350 ;; Tracked objects:
 45351 ;;		On entry : 0/0
 45352 ;;		On exit  : 0/0
 45353 ;;		Unchanged: 0/0
 45354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45355 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45356 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45358 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45359 ;;Total ram usage:       15 bytes
 45360 ;; Hardware stack levels used:    1
 45361 ;; Hardware stack levels required when called:   12
 45362 ;; This function calls:
 45363 ;;		__motor_distance_to_limit
 45364 ;;		__motor_schedule_command
 45365 ;;		_motor_items_in_cue
 45366 ;; This function is called by:
 45367 ;;		_motor_move_steps
 45368 ;;		_motor_move_degrees_int
 45369 ;;		_motor_goto_steps
 45370 ;;		_motor_move_endless
 45371 ;;		_motor_move_degrees_float
 45372 ;;		_motor_goto_degrees_float
 45373 ;;		_motor_goto_degrees_int
 45374 ;; This function uses a non-reentrant model
 45375 ;;
 45376                           
 45377                           	psect	text187
 45378  00EE5C                     __ptext187:
 45379                           	opt stack 0
 45380  00EE5C                     __motor_move_steps:
 45381                           	opt stack 16
 45382                           
 45383                           ;incstack = 0
 45384                           ;__motor_move_steps@direction stored from wreg
 45385  00EE5C  0100               	movlb	0	; () banked
 45386  00EE5E  6F8B               	movwf	__motor_move_steps@direction& (0+255),b
 45387                           
 45388                           ;motor.c: 189: int32_t distance_to_limit;;motor.c: 190: motorReturnValue_t return_value_
      +                          1;;motor.c: 191: motorReturnValue_t return_value_2;;motor.c: 193: if(os.busy || motor_it
      +                          ems_in_cue()!=0)
 45389  00EE60  0101               	movlb	1	; () banked
 45390  00EE62  5175               	movf	(_os+16)& (0+255),w,b	;volatile
 45391  00EE64  A4D8               	btfss	status,2,c
 45392  00EE66  D005               	goto	u11680
 45393                           
 45394                           ; BSR set to: 1
 45395  00EE68  EC12  F0B0         	call	_motor_items_in_cue	;wreg free
 45396  00EE6C  0900               	iorlw	0
 45397  00EE6E  B4D8               	btfsc	status,2,c
 45398  00EE70  D002               	goto	l2471
 45399  00EE72                     u11680:
 45400                           
 45401                           ;motor.c: 194: {;motor.c: 196: return MOTOR_RETURN_VALUE_BUSY;
 45402  00EE72  0E01               	movlw	1
 45403  00EE74  0012               	return	
 45404  00EE76                     l2471:
 45405                           
 45406                           ;motor.c: 197: };motor.c: 199: if((direction!=MOTOR_DIRECTION_CW) && (direction!=MOTOR_D
      +                          IRECTION_CCW))
 45407  00EE76  0100               	movlb	0	; () banked
 45408  00EE78  058B               	decf	__motor_move_steps@direction& (0+255),w,b
 45409  00EE7A  B4D8               	btfsc	status,2,c
 45410  00EE7C  D005               	goto	l2475
 45411                           
 45412                           ; BSR set to: 0
 45413  00EE7E  298B               	incf	__motor_move_steps@direction& (0+255),w,b
 45414  00EE80  B4D8               	btfsc	status,2,c
 45415  00EE82  D002               	goto	l2475
 45416                           
 45417                           ; BSR set to: 0
 45418                           ;motor.c: 200: {;motor.c: 202: return MOTOR_RETURN_VALUE_INVALID_DIRECTION;
 45419  00EE84  0E04               	movlw	4
 45420                           
 45421                           ; BSR set to: 0
 45422  00EE86  0012               	return	
 45423  00EE88                     l2475:
 45424                           
 45425                           ; BSR set to: 0
 45426                           ;motor.c: 203: };motor.c: 205: if(distance_in_steps==0)
 45427                           
 45428                           ; BSR set to: 0
 45429  00EE88  517D               	movf	__motor_move_steps@distance_in_steps& (0+255),w,b
 45430  00EE8A  117E               	iorwf	(__motor_move_steps@distance_in_steps+1)& (0+255),w,b
 45431  00EE8C  117F               	iorwf	(__motor_move_steps@distance_in_steps+2)& (0+255),w,b
 45432  00EE8E  1180               	iorwf	(__motor_move_steps@distance_in_steps+3)& (0+255),w,b
 45433  00EE90  A4D8               	btfss	status,2,c
 45434  00EE92  D002               	goto	l2476
 45435                           
 45436                           ; BSR set to: 0
 45437                           ;motor.c: 206: {;motor.c: 208: return MOTOR_RETURN_VALUE_INVALID_DISTANCE;
 45438  00EE94  0E03               	movlw	3
 45439                           
 45440                           ; BSR set to: 0
 45441  00EE96  0012               	return	
 45442  00EE98                     l2476:
 45443                           
 45444                           ; BSR set to: 0
 45445                           ;motor.c: 209: };motor.c: 211: if(speed==0)
 45446                           
 45447                           ; BSR set to: 0
 45448  00EE98  5181               	movf	__motor_move_steps@speed& (0+255),w,b
 45449  00EE9A  1182               	iorwf	(__motor_move_steps@speed+1)& (0+255),w,b
 45450  00EE9C  A4D8               	btfss	status,2,c
 45451  00EE9E  D002               	goto	l2477
 45452                           
 45453                           ; BSR set to: 0
 45454                           ;motor.c: 212: {;motor.c: 214: return MOTOR_RETURN_VALUE_INVALID_SPEED;
 45455  00EEA0  0E02               	movlw	2
 45456                           
 45457                           ; BSR set to: 0
 45458  00EEA2  0012               	return	
 45459  00EEA4                     l2477:
 45460                           
 45461                           ; BSR set to: 0
 45462                           ;motor.c: 215: };motor.c: 217: if(!((type==MOTOR_MOVE_TYPE_NORMAL) || (type==MOTOR_MOVE_
      +                          TYPE_ENDLESS)))
 45463                           
 45464                           ; BSR set to: 0
 45465  00EEA4  5184               	movf	__motor_move_steps@type& (0+255),w,b
 45466  00EEA6  B4D8               	btfsc	status,2,c
 45467  00EEA8  D005               	goto	l2478
 45468                           
 45469                           ; BSR set to: 0
 45470  00EEAA  0584               	decf	__motor_move_steps@type& (0+255),w,b
 45471  00EEAC  B4D8               	btfsc	status,2,c
 45472  00EEAE  D002               	goto	l2478
 45473                           
 45474                           ; BSR set to: 0
 45475                           ;motor.c: 218: {;motor.c: 220: return MOTOR_RETURN_VALUE_INVALID_MOVE_TYPE;
 45476  00EEB0  0E05               	movlw	5
 45477                           
 45478                           ; BSR set to: 0
 45479  00EEB2  0012               	return	
 45480  00EEB4                     l2478:
 45481                           
 45482                           ; BSR set to: 0
 45483                           ;motor.c: 221: };motor.c: 223: if(!((overshoot==MOTOR_OVERSHOOT_NO_OVERSHOOT) || (oversh
      +                          oot==MOTOR_OVERSHOOT_WITH_OVERSHOOT)))
 45484                           
 45485                           ; BSR set to: 0
 45486  00EEB4  0583               	decf	__motor_move_steps@overshoot& (0+255),w,b
 45487  00EEB6  B4D8               	btfsc	status,2,c
 45488  00EEB8  D005               	goto	l2479
 45489                           
 45490                           ; BSR set to: 0
 45491  00EEBA  5183               	movf	__motor_move_steps@overshoot& (0+255),w,b
 45492  00EEBC  B4D8               	btfsc	status,2,c
 45493  00EEBE  D002               	goto	l2479
 45494                           
 45495                           ; BSR set to: 0
 45496                           ;motor.c: 224: {;motor.c: 226: return MOTOR_RETURN_VALUE_INVALID_OVERSHOOT;
 45497  00EEC0  0E06               	movlw	6
 45498                           
 45499                           ; BSR set to: 0
 45500  00EEC2  0012               	return	
 45501  00EEC4                     l2479:
 45502                           
 45503                           ; BSR set to: 0
 45504                           ;motor.c: 227: };motor.c: 233: distance_to_limit = _motor_distance_to_limit(direction);
 45505                           
 45506                           ; BSR set to: 0
 45507  00EEC4  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 45508  00EEC6  EC3A  F080         	call	__motor_distance_to_limit
 45509  00EECA  C06C  F087         	movff	?__motor_distance_to_limit,__motor_move_steps@distance_to_limit
 45510  00EECE  C06D  F088         	movff	?__motor_distance_to_limit+1,__motor_move_steps@distance_to_limit+1
 45511  00EED2  C06E  F089         	movff	?__motor_distance_to_limit+2,__motor_move_steps@distance_to_limit+2
 45512  00EED6  C06F  F08A         	movff	?__motor_distance_to_limit+3,__motor_move_steps@distance_to_limit+3
 45513                           
 45514                           ;motor.c: 236: if(distance_to_limit<=0)
 45515  00EEDA  0100               	movlb	0	; () banked
 45516  00EEDC  BF8A               	btfsc	(__motor_move_steps@distance_to_limit+3)& (0+255),7,b
 45517  00EEDE  D007               	goto	u11770
 45518  00EEE0  518A               	movf	(__motor_move_steps@distance_to_limit+3)& (0+255),w,b
 45519  00EEE2  1189               	iorwf	(__motor_move_steps@distance_to_limit+2)& (0+255),w,b
 45520  00EEE4  1188               	iorwf	(__motor_move_steps@distance_to_limit+1)& (0+255),w,b
 45521  00EEE6  E105               	bnz	l13408
 45522  00EEE8  0587               	decf	__motor_move_steps@distance_to_limit& (0+255),w,b
 45523  00EEEA  B0D8               	btfsc	status,0,c
 45524  00EEEC  D002               	goto	l2480
 45525  00EEEE                     u11770:
 45526                           
 45527                           ; BSR set to: 0
 45528                           ;motor.c: 237: {;motor.c: 238: return MOTOR_RETURN_VALUE_LIMIT_VIOLATED;
 45529  00EEEE  0E07               	movlw	7
 45530                           
 45531                           ; BSR set to: 0
 45532  00EEF0  0012               	return	
 45533  00EEF2                     l2480:
 45534  00EEF2                     l13408:
 45535                           
 45536                           ; BSR set to: 0
 45537                           ;motor.c: 239: };motor.c: 242: if(distance_to_limit!=2147483647)
 45538  00EEF2  2987               	incf	__motor_move_steps@distance_to_limit& (0+255),w,b
 45539  00EEF4  E108               	bnz	u11780
 45540  00EEF6  2988               	incf	(__motor_move_steps@distance_to_limit+1)& (0+255),w,b
 45541  00EEF8  E106               	bnz	u11780
 45542  00EEFA  2989               	incf	(__motor_move_steps@distance_to_limit+2)& (0+255),w,b
 45543  00EEFC  E104               	bnz	u11780
 45544  00EEFE  0E7F               	movlw	127
 45545  00EF00  198A               	xorwf	(__motor_move_steps@distance_to_limit+3)& (0+255),w,b
 45546  00EF02  B4D8               	btfsc	status,2,c
 45547  00EF04  D002               	goto	l2481
 45548  00EF06                     u11780:
 45549                           
 45550                           ; BSR set to: 0
 45551                           ;motor.c: 243: {;motor.c: 244: type = MOTOR_MOVE_TYPE_NORMAL;
 45552  00EF06  0E00               	movlw	0
 45553  00EF08  6F84               	movwf	__motor_move_steps@type& (0+255),b
 45554  00EF0A                     l2481:
 45555                           
 45556                           ; BSR set to: 0
 45557                           ;motor.c: 245: };motor.c: 248: if(distance_in_steps>((uint32_t) distance_to_limit))
 45558                           
 45559                           ; BSR set to: 0
 45560  00EF0A  517D               	movf	__motor_move_steps@distance_in_steps& (0+255),w,b
 45561  00EF0C  5D87               	subwf	__motor_move_steps@distance_to_limit& (0+255),w,b
 45562  00EF0E  517E               	movf	(__motor_move_steps@distance_in_steps+1)& (0+255),w,b
 45563  00EF10  5988               	subwfb	(__motor_move_steps@distance_to_limit+1)& (0+255),w,b
 45564  00EF12  517F               	movf	(__motor_move_steps@distance_in_steps+2)& (0+255),w,b
 45565  00EF14  5989               	subwfb	(__motor_move_steps@distance_to_limit+2)& (0+255),w,b
 45566  00EF16  5180               	movf	(__motor_move_steps@distance_in_steps+3)& (0+255),w,b
 45567  00EF18  598A               	subwfb	(__motor_move_steps@distance_to_limit+3)& (0+255),w,b
 45568  00EF1A  B0D8               	btfsc	status,0,c
 45569  00EF1C  D008               	goto	l2482
 45570                           
 45571                           ; BSR set to: 0
 45572                           ;motor.c: 249: {;motor.c: 250: distance_in_steps = (uint32_t) distance_to_limit;
 45573  00EF1E  C087  F07D         	movff	__motor_move_steps@distance_to_limit,__motor_move_steps@distance_in_steps
 45574  00EF22  C088  F07E         	movff	__motor_move_steps@distance_to_limit+1,__motor_move_steps@distance_in_steps+1
 45575  00EF26  C089  F07F         	movff	__motor_move_steps@distance_to_limit+2,__motor_move_steps@distance_in_steps+2
 45576  00EF2A  C08A  F080         	movff	__motor_move_steps@distance_to_limit+3,__motor_move_steps@distance_in_steps+3
 45577  00EF2E                     l2482:
 45578                           
 45579                           ; BSR set to: 0
 45580                           ;motor.c: 251: };motor.c: 255: if(overshoot==MOTOR_OVERSHOOT_NO_OVERSHOOT)
 45581                           
 45582                           ; BSR set to: 0
 45583  00EF2E  0583               	decf	__motor_move_steps@overshoot& (0+255),w,b
 45584  00EF30  A4D8               	btfss	status,2,c
 45585  00EF32  D012               	goto	l2483
 45586                           
 45587                           ; BSR set to: 0
 45588                           ;motor.c: 256: {;motor.c: 258: return _motor_schedule_command(direction, distance_in_ste
      +                          ps, speed, type);
 45589  00EF34  C07D  F060         	movff	__motor_move_steps@distance_in_steps,__motor_schedule_command@distance_in_steps
 45590  00EF38  C07E  F061         	movff	__motor_move_steps@distance_in_steps+1,__motor_schedule_command@distance_in_steps
      +                          +1
 45591  00EF3C  C07F  F062         	movff	__motor_move_steps@distance_in_steps+2,__motor_schedule_command@distance_in_steps
      +                          +2
 45592  00EF40  C080  F063         	movff	__motor_move_steps@distance_in_steps+3,__motor_schedule_command@distance_in_steps
      +                          +3
 45593  00EF44  C081  F064         	movff	__motor_move_steps@speed,__motor_schedule_command@speed
 45594  00EF48  C082  F065         	movff	__motor_move_steps@speed+1,__motor_schedule_command@speed+1
 45595  00EF4C  C084  F066         	movff	__motor_move_steps@type,__motor_schedule_command@type
 45596  00EF50  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 45597  00EF52  EC10  F08F         	call	__motor_schedule_command
 45598  00EF56  0012               	return	
 45599  00EF58                     l2483:
 45600                           
 45601                           ;motor.c: 260: };motor.c: 264: if(direction==os.approach_direction)
 45602  00EF58  0100               	movlb	0	; () banked
 45603  00EF5A  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 45604  00EF5C  0101               	movlb	1	; () banked
 45605  00EF5E  1978               	xorwf	(_os+19)& (0+255),w,b	;volatile
 45606  00EF60  A4D8               	btfss	status,2,c
 45607  00EF62  D013               	goto	l2484
 45608                           
 45609                           ; BSR set to: 1
 45610                           ;motor.c: 265: {;motor.c: 266: return _motor_schedule_command(direction, distance_in_ste
      +                          ps, speed, type);
 45611  00EF64  C07D  F060         	movff	__motor_move_steps@distance_in_steps,__motor_schedule_command@distance_in_steps
 45612  00EF68  C07E  F061         	movff	__motor_move_steps@distance_in_steps+1,__motor_schedule_command@distance_in_steps
      +                          +1
 45613  00EF6C  C07F  F062         	movff	__motor_move_steps@distance_in_steps+2,__motor_schedule_command@distance_in_steps
      +                          +2
 45614  00EF70  C080  F063         	movff	__motor_move_steps@distance_in_steps+3,__motor_schedule_command@distance_in_steps
      +                          +3
 45615  00EF74  C081  F064         	movff	__motor_move_steps@speed,__motor_schedule_command@speed
 45616  00EF78  C082  F065         	movff	__motor_move_steps@speed+1,__motor_schedule_command@speed+1
 45617  00EF7C  C084  F066         	movff	__motor_move_steps@type,__motor_schedule_command@type
 45618  00EF80  0100               	movlb	0	; () banked
 45619  00EF82  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 45620  00EF84  EC10  F08F         	call	__motor_schedule_command
 45621  00EF88  0012               	return	
 45622  00EF8A                     l2484:
 45623                           
 45624                           ;motor.c: 267: };motor.c: 272: if(config.overshoot_in_steps==0)
 45625  00EF8A  0101               	movlb	1	; () banked
 45626  00EF8C  519B               	movf	(_config+5)& (0+255),w,b
 45627  00EF8E  119C               	iorwf	(_config+6)& (0+255),w,b
 45628  00EF90  A4D8               	btfss	status,2,c
 45629  00EF92  D013               	goto	l2485
 45630                           
 45631                           ; BSR set to: 1
 45632                           ;motor.c: 273: {;motor.c: 274: return _motor_schedule_command(direction, distance_in_ste
      +                          ps, speed, type);
 45633  00EF94  C07D  F060         	movff	__motor_move_steps@distance_in_steps,__motor_schedule_command@distance_in_steps
 45634  00EF98  C07E  F061         	movff	__motor_move_steps@distance_in_steps+1,__motor_schedule_command@distance_in_steps
      +                          +1
 45635  00EF9C  C07F  F062         	movff	__motor_move_steps@distance_in_steps+2,__motor_schedule_command@distance_in_steps
      +                          +2
 45636  00EFA0  C080  F063         	movff	__motor_move_steps@distance_in_steps+3,__motor_schedule_command@distance_in_steps
      +                          +3
 45637  00EFA4  C081  F064         	movff	__motor_move_steps@speed,__motor_schedule_command@speed
 45638  00EFA8  C082  F065         	movff	__motor_move_steps@speed+1,__motor_schedule_command@speed+1
 45639  00EFAC  C084  F066         	movff	__motor_move_steps@type,__motor_schedule_command@type
 45640  00EFB0  0100               	movlb	0	; () banked
 45641  00EFB2  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 45642  00EFB4  EC10  F08F         	call	__motor_schedule_command
 45643  00EFB8  0012               	return	
 45644  00EFBA                     l2485:
 45645                           
 45646                           ;motor.c: 275: };motor.c: 280: distance_in_steps += config.overshoot_in_steps;
 45647  00EFBA  0101               	movlb	1	; () banked
 45648  00EFBC  519B               	movf	(_config+5)& (0+255),w,b
 45649  00EFBE  0100               	movlb	0	; () banked
 45650  00EFC0  277D               	addwf	__motor_move_steps@distance_in_steps& (0+255),f,b
 45651  00EFC2  0101               	movlb	1	; () banked
 45652  00EFC4  519C               	movf	(_config+6)& (0+255),w,b
 45653  00EFC6  0100               	movlb	0	; () banked
 45654  00EFC8  237E               	addwfc	(__motor_move_steps@distance_in_steps+1)& (0+255),f,b
 45655  00EFCA  0E00               	movlw	0
 45656  00EFCC  237F               	addwfc	(__motor_move_steps@distance_in_steps+2)& (0+255),f,b
 45657  00EFCE  0E00               	movlw	0
 45658  00EFD0  2380               	addwfc	(__motor_move_steps@distance_in_steps+3)& (0+255),f,b
 45659                           
 45660                           ; BSR set to: 0
 45661                           ;motor.c: 281: return_value_1 = _motor_schedule_command(direction, distance_in_steps, sp
      +                          eed, type);
 45662  00EFD2  C07D  F060         	movff	__motor_move_steps@distance_in_steps,__motor_schedule_command@distance_in_steps
 45663  00EFD6  C07E  F061         	movff	__motor_move_steps@distance_in_steps+1,__motor_schedule_command@distance_in_steps
      +                          +1
 45664  00EFDA  C07F  F062         	movff	__motor_move_steps@distance_in_steps+2,__motor_schedule_command@distance_in_steps
      +                          +2
 45665  00EFDE  C080  F063         	movff	__motor_move_steps@distance_in_steps+3,__motor_schedule_command@distance_in_steps
      +                          +3
 45666  00EFE2  C081  F064         	movff	__motor_move_steps@speed,__motor_schedule_command@speed
 45667  00EFE6  C082  F065         	movff	__motor_move_steps@speed+1,__motor_schedule_command@speed+1
 45668  00EFEA  C084  F066         	movff	__motor_move_steps@type,__motor_schedule_command@type
 45669  00EFEE  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 45670  00EFF0  EC10  F08F         	call	__motor_schedule_command
 45671  00EFF4  0100               	movlb	0	; () banked
 45672  00EFF6  6F85               	movwf	__motor_move_steps@return_value_1& (0+255),b
 45673                           
 45674                           ; BSR set to: 0
 45675                           ;motor.c: 282: return_value_2 = _motor_schedule_command(os.approach_direction, (uint32_t
      +                          ) config.overshoot_in_steps, speed, type);
 45676  00EFF8  C19B  F060         	movff	_config+5,__motor_schedule_command@distance_in_steps
 45677  00EFFC  C19C  F061         	movff	_config+6,__motor_schedule_command@distance_in_steps+1
 45678  00F000  6B62               	clrf	(__motor_schedule_command@distance_in_steps+2)& (0+255),b
 45679  00F002  6B63               	clrf	(__motor_schedule_command@distance_in_steps+3)& (0+255),b
 45680  00F004  C081  F064         	movff	__motor_move_steps@speed,__motor_schedule_command@speed
 45681  00F008  C082  F065         	movff	__motor_move_steps@speed+1,__motor_schedule_command@speed+1
 45682  00F00C  C084  F066         	movff	__motor_move_steps@type,__motor_schedule_command@type
 45683  00F010  0101               	movlb	1	; () banked
 45684  00F012  5178               	movf	(_os+19)& (0+255),w,b	;volatile
 45685  00F014  EC10  F08F         	call	__motor_schedule_command
 45686  00F018  0100               	movlb	0	; () banked
 45687  00F01A  6F86               	movwf	__motor_move_steps@return_value_2& (0+255),b
 45688                           
 45689                           ; BSR set to: 0
 45690                           ;motor.c: 286: if(return_value_1 > return_value_2)
 45691  00F01C  5185               	movf	__motor_move_steps@return_value_1& (0+255),w,b
 45692  00F01E  5D86               	subwf	__motor_move_steps@return_value_2& (0+255),w,b
 45693  00F020  B0D8               	btfsc	status,0,c
 45694  00F022  D002               	goto	l2486
 45695                           
 45696                           ; BSR set to: 0
 45697                           ;motor.c: 287: {;motor.c: 288: return return_value_1;
 45698  00F024  5185               	movf	__motor_move_steps@return_value_1& (0+255),w,b
 45699                           
 45700                           ; BSR set to: 0
 45701                           ;motor.c: 289: }
 45702                           
 45703                           ; BSR set to: 0
 45704  00F026  0012               	return	
 45705  00F028                     l2486:
 45706                           
 45707                           ; BSR set to: 0
 45708                           ;motor.c: 290: else;motor.c: 291: {;motor.c: 292: return return_value_2;
 45709                           
 45710                           ; BSR set to: 0
 45711  00F028  5186               	movf	__motor_move_steps@return_value_2& (0+255),w,b
 45712                           
 45713                           ; BSR set to: 0
 45714  00F02A  0012               	return	
 45715  00F02C                     __end_of__motor_move_steps:
 45716                           	opt stack 0
 45717                           tosu	equ	0xFFF
 45718                           tosh	equ	0xFFE
 45719                           tosl	equ	0xFFD
 45720                           pclath	equ	0xFFA
 45721                           tblptru	equ	0xFF8
 45722                           tblptrh	equ	0xFF7
 45723                           tblptrl	equ	0xFF6
 45724                           tablat	equ	0xFF5
 45725                           prodh	equ	0xFF4
 45726                           prodl	equ	0xFF3
 45727                           intcon	equ	0xFF2
 45728                           indf0	equ	0xFEF
 45729                           postinc0	equ	0xFEE
 45730                           fsr0h	equ	0xFEA
 45731                           fsr0l	equ	0xFE9
 45732                           wreg	equ	0xFE8
 45733                           indf1	equ	0xFE7
 45734                           postinc1	equ	0xFE6
 45735                           postdec1	equ	0xFE5
 45736                           plusw1	equ	0xFE3
 45737                           fsr1h	equ	0xFE2
 45738                           fsr1l	equ	0xFE1
 45739                           indf2	equ	0xFDF
 45740                           postinc2	equ	0xFDE
 45741                           postdec2	equ	0xFDD
 45742                           plusw2	equ	0xFDB
 45743                           fsr2h	equ	0xFDA
 45744                           fsr2l	equ	0xFD9
 45745                           status	equ	0xFD8
 45746                           
 45747 ;; *************** function __motor_schedule_command *****************
 45748 ;; Defined at:
 45749 ;;		line 135 in file "motor.c"
 45750 ;; Parameters:    Size  Location     Type
 45751 ;;  direction       1    wreg     enum E6622
 45752 ;;  distance_in_    4    0[BANK0 ] unsigned long 
 45753 ;;  speed           2    4[BANK0 ] unsigned int 
 45754 ;;  type            1    6[BANK0 ] enum E6631
 45755 ;; Auto vars:     Size  Location     Type
 45756 ;;  direction       1    7[BANK0 ] enum E6622
 45757 ;; Return value:  Size  Location     Type
 45758 ;;                  1    wreg      enum E6639
 45759 ;; Registers used:
 45760 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45761 ;; Tracked objects:
 45762 ;;		On entry : 0/0
 45763 ;;		On exit  : 0/0
 45764 ;;		Unchanged: 0/0
 45765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45766 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45767 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45769 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45770 ;;Total ram usage:        8 bytes
 45771 ;; Hardware stack levels used:    1
 45772 ;; Hardware stack levels required when called:   11
 45773 ;; This function calls:
 45774 ;;		_motor_items_in_cue
 45775 ;; This function is called by:
 45776 ;;		__motor_move_steps
 45777 ;;		__motor_move_back_forth
 45778 ;; This function uses a non-reentrant model
 45779 ;;
 45780                           
 45781                           	psect	text188
 45782  011E20                     __ptext188:
 45783                           	opt stack 0
 45784  011E20                     __motor_schedule_command:
 45785                           	opt stack 16
 45786                           
 45787                           ;incstack = 0
 45788                           ;__motor_schedule_command@direction stored from wreg
 45789  011E20  0100               	movlb	0	; () banked
 45790  011E22  6F67               	movwf	__motor_schedule_command@direction& (0+255),b
 45791                           
 45792                           ;motor.c: 137: if(motor_items_in_cue()==8-1)
 45793  011E24  EC12  F0B0         	call	_motor_items_in_cue	;wreg free
 45794  011E28  0A07               	xorlw	7
 45795  011E2A  A4D8               	btfss	status,2,c
 45796  011E2C  D002               	goto	l2462
 45797                           
 45798                           ;motor.c: 138: {;motor.c: 140: return MOTOR_RETURN_VALUE_BUFFER_FULL;
 45799  011E2E  0E08               	movlw	8
 45800  011E30  0012               	return	
 45801  011E32                     l2462:
 45802                           
 45803                           ;motor.c: 141: };motor.c: 143: if((direction!=MOTOR_DIRECTION_CW) && (direction!=MOTOR_D
      +                          IRECTION_CCW))
 45804  011E32  0100               	movlb	0	; () banked
 45805  011E34  0567               	decf	__motor_schedule_command@direction& (0+255),w,b
 45806  011E36  B4D8               	btfsc	status,2,c
 45807  011E38  D005               	goto	l2464
 45808                           
 45809                           ; BSR set to: 0
 45810  011E3A  2967               	incf	__motor_schedule_command@direction& (0+255),w,b
 45811  011E3C  B4D8               	btfsc	status,2,c
 45812  011E3E  D002               	goto	l2464
 45813                           
 45814                           ; BSR set to: 0
 45815                           ;motor.c: 144: {;motor.c: 146: return MOTOR_RETURN_VALUE_INVALID_DIRECTION;
 45816  011E40  0E04               	movlw	4
 45817                           
 45818                           ; BSR set to: 0
 45819  011E42  0012               	return	
 45820  011E44                     l2464:
 45821                           
 45822                           ; BSR set to: 0
 45823                           ;motor.c: 147: };motor.c: 149: if(distance_in_steps==0)
 45824                           
 45825                           ; BSR set to: 0
 45826  011E44  5160               	movf	__motor_schedule_command@distance_in_steps& (0+255),w,b
 45827  011E46  1161               	iorwf	(__motor_schedule_command@distance_in_steps+1)& (0+255),w,b
 45828  011E48  1162               	iorwf	(__motor_schedule_command@distance_in_steps+2)& (0+255),w,b
 45829  011E4A  1163               	iorwf	(__motor_schedule_command@distance_in_steps+3)& (0+255),w,b
 45830  011E4C  A4D8               	btfss	status,2,c
 45831  011E4E  D002               	goto	l2465
 45832                           
 45833                           ; BSR set to: 0
 45834                           ;motor.c: 150: {;motor.c: 152: return MOTOR_RETURN_VALUE_INVALID_DISTANCE;
 45835  011E50  0E03               	movlw	3
 45836                           
 45837                           ; BSR set to: 0
 45838  011E52  0012               	return	
 45839  011E54                     l2465:
 45840                           
 45841                           ; BSR set to: 0
 45842                           ;motor.c: 153: };motor.c: 155: if((type!=MOTOR_MOVE_TYPE_NORMAL) && (type!=MOTOR_MOVE_TY
      +                          PE_ENDLESS))
 45843                           
 45844                           ; BSR set to: 0
 45845  011E54  5166               	movf	__motor_schedule_command@type& (0+255),w,b
 45846  011E56  B4D8               	btfsc	status,2,c
 45847  011E58  D005               	goto	l2466
 45848                           
 45849                           ; BSR set to: 0
 45850  011E5A  0566               	decf	__motor_schedule_command@type& (0+255),w,b
 45851  011E5C  B4D8               	btfsc	status,2,c
 45852  011E5E  D002               	goto	l2466
 45853                           
 45854                           ; BSR set to: 0
 45855                           ;motor.c: 156: {;motor.c: 158: return MOTOR_RETURN_VALUE_INVALID_MOVE_TYPE;
 45856  011E60  0E05               	movlw	5
 45857                           
 45858                           ; BSR set to: 0
 45859  011E62  0012               	return	
 45860  011E64                     l2466:
 45861                           
 45862                           ; BSR set to: 0
 45863                           ;motor.c: 159: };motor.c: 161: if(speed==0)
 45864                           
 45865                           ; BSR set to: 0
 45866  011E64  5164               	movf	__motor_schedule_command@speed& (0+255),w,b
 45867  011E66  1165               	iorwf	(__motor_schedule_command@speed+1)& (0+255),w,b
 45868  011E68  A4D8               	btfss	status,2,c
 45869  011E6A  D002               	goto	l2467
 45870                           
 45871                           ; BSR set to: 0
 45872                           ;motor.c: 162: {;motor.c: 164: return MOTOR_RETURN_VALUE_INVALID_SPEED;
 45873  011E6C  0E02               	movlw	2
 45874                           
 45875                           ; BSR set to: 0
 45876  011E6E  0012               	return	
 45877  011E70                     l2467:
 45878                           
 45879                           ; BSR set to: 0
 45880                           ;motor.c: 165: };motor.c: 168: if(speed>config.maximum_speed)
 45881                           
 45882                           ; BSR set to: 0
 45883  011E70  5164               	movf	__motor_schedule_command@speed& (0+255),w,b
 45884  011E72  0101               	movlb	1	; () banked
 45885  011E74  5DA1               	subwf	(_config+11)& (0+255),w,b
 45886  011E76  0100               	movlb	0	; () banked
 45887  011E78  5165               	movf	(__motor_schedule_command@speed+1)& (0+255),w,b
 45888  011E7A  0101               	movlb	1	; () banked
 45889  011E7C  59A2               	subwfb	(_config+12)& (0+255),w,b
 45890  011E7E  B0D8               	btfsc	status,0,c
 45891  011E80  D004               	goto	l2468
 45892                           
 45893                           ; BSR set to: 1
 45894                           ;motor.c: 169: {;motor.c: 170: speed = config.maximum_speed;
 45895  011E82  C1A1  F064         	movff	_config+11,__motor_schedule_command@speed
 45896  011E86  C1A2  F065         	movff	_config+12,__motor_schedule_command@speed+1
 45897  011E8A                     l2468:
 45898                           
 45899                           ; BSR set to: 1
 45900                           ;motor.c: 171: };motor.c: 174: motor_command_cue[motor_cue_write_index].direction = dire
      +                          ction;
 45901                           
 45902                           ; BSR set to: 1
 45903  011E8A  514C               	movf	_motor_cue_write_index& (0+255),w,b
 45904  011E8C  0D08               	mullw	8
 45905  011E8E  0E00               	movlw	low _motor_command_cue
 45906  011E90  24F3               	addwf	prodl,w,c
 45907  011E92  6ED9               	movwf	fsr2l,c
 45908  011E94  0E03               	movlw	high _motor_command_cue
 45909  011E96  20F4               	addwfc	prodh,w,c
 45910  011E98  6EDA               	movwf	fsr2h,c
 45911  011E9A  C067  FFDF         	movff	__motor_schedule_command@direction,indf2
 45912                           
 45913                           ;motor.c: 175: motor_command_cue[motor_cue_write_index].distance = distance_in_steps;
 45914  011E9E  514C               	movf	_motor_cue_write_index& (0+255),w,b
 45915  011EA0  0D08               	mullw	8
 45916  011EA2  0E01               	movlw	1
 45917  011EA4  26F3               	addwf	prodl,f,c
 45918  011EA6  0E00               	movlw	0
 45919  011EA8  22F4               	addwfc	prodh,f,c
 45920  011EAA  0E00               	movlw	low _motor_command_cue
 45921  011EAC  24F3               	addwf	prodl,w,c
 45922  011EAE  6ED9               	movwf	fsr2l,c
 45923  011EB0  0E03               	movlw	high _motor_command_cue
 45924  011EB2  20F4               	addwfc	prodh,w,c
 45925  011EB4  6EDA               	movwf	fsr2h,c
 45926  011EB6  C060  FFDE         	movff	__motor_schedule_command@distance_in_steps,postinc2
 45927  011EBA  C061  FFDE         	movff	__motor_schedule_command@distance_in_steps+1,postinc2
 45928  011EBE  C062  FFDE         	movff	__motor_schedule_command@distance_in_steps+2,postinc2
 45929  011EC2  C063  FFDE         	movff	__motor_schedule_command@distance_in_steps+3,postinc2
 45930                           
 45931                           ;motor.c: 176: motor_command_cue[motor_cue_write_index].speed = speed;
 45932  011EC6  514C               	movf	_motor_cue_write_index& (0+255),w,b
 45933  011EC8  0D08               	mullw	8
 45934  011ECA  0E05               	movlw	5
 45935  011ECC  26F3               	addwf	prodl,f,c
 45936  011ECE  0E00               	movlw	0
 45937  011ED0  22F4               	addwfc	prodh,f,c
 45938  011ED2  0E00               	movlw	low _motor_command_cue
 45939  011ED4  24F3               	addwf	prodl,w,c
 45940  011ED6  6ED9               	movwf	fsr2l,c
 45941  011ED8  0E03               	movlw	high _motor_command_cue
 45942  011EDA  20F4               	addwfc	prodh,w,c
 45943  011EDC  6EDA               	movwf	fsr2h,c
 45944  011EDE  C064  FFDE         	movff	__motor_schedule_command@speed,postinc2
 45945  011EE2  C065  FFDD         	movff	__motor_schedule_command@speed+1,postdec2
 45946                           
 45947                           ;motor.c: 177: motor_command_cue[motor_cue_write_index].type = type;
 45948  011EE6  514C               	movf	_motor_cue_write_index& (0+255),w,b
 45949  011EE8  0D08               	mullw	8
 45950  011EEA  0E07               	movlw	7
 45951  011EEC  26F3               	addwf	prodl,f,c
 45952  011EEE  0E00               	movlw	0
 45953  011EF0  22F4               	addwfc	prodh,f,c
 45954  011EF2  0E00               	movlw	low _motor_command_cue
 45955  011EF4  24F3               	addwf	prodl,w,c
 45956  011EF6  6ED9               	movwf	fsr2l,c
 45957  011EF8  0E03               	movlw	high _motor_command_cue
 45958  011EFA  20F4               	addwfc	prodh,w,c
 45959  011EFC  6EDA               	movwf	fsr2h,c
 45960  011EFE  C066  FFDF         	movff	__motor_schedule_command@type,indf2
 45961                           
 45962                           ; BSR set to: 1
 45963                           ;motor.c: 180: ++motor_cue_write_index;
 45964  011F02  2B4C               	incf	_motor_cue_write_index& (0+255),f,b
 45965                           
 45966                           ; BSR set to: 1
 45967                           ;motor.c: 181: motor_cue_write_index &= 0b111;
 45968  011F04  0E07               	movlw	7
 45969  011F06  174C               	andwf	_motor_cue_write_index& (0+255),f,b
 45970                           
 45971                           ; BSR set to: 1
 45972                           ;motor.c: 184: return MOTOR_RETURN_VALUE_OK;
 45973  011F08  0E00               	movlw	0
 45974  011F0A  0012               	return	
 45975  011F0C                     __end_of__motor_schedule_command:
 45976                           	opt stack 0
 45977                           tosu	equ	0xFFF
 45978                           tosh	equ	0xFFE
 45979                           tosl	equ	0xFFD
 45980                           pclath	equ	0xFFA
 45981                           tblptru	equ	0xFF8
 45982                           tblptrh	equ	0xFF7
 45983                           tblptrl	equ	0xFF6
 45984                           tablat	equ	0xFF5
 45985                           prodh	equ	0xFF4
 45986                           prodl	equ	0xFF3
 45987                           intcon	equ	0xFF2
 45988                           indf0	equ	0xFEF
 45989                           postinc0	equ	0xFEE
 45990                           fsr0h	equ	0xFEA
 45991                           fsr0l	equ	0xFE9
 45992                           wreg	equ	0xFE8
 45993                           indf1	equ	0xFE7
 45994                           postinc1	equ	0xFE6
 45995                           postdec1	equ	0xFE5
 45996                           plusw1	equ	0xFE3
 45997                           fsr1h	equ	0xFE2
 45998                           fsr1l	equ	0xFE1
 45999                           indf2	equ	0xFDF
 46000                           postinc2	equ	0xFDE
 46001                           postdec2	equ	0xFDD
 46002                           plusw2	equ	0xFDB
 46003                           fsr2h	equ	0xFDA
 46004                           fsr2l	equ	0xFD9
 46005                           status	equ	0xFD8
 46006                           
 46007 ;; *************** function _motor_items_in_cue *****************
 46008 ;; Defined at:
 46009 ;;		line 608 in file "motor.c"
 46010 ;; Parameters:    Size  Location     Type
 46011 ;;		None
 46012 ;; Auto vars:     Size  Location     Type
 46013 ;;		None
 46014 ;; Return value:  Size  Location     Type
 46015 ;;                  1    wreg      unsigned char 
 46016 ;; Registers used:
 46017 ;;		wreg, status,2, status,0
 46018 ;; Tracked objects:
 46019 ;;		On entry : 0/0
 46020 ;;		On exit  : 0/0
 46021 ;;		Unchanged: 0/0
 46022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46027 ;;Total ram usage:        0 bytes
 46028 ;; Hardware stack levels used:    1
 46029 ;; Hardware stack levels required when called:   10
 46030 ;; This function calls:
 46031 ;;		Nothing
 46032 ;; This function is called by:
 46033 ;;		__motor_schedule_command
 46034 ;;		__motor_move_steps
 46035 ;;		__motor_move_back_forth
 46036 ;;		_motor_process_cue
 46037 ;; This function uses a non-reentrant model
 46038 ;;
 46039                           
 46040                           	psect	text189
 46041  016024                     __ptext189:
 46042                           	opt stack 0
 46043  016024                     _motor_items_in_cue:
 46044                           	opt stack 19
 46045                           
 46046                           ;motor.c: 610: return ((motor_cue_write_index-motor_cue_read_index) & 0b111);
 46047                           
 46048                           ;incstack = 0
 46049  016024  0101               	movlb	1	; () banked
 46050  016026  514D               	movf	_motor_cue_read_index& (0+255),w,b
 46051  016028  0800               	sublw	0
 46052  01602A  254C               	addwf	_motor_cue_write_index& (0+255),w,b
 46053  01602C  0B07               	andlw	7
 46054  01602E  0012               	return	
 46055  016030                     __end_of_motor_items_in_cue:
 46056                           	opt stack 0
 46057                           tosu	equ	0xFFF
 46058                           tosh	equ	0xFFE
 46059                           tosl	equ	0xFFD
 46060                           pclath	equ	0xFFA
 46061                           tblptru	equ	0xFF8
 46062                           tblptrh	equ	0xFF7
 46063                           tblptrl	equ	0xFF6
 46064                           tablat	equ	0xFF5
 46065                           prodh	equ	0xFF4
 46066                           prodl	equ	0xFF3
 46067                           intcon	equ	0xFF2
 46068                           indf0	equ	0xFEF
 46069                           postinc0	equ	0xFEE
 46070                           fsr0h	equ	0xFEA
 46071                           fsr0l	equ	0xFE9
 46072                           wreg	equ	0xFE8
 46073                           indf1	equ	0xFE7
 46074                           postinc1	equ	0xFE6
 46075                           postdec1	equ	0xFE5
 46076                           plusw1	equ	0xFE3
 46077                           fsr1h	equ	0xFE2
 46078                           fsr1l	equ	0xFE1
 46079                           indf2	equ	0xFDF
 46080                           postinc2	equ	0xFDE
 46081                           postdec2	equ	0xFDD
 46082                           plusw2	equ	0xFDB
 46083                           fsr2h	equ	0xFDA
 46084                           fsr2l	equ	0xFD9
 46085                           status	equ	0xFD8
 46086                           
 46087 ;; *************** function __motor_distance_to_limit *****************
 46088 ;; Defined at:
 46089 ;;		line 448 in file "motor.c"
 46090 ;; Parameters:    Size  Location     Type
 46091 ;;  direction       1    wreg     enum E6622
 46092 ;; Auto vars:     Size  Location     Type
 46093 ;;  direction       1   24[BANK0 ] enum E6622
 46094 ;;  absolute_pos    4   25[BANK0 ] long 
 46095 ;;  distance_to_    4   20[BANK0 ] long 
 46096 ;; Return value:  Size  Location     Type
 46097 ;;                  4   12[BANK0 ] long 
 46098 ;; Registers used:
 46099 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 46100 ;; Tracked objects:
 46101 ;;		On entry : 0/0
 46102 ;;		On exit  : 0/0
 46103 ;;		Unchanged: 0/0
 46104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46105 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46106 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46107 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46108 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46109 ;;Total ram usage:       17 bytes
 46110 ;; Hardware stack levels used:    1
 46111 ;; Hardware stack levels required when called:   11
 46112 ;; This function calls:
 46113 ;;		___lmul
 46114 ;; This function is called by:
 46115 ;;		__motor_move_steps
 46116 ;;		__motor_decide_direction
 46117 ;; This function uses a non-reentrant model
 46118 ;;
 46119                           
 46120                           	psect	text190
 46121  010074                     __ptext190:
 46122                           	opt stack 0
 46123  010074                     __motor_distance_to_limit:
 46124                           	opt stack 16
 46125                           
 46126                           ; BSR set to: 1
 46127                           ;incstack = 0
 46128                           ;__motor_distance_to_limit@direction stored from wreg
 46129  010074  0100               	movlb	0	; () banked
 46130  010076  6F78               	movwf	__motor_distance_to_limit@direction& (0+255),b
 46131                           
 46132                           ;motor.c: 451: int32_t absolute_position_in_steps;;motor.c: 452: int32_t distance_to_lim
      +                          it_in_steps;;motor.c: 455: if(direction==MOTOR_DIRECTION_CCW && config.use_ccw_limit==0)
 46133  010078  0100               	movlb	0	; () banked
 46134  01007A  2978               	incf	__motor_distance_to_limit@direction& (0+255),w,b
 46135  01007C  A4D8               	btfss	status,2,c
 46136  01007E  D00E               	goto	l2521
 46137                           
 46138                           ; BSR set to: 0
 46139  010080  0101               	movlb	1	; () banked
 46140  010082  51B5               	movf	(_config+31)& (0+255),w,b
 46141  010084  A4D8               	btfss	status,2,c
 46142  010086  D00A               	goto	l2521
 46143                           
 46144                           ; BSR set to: 1
 46145                           ;motor.c: 456: {;motor.c: 457: return 2147483647;
 46146  010088  0EFF               	movlw	255
 46147  01008A  0100               	movlb	0	; () banked
 46148  01008C  6F6C               	movwf	?__motor_distance_to_limit& (0+255),b
 46149  01008E  0EFF               	movlw	255
 46150  010090  6F6D               	movwf	(?__motor_distance_to_limit+1)& (0+255),b
 46151  010092  0EFF               	movlw	255
 46152  010094  6F6E               	movwf	(?__motor_distance_to_limit+2)& (0+255),b
 46153  010096  0E7F               	movlw	127
 46154  010098  6F6F               	movwf	(?__motor_distance_to_limit+3)& (0+255),b
 46155                           
 46156                           ; BSR set to: 0
 46157  01009A  0012               	return	
 46158  01009C                     l2521:
 46159                           
 46160                           ;motor.c: 458: };motor.c: 459: if(direction==MOTOR_DIRECTION_CW && config.use_cw_limit==
      +                          0)
 46161                           
 46162                           ; BSR set to: 0
 46163  01009C  0100               	movlb	0	; () banked
 46164  01009E  0578               	decf	__motor_distance_to_limit@direction& (0+255),w,b
 46165  0100A0  A4D8               	btfss	status,2,c
 46166  0100A2  D00E               	goto	l2523
 46167                           
 46168                           ; BSR set to: 0
 46169  0100A4  0101               	movlb	1	; () banked
 46170  0100A6  51AC               	movf	(_config+22)& (0+255),w,b
 46171  0100A8  A4D8               	btfss	status,2,c
 46172  0100AA  D00A               	goto	l2523
 46173                           
 46174                           ; BSR set to: 1
 46175                           ;motor.c: 460: {;motor.c: 461: return 2147483647;
 46176  0100AC  0EFF               	movlw	255
 46177  0100AE  0100               	movlb	0	; () banked
 46178  0100B0  6F6C               	movwf	?__motor_distance_to_limit& (0+255),b
 46179  0100B2  0EFF               	movlw	255
 46180  0100B4  6F6D               	movwf	(?__motor_distance_to_limit+1)& (0+255),b
 46181  0100B6  0EFF               	movlw	255
 46182  0100B8  6F6E               	movwf	(?__motor_distance_to_limit+2)& (0+255),b
 46183  0100BA  0E7F               	movlw	127
 46184  0100BC  6F6F               	movwf	(?__motor_distance_to_limit+3)& (0+255),b
 46185                           
 46186                           ; BSR set to: 0
 46187  0100BE  0012               	return	
 46188  0100C0                     l2523:
 46189                           
 46190                           ;motor.c: 462: };motor.c: 465: absolute_position_in_steps = os.absolute_position;
 46191                           
 46192                           ; BSR set to: 0
 46193  0100C0  EE21  F070         	lfsr	2,_os+11	;volatile
 46194  0100C4  CFDE F079          	movff	postinc2,__motor_distance_to_limit@absolute_position_in_steps
 46195  0100C8  CFDD F07A          	movff	postdec2,__motor_distance_to_limit@absolute_position_in_steps+1
 46196  0100CC  0100               	movlb	0	; () banked
 46197  0100CE  0E00               	movlw	0
 46198  0100D0  BF7A               	btfsc	(__motor_distance_to_limit@absolute_position_in_steps+1)& (0+255),7,b
 46199  0100D2  0EFF               	movlw	-1
 46200  0100D4  6F7B               	movwf	(__motor_distance_to_limit@absolute_position_in_steps+2)& (0+255),b
 46201  0100D6  6F7C               	movwf	(__motor_distance_to_limit@absolute_position_in_steps+3)& (0+255),b
 46202                           
 46203                           ; BSR set to: 0
 46204                           ;motor.c: 466: absolute_position_in_steps *= config.full_circle_in_steps;
 46205  0100D8  C079  F060         	movff	__motor_distance_to_limit@absolute_position_in_steps,___lmul@multiplier
 46206  0100DC  C07A  F061         	movff	__motor_distance_to_limit@absolute_position_in_steps+1,___lmul@multiplier+1
 46207  0100E0  C07B  F062         	movff	__motor_distance_to_limit@absolute_position_in_steps+2,___lmul@multiplier+2
 46208  0100E4  C07C  F063         	movff	__motor_distance_to_limit@absolute_position_in_steps+3,___lmul@multiplier+3
 46209  0100E8  C196  F064         	movff	_config,___lmul@multiplicand
 46210  0100EC  C197  F065         	movff	_config+1,___lmul@multiplicand+1
 46211  0100F0  C198  F066         	movff	_config+2,___lmul@multiplicand+2
 46212  0100F4  C199  F067         	movff	_config+3,___lmul@multiplicand+3
 46213  0100F8  EC9E  F0A7         	call	___lmul	;wreg free
 46214  0100FC  C060  F079         	movff	?___lmul,__motor_distance_to_limit@absolute_position_in_steps
 46215  010100  C061  F07A         	movff	?___lmul+1,__motor_distance_to_limit@absolute_position_in_steps+1
 46216  010104  C062  F07B         	movff	?___lmul+2,__motor_distance_to_limit@absolute_position_in_steps+2
 46217  010108  C063  F07C         	movff	?___lmul+3,__motor_distance_to_limit@absolute_position_in_steps+3
 46218                           
 46219                           ;motor.c: 467: absolute_position_in_steps += os.current_position_in_steps;
 46220  01010C  EE21  F06C         	lfsr	2,_os+7	;volatile
 46221  010110  50DE               	movf	postinc2,w,c
 46222  010112  0100               	movlb	0	; () banked
 46223  010114  2779               	addwf	__motor_distance_to_limit@absolute_position_in_steps& (0+255),f,b
 46224  010116  50DE               	movf	postinc2,w,c
 46225  010118  237A               	addwfc	(__motor_distance_to_limit@absolute_position_in_steps+1)& (0+255),f,b
 46226  01011A  50DE               	movf	postinc2,w,c
 46227  01011C  237B               	addwfc	(__motor_distance_to_limit@absolute_position_in_steps+2)& (0+255),f,b
 46228  01011E  50DD               	movf	postdec2,w,c
 46229  010120  237C               	addwfc	(__motor_distance_to_limit@absolute_position_in_steps+3)& (0+255),f,b
 46230                           
 46231                           ; BSR set to: 0
 46232                           ;motor.c: 470: if(direction==MOTOR_DIRECTION_CCW)
 46233  010122  2978               	incf	__motor_distance_to_limit@direction& (0+255),w,b
 46234  010124  A4D8               	btfss	status,2,c
 46235  010126  D01C               	goto	l2524
 46236                           
 46237                           ; BSR set to: 0
 46238                           ;motor.c: 471: {;motor.c: 472: distance_to_limit_in_steps = absolute_position_in_steps -
      +                           config.ccw_limit_in_steps;
 46239  010128  C1BA  F070         	movff	_config+36,??__motor_distance_to_limit
 46240  01012C  C1BB  F071         	movff	_config+37,??__motor_distance_to_limit+1
 46241  010130  C1BC  F072         	movff	_config+38,??__motor_distance_to_limit+2
 46242  010134  C1BD  F073         	movff	_config+39,??__motor_distance_to_limit+3
 46243  010138  1F70               	comf	??__motor_distance_to_limit& (0+255),f,b
 46244  01013A  1F71               	comf	(??__motor_distance_to_limit+1)& (0+255),f,b
 46245  01013C  1F72               	comf	(??__motor_distance_to_limit+2)& (0+255),f,b
 46246  01013E  1F73               	comf	(??__motor_distance_to_limit+3)& (0+255),f,b
 46247  010140  2B70               	incf	??__motor_distance_to_limit& (0+255),f,b
 46248  010142  0E00               	movlw	0
 46249  010144  2371               	addwfc	(??__motor_distance_to_limit+1)& (0+255),f,b
 46250  010146  2372               	addwfc	(??__motor_distance_to_limit+2)& (0+255),f,b
 46251  010148  2373               	addwfc	(??__motor_distance_to_limit+3)& (0+255),f,b
 46252  01014A  5179               	movf	__motor_distance_to_limit@absolute_position_in_steps& (0+255),w,b
 46253  01014C  2570               	addwf	??__motor_distance_to_limit& (0+255),w,b
 46254  01014E  6F74               	movwf	__motor_distance_to_limit@distance_to_limit_in_steps& (0+255),b
 46255  010150  517A               	movf	(__motor_distance_to_limit@absolute_position_in_steps+1)& (0+255),w,b
 46256  010152  2171               	addwfc	(??__motor_distance_to_limit+1)& (0+255),w,b
 46257  010154  6F75               	movwf	(__motor_distance_to_limit@distance_to_limit_in_steps+1)& (0+255),b
 46258  010156  517B               	movf	(__motor_distance_to_limit@absolute_position_in_steps+2)& (0+255),w,b
 46259  010158  2172               	addwfc	(??__motor_distance_to_limit+2)& (0+255),w,b
 46260  01015A  6F76               	movwf	(__motor_distance_to_limit@distance_to_limit_in_steps+2)& (0+255),b
 46261  01015C  517C               	movf	(__motor_distance_to_limit@absolute_position_in_steps+3)& (0+255),w,b
 46262  01015E  D023               	goto	L69
 46263  010160                     l2524:
 46264                           
 46265                           ; BSR set to: 0
 46266                           ;motor.c: 474: else;motor.c: 475: {;motor.c: 476: distance_to_limit_in_steps = config.cw
      +                          _limit_in_steps - absolute_position_in_steps;
 46267                           
 46268                           ; BSR set to: 0
 46269  010160  C079  F070         	movff	__motor_distance_to_limit@absolute_position_in_steps,??__motor_distance_to_limit
 46270  010164  C07A  F071         	movff	__motor_distance_to_limit@absolute_position_in_steps+1,??__motor_distance_to_limi
      +                          t+1
 46271  010168  C07B  F072         	movff	__motor_distance_to_limit@absolute_position_in_steps+2,??__motor_distance_to_limi
      +                          t+2
 46272  01016C  C07C  F073         	movff	__motor_distance_to_limit@absolute_position_in_steps+3,??__motor_distance_to_limi
      +                          t+3
 46273  010170  1F70               	comf	??__motor_distance_to_limit& (0+255),f,b
 46274  010172  1F71               	comf	(??__motor_distance_to_limit+1)& (0+255),f,b
 46275  010174  1F72               	comf	(??__motor_distance_to_limit+2)& (0+255),f,b
 46276  010176  1F73               	comf	(??__motor_distance_to_limit+3)& (0+255),f,b
 46277  010178  2B70               	incf	??__motor_distance_to_limit& (0+255),f,b
 46278  01017A  0E00               	movlw	0
 46279  01017C  2371               	addwfc	(??__motor_distance_to_limit+1)& (0+255),f,b
 46280  01017E  2372               	addwfc	(??__motor_distance_to_limit+2)& (0+255),f,b
 46281  010180  2373               	addwfc	(??__motor_distance_to_limit+3)& (0+255),f,b
 46282  010182  0101               	movlb	1	; () banked
 46283  010184  51B1               	movf	(_config+27)& (0+255),w,b
 46284  010186  0100               	movlb	0	; () banked
 46285  010188  2570               	addwf	??__motor_distance_to_limit& (0+255),w,b
 46286  01018A  6F74               	movwf	__motor_distance_to_limit@distance_to_limit_in_steps& (0+255),b
 46287  01018C  0101               	movlb	1	; () banked
 46288  01018E  51B2               	movf	(_config+28)& (0+255),w,b
 46289  010190  0100               	movlb	0	; () banked
 46290  010192  2171               	addwfc	(??__motor_distance_to_limit+1)& (0+255),w,b
 46291  010194  6F75               	movwf	(__motor_distance_to_limit@distance_to_limit_in_steps+1)& (0+255),b
 46292  010196  0101               	movlb	1	; () banked
 46293  010198  51B3               	movf	(_config+29)& (0+255),w,b
 46294  01019A  0100               	movlb	0	; () banked
 46295  01019C  2172               	addwfc	(??__motor_distance_to_limit+2)& (0+255),w,b
 46296  01019E  6F76               	movwf	(__motor_distance_to_limit@distance_to_limit_in_steps+2)& (0+255),b
 46297  0101A0  0101               	movlb	1	; () banked
 46298  0101A2  51B4               	movf	(_config+30)& (0+255),w,b
 46299  0101A4  0100               	movlb	0	; () banked
 46300  0101A6                     L69:
 46301  0101A6  2173               	addwfc	(??__motor_distance_to_limit+3)& (0+255),w,b
 46302  0101A8  6F77               	movwf	(__motor_distance_to_limit@distance_to_limit_in_steps+3)& (0+255),b
 46303                           
 46304                           ; BSR set to: 0
 46305                           ;motor.c: 477: };motor.c: 479: return distance_to_limit_in_steps;
 46306                           
 46307                           ; BSR set to: 0
 46308  0101AA  C074  F06C         	movff	__motor_distance_to_limit@distance_to_limit_in_steps,?__motor_distance_to_limit
 46309  0101AE  C075  F06D         	movff	__motor_distance_to_limit@distance_to_limit_in_steps+1,?__motor_distance_to_limit
      +                          +1
 46310  0101B2  C076  F06E         	movff	__motor_distance_to_limit@distance_to_limit_in_steps+2,?__motor_distance_to_limit
      +                          +2
 46311  0101B6  C077  F06F         	movff	__motor_distance_to_limit@distance_to_limit_in_steps+3,?__motor_distance_to_limit
      +                          +3
 46312  0101BA  0012               	return	
 46313  0101BC                     __end_of__motor_distance_to_limit:
 46314                           	opt stack 0
 46315                           tosu	equ	0xFFF
 46316                           tosh	equ	0xFFE
 46317                           tosl	equ	0xFFD
 46318                           pclath	equ	0xFFA
 46319                           tblptru	equ	0xFF8
 46320                           tblptrh	equ	0xFF7
 46321                           tblptrl	equ	0xFF6
 46322                           tablat	equ	0xFF5
 46323                           prodh	equ	0xFF4
 46324                           prodl	equ	0xFF3
 46325                           intcon	equ	0xFF2
 46326                           indf0	equ	0xFEF
 46327                           postinc0	equ	0xFEE
 46328                           fsr0h	equ	0xFEA
 46329                           fsr0l	equ	0xFE9
 46330                           wreg	equ	0xFE8
 46331                           indf1	equ	0xFE7
 46332                           postinc1	equ	0xFE6
 46333                           postdec1	equ	0xFE5
 46334                           plusw1	equ	0xFE3
 46335                           fsr1h	equ	0xFE2
 46336                           fsr1l	equ	0xFE1
 46337                           indf2	equ	0xFDF
 46338                           postinc2	equ	0xFDE
 46339                           postdec2	equ	0xFDD
 46340                           plusw2	equ	0xFDB
 46341                           fsr2h	equ	0xFDA
 46342                           fsr2l	equ	0xFD9
 46343                           status	equ	0xFD8
 46344                           
 46345 ;; *************** function ___lmul *****************
 46346 ;; Defined at:
 46347 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
 46348 ;; Parameters:    Size  Location     Type
 46349 ;;  multiplier      4    0[BANK0 ] unsigned long 
 46350 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 46351 ;; Auto vars:     Size  Location     Type
 46352 ;;  product         4    8[BANK0 ] unsigned long 
 46353 ;; Return value:  Size  Location     Type
 46354 ;;                  4    0[BANK0 ] unsigned long 
 46355 ;; Registers used:
 46356 ;;		wreg, status,2, status,0
 46357 ;; Tracked objects:
 46358 ;;		On entry : 0/0
 46359 ;;		On exit  : 0/0
 46360 ;;		Unchanged: 0/0
 46361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46362 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46363 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46365 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46366 ;;Total ram usage:       12 bytes
 46367 ;; Hardware stack levels used:    1
 46368 ;; Hardware stack levels required when called:   10
 46369 ;; This function calls:
 46370 ;;		Nothing
 46371 ;; This function is called by:
 46372 ;;		__motor_distance_to_limit
 46373 ;;		__motor_get_speed_in_degrees
 46374 ;;		_atol
 46375 ;; This function uses a non-reentrant model
 46376 ;;
 46377                           
 46378                           	psect	text191
 46379  014F3C                     __ptext191:
 46380                           	opt stack 0
 46381  014F3C                     ___lmul:
 46382                           	opt stack 16
 46383                           
 46384                           ; BSR set to: 0
 46385                           ;incstack = 0
 46386  014F3C  0E00               	movlw	0
 46387  014F3E  0100               	movlb	0	; () banked
 46388  014F40  6F68               	movwf	___lmul@product& (0+255),b
 46389  014F42  0E00               	movlw	0
 46390  014F44  6F69               	movwf	(___lmul@product+1)& (0+255),b
 46391  014F46  0E00               	movlw	0
 46392  014F48  6F6A               	movwf	(___lmul@product+2)& (0+255),b
 46393  014F4A  0E00               	movlw	0
 46394  014F4C  6F6B               	movwf	(___lmul@product+3)& (0+255),b
 46395  014F4E                     
 46396                           ; BSR set to: 0
 46397                           
 46398                           ; BSR set to: 0
 46399  014F4E  A160               	btfss	___lmul@multiplier& (0+255),0,b
 46400  014F50  D008               	goto	l3102
 46401                           
 46402                           ; BSR set to: 0
 46403  014F52  5164               	movf	___lmul@multiplicand& (0+255),w,b
 46404  014F54  2768               	addwf	___lmul@product& (0+255),f,b
 46405  014F56  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 46406  014F58  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
 46407  014F5A  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 46408  014F5C  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
 46409  014F5E  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 46410  014F60  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
 46411  014F62                     l3102:
 46412                           
 46413                           ; BSR set to: 0
 46414                           
 46415                           ; BSR set to: 0
 46416  014F62  90D8               	bcf	status,0,c
 46417  014F64  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
 46418  014F66  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 46419  014F68  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 46420  014F6A  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 46421                           
 46422                           ; BSR set to: 0
 46423  014F6C  90D8               	bcf	status,0,c
 46424  014F6E  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 46425  014F70  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 46426  014F72  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 46427  014F74  3360               	rrcf	___lmul@multiplier& (0+255),f,b
 46428  014F76  5160               	movf	___lmul@multiplier& (0+255),w,b
 46429  014F78  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 46430  014F7A  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 46431  014F7C  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 46432  014F7E  A4D8               	btfss	status,2,c
 46433  014F80  D7E6               	goto	l3101
 46434                           
 46435                           ; BSR set to: 0
 46436  014F82  C068  F060         	movff	___lmul@product,?___lmul
 46437  014F86  C069  F061         	movff	___lmul@product+1,?___lmul+1
 46438  014F8A  C06A  F062         	movff	___lmul@product+2,?___lmul+2
 46439  014F8E  C06B  F063         	movff	___lmul@product+3,?___lmul+3
 46440                           
 46441                           ; BSR set to: 0
 46442  014F92  0012               	return		;funcret
 46443  014F94                     __end_of___lmul:
 46444                           	opt stack 0
 46445                           tosu	equ	0xFFF
 46446                           tosh	equ	0xFFE
 46447                           tosl	equ	0xFFD
 46448                           pclath	equ	0xFFA
 46449                           tblptru	equ	0xFF8
 46450                           tblptrh	equ	0xFF7
 46451                           tblptrl	equ	0xFF6
 46452                           tablat	equ	0xFF5
 46453                           prodh	equ	0xFF4
 46454                           prodl	equ	0xFF3
 46455                           intcon	equ	0xFF2
 46456                           indf0	equ	0xFEF
 46457                           postinc0	equ	0xFEE
 46458                           fsr0h	equ	0xFEA
 46459                           fsr0l	equ	0xFE9
 46460                           wreg	equ	0xFE8
 46461                           indf1	equ	0xFE7
 46462                           postinc1	equ	0xFE6
 46463                           postdec1	equ	0xFE5
 46464                           plusw1	equ	0xFE3
 46465                           fsr1h	equ	0xFE2
 46466                           fsr1l	equ	0xFE1
 46467                           indf2	equ	0xFDF
 46468                           postinc2	equ	0xFDE
 46469                           postdec2	equ	0xFDD
 46470                           plusw2	equ	0xFDB
 46471                           fsr2h	equ	0xFDA
 46472                           fsr2l	equ	0xFD9
 46473                           status	equ	0xFD8
 46474                           
 46475 ;; *************** function _USBTransferOnePacket *****************
 46476 ;; Defined at:
 46477 ;;		line 995 in file "usb_device.c"
 46478 ;; Parameters:    Size  Location     Type
 46479 ;;  ep              1    wreg     unsigned char 
 46480 ;;  dir             1    0[BANK0 ] unsigned char 
 46481 ;;  data            2    1[BANK0 ] PTR unsigned char 
 46482 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 46483 ;;		 -> msd_cbw(31), NULL(0), 
 46484 ;;  len             1    3[BANK0 ] unsigned char 
 46485 ;; Auto vars:     Size  Location     Type
 46486 ;;  ep              1    8[BANK0 ] unsigned char 
 46487 ;;  handle          2    9[BANK0 ] PTR volatile struct __BD
 46488 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 46489 ;; Return value:  Size  Location     Type
 46490 ;;                  2    0[BANK0 ] PTR void 
 46491 ;; Registers used:
 46492 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 46493 ;; Tracked objects:
 46494 ;;		On entry : 0/0
 46495 ;;		On exit  : 0/0
 46496 ;;		Unchanged: 0/0
 46497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46498 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46499 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46500 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46501 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46502 ;;Total ram usage:       11 bytes
 46503 ;; Hardware stack levels used:    1
 46504 ;; Hardware stack levels required when called:   10
 46505 ;; This function calls:
 46506 ;;		Nothing
 46507 ;; This function is called by:
 46508 ;;		_MSDTasks
 46509 ;;		_MSDProcessCommandMediaPresent
 46510 ;;		_MSDReadHandler
 46511 ;;		_MSDWriteHandler
 46512 ;;		_APP_DeviceCustomHIDTasks
 46513 ;; This function uses a non-reentrant model
 46514 ;;
 46515                           
 46516                           	psect	text192
 46517  01143E                     __ptext192:
 46518                           	opt stack 0
 46519  01143E                     _USBTransferOnePacket:
 46520                           	opt stack 18
 46521                           
 46522                           ; BSR set to: 0
 46523                           ;incstack = 0
 46524                           ;USBTransferOnePacket@ep stored from wreg
 46525  01143E  0100               	movlb	0	; () banked
 46526  011440  6F68               	movwf	USBTransferOnePacket@ep& (0+255),b
 46527                           
 46528                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 46529  011442  0100               	movlb	0	; () banked
 46530  011444  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 46531  011446  B4D8               	btfsc	status,2,c
 46532  011448  D007               	goto	l184
 46533                           
 46534                           ; BSR set to: 0
 46535                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 46536  01144A  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 46537  01144C  0D02               	mullw	2
 46538  01144E  0E0F               	movlw	low _pBDTEntryIn
 46539  011450  24F3               	addwf	prodl,w,c
 46540  011452  6ED9               	movwf	fsr2l,c
 46541  011454  0E01               	movlw	high _pBDTEntryIn
 46542  011456  D006               	goto	L70
 46543  011458                     l184:
 46544                           
 46545                           ; BSR set to: 0
 46546                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 46547                           
 46548                           ; BSR set to: 0
 46549  011458  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 46550  01145A  0D02               	mullw	2
 46551  01145C  0E15               	movlw	low _pBDTEntryOut
 46552  01145E  24F3               	addwf	prodl,w,c
 46553  011460  6ED9               	movwf	fsr2l,c
 46554  011462  0E01               	movlw	high _pBDTEntryOut
 46555  011464                     L70:
 46556  011464  20F4               	addwfc	prodh,w,c
 46557  011466  6EDA               	movwf	fsr2h,c
 46558  011468  CFDE F069          	movff	postinc2,USBTransferOnePacket@handle
 46559  01146C  CFDD F06A          	movff	postdec2,USBTransferOnePacket@handle+1
 46560                           
 46561                           ; BSR set to: 0
 46562                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 46563                           
 46564                           ; BSR set to: 0
 46565  011470  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 46566  011472  116A               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 46567  011474  A4D8               	btfss	status,2,c
 46568  011476  D005               	goto	l186
 46569                           
 46570                           ; BSR set to: 0
 46571                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 46572  011478  0E00               	movlw	0
 46573  01147A  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 46574  01147C  0E00               	movlw	0
 46575  01147E  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 46576                           
 46577                           ; BSR set to: 0
 46578  011480  0012               	return	
 46579  011482                     l186:
 46580                           
 46581                           ; BSR set to: 0
 46582                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 46583                           
 46584                           ; BSR set to: 0
 46585  011482  EE20 F002          	lfsr	2,2
 46586  011486  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 46587  011488  26D9               	addwf	fsr2l,f,c
 46588  01148A  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 46589  01148C  22DA               	addwfc	fsr2h,f,c
 46590  01148E  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 46591  011492  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 46592                           
 46593                           ;usb_device.c: 1030: handle->CNT = len;
 46594  011496  EE20 F001          	lfsr	2,1
 46595  01149A  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 46596  01149C  26D9               	addwf	fsr2l,f,c
 46597  01149E  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 46598  0114A0  22DA               	addwfc	fsr2h,f,c
 46599  0114A2  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 46600                           
 46601                           ; BSR set to: 0
 46602                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 46603  0114A6  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 46604  0114AA  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 46605  0114AE  0E40               	movlw	64
 46606  0114B0  16DF               	andwf	indf2,f,c
 46607                           
 46608                           ; BSR set to: 0
 46609                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 46610  0114B2  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 46611  0114B6  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 46612  0114BA  0E00               	movlw	0
 46613  0114BC  86DB               	bsf	plusw2,3,c
 46614                           
 46615                           ; BSR set to: 0
 46616                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 46617  0114BE  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 46618  0114C2  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 46619  0114C6  0E00               	movlw	0
 46620  0114C8  8EDB               	bsf	plusw2,7,c
 46621                           
 46622                           ; BSR set to: 0
 46623                           ;usb_device.c: 1036: if(dir != 0)
 46624  0114CA  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 46625  0114CC  B4D8               	btfsc	status,2,c
 46626  0114CE  D018               	goto	l188
 46627                           
 46628                           ; BSR set to: 0
 46629                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 46630  0114D0  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 46631  0114D2  0D02               	mullw	2
 46632  0114D4  0E0F               	movlw	low _pBDTEntryIn
 46633  0114D6  24F3               	addwf	prodl,w,c
 46634  0114D8  6ED9               	movwf	fsr2l,c
 46635  0114DA  0E01               	movlw	high _pBDTEntryIn
 46636  0114DC  20F4               	addwfc	prodh,w,c
 46637  0114DE  6EDA               	movwf	fsr2h,c
 46638  0114E0  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 46639  0114E4  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 46640  0114E8  0E04               	movlw	4
 46641  0114EA  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 46642  0114EC  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 46643  0114EE  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 46644  0114F0  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 46645  0114F2  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 46646  0114F4  0D02               	mullw	2
 46647  0114F6  0E0F               	movlw	low _pBDTEntryIn
 46648  0114F8  24F3               	addwf	prodl,w,c
 46649  0114FA  6ED9               	movwf	fsr2l,c
 46650  0114FC  0E01               	movlw	high _pBDTEntryIn
 46651  0114FE  D017               	goto	L71
 46652  011500                     l188:
 46653                           
 46654                           ; BSR set to: 0
 46655                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 46656                           
 46657                           ; BSR set to: 0
 46658  011500  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 46659  011502  0D02               	mullw	2
 46660  011504  0E15               	movlw	low _pBDTEntryOut
 46661  011506  24F3               	addwf	prodl,w,c
 46662  011508  6ED9               	movwf	fsr2l,c
 46663  01150A  0E01               	movlw	high _pBDTEntryOut
 46664  01150C  20F4               	addwfc	prodh,w,c
 46665  01150E  6EDA               	movwf	fsr2h,c
 46666  011510  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 46667  011514  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 46668  011518  0E04               	movlw	4
 46669  01151A  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 46670  01151C  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 46671  01151E  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 46672  011520  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 46673  011522  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 46674  011524  0D02               	mullw	2
 46675  011526  0E15               	movlw	low _pBDTEntryOut
 46676  011528  24F3               	addwf	prodl,w,c
 46677  01152A  6ED9               	movwf	fsr2l,c
 46678  01152C  0E01               	movlw	high _pBDTEntryOut
 46679  01152E                     L71:
 46680  01152E  20F4               	addwfc	prodh,w,c
 46681  011530  6EDA               	movwf	fsr2h,c
 46682  011532  C066  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 46683  011536  C067  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 46684                           
 46685                           ; BSR set to: 0
 46686                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 46687                           
 46688                           ; BSR set to: 0
 46689  01153A  C069  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 46690  01153E  C06A  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 46691  011542  0012               	return	
 46692  011544                     __end_of_USBTransferOnePacket:
 46693                           	opt stack 0
 46694                           tosu	equ	0xFFF
 46695                           tosh	equ	0xFFE
 46696                           tosl	equ	0xFFD
 46697                           pclath	equ	0xFFA
 46698                           tblptru	equ	0xFF8
 46699                           tblptrh	equ	0xFF7
 46700                           tblptrl	equ	0xFF6
 46701                           tablat	equ	0xFF5
 46702                           prodh	equ	0xFF4
 46703                           prodl	equ	0xFF3
 46704                           intcon	equ	0xFF2
 46705                           indf0	equ	0xFEF
 46706                           postinc0	equ	0xFEE
 46707                           fsr0h	equ	0xFEA
 46708                           fsr0l	equ	0xFE9
 46709                           wreg	equ	0xFE8
 46710                           indf1	equ	0xFE7
 46711                           postinc1	equ	0xFE6
 46712                           postdec1	equ	0xFE5
 46713                           plusw1	equ	0xFE3
 46714                           fsr1h	equ	0xFE2
 46715                           fsr1l	equ	0xFE1
 46716                           indf2	equ	0xFDF
 46717                           postinc2	equ	0xFDE
 46718                           postdec2	equ	0xFDD
 46719                           plusw2	equ	0xFDB
 46720                           fsr2h	equ	0xFDA
 46721                           fsr2l	equ	0xFD9
 46722                           status	equ	0xFD8
 46723                           
 46724 ;; *************** function _SYS_InterruptHigh *****************
 46725 ;; Defined at:
 46726 ;;		line 162 in file "system.c"
 46727 ;; Parameters:    Size  Location     Type
 46728 ;;		None
 46729 ;; Auto vars:     Size  Location     Type
 46730 ;;		None
 46731 ;; Return value:  Size  Location     Type
 46732 ;;                  1    wreg      void 
 46733 ;; Registers used:
 46734 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 46735 ;; Tracked objects:
 46736 ;;		On entry : 0/0
 46737 ;;		On exit  : 0/0
 46738 ;;		Unchanged: 0/0
 46739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46742 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46743 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46744 ;;Total ram usage:       14 bytes
 46745 ;; Hardware stack levels used:    1
 46746 ;; Hardware stack levels required when called:    9
 46747 ;; This function calls:
 46748 ;;		_USBDeviceTasks
 46749 ;;		_motor_isr
 46750 ;;		_tmr0_isr
 46751 ;; This function is called by:
 46752 ;;		Interrupt level 2
 46753 ;; This function uses a non-reentrant model
 46754 ;;
 46755                           
 46756                           	psect	intcode
 46757  009008                     __pintcode:
 46758                           	opt stack 0
 46759  009008                     _SYS_InterruptHigh:
 46760                           	opt stack 9
 46761                           
 46762                           ; BSR set to: 0
 46763                           ;incstack = 0
 46764  009008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 46765  00900A  CFFA F049          	movff	pclath,??_SYS_InterruptHigh
 46766  00900E  CFFB F04A          	movff	pclatu,??_SYS_InterruptHigh+1
 46767  009012  CFE9 F04B          	movff	fsr0l,??_SYS_InterruptHigh+2
 46768  009016  CFEA F04C          	movff	fsr0h,??_SYS_InterruptHigh+3
 46769  00901A  CFE1 F04D          	movff	fsr1l,??_SYS_InterruptHigh+4
 46770  00901E  CFE2 F04E          	movff	fsr1h,??_SYS_InterruptHigh+5
 46771  009022  CFD9 F04F          	movff	fsr2l,??_SYS_InterruptHigh+6
 46772  009026  CFDA F050          	movff	fsr2h,??_SYS_InterruptHigh+7
 46773  00902A  CFF3 F051          	movff	prodl,??_SYS_InterruptHigh+8
 46774  00902E  CFF4 F052          	movff	prodh,??_SYS_InterruptHigh+9
 46775  009032  CFF6 F053          	movff	tblptrl,??_SYS_InterruptHigh+10
 46776  009036  CFF7 F054          	movff	tblptrh,??_SYS_InterruptHigh+11
 46777  00903A  CFF8 F055          	movff	tblptru,??_SYS_InterruptHigh+12
 46778  00903E  CFF5 F056          	movff	tablat,??_SYS_InterruptHigh+13
 46779                           
 46780                           ;system.c: 165: USBDeviceTasks();
 46781  009042  ECDE  F080         	call	_USBDeviceTasks	;wreg free
 46782                           
 46783                           ;system.c: 169: if(PIR1bits.TMR2IF)
 46784  009046  B29E               	btfsc	3998,1,c	;volatile
 46785                           
 46786                           ;system.c: 170: {;system.c: 171: motor_isr();
 46787  009048  ECFB  F05B         	call	_motor_isr	;wreg free
 46788                           
 46789                           ;system.c: 172: };system.c: 174: if(INTCONbits.T0IF)
 46790  00904C  B4F2               	btfsc	intcon,2,c	;volatile
 46791                           
 46792                           ;system.c: 175: {;system.c: 176: tmr0_isr();
 46793  00904E  EC2C  F0AC         	call	_tmr0_isr	;wreg free
 46794  009052  C056  FFF5         	movff	??_SYS_InterruptHigh+13,tablat
 46795  009056  C055  FFF8         	movff	??_SYS_InterruptHigh+12,tblptru
 46796  00905A  C054  FFF7         	movff	??_SYS_InterruptHigh+11,tblptrh
 46797  00905E  C053  FFF6         	movff	??_SYS_InterruptHigh+10,tblptrl
 46798  009062  C052  FFF4         	movff	??_SYS_InterruptHigh+9,prodh
 46799  009066  C051  FFF3         	movff	??_SYS_InterruptHigh+8,prodl
 46800  00906A  C050  FFDA         	movff	??_SYS_InterruptHigh+7,fsr2h
 46801  00906E  C04F  FFD9         	movff	??_SYS_InterruptHigh+6,fsr2l
 46802  009072  C04E  FFE2         	movff	??_SYS_InterruptHigh+5,fsr1h
 46803  009076  C04D  FFE1         	movff	??_SYS_InterruptHigh+4,fsr1l
 46804  00907A  C04C  FFEA         	movff	??_SYS_InterruptHigh+3,fsr0h
 46805  00907E  C04B  FFE9         	movff	??_SYS_InterruptHigh+2,fsr0l
 46806  009082  C04A  FFFB         	movff	??_SYS_InterruptHigh+1,pclatu
 46807  009086  C049  FFFA         	movff	??_SYS_InterruptHigh,pclath
 46808  00908A  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 46809  00908C  0011               	retfie		f
 46810  00908E                     __end_of_SYS_InterruptHigh:
 46811                           	opt stack 0
 46812                           tosu	equ	0xFFF
 46813                           tosh	equ	0xFFE
 46814                           tosl	equ	0xFFD
 46815                           pclatu	equ	0xFFB
 46816                           pclath	equ	0xFFA
 46817                           tblptru	equ	0xFF8
 46818                           tblptrh	equ	0xFF7
 46819                           tblptrl	equ	0xFF6
 46820                           tablat	equ	0xFF5
 46821                           prodh	equ	0xFF4
 46822                           prodl	equ	0xFF3
 46823                           intcon	equ	0xFF2
 46824                           indf0	equ	0xFEF
 46825                           postinc0	equ	0xFEE
 46826                           fsr0h	equ	0xFEA
 46827                           fsr0l	equ	0xFE9
 46828                           wreg	equ	0xFE8
 46829                           indf1	equ	0xFE7
 46830                           postinc1	equ	0xFE6
 46831                           postdec1	equ	0xFE5
 46832                           plusw1	equ	0xFE3
 46833                           fsr1h	equ	0xFE2
 46834                           fsr1l	equ	0xFE1
 46835                           indf2	equ	0xFDF
 46836                           postinc2	equ	0xFDE
 46837                           postdec2	equ	0xFDD
 46838                           plusw2	equ	0xFDB
 46839                           fsr2h	equ	0xFDA
 46840                           fsr2l	equ	0xFD9
 46841                           status	equ	0xFD8
 46842                           
 46843 ;; *************** function _tmr0_isr *****************
 46844 ;; Defined at:
 46845 ;;		line 24 in file "os.c"
 46846 ;; Parameters:    Size  Location     Type
 46847 ;;		None
 46848 ;; Auto vars:     Size  Location     Type
 46849 ;;		None
 46850 ;; Return value:  Size  Location     Type
 46851 ;;                  1    wreg      void 
 46852 ;; Registers used:
 46853 ;;		wreg, status,2, status,0, cstack
 46854 ;; Tracked objects:
 46855 ;;		On entry : 0/0
 46856 ;;		On exit  : 0/0
 46857 ;;		Unchanged: 0/0
 46858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46863 ;;Total ram usage:        0 bytes
 46864 ;; Hardware stack levels used:    1
 46865 ;; Hardware stack levels required when called:    1
 46866 ;; This function calls:
 46867 ;;		_encoder_run
 46868 ;; This function is called by:
 46869 ;;		_SYS_InterruptHigh
 46870 ;; This function uses a non-reentrant model
 46871 ;;
 46872                           
 46873                           	psect	text194
 46874  015858                     __ptext194:
 46875                           	opt stack 0
 46876  015858                     _tmr0_isr:
 46877                           	opt stack 16
 46878                           
 46879                           ;os.c: 27: if(INTCONbits.T0IF)
 46880                           
 46881                           ;incstack = 0
 46882  015858  A4F2               	btfss	intcon,2,c	;volatile
 46883  01585A  0012               	return	
 46884                           
 46885                           ;os.c: 28: {;os.c: 30: TMR0H = 0xFA;
 46886  01585C  0EFA               	movlw	250
 46887  01585E  6ED7               	movwf	4055,c	;volatile
 46888                           
 46889                           ;os.c: 31: TMR0L = 0x24;
 46890  015860  0E24               	movlw	36
 46891  015862  6ED6               	movwf	4054,c	;volatile
 46892                           
 46893                           ;os.c: 34: INTCONbits.T0IF = 0;
 46894  015864  94F2               	bcf	intcon,2,c	;volatile
 46895                           
 46896                           ;os.c: 37: encoder_run();
 46897  015866  EC20  F08E         	call	_encoder_run	;wreg free
 46898                           
 46899                           ;os.c: 40: ++os.subTimeSlot;
 46900  01586A  0101               	movlb	1	; () banked
 46901  01586C  2B65               	incf	_os& (0+255),f,b	;volatile
 46902                           
 46903                           ; BSR set to: 1
 46904                           ;os.c: 41: if(os.subTimeSlot>=10)
 46905  01586E  0E09               	movlw	9
 46906  015870  6565               	cpfsgt	_os& (0+255),b	;volatile
 46907  015872  0012               	return	
 46908                           
 46909                           ; BSR set to: 1
 46910                           ;os.c: 42: {;os.c: 43: if(os.done)
 46911  015874  5167               	movf	(_os+2)& (0+255),w,b	;volatile
 46912  015876  B4D8               	btfsc	status,2,c
 46913  015878  0012               	return	
 46914                           
 46915                           ; BSR set to: 1
 46916                           ;os.c: 44: {;os.c: 45: ++os.timeSlot;
 46917  01587A  2B66               	incf	(_os+1)& (0+255),f,b	;volatile
 46918                           
 46919                           ; BSR set to: 1
 46920                           ;os.c: 46: if(os.timeSlot==16)
 46921  01587C  0E10               	movlw	16
 46922  01587E  1966               	xorwf	(_os+1)& (0+255),w,b	;volatile
 46923  015880  A4D8               	btfss	status,2,c
 46924  015882  D002               	goto	i2l1066
 46925                           
 46926                           ; BSR set to: 1
 46927                           ;os.c: 47: {;os.c: 48: os.timeSlot = 0;
 46928  015884  0E00               	movlw	0
 46929  015886  6F66               	movwf	(_os+1)& (0+255),b	;volatile
 46930  015888                     i2l1066:
 46931                           
 46932                           ; BSR set to: 1
 46933                           ;os.c: 49: };os.c: 50: os.subTimeSlot = 0;
 46934  015888  0E00               	movlw	0
 46935  01588A  6F65               	movwf	_os& (0+255),b	;volatile
 46936                           
 46937                           ;os.c: 51: os.done = 0;
 46938  01588C  0E00               	movlw	0
 46939  01588E  6F67               	movwf	(_os+2)& (0+255),b	;volatile
 46940                           
 46941                           ; BSR set to: 1
 46942                           
 46943                           ; BSR set to: 1
 46944  015890  0012               	return	
 46945  015892                     __end_of_tmr0_isr:
 46946                           	opt stack 0
 46947                           tosu	equ	0xFFF
 46948                           tosh	equ	0xFFE
 46949                           tosl	equ	0xFFD
 46950                           pclatu	equ	0xFFB
 46951                           pclath	equ	0xFFA
 46952                           tblptru	equ	0xFF8
 46953                           tblptrh	equ	0xFF7
 46954                           tblptrl	equ	0xFF6
 46955                           tablat	equ	0xFF5
 46956                           prodh	equ	0xFF4
 46957                           prodl	equ	0xFF3
 46958                           intcon	equ	0xFF2
 46959                           indf0	equ	0xFEF
 46960                           postinc0	equ	0xFEE
 46961                           fsr0h	equ	0xFEA
 46962                           fsr0l	equ	0xFE9
 46963                           wreg	equ	0xFE8
 46964                           indf1	equ	0xFE7
 46965                           postinc1	equ	0xFE6
 46966                           postdec1	equ	0xFE5
 46967                           plusw1	equ	0xFE3
 46968                           fsr1h	equ	0xFE2
 46969                           fsr1l	equ	0xFE1
 46970                           indf2	equ	0xFDF
 46971                           postinc2	equ	0xFDE
 46972                           postdec2	equ	0xFDD
 46973                           plusw2	equ	0xFDB
 46974                           fsr2h	equ	0xFDA
 46975                           fsr2l	equ	0xFD9
 46976                           status	equ	0xFD8
 46977                           
 46978 ;; *************** function _encoder_run *****************
 46979 ;; Defined at:
 46980 ;;		line 103 in file "encoder.c"
 46981 ;; Parameters:    Size  Location     Type
 46982 ;;		None
 46983 ;; Auto vars:     Size  Location     Type
 46984 ;;		None
 46985 ;; Return value:  Size  Location     Type
 46986 ;;                  1    wreg      void 
 46987 ;; Registers used:
 46988 ;;		wreg, status,2, status,0
 46989 ;; Tracked objects:
 46990 ;;		On entry : 0/0
 46991 ;;		On exit  : 0/0
 46992 ;;		Unchanged: 0/0
 46993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46998 ;;Total ram usage:        0 bytes
 46999 ;; Hardware stack levels used:    1
 47000 ;; This function calls:
 47001 ;;		Nothing
 47002 ;; This function is called by:
 47003 ;;		_tmr0_isr
 47004 ;; This function uses a non-reentrant model
 47005 ;;
 47006                           
 47007                           	psect	text195
 47008  011C40                     __ptext195:
 47009                           	opt stack 0
 47010  011C40                     _encoder_run:
 47011                           	opt stack 16
 47012                           
 47013                           ;encoder.c: 105: if(enc1 != (PORTE&0b00000111))
 47014                           
 47015                           ;incstack = 0
 47016  011C40  5084               	movf	3972,w,c	;volatile
 47017  011C42  0B07               	andlw	7
 47018  011C44  0101               	movlb	1	; () banked
 47019  011C46  1948               	xorwf	_enc1& (0+255),w,b
 47020  011C48  B4D8               	btfsc	status,2,c
 47021  011C4A  D033               	goto	i2l2754
 47022                           
 47023                           ; BSR set to: 1
 47024                           ;encoder.c: 106: {;encoder.c: 108: if(PORTEbits.RE0 && PORTEbits.RE2 && (!(enc1&0b000000
      +                          01)))
 47025  011C4C  B084               	btfsc	3972,0,c	;volatile
 47026                           
 47027                           ; BSR set to: 1
 47028  011C4E  A484               	btfss	3972,2,c	;volatile
 47029  011C50  D00D               	goto	i2l2757
 47030                           
 47031                           ; BSR set to: 1
 47032  011C52  B148               	btfsc	_enc1& (0+255),0,b
 47033  011C54  D00B               	goto	i2l2757
 47034                           
 47035                           ; BSR set to: 1
 47036                           ;encoder.c: 109: {;encoder.c: 110: if(os.encoder1Count<127)
 47037  011C56  0E7F               	movlw	127
 47038  011C58  1968               	xorwf	(_os+3)& (0+255),w,b	;volatile
 47039  011C5A  B4D8               	btfsc	status,2,c
 47040  011C5C  D007               	goto	i2l2757
 47041                           
 47042                           ; BSR set to: 1
 47043                           ;encoder.c: 111: {;encoder.c: 112: ++os.encoder1Count;
 47044  011C5E  2B68               	incf	(_os+3)& (0+255),f,b	;volatile
 47045                           
 47046                           ; BSR set to: 1
 47047                           ;encoder.c: 113: if(config.beep_duration)
 47048  011C60  51AB               	movf	(_config+21)& (0+255),w,b
 47049  011C62  B4D8               	btfsc	status,2,c
 47050  011C64  D003               	goto	i2l2757
 47051                           
 47052                           ; BSR set to: 1
 47053                           ;encoder.c: 114: {;encoder.c: 115: LATCbits.LC7 = 1;
 47054  011C66  8E8B               	bsf	3979,7,c	;volatile
 47055                           
 47056                           ;encoder.c: 116: os.beep_count = config.beep_duration;
 47057  011C68  C1AB  F18C         	movff	_config+21,_os+39	;volatile
 47058  011C6C                     i2l2757:
 47059                           
 47060                           ; BSR set to: 1
 47061                           ;encoder.c: 117: };encoder.c: 118: };encoder.c: 119: };encoder.c: 121: if(PORTEbits.RE2 
      +                          && PORTEbits.RE0 && (!(enc1&0b00000100)))
 47062                           
 47063                           ; BSR set to: 1
 47064                           
 47065                           ; BSR set to: 1
 47066  011C6C  B484               	btfsc	3972,2,c	;volatile
 47067                           
 47068                           ; BSR set to: 1
 47069  011C6E  A084               	btfss	3972,0,c	;volatile
 47070  011C70  D00E               	goto	i2l2760
 47071                           
 47072                           ; BSR set to: 1
 47073  011C72  B548               	btfsc	_enc1& (0+255),2,b
 47074  011C74  D00C               	goto	i2l2760
 47075                           
 47076                           ; BSR set to: 1
 47077                           ;encoder.c: 122: {;encoder.c: 123: if(os.encoder1Count>-128)
 47078  011C76  5168               	movf	(_os+3)& (0+255),w,b	;volatile
 47079  011C78  0A80               	xorlw	128
 47080  011C7A  0FFF               	addlw	255
 47081  011C7C  A0D8               	btfss	status,0,c
 47082  011C7E  D007               	goto	i2l2760
 47083                           
 47084                           ; BSR set to: 1
 47085                           ;encoder.c: 124: {;encoder.c: 125: --os.encoder1Count;
 47086  011C80  0768               	decf	(_os+3)& (0+255),f,b	;volatile
 47087                           
 47088                           ; BSR set to: 1
 47089                           ;encoder.c: 126: if(config.beep_duration)
 47090  011C82  51AB               	movf	(_config+21)& (0+255),w,b
 47091  011C84  B4D8               	btfsc	status,2,c
 47092  011C86  D003               	goto	i2l2760
 47093                           
 47094                           ; BSR set to: 1
 47095                           ;encoder.c: 127: {;encoder.c: 128: LATCbits.LC7 = 1;
 47096  011C88  8E8B               	bsf	3979,7,c	;volatile
 47097                           
 47098                           ;encoder.c: 129: os.beep_count = config.beep_duration;
 47099  011C8A  C1AB  F18C         	movff	_config+21,_os+39	;volatile
 47100  011C8E                     i2l2760:
 47101                           
 47102                           ; BSR set to: 1
 47103                           ;encoder.c: 130: };encoder.c: 131: };encoder.c: 132: };encoder.c: 134: if(PORTEbits.RE1 
      +                          && (!(enc1&0b00000010)))
 47104                           
 47105                           ; BSR set to: 1
 47106                           
 47107                           ; BSR set to: 1
 47108  011C8E  B284               	btfsc	3972,1,c	;volatile
 47109                           
 47110                           ; BSR set to: 1
 47111  011C90  B348               	btfsc	_enc1& (0+255),1,b
 47112  011C92  D008               	goto	i2l2762
 47113                           
 47114                           ; BSR set to: 1
 47115                           ;encoder.c: 135: {;encoder.c: 136: os.button1 = 1;
 47116  011C94  0E01               	movlw	1
 47117  011C96  6F69               	movwf	(_os+4)& (0+255),b	;volatile
 47118                           
 47119                           ;encoder.c: 137: if(config.beep_duration)
 47120  011C98  51AB               	movf	(_config+21)& (0+255),w,b
 47121  011C9A  B4D8               	btfsc	status,2,c
 47122  011C9C  D003               	goto	i2l2762
 47123                           
 47124                           ; BSR set to: 1
 47125                           ;encoder.c: 138: {;encoder.c: 139: LATCbits.LC7 = 1;
 47126  011C9E  8E8B               	bsf	3979,7,c	;volatile
 47127                           
 47128                           ;encoder.c: 140: os.beep_count = config.beep_duration;
 47129  011CA0  C1AB  F18C         	movff	_config+21,_os+39	;volatile
 47130  011CA4                     i2l2762:
 47131                           
 47132                           ; BSR set to: 1
 47133                           ;encoder.c: 141: };encoder.c: 142: };encoder.c: 144: if((!PORTEbits.RE1) && (enc1&0b0000
      +                          0010))
 47134                           
 47135                           ; BSR set to: 1
 47136  011CA4  A284               	btfss	3972,1,c	;volatile
 47137                           
 47138                           ; BSR set to: 1
 47139  011CA6  A348               	btfss	_enc1& (0+255),1,b
 47140  011CA8  D001               	goto	i2l2763
 47141                           
 47142                           ; BSR set to: 1
 47143                           ;encoder.c: 145: {;encoder.c: 146: os.button1 = -1;
 47144  011CAA  6969               	setf	(_os+4)& (0+255),b	;volatile
 47145  011CAC                     i2l2763:
 47146                           
 47147                           ; BSR set to: 1
 47148                           ;encoder.c: 147: };encoder.c: 149: enc1 = PORTE & 0b00000111;
 47149                           
 47150                           ; BSR set to: 1
 47151  011CAC  5084               	movf	3972,w,c	;volatile
 47152  011CAE  0B07               	andlw	7
 47153  011CB0  6F48               	movwf	_enc1& (0+255),b
 47154  011CB2                     i2l2754:
 47155                           
 47156                           ; BSR set to: 1
 47157                           ;encoder.c: 150: };encoder.c: 152: if(enc2 != (PORTA&0b00000111))
 47158  011CB2  5080               	movf	3968,w,c	;volatile
 47159  011CB4  0B07               	andlw	7
 47160  011CB6  1947               	xorwf	_enc2& (0+255),w,b
 47161  011CB8  B4D8               	btfsc	status,2,c
 47162  011CBA  D033               	goto	i2l2764
 47163                           
 47164                           ; BSR set to: 1
 47165                           ;encoder.c: 153: {;encoder.c: 155: if(PORTAbits.RA2 && PORTAbits.RA0 && (!(enc2&0b000001
      +                          00)))
 47166  011CBC  B480               	btfsc	3968,2,c	;volatile
 47167                           
 47168                           ; BSR set to: 1
 47169  011CBE  A080               	btfss	3968,0,c	;volatile
 47170  011CC0  D00D               	goto	i2l2767
 47171                           
 47172                           ; BSR set to: 1
 47173  011CC2  B547               	btfsc	_enc2& (0+255),2,b
 47174  011CC4  D00B               	goto	i2l2767
 47175                           
 47176                           ; BSR set to: 1
 47177                           ;encoder.c: 156: {;encoder.c: 157: if(os.encoder2Count<127)
 47178  011CC6  0E7F               	movlw	127
 47179  011CC8  196A               	xorwf	(_os+5)& (0+255),w,b	;volatile
 47180  011CCA  B4D8               	btfsc	status,2,c
 47181  011CCC  D007               	goto	i2l2767
 47182                           
 47183                           ; BSR set to: 1
 47184                           ;encoder.c: 158: {;encoder.c: 159: ++os.encoder2Count;
 47185  011CCE  2B6A               	incf	(_os+5)& (0+255),f,b	;volatile
 47186                           
 47187                           ; BSR set to: 1
 47188                           ;encoder.c: 160: if(config.beep_duration)
 47189  011CD0  51AB               	movf	(_config+21)& (0+255),w,b
 47190  011CD2  B4D8               	btfsc	status,2,c
 47191  011CD4  D003               	goto	i2l2767
 47192                           
 47193                           ; BSR set to: 1
 47194                           ;encoder.c: 161: {;encoder.c: 162: LATCbits.LC7 = 1;
 47195  011CD6  8E8B               	bsf	3979,7,c	;volatile
 47196                           
 47197                           ;encoder.c: 163: os.beep_count = config.beep_duration;
 47198  011CD8  C1AB  F18C         	movff	_config+21,_os+39	;volatile
 47199  011CDC                     i2l2767:
 47200                           
 47201                           ; BSR set to: 1
 47202                           ;encoder.c: 164: };encoder.c: 165: };encoder.c: 166: };encoder.c: 168: if(PORTAbits.RA0 
      +                          && PORTAbits.RA2 && (!(enc2&0b00000001)))
 47203                           
 47204                           ; BSR set to: 1
 47205                           
 47206                           ; BSR set to: 1
 47207  011CDC  B080               	btfsc	3968,0,c	;volatile
 47208                           
 47209                           ; BSR set to: 1
 47210  011CDE  A480               	btfss	3968,2,c	;volatile
 47211  011CE0  D00E               	goto	i2l2770
 47212                           
 47213                           ; BSR set to: 1
 47214  011CE2  B147               	btfsc	_enc2& (0+255),0,b
 47215  011CE4  D00C               	goto	i2l2770
 47216                           
 47217                           ; BSR set to: 1
 47218                           ;encoder.c: 169: {;encoder.c: 170: if(os.encoder2Count>-128)
 47219  011CE6  516A               	movf	(_os+5)& (0+255),w,b	;volatile
 47220  011CE8  0A80               	xorlw	128
 47221  011CEA  0FFF               	addlw	255
 47222  011CEC  A0D8               	btfss	status,0,c
 47223  011CEE  D007               	goto	i2l2770
 47224                           
 47225                           ; BSR set to: 1
 47226                           ;encoder.c: 171: {;encoder.c: 172: --os.encoder2Count;
 47227  011CF0  076A               	decf	(_os+5)& (0+255),f,b	;volatile
 47228                           
 47229                           ; BSR set to: 1
 47230                           ;encoder.c: 173: if(config.beep_duration)
 47231  011CF2  51AB               	movf	(_config+21)& (0+255),w,b
 47232  011CF4  B4D8               	btfsc	status,2,c
 47233  011CF6  D003               	goto	i2l2770
 47234                           
 47235                           ; BSR set to: 1
 47236                           ;encoder.c: 174: {;encoder.c: 175: LATCbits.LC7 = 1;
 47237  011CF8  8E8B               	bsf	3979,7,c	;volatile
 47238                           
 47239                           ;encoder.c: 176: os.beep_count = config.beep_duration;
 47240  011CFA  C1AB  F18C         	movff	_config+21,_os+39	;volatile
 47241  011CFE                     i2l2770:
 47242                           
 47243                           ; BSR set to: 1
 47244                           ;encoder.c: 177: };encoder.c: 178: };encoder.c: 179: };encoder.c: 181: if(PORTAbits.RA1 
      +                          && (!(enc2&0b00000010)))
 47245                           
 47246                           ; BSR set to: 1
 47247                           
 47248                           ; BSR set to: 1
 47249  011CFE  B280               	btfsc	3968,1,c	;volatile
 47250                           
 47251                           ; BSR set to: 1
 47252  011D00  B347               	btfsc	_enc2& (0+255),1,b
 47253  011D02  D008               	goto	i2l2772
 47254                           
 47255                           ; BSR set to: 1
 47256                           ;encoder.c: 182: {;encoder.c: 183: os.button2 = 1;
 47257  011D04  0E01               	movlw	1
 47258  011D06  6F6B               	movwf	(_os+6)& (0+255),b	;volatile
 47259                           
 47260                           ;encoder.c: 184: if(config.beep_duration)
 47261  011D08  51AB               	movf	(_config+21)& (0+255),w,b
 47262  011D0A  B4D8               	btfsc	status,2,c
 47263  011D0C  D003               	goto	i2l2772
 47264                           
 47265                           ; BSR set to: 1
 47266                           ;encoder.c: 185: {;encoder.c: 186: LATCbits.LC7 = 1;
 47267  011D0E  8E8B               	bsf	3979,7,c	;volatile
 47268                           
 47269                           ;encoder.c: 187: os.beep_count = config.beep_duration;
 47270  011D10  C1AB  F18C         	movff	_config+21,_os+39	;volatile
 47271  011D14                     i2l2772:
 47272                           
 47273                           ; BSR set to: 1
 47274                           ;encoder.c: 188: };encoder.c: 189: };encoder.c: 191: if((!PORTAbits.RA1) && (enc2&0b0000
      +                          0010))
 47275                           
 47276                           ; BSR set to: 1
 47277  011D14  A280               	btfss	3968,1,c	;volatile
 47278                           
 47279                           ; BSR set to: 1
 47280  011D16  A347               	btfss	_enc2& (0+255),1,b
 47281  011D18  D001               	goto	i2l2773
 47282                           
 47283                           ; BSR set to: 1
 47284                           ;encoder.c: 192: {;encoder.c: 193: os.button2 = -1;
 47285  011D1A  696B               	setf	(_os+6)& (0+255),b	;volatile
 47286  011D1C                     i2l2773:
 47287                           
 47288                           ; BSR set to: 1
 47289                           ;encoder.c: 194: };encoder.c: 196: enc2 = PORTA & 0b00000111;
 47290                           
 47291                           ; BSR set to: 1
 47292  011D1C  5080               	movf	3968,w,c	;volatile
 47293  011D1E  0B07               	andlw	7
 47294  011D20  6F47               	movwf	_enc2& (0+255),b
 47295  011D22                     i2l2764:
 47296                           
 47297                           ; BSR set to: 1
 47298                           ;encoder.c: 197: };encoder.c: 200: if(os.beep_count)
 47299                           
 47300                           ; BSR set to: 1
 47301  011D22  518C               	movf	(_os+39)& (0+255),w,b	;volatile
 47302  011D24  B4D8               	btfsc	status,2,c
 47303  011D26  0012               	return	
 47304                           
 47305                           ; BSR set to: 1
 47306                           ;encoder.c: 201: {;encoder.c: 202: --os.beep_count;
 47307  011D28  078C               	decf	(_os+39)& (0+255),f,b	;volatile
 47308                           
 47309                           ; BSR set to: 1
 47310                           ;encoder.c: 203: if(!os.beep_count)
 47311  011D2A  518C               	movf	(_os+39)& (0+255),w,b	;volatile
 47312  011D2C  A4D8               	btfss	status,2,c
 47313  011D2E  0012               	return	
 47314                           
 47315                           ; BSR set to: 1
 47316                           ;encoder.c: 204: {;encoder.c: 205: LATCbits.LC7 = 0;
 47317  011D30  9E8B               	bcf	3979,7,c	;volatile
 47318                           
 47319                           ; BSR set to: 1
 47320  011D32  0012               	return	
 47321  011D34                     __end_of_encoder_run:
 47322                           	opt stack 0
 47323                           tosu	equ	0xFFF
 47324                           tosh	equ	0xFFE
 47325                           tosl	equ	0xFFD
 47326                           pclatu	equ	0xFFB
 47327                           pclath	equ	0xFFA
 47328                           tblptru	equ	0xFF8
 47329                           tblptrh	equ	0xFF7
 47330                           tblptrl	equ	0xFF6
 47331                           tablat	equ	0xFF5
 47332                           prodh	equ	0xFF4
 47333                           prodl	equ	0xFF3
 47334                           intcon	equ	0xFF2
 47335                           indf0	equ	0xFEF
 47336                           postinc0	equ	0xFEE
 47337                           fsr0h	equ	0xFEA
 47338                           fsr0l	equ	0xFE9
 47339                           wreg	equ	0xFE8
 47340                           indf1	equ	0xFE7
 47341                           postinc1	equ	0xFE6
 47342                           postdec1	equ	0xFE5
 47343                           plusw1	equ	0xFE3
 47344                           fsr1h	equ	0xFE2
 47345                           fsr1l	equ	0xFE1
 47346                           indf2	equ	0xFDF
 47347                           postinc2	equ	0xFDE
 47348                           postdec2	equ	0xFDD
 47349                           plusw2	equ	0xFDB
 47350                           fsr2h	equ	0xFDA
 47351                           fsr2l	equ	0xFD9
 47352                           status	equ	0xFD8
 47353                           
 47354 ;; *************** function _motor_isr *****************
 47355 ;; Defined at:
 47356 ;;		line 672 in file "motor.c"
 47357 ;; Parameters:    Size  Location     Type
 47358 ;;		None
 47359 ;; Auto vars:     Size  Location     Type
 47360 ;;  steps_remain    4   68[COMRAM] unsigned long 
 47361 ;;  steps_until_    2   66[COMRAM] unsigned int 
 47362 ;;  steps_until_    2   64[COMRAM] unsigned int 
 47363 ;; Return value:  Size  Location     Type
 47364 ;;                  1    wreg      void 
 47365 ;; Registers used:
 47366 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 47367 ;; Tracked objects:
 47368 ;;		On entry : 0/0
 47369 ;;		On exit  : 0/0
 47370 ;;		Unchanged: 0/0
 47371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47373 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47374 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47375 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47376 ;;Total ram usage:       24 bytes
 47377 ;; Hardware stack levels used:    1
 47378 ;; Hardware stack levels required when called:    4
 47379 ;; This function calls:
 47380 ;;		_i2c_eeprom_save_position
 47381 ;; This function is called by:
 47382 ;;		_SYS_InterruptHigh
 47383 ;; This function uses a non-reentrant model
 47384 ;;
 47385                           
 47386                           	psect	text196
 47387  00B7F6                     __ptext196:
 47388                           	opt stack 0
 47389  00B7F6                     _motor_isr:
 47390                           	opt stack 13
 47391                           
 47392                           ;motor.c: 674: uint32_t steps_remaining;;motor.c: 675: uint16_t steps_until_standstill;;
      +                          motor.c: 676: uint16_t steps_until_standstill_if_accelerate;;motor.c: 679: PIR1bits.TMR2
      +                          IF = 0;
 47393                           
 47394                           ; BSR set to: 1
 47395                           ;incstack = 0
 47396  00B7F6  929E               	bcf	3998,1,c	;volatile
 47397                           
 47398                           ;motor.c: 682: if(motor_move_type==MOTOR_MOVE_TYPE_ENDLESS)
 47399  00B7F8  0101               	movlb	1	; () banked
 47400  00B7FA  054B               	decf	_motor_move_type& (0+255),w,b
 47401  00B7FC  A4D8               	btfss	status,2,c
 47402  00B7FE  D004               	goto	i2l2579
 47403                           
 47404                           ; BSR set to: 1
 47405                           ;motor.c: 683: {;motor.c: 684: motor_final_stepcount = 0xFFFFFFFF;
 47406  00B800  691B               	setf	_motor_final_stepcount& (0+255),b	;volatile
 47407  00B802  691C               	setf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 47408  00B804  691D               	setf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 47409  00B806  691E               	setf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 47410  00B808                     i2l2579:
 47411                           
 47412                           ; BSR set to: 1
 47413                           ;motor.c: 685: };motor.c: 687: if(motor_mode==MOTOR_MODE_MANUAL)
 47414                           
 47415                           ; BSR set to: 1
 47416  00B808  5149               	movf	_motor_mode& (0+255),w,b	;volatile
 47417  00B80A  A4D8               	btfss	status,2,c
 47418  00B80C  D01A               	goto	i2l2584
 47419                           
 47420                           ; BSR set to: 1
 47421                           ;motor.c: 688: {;motor.c: 690: if(LATBbits.LB1)
 47422  00B80E  A28A               	btfss	3978,1,c	;volatile
 47423  00B810  D017               	goto	i2l2581
 47424                           
 47425                           ; BSR set to: 1
 47426                           ;motor.c: 691: {;motor.c: 693: LATBbits.LB1 = 0;
 47427  00B812  928A               	bcf	3978,1,c	;volatile
 47428                           
 47429                           ; BSR set to: 1
 47430                           ;motor.c: 696: if(motor_current_stepcount==motor_final_stepcount)
 47431  00B814  511B               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 47432  00B816  191F               	xorwf	_motor_current_stepcount& (0+255),w,b	;volatile
 47433  00B818  E109               	bnz	i2u1915_41
 47434  00B81A  511C               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 47435  00B81C  1920               	xorwf	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 47436  00B81E  E106               	bnz	i2u1915_41
 47437  00B820  511D               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 47438  00B822  1921               	xorwf	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 47439  00B824  E103               	bnz	i2u1915_41
 47440  00B826  511E               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 47441  00B828  1922               	xorwf	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 47442  00B82A  A4D8               	btfss	status,2,c
 47443  00B82C                     i2u1915_41:
 47444  00B82C  0012               	return	
 47445                           
 47446                           ; BSR set to: 1
 47447                           ;motor.c: 697: {;motor.c: 700: T2CONbits.TMR2ON = 0;
 47448  00B82E  94CA               	bcf	4042,2,c	;volatile
 47449                           
 47450                           ;motor.c: 702: PIR1bits.TMR2IF = 0;
 47451  00B830  929E               	bcf	3998,1,c	;volatile
 47452                           
 47453                           ;motor.c: 703: PIE1bits.TMR2IE = 0;
 47454  00B832  929D               	bcf	3997,1,c	;volatile
 47455                           
 47456                           ; BSR set to: 1
 47457                           ;motor.c: 705: i2c_eeprom_save_position();
 47458  00B834  EC86  F09F         	call	_i2c_eeprom_save_position	;wreg free
 47459                           
 47460                           ;motor.c: 707: os.busy = 0;
 47461  00B838  0E00               	movlw	0
 47462  00B83A  0101               	movlb	1	; () banked
 47463  00B83C  6F75               	movwf	(_os+16)& (0+255),b	;volatile
 47464                           
 47465                           ; BSR set to: 1
 47466                           ;motor.c: 708: };motor.c: 711: return;
 47467                           
 47468                           ; BSR set to: 1
 47469  00B83E  0012               	return	
 47470  00B840                     i2l2581:
 47471                           
 47472                           ; BSR set to: 1
 47473                           ;motor.c: 713: else;motor.c: 714: {;motor.c: 716: LATBbits.LB1 = 1;
 47474  00B840  828A               	bsf	3978,1,c	;volatile
 47475  00B842                     i2l2584:
 47476                           
 47477                           ; BSR set to: 1
 47478                           ;motor.c: 717: };motor.c: 718: };motor.c: 720: ++motor_current_stepcount;
 47479                           
 47480                           ; BSR set to: 1
 47481                           
 47482                           ; BSR set to: 1
 47483  00B842  0E01               	movlw	1
 47484  00B844  271F               	addwf	_motor_current_stepcount& (0+255),f,b	;volatile
 47485  00B846  0E00               	movlw	0
 47486  00B848  2320               	addwfc	(_motor_current_stepcount+1)& (0+255),f,b	;volatile
 47487  00B84A  2321               	addwfc	(_motor_current_stepcount+2)& (0+255),f,b	;volatile
 47488  00B84C  2322               	addwfc	(_motor_current_stepcount+3)& (0+255),f,b	;volatile
 47489                           
 47490                           ;motor.c: 723: os.current_position_in_steps += motor_direction;
 47491  00B84E  514A               	movf	_motor_direction& (0+255),w,b
 47492  00B850  6E31               	movwf	??_motor_isr& (0+255),c
 47493  00B852  0E00               	movlw	0
 47494  00B854  BE31               	btfsc	??_motor_isr& (0+255),7,c
 47495  00B856  0EFF               	movlw	255
 47496  00B858  6E32               	movwf	(??_motor_isr+1)& (0+255),c
 47497  00B85A  6E33               	movwf	(??_motor_isr+2)& (0+255),c
 47498  00B85C  6E34               	movwf	(??_motor_isr+3)& (0+255),c
 47499  00B85E  5031               	movf	??_motor_isr,w,c
 47500  00B860  276C               	addwf	(_os+7)& (0+255),f,b	;volatile
 47501  00B862  5032               	movf	??_motor_isr+1,w,c
 47502  00B864  236D               	addwfc	(_os+8)& (0+255),f,b	;volatile
 47503  00B866  5033               	movf	??_motor_isr+2,w,c
 47504  00B868  236E               	addwfc	(_os+9)& (0+255),f,b	;volatile
 47505  00B86A  5034               	movf	??_motor_isr+3,w,c
 47506  00B86C  236F               	addwfc	(_os+10)& (0+255),f,b	;volatile
 47507                           
 47508                           ;motor.c: 724: if(os.current_position_in_steps==config.full_circle_in_steps)
 47509  00B86E  5196               	movf	_config& (0+255),w,b
 47510  00B870  196C               	xorwf	(_os+7)& (0+255),w,b	;volatile
 47511  00B872  E114               	bnz	i2l19140
 47512  00B874  5197               	movf	(_config+1)& (0+255),w,b
 47513  00B876  196D               	xorwf	(_os+8)& (0+255),w,b	;volatile
 47514  00B878  E111               	bnz	i2l19140
 47515  00B87A  5198               	movf	(_config+2)& (0+255),w,b
 47516  00B87C  196E               	xorwf	(_os+9)& (0+255),w,b	;volatile
 47517  00B87E  E10E               	bnz	i2l19140
 47518  00B880  5199               	movf	(_config+3)& (0+255),w,b
 47519  00B882  196F               	xorwf	(_os+10)& (0+255),w,b	;volatile
 47520  00B884  A4D8               	btfss	status,2,c
 47521  00B886  D00A               	goto	i2l2585
 47522                           
 47523                           ; BSR set to: 1
 47524                           ;motor.c: 725: {;motor.c: 726: os.current_position_in_steps = 0;
 47525  00B888  0E00               	movlw	0
 47526  00B88A  6F6C               	movwf	(_os+7)& (0+255),b	;volatile
 47527  00B88C  0E00               	movlw	0
 47528  00B88E  6F6D               	movwf	(_os+8)& (0+255),b	;volatile
 47529  00B890  0E00               	movlw	0
 47530  00B892  6F6E               	movwf	(_os+9)& (0+255),b	;volatile
 47531  00B894  0E00               	movlw	0
 47532  00B896  6F6F               	movwf	(_os+10)& (0+255),b	;volatile
 47533                           
 47534                           ; BSR set to: 1
 47535                           ;motor.c: 727: ++os.absolute_position;
 47536  00B898  4B70               	infsnz	(_os+11)& (0+255),f,b	;volatile
 47537  00B89A  2B71               	incf	(_os+12)& (0+255),f,b	;volatile
 47538  00B89C                     i2l2585:
 47539  00B89C                     i2l19140:
 47540                           
 47541                           ; BSR set to: 1
 47542                           ;motor.c: 728: };motor.c: 729: if(os.current_position_in_steps==0xFFFFFFFF)
 47543  00B89C  296C               	incf	(_os+7)& (0+255),w,b	;volatile
 47544  00B89E  E116               	bnz	i2l19146
 47545  00B8A0  296D               	incf	(_os+8)& (0+255),w,b	;volatile
 47546  00B8A2  E114               	bnz	i2l19146
 47547  00B8A4  296E               	incf	(_os+9)& (0+255),w,b	;volatile
 47548  00B8A6  E112               	bnz	i2l19146
 47549  00B8A8  296F               	incf	(_os+10)& (0+255),w,b	;volatile
 47550  00B8AA  A4D8               	btfss	status,2,c
 47551  00B8AC  D00F               	goto	i2l2586
 47552                           
 47553                           ; BSR set to: 1
 47554                           ;motor.c: 730: {;motor.c: 731: os.current_position_in_steps = (config.full_circle_in_ste
      +                          ps-1);
 47555  00B8AE  0EFF               	movlw	255
 47556  00B8B0  2596               	addwf	_config& (0+255),w,b
 47557  00B8B2  6F6C               	movwf	(_os+7)& (0+255),b	;volatile
 47558  00B8B4  0EFF               	movlw	255
 47559  00B8B6  2197               	addwfc	(_config+1)& (0+255),w,b
 47560  00B8B8  6F6D               	movwf	(_os+8)& (0+255),b	;volatile
 47561  00B8BA  0EFF               	movlw	255
 47562  00B8BC  2198               	addwfc	(_config+2)& (0+255),w,b
 47563  00B8BE  6F6E               	movwf	(_os+9)& (0+255),b	;volatile
 47564  00B8C0  0EFF               	movlw	255
 47565  00B8C2  2199               	addwfc	(_config+3)& (0+255),w,b
 47566  00B8C4  6F6F               	movwf	(_os+10)& (0+255),b	;volatile
 47567                           
 47568                           ; BSR set to: 1
 47569                           ;motor.c: 732: --os.absolute_position;
 47570  00B8C6  0770               	decf	(_os+11)& (0+255),f,b	;volatile
 47571  00B8C8  A0D8               	btfss	status,0,c
 47572  00B8CA  0771               	decf	(_os+12)& (0+255),f,b	;volatile
 47573  00B8CC                     i2l2586:
 47574  00B8CC                     i2l19146:
 47575                           
 47576                           ; BSR set to: 1
 47577                           ;motor.c: 733: };motor.c: 736: if(motor_current_stepcount==motor_next_speed_check)
 47578  00B8CC  0102               	movlb	2	; () banked
 47579  00B8CE  5138               	movf	_motor_next_speed_check& (0+255),w,b	;volatile
 47580  00B8D0  0101               	movlb	1	; () banked
 47581  00B8D2  191F               	xorwf	_motor_current_stepcount& (0+255),w,b	;volatile
 47582  00B8D4  E10F               	bnz	i2u1918_41
 47583  00B8D6  0102               	movlb	2	; () banked
 47584  00B8D8  5139               	movf	(_motor_next_speed_check+1)& (0+255),w,b	;volatile
 47585  00B8DA  0101               	movlb	1	; () banked
 47586  00B8DC  1920               	xorwf	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 47587  00B8DE  E10A               	bnz	i2u1918_41
 47588  00B8E0  0102               	movlb	2	; () banked
 47589  00B8E2  513A               	movf	(_motor_next_speed_check+2)& (0+255),w,b	;volatile
 47590  00B8E4  0101               	movlb	1	; () banked
 47591  00B8E6  1921               	xorwf	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 47592  00B8E8  E105               	bnz	i2u1918_41
 47593  00B8EA  0102               	movlb	2	; () banked
 47594  00B8EC  513B               	movf	(_motor_next_speed_check+3)& (0+255),w,b	;volatile
 47595  00B8EE  0101               	movlb	1	; () banked
 47596  00B8F0  1922               	xorwf	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 47597  00B8F2  A4D8               	btfss	status,2,c
 47598  00B8F4                     i2u1918_41:
 47599  00B8F4  0012               	return	
 47600                           
 47601                           ; BSR set to: 1
 47602                           ;motor.c: 737: {;motor.c: 739: steps_remaining = motor_final_stepcount - motor_current_s
      +                          tepcount;
 47603  00B8F6  C11F  F031         	movff	_motor_current_stepcount,??_motor_isr	;volatile
 47604  00B8FA  C120  F032         	movff	_motor_current_stepcount+1,??_motor_isr+1	;volatile
 47605  00B8FE  C121  F033         	movff	_motor_current_stepcount+2,??_motor_isr+2	;volatile
 47606  00B902  C122  F034         	movff	_motor_current_stepcount+3,??_motor_isr+3	;volatile
 47607  00B906  1E31               	comf	??_motor_isr,f,c
 47608  00B908  1E32               	comf	??_motor_isr+1,f,c
 47609  00B90A  1E33               	comf	??_motor_isr+2,f,c
 47610  00B90C  1E34               	comf	??_motor_isr+3,f,c
 47611  00B90E  2A31               	incf	??_motor_isr,f,c
 47612  00B910  0E00               	movlw	0
 47613  00B912  2232               	addwfc	??_motor_isr+1,f,c
 47614  00B914  2233               	addwfc	??_motor_isr+2,f,c
 47615  00B916  2234               	addwfc	??_motor_isr+3,f,c
 47616  00B918  511B               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 47617  00B91A  2431               	addwf	??_motor_isr,w,c
 47618  00B91C  6E45               	movwf	motor_isr@steps_remaining,c
 47619  00B91E  511C               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 47620  00B920  2032               	addwfc	??_motor_isr+1,w,c
 47621  00B922  6E46               	movwf	motor_isr@steps_remaining+1,c
 47622  00B924  511D               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 47623  00B926  2033               	addwfc	??_motor_isr+2,w,c
 47624  00B928  6E47               	movwf	motor_isr@steps_remaining+2,c
 47625  00B92A  511E               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 47626  00B92C  2034               	addwfc	??_motor_isr+3,w,c
 47627  00B92E  6E48               	movwf	motor_isr@steps_remaining+3,c
 47628                           
 47629                           ; BSR set to: 1
 47630                           ;motor.c: 740: steps_until_standstill = motor_steps_lookup[motor_current_speed];
 47631  00B930  90D8               	bcf	status,0,c
 47632  00B932  3457               	rlcf	_motor_current_speed,w,c	;volatile
 47633  00B934  6EF6               	movwf	tblptrl,c
 47634  00B936  3458               	rlcf	_motor_current_speed+1,w,c	;volatile
 47635  00B938  6EF7               	movwf	tblptrh,c
 47636  00B93A  0E61               	movlw	low _motor_steps_lookup
 47637  00B93C  26F6               	addwf	tblptrl,f,c
 47638  00B93E  0E94               	movlw	high _motor_steps_lookup
 47639  00B940  22F7               	addwfc	tblptrh,f,c
 47640  00B942                     	if	1	;There are 3 active tblptr bytes
 47641  00B942  6AF8               	clrf	tblptru,c
 47642  00B944  0E00               	movlw	low (__mediumconst shr (0+16))
 47643  00B946  22F8               	addwfc	tblptru,f,c
 47644  00B948                     	endif
 47645  00B948  0009               	tblrd		*+
 47646  00B94A  CFF5 F041          	movff	tablat,motor_isr@steps_until_standstill
 47647  00B94E  000A               	tblrd		*-
 47648  00B950  CFF5 F042          	movff	tablat,motor_isr@steps_until_standstill+1
 47649                           
 47650                           ; BSR set to: 1
 47651                           ;motor.c: 741: steps_until_standstill_if_accelerate = motor_steps_lookup[motor_current_s
      +                          peed+2];
 47652  00B954  C057  F031         	movff	_motor_current_speed,??_motor_isr	;volatile
 47653  00B958  C058  F032         	movff	_motor_current_speed+1,??_motor_isr+1	;volatile
 47654  00B95C  90D8               	bcf	status,0,c
 47655  00B95E  3631               	rlcf	??_motor_isr,f,c
 47656  00B960  3632               	rlcf	??_motor_isr+1,f,c
 47657  00B962  0E04               	movlw	4
 47658  00B964  2631               	addwf	??_motor_isr,f,c
 47659  00B966  0E00               	movlw	0
 47660  00B968  2232               	addwfc	??_motor_isr+1,f,c
 47661  00B96A  0E61               	movlw	low _motor_steps_lookup
 47662  00B96C  2431               	addwf	??_motor_isr,w,c
 47663  00B96E  6EF6               	movwf	tblptrl,c
 47664  00B970  0E94               	movlw	high _motor_steps_lookup
 47665  00B972  2032               	addwfc	??_motor_isr+1,w,c
 47666  00B974  6EF7               	movwf	tblptrh,c
 47667  00B976                     	if	1	;There are 3 active tblptr bytes
 47668  00B976  6AF8               	clrf	tblptru,c
 47669  00B978  0E00               	movlw	low (__mediumconst shr (0+16))
 47670  00B97A  22F8               	addwfc	tblptru,f,c
 47671  00B97C                     	endif
 47672  00B97C  0009               	tblrd		*+
 47673  00B97E  CFF5 F043          	movff	tablat,motor_isr@steps_until_standstill_if_accelerate
 47674  00B982  000A               	tblrd		*-
 47675  00B984  CFF5 F044          	movff	tablat,motor_isr@steps_until_standstill_if_accelerate+1
 47676                           
 47677                           ;motor.c: 743: if((motor_current_speed>motor_maximum_speed) || (steps_until_standstill>=
      +                          steps_remaining))
 47678  00B988  5057               	movf	_motor_current_speed,w,c	;volatile
 47679  00B98A  5D37               	subwf	_motor_maximum_speed& (0+255),w,b
 47680  00B98C  5058               	movf	_motor_current_speed+1,w,c	;volatile
 47681  00B98E  5938               	subwfb	(_motor_maximum_speed+1)& (0+255),w,b
 47682  00B990  A0D8               	btfss	status,0,c
 47683  00B992  D010               	goto	i2u1920_40
 47684                           
 47685                           ; BSR set to: 1
 47686  00B994  5041               	movf	motor_isr@steps_until_standstill,w,c
 47687  00B996  6E31               	movwf	??_motor_isr& (0+255),c
 47688  00B998  5042               	movf	motor_isr@steps_until_standstill+1,w,c
 47689  00B99A  6E32               	movwf	(??_motor_isr+1)& (0+255),c
 47690  00B99C  6A33               	clrf	(??_motor_isr+2)& (0+255),c
 47691  00B99E  6A34               	clrf	(??_motor_isr+3)& (0+255),c
 47692  00B9A0  5045               	movf	motor_isr@steps_remaining,w,c
 47693  00B9A2  5C31               	subwf	??_motor_isr,w,c
 47694  00B9A4  5046               	movf	motor_isr@steps_remaining+1,w,c
 47695  00B9A6  5832               	subwfb	??_motor_isr+1,w,c
 47696  00B9A8  5047               	movf	motor_isr@steps_remaining+2,w,c
 47697  00B9AA  5833               	subwfb	??_motor_isr+2,w,c
 47698  00B9AC  5048               	movf	motor_isr@steps_remaining+3,w,c
 47699  00B9AE  5834               	subwfb	??_motor_isr+3,w,c
 47700  00B9B0  A0D8               	btfss	status,0,c
 47701  00B9B2  D0ED               	goto	i2l2588
 47702  00B9B4                     i2u1920_40:
 47703                           
 47704                           ; BSR set to: 1
 47705                           ;motor.c: 744: {;motor.c: 746: if(motor_current_speed>0)
 47706                           
 47707                           ; BSR set to: 1
 47708  00B9B4  5057               	movf	_motor_current_speed,w,c	;volatile
 47709  00B9B6  1058               	iorwf	_motor_current_speed+1,w,c	;volatile
 47710  00B9B8  B4D8               	btfsc	status,2,c
 47711  00B9BA  D003               	goto	i2l2591
 47712                           
 47713                           ; BSR set to: 1
 47714                           ;motor.c: 747: {;motor.c: 748: --motor_current_speed;
 47715  00B9BC  0657               	decf	_motor_current_speed,f,c	;volatile
 47716  00B9BE  A0D8               	btfss	status,0,c
 47717  00B9C0  0658               	decf	_motor_current_speed+1,f,c	;volatile
 47718  00B9C2                     i2l2591:
 47719                           
 47720                           ; BSR set to: 1
 47721                           ;motor.c: 749: };motor.c: 752: if((motor_mode==MOTOR_MODE_PWM) && (motor_postscaler_look
      +                          up[motor_current_speed]>0))
 47722                           
 47723                           ; BSR set to: 1
 47724  00B9C2  0549               	decf	_motor_mode& (0+255),w,b	;volatile
 47725  00B9C4  A4D8               	btfss	status,2,c
 47726  00B9C6  D024               	goto	i2l2592
 47727                           
 47728                           ; BSR set to: 1
 47729  00B9C8  0E2F               	movlw	low _motor_postscaler_lookup
 47730  00B9CA  2457               	addwf	_motor_current_speed,w,c	;volatile
 47731  00B9CC  6EF6               	movwf	tblptrl,c
 47732  00B9CE  0E98               	movlw	high _motor_postscaler_lookup
 47733  00B9D0  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 47734  00B9D2  6EF7               	movwf	tblptrh,c
 47735  00B9D4                     	if	1	;There are 3 active tblptr bytes
 47736  00B9D4  6AF8               	clrf	tblptru,c
 47737  00B9D6  0E00               	movlw	low (__mediumconst shr (0+16))
 47738  00B9D8  22F8               	addwfc	tblptru,f,c
 47739  00B9DA                     	endif
 47740  00B9DA  0008               	tblrd		*
 47741  00B9DC  50F5               	movf	tablat,w,c
 47742  00B9DE  0900               	iorlw	0
 47743  00B9E0  B4D8               	btfsc	status,2,c
 47744  00B9E2  D016               	goto	i2l2592
 47745                           
 47746                           ; BSR set to: 1
 47747                           ;motor.c: 753: {;motor.c: 755: motor_mode = MOTOR_MODE_MANUAL;
 47748  00B9E4  0E00               	movlw	0
 47749  00B9E6  6F49               	movwf	_motor_mode& (0+255),b	;volatile
 47750                           
 47751                           ; BSR set to: 1
 47752                           ;motor.c: 758: LATBbits.LB1 = 1;
 47753  00B9E8  828A               	bsf	3978,1,c	;volatile
 47754                           
 47755                           ;motor.c: 759: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 47756  00B9EA  0E55               	movlw	85
 47757  00B9EC  6EA7               	movwf	4007,c	;volsfr
 47758  00B9EE  0EAA               	movlw	170
 47759  00B9F0  6EA7               	movwf	4007,c	;volsfr
 47760                           
 47761                           ; BSR set to: 1
 47762  00B9F2  010E               	movlb	14	; () banked
 47763  00B9F4  91BF               	bcf	191,0,b	;volatile
 47764                           
 47765                           ;motor.c: 760: RPOR4 = 0;
 47766  00B9F6  0E00               	movlw	0
 47767  00B9F8  6FC4               	movwf	196,b	;volatile
 47768                           
 47769                           ;motor.c: 761: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 47770  00B9FA  0E55               	movlw	85
 47771  00B9FC  6EA7               	movwf	4007,c	;volsfr
 47772  00B9FE  0EAA               	movlw	170
 47773  00BA00  6EA7               	movwf	4007,c	;volsfr
 47774                           
 47775                           ; BSR set to: 14
 47776  00BA02  81BF               	bsf	191,0,b	;volatile
 47777                           
 47778                           ;motor.c: 764: TMR2 = 0;
 47779  00BA04  0E00               	movlw	0
 47780  00BA06  6ECC               	movwf	4044,c	;volatile
 47781                           
 47782                           ; BSR set to: 14
 47783                           ;motor.c: 767: CCP1CONbits.CCP1M = 0b0000;
 47784  00BA08  90BA               	bcf	4026,0,c	;volatile
 47785  00BA0A  92BA               	bcf	4026,1,c	;volatile
 47786  00BA0C  94BA               	bcf	4026,2,c	;volatile
 47787  00BA0E  96BA               	bcf	4026,3,c	;volatile
 47788  00BA10                     i2l2592:
 47789                           
 47790                           ;motor.c: 768: };motor.c: 772: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_s
      +                          peed];
 47791                           
 47792                           ; BSR set to: 14
 47793  00BA10  0EFD               	movlw	low _motor_prescaler_lookup
 47794  00BA12  2457               	addwf	_motor_current_speed,w,c	;volatile
 47795  00BA14  6EF6               	movwf	tblptrl,c
 47796  00BA16  0E9B               	movlw	high _motor_prescaler_lookup
 47797  00BA18  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 47798  00BA1A  6EF7               	movwf	tblptrh,c
 47799  00BA1C                     	if	1	;There are 3 active tblptr bytes
 47800  00BA1C  6AF8               	clrf	tblptru,c
 47801  00BA1E  0E00               	movlw	low (__mediumconst shr (0+16))
 47802  00BA20  22F8               	addwfc	tblptru,f,c
 47803  00BA22                     	endif
 47804  00BA22  0008               	tblrd		*
 47805  00BA24  CFF5 F031          	movff	tablat,??_motor_isr
 47806  00BA28  50CA               	movf	4042,w,c	;volatile
 47807  00BA2A  1831               	xorwf	??_motor_isr,w,c
 47808  00BA2C  0BFC               	andlw	-4
 47809  00BA2E  1831               	xorwf	??_motor_isr,w,c
 47810  00BA30  6ECA               	movwf	4042,c	;volatile
 47811                           
 47812                           ;motor.c: 774: PR2 = motor_period_lookup[motor_current_speed];
 47813  00BA32  0E16               	movlw	low _motor_period_lookup
 47814  00BA34  2457               	addwf	_motor_current_speed,w,c	;volatile
 47815  00BA36  6EF6               	movwf	tblptrl,c
 47816  00BA38  0E9A               	movlw	high _motor_period_lookup
 47817  00BA3A  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 47818  00BA3C  6EF7               	movwf	tblptrh,c
 47819  00BA3E                     	if	1	;There are 3 active tblptr bytes
 47820  00BA3E  6AF8               	clrf	tblptru,c
 47821  00BA40  0E00               	movlw	low (__mediumconst shr (0+16))
 47822  00BA42  22F8               	addwfc	tblptru,f,c
 47823  00BA44                     	endif
 47824  00BA44  0008               	tblrd		*
 47825  00BA46  CFF5 FFCB          	movff	tablat,4043	;volatile
 47826                           
 47827                           ;motor.c: 776: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 47828  00BA4A  0E2F               	movlw	low _motor_postscaler_lookup
 47829  00BA4C  2457               	addwf	_motor_current_speed,w,c	;volatile
 47830  00BA4E  6EF6               	movwf	tblptrl,c
 47831  00BA50  0E98               	movlw	high _motor_postscaler_lookup
 47832  00BA52  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 47833  00BA54  6EF7               	movwf	tblptrh,c
 47834  00BA56                     	if	1	;There are 3 active tblptr bytes
 47835  00BA56  6AF8               	clrf	tblptru,c
 47836  00BA58  0E00               	movlw	low (__mediumconst shr (0+16))
 47837  00BA5A  22F8               	addwfc	tblptru,f,c
 47838  00BA5C                     	endif
 47839  00BA5C  0008               	tblrd		*
 47840  00BA5E  CFF5 F031          	movff	tablat,??_motor_isr
 47841  00BA62  4631               	rlncf	??_motor_isr,f,c
 47842  00BA64  4631               	rlncf	??_motor_isr,f,c
 47843  00BA66  4631               	rlncf	??_motor_isr,f,c
 47844  00BA68  50CA               	movf	4042,w,c	;volatile
 47845  00BA6A  1831               	xorwf	??_motor_isr,w,c
 47846  00BA6C  0B87               	andlw	-121
 47847  00BA6E  1831               	xorwf	??_motor_isr,w,c
 47848  00BA70  6ECA               	movwf	4042,c	;volatile
 47849                           
 47850                           ;motor.c: 778: CCPR1L = PR2>>1;
 47851  00BA72  90D8               	bcf	status,0,c
 47852  00BA74  30CB               	rrcf	4043,w,c	;volatile
 47853  00BA76  6EBB               	movwf	4027,c	;volatile
 47854                           
 47855                           ;motor.c: 781: if(motor_current_speed>0)
 47856  00BA78  5057               	movf	_motor_current_speed,w,c	;volatile
 47857  00BA7A  1058               	iorwf	_motor_current_speed+1,w,c	;volatile
 47858  00BA7C  B4D8               	btfsc	status,2,c
 47859  00BA7E  D060               	goto	i2l2593
 47860                           
 47861                           ;motor.c: 782: {;motor.c: 783: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed] - motor_steps_lookup[motor_current_speed-1];
 47862  00BA80  0EFE               	movlw	254
 47863  00BA82  6E31               	movwf	??_motor_isr& (0+255),c
 47864  00BA84  0EFF               	movlw	255
 47865  00BA86  6E32               	movwf	(??_motor_isr+1)& (0+255),c
 47866  00BA88  C057  F033         	movff	_motor_current_speed,??_motor_isr+2	;volatile
 47867  00BA8C  C058  F034         	movff	_motor_current_speed+1,??_motor_isr+3	;volatile
 47868  00BA90  90D8               	bcf	status,0,c
 47869  00BA92  3633               	rlcf	??_motor_isr+2,f,c
 47870  00BA94  3634               	rlcf	??_motor_isr+3,f,c
 47871  00BA96  5031               	movf	??_motor_isr,w,c
 47872  00BA98  2633               	addwf	??_motor_isr+2,f,c
 47873  00BA9A  5032               	movf	??_motor_isr+1,w,c
 47874  00BA9C  2234               	addwfc	??_motor_isr+3,f,c
 47875  00BA9E  0E61               	movlw	low _motor_steps_lookup
 47876  00BAA0  2433               	addwf	??_motor_isr+2,w,c
 47877  00BAA2  6EF6               	movwf	tblptrl,c
 47878  00BAA4  0E94               	movlw	high _motor_steps_lookup
 47879  00BAA6  2034               	addwfc	??_motor_isr+3,w,c
 47880  00BAA8  6EF7               	movwf	tblptrh,c
 47881  00BAAA                     	if	1	;There are 3 active tblptr bytes
 47882  00BAAA  6AF8               	clrf	tblptru,c
 47883  00BAAC  0E00               	movlw	low (__mediumconst shr (0+16))
 47884  00BAAE  22F8               	addwfc	tblptru,f,c
 47885  00BAB0                     	endif
 47886  00BAB0  0009               	tblrd		*+
 47887  00BAB2  CFF5 F035          	movff	tablat,??_motor_isr+4
 47888  00BAB6  0009               	tblrd		*+
 47889  00BAB8  CFF5 F036          	movff	tablat,??_motor_isr+5
 47890  00BABC  5035               	movf	??_motor_isr+4,w,c
 47891  00BABE  6E37               	movwf	(??_motor_isr+6)& (0+255),c
 47892  00BAC0  5036               	movf	??_motor_isr+5,w,c
 47893  00BAC2  6E38               	movwf	(??_motor_isr+7)& (0+255),c
 47894  00BAC4  6A39               	clrf	(??_motor_isr+8)& (0+255),c
 47895  00BAC6  6A3A               	clrf	(??_motor_isr+9)& (0+255),c
 47896  00BAC8  1E37               	comf	??_motor_isr+6,f,c
 47897  00BACA  1E38               	comf	??_motor_isr+7,f,c
 47898  00BACC  1E39               	comf	??_motor_isr+8,f,c
 47899  00BACE  1E3A               	comf	??_motor_isr+9,f,c
 47900  00BAD0  2A37               	incf	??_motor_isr+6,f,c
 47901  00BAD2  0E00               	movlw	0
 47902  00BAD4  2238               	addwfc	??_motor_isr+7,f,c
 47903  00BAD6  2239               	addwfc	??_motor_isr+8,f,c
 47904  00BAD8  223A               	addwfc	??_motor_isr+9,f,c
 47905  00BADA  90D8               	bcf	status,0,c
 47906  00BADC  3457               	rlcf	_motor_current_speed,w,c	;volatile
 47907  00BADE  6EF6               	movwf	tblptrl,c
 47908  00BAE0  3458               	rlcf	_motor_current_speed+1,w,c	;volatile
 47909  00BAE2  6EF7               	movwf	tblptrh,c
 47910  00BAE4  0E61               	movlw	low _motor_steps_lookup
 47911  00BAE6  26F6               	addwf	tblptrl,f,c
 47912  00BAE8  0E94               	movlw	high _motor_steps_lookup
 47913  00BAEA  22F7               	addwfc	tblptrh,f,c
 47914  00BAEC                     	if	1	;There are 3 active tblptr bytes
 47915  00BAEC  6AF8               	clrf	tblptru,c
 47916  00BAEE  0E00               	movlw	low (__mediumconst shr (0+16))
 47917  00BAF0  22F8               	addwfc	tblptru,f,c
 47918  00BAF2                     	endif
 47919  00BAF2  0009               	tblrd		*+
 47920  00BAF4  CFF5 F03B          	movff	tablat,??_motor_isr+10
 47921  00BAF8  0009               	tblrd		*+
 47922  00BAFA  CFF5 F03C          	movff	tablat,??_motor_isr+11
 47923  00BAFE  503B               	movf	??_motor_isr+10,w,c
 47924  00BB00  2437               	addwf	??_motor_isr+6,w,c
 47925  00BB02  6E3D               	movwf	(??_motor_isr+12)& (0+255),c
 47926  00BB04  503C               	movf	??_motor_isr+11,w,c
 47927  00BB06  2038               	addwfc	??_motor_isr+7,w,c
 47928  00BB08  6E3E               	movwf	(??_motor_isr+13)& (0+255),c
 47929  00BB0A  0E00               	movlw	0
 47930  00BB0C  2039               	addwfc	??_motor_isr+8,w,c
 47931  00BB0E  6E3F               	movwf	(??_motor_isr+14)& (0+255),c
 47932  00BB10  0E00               	movlw	0
 47933  00BB12  203A               	addwfc	??_motor_isr+9,w,c
 47934  00BB14  6E40               	movwf	(??_motor_isr+15)& (0+255),c
 47935  00BB16  0101               	movlb	1	; () banked
 47936  00BB18  511F               	movf	_motor_current_stepcount& (0+255),w,b	;volatile
 47937  00BB1A  243D               	addwf	??_motor_isr+12,w,c
 47938  00BB1C  0102               	movlb	2	; () banked
 47939  00BB1E  6F38               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 47940  00BB20  0101               	movlb	1	; () banked
 47941  00BB22  5120               	movf	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 47942  00BB24  203E               	addwfc	??_motor_isr+13,w,c
 47943  00BB26  0102               	movlb	2	; () banked
 47944  00BB28  6F39               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 47945  00BB2A  0101               	movlb	1	; () banked
 47946  00BB2C  5121               	movf	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 47947  00BB2E  203F               	addwfc	??_motor_isr+14,w,c
 47948  00BB30  0102               	movlb	2	; () banked
 47949  00BB32  6F3A               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 47950  00BB34  0101               	movlb	1	; () banked
 47951  00BB36  5122               	movf	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 47952  00BB38  2040               	addwfc	??_motor_isr+15,w,c
 47953  00BB3A  0102               	movlb	2	; () banked
 47954  00BB3C  6F3B               	movwf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 47955                           
 47956                           ;motor.c: 784: }
 47957  00BB3E  0012               	return	
 47958  00BB40                     i2l2593:
 47959                           
 47960                           ;motor.c: 785: else;motor.c: 786: {;motor.c: 787: motor_next_speed_check = motor_current
      +                          _stepcount + motor_steps_lookup[motor_current_speed];
 47961                           
 47962                           ; BSR set to: 2
 47963  00BB40  90D8               	bcf	status,0,c
 47964  00BB42  3457               	rlcf	_motor_current_speed,w,c	;volatile
 47965  00BB44  6EF6               	movwf	tblptrl,c
 47966  00BB46  3458               	rlcf	_motor_current_speed+1,w,c	;volatile
 47967  00BB48  6EF7               	movwf	tblptrh,c
 47968  00BB4A  0E61               	movlw	low _motor_steps_lookup
 47969  00BB4C  26F6               	addwf	tblptrl,f,c
 47970  00BB4E  0E94               	movlw	high _motor_steps_lookup
 47971  00BB50  22F7               	addwfc	tblptrh,f,c
 47972  00BB52                     	if	1	;There are 3 active tblptr bytes
 47973  00BB52  6AF8               	clrf	tblptru,c
 47974  00BB54  0E00               	movlw	low (__mediumconst shr (0+16))
 47975  00BB56  22F8               	addwfc	tblptru,f,c
 47976  00BB58                     	endif
 47977  00BB58  0009               	tblrd		*+
 47978  00BB5A  CFF5 F031          	movff	tablat,??_motor_isr
 47979  00BB5E  0009               	tblrd		*+
 47980  00BB60  CFF5 F032          	movff	tablat,??_motor_isr+1
 47981  00BB64  5031               	movf	??_motor_isr,w,c
 47982  00BB66  0101               	movlb	1	; () banked
 47983  00BB68  251F               	addwf	_motor_current_stepcount& (0+255),w,b	;volatile
 47984  00BB6A  0102               	movlb	2	; () banked
 47985  00BB6C  6F38               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 47986  00BB6E  5032               	movf	??_motor_isr+1,w,c
 47987  00BB70  0101               	movlb	1	; () banked
 47988  00BB72  2120               	addwfc	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 47989  00BB74  0102               	movlb	2	; () banked
 47990  00BB76  6F39               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 47991  00BB78  0E00               	movlw	0
 47992  00BB7A  0101               	movlb	1	; () banked
 47993  00BB7C  2121               	addwfc	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 47994  00BB7E  0102               	movlb	2	; () banked
 47995  00BB80  6F3A               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 47996  00BB82  0E00               	movlw	0
 47997  00BB84  0101               	movlb	1	; () banked
 47998  00BB86  2122               	addwfc	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 47999  00BB88  0102               	movlb	2	; () banked
 48000  00BB8A  6F3B               	movwf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 48001                           
 48002                           ; BSR set to: 2
 48003                           ;motor.c: 788: };motor.c: 789: }
 48004  00BB8C  0012               	return	
 48005  00BB8E                     i2l2588:
 48006                           
 48007                           ;motor.c: 790: else if((motor_current_speed==motor_maximum_speed) || (steps_until_stands
      +                          till_if_accelerate>=steps_remaining))
 48008                           
 48009                           ; BSR set to: 2
 48010  00BB8E  0101               	movlb	1	; () banked
 48011  00BB90  5137               	movf	_motor_maximum_speed& (0+255),w,b
 48012  00BB92  1857               	xorwf	_motor_current_speed,w,c	;volatile
 48013  00BB94  E104               	bnz	i2u1925_40
 48014  00BB96  5138               	movf	(_motor_maximum_speed+1)& (0+255),w,b
 48015  00BB98  1858               	xorwf	_motor_current_speed+1,w,c	;volatile
 48016  00BB9A  B4D8               	btfsc	status,2,c
 48017  00BB9C  D010               	goto	i2u1926_40
 48018  00BB9E                     i2u1925_40:
 48019                           
 48020                           ; BSR set to: 1
 48021  00BB9E  5043               	movf	motor_isr@steps_until_standstill_if_accelerate,w,c
 48022  00BBA0  6E31               	movwf	??_motor_isr& (0+255),c
 48023  00BBA2  5044               	movf	motor_isr@steps_until_standstill_if_accelerate+1,w,c
 48024  00BBA4  6E32               	movwf	(??_motor_isr+1)& (0+255),c
 48025  00BBA6  6A33               	clrf	(??_motor_isr+2)& (0+255),c
 48026  00BBA8  6A34               	clrf	(??_motor_isr+3)& (0+255),c
 48027  00BBAA  5045               	movf	motor_isr@steps_remaining,w,c
 48028  00BBAC  5C31               	subwf	??_motor_isr,w,c
 48029  00BBAE  5046               	movf	motor_isr@steps_remaining+1,w,c
 48030  00BBB0  5832               	subwfb	??_motor_isr+1,w,c
 48031  00BBB2  5047               	movf	motor_isr@steps_remaining+2,w,c
 48032  00BBB4  5833               	subwfb	??_motor_isr+2,w,c
 48033  00BBB6  5048               	movf	motor_isr@steps_remaining+3,w,c
 48034  00BBB8  5834               	subwfb	??_motor_isr+3,w,c
 48035  00BBBA  A0D8               	btfss	status,0,c
 48036  00BBBC  D05B               	goto	i2l2596
 48037  00BBBE                     i2u1926_40:
 48038                           
 48039                           ; BSR set to: 1
 48040                           ;motor.c: 791: {;motor.c: 794: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed+1] - motor_steps_lookup[motor_current_speed];
 48041                           
 48042                           ; BSR set to: 1
 48043  00BBBE  90D8               	bcf	status,0,c
 48044  00BBC0  3457               	rlcf	_motor_current_speed,w,c	;volatile
 48045  00BBC2  6EF6               	movwf	tblptrl,c
 48046  00BBC4  3458               	rlcf	_motor_current_speed+1,w,c	;volatile
 48047  00BBC6  6EF7               	movwf	tblptrh,c
 48048  00BBC8  0E61               	movlw	low _motor_steps_lookup
 48049  00BBCA  26F6               	addwf	tblptrl,f,c
 48050  00BBCC  0E94               	movlw	high _motor_steps_lookup
 48051  00BBCE  22F7               	addwfc	tblptrh,f,c
 48052  00BBD0                     	if	1	;There are 3 active tblptr bytes
 48053  00BBD0  6AF8               	clrf	tblptru,c
 48054  00BBD2  0E00               	movlw	low (__mediumconst shr (0+16))
 48055  00BBD4  22F8               	addwfc	tblptru,f,c
 48056  00BBD6                     	endif
 48057  00BBD6  0009               	tblrd		*+
 48058  00BBD8  CFF5 F031          	movff	tablat,??_motor_isr
 48059  00BBDC  0009               	tblrd		*+
 48060  00BBDE  CFF5 F032          	movff	tablat,??_motor_isr+1
 48061  00BBE2  5031               	movf	??_motor_isr,w,c
 48062  00BBE4  6E33               	movwf	(??_motor_isr+2)& (0+255),c
 48063  00BBE6  5032               	movf	??_motor_isr+1,w,c
 48064  00BBE8  6E34               	movwf	(??_motor_isr+3)& (0+255),c
 48065  00BBEA  6A35               	clrf	(??_motor_isr+4)& (0+255),c
 48066  00BBEC  6A36               	clrf	(??_motor_isr+5)& (0+255),c
 48067  00BBEE  1E33               	comf	??_motor_isr+2,f,c
 48068  00BBF0  1E34               	comf	??_motor_isr+3,f,c
 48069  00BBF2  1E35               	comf	??_motor_isr+4,f,c
 48070  00BBF4  1E36               	comf	??_motor_isr+5,f,c
 48071  00BBF6  2A33               	incf	??_motor_isr+2,f,c
 48072  00BBF8  0E00               	movlw	0
 48073  00BBFA  2234               	addwfc	??_motor_isr+3,f,c
 48074  00BBFC  2235               	addwfc	??_motor_isr+4,f,c
 48075  00BBFE  2236               	addwfc	??_motor_isr+5,f,c
 48076  00BC00  C057  F037         	movff	_motor_current_speed,??_motor_isr+6	;volatile
 48077  00BC04  C058  F038         	movff	_motor_current_speed+1,??_motor_isr+7	;volatile
 48078  00BC08  90D8               	bcf	status,0,c
 48079  00BC0A  3637               	rlcf	??_motor_isr+6,f,c
 48080  00BC0C  3638               	rlcf	??_motor_isr+7,f,c
 48081  00BC0E  0E02               	movlw	2
 48082  00BC10  2637               	addwf	??_motor_isr+6,f,c
 48083  00BC12  0E00               	movlw	0
 48084  00BC14  2238               	addwfc	??_motor_isr+7,f,c
 48085  00BC16  0E61               	movlw	low _motor_steps_lookup
 48086  00BC18  2437               	addwf	??_motor_isr+6,w,c
 48087  00BC1A  6EF6               	movwf	tblptrl,c
 48088  00BC1C  0E94               	movlw	high _motor_steps_lookup
 48089  00BC1E  2038               	addwfc	??_motor_isr+7,w,c
 48090  00BC20  6EF7               	movwf	tblptrh,c
 48091  00BC22                     	if	1	;There are 3 active tblptr bytes
 48092  00BC22  6AF8               	clrf	tblptru,c
 48093  00BC24  0E00               	movlw	low (__mediumconst shr (0+16))
 48094  00BC26  22F8               	addwfc	tblptru,f,c
 48095  00BC28                     	endif
 48096  00BC28  0009               	tblrd		*+
 48097  00BC2A  CFF5 F039          	movff	tablat,??_motor_isr+8
 48098  00BC2E  0009               	tblrd		*+
 48099  00BC30  CFF5 F03A          	movff	tablat,??_motor_isr+9
 48100  00BC34  5039               	movf	??_motor_isr+8,w,c
 48101  00BC36  2433               	addwf	??_motor_isr+2,w,c
 48102  00BC38  6E3B               	movwf	(??_motor_isr+10)& (0+255),c
 48103  00BC3A  503A               	movf	??_motor_isr+9,w,c
 48104  00BC3C  2034               	addwfc	??_motor_isr+3,w,c
 48105  00BC3E  6E3C               	movwf	(??_motor_isr+11)& (0+255),c
 48106  00BC40  0E00               	movlw	0
 48107  00BC42  2035               	addwfc	??_motor_isr+4,w,c
 48108  00BC44  6E3D               	movwf	(??_motor_isr+12)& (0+255),c
 48109  00BC46  0E00               	movlw	0
 48110  00BC48  2036               	addwfc	??_motor_isr+5,w,c
 48111  00BC4A  6E3E               	movwf	(??_motor_isr+13)& (0+255),c
 48112  00BC4C  511F               	movf	_motor_current_stepcount& (0+255),w,b	;volatile
 48113  00BC4E  243B               	addwf	??_motor_isr+10,w,c
 48114  00BC50  0102               	movlb	2	; () banked
 48115  00BC52  6F38               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 48116  00BC54  0101               	movlb	1	; () banked
 48117  00BC56  5120               	movf	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 48118  00BC58  203C               	addwfc	??_motor_isr+11,w,c
 48119  00BC5A  0102               	movlb	2	; () banked
 48120  00BC5C  6F39               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 48121  00BC5E  0101               	movlb	1	; () banked
 48122  00BC60  5121               	movf	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 48123  00BC62  203D               	addwfc	??_motor_isr+12,w,c
 48124  00BC64  0102               	movlb	2	; () banked
 48125  00BC66  6F3A               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 48126  00BC68  0101               	movlb	1	; () banked
 48127  00BC6A  5122               	movf	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 48128  00BC6C  203E               	addwfc	??_motor_isr+13,w,c
 48129  00BC6E  0102               	movlb	2	; () banked
 48130  00BC70  6F3B               	movwf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 48131                           
 48132                           ;motor.c: 795: }
 48133  00BC72  0012               	return	
 48134  00BC74                     i2l2596:
 48135                           
 48136                           ;motor.c: 796: else;motor.c: 797: {;motor.c: 799: ++motor_current_speed;
 48137                           
 48138                           ; BSR set to: 2
 48139  00BC74  4A57               	infsnz	_motor_current_speed,f,c	;volatile
 48140  00BC76  2A58               	incf	_motor_current_speed+1,f,c	;volatile
 48141                           
 48142                           ;motor.c: 803: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_speed];
 48143  00BC78  0EFD               	movlw	low _motor_prescaler_lookup
 48144  00BC7A  2457               	addwf	_motor_current_speed,w,c	;volatile
 48145  00BC7C  6EF6               	movwf	tblptrl,c
 48146  00BC7E  0E9B               	movlw	high _motor_prescaler_lookup
 48147  00BC80  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 48148  00BC82  6EF7               	movwf	tblptrh,c
 48149  00BC84                     	if	1	;There are 3 active tblptr bytes
 48150  00BC84  6AF8               	clrf	tblptru,c
 48151  00BC86  0E00               	movlw	low (__mediumconst shr (0+16))
 48152  00BC88  22F8               	addwfc	tblptru,f,c
 48153  00BC8A                     	endif
 48154  00BC8A  0008               	tblrd		*
 48155  00BC8C  CFF5 F031          	movff	tablat,??_motor_isr
 48156  00BC90  50CA               	movf	4042,w,c	;volatile
 48157  00BC92  1831               	xorwf	??_motor_isr,w,c
 48158  00BC94  0BFC               	andlw	-4
 48159  00BC96  1831               	xorwf	??_motor_isr,w,c
 48160  00BC98  6ECA               	movwf	4042,c	;volatile
 48161                           
 48162                           ;motor.c: 805: PR2 = motor_period_lookup[motor_current_speed];
 48163  00BC9A  0E16               	movlw	low _motor_period_lookup
 48164  00BC9C  2457               	addwf	_motor_current_speed,w,c	;volatile
 48165  00BC9E  6EF6               	movwf	tblptrl,c
 48166  00BCA0  0E9A               	movlw	high _motor_period_lookup
 48167  00BCA2  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 48168  00BCA4  6EF7               	movwf	tblptrh,c
 48169  00BCA6                     	if	1	;There are 3 active tblptr bytes
 48170  00BCA6  6AF8               	clrf	tblptru,c
 48171  00BCA8  0E00               	movlw	low (__mediumconst shr (0+16))
 48172  00BCAA  22F8               	addwfc	tblptru,f,c
 48173  00BCAC                     	endif
 48174  00BCAC  0008               	tblrd		*
 48175  00BCAE  CFF5 FFCB          	movff	tablat,4043	;volatile
 48176                           
 48177                           ;motor.c: 807: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 48178  00BCB2  0E2F               	movlw	low _motor_postscaler_lookup
 48179  00BCB4  2457               	addwf	_motor_current_speed,w,c	;volatile
 48180  00BCB6  6EF6               	movwf	tblptrl,c
 48181  00BCB8  0E98               	movlw	high _motor_postscaler_lookup
 48182  00BCBA  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 48183  00BCBC  6EF7               	movwf	tblptrh,c
 48184  00BCBE                     	if	1	;There are 3 active tblptr bytes
 48185  00BCBE  6AF8               	clrf	tblptru,c
 48186  00BCC0  0E00               	movlw	low (__mediumconst shr (0+16))
 48187  00BCC2  22F8               	addwfc	tblptru,f,c
 48188  00BCC4                     	endif
 48189  00BCC4  0008               	tblrd		*
 48190  00BCC6  CFF5 F031          	movff	tablat,??_motor_isr
 48191  00BCCA  4631               	rlncf	??_motor_isr,f,c
 48192  00BCCC  4631               	rlncf	??_motor_isr,f,c
 48193  00BCCE  4631               	rlncf	??_motor_isr,f,c
 48194  00BCD0  50CA               	movf	4042,w,c	;volatile
 48195  00BCD2  1831               	xorwf	??_motor_isr,w,c
 48196  00BCD4  0B87               	andlw	-121
 48197  00BCD6  1831               	xorwf	??_motor_isr,w,c
 48198  00BCD8  6ECA               	movwf	4042,c	;volatile
 48199                           
 48200                           ;motor.c: 809: CCPR1L = PR2>>1;
 48201  00BCDA  90D8               	bcf	status,0,c
 48202  00BCDC  30CB               	rrcf	4043,w,c	;volatile
 48203  00BCDE  6EBB               	movwf	4027,c	;volatile
 48204                           
 48205                           ;motor.c: 811: if((motor_mode==MOTOR_MODE_MANUAL) && (motor_postscaler_lookup[motor_curr
      +                          ent_speed]==0))
 48206  00BCE0  0101               	movlb	1	; () banked
 48207  00BCE2  5149               	movf	_motor_mode& (0+255),w,b	;volatile
 48208  00BCE4  A4D8               	btfss	status,2,c
 48209  00BCE6  D021               	goto	i2l2600
 48210                           
 48211                           ; BSR set to: 1
 48212  00BCE8  0E2F               	movlw	low _motor_postscaler_lookup
 48213  00BCEA  2457               	addwf	_motor_current_speed,w,c	;volatile
 48214  00BCEC  6EF6               	movwf	tblptrl,c
 48215  00BCEE  0E98               	movlw	high _motor_postscaler_lookup
 48216  00BCF0  2058               	addwfc	_motor_current_speed+1,w,c	;volatile
 48217  00BCF2  6EF7               	movwf	tblptrh,c
 48218  00BCF4                     	if	1	;There are 3 active tblptr bytes
 48219  00BCF4  6AF8               	clrf	tblptru,c
 48220  00BCF6  0E00               	movlw	low (__mediumconst shr (0+16))
 48221  00BCF8  22F8               	addwfc	tblptru,f,c
 48222  00BCFA                     	endif
 48223  00BCFA  0008               	tblrd		*
 48224  00BCFC  50F5               	movf	tablat,w,c
 48225  00BCFE  0900               	iorlw	0
 48226  00BD00  A4D8               	btfss	status,2,c
 48227  00BD02  D013               	goto	i2l2600
 48228                           
 48229                           ; BSR set to: 1
 48230                           ;motor.c: 812: {;motor.c: 814: motor_mode = MOTOR_MODE_PWM;
 48231  00BD04  0E01               	movlw	1
 48232  00BD06  6F49               	movwf	_motor_mode& (0+255),b	;volatile
 48233                           
 48234                           ;motor.c: 817: CCP1CONbits.CCP1M = 0b1100;
 48235  00BD08  50BA               	movf	4026,w,c	;volatile
 48236  00BD0A  0BF0               	andlw	-16
 48237  00BD0C  090C               	iorlw	12
 48238  00BD0E  6EBA               	movwf	4026,c	;volatile
 48239                           
 48240                           ;motor.c: 820: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 48241  00BD10  0E55               	movlw	85
 48242  00BD12  6EA7               	movwf	4007,c	;volsfr
 48243  00BD14  0EAA               	movlw	170
 48244  00BD16  6EA7               	movwf	4007,c	;volsfr
 48245                           
 48246                           ; BSR set to: 1
 48247  00BD18  010E               	movlb	14	; () banked
 48248  00BD1A  91BF               	bcf	191,0,b	;volatile
 48249                           
 48250                           ;motor.c: 821: RPOR4 = 14;
 48251  00BD1C  0E0E               	movlw	14
 48252  00BD1E  6FC4               	movwf	196,b	;volatile
 48253                           
 48254                           ;motor.c: 822: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 48255  00BD20  0E55               	movlw	85
 48256  00BD22  6EA7               	movwf	4007,c	;volsfr
 48257  00BD24  0EAA               	movlw	170
 48258  00BD26  6EA7               	movwf	4007,c	;volsfr
 48259                           
 48260                           ; BSR set to: 14
 48261  00BD28  81BF               	bsf	191,0,b	;volatile
 48262  00BD2A                     i2l2600:
 48263                           
 48264                           ;motor.c: 823: };motor.c: 826: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed+1] - motor_steps_lookup[motor_current_speed];
 48265                           
 48266                           ; BSR set to: 14
 48267  00BD2A  90D8               	bcf	status,0,c
 48268  00BD2C  3457               	rlcf	_motor_current_speed,w,c	;volatile
 48269  00BD2E  6EF6               	movwf	tblptrl,c
 48270  00BD30  3458               	rlcf	_motor_current_speed+1,w,c	;volatile
 48271  00BD32  6EF7               	movwf	tblptrh,c
 48272  00BD34  0E61               	movlw	low _motor_steps_lookup
 48273  00BD36  26F6               	addwf	tblptrl,f,c
 48274  00BD38  0E94               	movlw	high _motor_steps_lookup
 48275  00BD3A  22F7               	addwfc	tblptrh,f,c
 48276  00BD3C                     	if	1	;There are 3 active tblptr bytes
 48277  00BD3C  6AF8               	clrf	tblptru,c
 48278  00BD3E  0E00               	movlw	low (__mediumconst shr (0+16))
 48279  00BD40  22F8               	addwfc	tblptru,f,c
 48280  00BD42                     	endif
 48281  00BD42  0009               	tblrd		*+
 48282  00BD44  CFF5 F031          	movff	tablat,??_motor_isr
 48283  00BD48  0009               	tblrd		*+
 48284  00BD4A  CFF5 F032          	movff	tablat,??_motor_isr+1
 48285  00BD4E  5031               	movf	??_motor_isr,w,c
 48286  00BD50  6E33               	movwf	(??_motor_isr+2)& (0+255),c
 48287  00BD52  5032               	movf	??_motor_isr+1,w,c
 48288  00BD54  6E34               	movwf	(??_motor_isr+3)& (0+255),c
 48289  00BD56  6A35               	clrf	(??_motor_isr+4)& (0+255),c
 48290  00BD58  6A36               	clrf	(??_motor_isr+5)& (0+255),c
 48291  00BD5A  1E33               	comf	??_motor_isr+2,f,c
 48292  00BD5C  1E34               	comf	??_motor_isr+3,f,c
 48293  00BD5E  1E35               	comf	??_motor_isr+4,f,c
 48294  00BD60  1E36               	comf	??_motor_isr+5,f,c
 48295  00BD62  2A33               	incf	??_motor_isr+2,f,c
 48296  00BD64  0E00               	movlw	0
 48297  00BD66  2234               	addwfc	??_motor_isr+3,f,c
 48298  00BD68  2235               	addwfc	??_motor_isr+4,f,c
 48299  00BD6A  2236               	addwfc	??_motor_isr+5,f,c
 48300  00BD6C  C057  F037         	movff	_motor_current_speed,??_motor_isr+6	;volatile
 48301  00BD70  C058  F038         	movff	_motor_current_speed+1,??_motor_isr+7	;volatile
 48302  00BD74  90D8               	bcf	status,0,c
 48303  00BD76  3637               	rlcf	??_motor_isr+6,f,c
 48304  00BD78  3638               	rlcf	??_motor_isr+7,f,c
 48305  00BD7A  0E02               	movlw	2
 48306  00BD7C  2637               	addwf	??_motor_isr+6,f,c
 48307  00BD7E  0E00               	movlw	0
 48308  00BD80  2238               	addwfc	??_motor_isr+7,f,c
 48309  00BD82  0E61               	movlw	low _motor_steps_lookup
 48310  00BD84  2437               	addwf	??_motor_isr+6,w,c
 48311  00BD86  6EF6               	movwf	tblptrl,c
 48312  00BD88  0E94               	movlw	high _motor_steps_lookup
 48313  00BD8A  2038               	addwfc	??_motor_isr+7,w,c
 48314  00BD8C  6EF7               	movwf	tblptrh,c
 48315  00BD8E                     	if	1	;There are 3 active tblptr bytes
 48316  00BD8E  6AF8               	clrf	tblptru,c
 48317  00BD90  0E00               	movlw	low (__mediumconst shr (0+16))
 48318  00BD92  22F8               	addwfc	tblptru,f,c
 48319  00BD94                     	endif
 48320  00BD94  0009               	tblrd		*+
 48321  00BD96  CFF5 F039          	movff	tablat,??_motor_isr+8
 48322  00BD9A  0009               	tblrd		*+
 48323  00BD9C  CFF5 F03A          	movff	tablat,??_motor_isr+9
 48324  00BDA0  5039               	movf	??_motor_isr+8,w,c
 48325  00BDA2  2433               	addwf	??_motor_isr+2,w,c
 48326  00BDA4  6E3B               	movwf	(??_motor_isr+10)& (0+255),c
 48327  00BDA6  503A               	movf	??_motor_isr+9,w,c
 48328  00BDA8  2034               	addwfc	??_motor_isr+3,w,c
 48329  00BDAA  6E3C               	movwf	(??_motor_isr+11)& (0+255),c
 48330  00BDAC  0E00               	movlw	0
 48331  00BDAE  2035               	addwfc	??_motor_isr+4,w,c
 48332  00BDB0  6E3D               	movwf	(??_motor_isr+12)& (0+255),c
 48333  00BDB2  0E00               	movlw	0
 48334  00BDB4  2036               	addwfc	??_motor_isr+5,w,c
 48335  00BDB6  6E3E               	movwf	(??_motor_isr+13)& (0+255),c
 48336  00BDB8  0101               	movlb	1	; () banked
 48337  00BDBA  511F               	movf	_motor_current_stepcount& (0+255),w,b	;volatile
 48338  00BDBC  243B               	addwf	??_motor_isr+10,w,c
 48339  00BDBE  0102               	movlb	2	; () banked
 48340  00BDC0  6F38               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 48341  00BDC2  0101               	movlb	1	; () banked
 48342  00BDC4  5120               	movf	(_motor_current_stepcount+1)& (0+255),w,b	;volatile
 48343  00BDC6  203C               	addwfc	??_motor_isr+11,w,c
 48344  00BDC8  0102               	movlb	2	; () banked
 48345  00BDCA  6F39               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 48346  00BDCC  0101               	movlb	1	; () banked
 48347  00BDCE  5121               	movf	(_motor_current_stepcount+2)& (0+255),w,b	;volatile
 48348  00BDD0  203D               	addwfc	??_motor_isr+12,w,c
 48349  00BDD2  0102               	movlb	2	; () banked
 48350  00BDD4  6F3A               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 48351  00BDD6  0101               	movlb	1	; () banked
 48352  00BDD8  5122               	movf	(_motor_current_stepcount+3)& (0+255),w,b	;volatile
 48353  00BDDA  203E               	addwfc	??_motor_isr+13,w,c
 48354  00BDDC  0102               	movlb	2	; () banked
 48355  00BDDE  6F3B               	movwf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 48356                           
 48357                           ; BSR set to: 2
 48358                           
 48359                           ; BSR set to: 2
 48360  00BDE0  0012               	return	
 48361  00BDE2                     __end_of_motor_isr:
 48362                           	opt stack 0
 48363                           tosu	equ	0xFFF
 48364                           tosh	equ	0xFFE
 48365                           tosl	equ	0xFFD
 48366                           pclatu	equ	0xFFB
 48367                           pclath	equ	0xFFA
 48368                           tblptru	equ	0xFF8
 48369                           tblptrh	equ	0xFF7
 48370                           tblptrl	equ	0xFF6
 48371                           tablat	equ	0xFF5
 48372                           prodh	equ	0xFF4
 48373                           prodl	equ	0xFF3
 48374                           intcon	equ	0xFF2
 48375                           indf0	equ	0xFEF
 48376                           postinc0	equ	0xFEE
 48377                           fsr0h	equ	0xFEA
 48378                           fsr0l	equ	0xFE9
 48379                           wreg	equ	0xFE8
 48380                           indf1	equ	0xFE7
 48381                           postinc1	equ	0xFE6
 48382                           postdec1	equ	0xFE5
 48383                           plusw1	equ	0xFE3
 48384                           fsr1h	equ	0xFE2
 48385                           fsr1l	equ	0xFE1
 48386                           indf2	equ	0xFDF
 48387                           postinc2	equ	0xFDE
 48388                           postdec2	equ	0xFDD
 48389                           plusw2	equ	0xFDB
 48390                           fsr2h	equ	0xFDA
 48391                           fsr2l	equ	0xFD9
 48392                           status	equ	0xFD8
 48393                           
 48394 ;; *************** function _i2c_eeprom_save_position *****************
 48395 ;; Defined at:
 48396 ;;		line 293 in file "i2c.c"
 48397 ;; Parameters:    Size  Location     Type
 48398 ;;		None
 48399 ;; Auto vars:     Size  Location     Type
 48400 ;;  buffer         11   37[COMRAM] unsigned char [11]
 48401 ;; Return value:  Size  Location     Type
 48402 ;;                  1    wreg      void 
 48403 ;; Registers used:
 48404 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 48405 ;; Tracked objects:
 48406 ;;		On entry : 0/0
 48407 ;;		On exit  : 0/0
 48408 ;;		Unchanged: 0/0
 48409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48411 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48413 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48414 ;;Total ram usage:       11 bytes
 48415 ;; Hardware stack levels used:    1
 48416 ;; Hardware stack levels required when called:    3
 48417 ;; This function calls:
 48418 ;;		_i2c_eeprom_write
 48419 ;;		i2_memcpy
 48420 ;; This function is called by:
 48421 ;;		_motor_isr
 48422 ;; This function uses a non-reentrant model
 48423 ;;
 48424                           
 48425                           	psect	text197
 48426  013F0C                     __ptext197:
 48427                           	opt stack 0
 48428  013F0C                     _i2c_eeprom_save_position:
 48429                           	opt stack 13
 48430                           
 48431                           ;i2c.c: 295: uint8_t buffer[11];;i2c.c: 301: memcpy(&buffer[0], &os.current_position_in_
      +                          steps, 4);
 48432                           
 48433                           ;incstack = 0
 48434  013F0C  0E26               	movlw	low i2c_eeprom_save_position@buffer
 48435  013F0E  6E01               	movwf	i2memcpy@d1,c
 48436  013F10  0E00               	movlw	high i2c_eeprom_save_position@buffer
 48437  013F12  6E02               	movwf	i2memcpy@d1+1,c
 48438  013F14  0E6C               	movlw	low (_os+7)
 48439  013F16  6E03               	movwf	i2memcpy@s1,c
 48440  013F18  0E01               	movlw	high (_os+7)
 48441  013F1A  6E04               	movwf	i2memcpy@s1+1,c
 48442  013F1C  0E00               	movlw	0
 48443  013F1E  6E06               	movwf	i2memcpy@n+1,c
 48444  013F20  0E04               	movlw	4
 48445  013F22  6E05               	movwf	i2memcpy@n,c
 48446  013F24  EC0B  F0A6         	call	i2_memcpy	;wreg free
 48447                           
 48448                           ;i2c.c: 302: memcpy(&buffer[4], &os.absolute_position, 2);
 48449  013F28  0E2A               	movlw	low (i2c_eeprom_save_position@buffer+4)
 48450  013F2A  6E01               	movwf	i2memcpy@d1,c
 48451  013F2C  0E00               	movlw	high (i2c_eeprom_save_position@buffer+4)
 48452  013F2E  6E02               	movwf	i2memcpy@d1+1,c
 48453  013F30  0E70               	movlw	low (_os+11)
 48454  013F32  6E03               	movwf	i2memcpy@s1,c
 48455  013F34  0E01               	movlw	high (_os+11)
 48456  013F36  6E04               	movwf	i2memcpy@s1+1,c
 48457  013F38  0E00               	movlw	0
 48458  013F3A  6E06               	movwf	i2memcpy@n+1,c
 48459  013F3C  0E02               	movlw	2
 48460  013F3E  6E05               	movwf	i2memcpy@n,c
 48461  013F40  EC0B  F0A6         	call	i2_memcpy	;wreg free
 48462                           
 48463                           ;i2c.c: 303: buffer[6] = os.approach_direction;
 48464  013F44  C178  F02C         	movff	_os+19,i2c_eeprom_save_position@buffer+6	;volatile
 48465                           
 48466                           ;i2c.c: 304: memcpy(&buffer[7], &os.division, 2);
 48467  013F48  0E2D               	movlw	low (i2c_eeprom_save_position@buffer+7)
 48468  013F4A  6E01               	movwf	i2memcpy@d1,c
 48469  013F4C  0E00               	movlw	high (i2c_eeprom_save_position@buffer+7)
 48470  013F4E  6E02               	movwf	i2memcpy@d1+1,c
 48471  013F50  0E79               	movlw	low (_os+20)
 48472  013F52  6E03               	movwf	i2memcpy@s1,c
 48473  013F54  0E01               	movlw	high (_os+20)
 48474  013F56  6E04               	movwf	i2memcpy@s1+1,c
 48475  013F58  0E00               	movlw	0
 48476  013F5A  6E06               	movwf	i2memcpy@n+1,c
 48477  013F5C  0E02               	movlw	2
 48478  013F5E  6E05               	movwf	i2memcpy@n,c
 48479  013F60  EC0B  F0A6         	call	i2_memcpy	;wreg free
 48480                           
 48481                           ;i2c.c: 305: memcpy(&buffer[9], &os.divide_position, 2);
 48482  013F64  0E2F               	movlw	low (i2c_eeprom_save_position@buffer+9)
 48483  013F66  6E01               	movwf	i2memcpy@d1,c
 48484  013F68  0E00               	movlw	high (i2c_eeprom_save_position@buffer+9)
 48485  013F6A  6E02               	movwf	i2memcpy@d1+1,c
 48486  013F6C  0E7C               	movlw	low (_os+23)
 48487  013F6E  6E03               	movwf	i2memcpy@s1,c
 48488  013F70  0E01               	movlw	high (_os+23)
 48489  013F72  6E04               	movwf	i2memcpy@s1+1,c
 48490  013F74  0E00               	movlw	0
 48491  013F76  6E06               	movwf	i2memcpy@n+1,c
 48492  013F78  0E02               	movlw	2
 48493  013F7A  6E05               	movwf	i2memcpy@n,c
 48494  013F7C  EC0B  F0A6         	call	i2_memcpy	;wreg free
 48495                           
 48496                           ;i2c.c: 308: i2c_eeprom_write(0x200, &buffer[0], 11);
 48497  013F80  0E02               	movlw	2
 48498  013F82  6E0C               	movwf	i2c_eeprom_write@address+1,c
 48499  013F84  0E00               	movlw	0
 48500  013F86  6E0B               	movwf	i2c_eeprom_write@address,c
 48501  013F88  0E26               	movlw	low i2c_eeprom_save_position@buffer
 48502  013F8A  6E0D               	movwf	i2c_eeprom_write@data,c
 48503  013F8C  0E00               	movlw	high i2c_eeprom_save_position@buffer
 48504  013F8E  6E0E               	movwf	i2c_eeprom_write@data+1,c
 48505  013F90  0E0B               	movlw	11
 48506  013F92  6E0F               	movwf	i2c_eeprom_write@length,c
 48507  013F94  ECD7  F0A0         	call	_i2c_eeprom_write	;wreg free
 48508  013F98  0012               	return		;funcret
 48509  013F9A                     __end_of_i2c_eeprom_save_position:
 48510                           	opt stack 0
 48511                           tosu	equ	0xFFF
 48512                           tosh	equ	0xFFE
 48513                           tosl	equ	0xFFD
 48514                           pclatu	equ	0xFFB
 48515                           pclath	equ	0xFFA
 48516                           tblptru	equ	0xFF8
 48517                           tblptrh	equ	0xFF7
 48518                           tblptrl	equ	0xFF6
 48519                           tablat	equ	0xFF5
 48520                           prodh	equ	0xFF4
 48521                           prodl	equ	0xFF3
 48522                           intcon	equ	0xFF2
 48523                           indf0	equ	0xFEF
 48524                           postinc0	equ	0xFEE
 48525                           fsr0h	equ	0xFEA
 48526                           fsr0l	equ	0xFE9
 48527                           wreg	equ	0xFE8
 48528                           indf1	equ	0xFE7
 48529                           postinc1	equ	0xFE6
 48530                           postdec1	equ	0xFE5
 48531                           plusw1	equ	0xFE3
 48532                           fsr1h	equ	0xFE2
 48533                           fsr1l	equ	0xFE1
 48534                           indf2	equ	0xFDF
 48535                           postinc2	equ	0xFDE
 48536                           postdec2	equ	0xFDD
 48537                           plusw2	equ	0xFDB
 48538                           fsr2h	equ	0xFDA
 48539                           fsr2l	equ	0xFD9
 48540                           status	equ	0xFD8
 48541                           
 48542 ;; *************** function _i2c_eeprom_write *****************
 48543 ;; Defined at:
 48544 ;;		line 256 in file "i2c.c"
 48545 ;; Parameters:    Size  Location     Type
 48546 ;;  address         2   10[COMRAM] unsigned int 
 48547 ;;  data            2   12[COMRAM] PTR unsigned char 
 48548 ;;		 -> i2c_eeprom_save_position@buffer(11), i2c_eeprom_writeInt16@data(2), i2c_eeprom_writeUint32@data(4), i2c_eeprom_w
      +riteUint16@data(2), 
 48549 ;;  length          1   14[COMRAM] unsigned char 
 48550 ;; Auto vars:     Size  Location     Type
 48551 ;;  dat            17   18[COMRAM] unsigned char [17]
 48552 ;;  cntr            1   36[COMRAM] unsigned char 
 48553 ;;  slave_addres    1   35[COMRAM] unsigned char 
 48554 ;; Return value:  Size  Location     Type
 48555 ;;                  1    wreg      void 
 48556 ;; Registers used:
 48557 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 48558 ;; Tracked objects:
 48559 ;;		On entry : 0/0
 48560 ;;		On exit  : 0/0
 48561 ;;		Unchanged: 0/0
 48562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48563 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48564 ;;      Locals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48565 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48566 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48567 ;;Total ram usage:       27 bytes
 48568 ;; Hardware stack levels used:    1
 48569 ;; Hardware stack levels required when called:    2
 48570 ;; This function calls:
 48571 ;;		i2__i2c_eeprom_busy
 48572 ;;		i2__i2c_write
 48573 ;; This function is called by:
 48574 ;;		_i2c_eeprom_save_position
 48575 ;;		_i2c_eeprom_writeUint16
 48576 ;;		_i2c_eeprom_writeUint32
 48577 ;;		_i2c_eeprom_writeInt16
 48578 ;; This function uses a non-reentrant model
 48579 ;;
 48580                           
 48581                           	psect	text198
 48582  0141AE                     __ptext198:
 48583                           	opt stack 0
 48584  0141AE                     _i2c_eeprom_write:
 48585                           	opt stack 13
 48586                           
 48587                           ;i2c.c: 258: uint8_t cntr;;i2c.c: 259: uint8_t slave_address;;i2c.c: 260: uint8_t dat[17
      +                          ];;i2c.c: 262: slave_address = 0b10100000 | ((address&0b0000011100000000)>>7);
 48588                           
 48589                           ;incstack = 0
 48590  0141AE  C00B  F010         	movff	i2c_eeprom_write@address,??_i2c_eeprom_write
 48591  0141B2  C00C  F011         	movff	i2c_eeprom_write@address+1,??_i2c_eeprom_write+1
 48592  0141B6  0E07               	movlw	7
 48593  0141B8  6E12               	movwf	(??_i2c_eeprom_write+2)& (0+255),c
 48594  0141BA                     i2u1515_45:
 48595  0141BA  90D8               	bcf	status,0,c
 48596  0141BC  3211               	rrcf	??_i2c_eeprom_write+1,f,c
 48597  0141BE  3210               	rrcf	??_i2c_eeprom_write,f,c
 48598  0141C0  2E12               	decfsz	(??_i2c_eeprom_write+2)& (0+255),f,c
 48599  0141C2  D7FB               	goto	i2u1515_45
 48600  0141C4  5010               	movf	??_i2c_eeprom_write,w,c
 48601  0141C6  0B0E               	andlw	14
 48602  0141C8  09A0               	iorlw	160
 48603  0141CA  6E24               	movwf	i2c_eeprom_write@slave_address,c
 48604                           
 48605                           ;i2c.c: 263: dat[0] = address & 0xFF;
 48606  0141CC  C00B  F013         	movff	i2c_eeprom_write@address,i2c_eeprom_write@dat
 48607                           
 48608                           ;i2c.c: 265: length &= 0b00001111;
 48609  0141D0  0E0F               	movlw	15
 48610  0141D2  160F               	andwf	i2c_eeprom_write@length,f,c
 48611                           
 48612                           ;i2c.c: 266: for(cntr=0; cntr<length; ++cntr)
 48613  0141D4  0E00               	movlw	0
 48614  0141D6  6E25               	movwf	i2c_eeprom_write@cntr,c
 48615  0141D8  D018               	goto	i2l1214
 48616  0141DA                     
 48617                           ;i2c.c: 267: {;i2c.c: 268: dat[cntr+1] = data[cntr];
 48618  0141DA  5025               	movf	i2c_eeprom_write@cntr,w,c
 48619  0141DC  0D01               	mullw	1
 48620  0141DE  50F3               	movf	prodl,w,c
 48621  0141E0  240D               	addwf	i2c_eeprom_write@data,w,c
 48622  0141E2  6ED9               	movwf	fsr2l,c
 48623  0141E4  50F4               	movf	prodh,w,c
 48624  0141E6  200E               	addwfc	i2c_eeprom_write@data+1,w,c
 48625  0141E8  6EDA               	movwf	fsr2h,c
 48626  0141EA  5025               	movf	i2c_eeprom_write@cntr,w,c
 48627  0141EC  6E10               	movwf	??_i2c_eeprom_write& (0+255),c
 48628  0141EE  6A11               	clrf	(??_i2c_eeprom_write+1)& (0+255),c
 48629  0141F0  0E01               	movlw	1
 48630  0141F2  2610               	addwf	??_i2c_eeprom_write,f,c
 48631  0141F4  0E00               	movlw	0
 48632  0141F6  2211               	addwfc	??_i2c_eeprom_write+1,f,c
 48633  0141F8  0E13               	movlw	low i2c_eeprom_write@dat
 48634  0141FA  2410               	addwf	??_i2c_eeprom_write,w,c
 48635  0141FC  6EE1               	movwf	fsr1l,c
 48636  0141FE  0E00               	movlw	high i2c_eeprom_write@dat
 48637  014200  2011               	addwfc	??_i2c_eeprom_write+1,w,c
 48638  014202  6EE2               	movwf	fsr1h,c
 48639  014204  CFDF FFE7          	movff	indf2,indf1
 48640  014208  2A25               	incf	i2c_eeprom_write@cntr,f,c
 48641  01420A                     i2l1214:
 48642  01420A  500F               	movf	i2c_eeprom_write@length,w,c
 48643  01420C  5C25               	subwf	i2c_eeprom_write@cntr,w,c
 48644  01420E  A0D8               	btfss	status,0,c
 48645  014210  D7E4               	goto	i2l1215
 48646  014212                     i2u1516_40:
 48647                           
 48648                           ;i2c.c: 269: };i2c.c: 272: while(_i2c_eeprom_busy());
 48649  014212  ECC3  F0AE         	call	i2__i2c_eeprom_busy	;wreg free
 48650  014216  0900               	iorlw	0
 48651  014218  A4D8               	btfss	status,2,c
 48652  01421A  D7FB               	goto	i2u1516_40
 48653                           
 48654                           ;i2c.c: 274: _i2c_write(slave_address, &dat[0], length+1);
 48655  01421C  0E13               	movlw	low i2c_eeprom_write@dat
 48656  01421E  6E06               	movwf	i2__i2c_write@data,c
 48657  014220  0E00               	movlw	high i2c_eeprom_write@dat
 48658  014222  6E07               	movwf	i2__i2c_write@data+1,c
 48659  014224  280F               	incf	i2c_eeprom_write@length,w,c
 48660  014226  6E08               	movwf	i2__i2c_write@length,c
 48661  014228  5024               	movf	i2c_eeprom_write@slave_address,w,c
 48662  01422A  ECC8  F0AA         	call	i2__i2c_write
 48663  01422E  0012               	return		;funcret
 48664  014230                     __end_of_i2c_eeprom_write:
 48665                           	opt stack 0
 48666                           tosu	equ	0xFFF
 48667                           tosh	equ	0xFFE
 48668                           tosl	equ	0xFFD
 48669                           pclatu	equ	0xFFB
 48670                           pclath	equ	0xFFA
 48671                           tblptru	equ	0xFF8
 48672                           tblptrh	equ	0xFF7
 48673                           tblptrl	equ	0xFF6
 48674                           tablat	equ	0xFF5
 48675                           prodh	equ	0xFF4
 48676                           prodl	equ	0xFF3
 48677                           intcon	equ	0xFF2
 48678                           indf0	equ	0xFEF
 48679                           postinc0	equ	0xFEE
 48680                           fsr0h	equ	0xFEA
 48681                           fsr0l	equ	0xFE9
 48682                           wreg	equ	0xFE8
 48683                           indf1	equ	0xFE7
 48684                           postinc1	equ	0xFE6
 48685                           postdec1	equ	0xFE5
 48686                           plusw1	equ	0xFE3
 48687                           fsr1h	equ	0xFE2
 48688                           fsr1l	equ	0xFE1
 48689                           indf2	equ	0xFDF
 48690                           postinc2	equ	0xFDE
 48691                           postdec2	equ	0xFDD
 48692                           plusw2	equ	0xFDB
 48693                           fsr2h	equ	0xFDA
 48694                           fsr2l	equ	0xFD9
 48695                           status	equ	0xFD8
 48696                           
 48697 ;; *************** function i2__i2c_write *****************
 48698 ;; Defined at:
 48699 ;;		line 86 in file "i2c.c"
 48700 ;; Parameters:    Size  Location     Type
 48701 ;;  slave_addres    1    wreg     unsigned char 
 48702 ;;  data            2    5[COMRAM] PTR unsigned char 
 48703 ;;		 -> i2c_display_program_custom_character@data_array(11), _ic2_display_set_cgram_address@data_array(3), _ic2_display_
      +set_ddram_address@data_array(2), i2c_display_init@init_sequence(9), 
 48704 ;;		 -> _i2c_display_send_init_sequence@init_sequence(9), i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_
      +readByte@addr(1), 
 48705 ;;		 -> i2c_eeprom_writeByte@dat(2), i2c_adc_start@configuration_byte(1), 
 48706 ;;  length          1    7[COMRAM] unsigned char 
 48707 ;; Auto vars:     Size  Location     Type
 48708 ;;  slave_addres    1    8[COMRAM] unsigned char 
 48709 ;;  _i2c_write      1    9[COMRAM] unsigned char 
 48710 ;; Return value:  Size  Location     Type
 48711 ;;                  1    wreg      void 
 48712 ;; Registers used:
 48713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 48714 ;; Tracked objects:
 48715 ;;		On entry : 0/0
 48716 ;;		On exit  : 0/0
 48717 ;;		Unchanged: 0/0
 48718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48719 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48720 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48722 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48723 ;;Total ram usage:        5 bytes
 48724 ;; Hardware stack levels used:    1
 48725 ;; Hardware stack levels required when called:    1
 48726 ;; This function calls:
 48727 ;;		i2__i2c_send
 48728 ;;		i2__i2c_start
 48729 ;;		i2__i2c_stop
 48730 ;;		i2__i2c_wait_idle
 48731 ;; This function is called by:
 48732 ;;		_i2c_eeprom_write
 48733 ;; This function uses a non-reentrant model
 48734 ;;
 48735                           
 48736                           	psect	text199
 48737  015590                     __ptext199:
 48738                           	opt stack 0
 48739  015590                     i2__i2c_write:
 48740                           	opt stack 13
 48741                           
 48742                           ;incstack = 0
 48743                           ;i2__i2c_write@slave_address stored from wreg
 48744  015590  6E09               	movwf	i2__i2c_write@slave_address,c
 48745                           
 48746                           ;i2c.c: 88: uint8_t cntr;;i2c.c: 90: _i2c_wait_idle();
 48747  015592  ECCA  F0A7         	call	i2__i2c_wait_idle	;wreg free
 48748                           
 48749                           ;i2c.c: 91: _i2c_start();
 48750  015596  EC42  F0B0         	call	i2__i2c_start	;wreg free
 48751                           
 48752                           ;i2c.c: 92: _i2c_wait_idle();
 48753  01559A  ECCA  F0A7         	call	i2__i2c_wait_idle	;wreg free
 48754                           
 48755                           ;i2c.c: 93: _i2c_send(slave_address);
 48756  01559E  5009               	movf	i2__i2c_write@slave_address,w,c
 48757  0155A0  EC46  F0B0         	call	i2__i2c_send
 48758                           
 48759                           ;i2c.c: 94: _i2c_wait_idle();
 48760  0155A4  ECCA  F0A7         	call	i2__i2c_wait_idle	;wreg free
 48761                           
 48762                           ;i2c.c: 96: for(cntr=0; cntr<length; ++cntr)
 48763  0155A8  0E00               	movlw	0
 48764  0155AA  6E0A               	movwf	i2__i2c_write@cntr,c
 48765  0155AC  D00E               	goto	i2l1163
 48766  0155AE                     
 48767                           ;i2c.c: 97: {;i2c.c: 98: _i2c_send(data[cntr]);
 48768  0155AE  500A               	movf	i2__i2c_write@cntr,w,c
 48769  0155B0  0D01               	mullw	1
 48770  0155B2  50F3               	movf	prodl,w,c
 48771  0155B4  2406               	addwf	i2__i2c_write@data,w,c
 48772  0155B6  6ED9               	movwf	fsr2l,c
 48773  0155B8  50F4               	movf	prodh,w,c
 48774  0155BA  2007               	addwfc	i2__i2c_write@data+1,w,c
 48775  0155BC  6EDA               	movwf	fsr2h,c
 48776  0155BE  50DF               	movf	indf2,w,c
 48777  0155C0  EC46  F0B0         	call	i2__i2c_send
 48778                           
 48779                           ;i2c.c: 99: _i2c_wait_idle();
 48780  0155C4  ECCA  F0A7         	call	i2__i2c_wait_idle	;wreg free
 48781  0155C8  2A0A               	incf	i2__i2c_write@cntr,f,c
 48782  0155CA                     i2l1163:
 48783  0155CA  5008               	movf	i2__i2c_write@length,w,c
 48784  0155CC  5C0A               	subwf	i2__i2c_write@cntr,w,c
 48785  0155CE  A0D8               	btfss	status,0,c
 48786  0155D0  D7EE               	goto	i2l1164
 48787                           
 48788                           ;i2c.c: 100: };i2c.c: 102: _i2c_stop();
 48789  0155D2  EC3E  F0B0         	call	i2__i2c_stop	;wreg free
 48790  0155D6  0012               	return		;funcret
 48791  0155D8                     __end_ofi2__i2c_write:
 48792                           	opt stack 0
 48793                           tosu	equ	0xFFF
 48794                           tosh	equ	0xFFE
 48795                           tosl	equ	0xFFD
 48796                           pclatu	equ	0xFFB
 48797                           pclath	equ	0xFFA
 48798                           tblptru	equ	0xFF8
 48799                           tblptrh	equ	0xFF7
 48800                           tblptrl	equ	0xFF6
 48801                           tablat	equ	0xFF5
 48802                           prodh	equ	0xFF4
 48803                           prodl	equ	0xFF3
 48804                           intcon	equ	0xFF2
 48805                           indf0	equ	0xFEF
 48806                           postinc0	equ	0xFEE
 48807                           fsr0h	equ	0xFEA
 48808                           fsr0l	equ	0xFE9
 48809                           wreg	equ	0xFE8
 48810                           indf1	equ	0xFE7
 48811                           postinc1	equ	0xFE6
 48812                           postdec1	equ	0xFE5
 48813                           plusw1	equ	0xFE3
 48814                           fsr1h	equ	0xFE2
 48815                           fsr1l	equ	0xFE1
 48816                           indf2	equ	0xFDF
 48817                           postinc2	equ	0xFDE
 48818                           postdec2	equ	0xFDD
 48819                           plusw2	equ	0xFDB
 48820                           fsr2h	equ	0xFDA
 48821                           fsr2l	equ	0xFD9
 48822                           status	equ	0xFD8
 48823                           
 48824 ;; *************** function i2__i2c_eeprom_busy *****************
 48825 ;; Defined at:
 48826 ;;		line 171 in file "i2c.c"
 48827 ;; Parameters:    Size  Location     Type
 48828 ;;		None
 48829 ;; Auto vars:     Size  Location     Type
 48830 ;;  _i2c_eeprom_    1    5[COMRAM] unsigned char 
 48831 ;; Return value:  Size  Location     Type
 48832 ;;                  1    wreg      unsigned char 
 48833 ;; Registers used:
 48834 ;;		wreg, status,2, status,0, cstack
 48835 ;; Tracked objects:
 48836 ;;		On entry : 0/0
 48837 ;;		On exit  : 0/0
 48838 ;;		Unchanged: 0/0
 48839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48841 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48843 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48844 ;;Total ram usage:        1 bytes
 48845 ;; Hardware stack levels used:    1
 48846 ;; Hardware stack levels required when called:    1
 48847 ;; This function calls:
 48848 ;;		i2__i2c_send
 48849 ;;		i2__i2c_start
 48850 ;;		i2__i2c_stop
 48851 ;;		i2__i2c_wait_idle
 48852 ;; This function is called by:
 48853 ;;		_i2c_eeprom_write
 48854 ;; This function uses a non-reentrant model
 48855 ;;
 48856                           
 48857                           	psect	text200
 48858  015D86                     __ptext200:
 48859                           	opt stack 0
 48860  015D86                     i2__i2c_eeprom_busy:
 48861                           	opt stack 13
 48862                           
 48863                           ;i2c.c: 173: uint8_t busy;;i2c.c: 174: _i2c_wait_idle();
 48864                           
 48865                           ;incstack = 0
 48866  015D86  ECCA  F0A7         	call	i2__i2c_wait_idle	;wreg free
 48867                           
 48868                           ;i2c.c: 175: _i2c_start();
 48869  015D8A  EC42  F0B0         	call	i2__i2c_start	;wreg free
 48870                           
 48871                           ;i2c.c: 176: _i2c_wait_idle();
 48872  015D8E  ECCA  F0A7         	call	i2__i2c_wait_idle	;wreg free
 48873                           
 48874                           ;i2c.c: 177: _i2c_send(0b10100000);
 48875  015D92  0EA0               	movlw	160
 48876  015D94  EC46  F0B0         	call	i2__i2c_send
 48877                           
 48878                           ;i2c.c: 178: _i2c_wait_idle();
 48879  015D98  ECCA  F0A7         	call	i2__i2c_wait_idle	;wreg free
 48880                           
 48881                           ;i2c.c: 182: busy = SSP1CON2bits.ACKSTAT;
 48882  015D9C  0E00               	movlw	0
 48883  015D9E  BCC5               	btfsc	4037,6,c	;volatile
 48884  015DA0  0E01               	movlw	1
 48885  015DA2  6E06               	movwf	i2__i2c_eeprom_busy@busy,c
 48886                           
 48887                           ;i2c.c: 183: _i2c_stop();
 48888  015DA4  EC3E  F0B0         	call	i2__i2c_stop	;wreg free
 48889                           
 48890                           ;i2c.c: 185: return 0;
 48891  015DA8  0E00               	movlw	0
 48892  015DAA  0012               	return	
 48893  015DAC                     __end_ofi2__i2c_eeprom_busy:
 48894                           	opt stack 0
 48895                           tosu	equ	0xFFF
 48896                           tosh	equ	0xFFE
 48897                           tosl	equ	0xFFD
 48898                           pclatu	equ	0xFFB
 48899                           pclath	equ	0xFFA
 48900                           tblptru	equ	0xFF8
 48901                           tblptrh	equ	0xFF7
 48902                           tblptrl	equ	0xFF6
 48903                           tablat	equ	0xFF5
 48904                           prodh	equ	0xFF4
 48905                           prodl	equ	0xFF3
 48906                           intcon	equ	0xFF2
 48907                           indf0	equ	0xFEF
 48908                           postinc0	equ	0xFEE
 48909                           fsr0h	equ	0xFEA
 48910                           fsr0l	equ	0xFE9
 48911                           wreg	equ	0xFE8
 48912                           indf1	equ	0xFE7
 48913                           postinc1	equ	0xFE6
 48914                           postdec1	equ	0xFE5
 48915                           plusw1	equ	0xFE3
 48916                           fsr1h	equ	0xFE2
 48917                           fsr1l	equ	0xFE1
 48918                           indf2	equ	0xFDF
 48919                           postinc2	equ	0xFDE
 48920                           postdec2	equ	0xFDD
 48921                           plusw2	equ	0xFDB
 48922                           fsr2h	equ	0xFDA
 48923                           fsr2l	equ	0xFD9
 48924                           status	equ	0xFD8
 48925                           
 48926 ;; *************** function i2__i2c_wait_idle *****************
 48927 ;; Defined at:
 48928 ;;		line 42 in file "i2c.c"
 48929 ;; Parameters:    Size  Location     Type
 48930 ;;		None
 48931 ;; Auto vars:     Size  Location     Type
 48932 ;;		None
 48933 ;; Return value:  Size  Location     Type
 48934 ;;                  1    wreg      void 
 48935 ;; Registers used:
 48936 ;;		wreg, status,2, status,0
 48937 ;; Tracked objects:
 48938 ;;		On entry : 0/0
 48939 ;;		On exit  : 0/0
 48940 ;;		Unchanged: 0/0
 48941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48944 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48945 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48946 ;;Total ram usage:        5 bytes
 48947 ;; Hardware stack levels used:    1
 48948 ;; This function calls:
 48949 ;;		Nothing
 48950 ;; This function is called by:
 48951 ;;		i2__i2c_write
 48952 ;;		i2__i2c_eeprom_busy
 48953 ;; This function uses a non-reentrant model
 48954 ;;
 48955                           
 48956                           	psect	text201
 48957  014F94                     __ptext201:
 48958                           	opt stack 0
 48959  014F94                     i2__i2c_wait_idle:
 48960                           	opt stack 13
 48961                           
 48962                           ;i2c.c: 44: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 48963                           
 48964                           ;incstack = 0
 48965  014F94  A4C7               	btfss	4039,2,c	;volatile
 48966  014F96  D003               	goto	i2u1365_40
 48967  014F98  6A01               	clrf	??i2__i2c_wait_idle& (0+255),c
 48968  014F9A  2A01               	incf	??i2__i2c_wait_idle& (0+255),f,c
 48969  014F9C  D001               	goto	i2u1365_48
 48970  014F9E                     i2u1365_40:
 48971  014F9E  6A01               	clrf	??i2__i2c_wait_idle& (0+255),c
 48972  014FA0                     i2u1365_48:
 48973  014FA0  A0C5               	btfss	4037,0,c	;volatile
 48974  014FA2  D003               	goto	i2u1366_40
 48975  014FA4  6A02               	clrf	(??i2__i2c_wait_idle+1)& (0+255),c
 48976  014FA6  2A02               	incf	(??i2__i2c_wait_idle+1)& (0+255),f,c
 48977  014FA8  D001               	goto	i2u1366_48
 48978  014FAA                     i2u1366_40:
 48979  014FAA  6A02               	clrf	(??i2__i2c_wait_idle+1)& (0+255),c
 48980  014FAC                     i2u1366_48:
 48981  014FAC  A2C5               	btfss	4037,1,c	;volatile
 48982  014FAE  D003               	goto	i2u1367_40
 48983  014FB0  6A03               	clrf	(??i2__i2c_wait_idle+2)& (0+255),c
 48984  014FB2  2A03               	incf	(??i2__i2c_wait_idle+2)& (0+255),f,c
 48985  014FB4  D001               	goto	i2u1367_48
 48986  014FB6                     i2u1367_40:
 48987  014FB6  6A03               	clrf	(??i2__i2c_wait_idle+2)& (0+255),c
 48988  014FB8                     i2u1367_48:
 48989  014FB8  A4C5               	btfss	4037,2,c	;volatile
 48990  014FBA  D003               	goto	i2u1368_40
 48991  014FBC  6A04               	clrf	(??i2__i2c_wait_idle+3)& (0+255),c
 48992  014FBE  2A04               	incf	(??i2__i2c_wait_idle+3)& (0+255),f,c
 48993  014FC0  D001               	goto	i2u1368_48
 48994  014FC2                     i2u1368_40:
 48995  014FC2  6A04               	clrf	(??i2__i2c_wait_idle+3)& (0+255),c
 48996  014FC4                     i2u1368_48:
 48997  014FC4  A6C5               	btfss	4037,3,c	;volatile
 48998  014FC6  D003               	goto	i2u1369_40
 48999  014FC8  6A05               	clrf	(??i2__i2c_wait_idle+4)& (0+255),c
 49000  014FCA  2A05               	incf	(??i2__i2c_wait_idle+4)& (0+255),f,c
 49001  014FCC  D001               	goto	i2u1369_48
 49002  014FCE                     i2u1369_40:
 49003  014FCE  6A05               	clrf	(??i2__i2c_wait_idle+4)& (0+255),c
 49004  014FD0                     i2u1369_48:
 49005  014FD0  A8C5               	btfss	4037,4,c	;volatile
 49006  014FD2  D002               	goto	i2u1370_40
 49007  014FD4  0E01               	movlw	1
 49008  014FD6  D001               	goto	i2u1370_46
 49009  014FD8                     i2u1370_40:
 49010  014FD8  0E00               	movlw	0
 49011  014FDA                     i2u1370_46:
 49012  014FDA  1005               	iorwf	??i2__i2c_wait_idle+4,w,c
 49013  014FDC  1004               	iorwf	??i2__i2c_wait_idle+3,w,c
 49014  014FDE  1003               	iorwf	??i2__i2c_wait_idle+2,w,c
 49015  014FE0  1002               	iorwf	??i2__i2c_wait_idle+1,w,c
 49016  014FE2  1001               	iorwf	??i2__i2c_wait_idle,w,c
 49017  014FE4  0900               	iorlw	0
 49018  014FE6  B4D8               	btfsc	status,2,c
 49019  014FE8  0012               	return	
 49020  014FEA  D7D4               	goto	i2__i2c_wait_idle
 49021  014FEC                     __end_ofi2__i2c_wait_idle:
 49022                           	opt stack 0
 49023                           tosu	equ	0xFFF
 49024                           tosh	equ	0xFFE
 49025                           tosl	equ	0xFFD
 49026                           pclatu	equ	0xFFB
 49027                           pclath	equ	0xFFA
 49028                           tblptru	equ	0xFF8
 49029                           tblptrh	equ	0xFF7
 49030                           tblptrl	equ	0xFF6
 49031                           tablat	equ	0xFF5
 49032                           prodh	equ	0xFF4
 49033                           prodl	equ	0xFF3
 49034                           intcon	equ	0xFF2
 49035                           indf0	equ	0xFEF
 49036                           postinc0	equ	0xFEE
 49037                           fsr0h	equ	0xFEA
 49038                           fsr0l	equ	0xFE9
 49039                           wreg	equ	0xFE8
 49040                           indf1	equ	0xFE7
 49041                           postinc1	equ	0xFE6
 49042                           postdec1	equ	0xFE5
 49043                           plusw1	equ	0xFE3
 49044                           fsr1h	equ	0xFE2
 49045                           fsr1l	equ	0xFE1
 49046                           indf2	equ	0xFDF
 49047                           postinc2	equ	0xFDE
 49048                           postdec2	equ	0xFDD
 49049                           plusw2	equ	0xFDB
 49050                           fsr2h	equ	0xFDA
 49051                           fsr2l	equ	0xFD9
 49052                           status	equ	0xFD8
 49053                           
 49054 ;; *************** function i2__i2c_stop *****************
 49055 ;; Defined at:
 49056 ;;		line 65 in file "i2c.c"
 49057 ;; Parameters:    Size  Location     Type
 49058 ;;		None
 49059 ;; Auto vars:     Size  Location     Type
 49060 ;;		None
 49061 ;; Return value:  Size  Location     Type
 49062 ;;                  1    wreg      void 
 49063 ;; Registers used:
 49064 ;;		None
 49065 ;; Tracked objects:
 49066 ;;		On entry : 0/0
 49067 ;;		On exit  : 0/0
 49068 ;;		Unchanged: 0/0
 49069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49074 ;;Total ram usage:        0 bytes
 49075 ;; Hardware stack levels used:    1
 49076 ;; This function calls:
 49077 ;;		Nothing
 49078 ;; This function is called by:
 49079 ;;		i2__i2c_write
 49080 ;;		i2__i2c_eeprom_busy
 49081 ;; This function uses a non-reentrant model
 49082 ;;
 49083                           
 49084                           	psect	text202
 49085  01607C                     __ptext202:
 49086                           	opt stack 0
 49087  01607C                     i2__i2c_stop:
 49088                           	opt stack 13
 49089                           
 49090                           ;i2c.c: 67: SSP1CON2bits.PEN = 1;
 49091                           
 49092                           ;incstack = 0
 49093  01607C  84C5               	bsf	4037,2,c	;volatile
 49094  01607E  A4C5               	btfss	4037,2,c	;volatile
 49095  016080  0012               	return	
 49096  016082  D7FD               	goto	i2l1146
 49097  016084                     __end_ofi2__i2c_stop:
 49098                           	opt stack 0
 49099                           tosu	equ	0xFFF
 49100                           tosh	equ	0xFFE
 49101                           tosl	equ	0xFFD
 49102                           pclatu	equ	0xFFB
 49103                           pclath	equ	0xFFA
 49104                           tblptru	equ	0xFF8
 49105                           tblptrh	equ	0xFF7
 49106                           tblptrl	equ	0xFF6
 49107                           tablat	equ	0xFF5
 49108                           prodh	equ	0xFF4
 49109                           prodl	equ	0xFF3
 49110                           intcon	equ	0xFF2
 49111                           indf0	equ	0xFEF
 49112                           postinc0	equ	0xFEE
 49113                           fsr0h	equ	0xFEA
 49114                           fsr0l	equ	0xFE9
 49115                           wreg	equ	0xFE8
 49116                           indf1	equ	0xFE7
 49117                           postinc1	equ	0xFE6
 49118                           postdec1	equ	0xFE5
 49119                           plusw1	equ	0xFE3
 49120                           fsr1h	equ	0xFE2
 49121                           fsr1l	equ	0xFE1
 49122                           indf2	equ	0xFDF
 49123                           postinc2	equ	0xFDE
 49124                           postdec2	equ	0xFDD
 49125                           plusw2	equ	0xFDB
 49126                           fsr2h	equ	0xFDA
 49127                           fsr2l	equ	0xFD9
 49128                           status	equ	0xFD8
 49129                           
 49130 ;; *************** function i2__i2c_start *****************
 49131 ;; Defined at:
 49132 ;;		line 47 in file "i2c.c"
 49133 ;; Parameters:    Size  Location     Type
 49134 ;;		None
 49135 ;; Auto vars:     Size  Location     Type
 49136 ;;		None
 49137 ;; Return value:  Size  Location     Type
 49138 ;;                  1    wreg      void 
 49139 ;; Registers used:
 49140 ;;		None
 49141 ;; Tracked objects:
 49142 ;;		On entry : 0/0
 49143 ;;		On exit  : 0/0
 49144 ;;		Unchanged: 0/0
 49145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49150 ;;Total ram usage:        0 bytes
 49151 ;; Hardware stack levels used:    1
 49152 ;; This function calls:
 49153 ;;		Nothing
 49154 ;; This function is called by:
 49155 ;;		i2__i2c_write
 49156 ;;		i2__i2c_eeprom_busy
 49157 ;; This function uses a non-reentrant model
 49158 ;;
 49159                           
 49160                           	psect	text203
 49161  016084                     __ptext203:
 49162                           	opt stack 0
 49163  016084                     i2__i2c_start:
 49164                           	opt stack 13
 49165                           
 49166                           ;i2c.c: 49: SSP1CON2bits.SEN=1;
 49167                           
 49168                           ;incstack = 0
 49169  016084  80C5               	bsf	4037,0,c	;volatile
 49170  016086  A0C5               	btfss	4037,0,c	;volatile
 49171  016088  0012               	return	
 49172  01608A  D7FD               	goto	i2l1131
 49173  01608C                     __end_ofi2__i2c_start:
 49174                           	opt stack 0
 49175                           tosu	equ	0xFFF
 49176                           tosh	equ	0xFFE
 49177                           tosl	equ	0xFFD
 49178                           pclatu	equ	0xFFB
 49179                           pclath	equ	0xFFA
 49180                           tblptru	equ	0xFF8
 49181                           tblptrh	equ	0xFF7
 49182                           tblptrl	equ	0xFF6
 49183                           tablat	equ	0xFF5
 49184                           prodh	equ	0xFF4
 49185                           prodl	equ	0xFF3
 49186                           intcon	equ	0xFF2
 49187                           indf0	equ	0xFEF
 49188                           postinc0	equ	0xFEE
 49189                           fsr0h	equ	0xFEA
 49190                           fsr0l	equ	0xFE9
 49191                           wreg	equ	0xFE8
 49192                           indf1	equ	0xFE7
 49193                           postinc1	equ	0xFE6
 49194                           postdec1	equ	0xFE5
 49195                           plusw1	equ	0xFE3
 49196                           fsr1h	equ	0xFE2
 49197                           fsr1l	equ	0xFE1
 49198                           indf2	equ	0xFDF
 49199                           postinc2	equ	0xFDE
 49200                           postdec2	equ	0xFDD
 49201                           plusw2	equ	0xFDB
 49202                           fsr2h	equ	0xFDA
 49203                           fsr2l	equ	0xFD9
 49204                           status	equ	0xFD8
 49205                           
 49206 ;; *************** function i2__i2c_send *****************
 49207 ;; Defined at:
 49208 ;;		line 53 in file "i2c.c"
 49209 ;; Parameters:    Size  Location     Type
 49210 ;;  dat             1    wreg     unsigned char 
 49211 ;; Auto vars:     Size  Location     Type
 49212 ;;  dat             1    0[COMRAM] unsigned char 
 49213 ;; Return value:  Size  Location     Type
 49214 ;;                  1    wreg      void 
 49215 ;; Registers used:
 49216 ;;		wreg
 49217 ;; Tracked objects:
 49218 ;;		On entry : 0/0
 49219 ;;		On exit  : 0/0
 49220 ;;		Unchanged: 0/0
 49221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49223 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49225 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49226 ;;Total ram usage:        1 bytes
 49227 ;; Hardware stack levels used:    1
 49228 ;; This function calls:
 49229 ;;		Nothing
 49230 ;; This function is called by:
 49231 ;;		i2__i2c_write
 49232 ;;		i2__i2c_eeprom_busy
 49233 ;; This function uses a non-reentrant model
 49234 ;;
 49235                           
 49236                           	psect	text204
 49237  01608C                     __ptext204:
 49238                           	opt stack 0
 49239  01608C                     i2__i2c_send:
 49240                           	opt stack 13
 49241                           
 49242                           ;incstack = 0
 49243                           ;i2__i2c_send@dat stored from wreg
 49244  01608C  6E01               	movwf	i2__i2c_send@dat,c
 49245                           
 49246                           ;i2c.c: 55: SSP1BUF = dat;
 49247  01608E  C001  FFC9         	movff	i2__i2c_send@dat,4041	;volatile
 49248  016092  0012               	return		;funcret
 49249  016094                     __end_ofi2__i2c_send:
 49250                           	opt stack 0
 49251                           tosu	equ	0xFFF
 49252                           tosh	equ	0xFFE
 49253                           tosl	equ	0xFFD
 49254                           pclatu	equ	0xFFB
 49255                           pclath	equ	0xFFA
 49256                           tblptru	equ	0xFF8
 49257                           tblptrh	equ	0xFF7
 49258                           tblptrl	equ	0xFF6
 49259                           tablat	equ	0xFF5
 49260                           prodh	equ	0xFF4
 49261                           prodl	equ	0xFF3
 49262                           intcon	equ	0xFF2
 49263                           indf0	equ	0xFEF
 49264                           postinc0	equ	0xFEE
 49265                           fsr0h	equ	0xFEA
 49266                           fsr0l	equ	0xFE9
 49267                           wreg	equ	0xFE8
 49268                           indf1	equ	0xFE7
 49269                           postinc1	equ	0xFE6
 49270                           postdec1	equ	0xFE5
 49271                           plusw1	equ	0xFE3
 49272                           fsr1h	equ	0xFE2
 49273                           fsr1l	equ	0xFE1
 49274                           indf2	equ	0xFDF
 49275                           postinc2	equ	0xFDE
 49276                           postdec2	equ	0xFDD
 49277                           plusw2	equ	0xFDB
 49278                           fsr2h	equ	0xFDA
 49279                           fsr2l	equ	0xFD9
 49280                           status	equ	0xFD8
 49281                           
 49282 ;; *************** function _USBDeviceTasks *****************
 49283 ;; Defined at:
 49284 ;;		line 477 in file "usb_device.c"
 49285 ;; Parameters:    Size  Location     Type
 49286 ;;		None
 49287 ;; Auto vars:     Size  Location     Type
 49288 ;;  i               1   30[COMRAM] unsigned char 
 49289 ;; Return value:  Size  Location     Type
 49290 ;;                  1    wreg      void 
 49291 ;; Registers used:
 49292 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 49293 ;; Tracked objects:
 49294 ;;		On entry : 0/0
 49295 ;;		On exit  : 0/0
 49296 ;;		Unchanged: 0/0
 49297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49299 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49301 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49302 ;;Total ram usage:        1 bytes
 49303 ;; Hardware stack levels used:    1
 49304 ;; Hardware stack levels required when called:    8
 49305 ;; This function calls:
 49306 ;;		_USBCtrlEPAllowStatusStage
 49307 ;;		_USBCtrlEPService
 49308 ;;		_USBIncrement1msInternalTimers
 49309 ;;		_USBStallHandler
 49310 ;;		_USBSuspend
 49311 ;;		_USBWakeFromSuspend
 49312 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 49313 ;;		i2_USBDeviceInit
 49314 ;; This function is called by:
 49315 ;;		_SYS_InterruptHigh
 49316 ;; This function uses a non-reentrant model
 49317 ;;
 49318                           
 49319                           	psect	text205
 49320  0101BC                     __ptext205:
 49321                           	opt stack 0
 49322  0101BC                     _USBDeviceTasks:
 49323                           	opt stack 9
 49324                           
 49325                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 49326                           
 49327                           ;incstack = 0
 49328  0101BC  045D               	decf	_USBDeviceState,w,c	;volatile
 49329  0101BE  B4D8               	btfsc	status,2,c
 49330                           
 49331                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 49332  0101C0  BA65               	btfsc	3941,5,c	;volatile
 49333  0101C2  D007               	goto	i2l155
 49334                           
 49335                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 49336  0101C4  0E00               	movlw	0
 49337  0101C6  6E62               	movwf	3938,c	;volatile
 49338                           
 49339                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 49340  0101C8  010F               	movlb	15	; () banked
 49341  0101CA  8136               	bsf	54,0,b	;volatile
 49342                           
 49343                           ; BSR set to: 15
 49344                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 49345  0101CC  8936               	bsf	54,4,b	;volatile
 49346                           
 49347                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 49348  0101CE  0E02               	movlw	2
 49349  0101D0  6E5D               	movwf	_USBDeviceState,c	;volatile
 49350  0101D2                     i2l155:
 49351                           
 49352                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 49353                           
 49354                           ; BSR set to: 15
 49355                           
 49356                           ; BSR set to: 15
 49357  0101D2  A462               	btfss	3938,2,c	;volatile
 49358  0101D4  D006               	goto	i2l156
 49359  0101D6  010F               	movlb	15	; () banked
 49360  0101D8  A536               	btfss	54,2,b	;volatile
 49361  0101DA  D003               	goto	i2l156
 49362                           
 49363                           ; BSR set to: 15
 49364                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 49365  0101DC  9462               	bcf	3938,2,c	;volatile
 49366                           
 49367                           ; BSR set to: 15
 49368                           ;usb_device.c: 640: USBWakeFromSuspend();
 49369  0101DE  EC81  F0AC         	call	_USBWakeFromSuspend	;wreg free
 49370  0101E2                     i2l156:
 49371                           
 49372                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 49373  0101E2  A265               	btfss	3941,1,c	;volatile
 49374  0101E4  D002               	goto	i2l157
 49375                           
 49376                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 49377  0101E6  98A1               	bcf	4001,4,c	;volatile
 49378                           
 49379                           ;usb_device.c: 650: return;
 49380  0101E8  0012               	return	
 49381  0101EA                     i2l157:
 49382                           
 49383                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 49384  0101EA  A062               	btfss	3938,0,c	;volatile
 49385  0101EC  D009               	goto	i2l159
 49386  0101EE  010F               	movlb	15	; () banked
 49387  0101F0  A136               	btfss	54,0,b	;volatile
 49388  0101F2  D006               	goto	i2l159
 49389                           
 49390                           ; BSR set to: 15
 49391                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 49392  0101F4  EC81  F081         	call	i2_USBDeviceInit	;wreg free
 49393                           
 49394                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
 49395  0101F8  88A0               	bsf	4000,4,c	;volatile
 49396                           
 49397                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 49398  0101FA  0E04               	movlw	4
 49399  0101FC  6E5D               	movwf	_USBDeviceState,c	;volatile
 49400                           
 49401                           ;usb_device.c: 681: (UIR &= 0xFE);
 49402  0101FE  9062               	bcf	3938,0,c	;volatile
 49403  010200                     i2l159:
 49404                           
 49405                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 49406  010200  A862               	btfss	3938,4,c	;volatile
 49407  010202  D004               	goto	i2l160
 49408  010204  010F               	movlb	15	; () banked
 49409  010206  B936               	btfsc	54,4,b	;volatile
 49410                           
 49411                           ; BSR set to: 15
 49412                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 49413  010208  EC81  F0AD         	call	_USBSuspend	;wreg free
 49414  01020C                     i2l160:
 49415                           
 49416                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 49417  01020C  AC62               	btfss	3938,6,c	;volatile
 49418  01020E  D01C               	goto	i2l164
 49419                           
 49420                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 49421  010210  010F               	movlb	15	; () banked
 49422  010212  AD36               	btfss	54,6,b	;volatile
 49423  010214  D00E               	goto	i2l162
 49424                           
 49425                           ; BSR set to: 15
 49426                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 49427  010216  0E00               	movlw	0
 49428  010218  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 49429  01021A  0E73               	movlw	115
 49430  01021C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 49431  01021E  0E00               	movlw	0
 49432  010220  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 49433  010222  0E00               	movlw	0
 49434  010224  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 49435  010226  0E00               	movlw	0
 49436  010228  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 49437  01022A  0E01               	movlw	1
 49438  01022C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 49439  01022E  EC10  F0A0         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 49440  010232                     i2l162:
 49441                           
 49442                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 49443  010232  9C62               	bcf	3938,6,c	;volatile
 49444                           
 49445                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 49446  010234  EC50  F0AF         	call	_USBIncrement1msInternalTimers	;wreg free
 49447                           
 49448                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 49449  010238  0101               	movlb	1	; () banked
 49450  01023A  515F               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b	;volatile
 49451  01023C  A4D8               	btfss	status,2,c
 49452                           
 49453                           ; BSR set to: 1
 49454                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 49455  01023E  075F               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b	;volatile
 49456                           
 49457                           ; BSR set to: 1
 49458                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 49459                           
 49460                           ; BSR set to: 1
 49461  010240  515F               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b	;volatile
 49462  010242  B4D8               	btfsc	status,2,c
 49463                           
 49464                           ; BSR set to: 1
 49465                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 49466  010244  EC69  F096         	call	_USBCtrlEPAllowStatusStage	;wreg free
 49467  010248                     i2l164:
 49468                           
 49469                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 49470  010248  AA62               	btfss	3938,5,c	;volatile
 49471  01024A  D004               	goto	i2l165
 49472  01024C  010F               	movlb	15	; () banked
 49473  01024E  BB36               	btfsc	54,5,b	;volatile
 49474                           
 49475                           ; BSR set to: 15
 49476                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 49477  010250  EC52  F0AB         	call	_USBStallHandler	;wreg free
 49478  010254                     i2l165:
 49479                           
 49480                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 49481  010254  A262               	btfss	3938,1,c	;volatile
 49482  010256  D012               	goto	i2l166
 49483  010258  010F               	movlb	15	; () banked
 49484  01025A  A336               	btfss	54,1,b	;volatile
 49485  01025C  D00F               	goto	i2l166
 49486                           
 49487                           ; BSR set to: 15
 49488                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 49489  01025E  0E7F               	movlw	127
 49490  010260  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 49491  010262  6810               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 49492  010264  0E00               	movlw	0
 49493  010266  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 49494  010268  0E00               	movlw	0
 49495  01026A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 49496  01026C  0E00               	movlw	0
 49497  01026E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 49498  010270  0E01               	movlw	1
 49499  010272  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 49500  010274  EC10  F0A0         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 49501                           
 49502                           ;usb_device.c: 759: {UEIR = 0;};
 49503  010278  0E00               	movlw	0
 49504  01027A  6E63               	movwf	3939,c	;volatile
 49505  01027C                     i2l166:
 49506                           
 49507                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 49508  01027C  0E04               	movlw	4
 49509  01027E  605D               	cpfslt	_USBDeviceState,c	;volatile
 49510  010280  D002               	goto	i2l167
 49511                           
 49512                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 49513  010282  98A1               	bcf	4001,4,c	;volatile
 49514                           
 49515                           ;usb_device.c: 777: return;
 49516  010284  0012               	return	
 49517  010286                     i2l167:
 49518                           
 49519                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 49520  010286  010F               	movlb	15	; () banked
 49521  010288  A736               	btfss	54,3,b	;volatile
 49522  01028A  D039               	goto	i2u1766_40
 49523                           
 49524                           ; BSR set to: 15
 49525                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 49526  01028C  0E00               	movlw	0
 49527  01028E  6E1F               	movwf	USBDeviceTasks@i,c
 49528  010290                     i2l18130:
 49529                           
 49530                           ; BSR set to: 15
 49531  010290  0E03               	movlw	3
 49532  010292  641F               	cpfsgt	USBDeviceTasks@i,c
 49533  010294  D001               	goto	i2l169
 49534  010296  D033               	goto	i2u1766_40
 49535  010298                     i2l169:
 49536                           
 49537                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 49538  010298  A662               	btfss	3938,3,c	;volatile
 49539  01029A  D031               	goto	i2u1766_40
 49540                           
 49541                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 49542  01029C  CF64 F05E          	movff	3940,_USTATcopy	;volatile
 49543                           
 49544                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 49545  0102A0  305E               	rrcf	_USTATcopy,w,c	;volatile
 49546  0102A2  32E8               	rrcf	wreg,f,c
 49547  0102A4  32E8               	rrcf	wreg,f,c
 49548  0102A6  0B0F               	andlw	15
 49549  0102A8  0101               	movlb	1	; () banked
 49550  0102AA  6F61               	movwf	_endpoint_number& (0+255),b	;volatile
 49551                           
 49552                           ; BSR set to: 1
 49553                           ;usb_device.c: 793: (UIR &= 0xF7);
 49554  0102AC  9662               	bcf	3938,3,c	;volatile
 49555                           
 49556                           ; BSR set to: 1
 49557                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 49558  0102AE  B45E               	btfsc	_USTATcopy,2,c	;volatile
 49559  0102B0  D007               	goto	i2l172
 49560                           
 49561                           ; BSR set to: 1
 49562                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 49563  0102B2  5161               	movf	_endpoint_number& (0+255),w,b	;volatile
 49564  0102B4  0D01               	mullw	1
 49565  0102B6  0E31               	movlw	low _ep_data_out
 49566  0102B8  24F3               	addwf	prodl,w,c
 49567  0102BA  6ED9               	movwf	fsr2l,c
 49568  0102BC  0E01               	movlw	high _ep_data_out
 49569  0102BE  D006               	goto	L72
 49570  0102C0                     i2l172:
 49571                           
 49572                           ; BSR set to: 1
 49573                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 49574                           
 49575                           ; BSR set to: 1
 49576  0102C0  5161               	movf	_endpoint_number& (0+255),w,b	;volatile
 49577  0102C2  0D01               	mullw	1
 49578  0102C4  0E34               	movlw	low _ep_data_in
 49579  0102C6  24F3               	addwf	prodl,w,c
 49580  0102C8  6ED9               	movwf	fsr2l,c
 49581  0102CA  0E01               	movlw	high _ep_data_in
 49582  0102CC                     L72:
 49583  0102CC  20F4               	addwfc	prodh,w,c
 49584  0102CE  6EDA               	movwf	fsr2h,c
 49585  0102D0  70DF               	btg	indf2,0,c
 49586                           
 49587                           ; BSR set to: 1
 49588                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 49589                           
 49590                           ; BSR set to: 1
 49591  0102D2  5161               	movf	_endpoint_number& (0+255),w,b	;volatile
 49592  0102D4  A4D8               	btfss	status,2,c
 49593  0102D6  D003               	goto	i2l174
 49594                           
 49595                           ; BSR set to: 1
 49596                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 49597  0102D8  EC37  F09D         	call	_USBCtrlEPService	;wreg free
 49598                           
 49599                           ;usb_device.c: 813: }
 49600  0102DC  D00E               	goto	i2l176
 49601  0102DE                     i2l174:
 49602                           
 49603                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 49604  0102DE  0E00               	movlw	0
 49605  0102E0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 49606  0102E2  0E72               	movlw	114
 49607  0102E4  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 49608  0102E6  0E5E               	movlw	low _USTATcopy
 49609  0102E8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 49610  0102EA  0E00               	movlw	high _USTATcopy
 49611  0102EC  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 49612  0102EE  0E00               	movlw	0
 49613  0102F0  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 49614  0102F2  0E00               	movlw	0
 49615  0102F4  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 49616  0102F6  EC10  F0A0         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 49617  0102FA                     i2l176:
 49618  0102FA  2A1F               	incf	USBDeviceTasks@i,f,c
 49619  0102FC  D7C9               	goto	i2l18130
 49620  0102FE                     i2u1766_40:
 49621                           
 49622                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 49623  0102FE  98A1               	bcf	4001,4,c	;volatile
 49624  010300  0012               	return		;funcret
 49625  010302                     __end_of_USBDeviceTasks:
 49626                           	opt stack 0
 49627                           tosu	equ	0xFFF
 49628                           tosh	equ	0xFFE
 49629                           tosl	equ	0xFFD
 49630                           pclatu	equ	0xFFB
 49631                           pclath	equ	0xFFA
 49632                           tblptru	equ	0xFF8
 49633                           tblptrh	equ	0xFF7
 49634                           tblptrl	equ	0xFF6
 49635                           tablat	equ	0xFF5
 49636                           prodh	equ	0xFF4
 49637                           prodl	equ	0xFF3
 49638                           intcon	equ	0xFF2
 49639                           indf0	equ	0xFEF
 49640                           postinc0	equ	0xFEE
 49641                           fsr0h	equ	0xFEA
 49642                           fsr0l	equ	0xFE9
 49643                           wreg	equ	0xFE8
 49644                           indf1	equ	0xFE7
 49645                           postinc1	equ	0xFE6
 49646                           postdec1	equ	0xFE5
 49647                           plusw1	equ	0xFE3
 49648                           fsr1h	equ	0xFE2
 49649                           fsr1l	equ	0xFE1
 49650                           indf2	equ	0xFDF
 49651                           postinc2	equ	0xFDE
 49652                           postdec2	equ	0xFDD
 49653                           plusw2	equ	0xFDB
 49654                           fsr2h	equ	0xFDA
 49655                           fsr2l	equ	0xFD9
 49656                           status	equ	0xFD8
 49657                           
 49658 ;; *************** function i2_USBDeviceInit *****************
 49659 ;; Defined at:
 49660 ;;		line 277 in file "usb_device.c"
 49661 ;; Parameters:    Size  Location     Type
 49662 ;;		None
 49663 ;; Auto vars:     Size  Location     Type
 49664 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 49665 ;; Return value:  Size  Location     Type
 49666 ;;                  1    wreg      void 
 49667 ;; Registers used:
 49668 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 49669 ;; Tracked objects:
 49670 ;;		On entry : 0/0
 49671 ;;		On exit  : 0/0
 49672 ;;		Unchanged: 0/0
 49673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49675 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49677 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49678 ;;Total ram usage:        1 bytes
 49679 ;; Hardware stack levels used:    1
 49680 ;; Hardware stack levels required when called:    1
 49681 ;; This function calls:
 49682 ;;		i2_memset
 49683 ;; This function is called by:
 49684 ;;		_USBDeviceTasks
 49685 ;; This function uses a non-reentrant model
 49686 ;;
 49687                           
 49688                           	psect	text206
 49689  010302                     __ptext206:
 49690                           	opt stack 0
 49691  010302                     i2_USBDeviceInit:
 49692                           	opt stack 15
 49693                           
 49694                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 49695                           
 49696                           ;incstack = 0
 49697  010302  98A0               	bcf	4000,4,c	;volatile
 49698                           
 49699                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 49700  010304  0E00               	movlw	0
 49701  010306  6E63               	movwf	3939,c	;volatile
 49702                           
 49703                           ;usb_device.c: 291: {UIR = 0;};
 49704  010308  0E00               	movlw	0
 49705  01030A  6E62               	movwf	3938,c	;volatile
 49706                           
 49707                           ;usb_device.c: 294: UEP0 = 0;
 49708  01030C  0E00               	movlw	0
 49709  01030E  010F               	movlb	15	; () banked
 49710  010310  6F26               	movwf	38,b	;volatile
 49711                           
 49712                           ; BSR set to: 15
 49713                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 49714  010312  0E27               	movlw	39
 49715  010314  6E01               	movwf	i2memset@p1,c
 49716  010316  0E0F               	movlw	15
 49717  010318  6E02               	movwf	i2memset@p1+1,c
 49718  01031A  0E00               	movlw	0
 49719  01031C  6E04               	movwf	i2memset@c+1,c
 49720  01031E  0E00               	movlw	0
 49721  010320  6E03               	movwf	i2memset@c,c
 49722  010322  0E00               	movlw	0
 49723  010324  6E06               	movwf	i2memset@n+1,c
 49724  010326  0E02               	movlw	2
 49725  010328  6E05               	movwf	i2memset@n,c
 49726  01032A  EC0B  F0AE         	call	i2_memset	;wreg free
 49727                           
 49728                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 49729  01032E  0E16               	movlw	22
 49730  010330  010F               	movlb	15	; () banked
 49731  010332  6F39               	movwf	57,b	;volatile
 49732                           
 49733                           ; BSR set to: 15
 49734  010334  0E9F               	movlw	159
 49735  010336  6F37               	movwf	55,b	;volatile
 49736                           
 49737                           ; BSR set to: 15
 49738  010338  0E7B               	movlw	123
 49739  01033A  6F36               	movwf	54,b	;volatile
 49740                           
 49741                           ; BSR set to: 15
 49742                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 49743  01033C  0E00               	movlw	0
 49744  01033E  6E09               	movwf	i2USBDeviceInit@i,c
 49745  010340                     i2l17924:
 49746                           
 49747                           ; BSR set to: 15
 49748  010340  0E0B               	movlw	11
 49749  010342  6409               	cpfsgt	i2USBDeviceInit@i,c
 49750  010344  D001               	goto	i2l145
 49751  010346  D00E               	goto	i2u1734_40
 49752  010348                     i2l145:
 49753                           
 49754                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 49755                           
 49756                           ; BSR set to: 15
 49757  010348  5009               	movf	i2USBDeviceInit@i,w,c
 49758  01034A  0D04               	mullw	4
 49759  01034C  0E00               	movlw	0
 49760  01034E  24F3               	addwf	prodl,w,c
 49761  010350  6ED9               	movwf	fsr2l,c
 49762  010352  0E0D               	movlw	13
 49763  010354  20F4               	addwfc	prodh,w,c
 49764  010356  6EDA               	movwf	fsr2h,c
 49765  010358  6ADE               	clrf	postinc2,c
 49766  01035A  6ADE               	clrf	postinc2,c
 49767  01035C  6ADE               	clrf	postinc2,c
 49768  01035E  6ADD               	clrf	postdec2,c
 49769  010360  2A09               	incf	i2USBDeviceInit@i,f,c
 49770  010362  D7EE               	goto	i2l17924
 49771  010364                     i2u1734_40:
 49772                           
 49773                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 49774  010364  8C65               	bsf	3941,6,c	;volatile
 49775                           
 49776                           ;usb_device.c: 316: UADDR = 0x00;
 49777  010366  0E00               	movlw	0
 49778  010368  010F               	movlb	15	; () banked
 49779  01036A  6F38               	movwf	56,b	;volatile
 49780                           
 49781                           ; BSR set to: 15
 49782                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 49783  01036C  9865               	bcf	3941,4,c	;volatile
 49784                           
 49785                           ; BSR set to: 15
 49786                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 49787  01036E  9C65               	bcf	3941,6,c	;volatile
 49788  010370                     
 49789                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 49790                           
 49791                           ; BSR set to: 15
 49792  010370  9662               	bcf	3938,3,c	;volatile
 49793                           
 49794                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 49795  010372  0E00               	movlw	0
 49796  010374  0101               	movlb	1	; () banked
 49797  010376  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 49798                           
 49799                           ; BSR set to: 1
 49800                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 49801  010378  0E00               	movlw	0
 49802  01037A  6F03               	movwf	(_outPipes+3)& (0+255),b	;volatile
 49803                           
 49804                           ; BSR set to: 1
 49805                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 49806  01037C  0E00               	movlw	0
 49807  01037E  6F05               	movwf	(_outPipes+5)& (0+255),b	;volatile
 49808  010380  0E00               	movlw	0
 49809  010382  6F04               	movwf	(_outPipes+4)& (0+255),b	;volatile
 49810                           
 49811                           ; BSR set to: 1
 49812                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 49813  010384  B662               	btfsc	3938,3,c	;volatile
 49814  010386  D7F4               	goto	i2l147
 49815                           
 49816                           ; BSR set to: 1
 49817                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 49818                           
 49819                           ; BSR set to: 1
 49820  010388  0E01               	movlw	1
 49821  01038A  6F5D               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 49822                           
 49823                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 49824  01038C  0E01               	movlw	1
 49825  01038E  6F5C               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 49826                           
 49827                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 49828  010390  0E00               	movlw	0
 49829  010392  6F5B               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 49830                           
 49831                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 49832  010394  0E00               	movlw	0
 49833  010396  6F5A               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 49834                           
 49835                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 49836  010398  0E00               	movlw	0
 49837  01039A  6F62               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 49838                           
 49839                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 49840  01039C  0E00               	movlw	0
 49841  01039E  6E09               	movwf	i2USBDeviceInit@i,c
 49842  0103A0                     i2l17952:
 49843                           
 49844                           ; BSR set to: 1
 49845  0103A0  0E02               	movlw	2
 49846  0103A2  6409               	cpfsgt	i2USBDeviceInit@i,c
 49847  0103A4  D001               	goto	i2l149
 49848  0103A6  D02E               	goto	i2u1737_40
 49849  0103A8                     i2l149:
 49850                           
 49851                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 49852                           
 49853                           ; BSR set to: 1
 49854  0103A8  5009               	movf	i2USBDeviceInit@i,w,c
 49855  0103AA  0D02               	mullw	2
 49856  0103AC  0E0F               	movlw	low _pBDTEntryIn
 49857  0103AE  24F3               	addwf	prodl,w,c
 49858  0103B0  6ED9               	movwf	fsr2l,c
 49859  0103B2  0E01               	movlw	high _pBDTEntryIn
 49860  0103B4  20F4               	addwfc	prodh,w,c
 49861  0103B6  6EDA               	movwf	fsr2h,c
 49862  0103B8  0E00               	movlw	0
 49863  0103BA  6EDE               	movwf	postinc2,c
 49864  0103BC  0E00               	movlw	0
 49865  0103BE  6EDD               	movwf	postdec2,c
 49866                           
 49867                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 49868  0103C0  5009               	movf	i2USBDeviceInit@i,w,c
 49869  0103C2  0D02               	mullw	2
 49870  0103C4  0E15               	movlw	low _pBDTEntryOut
 49871  0103C6  24F3               	addwf	prodl,w,c
 49872  0103C8  6ED9               	movwf	fsr2l,c
 49873  0103CA  0E01               	movlw	high _pBDTEntryOut
 49874  0103CC  20F4               	addwfc	prodh,w,c
 49875  0103CE  6EDA               	movwf	fsr2h,c
 49876  0103D0  0E00               	movlw	0
 49877  0103D2  6EDE               	movwf	postinc2,c
 49878  0103D4  0E00               	movlw	0
 49879  0103D6  6EDD               	movwf	postdec2,c
 49880                           
 49881                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 49882  0103D8  5009               	movf	i2USBDeviceInit@i,w,c
 49883  0103DA  0D01               	mullw	1
 49884  0103DC  0E34               	movlw	low _ep_data_in
 49885  0103DE  24F3               	addwf	prodl,w,c
 49886  0103E0  6ED9               	movwf	fsr2l,c
 49887  0103E2  0E01               	movlw	high _ep_data_in
 49888  0103E4  20F4               	addwfc	prodh,w,c
 49889  0103E6  6EDA               	movwf	fsr2h,c
 49890  0103E8  0E00               	movlw	0
 49891  0103EA  6EDF               	movwf	indf2,c
 49892                           
 49893                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 49894  0103EC  5009               	movf	i2USBDeviceInit@i,w,c
 49895  0103EE  0D01               	mullw	1
 49896  0103F0  0E31               	movlw	low _ep_data_out
 49897  0103F2  24F3               	addwf	prodl,w,c
 49898  0103F4  6ED9               	movwf	fsr2l,c
 49899  0103F6  0E01               	movlw	high _ep_data_out
 49900  0103F8  20F4               	addwfc	prodh,w,c
 49901  0103FA  6EDA               	movwf	fsr2h,c
 49902  0103FC  0E00               	movlw	0
 49903  0103FE  6EDF               	movwf	indf2,c
 49904  010400  2A09               	incf	i2USBDeviceInit@i,f,c
 49905  010402  D7CE               	goto	i2l17952
 49906  010404                     i2u1737_40:
 49907                           
 49908                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 49909  010404  0E08               	movlw	8
 49910  010406  0101               	movlb	1	; () banked
 49911  010408  6F0F               	movwf	_pBDTEntryIn& (0+255),b
 49912  01040A  0E0D               	movlw	13
 49913  01040C  6F10               	movwf	(_pBDTEntryIn+1)& (0+255),b
 49914                           
 49915                           ; BSR set to: 1
 49916                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 49917  01040E  0E16               	movlw	22
 49918  010410  010F               	movlb	15	; () banked
 49919  010412  6F26               	movwf	38,b	;volatile
 49920                           
 49921                           ; BSR set to: 15
 49922                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 49923  010414  0E0D               	movlw	13
 49924  010416  010D               	movlb	13	; () banked
 49925  010418  6F03               	movwf	3,b	;volatile
 49926  01041A  0E30               	movlw	48
 49927  01041C  6F02               	movwf	2,b	;volatile
 49928                           
 49929                           ; BSR set to: 13
 49930                           ;usb_device.c: 359: BDT[0].CNT = 8;
 49931  01041E  0E08               	movlw	8
 49932  010420  6F01               	movwf	1,b	;volatile
 49933                           
 49934                           ; BSR set to: 13
 49935                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 49936  010422  0E04               	movlw	4
 49937  010424  6F00               	movwf	0,b	;volatile
 49938                           
 49939                           ; BSR set to: 13
 49940                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 49941  010426  8F00               	bsf	0,7,b	;volatile
 49942                           
 49943                           ; BSR set to: 13
 49944                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 49945  010428  0E00               	movlw	0
 49946  01042A  0101               	movlb	1	; () banked
 49947  01042C  6FC3               	movwf	_USBActiveConfiguration& (0+255),b	;volatile
 49948                           
 49949                           ; BSR set to: 1
 49950                           ;usb_device.c: 366: USB1msTickCount = 0;
 49951  01042E  0E00               	movlw	0
 49952  010430  6F27               	movwf	_USB1msTickCount& (0+255),b	;volatile
 49953  010432  0E00               	movlw	0
 49954  010434  6F28               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 49955  010436  0E00               	movlw	0
 49956  010438  6F29               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 49957  01043A  0E00               	movlw	0
 49958  01043C  6F2A               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 49959                           
 49960                           ; BSR set to: 1
 49961                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 49962  01043E  0E00               	movlw	0
 49963  010440  6F59               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 49964                           
 49965                           ; BSR set to: 1
 49966                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 49967  010442  0E00               	movlw	0
 49968  010444  6E5D               	movwf	_USBDeviceState,c	;volatile
 49969                           
 49970                           ; BSR set to: 1
 49971  010446  0012               	return		;funcret
 49972  010448                     __end_ofi2_USBDeviceInit:
 49973                           	opt stack 0
 49974                           tosu	equ	0xFFF
 49975                           tosh	equ	0xFFE
 49976                           tosl	equ	0xFFD
 49977                           pclatu	equ	0xFFB
 49978                           pclath	equ	0xFFA
 49979                           tblptru	equ	0xFF8
 49980                           tblptrh	equ	0xFF7
 49981                           tblptrl	equ	0xFF6
 49982                           tablat	equ	0xFF5
 49983                           prodh	equ	0xFF4
 49984                           prodl	equ	0xFF3
 49985                           intcon	equ	0xFF2
 49986                           indf0	equ	0xFEF
 49987                           postinc0	equ	0xFEE
 49988                           fsr0h	equ	0xFEA
 49989                           fsr0l	equ	0xFE9
 49990                           wreg	equ	0xFE8
 49991                           indf1	equ	0xFE7
 49992                           postinc1	equ	0xFE6
 49993                           postdec1	equ	0xFE5
 49994                           plusw1	equ	0xFE3
 49995                           fsr1h	equ	0xFE2
 49996                           fsr1l	equ	0xFE1
 49997                           indf2	equ	0xFDF
 49998                           postinc2	equ	0xFDE
 49999                           postdec2	equ	0xFDD
 50000                           plusw2	equ	0xFDB
 50001                           fsr2h	equ	0xFDA
 50002                           fsr2l	equ	0xFD9
 50003                           status	equ	0xFD8
 50004                           
 50005 ;; *************** function _USBWakeFromSuspend *****************
 50006 ;; Defined at:
 50007 ;;		line 2305 in file "usb_device.c"
 50008 ;; Parameters:    Size  Location     Type
 50009 ;;		None
 50010 ;; Auto vars:     Size  Location     Type
 50011 ;;		None
 50012 ;; Return value:  Size  Location     Type
 50013 ;;                  1    wreg      void 
 50014 ;; Registers used:
 50015 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 50016 ;; Tracked objects:
 50017 ;;		On entry : 0/0
 50018 ;;		On exit  : 0/0
 50019 ;;		Unchanged: 0/0
 50020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50025 ;;Total ram usage:        0 bytes
 50026 ;; Hardware stack levels used:    1
 50027 ;; Hardware stack levels required when called:    4
 50028 ;; This function calls:
 50029 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 50030 ;; This function is called by:
 50031 ;;		_USBDeviceTasks
 50032 ;; This function uses a non-reentrant model
 50033 ;;
 50034                           
 50035                           	psect	text207
 50036  015902                     __ptext207:
 50037                           	opt stack 0
 50038  015902                     _USBWakeFromSuspend:
 50039                           	opt stack 12
 50040                           
 50041                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 50042                           
 50043                           ; BSR set to: 1
 50044                           ;incstack = 0
 50045  015902  0E00               	movlw	0
 50046  015904  0101               	movlb	1	; () banked
 50047  015906  6F62               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 50048                           
 50049                           ; BSR set to: 1
 50050                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 50051  015908  0E00               	movlw	0
 50052  01590A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 50053  01590C  0E74               	movlw	116
 50054  01590E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 50055  015910  0E00               	movlw	0
 50056  015912  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 50057  015914  0E00               	movlw	0
 50058  015916  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 50059  015918  0E00               	movlw	0
 50060  01591A  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 50061  01591C  0E00               	movlw	0
 50062  01591E  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 50063  015920  EC10  F0A0         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 50064                           
 50065                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 50066  015924  9265               	bcf	3941,1,c	;volatile
 50067                           
 50068                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 50069  015926  010F               	movlb	15	; () banked
 50070  015928  9536               	bcf	54,2,b	;volatile
 50071                           
 50072                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 50073  01592A  D001               	goto	i2l315
 50074  01592C                     
 50075                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 50076                           
 50077                           ; BSR set to: 15
 50078  01592C  9462               	bcf	3938,2,c	;volatile
 50079  01592E                     i2l315:
 50080  01592E  B462               	btfsc	3938,2,c	;volatile
 50081  015930  D7FD               	goto	i2l316
 50082                           
 50083                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 50084  015932  0E00               	movlw	0
 50085  015934  0101               	movlb	1	; () banked
 50086  015936  6F59               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 50087                           
 50088                           ; BSR set to: 1
 50089  015938  0012               	return		;funcret
 50090  01593A                     __end_of_USBWakeFromSuspend:
 50091                           	opt stack 0
 50092                           tosu	equ	0xFFF
 50093                           tosh	equ	0xFFE
 50094                           tosl	equ	0xFFD
 50095                           pclatu	equ	0xFFB
 50096                           pclath	equ	0xFFA
 50097                           tblptru	equ	0xFF8
 50098                           tblptrh	equ	0xFF7
 50099                           tblptrl	equ	0xFF6
 50100                           tablat	equ	0xFF5
 50101                           prodh	equ	0xFF4
 50102                           prodl	equ	0xFF3
 50103                           intcon	equ	0xFF2
 50104                           indf0	equ	0xFEF
 50105                           postinc0	equ	0xFEE
 50106                           fsr0h	equ	0xFEA
 50107                           fsr0l	equ	0xFE9
 50108                           wreg	equ	0xFE8
 50109                           indf1	equ	0xFE7
 50110                           postinc1	equ	0xFE6
 50111                           postdec1	equ	0xFE5
 50112                           plusw1	equ	0xFE3
 50113                           fsr1h	equ	0xFE2
 50114                           fsr1l	equ	0xFE1
 50115                           indf2	equ	0xFDF
 50116                           postinc2	equ	0xFDE
 50117                           postdec2	equ	0xFDD
 50118                           plusw2	equ	0xFDB
 50119                           fsr2h	equ	0xFDA
 50120                           fsr2l	equ	0xFD9
 50121                           status	equ	0xFD8
 50122                           
 50123 ;; *************** function _USBSuspend *****************
 50124 ;; Defined at:
 50125 ;;		line 2247 in file "usb_device.c"
 50126 ;; Parameters:    Size  Location     Type
 50127 ;;		None
 50128 ;; Auto vars:     Size  Location     Type
 50129 ;;		None
 50130 ;; Return value:  Size  Location     Type
 50131 ;;                  1    wreg      void 
 50132 ;; Registers used:
 50133 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 50134 ;; Tracked objects:
 50135 ;;		On entry : 0/0
 50136 ;;		On exit  : 0/0
 50137 ;;		Unchanged: 0/0
 50138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50143 ;;Total ram usage:        0 bytes
 50144 ;; Hardware stack levels used:    1
 50145 ;; Hardware stack levels required when called:    4
 50146 ;; This function calls:
 50147 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 50148 ;; This function is called by:
 50149 ;;		_USBDeviceTasks
 50150 ;; This function uses a non-reentrant model
 50151 ;;
 50152                           
 50153                           	psect	text208
 50154  015B02                     __ptext208:
 50155                           	opt stack 0
 50156  015B02                     _USBSuspend:
 50157                           	opt stack 12
 50158                           
 50159                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 50160                           
 50161                           ; BSR set to: 1
 50162                           ;incstack = 0
 50163  015B02  010F               	movlb	15	; () banked
 50164  015B04  8536               	bsf	54,2,b	;volatile
 50165                           
 50166                           ; BSR set to: 15
 50167                           ;usb_device.c: 2273: (UIR &= 0xEF);
 50168  015B06  9862               	bcf	3938,4,c	;volatile
 50169                           
 50170                           ; BSR set to: 15
 50171                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 50172  015B08  8265               	bsf	3941,1,c	;volatile
 50173                           
 50174                           ; BSR set to: 15
 50175                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 50176  015B0A  0E01               	movlw	1
 50177  015B0C  0101               	movlb	1	; () banked
 50178  015B0E  6F62               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 50179                           
 50180                           ; BSR set to: 1
 50181                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 50182  015B10  0E00               	movlw	0
 50183  015B12  6F59               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 50184                           
 50185                           ; BSR set to: 1
 50186                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 50187  015B14  0E00               	movlw	0
 50188  015B16  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 50189  015B18  0E75               	movlw	117
 50190  015B1A  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 50191  015B1C  0E00               	movlw	0
 50192  015B1E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 50193  015B20  0E00               	movlw	0
 50194  015B22  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 50195  015B24  0E00               	movlw	0
 50196  015B26  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 50197  015B28  0E00               	movlw	0
 50198  015B2A  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 50199  015B2C  EC10  F0A0         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 50200  015B30  0012               	return		;funcret
 50201  015B32                     __end_of_USBSuspend:
 50202                           	opt stack 0
 50203                           tosu	equ	0xFFF
 50204                           tosh	equ	0xFFE
 50205                           tosl	equ	0xFFD
 50206                           pclatu	equ	0xFFB
 50207                           pclath	equ	0xFFA
 50208                           tblptru	equ	0xFF8
 50209                           tblptrh	equ	0xFF7
 50210                           tblptrl	equ	0xFF6
 50211                           tablat	equ	0xFF5
 50212                           prodh	equ	0xFF4
 50213                           prodl	equ	0xFF3
 50214                           intcon	equ	0xFF2
 50215                           indf0	equ	0xFEF
 50216                           postinc0	equ	0xFEE
 50217                           fsr0h	equ	0xFEA
 50218                           fsr0l	equ	0xFE9
 50219                           wreg	equ	0xFE8
 50220                           indf1	equ	0xFE7
 50221                           postinc1	equ	0xFE6
 50222                           postdec1	equ	0xFE5
 50223                           plusw1	equ	0xFE3
 50224                           fsr1h	equ	0xFE2
 50225                           fsr1l	equ	0xFE1
 50226                           indf2	equ	0xFDF
 50227                           postinc2	equ	0xFDE
 50228                           postdec2	equ	0xFDD
 50229                           plusw2	equ	0xFDB
 50230                           fsr2h	equ	0xFDA
 50231                           fsr2l	equ	0xFD9
 50232                           status	equ	0xFD8
 50233                           
 50234 ;; *************** function _USBStallHandler *****************
 50235 ;; Defined at:
 50236 ;;		line 2204 in file "usb_device.c"
 50237 ;; Parameters:    Size  Location     Type
 50238 ;;		None
 50239 ;; Auto vars:     Size  Location     Type
 50240 ;;		None
 50241 ;; Return value:  Size  Location     Type
 50242 ;;                  1    wreg      void 
 50243 ;; Registers used:
 50244 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 50245 ;; Tracked objects:
 50246 ;;		On entry : 0/0
 50247 ;;		On exit  : 0/0
 50248 ;;		Unchanged: 0/0
 50249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50252 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50253 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50254 ;;Total ram usage:        1 bytes
 50255 ;; Hardware stack levels used:    1
 50256 ;; This function calls:
 50257 ;;		Nothing
 50258 ;; This function is called by:
 50259 ;;		_USBDeviceTasks
 50260 ;; This function uses a non-reentrant model
 50261 ;;
 50262                           
 50263                           	psect	text209
 50264  0156A4                     __ptext209:
 50265                           	opt stack 0
 50266  0156A4                     _USBStallHandler:
 50267                           	opt stack 16
 50268                           
 50269                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 50270                           
 50271                           ;incstack = 0
 50272  0156A4  010F               	movlb	15	; () banked
 50273  0156A6  A126               	btfss	38,0,b	;volatile
 50274  0156A8  D01D               	goto	i2l307
 50275                           
 50276                           ; BSR set to: 15
 50277                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 50278  0156AA  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 50279  0156AE  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 50280  0156B2  0E80               	movlw	128
 50281  0156B4  18DE               	xorwf	postinc2,w,c
 50282  0156B6  A4D8               	btfss	status,2,c
 50283  0156B8  D014               	goto	i2l308
 50284                           
 50285                           ; BSR set to: 15
 50286  0156BA  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 50287  0156BE  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50288  0156C2  0E84               	movlw	132
 50289  0156C4  18DE               	xorwf	postinc2,w,c
 50290  0156C6  A4D8               	btfss	status,2,c
 50291  0156C8  D00C               	goto	i2l308
 50292                           
 50293                           ; BSR set to: 15
 50294                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 50295  0156CA  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 50296  0156CE  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 50297  0156D2  0E0C               	movlw	12
 50298  0156D4  6EDF               	movwf	indf2,c
 50299                           
 50300                           ; BSR set to: 15
 50301                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 50302  0156D6  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 50303  0156DA  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 50304  0156DE  0E00               	movlw	0
 50305  0156E0  8EDB               	bsf	plusw2,7,c
 50306  0156E2                     i2l308:
 50307                           
 50308                           ; BSR set to: 15
 50309                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 50310                           
 50311                           ; BSR set to: 15
 50312  0156E2  9126               	bcf	38,0,b	;volatile
 50313  0156E4                     i2l307:
 50314                           
 50315                           ; BSR set to: 15
 50316                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 50317  0156E4  9A62               	bcf	3938,5,c	;volatile
 50318                           
 50319                           ; BSR set to: 15
 50320  0156E6  0012               	return		;funcret
 50321  0156E8                     __end_of_USBStallHandler:
 50322                           	opt stack 0
 50323                           tosu	equ	0xFFF
 50324                           tosh	equ	0xFFE
 50325                           tosl	equ	0xFFD
 50326                           pclatu	equ	0xFFB
 50327                           pclath	equ	0xFFA
 50328                           tblptru	equ	0xFF8
 50329                           tblptrh	equ	0xFF7
 50330                           tblptrl	equ	0xFF6
 50331                           tablat	equ	0xFF5
 50332                           prodh	equ	0xFF4
 50333                           prodl	equ	0xFF3
 50334                           intcon	equ	0xFF2
 50335                           indf0	equ	0xFEF
 50336                           postinc0	equ	0xFEE
 50337                           fsr0h	equ	0xFEA
 50338                           fsr0l	equ	0xFE9
 50339                           wreg	equ	0xFE8
 50340                           indf1	equ	0xFE7
 50341                           postinc1	equ	0xFE6
 50342                           postdec1	equ	0xFE5
 50343                           plusw1	equ	0xFE3
 50344                           fsr1h	equ	0xFE2
 50345                           fsr1l	equ	0xFE1
 50346                           indf2	equ	0xFDF
 50347                           postinc2	equ	0xFDE
 50348                           postdec2	equ	0xFDD
 50349                           plusw2	equ	0xFDB
 50350                           fsr2h	equ	0xFDA
 50351                           fsr2l	equ	0xFD9
 50352                           status	equ	0xFD8
 50353                           
 50354 ;; *************** function _USBIncrement1msInternalTimers *****************
 50355 ;; Defined at:
 50356 ;;		line 3027 in file "usb_device.c"
 50357 ;; Parameters:    Size  Location     Type
 50358 ;;		None
 50359 ;; Auto vars:     Size  Location     Type
 50360 ;;		None
 50361 ;; Return value:  Size  Location     Type
 50362 ;;                  1    wreg      void 
 50363 ;; Registers used:
 50364 ;;		wreg, status,2, status,0
 50365 ;; Tracked objects:
 50366 ;;		On entry : 0/0
 50367 ;;		On exit  : 0/0
 50368 ;;		Unchanged: 0/0
 50369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50374 ;;Total ram usage:        0 bytes
 50375 ;; Hardware stack levels used:    1
 50376 ;; This function calls:
 50377 ;;		Nothing
 50378 ;; This function is called by:
 50379 ;;		_USBDeviceTasks
 50380 ;; This function uses a non-reentrant model
 50381 ;;
 50382                           
 50383                           	psect	text210
 50384  015EA0                     __ptext210:
 50385                           	opt stack 0
 50386  015EA0                     _USBIncrement1msInternalTimers:
 50387                           	opt stack 16
 50388                           
 50389                           ;usb_device.c: 3035: USB1msTickCount++;
 50390                           
 50391                           ; BSR set to: 15
 50392                           ;incstack = 0
 50393  015EA0  0E01               	movlw	1
 50394  015EA2  0101               	movlb	1	; () banked
 50395  015EA4  2727               	addwf	_USB1msTickCount& (0+255),f,b	;volatile
 50396  015EA6  0E00               	movlw	0
 50397  015EA8  2328               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
 50398  015EAA  2329               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
 50399  015EAC  232A               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
 50400                           
 50401                           ; BSR set to: 1
 50402                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 50403  015EAE  5162               	movf	_USBBusIsSuspended& (0+255),w,b	;volatile
 50404  015EB0  A4D8               	btfss	status,2,c
 50405  015EB2  0012               	return	
 50406                           
 50407                           ; BSR set to: 1
 50408                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 50409  015EB4  2B59               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
 50410                           
 50411                           ; BSR set to: 1
 50412                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 50413  015EB6  5159               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
 50414  015EB8  A4D8               	btfss	status,2,c
 50415  015EBA  0012               	return	
 50416                           
 50417                           ; BSR set to: 1
 50418                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 50419  015EBC  6959               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 50420                           
 50421                           ; BSR set to: 1
 50422  015EBE  0012               	return	
 50423  015EC0                     __end_of_USBIncrement1msInternalTimers:
 50424                           	opt stack 0
 50425                           tosu	equ	0xFFF
 50426                           tosh	equ	0xFFE
 50427                           tosl	equ	0xFFD
 50428                           pclatu	equ	0xFFB
 50429                           pclath	equ	0xFFA
 50430                           tblptru	equ	0xFF8
 50431                           tblptrh	equ	0xFF7
 50432                           tblptrl	equ	0xFF6
 50433                           tablat	equ	0xFF5
 50434                           prodh	equ	0xFF4
 50435                           prodl	equ	0xFF3
 50436                           intcon	equ	0xFF2
 50437                           indf0	equ	0xFEF
 50438                           postinc0	equ	0xFEE
 50439                           fsr0h	equ	0xFEA
 50440                           fsr0l	equ	0xFE9
 50441                           wreg	equ	0xFE8
 50442                           indf1	equ	0xFE7
 50443                           postinc1	equ	0xFE6
 50444                           postdec1	equ	0xFE5
 50445                           plusw1	equ	0xFE3
 50446                           fsr1h	equ	0xFE2
 50447                           fsr1l	equ	0xFE1
 50448                           indf2	equ	0xFDF
 50449                           postinc2	equ	0xFDE
 50450                           postdec2	equ	0xFDD
 50451                           plusw2	equ	0xFDB
 50452                           fsr2h	equ	0xFDA
 50453                           fsr2l	equ	0xFD9
 50454                           status	equ	0xFD8
 50455                           
 50456 ;; *************** function _USBCtrlEPService *****************
 50457 ;; Defined at:
 50458 ;;		line 2374 in file "usb_device.c"
 50459 ;; Parameters:    Size  Location     Type
 50460 ;;		None
 50461 ;; Auto vars:     Size  Location     Type
 50462 ;;		None
 50463 ;; Return value:  Size  Location     Type
 50464 ;;                  1    wreg      void 
 50465 ;; Registers used:
 50466 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 50467 ;; Tracked objects:
 50468 ;;		On entry : 0/0
 50469 ;;		On exit  : 0/0
 50470 ;;		Unchanged: 0/0
 50471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50474 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50475 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50476 ;;Total ram usage:        1 bytes
 50477 ;; Hardware stack levels used:    1
 50478 ;; Hardware stack levels required when called:    7
 50479 ;; This function calls:
 50480 ;;		_USBCtrlTrfInHandler
 50481 ;;		_USBCtrlTrfOutHandler
 50482 ;;		_USBCtrlTrfSetupHandler
 50483 ;;		i2_memcpy
 50484 ;; This function is called by:
 50485 ;;		_USBDeviceTasks
 50486 ;; This function uses a non-reentrant model
 50487 ;;
 50488                           
 50489                           	psect	text211
 50490  013A6E                     __ptext211:
 50491                           	opt stack 0
 50492  013A6E                     _USBCtrlEPService:
 50493                           	opt stack 9
 50494                           
 50495                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 50496                           
 50497                           ; BSR set to: 1
 50498                           ;incstack = 0
 50499  013A6E  0E2D               	movlw	45
 50500  013A70  0101               	movlb	1	; () banked
 50501  013A72  6F5F               	movwf	_USBStatusStageTimeoutCounter& (0+255),b	;volatile
 50502                           
 50503                           ; BSR set to: 1
 50504                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 50505  013A74  C05E  F01E         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 50506  013A78  0EFD               	movlw	253
 50507  013A7A  161E               	andwf	??_USBCtrlEPService,f,c
 50508  013A7C  A4D8               	btfss	status,2,c
 50509  013A7E  D03B               	goto	i2l321
 50510                           
 50511                           ; BSR set to: 1
 50512                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 50513  013A80  C05E  F01E         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 50514  013A84  90D8               	bcf	status,0,c
 50515  013A86  321E               	rrcf	??_USBCtrlEPService,f,c
 50516  013A88  0E3F               	movlw	63
 50517  013A8A  161E               	andwf	??_USBCtrlEPService,f,c
 50518  013A8C  501E               	movf	??_USBCtrlEPService,w,c
 50519  013A8E  0D04               	mullw	4
 50520  013A90  0E00               	movlw	0
 50521  013A92  24F3               	addwf	prodl,w,c
 50522  013A94  6E5B               	movwf	_pBDTEntryEP0OutCurrent,c
 50523  013A96  0E0D               	movlw	13
 50524  013A98  20F4               	addwfc	prodh,w,c
 50525  013A9A  6E5C               	movwf	_pBDTEntryEP0OutCurrent+1,c
 50526                           
 50527                           ; BSR set to: 1
 50528                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 50529  013A9C  C05B  F059         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 50530  013AA0  C05C  F05A         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 50531                           
 50532                           ; BSR set to: 1
 50533                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 50534  013AA4  0E04               	movlw	4
 50535  013AA6  1859               	xorwf	_pBDTEntryEP0OutNext,w,c
 50536  013AA8  6E59               	movwf	_pBDTEntryEP0OutNext,c
 50537  013AAA  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 50538  013AAC  6E5A               	movwf	_pBDTEntryEP0OutNext+1,c
 50539                           
 50540                           ; BSR set to: 1
 50541                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 50542  013AAE  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 50543  013AB2  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 50544  013AB6  30DF               	rrcf	indf2,w,c
 50545  013AB8  32E8               	rrcf	wreg,f,c
 50546  013ABA  0B0F               	andlw	15
 50547  013ABC  0A0D               	xorlw	13
 50548  013ABE  A4D8               	btfss	status,2,c
 50549  013AC0  D017               	goto	i2l322
 50550                           
 50551                           ; BSR set to: 1
 50552                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 50553  013AC2  0E30               	movlw	48
 50554  013AC4  6E01               	movwf	i2memcpy@d1,c
 50555  013AC6  0E0D               	movlw	13
 50556  013AC8  6E02               	movwf	i2memcpy@d1+1,c
 50557  013ACA  EE20 F002          	lfsr	2,2
 50558  013ACE  505B               	movf	_pBDTEntryEP0OutCurrent,w,c
 50559  013AD0  26D9               	addwf	fsr2l,f,c
 50560  013AD2  505C               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 50561  013AD4  22DA               	addwfc	fsr2h,f,c
 50562  013AD6  CFDE F003          	movff	postinc2,i2memcpy@s1
 50563  013ADA  CFDD F004          	movff	postdec2,i2memcpy@s1+1
 50564  013ADE  0E00               	movlw	0
 50565  013AE0  6E06               	movwf	i2memcpy@n+1,c
 50566  013AE2  0E08               	movlw	8
 50567  013AE4  6E05               	movwf	i2memcpy@n,c
 50568  013AE6  EC0B  F0A6         	call	i2_memcpy	;wreg free
 50569                           
 50570                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 50571  013AEA  EC18  F09E         	call	_USBCtrlTrfSetupHandler	;wreg free
 50572                           
 50573                           ;usb_device.c: 2411: }
 50574  013AEE  0012               	return	
 50575  013AF0                     i2l322:
 50576                           
 50577                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 50578  013AF0  EC7B  F0A5         	call	_USBCtrlTrfOutHandler	;wreg free
 50579                           
 50580                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 50581  013AF4  0012               	return	
 50582  013AF6                     i2l321:
 50583                           
 50584                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 50585  013AF6  505E               	movf	_USTATcopy,w,c	;volatile
 50586  013AF8  0BFD               	andlw	253
 50587  013AFA  0A04               	xorlw	4
 50588  013AFC  A4D8               	btfss	status,2,c
 50589  013AFE  0012               	return	
 50590                           
 50591                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 50592  013B00  ECCF  F096         	call	_USBCtrlTrfInHandler	;wreg free
 50593  013B04  0012               	return	
 50594  013B06                     __end_of_USBCtrlEPService:
 50595                           	opt stack 0
 50596                           tosu	equ	0xFFF
 50597                           tosh	equ	0xFFE
 50598                           tosl	equ	0xFFD
 50599                           pclatu	equ	0xFFB
 50600                           pclath	equ	0xFFA
 50601                           tblptru	equ	0xFF8
 50602                           tblptrh	equ	0xFF7
 50603                           tblptrl	equ	0xFF6
 50604                           tablat	equ	0xFF5
 50605                           prodh	equ	0xFF4
 50606                           prodl	equ	0xFF3
 50607                           intcon	equ	0xFF2
 50608                           indf0	equ	0xFEF
 50609                           postinc0	equ	0xFEE
 50610                           fsr0h	equ	0xFEA
 50611                           fsr0l	equ	0xFE9
 50612                           wreg	equ	0xFE8
 50613                           indf1	equ	0xFE7
 50614                           postinc1	equ	0xFE6
 50615                           postdec1	equ	0xFE5
 50616                           plusw1	equ	0xFE3
 50617                           fsr1h	equ	0xFE2
 50618                           fsr1l	equ	0xFE1
 50619                           indf2	equ	0xFDF
 50620                           postinc2	equ	0xFDE
 50621                           postdec2	equ	0xFDD
 50622                           plusw2	equ	0xFDB
 50623                           fsr2h	equ	0xFDA
 50624                           fsr2l	equ	0xFD9
 50625                           status	equ	0xFD8
 50626                           
 50627 ;; *************** function i2_memcpy *****************
 50628 ;; Defined at:
 50629 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 50630 ;; Parameters:    Size  Location     Type
 50631 ;;  d1              2    0[COMRAM] PTR void 
 50632 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), i2c_eeprom_save_position@b
      +uffer(11), 
 50633 ;;		 -> ToSendDataBuffer(64), os(49), msd_buffer(512), SetupPkt(8), 
 50634 ;;  s1              2    2[COMRAM] PTR const void 
 50635 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 50636 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 50637 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 50638 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 50639 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main(80), dc_startup(80), 
 50640 ;;		 -> i2c_eeprom_recover_position@buffer(11), config(41), os.divide_position(2), os.division(2), 
 50641 ;;		 -> os.absolute_position(2), os.current_position_in_steps(4), ReceivedDataBuffer(64), os(49), 
 50642 ;;		 -> inq_resp(36), CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 50643 ;;  n               2    4[COMRAM] unsigned int 
 50644 ;; Auto vars:     Size  Location     Type
 50645 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
 50646 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 50647 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 50648 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 50649 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 50650 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main(80), dc_startup(80), 
 50651 ;;		 -> i2c_eeprom_recover_position@buffer(11), config(41), os.divide_position(2), os.division(2), 
 50652 ;;		 -> os.absolute_position(2), os.current_position_in_steps(4), ReceivedDataBuffer(64), os(49), 
 50653 ;;		 -> inq_resp(36), CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 50654 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
 50655 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), i2c_eeprom_save_position@b
      +uffer(11), 
 50656 ;;		 -> ToSendDataBuffer(64), os(49), msd_buffer(512), SetupPkt(8), 
 50657 ;;  memcpy          1   10[COMRAM] unsigned char 
 50658 ;; Return value:  Size  Location     Type
 50659 ;;                  2    0[COMRAM] PTR void 
 50660 ;; Registers used:
 50661 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 50662 ;; Tracked objects:
 50663 ;;		On entry : 0/0
 50664 ;;		On exit  : 0/0
 50665 ;;		Unchanged: 0/0
 50666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50667 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50668 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50670 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50671 ;;Total ram usage:       11 bytes
 50672 ;; Hardware stack levels used:    1
 50673 ;; This function calls:
 50674 ;;		Nothing
 50675 ;; This function is called by:
 50676 ;;		_USBCtrlEPService
 50677 ;;		_i2c_eeprom_save_position
 50678 ;; This function uses a non-reentrant model
 50679 ;;
 50680                           
 50681                           	psect	text212
 50682  014C16                     __ptext212:
 50683                           	opt stack 0
 50684  014C16                     i2_memcpy:
 50685                           	opt stack 15
 50686                           
 50687                           ;incstack = 0
 50688  014C16  C003  F009         	movff	i2memcpy@s1,i2memcpy@s
 50689  014C1A  C004  F00A         	movff	i2memcpy@s1+1,i2memcpy@s+1
 50690  014C1E  C001  F007         	movff	i2memcpy@d1,i2memcpy@d
 50691  014C22  C002  F008         	movff	i2memcpy@d1+1,i2memcpy@d+1
 50692  014C26  D01C               	goto	i2l3816
 50693  014C28                     i2l17012:
 50694  014C28  C009  FFF6         	movff	i2memcpy@s,tblptrl
 50695  014C2C  C00A  FFF7         	movff	i2memcpy@s+1,tblptrh
 50696  014C30  0E00               	movlw	low (__mediumconst shr (0+16))
 50697  014C32  6EF8               	movwf	tblptru,c
 50698  014C34  0E0E               	movlw	(high __ramtop+-1)
 50699  014C36  64F7               	cpfsgt	tblptrh,c
 50700  014C38  D003               	bra	i2u1624_47
 50701  014C3A  0008               	tblrd		*
 50702  014C3C  50F5               	movf	tablat,w,c
 50703  014C3E  D005               	bra	i2u1624_40
 50704  014C40                     i2u1624_47:
 50705  014C40  CFF6 FFE9          	movff	tblptrl,fsr0l
 50706  014C44  CFF7 FFEA          	movff	tblptrh,fsr0h
 50707  014C48  50EF               	movf	indf0,w,c
 50708  014C4A                     i2u1624_40:
 50709  014C4A  6E0B               	movwf	i2memcpy@tmp,c
 50710  014C4C  4A09               	infsnz	i2memcpy@s,f,c
 50711  014C4E  2A0A               	incf	i2memcpy@s+1,f,c
 50712  014C50  C007  FFD9         	movff	i2memcpy@d,fsr2l
 50713  014C54  C008  FFDA         	movff	i2memcpy@d+1,fsr2h
 50714  014C58  C00B  FFDF         	movff	i2memcpy@tmp,indf2
 50715  014C5C  4A07               	infsnz	i2memcpy@d,f,c
 50716  014C5E  2A08               	incf	i2memcpy@d+1,f,c
 50717  014C60                     i2l3816:
 50718  014C60  0605               	decf	i2memcpy@n,f,c
 50719  014C62  A0D8               	btfss	status,0,c
 50720  014C64  0606               	decf	i2memcpy@n+1,f,c
 50721  014C66  2805               	incf	i2memcpy@n,w,c
 50722  014C68  E1DF               	bnz	i2l17012
 50723  014C6A  2806               	incf	i2memcpy@n+1,w,c
 50724  014C6C  B4D8               	btfsc	status,2,c
 50725  014C6E  0012               	return	
 50726  014C70  D7DB               	goto	i2l3817
 50727  014C72                     __end_ofi2_memcpy:
 50728                           	opt stack 0
 50729                           tosu	equ	0xFFF
 50730                           tosh	equ	0xFFE
 50731                           tosl	equ	0xFFD
 50732                           pclatu	equ	0xFFB
 50733                           pclath	equ	0xFFA
 50734                           tblptru	equ	0xFF8
 50735                           tblptrh	equ	0xFF7
 50736                           tblptrl	equ	0xFF6
 50737                           tablat	equ	0xFF5
 50738                           prodh	equ	0xFF4
 50739                           prodl	equ	0xFF3
 50740                           intcon	equ	0xFF2
 50741                           indf0	equ	0xFEF
 50742                           postinc0	equ	0xFEE
 50743                           fsr0h	equ	0xFEA
 50744                           fsr0l	equ	0xFE9
 50745                           wreg	equ	0xFE8
 50746                           indf1	equ	0xFE7
 50747                           postinc1	equ	0xFE6
 50748                           postdec1	equ	0xFE5
 50749                           plusw1	equ	0xFE3
 50750                           fsr1h	equ	0xFE2
 50751                           fsr1l	equ	0xFE1
 50752                           indf2	equ	0xFDF
 50753                           postinc2	equ	0xFDE
 50754                           postdec2	equ	0xFDD
 50755                           plusw2	equ	0xFDB
 50756                           fsr2h	equ	0xFDA
 50757                           fsr2l	equ	0xFD9
 50758                           status	equ	0xFD8
 50759                           
 50760 ;; *************** function _USBCtrlTrfSetupHandler *****************
 50761 ;; Defined at:
 50762 ;;		line 2467 in file "usb_device.c"
 50763 ;; Parameters:    Size  Location     Type
 50764 ;;		None
 50765 ;; Auto vars:     Size  Location     Type
 50766 ;;		None
 50767 ;; Return value:  Size  Location     Type
 50768 ;;                  1    wreg      void 
 50769 ;; Registers used:
 50770 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 50771 ;; Tracked objects:
 50772 ;;		On entry : 0/0
 50773 ;;		On exit  : 0/0
 50774 ;;		Unchanged: 0/0
 50775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50780 ;;Total ram usage:        0 bytes
 50781 ;; Hardware stack levels used:    1
 50782 ;; Hardware stack levels required when called:    6
 50783 ;; This function calls:
 50784 ;;		_USBCheckStdRequest
 50785 ;;		_USBCtrlEPServiceComplete
 50786 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 50787 ;; This function is called by:
 50788 ;;		_USBCtrlEPService
 50789 ;; This function uses a non-reentrant model
 50790 ;;
 50791                           
 50792                           	psect	text213
 50793  013C30                     __ptext213:
 50794                           	opt stack 0
 50795  013C30                     _USBCtrlTrfSetupHandler:
 50796                           	opt stack 9
 50797                           
 50798                           ;usb_device.c: 2472: shortPacketStatus = 0;
 50799                           
 50800                           ;incstack = 0
 50801  013C30  0E00               	movlw	0
 50802  013C32  0101               	movlb	1	; () banked
 50803  013C34  6F64               	movwf	_shortPacketStatus& (0+255),b	;volatile
 50804                           
 50805                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 50806  013C36  0E00               	movlw	0
 50807  013C38  6F5E               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
 50808                           
 50809                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 50810  013C3A  0E00               	movlw	0
 50811  013C3C  6F5B               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 50812                           
 50813                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 50814  013C3E  0E00               	movlw	0
 50815  013C40  6F5A               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 50816                           
 50817                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 50818  013C42  0E00               	movlw	0
 50819  013C44  6F60               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 50820                           
 50821                           ;usb_device.c: 2477: controlTransferState = 0;
 50822  013C46  0E00               	movlw	0
 50823  013C48  0100               	movlb	0	; () banked
 50824  013C4A  6FFF               	movwf	_controlTransferState& (0+255),b	;volatile
 50825                           
 50826                           ; BSR set to: 0
 50827                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 50828  013C4C  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 50829  013C50  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50830  013C54  0E7F               	movlw	127
 50831  013C56  16DF               	andwf	indf2,f,c
 50832                           
 50833                           ; BSR set to: 0
 50834                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 50835  013C58  0E04               	movlw	4
 50836  013C5A  0101               	movlb	1	; () banked
 50837  013C5C  190F               	xorwf	_pBDTEntryIn& (0+255),w,b
 50838  013C5E  6F0F               	movwf	_pBDTEntryIn& (0+255),b
 50839  013C60  5110               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 50840  013C62  6F10               	movwf	(_pBDTEntryIn+1)& (0+255),b
 50841                           
 50842                           ; BSR set to: 1
 50843                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 50844  013C64  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 50845  013C68  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50846  013C6C  0E7F               	movlw	127
 50847  013C6E  16DF               	andwf	indf2,f,c
 50848                           
 50849                           ; BSR set to: 1
 50850                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 50851  013C70  0E04               	movlw	4
 50852  013C72  190F               	xorwf	_pBDTEntryIn& (0+255),w,b
 50853  013C74  6F0F               	movwf	_pBDTEntryIn& (0+255),b
 50854  013C76  5110               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 50855  013C78  6F10               	movwf	(_pBDTEntryIn+1)& (0+255),b
 50856                           
 50857                           ; BSR set to: 1
 50858                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 50859  013C7A  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 50860  013C7E  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 50861  013C82  0E7F               	movlw	127
 50862  013C84  16DF               	andwf	indf2,f,c
 50863                           
 50864                           ; BSR set to: 1
 50865                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 50866  013C86  0E00               	movlw	0
 50867  013C88  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 50868                           
 50869                           ; BSR set to: 1
 50870                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 50871  013C8A  0E00               	movlw	0
 50872  013C8C  6F0E               	movwf	(_inPipes+5)& (0+255),b	;volatile
 50873  013C8E  0E00               	movlw	0
 50874  013C90  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 50875                           
 50876                           ; BSR set to: 1
 50877                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 50878  013C92  0E00               	movlw	0
 50879  013C94  6F03               	movwf	(_outPipes+3)& (0+255),b	;volatile
 50880                           
 50881                           ; BSR set to: 1
 50882                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 50883  013C96  0E00               	movlw	0
 50884  013C98  6F05               	movwf	(_outPipes+5)& (0+255),b	;volatile
 50885  013C9A  0E00               	movlw	0
 50886  013C9C  6F04               	movwf	(_outPipes+4)& (0+255),b	;volatile
 50887                           
 50888                           ; BSR set to: 1
 50889                           ;usb_device.c: 2502: USBCheckStdRequest();
 50890  013C9E  EC50  F091         	call	_USBCheckStdRequest	;wreg free
 50891                           
 50892                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 50893  013CA2  0E00               	movlw	0
 50894  013CA4  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 50895  013CA6  0E03               	movlw	3
 50896  013CA8  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 50897  013CAA  0E00               	movlw	0
 50898  013CAC  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 50899  013CAE  0E00               	movlw	0
 50900  013CB0  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 50901  013CB2  0E00               	movlw	0
 50902  013CB4  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 50903  013CB6  0E00               	movlw	0
 50904  013CB8  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 50905  013CBA  EC10  F0A0         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 50906                           
 50907                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 50908  013CBE  EC25  F08B         	call	_USBCtrlEPServiceComplete	;wreg free
 50909  013CC2  0012               	return		;funcret
 50910  013CC4                     __end_of_USBCtrlTrfSetupHandler:
 50911                           	opt stack 0
 50912                           tosu	equ	0xFFF
 50913                           tosh	equ	0xFFE
 50914                           tosl	equ	0xFFD
 50915                           pclatu	equ	0xFFB
 50916                           pclath	equ	0xFFA
 50917                           tblptru	equ	0xFF8
 50918                           tblptrh	equ	0xFF7
 50919                           tblptrl	equ	0xFF6
 50920                           tablat	equ	0xFF5
 50921                           prodh	equ	0xFF4
 50922                           prodl	equ	0xFF3
 50923                           intcon	equ	0xFF2
 50924                           indf0	equ	0xFEF
 50925                           postinc0	equ	0xFEE
 50926                           fsr0h	equ	0xFEA
 50927                           fsr0l	equ	0xFE9
 50928                           wreg	equ	0xFE8
 50929                           indf1	equ	0xFE7
 50930                           postinc1	equ	0xFE6
 50931                           postdec1	equ	0xFE5
 50932                           plusw1	equ	0xFE3
 50933                           fsr1h	equ	0xFE2
 50934                           fsr1l	equ	0xFE1
 50935                           indf2	equ	0xFDF
 50936                           postinc2	equ	0xFDE
 50937                           postdec2	equ	0xFDD
 50938                           plusw2	equ	0xFDB
 50939                           fsr2h	equ	0xFDA
 50940                           fsr2l	equ	0xFD9
 50941                           status	equ	0xFD8
 50942                           
 50943 ;; *************** function _USBCtrlEPServiceComplete *****************
 50944 ;; Defined at:
 50945 ;;		line 1618 in file "usb_device.c"
 50946 ;; Parameters:    Size  Location     Type
 50947 ;;		None
 50948 ;; Auto vars:     Size  Location     Type
 50949 ;;		None
 50950 ;; Return value:  Size  Location     Type
 50951 ;;                  1    wreg      void 
 50952 ;; Registers used:
 50953 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 50954 ;; Tracked objects:
 50955 ;;		On entry : 0/0
 50956 ;;		On exit  : 0/0
 50957 ;;		Unchanged: 0/0
 50958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50963 ;;Total ram usage:        0 bytes
 50964 ;; Hardware stack levels used:    1
 50965 ;; Hardware stack levels required when called:    2
 50966 ;; This function calls:
 50967 ;;		_USBCtrlEPAllowDataStage
 50968 ;;		_USBCtrlEPAllowStatusStage
 50969 ;; This function is called by:
 50970 ;;		_USBCtrlTrfSetupHandler
 50971 ;; This function uses a non-reentrant model
 50972 ;;
 50973                           
 50974                           	psect	text214
 50975  01164A                     __ptext214:
 50976                           	opt stack 0
 50977  01164A                     _USBCtrlEPServiceComplete:
 50978                           	opt stack 12
 50979                           
 50980                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 50981                           
 50982                           ;incstack = 0
 50983  01164A  9865               	bcf	3941,4,c	;volatile
 50984                           
 50985                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 50986  01164C  0101               	movlb	1	; () banked
 50987  01164E  BF0C               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 50988  011650  D03B               	goto	i2l231
 50989                           
 50990                           ; BSR set to: 1
 50991                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 50992  011652  AF03               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 50993  011654  D00E               	goto	i2l232
 50994                           
 50995                           ; BSR set to: 1
 50996                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 50997  011656  0E02               	movlw	2
 50998  011658  0100               	movlb	0	; () banked
 50999  01165A  6FFF               	movwf	_controlTransferState& (0+255),b	;volatile
 51000                           
 51001                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 51002  01165C  0101               	movlb	1	; () banked
 51003  01165E  515A               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 51004  011660  B4D8               	btfsc	status,2,c
 51005                           
 51006                           ; BSR set to: 1
 51007                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 51008  011662  ECB4  F09B         	call	_USBCtrlEPAllowDataStage	;wreg free
 51009                           
 51010                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 51011  011666  0E00               	movlw	0
 51012  011668  0101               	movlb	1	; () banked
 51013  01166A  6F5C               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 51014                           
 51015                           ; BSR set to: 1
 51016                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 51017  01166C  0E00               	movlw	0
 51018  01166E  6F5D               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 51019                           
 51020                           ;usb_device.c: 1654: }
 51021  011670  0012               	return	
 51022  011672                     i2l232:
 51023                           
 51024                           ; BSR set to: 1
 51025                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 51026                           
 51027                           ; BSR set to: 1
 51028  011672  EE20 F001          	lfsr	2,1
 51029  011676  5059               	movf	_pBDTEntryEP0OutNext,w,c
 51030  011678  26D9               	addwf	fsr2l,f,c
 51031  01167A  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 51032  01167C  22DA               	addwfc	fsr2h,f,c
 51033  01167E  0E08               	movlw	8
 51034  011680  6EDF               	movwf	indf2,c
 51035                           
 51036                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 51037  011682  EE20 F002          	lfsr	2,2
 51038  011686  5059               	movf	_pBDTEntryEP0OutNext,w,c
 51039  011688  26D9               	addwf	fsr2l,f,c
 51040  01168A  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 51041  01168C  22DA               	addwfc	fsr2h,f,c
 51042  01168E  0E30               	movlw	48
 51043  011690  6EDE               	movwf	postinc2,c
 51044  011692  0E0D               	movlw	13
 51045  011694  6EDD               	movwf	postdec2,c
 51046                           
 51047                           ; BSR set to: 1
 51048                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 51049  011696  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 51050  01169A  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 51051  01169E  0E0C               	movlw	12
 51052  0116A0  6EDF               	movwf	indf2,c
 51053                           
 51054                           ; BSR set to: 1
 51055                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 51056  0116A2  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 51057  0116A6  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 51058  0116AA  0E00               	movlw	0
 51059  0116AC  8EDB               	bsf	plusw2,7,c
 51060                           
 51061                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 51062  0116AE  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 51063  0116B2  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 51064  0116B6  0E04               	movlw	4
 51065  0116B8  6EDF               	movwf	indf2,c
 51066                           
 51067                           ; BSR set to: 1
 51068                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 51069  0116BA  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 51070  0116BE  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 51071  0116C2  0E00               	movlw	0
 51072  0116C4  8EDB               	bsf	plusw2,7,c
 51073                           
 51074                           ; BSR set to: 1
 51075                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 51076  0116C6  0012               	return	
 51077  0116C8                     i2l231:
 51078                           
 51079                           ; BSR set to: 1
 51080                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 51081  0116C8  010D               	movlb	13	; () banked
 51082  0116CA  AF30               	btfss	48,7,b	;volatile
 51083  0116CC  D013               	goto	i2l236
 51084                           
 51085                           ; BSR set to: 13
 51086                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 51087  0116CE  0E01               	movlw	1
 51088  0116D0  0100               	movlb	0	; () banked
 51089  0116D2  6FFF               	movwf	_controlTransferState& (0+255),b	;volatile
 51090                           
 51091                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 51092  0116D4  0101               	movlb	1	; () banked
 51093  0116D6  515B               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 51094  0116D8  B4D8               	btfsc	status,2,c
 51095                           
 51096                           ; BSR set to: 1
 51097                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 51098  0116DA  ECB4  F09B         	call	_USBCtrlEPAllowDataStage	;wreg free
 51099                           
 51100                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 51101  0116DE  0E00               	movlw	0
 51102  0116E0  0101               	movlb	1	; () banked
 51103  0116E2  6F5C               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 51104                           
 51105                           ; BSR set to: 1
 51106                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 51107  0116E4  0E00               	movlw	0
 51108  0116E6  6F5D               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 51109                           
 51110                           ; BSR set to: 1
 51111                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 51112  0116E8  515E               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 51113  0116EA  A4D8               	btfss	status,2,c
 51114  0116EC  0012               	return	
 51115                           
 51116                           ; BSR set to: 1
 51117                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 51118  0116EE  EC69  F096         	call	_USBCtrlEPAllowStatusStage	;wreg free
 51119                           
 51120                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 51121  0116F2  0012               	return	
 51122  0116F4                     i2l236:
 51123                           
 51124                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 51125  0116F4  0E02               	movlw	2
 51126  0116F6  0100               	movlb	0	; () banked
 51127  0116F8  6FFF               	movwf	_controlTransferState& (0+255),b	;volatile
 51128                           
 51129                           ; BSR set to: 0
 51130                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 51131  0116FA  EE20 F001          	lfsr	2,1
 51132  0116FE  5059               	movf	_pBDTEntryEP0OutNext,w,c
 51133  011700  26D9               	addwf	fsr2l,f,c
 51134  011702  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 51135  011704  22DA               	addwfc	fsr2h,f,c
 51136  011706  0E08               	movlw	8
 51137  011708  6EDF               	movwf	indf2,c
 51138                           
 51139                           ; BSR set to: 0
 51140                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 51141  01170A  EE20 F002          	lfsr	2,2
 51142  01170E  5059               	movf	_pBDTEntryEP0OutNext,w,c
 51143  011710  26D9               	addwf	fsr2l,f,c
 51144  011712  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 51145  011714  22DA               	addwfc	fsr2h,f,c
 51146  011716  0E30               	movlw	48
 51147  011718  6EDE               	movwf	postinc2,c
 51148  01171A  0E0D               	movlw	13
 51149  01171C  6EDD               	movwf	postdec2,c
 51150                           
 51151                           ; BSR set to: 0
 51152                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 51153  01171E  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 51154  011722  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 51155  011726  0E04               	movlw	4
 51156  011728  6EDF               	movwf	indf2,c
 51157                           
 51158                           ; BSR set to: 0
 51159                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 51160  01172A  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 51161  01172E  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 51162  011732  0E00               	movlw	0
 51163  011734  8EDB               	bsf	plusw2,7,c
 51164                           
 51165                           ; BSR set to: 0
 51166                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 51167  011736  0E00               	movlw	0
 51168  011738  0101               	movlb	1	; () banked
 51169  01173A  6F5C               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 51170                           
 51171                           ; BSR set to: 1
 51172                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 51173  01173C  0E00               	movlw	0
 51174  01173E  6F5D               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 51175                           
 51176                           ; BSR set to: 1
 51177                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 51178  011740  515E               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 51179  011742  A4D8               	btfss	status,2,c
 51180  011744  0012               	return	
 51181                           
 51182                           ; BSR set to: 1
 51183                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 51184  011746  EC69  F096         	call	_USBCtrlEPAllowStatusStage	;wreg free
 51185  01174A  0012               	return	
 51186  01174C                     __end_of_USBCtrlEPServiceComplete:
 51187                           	opt stack 0
 51188                           tosu	equ	0xFFF
 51189                           tosh	equ	0xFFE
 51190                           tosl	equ	0xFFD
 51191                           pclatu	equ	0xFFB
 51192                           pclath	equ	0xFFA
 51193                           tblptru	equ	0xFF8
 51194                           tblptrh	equ	0xFF7
 51195                           tblptrl	equ	0xFF6
 51196                           tablat	equ	0xFF5
 51197                           prodh	equ	0xFF4
 51198                           prodl	equ	0xFF3
 51199                           intcon	equ	0xFF2
 51200                           indf0	equ	0xFEF
 51201                           postinc0	equ	0xFEE
 51202                           fsr0h	equ	0xFEA
 51203                           fsr0l	equ	0xFE9
 51204                           wreg	equ	0xFE8
 51205                           indf1	equ	0xFE7
 51206                           postinc1	equ	0xFE6
 51207                           postdec1	equ	0xFE5
 51208                           plusw1	equ	0xFE3
 51209                           fsr1h	equ	0xFE2
 51210                           fsr1l	equ	0xFE1
 51211                           indf2	equ	0xFDF
 51212                           postinc2	equ	0xFDE
 51213                           postdec2	equ	0xFDD
 51214                           plusw2	equ	0xFDB
 51215                           fsr2h	equ	0xFDA
 51216                           fsr2l	equ	0xFD9
 51217                           status	equ	0xFD8
 51218                           
 51219 ;; *************** function _USBCtrlEPAllowDataStage *****************
 51220 ;; Defined at:
 51221 ;;		line 1490 in file "usb_device.c"
 51222 ;; Parameters:    Size  Location     Type
 51223 ;;		None
 51224 ;; Auto vars:     Size  Location     Type
 51225 ;;		None
 51226 ;; Return value:  Size  Location     Type
 51227 ;;                  1    wreg      void 
 51228 ;; Registers used:
 51229 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 51230 ;; Tracked objects:
 51231 ;;		On entry : 0/0
 51232 ;;		On exit  : 0/0
 51233 ;;		Unchanged: 0/0
 51234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51239 ;;Total ram usage:        0 bytes
 51240 ;; Hardware stack levels used:    1
 51241 ;; Hardware stack levels required when called:    1
 51242 ;; This function calls:
 51243 ;;		_USBCtrlTrfTxService
 51244 ;; This function is called by:
 51245 ;;		_USBCtrlEPServiceComplete
 51246 ;; This function uses a non-reentrant model
 51247 ;;
 51248                           
 51249                           	psect	text215
 51250  013768                     __ptext215:
 51251                           	opt stack 0
 51252  013768                     _USBCtrlEPAllowDataStage:
 51253                           	opt stack 12
 51254                           
 51255                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 51256                           
 51257                           ;incstack = 0
 51258  013768  0E00               	movlw	0
 51259  01376A  0101               	movlb	1	; () banked
 51260  01376C  6F5B               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 51261                           
 51262                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 51263  01376E  0E00               	movlw	0
 51264  013770  6F5A               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 51265                           
 51266                           ; BSR set to: 1
 51267                           ;usb_device.c: 1495: if(controlTransferState == 2)
 51268  013772  0E02               	movlw	2
 51269  013774  0100               	movlb	0	; () banked
 51270  013776  19FF               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 51271  013778  A4D8               	btfss	status,2,c
 51272  01377A  D01F               	goto	i2l220
 51273                           
 51274                           ; BSR set to: 0
 51275                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 51276  01377C  EE20 F001          	lfsr	2,1
 51277  013780  5059               	movf	_pBDTEntryEP0OutNext,w,c
 51278  013782  26D9               	addwf	fsr2l,f,c
 51279  013784  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 51280  013786  22DA               	addwfc	fsr2h,f,c
 51281  013788  0E08               	movlw	8
 51282  01378A  6EDF               	movwf	indf2,c
 51283                           
 51284                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 51285  01378C  EE20 F002          	lfsr	2,2
 51286  013790  5059               	movf	_pBDTEntryEP0OutNext,w,c
 51287  013792  26D9               	addwf	fsr2l,f,c
 51288  013794  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 51289  013796  22DA               	addwfc	fsr2h,f,c
 51290  013798  0E38               	movlw	56
 51291  01379A  6EDE               	movwf	postinc2,c
 51292  01379C  0E0D               	movlw	13
 51293  01379E  6EDD               	movwf	postdec2,c
 51294                           
 51295                           ; BSR set to: 0
 51296                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 51297  0137A0  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 51298  0137A4  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 51299  0137A8  0E48               	movlw	72
 51300  0137AA  6EDF               	movwf	indf2,c
 51301                           
 51302                           ; BSR set to: 0
 51303                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 51304  0137AC  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 51305  0137B0  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 51306  0137B4  0E00               	movlw	0
 51307  0137B6  8EDB               	bsf	plusw2,7,c
 51308                           
 51309                           ;usb_device.c: 1502: }
 51310  0137B8  0012               	return	
 51311  0137BA                     i2l220:
 51312                           
 51313                           ; BSR set to: 0
 51314                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 51315                           
 51316                           ; BSR set to: 0
 51317  0137BA  0101               	movlb	1	; () banked
 51318  0137BC  510D               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 51319  0137BE  010D               	movlb	13	; () banked
 51320  0137C0  5D36               	subwf	54,w,b	;volatile
 51321  0137C2  0101               	movlb	1	; () banked
 51322  0137C4  510E               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 51323  0137C6  010D               	movlb	13	; () banked
 51324  0137C8  5937               	subwfb	55,w,b	;volatile
 51325  0137CA  B0D8               	btfsc	status,0,c
 51326  0137CC  D004               	goto	i2l222
 51327                           
 51328                           ; BSR set to: 13
 51329                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 51330  0137CE  CD36 F10D          	movff	3382,_inPipes+4	;volatile
 51331  0137D2  CD37 F10E          	movff	3383,_inPipes+5	;volatile
 51332  0137D6                     i2l222:
 51333                           
 51334                           ; BSR set to: 13
 51335                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 51336                           
 51337                           ; BSR set to: 13
 51338  0137D6  EC33  F095         	call	_USBCtrlTrfTxService	;wreg free
 51339                           
 51340                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 51341  0137DA  0101               	movlb	1	; () banked
 51342  0137DC  EE20 F002          	lfsr	2,2
 51343  0137E0  510F               	movf	_pBDTEntryIn& (0+255),w,b
 51344  0137E2  26D9               	addwf	fsr2l,f,c
 51345  0137E4  5110               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 51346  0137E6  22DA               	addwfc	fsr2h,f,c
 51347  0137E8  0E38               	movlw	56
 51348  0137EA  6EDE               	movwf	postinc2,c
 51349  0137EC  0E0D               	movlw	13
 51350  0137EE  6EDD               	movwf	postdec2,c
 51351                           
 51352                           ; BSR set to: 1
 51353                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 51354  0137F0  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 51355  0137F4  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 51356  0137F8  0E48               	movlw	72
 51357  0137FA  6EDF               	movwf	indf2,c
 51358                           
 51359                           ; BSR set to: 1
 51360                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 51361  0137FC  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 51362  013800  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 51363  013804  0E00               	movlw	0
 51364  013806  8EDB               	bsf	plusw2,7,c
 51365  013808  0012               	return	
 51366  01380A                     __end_of_USBCtrlEPAllowDataStage:
 51367                           	opt stack 0
 51368                           tosu	equ	0xFFF
 51369                           tosh	equ	0xFFE
 51370                           tosl	equ	0xFFD
 51371                           pclatu	equ	0xFFB
 51372                           pclath	equ	0xFFA
 51373                           tblptru	equ	0xFF8
 51374                           tblptrh	equ	0xFF7
 51375                           tblptrl	equ	0xFF6
 51376                           tablat	equ	0xFF5
 51377                           prodh	equ	0xFF4
 51378                           prodl	equ	0xFF3
 51379                           intcon	equ	0xFF2
 51380                           indf0	equ	0xFEF
 51381                           postinc0	equ	0xFEE
 51382                           fsr0h	equ	0xFEA
 51383                           fsr0l	equ	0xFE9
 51384                           wreg	equ	0xFE8
 51385                           indf1	equ	0xFE7
 51386                           postinc1	equ	0xFE6
 51387                           postdec1	equ	0xFE5
 51388                           plusw1	equ	0xFE3
 51389                           fsr1h	equ	0xFE2
 51390                           fsr1l	equ	0xFE1
 51391                           indf2	equ	0xFDF
 51392                           postinc2	equ	0xFDE
 51393                           postdec2	equ	0xFDD
 51394                           plusw2	equ	0xFDB
 51395                           fsr2h	equ	0xFDA
 51396                           fsr2l	equ	0xFD9
 51397                           status	equ	0xFD8
 51398                           
 51399 ;; *************** function _USBCheckStdRequest *****************
 51400 ;; Defined at:
 51401 ;;		line 2688 in file "usb_device.c"
 51402 ;; Parameters:    Size  Location     Type
 51403 ;;		None
 51404 ;; Auto vars:     Size  Location     Type
 51405 ;;		None
 51406 ;; Return value:  Size  Location     Type
 51407 ;;                  1    wreg      void 
 51408 ;; Registers used:
 51409 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 51410 ;; Tracked objects:
 51411 ;;		On entry : 0/0
 51412 ;;		On exit  : 0/0
 51413 ;;		Unchanged: 0/0
 51414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51419 ;;Total ram usage:        0 bytes
 51420 ;; Hardware stack levels used:    1
 51421 ;; Hardware stack levels required when called:    5
 51422 ;; This function calls:
 51423 ;;		_USBStdFeatureReqHandler
 51424 ;;		_USBStdGetDscHandler
 51425 ;;		_USBStdGetStatusHandler
 51426 ;;		_USBStdSetCfgHandler
 51427 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 51428 ;; This function is called by:
 51429 ;;		_USBCtrlTrfSetupHandler
 51430 ;; This function uses a non-reentrant model
 51431 ;;
 51432                           
 51433                           	psect	text216
 51434  0122A0                     __ptext216:
 51435                           	opt stack 0
 51436  0122A0                     _USBCheckStdRequest:
 51437                           	opt stack 9
 51438                           
 51439                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 51440                           
 51441                           ;incstack = 0
 51442  0122A0  010D               	movlb	13	; () banked
 51443  0122A2  3930               	swapf	48,w,b	;volatile
 51444  0122A4  32E8               	rrcf	wreg,f,c
 51445  0122A6  0B03               	andlw	3
 51446  0122A8  0900               	iorlw	0
 51447  0122AA  A4D8               	btfss	status,2,c
 51448  0122AC  0012               	return	
 51449  0122AE  D047               	goto	i2l355
 51450  0122B0                     i2l356:
 51451                           
 51452                           ; BSR set to: 13
 51453                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 51454  0122B0  0101               	movlb	1	; () banked
 51455  0122B2  8F0C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 51456                           
 51457                           ; BSR set to: 1
 51458                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 51459  0122B4  0E08               	movlw	8
 51460  0122B6  6E5D               	movwf	_USBDeviceState,c	;volatile
 51461                           
 51462                           ;usb_device.c: 2698: break;
 51463  0122B8  0012               	return	
 51464  0122BA                     
 51465                           ;usb_device.c: 2700: USBStdGetDscHandler();
 51466                           
 51467                           ; BSR set to: 1
 51468  0122BA  ECC6  F082         	call	_USBStdGetDscHandler	;wreg free
 51469                           
 51470                           ;usb_device.c: 2701: break;
 51471  0122BE  0012               	return	
 51472  0122C0                     
 51473                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 51474  0122C0  ECA2  F092         	call	_USBStdSetCfgHandler	;wreg free
 51475                           
 51476                           ;usb_device.c: 2704: break;
 51477  0122C4  0012               	return	
 51478  0122C6                     
 51479                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 51480  0122C6  0EC3               	movlw	low _USBActiveConfiguration
 51481  0122C8  0101               	movlb	1	; () banked
 51482  0122CA  6F09               	movwf	_inPipes& (0+255),b	;volatile
 51483  0122CC  0E01               	movlw	high _USBActiveConfiguration
 51484  0122CE  6F0A               	movwf	(_inPipes+1)& (0+255),b	;volatile
 51485                           
 51486                           ; BSR set to: 1
 51487                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 51488  0122D0  810C               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 51489                           
 51490                           ; BSR set to: 1
 51491                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 51492  0122D2  0E01               	movlw	1
 51493  0122D4  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 51494                           
 51495                           ; BSR set to: 1
 51496                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 51497  0122D6  8F0C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 51498                           
 51499                           ;usb_device.c: 2710: break;
 51500  0122D8  0012               	return	
 51501  0122DA                     
 51502                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 51503                           
 51504                           ; BSR set to: 1
 51505  0122DA  ECB8  F09A         	call	_USBStdGetStatusHandler	;wreg free
 51506                           
 51507                           ;usb_device.c: 2713: break;
 51508  0122DE  0012               	return	
 51509  0122E0                     
 51510                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 51511  0122E0  EC60  F06C         	call	_USBStdFeatureReqHandler	;wreg free
 51512                           
 51513                           ;usb_device.c: 2717: break;
 51514  0122E4  0012               	return	
 51515  0122E6                     
 51516                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 51517  0122E6  010D               	movlb	13	; () banked
 51518  0122E8  5134               	movf	52,w,b	;volatile
 51519  0122EA  0D01               	mullw	1
 51520  0122EC  0EBF               	movlw	low _USBAlternateInterface
 51521  0122EE  24F3               	addwf	prodl,w,c
 51522  0122F0  0101               	movlb	1	; () banked
 51523  0122F2  6F09               	movwf	_inPipes& (0+255),b	;volatile
 51524  0122F4  0E01               	movlw	high _USBAlternateInterface
 51525  0122F6  20F4               	addwfc	prodh,w,c
 51526  0122F8  6F0A               	movwf	(_inPipes+1)& (0+255),b	;volatile
 51527                           
 51528                           ; BSR set to: 1
 51529                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 51530  0122FA  810C               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 51531                           
 51532                           ; BSR set to: 1
 51533                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 51534  0122FC  0E01               	movlw	1
 51535  0122FE  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 51536                           
 51537                           ; BSR set to: 1
 51538                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 51539  012300  8F0C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 51540                           
 51541                           ;usb_device.c: 2723: break;
 51542  012302  0012               	return	
 51543  012304                     i2l365:
 51544                           
 51545                           ; BSR set to: 13
 51546                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 51547  012304  0101               	movlb	1	; () banked
 51548  012306  8F0C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 51549                           
 51550                           ; BSR set to: 1
 51551                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 51552  012308  010D               	movlb	13	; () banked
 51553  01230A  5134               	movf	52,w,b	;volatile
 51554  01230C  0D01               	mullw	1
 51555  01230E  0EBF               	movlw	low _USBAlternateInterface
 51556  012310  24F3               	addwf	prodl,w,c
 51557  012312  6ED9               	movwf	fsr2l,c
 51558  012314  0E01               	movlw	high _USBAlternateInterface
 51559  012316  20F4               	addwfc	prodh,w,c
 51560  012318  6EDA               	movwf	fsr2h,c
 51561  01231A  CD32 FFDF          	movff	3378,indf2	;volatile
 51562                           
 51563                           ;usb_device.c: 2727: break;
 51564  01231E  0012               	return	
 51565  012320                     
 51566                           ; BSR set to: 13
 51567                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 51568                           
 51569                           ; BSR set to: 13
 51570  012320  0E00               	movlw	0
 51571  012322  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 51572  012324  0E02               	movlw	2
 51573  012326  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 51574  012328  0E00               	movlw	0
 51575  01232A  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 51576  01232C  0E00               	movlw	0
 51577  01232E  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 51578  012330  0E00               	movlw	0
 51579  012332  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 51580  012334  0E00               	movlw	0
 51581  012336  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 51582  012338  EC10  F0A0         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 51583                           
 51584                           ;usb_device.c: 2734: }
 51585                           
 51586                           ;usb_device.c: 2733: break;
 51587                           
 51588                           ;usb_device.c: 2732: default:
 51589                           
 51590                           ;usb_device.c: 2731: case 12:
 51591                           
 51592                           ;usb_device.c: 2730: break;
 51593  01233C  0012               	return	
 51594  01233E                     i2l355:
 51595  01233E  010D               	movlb	13	; () banked
 51596  012340  5131               	movf	49,w,b	;volatile
 51597                           
 51598                           ; Switch size 1, requested type "space"
 51599                           ; Number of cases is 11, Range of values is 0 to 12
 51600                           ; switch strategies available:
 51601                           ; Name         Instructions Cycles
 51602                           ; simple_byte           34    18 (average)
 51603                           ;	Chosen strategy is simple_byte
 51604  012342  0A00               	xorlw	0	; case 0
 51605  012344  B4D8               	btfsc	status,2,c
 51606  012346  D7C9               	goto	i2l361
 51607  012348  0A01               	xorlw	1	; case 1
 51608  01234A  B4D8               	btfsc	status,2,c
 51609  01234C  D7C9               	goto	i2l362
 51610  01234E  0A02               	xorlw	2	; case 3
 51611  012350  B4D8               	btfsc	status,2,c
 51612  012352  D7C6               	goto	i2l362
 51613  012354  0A06               	xorlw	6	; case 5
 51614  012356  B4D8               	btfsc	status,2,c
 51615  012358  D7AB               	goto	i2l356
 51616  01235A  0A03               	xorlw	3	; case 6
 51617  01235C  B4D8               	btfsc	status,2,c
 51618  01235E  D7AD               	goto	i2l358
 51619  012360  0A01               	xorlw	1	; case 7
 51620  012362  B4D8               	btfsc	status,2,c
 51621  012364  D7DD               	goto	i2l366
 51622  012366  0A0F               	xorlw	15	; case 8
 51623  012368  B4D8               	btfsc	status,2,c
 51624  01236A  D7AD               	goto	i2l360
 51625  01236C  0A01               	xorlw	1	; case 9
 51626  01236E  B4D8               	btfsc	status,2,c
 51627  012370  D7A7               	goto	i2l359
 51628  012372  0A03               	xorlw	3	; case 10
 51629  012374  B4D8               	btfsc	status,2,c
 51630  012376  D7B7               	goto	i2l364
 51631  012378  0A01               	xorlw	1	; case 11
 51632  01237A  B4D8               	btfsc	status,2,c
 51633  01237C  D7C3               	goto	i2l365
 51634  01237E  0A07               	xorlw	7	; case 12
 51635  012380  0012               	return	
 51636  012382                     __end_of_USBCheckStdRequest:
 51637                           	opt stack 0
 51638                           tosu	equ	0xFFF
 51639                           tosh	equ	0xFFE
 51640                           tosl	equ	0xFFD
 51641                           pclatu	equ	0xFFB
 51642                           pclath	equ	0xFFA
 51643                           tblptru	equ	0xFF8
 51644                           tblptrh	equ	0xFF7
 51645                           tblptrl	equ	0xFF6
 51646                           tablat	equ	0xFF5
 51647                           prodh	equ	0xFF4
 51648                           prodl	equ	0xFF3
 51649                           intcon	equ	0xFF2
 51650                           indf0	equ	0xFEF
 51651                           postinc0	equ	0xFEE
 51652                           fsr0h	equ	0xFEA
 51653                           fsr0l	equ	0xFE9
 51654                           wreg	equ	0xFE8
 51655                           indf1	equ	0xFE7
 51656                           postinc1	equ	0xFE6
 51657                           postdec1	equ	0xFE5
 51658                           plusw1	equ	0xFE3
 51659                           fsr1h	equ	0xFE2
 51660                           fsr1l	equ	0xFE1
 51661                           indf2	equ	0xFDF
 51662                           postinc2	equ	0xFDE
 51663                           postdec2	equ	0xFDD
 51664                           plusw2	equ	0xFDB
 51665                           fsr2h	equ	0xFDA
 51666                           fsr2l	equ	0xFD9
 51667                           status	equ	0xFD8
 51668                           
 51669 ;; *************** function _USBStdSetCfgHandler *****************
 51670 ;; Defined at:
 51671 ;;		line 1970 in file "usb_device.c"
 51672 ;; Parameters:    Size  Location     Type
 51673 ;;		None
 51674 ;; Auto vars:     Size  Location     Type
 51675 ;;  i               1   23[COMRAM] unsigned char 
 51676 ;; Return value:  Size  Location     Type
 51677 ;;                  1    wreg      void 
 51678 ;; Registers used:
 51679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 51680 ;; Tracked objects:
 51681 ;;		On entry : 0/0
 51682 ;;		On exit  : 0/0
 51683 ;;		Unchanged: 0/0
 51684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51686 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51688 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51689 ;;Total ram usage:        1 bytes
 51690 ;; Hardware stack levels used:    1
 51691 ;; Hardware stack levels required when called:    4
 51692 ;; This function calls:
 51693 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 51694 ;;		i2_memset
 51695 ;; This function is called by:
 51696 ;;		_USBCheckStdRequest
 51697 ;; This function uses a non-reentrant model
 51698 ;;
 51699                           
 51700                           	psect	text217
 51701  012544                     __ptext217:
 51702                           	opt stack 0
 51703  012544                     _USBStdSetCfgHandler:
 51704                           	opt stack 9
 51705                           
 51706                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 51707                           
 51708                           ;incstack = 0
 51709  012544  0101               	movlb	1	; () banked
 51710  012546  8F0C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 51711                           
 51712                           ; BSR set to: 1
 51713                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 51714  012548  0E27               	movlw	39
 51715  01254A  6E01               	movwf	i2memset@p1,c
 51716  01254C  0E0F               	movlw	15
 51717  01254E  6E02               	movwf	i2memset@p1+1,c
 51718  012550  0E00               	movlw	0
 51719  012552  6E04               	movwf	i2memset@c+1,c
 51720  012554  0E00               	movlw	0
 51721  012556  6E03               	movwf	i2memset@c,c
 51722  012558  0E00               	movlw	0
 51723  01255A  6E06               	movwf	i2memset@n+1,c
 51724  01255C  0E02               	movlw	2
 51725  01255E  6E05               	movwf	i2memset@n,c
 51726  012560  EC0B  F0AE         	call	i2_memset	;wreg free
 51727                           
 51728                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 51729  012564  0E00               	movlw	0
 51730  012566  6E01               	movwf	i2memset@p1,c
 51731  012568  0E0D               	movlw	13
 51732  01256A  6E02               	movwf	i2memset@p1+1,c
 51733  01256C  0E00               	movlw	0
 51734  01256E  6E04               	movwf	i2memset@c+1,c
 51735  012570  0E00               	movlw	0
 51736  012572  6E03               	movwf	i2memset@c,c
 51737  012574  0E00               	movlw	0
 51738  012576  6E06               	movwf	i2memset@n+1,c
 51739  012578  0E30               	movlw	48
 51740  01257A  6E05               	movwf	i2memset@n,c
 51741  01257C  EC0B  F0AE         	call	i2_memset	;wreg free
 51742                           
 51743                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 51744  012580  8C65               	bsf	3941,6,c	;volatile
 51745                           
 51746                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 51747  012582  0E00               	movlw	0
 51748  012584  6E18               	movwf	USBStdSetCfgHandler@i,c
 51749  012586                     i2l13608:
 51750  012586  0E02               	movlw	2
 51751  012588  6418               	cpfsgt	USBStdSetCfgHandler@i,c
 51752  01258A  D001               	goto	i2l272
 51753  01258C  D016               	goto	i2u1204_40
 51754  01258E                     i2l272:
 51755                           
 51756                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 51757  01258E  5018               	movf	USBStdSetCfgHandler@i,w,c
 51758  012590  0D01               	mullw	1
 51759  012592  0E34               	movlw	low _ep_data_in
 51760  012594  24F3               	addwf	prodl,w,c
 51761  012596  6ED9               	movwf	fsr2l,c
 51762  012598  0E01               	movlw	high _ep_data_in
 51763  01259A  20F4               	addwfc	prodh,w,c
 51764  01259C  6EDA               	movwf	fsr2h,c
 51765  01259E  0E00               	movlw	0
 51766  0125A0  6EDF               	movwf	indf2,c
 51767                           
 51768                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 51769  0125A2  5018               	movf	USBStdSetCfgHandler@i,w,c
 51770  0125A4  0D01               	mullw	1
 51771  0125A6  0E31               	movlw	low _ep_data_out
 51772  0125A8  24F3               	addwf	prodl,w,c
 51773  0125AA  6ED9               	movwf	fsr2l,c
 51774  0125AC  0E01               	movlw	high _ep_data_out
 51775  0125AE  20F4               	addwfc	prodh,w,c
 51776  0125B0  6EDA               	movwf	fsr2h,c
 51777  0125B2  0E00               	movlw	0
 51778  0125B4  6EDF               	movwf	indf2,c
 51779  0125B6  2A18               	incf	USBStdSetCfgHandler@i,f,c
 51780  0125B8  D7E6               	goto	i2l13608
 51781  0125BA                     i2u1204_40:
 51782                           
 51783                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 51784  0125BA  0EBF               	movlw	low _USBAlternateInterface
 51785  0125BC  6E01               	movwf	i2memset@p1,c
 51786  0125BE  0E01               	movlw	high _USBAlternateInterface
 51787  0125C0  6E02               	movwf	i2memset@p1+1,c
 51788  0125C2  0E00               	movlw	0
 51789  0125C4  6E04               	movwf	i2memset@c+1,c
 51790  0125C6  0E00               	movlw	0
 51791  0125C8  6E03               	movwf	i2memset@c,c
 51792  0125CA  0E00               	movlw	0
 51793  0125CC  6E06               	movwf	i2memset@n+1,c
 51794  0125CE  0E02               	movlw	2
 51795  0125D0  6E05               	movwf	i2memset@n,c
 51796  0125D2  EC0B  F0AE         	call	i2_memset	;wreg free
 51797                           
 51798                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 51799  0125D6  9C65               	bcf	3941,6,c	;volatile
 51800                           
 51801                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 51802  0125D8  0E08               	movlw	8
 51803  0125DA  0101               	movlb	1	; () banked
 51804  0125DC  6F0F               	movwf	_pBDTEntryIn& (0+255),b
 51805  0125DE  0E0D               	movlw	13
 51806  0125E0  6F10               	movwf	(_pBDTEntryIn+1)& (0+255),b
 51807                           
 51808                           ; BSR set to: 1
 51809                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 51810  0125E2  0E00               	movlw	0
 51811  0125E4  6E5B               	movwf	_pBDTEntryEP0OutCurrent,c
 51812  0125E6  0E0D               	movlw	13
 51813  0125E8  6E5C               	movwf	_pBDTEntryEP0OutCurrent+1,c
 51814                           
 51815                           ; BSR set to: 1
 51816                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 51817  0125EA  C05B  F059         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 51818  0125EE  C05C  F05A         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 51819                           
 51820                           ; BSR set to: 1
 51821                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 51822  0125F2  CD32 F1C3          	movff	3378,_USBActiveConfiguration	;volatile
 51823                           
 51824                           ; BSR set to: 1
 51825                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 51826  0125F6  51C3               	movf	_USBActiveConfiguration& (0+255),w,b	;volatile
 51827  0125F8  A4D8               	btfss	status,2,c
 51828  0125FA  D003               	goto	i2l274
 51829                           
 51830                           ; BSR set to: 1
 51831                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 51832  0125FC  0E10               	movlw	16
 51833  0125FE  6E5D               	movwf	_USBDeviceState,c	;volatile
 51834                           
 51835                           ;usb_device.c: 2015: }
 51836  012600  0012               	return	
 51837  012602                     i2l274:
 51838                           
 51839                           ; BSR set to: 1
 51840                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 51841                           
 51842                           ; BSR set to: 1
 51843  012602  0E00               	movlw	0
 51844  012604  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 51845  012606  0E01               	movlw	1
 51846  012608  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 51847  01260A  0EC3               	movlw	low _USBActiveConfiguration
 51848  01260C  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 51849  01260E  0E01               	movlw	high _USBActiveConfiguration
 51850  012610  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 51851  012612  0E00               	movlw	0
 51852  012614  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 51853  012616  0E01               	movlw	1
 51854  012618  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 51855  01261A  EC10  F0A0         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 51856                           
 51857                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 51858  01261E  0E20               	movlw	32
 51859  012620  6E5D               	movwf	_USBDeviceState,c	;volatile
 51860  012622  0012               	return	
 51861  012624                     __end_of_USBStdSetCfgHandler:
 51862                           	opt stack 0
 51863                           tosu	equ	0xFFF
 51864                           tosh	equ	0xFFE
 51865                           tosl	equ	0xFFD
 51866                           pclatu	equ	0xFFB
 51867                           pclath	equ	0xFFA
 51868                           tblptru	equ	0xFF8
 51869                           tblptrh	equ	0xFF7
 51870                           tblptrl	equ	0xFF6
 51871                           tablat	equ	0xFF5
 51872                           prodh	equ	0xFF4
 51873                           prodl	equ	0xFF3
 51874                           intcon	equ	0xFF2
 51875                           indf0	equ	0xFEF
 51876                           postinc0	equ	0xFEE
 51877                           fsr0h	equ	0xFEA
 51878                           fsr0l	equ	0xFE9
 51879                           wreg	equ	0xFE8
 51880                           indf1	equ	0xFE7
 51881                           postinc1	equ	0xFE6
 51882                           postdec1	equ	0xFE5
 51883                           plusw1	equ	0xFE3
 51884                           fsr1h	equ	0xFE2
 51885                           fsr1l	equ	0xFE1
 51886                           indf2	equ	0xFDF
 51887                           postinc2	equ	0xFDE
 51888                           postdec2	equ	0xFDD
 51889                           plusw2	equ	0xFDB
 51890                           fsr2h	equ	0xFDA
 51891                           fsr2l	equ	0xFD9
 51892                           status	equ	0xFD8
 51893                           
 51894 ;; *************** function i2_memset *****************
 51895 ;; Defined at:
 51896 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 51897 ;; Parameters:    Size  Location     Type
 51898 ;;  p1              2    0[COMRAM] PTR void 
 51899 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 51900 ;;  c               2    2[COMRAM] int 
 51901 ;;  n               2    4[COMRAM] unsigned int 
 51902 ;; Auto vars:     Size  Location     Type
 51903 ;;  memset          2    6[COMRAM] PTR unsigned char 
 51904 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 51905 ;; Return value:  Size  Location     Type
 51906 ;;                  2    0[COMRAM] PTR void 
 51907 ;; Registers used:
 51908 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 51909 ;; Tracked objects:
 51910 ;;		On entry : 0/0
 51911 ;;		On exit  : 0/0
 51912 ;;		Unchanged: 0/0
 51913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51914 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51915 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51917 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51918 ;;Total ram usage:        8 bytes
 51919 ;; Hardware stack levels used:    1
 51920 ;; This function calls:
 51921 ;;		Nothing
 51922 ;; This function is called by:
 51923 ;;		_USBStdSetCfgHandler
 51924 ;;		i2_USBDeviceInit
 51925 ;; This function uses a non-reentrant model
 51926 ;;
 51927                           
 51928                           	psect	text218
 51929  015C16                     __ptext218:
 51930                           	opt stack 0
 51931  015C16                     i2_memset:
 51932                           	opt stack 15
 51933                           
 51934                           ;incstack = 0
 51935  015C16  C001  F007         	movff	i2memset@p1,i2memset@p
 51936  015C1A  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 51937  015C1E  D008               	goto	i2l3822
 51938  015C20                     i2l13538:
 51939  015C20  C007  FFD9         	movff	i2memset@p,fsr2l
 51940  015C24  C008  FFDA         	movff	i2memset@p+1,fsr2h
 51941  015C28  C003  FFDF         	movff	i2memset@c,indf2
 51942  015C2C  4A07               	infsnz	i2memset@p,f,c
 51943  015C2E  2A08               	incf	i2memset@p+1,f,c
 51944  015C30                     i2l3822:
 51945  015C30  0605               	decf	i2memset@n,f,c
 51946  015C32  A0D8               	btfss	status,0,c
 51947  015C34  0606               	decf	i2memset@n+1,f,c
 51948  015C36  2805               	incf	i2memset@n,w,c
 51949  015C38  E1F3               	bnz	i2l13538
 51950  015C3A  2806               	incf	i2memset@n+1,w,c
 51951  015C3C  B4D8               	btfsc	status,2,c
 51952  015C3E  0012               	return	
 51953  015C40  D7EF               	goto	i2l3823
 51954  015C42                     __end_ofi2_memset:
 51955                           	opt stack 0
 51956                           tosu	equ	0xFFF
 51957                           tosh	equ	0xFFE
 51958                           tosl	equ	0xFFD
 51959                           pclatu	equ	0xFFB
 51960                           pclath	equ	0xFFA
 51961                           tblptru	equ	0xFF8
 51962                           tblptrh	equ	0xFF7
 51963                           tblptrl	equ	0xFF6
 51964                           tablat	equ	0xFF5
 51965                           prodh	equ	0xFF4
 51966                           prodl	equ	0xFF3
 51967                           intcon	equ	0xFF2
 51968                           indf0	equ	0xFEF
 51969                           postinc0	equ	0xFEE
 51970                           fsr0h	equ	0xFEA
 51971                           fsr0l	equ	0xFE9
 51972                           wreg	equ	0xFE8
 51973                           indf1	equ	0xFE7
 51974                           postinc1	equ	0xFE6
 51975                           postdec1	equ	0xFE5
 51976                           plusw1	equ	0xFE3
 51977                           fsr1h	equ	0xFE2
 51978                           fsr1l	equ	0xFE1
 51979                           indf2	equ	0xFDF
 51980                           postinc2	equ	0xFDE
 51981                           postdec2	equ	0xFDD
 51982                           plusw2	equ	0xFDB
 51983                           fsr2h	equ	0xFDA
 51984                           fsr2l	equ	0xFD9
 51985                           status	equ	0xFD8
 51986                           
 51987 ;; *************** function _USBStdGetStatusHandler *****************
 51988 ;; Defined at:
 51989 ;;		line 2131 in file "usb_device.c"
 51990 ;; Parameters:    Size  Location     Type
 51991 ;;		None
 51992 ;; Auto vars:     Size  Location     Type
 51993 ;;  p               2    1[COMRAM] PTR struct __BDT
 51994 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 51995 ;; Return value:  Size  Location     Type
 51996 ;;                  1    wreg      void 
 51997 ;; Registers used:
 51998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 51999 ;; Tracked objects:
 52000 ;;		On entry : 0/0
 52001 ;;		On exit  : 0/0
 52002 ;;		Unchanged: 0/0
 52003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52005 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52006 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52007 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52008 ;;Total ram usage:        3 bytes
 52009 ;; Hardware stack levels used:    1
 52010 ;; This function calls:
 52011 ;;		Nothing
 52012 ;; This function is called by:
 52013 ;;		_USBCheckStdRequest
 52014 ;; This function uses a non-reentrant model
 52015 ;;
 52016                           
 52017                           	psect	text219
 52018  013570                     __ptext219:
 52019                           	opt stack 0
 52020  013570                     _USBStdGetStatusHandler:
 52021                           	opt stack 13
 52022                           
 52023                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 52024                           
 52025                           ;incstack = 0
 52026  013570  0E00               	movlw	0
 52027  013572  010D               	movlb	13	; () banked
 52028  013574  6F38               	movwf	56,b	;volatile
 52029                           
 52030                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 52031  013576  0E00               	movlw	0
 52032  013578  6F39               	movwf	57,b	;volatile
 52033                           
 52034                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 52035  01357A  D039               	goto	i2l293
 52036  01357C                     i2l294:
 52037                           
 52038                           ; BSR set to: 13
 52039                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 52040  01357C  0101               	movlb	1	; () banked
 52041  01357E  8F0C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 52042                           
 52043                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 52044                           
 52045                           ; BSR set to: 13
 52046                           
 52047                           ; BSR set to: 1
 52048                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 52049                           
 52050                           ;usb_device.c: 2144: if(0 == 1)
 52051  013580  0101               	movlb	1	; () banked
 52052  013582  0563               	decf	_RemoteWakeup& (0+255),w,b	;volatile
 52053  013584  A4D8               	btfss	status,2,c
 52054  013586  D03E               	goto	i2l297
 52055                           
 52056                           ; BSR set to: 1
 52057                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 52058  013588  010D               	movlb	13	; () banked
 52059  01358A  8338               	bsf	56,1,b	;volatile
 52060                           
 52061                           ; BSR set to: 13
 52062                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 52063  01358C  D03B               	goto	i2l297
 52064  01358E                     i2l298:
 52065                           
 52066                           ; BSR set to: 13
 52067                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 52068  01358E  0101               	movlb	1	; () banked
 52069  013590  8F0C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 52070                           
 52071                           ;usb_device.c: 2156: break;
 52072  013592  D038               	goto	i2l297
 52073  013594                     i2l299:
 52074                           
 52075                           ; BSR set to: 13
 52076                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 52077  013594  0101               	movlb	1	; () banked
 52078  013596  8F0C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 52079                           
 52080                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 52081  013598  010D               	movlb	13	; () banked
 52082  01359A  BF34               	btfsc	52,7,b	;volatile
 52083  01359C  D00A               	goto	i2l300
 52084                           
 52085                           ; BSR set to: 13
 52086                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 52087  01359E  5134               	movf	52,w,b	;volatile
 52088  0135A0  0B0F               	andlw	15
 52089  0135A2  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 52090  0135A4  5001               	movf	??_USBStdGetStatusHandler,w,c
 52091  0135A6  0D02               	mullw	2
 52092  0135A8  0E15               	movlw	low _pBDTEntryOut
 52093  0135AA  24F3               	addwf	prodl,w,c
 52094  0135AC  6ED9               	movwf	fsr2l,c
 52095  0135AE  0E01               	movlw	high _pBDTEntryOut
 52096  0135B0  D009               	goto	L73
 52097  0135B2                     i2l300:
 52098                           
 52099                           ; BSR set to: 13
 52100                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 52101                           
 52102                           ; BSR set to: 13
 52103  0135B2  5134               	movf	52,w,b	;volatile
 52104  0135B4  0B0F               	andlw	15
 52105  0135B6  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 52106  0135B8  5001               	movf	??_USBStdGetStatusHandler,w,c
 52107  0135BA  0D02               	mullw	2
 52108  0135BC  0E0F               	movlw	low _pBDTEntryIn
 52109  0135BE  24F3               	addwf	prodl,w,c
 52110  0135C0  6ED9               	movwf	fsr2l,c
 52111  0135C2  0E01               	movlw	high _pBDTEntryIn
 52112  0135C4                     L73:
 52113  0135C4  20F4               	addwfc	prodh,w,c
 52114  0135C6  6EDA               	movwf	fsr2h,c
 52115  0135C8  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 52116  0135CC  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 52117                           
 52118                           ; BSR set to: 13
 52119                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 52120                           
 52121                           ; BSR set to: 13
 52122  0135D0  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 52123  0135D4  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 52124  0135D8  AEDF               	btfss	indf2,7,c
 52125  0135DA  D014               	goto	i2l297
 52126                           
 52127                           ; BSR set to: 13
 52128  0135DC  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 52129  0135E0  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 52130  0135E4  A4DF               	btfss	indf2,2,c
 52131  0135E6  D00E               	goto	i2l297
 52132                           
 52133                           ; BSR set to: 13
 52134                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 52135  0135E8  0E01               	movlw	1
 52136  0135EA  6F38               	movwf	56,b	;volatile
 52137                           
 52138                           ; BSR set to: 13
 52139                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 52140                           
 52141                           ; BSR set to: 13
 52142                           ;usb_device.c: 2176: break;
 52143  0135EC  D00B               	goto	i2l297
 52144  0135EE                     i2l293:
 52145                           
 52146                           ; BSR set to: 13
 52147                           
 52148                           ; BSR set to: 13
 52149  0135EE  5130               	movf	48,w,b	;volatile
 52150  0135F0  0B1F               	andlw	31
 52151                           
 52152                           ; Switch size 1, requested type "space"
 52153                           ; Number of cases is 3, Range of values is 0 to 2
 52154                           ; switch strategies available:
 52155                           ; Name         Instructions Cycles
 52156                           ; simple_byte           10     6 (average)
 52157                           ;	Chosen strategy is simple_byte
 52158  0135F2  0A00               	xorlw	0	; case 0
 52159  0135F4  B4D8               	btfsc	status,2,c
 52160  0135F6  D7C2               	goto	i2l294
 52161  0135F8  0A01               	xorlw	1	; case 1
 52162  0135FA  B4D8               	btfsc	status,2,c
 52163  0135FC  D7C8               	goto	i2l298
 52164  0135FE  0A03               	xorlw	3	; case 2
 52165  013600  B4D8               	btfsc	status,2,c
 52166  013602  D7C8               	goto	i2l299
 52167  013604                     i2l297:
 52168                           
 52169                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 52170  013604  0101               	movlb	1	; () banked
 52171  013606  AF0C               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 52172  013608  0012               	return	
 52173                           
 52174                           ; BSR set to: 1
 52175                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 52176  01360A  0E38               	movlw	56
 52177  01360C  6F09               	movwf	_inPipes& (0+255),b	;volatile
 52178  01360E  0E0D               	movlw	13
 52179  013610  6F0A               	movwf	(_inPipes+1)& (0+255),b	;volatile
 52180                           
 52181                           ; BSR set to: 1
 52182                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 52183  013612  810C               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 52184                           
 52185                           ; BSR set to: 1
 52186                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 52187  013614  0E02               	movlw	2
 52188  013616  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 52189  013618  0012               	return	
 52190  01361A                     __end_of_USBStdGetStatusHandler:
 52191                           	opt stack 0
 52192                           tosu	equ	0xFFF
 52193                           tosh	equ	0xFFE
 52194                           tosl	equ	0xFFD
 52195                           pclatu	equ	0xFFB
 52196                           pclath	equ	0xFFA
 52197                           tblptru	equ	0xFF8
 52198                           tblptrh	equ	0xFF7
 52199                           tblptrl	equ	0xFF6
 52200                           tablat	equ	0xFF5
 52201                           prodh	equ	0xFF4
 52202                           prodl	equ	0xFF3
 52203                           intcon	equ	0xFF2
 52204                           indf0	equ	0xFEF
 52205                           postinc0	equ	0xFEE
 52206                           fsr0h	equ	0xFEA
 52207                           fsr0l	equ	0xFE9
 52208                           wreg	equ	0xFE8
 52209                           indf1	equ	0xFE7
 52210                           postinc1	equ	0xFE6
 52211                           postdec1	equ	0xFE5
 52212                           plusw1	equ	0xFE3
 52213                           fsr1h	equ	0xFE2
 52214                           fsr1l	equ	0xFE1
 52215                           indf2	equ	0xFDF
 52216                           postinc2	equ	0xFDE
 52217                           postdec2	equ	0xFDD
 52218                           plusw2	equ	0xFDB
 52219                           fsr2h	equ	0xFDA
 52220                           fsr2l	equ	0xFD9
 52221                           status	equ	0xFD8
 52222                           
 52223 ;; *************** function _USBStdGetDscHandler *****************
 52224 ;; Defined at:
 52225 ;;		line 2045 in file "usb_device.c"
 52226 ;; Parameters:    Size  Location     Type
 52227 ;;		None
 52228 ;; Auto vars:     Size  Location     Type
 52229 ;;		None
 52230 ;; Return value:  Size  Location     Type
 52231 ;;                  1    wreg      void 
 52232 ;; Registers used:
 52233 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 52234 ;; Tracked objects:
 52235 ;;		On entry : 0/0
 52236 ;;		On exit  : 0/0
 52237 ;;		Unchanged: 0/0
 52238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52241 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52242 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52243 ;;Total ram usage:        2 bytes
 52244 ;; Hardware stack levels used:    1
 52245 ;; This function calls:
 52246 ;;		Nothing
 52247 ;; This function is called by:
 52248 ;;		_USBCheckStdRequest
 52249 ;; This function uses a non-reentrant model
 52250 ;;
 52251                           
 52252                           	psect	text220
 52253  01058C                     __ptext220:
 52254                           	opt stack 0
 52255  01058C                     _USBStdGetDscHandler:
 52256                           	opt stack 13
 52257                           
 52258                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 52259                           
 52260                           ; BSR set to: 1
 52261                           ;incstack = 0
 52262  01058C  0E80               	movlw	128
 52263  01058E  010D               	movlb	13	; () banked
 52264  010590  1930               	xorwf	48,w,b	;volatile
 52265  010592  A4D8               	btfss	status,2,c
 52266  010594  0012               	return	
 52267                           
 52268                           ; BSR set to: 13
 52269                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 52270  010596  0EC0               	movlw	192
 52271  010598  0101               	movlb	1	; () banked
 52272  01059A  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 52273                           
 52274                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 52275  01059C  D08B               	goto	i2l280
 52276  01059E                     
 52277                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 52278                           
 52279                           ; BSR set to: 1
 52280  01059E  0E70               	movlw	low _device_dsc
 52281  0105A0  0101               	movlb	1	; () banked
 52282  0105A2  6F09               	movwf	_inPipes& (0+255),b	;volatile
 52283  0105A4  0EA2               	movlw	high _device_dsc
 52284  0105A6  6F0A               	movwf	(_inPipes+1)& (0+255),b	;volatile
 52285                           
 52286                           ; BSR set to: 1
 52287                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 52288  0105A8  0E00               	movlw	0
 52289  0105AA  6F0E               	movwf	(_inPipes+5)& (0+255),b	;volatile
 52290  0105AC  0E12               	movlw	18
 52291  0105AE  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 52292                           
 52293                           ;usb_device.c: 2060: break;
 52294  0105B0  0012               	return	
 52295  0105B2                     
 52296                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 52297                           
 52298                           ; BSR set to: 1
 52299  0105B2  010D               	movlb	13	; () banked
 52300  0105B4  5132               	movf	50,w,b	;volatile
 52301  0105B6  A4D8               	btfss	status,2,c
 52302  0105B8  D045               	goto	i2l284
 52303                           
 52304                           ; BSR set to: 13
 52305                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 52306  0105BA  5132               	movf	50,w,b	;volatile
 52307  0105BC  0D02               	mullw	2
 52308  0105BE  0EEC               	movlw	low _USB_CD_Ptr
 52309  0105C0  24F3               	addwf	prodl,w,c
 52310  0105C2  6EF6               	movwf	tblptrl,c
 52311  0105C4  0E9D               	movlw	high _USB_CD_Ptr
 52312  0105C6  20F4               	addwfc	prodh,w,c
 52313  0105C8  6EF7               	movwf	tblptrh,c
 52314  0105CA                     	if	1	;There are 3 active tblptr bytes
 52315  0105CA  6AF8               	clrf	tblptru,c
 52316  0105CC  0E00               	movlw	low (__mediumconst shr (0+16))
 52317  0105CE  22F8               	addwfc	tblptru,f,c
 52318  0105D0                     	endif
 52319  0105D0  0009               	tblrd		*+
 52320  0105D2  CFF5 F109          	movff	tablat,_inPipes	;volatile
 52321  0105D6  000A               	tblrd		*-
 52322  0105D8  CFF5 F10A          	movff	tablat,_inPipes+1	;volatile
 52323                           
 52324                           ; BSR set to: 13
 52325                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 52326  0105DC  0E02               	movlw	2
 52327  0105DE  0101               	movlb	1	; () banked
 52328  0105E0  2509               	addwf	_inPipes& (0+255),w,b	;volatile
 52329  0105E2  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 52330  0105E4  0E00               	movlw	0
 52331  0105E6  210A               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 52332  0105E8  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 52333  0105EA  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 52334  0105EE  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 52335  0105F2  0E00               	movlw	low (__mediumconst shr (0+16))
 52336  0105F4  6EF8               	movwf	tblptru,c
 52337  0105F6  0E0E               	movlw	(high __ramtop+-1)
 52338  0105F8  64F7               	cpfsgt	tblptrh,c
 52339  0105FA  D003               	bra	i2u1208_47
 52340  0105FC  0008               	tblrd		*
 52341  0105FE  50F5               	movf	tablat,w,c
 52342  010600  D005               	bra	i2u1208_40
 52343  010602                     i2u1208_47:
 52344  010602  CFF6 FFE9          	movff	tblptrl,fsr0l
 52345  010606  CFF7 FFEA          	movff	tblptrh,fsr0h
 52346  01060A  50EF               	movf	indf0,w,c
 52347  01060C                     i2u1208_40:
 52348  01060C  0101               	movlb	1	; () banked
 52349  01060E  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 52350                           
 52351                           ; BSR set to: 1
 52352                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 52353  010610  0E03               	movlw	3
 52354  010612  2509               	addwf	_inPipes& (0+255),w,b	;volatile
 52355  010614  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 52356  010616  0E00               	movlw	0
 52357  010618  210A               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 52358  01061A  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 52359  01061C  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 52360  010620  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 52361  010624  0E00               	movlw	low (__mediumconst shr (0+16))
 52362  010626  6EF8               	movwf	tblptru,c
 52363  010628  0E0E               	movlw	(high __ramtop+-1)
 52364  01062A  64F7               	cpfsgt	tblptrh,c
 52365  01062C  D003               	bra	i2u1209_47
 52366  01062E  0008               	tblrd		*
 52367  010630  50F5               	movf	tablat,w,c
 52368  010632  D005               	bra	i2u1209_40
 52369  010634                     i2u1209_47:
 52370  010634  CFF6 FFE9          	movff	tblptrl,fsr0l
 52371  010638  CFF7 FFEA          	movff	tblptrh,fsr0h
 52372  01063C  50EF               	movf	indf0,w,c
 52373  01063E                     i2u1209_40:
 52374  01063E  0101               	movlb	1	; () banked
 52375  010640  6F0E               	movwf	(_inPipes+5)& (0+255),b	;volatile
 52376                           
 52377                           ;usb_device.c: 2078: }
 52378  010642  0012               	return	
 52379  010644                     i2l284:
 52380                           
 52381                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 52382                           
 52383                           ; BSR set to: 1
 52384  010644  0E00               	movlw	0
 52385  010646  0101               	movlb	1	; () banked
 52386  010648  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 52387                           
 52388                           ; BSR set to: 1
 52389                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 52390  01064A  0012               	return	
 52391  01064C                     
 52392                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 52393                           
 52394                           ; BSR set to: 1
 52395  01064C  0E04               	movlw	4
 52396  01064E  010D               	movlb	13	; () banked
 52397  010650  6132               	cpfslt	50,b	;volatile
 52398  010652  D028               	goto	i2l287
 52399                           
 52400                           ; BSR set to: 13
 52401                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 52402  010654  5132               	movf	50,w,b	;volatile
 52403  010656  0D02               	mullw	2
 52404  010658  0EE4               	movlw	low _USB_SD_Ptr
 52405  01065A  24F3               	addwf	prodl,w,c
 52406  01065C  6EF6               	movwf	tblptrl,c
 52407  01065E  0E9D               	movlw	high _USB_SD_Ptr
 52408  010660  20F4               	addwfc	prodh,w,c
 52409  010662  6EF7               	movwf	tblptrh,c
 52410  010664                     	if	1	;There are 3 active tblptr bytes
 52411  010664  6AF8               	clrf	tblptru,c
 52412  010666  0E00               	movlw	low (__mediumconst shr (0+16))
 52413  010668  22F8               	addwfc	tblptru,f,c
 52414  01066A                     	endif
 52415  01066A  0009               	tblrd		*+
 52416  01066C  CFF5 F109          	movff	tablat,_inPipes	;volatile
 52417  010670  000A               	tblrd		*-
 52418  010672  CFF5 F10A          	movff	tablat,_inPipes+1	;volatile
 52419                           
 52420                           ; BSR set to: 13
 52421                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 52422  010676  C109  FFF6         	movff	_inPipes,tblptrl	;volatile
 52423  01067A  C10A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 52424  01067E  0E00               	movlw	low (__mediumconst shr (0+16))
 52425  010680  6EF8               	movwf	tblptru,c
 52426  010682  0E0E               	movlw	(high __ramtop+-1)
 52427  010684  64F7               	cpfsgt	tblptrh,c
 52428  010686  D003               	bra	i2u1211_47
 52429  010688  0008               	tblrd		*
 52430  01068A  50F5               	movf	tablat,w,c
 52431  01068C  D005               	bra	i2u1211_40
 52432  01068E                     i2u1211_47:
 52433  01068E  CFF6 FFE9          	movff	tblptrl,fsr0l
 52434  010692  CFF7 FFEA          	movff	tblptrh,fsr0h
 52435  010696  50EF               	movf	indf0,w,c
 52436  010698                     i2u1211_40:
 52437  010698  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 52438  01069A  5001               	movf	??_USBStdGetDscHandler,w,c
 52439  01069C  0101               	movlb	1	; () banked
 52440  01069E  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 52441  0106A0  6B0E               	clrf	(_inPipes+5)& (0+255),b	;volatile
 52442                           
 52443                           ;usb_device.c: 2094: }
 52444  0106A2  0012               	return	
 52445  0106A4                     i2l287:
 52446                           
 52447                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 52448                           
 52449                           ; BSR set to: 1
 52450  0106A4  0E00               	movlw	0
 52451  0106A6  0101               	movlb	1	; () banked
 52452  0106A8  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 52453                           
 52454                           ; BSR set to: 1
 52455                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 52456  0106AA  0012               	return	
 52457  0106AC                     
 52458                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 52459                           
 52460                           ; BSR set to: 1
 52461  0106AC  0E00               	movlw	0
 52462  0106AE  0101               	movlb	1	; () banked
 52463  0106B0  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 52464                           
 52465                           ; BSR set to: 1
 52466                           ;usb_device.c: 2112: }
 52467                           
 52468                           ;usb_device.c: 2111: break;
 52469  0106B2  0012               	return	
 52470  0106B4                     i2l280:
 52471                           
 52472                           ; BSR set to: 1
 52473                           
 52474                           ; BSR set to: 1
 52475  0106B4  010D               	movlb	13	; () banked
 52476  0106B6  5133               	movf	51,w,b	;volatile
 52477                           
 52478                           ; Switch size 1, requested type "space"
 52479                           ; Number of cases is 3, Range of values is 1 to 3
 52480                           ; switch strategies available:
 52481                           ; Name         Instructions Cycles
 52482                           ; simple_byte           10     6 (average)
 52483                           ;	Chosen strategy is simple_byte
 52484  0106B8  0A01               	xorlw	1	; case 1
 52485  0106BA  B4D8               	btfsc	status,2,c
 52486  0106BC  D770               	goto	i2l281
 52487  0106BE  0A03               	xorlw	3	; case 2
 52488  0106C0  B4D8               	btfsc	status,2,c
 52489  0106C2  D777               	goto	i2l283
 52490  0106C4  0A01               	xorlw	1	; case 3
 52491  0106C6  B4D8               	btfsc	status,2,c
 52492  0106C8  D7C1               	goto	i2l286
 52493  0106CA  D7F0               	goto	i2l289
 52494  0106CC                     __end_of_USBStdGetDscHandler:
 52495                           	opt stack 0
 52496                           tosu	equ	0xFFF
 52497                           tosh	equ	0xFFE
 52498                           tosl	equ	0xFFD
 52499                           pclatu	equ	0xFFB
 52500                           pclath	equ	0xFFA
 52501                           tblptru	equ	0xFF8
 52502                           tblptrh	equ	0xFF7
 52503                           tblptrl	equ	0xFF6
 52504                           tablat	equ	0xFF5
 52505                           prodh	equ	0xFF4
 52506                           prodl	equ	0xFF3
 52507                           intcon	equ	0xFF2
 52508                           indf0	equ	0xFEF
 52509                           postinc0	equ	0xFEE
 52510                           fsr0h	equ	0xFEA
 52511                           fsr0l	equ	0xFE9
 52512                           wreg	equ	0xFE8
 52513                           indf1	equ	0xFE7
 52514                           postinc1	equ	0xFE6
 52515                           postdec1	equ	0xFE5
 52516                           plusw1	equ	0xFE3
 52517                           fsr1h	equ	0xFE2
 52518                           fsr1l	equ	0xFE1
 52519                           indf2	equ	0xFDF
 52520                           postinc2	equ	0xFDE
 52521                           postdec2	equ	0xFDD
 52522                           plusw2	equ	0xFDB
 52523                           fsr2h	equ	0xFDA
 52524                           fsr2l	equ	0xFD9
 52525                           status	equ	0xFD8
 52526                           
 52527 ;; *************** function _USBStdFeatureReqHandler *****************
 52528 ;; Defined at:
 52529 ;;		line 2756 in file "usb_device.c"
 52530 ;; Parameters:    Size  Location     Type
 52531 ;;		None
 52532 ;; Auto vars:     Size  Location     Type
 52533 ;;  p               2   27[COMRAM] PTR struct __BDT
 52534 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 52535 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 52536 ;;		 -> UEP0(1), 
 52537 ;;  current_ep_d    1   26[COMRAM] struct .
 52538 ;; Return value:  Size  Location     Type
 52539 ;;                  1    wreg      void 
 52540 ;; Registers used:
 52541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 52542 ;; Tracked objects:
 52543 ;;		On entry : 0/0
 52544 ;;		On exit  : 0/0
 52545 ;;		Unchanged: 0/0
 52546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52548 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52549 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52550 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52551 ;;Total ram usage:        6 bytes
 52552 ;; Hardware stack levels used:    1
 52553 ;; Hardware stack levels required when called:    4
 52554 ;; This function calls:
 52555 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 52556 ;; This function is called by:
 52557 ;;		_USBCheckStdRequest
 52558 ;; This function uses a non-reentrant model
 52559 ;;
 52560                           
 52561                           	psect	text221
 52562  00D8C0                     __ptext221:
 52563                           	opt stack 0
 52564  00D8C0                     _USBStdFeatureReqHandler:
 52565                           	opt stack 9
 52566                           
 52567                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 52568                           
 52569                           ;incstack = 0
 52570  00D8C0  010D               	movlb	13	; () banked
 52571  00D8C2  0532               	decf	50,w,b	;volatile
 52572  00D8C4  A4D8               	btfss	status,2,c
 52573  00D8C6  D011               	goto	i2l373
 52574                           
 52575                           ; BSR set to: 13
 52576  00D8C8  5130               	movf	48,w,b	;volatile
 52577  00D8CA  0B1F               	andlw	31
 52578  00D8CC  0900               	iorlw	0
 52579  00D8CE  A4D8               	btfss	status,2,c
 52580  00D8D0  D00C               	goto	i2l373
 52581                           
 52582                           ; BSR set to: 13
 52583                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 52584  00D8D2  0101               	movlb	1	; () banked
 52585  00D8D4  8F0C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 52586                           
 52587                           ; BSR set to: 1
 52588                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 52589  00D8D6  0E03               	movlw	3
 52590  00D8D8  010D               	movlb	13	; () banked
 52591  00D8DA  1931               	xorwf	49,w,b	;volatile
 52592  00D8DC  A4D8               	btfss	status,2,c
 52593  00D8DE  D002               	goto	i2l372
 52594                           
 52595                           ; BSR set to: 13
 52596                           ;usb_device.c: 2806: RemoteWakeup = 1;
 52597  00D8E0  0E01               	movlw	1
 52598  00D8E2  D001               	goto	L74
 52599  00D8E4                     i2l372:
 52600                           
 52601                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 52602                           
 52603                           ; BSR set to: 1
 52604  00D8E4  0E00               	movlw	0
 52605  00D8E6                     L74:
 52606  00D8E6  0101               	movlb	1	; () banked
 52607  00D8E8  6F63               	movwf	_RemoteWakeup& (0+255),b	;volatile
 52608  00D8EA                     i2l373:
 52609                           
 52610                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 52611                           
 52612                           ; BSR set to: 1
 52613  00D8EA  010D               	movlb	13	; () banked
 52614  00D8EC  5132               	movf	50,w,b	;volatile
 52615  00D8EE  A4D8               	btfss	status,2,c
 52616  00D8F0  0012               	return	
 52617                           
 52618                           ; BSR set to: 13
 52619  00D8F2  5130               	movf	48,w,b	;volatile
 52620  00D8F4  0B1F               	andlw	31
 52621  00D8F6  0A02               	xorlw	2
 52622  00D8F8  A4D8               	btfss	status,2,c
 52623  00D8FA  0012               	return	
 52624                           
 52625                           ; BSR set to: 13
 52626  00D8FC  5134               	movf	52,w,b	;volatile
 52627  00D8FE  0B0F               	andlw	15
 52628  00D900  0900               	iorlw	0
 52629  00D902  B4D8               	btfsc	status,2,c
 52630  00D904  0012               	return	
 52631                           
 52632                           ; BSR set to: 13
 52633  00D906  5134               	movf	52,w,b	;volatile
 52634  00D908  0B0F               	andlw	15
 52635  00D90A  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52636  00D90C  0E03               	movlw	3
 52637  00D90E  6018               	cpfslt	??_USBStdFeatureReqHandler,c
 52638  00D910  0012               	return	
 52639                           
 52640                           ; BSR set to: 13
 52641  00D912  0E20               	movlw	32
 52642  00D914  185D               	xorwf	_USBDeviceState,w,c	;volatile
 52643  00D916  A4D8               	btfss	status,2,c
 52644  00D918  0012               	return	
 52645                           
 52646                           ; BSR set to: 13
 52647                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 52648  00D91A  0101               	movlb	1	; () banked
 52649  00D91C  8F0C               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 52650                           
 52651                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 52652  00D91E  010D               	movlb	13	; () banked
 52653  00D920  BF34               	btfsc	52,7,b	;volatile
 52654  00D922  D019               	goto	i2l375
 52655                           
 52656                           ; BSR set to: 13
 52657                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 52658  00D924  5134               	movf	52,w,b	;volatile
 52659  00D926  0B0F               	andlw	15
 52660  00D928  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52661  00D92A  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52662  00D92C  0D02               	mullw	2
 52663  00D92E  0E15               	movlw	low _pBDTEntryOut
 52664  00D930  24F3               	addwf	prodl,w,c
 52665  00D932  6ED9               	movwf	fsr2l,c
 52666  00D934  0E01               	movlw	high _pBDTEntryOut
 52667  00D936  20F4               	addwfc	prodh,w,c
 52668  00D938  6EDA               	movwf	fsr2h,c
 52669  00D93A  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 52670  00D93E  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 52671                           
 52672                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 52673  00D942  5134               	movf	52,w,b	;volatile
 52674  00D944  0B0F               	andlw	15
 52675  00D946  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52676  00D948  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52677  00D94A  0D01               	mullw	1
 52678  00D94C  0E31               	movlw	low _ep_data_out
 52679  00D94E  24F3               	addwf	prodl,w,c
 52680  00D950  6ED9               	movwf	fsr2l,c
 52681  00D952  0E01               	movlw	high _ep_data_out
 52682  00D954  D018               	goto	L75
 52683  00D956                     i2l375:
 52684                           
 52685                           ; BSR set to: 13
 52686                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 52687                           
 52688                           ; BSR set to: 13
 52689  00D956  5134               	movf	52,w,b	;volatile
 52690  00D958  0B0F               	andlw	15
 52691  00D95A  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52692  00D95C  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52693  00D95E  0D02               	mullw	2
 52694  00D960  0E0F               	movlw	low _pBDTEntryIn
 52695  00D962  24F3               	addwf	prodl,w,c
 52696  00D964  6ED9               	movwf	fsr2l,c
 52697  00D966  0E01               	movlw	high _pBDTEntryIn
 52698  00D968  20F4               	addwfc	prodh,w,c
 52699  00D96A  6EDA               	movwf	fsr2h,c
 52700  00D96C  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 52701  00D970  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 52702                           
 52703                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 52704  00D974  5134               	movf	52,w,b	;volatile
 52705  00D976  0B0F               	andlw	15
 52706  00D978  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52707  00D97A  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52708  00D97C  0D01               	mullw	1
 52709  00D97E  0E34               	movlw	low _ep_data_in
 52710  00D980  24F3               	addwf	prodl,w,c
 52711  00D982  6ED9               	movwf	fsr2l,c
 52712  00D984  0E01               	movlw	high _ep_data_in
 52713  00D986                     L75:
 52714  00D986  20F4               	addwfc	prodh,w,c
 52715  00D988  6EDA               	movwf	fsr2h,c
 52716  00D98A  50DF               	movf	indf2,w,c
 52717  00D98C  6E1B               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 52718                           
 52719                           ; BSR set to: 13
 52720                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 52721                           
 52722                           ; BSR set to: 13
 52723  00D98E  B01B               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 52724  00D990  D006               	goto	i2l377
 52725                           
 52726                           ; BSR set to: 13
 52727                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 52728  00D992  0EFB               	movlw	251
 52729  00D994  141C               	andwf	USBStdFeatureReqHandler@p,w,c
 52730  00D996  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 52731  00D998  0EFF               	movlw	255
 52732  00D99A  141D               	andwf	USBStdFeatureReqHandler@p+1,w,c
 52733  00D99C  D004               	goto	L76
 52734  00D99E                     i2l377:
 52735                           
 52736                           ; BSR set to: 13
 52737                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 52738                           
 52739                           ; BSR set to: 13
 52740  00D99E  0E04               	movlw	4
 52741  00D9A0  101C               	iorwf	USBStdFeatureReqHandler@p,w,c
 52742  00D9A2  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 52743  00D9A4  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 52744  00D9A6                     L76:
 52745  00D9A6  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 52746                           
 52747                           ; BSR set to: 13
 52748                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 52749                           
 52750                           ; BSR set to: 13
 52751  00D9A8  BF34               	btfsc	52,7,b	;volatile
 52752  00D9AA  D00A               	goto	i2l379
 52753                           
 52754                           ; BSR set to: 13
 52755                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 52756  00D9AC  5134               	movf	52,w,b	;volatile
 52757  00D9AE  0B0F               	andlw	15
 52758  00D9B0  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52759  00D9B2  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52760  00D9B4  0D02               	mullw	2
 52761  00D9B6  0E15               	movlw	low _pBDTEntryOut
 52762  00D9B8  24F3               	addwf	prodl,w,c
 52763  00D9BA  6ED9               	movwf	fsr2l,c
 52764  00D9BC  0E01               	movlw	high _pBDTEntryOut
 52765  00D9BE  D009               	goto	L77
 52766  00D9C0                     i2l379:
 52767                           
 52768                           ; BSR set to: 13
 52769                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 52770                           
 52771                           ; BSR set to: 13
 52772  00D9C0  5134               	movf	52,w,b	;volatile
 52773  00D9C2  0B0F               	andlw	15
 52774  00D9C4  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52775  00D9C6  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52776  00D9C8  0D02               	mullw	2
 52777  00D9CA  0E0F               	movlw	low _pBDTEntryIn
 52778  00D9CC  24F3               	addwf	prodl,w,c
 52779  00D9CE  6ED9               	movwf	fsr2l,c
 52780  00D9D0  0E01               	movlw	high _pBDTEntryIn
 52781  00D9D2                     L77:
 52782  00D9D2  20F4               	addwfc	prodh,w,c
 52783  00D9D4  6EDA               	movwf	fsr2h,c
 52784  00D9D6  C01C  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 52785  00D9DA  C01D  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 52786                           
 52787                           ; BSR set to: 13
 52788                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 52789                           
 52790                           ; BSR set to: 13
 52791  00D9DE  0E03               	movlw	3
 52792  00D9E0  1931               	xorwf	49,w,b	;volatile
 52793  00D9E2  A4D8               	btfss	status,2,c
 52794  00D9E4  D02D               	goto	i2l381
 52795                           
 52796                           ; BSR set to: 13
 52797                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 52798  00D9E6  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52799  00D9EA  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52800  00D9EE  AEDF               	btfss	indf2,7,c
 52801  00D9F0  D01A               	goto	i2l384
 52802                           
 52803                           ; BSR set to: 13
 52804                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 52805  00D9F2  BF34               	btfsc	52,7,b	;volatile
 52806  00D9F4  D00A               	goto	i2l383
 52807                           
 52808                           ; BSR set to: 13
 52809                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 52810  00D9F6  5134               	movf	52,w,b	;volatile
 52811  00D9F8  0B0F               	andlw	15
 52812  00D9FA  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52813  00D9FC  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52814  00D9FE  0D01               	mullw	1
 52815  00DA00  0E31               	movlw	low _ep_data_out
 52816  00DA02  24F3               	addwf	prodl,w,c
 52817  00DA04  6ED9               	movwf	fsr2l,c
 52818  00DA06  0E01               	movlw	high _ep_data_out
 52819  00DA08  D00A               	goto	L78
 52820  00DA0A                     i2l383:
 52821                           
 52822                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 52823                           
 52824                           ; BSR set to: 1
 52825  00DA0A  010D               	movlb	13	; () banked
 52826  00DA0C  5134               	movf	52,w,b	;volatile
 52827  00DA0E  0B0F               	andlw	15
 52828  00DA10  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52829  00DA12  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52830  00DA14  0D01               	mullw	1
 52831  00DA16  0E34               	movlw	low _ep_data_in
 52832  00DA18  24F3               	addwf	prodl,w,c
 52833  00DA1A  6ED9               	movwf	fsr2l,c
 52834  00DA1C  0E01               	movlw	high _ep_data_in
 52835  00DA1E                     L78:
 52836  00DA1E  20F4               	addwfc	prodh,w,c
 52837  00DA20  6EDA               	movwf	fsr2h,c
 52838  00DA22  0101               	movlb	1	; () banked
 52839  00DA24  82DF               	bsf	indf2,1,c
 52840  00DA26                     i2l384:
 52841                           
 52842                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 52843                           
 52844                           ; BSR set to: 1
 52845                           
 52846                           ; BSR set to: 1
 52847  00DA26  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52848  00DA2A  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52849  00DA2E  0E00               	movlw	0
 52850  00DA30  84DB               	bsf	plusw2,2,c
 52851                           
 52852                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 52853  00DA32  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52854  00DA36  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52855  00DA3A  0E00               	movlw	0
 52856  00DA3C  8EDB               	bsf	plusw2,7,c
 52857                           
 52858                           ;usb_device.c: 2878: }
 52859  00DA3E  0012               	return	
 52860  00DA40                     i2l381:
 52861                           
 52862                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 52863  00DA40  0E04               	movlw	4
 52864  00DA42  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 52865  00DA44  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 52866  00DA46  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 52867  00DA48  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 52868                           
 52869                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 52870  00DA4A  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52871  00DA4E  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52872  00DA52  AEDF               	btfss	indf2,7,c
 52873  00DA54  D01B               	goto	i2l386
 52874                           
 52875                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 52876  00DA56  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52877  00DA5A  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52878  00DA5E  0E7F               	movlw	127
 52879  00DA60  16DF               	andwf	indf2,f,c
 52880                           
 52881                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 52882  00DA62  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52883  00DA66  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52884  00DA6A  0E00               	movlw	0
 52885  00DA6C  8CDB               	bsf	plusw2,6,c
 52886                           
 52887                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 52888  00DA6E  0E00               	movlw	0
 52889  00DA70  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 52890  00DA72  0E05               	movlw	5
 52891  00DA74  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 52892  00DA76  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 52893  00DA7A  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 52894  00DA7E  0E00               	movlw	0
 52895  00DA80  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 52896  00DA82  0E02               	movlw	2
 52897  00DA84  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 52898  00DA86  EC10  F0A0         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 52899                           
 52900                           ;usb_device.c: 2893: }
 52901  00DA8A  D006               	goto	i2l387
 52902  00DA8C                     i2l386:
 52903                           
 52904                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 52905  00DA8C  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52906  00DA90  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52907  00DA94  0E00               	movlw	0
 52908  00DA96  8CDB               	bsf	plusw2,6,c
 52909  00DA98                     i2l387:
 52910                           
 52911                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 52912  00DA98  0E04               	movlw	4
 52913  00DA9A  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 52914  00DA9C  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 52915  00DA9E  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 52916  00DAA0  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 52917                           
 52918                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 52919  00DAA2  B21B               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 52920  00DAA4  D006               	goto	i2u1233_40
 52921  00DAA6  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52922  00DAAA  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52923  00DAAE  AEDF               	btfss	indf2,7,c
 52924  00DAB0  D030               	goto	i2l388
 52925  00DAB2                     i2u1233_40:
 52926                           
 52927                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 52928  00DAB2  010D               	movlb	13	; () banked
 52929  00DAB4  BF34               	btfsc	52,7,b	;volatile
 52930  00DAB6  D00A               	goto	i2l391
 52931                           
 52932                           ; BSR set to: 13
 52933                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 52934  00DAB8  5134               	movf	52,w,b	;volatile
 52935  00DABA  0B0F               	andlw	15
 52936  00DABC  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52937  00DABE  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52938  00DAC0  0D01               	mullw	1
 52939  00DAC2  0E31               	movlw	low _ep_data_out
 52940  00DAC4  24F3               	addwf	prodl,w,c
 52941  00DAC6  6ED9               	movwf	fsr2l,c
 52942  00DAC8  0E01               	movlw	high _ep_data_out
 52943  00DACA  D00A               	goto	L79
 52944  00DACC                     i2l391:
 52945                           
 52946                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 52947                           
 52948                           ; BSR set to: 1
 52949  00DACC  010D               	movlb	13	; () banked
 52950  00DACE  5134               	movf	52,w,b	;volatile
 52951  00DAD0  0B0F               	andlw	15
 52952  00DAD2  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52953  00DAD4  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52954  00DAD6  0D01               	mullw	1
 52955  00DAD8  0E34               	movlw	low _ep_data_in
 52956  00DADA  24F3               	addwf	prodl,w,c
 52957  00DADC  6ED9               	movwf	fsr2l,c
 52958  00DADE  0E01               	movlw	high _ep_data_in
 52959  00DAE0                     L79:
 52960  00DAE0  20F4               	addwfc	prodh,w,c
 52961  00DAE2  6EDA               	movwf	fsr2h,c
 52962  00DAE4  0101               	movlb	1	; () banked
 52963  00DAE6  92DF               	bcf	indf2,1,c
 52964                           
 52965                           ; BSR set to: 1
 52966                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 52967                           
 52968                           ; BSR set to: 1
 52969  00DAE8  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52970  00DAEC  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52971  00DAF0  0E3B               	movlw	59
 52972  00DAF2  16DF               	andwf	indf2,f,c
 52973                           
 52974                           ; BSR set to: 1
 52975                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 52976  00DAF4  0E00               	movlw	0
 52977  00DAF6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 52978  00DAF8  0E05               	movlw	5
 52979  00DAFA  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 52980  00DAFC  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 52981  00DB00  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 52982  00DB04  0E00               	movlw	0
 52983  00DB06  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 52984  00DB08  0E02               	movlw	2
 52985  00DB0A  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 52986  00DB0C  EC10  F0A0         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 52987                           
 52988                           ;usb_device.c: 2923: }
 52989  00DB10  D006               	goto	i2l393
 52990  00DB12                     i2l388:
 52991                           
 52992                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 52993  00DB12  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52994  00DB16  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52995  00DB1A  0E3B               	movlw	59
 52996  00DB1C  16DF               	andwf	indf2,f,c
 52997  00DB1E                     i2l393:
 52998                           
 52999                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 53000  00DB1E  010D               	movlb	13	; () banked
 53001  00DB20  5134               	movf	52,w,b	;volatile
 53002  00DB22  0B0F               	andlw	15
 53003  00DB24  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 53004  00DB26  5018               	movf	??_USBStdFeatureReqHandler,w,c
 53005  00DB28  0D01               	mullw	1
 53006  00DB2A  0E26               	movlw	38
 53007  00DB2C  24F3               	addwf	prodl,w,c
 53008  00DB2E  6E19               	movwf	USBStdFeatureReqHandler@pUEP,c
 53009  00DB30  0E0F               	movlw	15
 53010  00DB32  20F4               	addwfc	prodh,w,c
 53011  00DB34  6E1A               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 53012                           
 53013                           ; BSR set to: 13
 53014                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 53015  00DB36  C019  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 53016  00DB3A  C01A  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 53017  00DB3E  0EFE               	movlw	254
 53018  00DB40  16DF               	andwf	indf2,f,c
 53019                           
 53020                           ; BSR set to: 13
 53021  00DB42  0012               	return	
 53022  00DB44                     __end_of_USBStdFeatureReqHandler:
 53023                           	opt stack 0
 53024                           tosu	equ	0xFFF
 53025                           tosh	equ	0xFFE
 53026                           tosl	equ	0xFFD
 53027                           pclatu	equ	0xFFB
 53028                           pclath	equ	0xFFA
 53029                           tblptru	equ	0xFF8
 53030                           tblptrh	equ	0xFF7
 53031                           tblptrl	equ	0xFF6
 53032                           tablat	equ	0xFF5
 53033                           prodh	equ	0xFF4
 53034                           prodl	equ	0xFF3
 53035                           intcon	equ	0xFF2
 53036                           indf0	equ	0xFEF
 53037                           postinc0	equ	0xFEE
 53038                           fsr0h	equ	0xFEA
 53039                           fsr0l	equ	0xFE9
 53040                           wreg	equ	0xFE8
 53041                           indf1	equ	0xFE7
 53042                           postinc1	equ	0xFE6
 53043                           postdec1	equ	0xFE5
 53044                           plusw1	equ	0xFE3
 53045                           fsr1h	equ	0xFE2
 53046                           fsr1l	equ	0xFE1
 53047                           indf2	equ	0xFDF
 53048                           postinc2	equ	0xFDE
 53049                           postdec2	equ	0xFDD
 53050                           plusw2	equ	0xFDB
 53051                           fsr2h	equ	0xFDA
 53052                           fsr2l	equ	0xFD9
 53053                           status	equ	0xFD8
 53054                           
 53055 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 53056 ;; Defined at:
 53057 ;;		line 54 in file "usb_events.c"
 53058 ;; Parameters:    Size  Location     Type
 53059 ;;  event           2   15[COMRAM] enum E6832
 53060 ;;  pdata           2   17[COMRAM] PTR void 
 53061 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 53062 ;;		 -> BDT(48), 
 53063 ;;  size            2   19[COMRAM] unsigned int 
 53064 ;; Auto vars:     Size  Location     Type
 53065 ;;		None
 53066 ;; Return value:  Size  Location     Type
 53067 ;;                  1    wreg      unsigned char 
 53068 ;; Registers used:
 53069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 53070 ;; Tracked objects:
 53071 ;;		On entry : 0/0
 53072 ;;		On exit  : 0/0
 53073 ;;		Unchanged: 0/0
 53074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53075 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53077 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53078 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53079 ;;Total ram usage:        8 bytes
 53080 ;; Hardware stack levels used:    1
 53081 ;; Hardware stack levels required when called:    3
 53082 ;; This function calls:
 53083 ;;		_APP_DeviceCustomHIDInitialize
 53084 ;;		_APP_DeviceMSDInitialize
 53085 ;;		_MSDTransferTerminated
 53086 ;;		_USBCheckHIDRequest
 53087 ;;		_USBCheckMSDRequest
 53088 ;;		i2_SYSTEM_Initialize
 53089 ;; This function is called by:
 53090 ;;		_USBDeviceTasks
 53091 ;;		_USBStdSetCfgHandler
 53092 ;;		_USBSuspend
 53093 ;;		_USBWakeFromSuspend
 53094 ;;		_USBCtrlTrfSetupHandler
 53095 ;;		_USBCheckStdRequest
 53096 ;;		_USBStdFeatureReqHandler
 53097 ;; This function uses a non-reentrant model
 53098 ;;
 53099                           
 53100                           	psect	text222
 53101  014020                     __ptext222:
 53102                           	opt stack 0
 53103  014020                     _USER_USB_CALLBACK_EVENT_HANDLER:
 53104                           	opt stack 13
 53105                           
 53106                           ;usb_events.c: 56: switch((int)event)
 53107                           
 53108                           ;incstack = 0
 53109  014020  D019               	goto	i2l816
 53110  014022                     
 53111                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 53112  014022  0E01               	movlw	1
 53113  014024  ECCA  F0A8         	call	i2_SYSTEM_Initialize
 53114                           
 53115                           ;usb_events.c: 79: break;
 53116  014028  0012               	return	
 53117  01402A                     
 53118                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 53119  01402A  0E02               	movlw	2
 53120  01402C  ECCA  F0A8         	call	i2_SYSTEM_Initialize
 53121                           
 53122                           ;usb_events.c: 90: break;
 53123  014030  0012               	return	
 53124  014032                     
 53125                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 53126  014032  EC06  F0AD         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 53127                           
 53128                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 53129  014036  ECEB  F0AF         	call	_APP_DeviceMSDInitialize	;wreg free
 53130                           
 53131                           ;usb_events.c: 100: break;
 53132                           
 53133                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 53134                           
 53135                           ;usb_events.c: 97: break;
 53136  01403A  0012               	return	
 53137  01403C                     
 53138                           ;usb_events.c: 105: USBCheckHIDRequest();
 53139  01403C  ECC1  F091         	call	_USBCheckHIDRequest	;wreg free
 53140                           
 53141                           ;usb_events.c: 108: USBCheckMSDRequest();
 53142  014040  EC34  F097         	call	_USBCheckMSDRequest	;wreg free
 53143                           
 53144                           ;usb_events.c: 112: break;
 53145                           
 53146                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 53147                           
 53148                           ;usb_events.c: 109: break;
 53149  014044  0012               	return	
 53150  014046                     
 53151                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 53152  014046  C012  F00C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 53153  01404A  C013  F00D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 53154  01404E  EC21  F0A8         	call	_MSDTransferTerminated	;wreg free
 53155                           
 53156                           ;usb_events.c: 129: }
 53157                           
 53158                           ;usb_events.c: 128: break;
 53159                           
 53160                           ;usb_events.c: 127: default:
 53161                           
 53162                           ;usb_events.c: 125: break;
 53163  014052  0012               	return	
 53164  014054                     i2l816:
 53165  014054  C010  F016         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 53166  014058  C011  F017         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 53167                           
 53168                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 53169                           ; Switch size 1, requested type "space"
 53170                           ; Number of cases is 2, Range of values is 0 to 127
 53171                           ; switch strategies available:
 53172                           ; Name         Instructions Cycles
 53173                           ; simple_byte            7     4 (average)
 53174                           ;	Chosen strategy is simple_byte
 53175  01405C  5017               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 53176  01405E  0A00               	xorlw	0	; case 0
 53177  014060  B4D8               	btfsc	status,2,c
 53178  014062  D004               	goto	i2l20136
 53179  014064  0A7F               	xorlw	127	; case 127
 53180  014066  A4D8               	btfss	status,2,c
 53181  014068  0012               	return	
 53182  01406A  D01A               	goto	i2l20138
 53183  01406C                     i2l20136:
 53184                           
 53185                           ; Switch size 1, requested type "space"
 53186                           ; Number of cases is 8, Range of values is 1 to 117
 53187                           ; switch strategies available:
 53188                           ; Name         Instructions Cycles
 53189                           ; simple_byte           25    13 (average)
 53190                           ;	Chosen strategy is simple_byte
 53191  01406C  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 53192  01406E  0A01               	xorlw	1	; case 1
 53193  014070  B4D8               	btfsc	status,2,c
 53194  014072  D7DF               	goto	i2l822
 53195  014074  0A03               	xorlw	3	; case 2
 53196  014076  B4D8               	btfsc	status,2,c
 53197  014078  0012               	return	
 53198  01407A  0A01               	xorlw	1	; case 3
 53199  01407C  B4D8               	btfsc	status,2,c
 53200  01407E  D7DE               	goto	i2l824
 53201  014080  0A06               	xorlw	6	; case 5
 53202  014082  B4D8               	btfsc	status,2,c
 53203  014084  D7E0               	goto	i2l826
 53204  014086  0A77               	xorlw	119	; case 114
 53205  014088  B4D8               	btfsc	status,2,c
 53206  01408A  0012               	return	
 53207  01408C  0A01               	xorlw	1	; case 115
 53208  01408E  B4D8               	btfsc	status,2,c
 53209  014090  0012               	return	
 53210  014092  0A07               	xorlw	7	; case 116
 53211  014094  B4D8               	btfsc	status,2,c
 53212  014096  D7C9               	goto	i2l821
 53213  014098  0A01               	xorlw	1	; case 117
 53214  01409A  A4D8               	btfss	status,2,c
 53215  01409C  0012               	return	
 53216  01409E  D7C1               	goto	i2l820
 53217  0140A0                     i2l20138:
 53218                           
 53219                           ; Switch size 1, requested type "space"
 53220                           ; Number of cases is 1, Range of values is 255 to 255
 53221                           ; switch strategies available:
 53222                           ; Name         Instructions Cycles
 53223                           ; simple_byte            4     3 (average)
 53224                           ;	Chosen strategy is simple_byte
 53225  0140A0  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 53226  0140A2  0AFF               	xorlw	255	; case 255
 53227  0140A4  0012               	return	
 53228  0140A6                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 53229                           	opt stack 0
 53230                           tosu	equ	0xFFF
 53231                           tosh	equ	0xFFE
 53232                           tosl	equ	0xFFD
 53233                           pclatu	equ	0xFFB
 53234                           pclath	equ	0xFFA
 53235                           tblptru	equ	0xFF8
 53236                           tblptrh	equ	0xFF7
 53237                           tblptrl	equ	0xFF6
 53238                           tablat	equ	0xFF5
 53239                           prodh	equ	0xFF4
 53240                           prodl	equ	0xFF3
 53241                           intcon	equ	0xFF2
 53242                           indf0	equ	0xFEF
 53243                           postinc0	equ	0xFEE
 53244                           fsr0h	equ	0xFEA
 53245                           fsr0l	equ	0xFE9
 53246                           wreg	equ	0xFE8
 53247                           indf1	equ	0xFE7
 53248                           postinc1	equ	0xFE6
 53249                           postdec1	equ	0xFE5
 53250                           plusw1	equ	0xFE3
 53251                           fsr1h	equ	0xFE2
 53252                           fsr1l	equ	0xFE1
 53253                           indf2	equ	0xFDF
 53254                           postinc2	equ	0xFDE
 53255                           postdec2	equ	0xFDD
 53256                           plusw2	equ	0xFDB
 53257                           fsr2h	equ	0xFDA
 53258                           fsr2l	equ	0xFD9
 53259                           status	equ	0xFD8
 53260                           
 53261 ;; *************** function i2_SYSTEM_Initialize *****************
 53262 ;; Defined at:
 53263 ;;		line 39 in file "system.c"
 53264 ;; Parameters:    Size  Location     Type
 53265 ;;  state           1    wreg     enum E6623
 53266 ;; Auto vars:     Size  Location     Type
 53267 ;;  state           1    4[COMRAM] enum E6623
 53268 ;;  SYSTEM_Initi    2    2[COMRAM] unsigned int 
 53269 ;;  SYSTEM_Initi    2    0[COMRAM] unsigned int 
 53270 ;; Return value:  Size  Location     Type
 53271 ;;                  1    wreg      void 
 53272 ;; Registers used:
 53273 ;;		wreg, status,2, status,0
 53274 ;; Tracked objects:
 53275 ;;		On entry : 0/0
 53276 ;;		On exit  : 0/0
 53277 ;;		Unchanged: 0/0
 53278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53280 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53282 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53283 ;;Total ram usage:        5 bytes
 53284 ;; Hardware stack levels used:    1
 53285 ;; This function calls:
 53286 ;;		Nothing
 53287 ;; This function is called by:
 53288 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 53289 ;; This function uses a non-reentrant model
 53290 ;;
 53291                           
 53292                           	psect	text223
 53293  015194                     __ptext223:
 53294                           	opt stack 0
 53295  015194                     i2_SYSTEM_Initialize:
 53296                           	opt stack 15
 53297                           
 53298                           ;incstack = 0
 53299                           ;i2SYSTEM_Initialize@state stored from wreg
 53300  015194  6E05               	movwf	i2SYSTEM_Initialize@state,c
 53301                           
 53302                           ;system.c: 41: switch(state)
 53303  015196  D01D               	goto	i2l897
 53304  015198                     
 53305                           ;system.c: 50: {;system.c: 51: unsigned int pll_startup_counter = 600;
 53306  015198  0E02               	movlw	2
 53307  01519A  6E02               	movwf	i2SYSTEM_Initialize@pll_startup_counter+1,c
 53308  01519C  0E58               	movlw	88
 53309  01519E  6E01               	movwf	i2SYSTEM_Initialize@pll_startup_counter,c
 53310                           
 53311                           ;system.c: 52: OSCTUNEbits.PLLEN = 1;
 53312  0151A0  8C9B               	bsf	3995,6,c	;volatile
 53313  0151A2                     i2l12986:
 53314  0151A2  0601               	decf	i2SYSTEM_Initialize@pll_startup_counter,f,c
 53315  0151A4  A0D8               	btfss	status,0,c
 53316  0151A6  0602               	decf	i2SYSTEM_Initialize@pll_startup_counter+1,f,c
 53317  0151A8  2801               	incf	i2SYSTEM_Initialize@pll_startup_counter,w,c
 53318  0151AA  E1FB               	bnz	i2l12986
 53319  0151AC  2802               	incf	i2SYSTEM_Initialize@pll_startup_counter+1,w,c
 53320  0151AE  B4D8               	btfsc	status,2,c
 53321  0151B0  0012               	return	
 53322  0151B2  D7F7               	goto	i2l900
 53323  0151B4                     
 53324                           ;system.c: 78: OSCCON = 0x70;
 53325  0151B4  0E70               	movlw	112
 53326  0151B6  6ED3               	movwf	4051,c	;volatile
 53327                           
 53328                           ;system.c: 84: {;system.c: 85: unsigned int pll_startup_counter = 800;
 53329  0151B8  0E03               	movlw	3
 53330  0151BA  6E04               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3143+1,c
 53331  0151BC  0E20               	movlw	32
 53332  0151BE  6E03               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3143,c
 53333  0151C0                     i2l12990:
 53334  0151C0  0603               	decf	i2SYSTEM_Initialize@pll_startup_counter_3143,f,c
 53335  0151C2  A0D8               	btfss	status,0,c
 53336  0151C4  0604               	decf	i2SYSTEM_Initialize@pll_startup_counter_3143+1,f,c
 53337  0151C6  2803               	incf	i2SYSTEM_Initialize@pll_startup_counter_3143,w,c
 53338  0151C8  E1FB               	bnz	i2l12990
 53339  0151CA  2804               	incf	i2SYSTEM_Initialize@pll_startup_counter_3143+1,w,c
 53340  0151CC  B4D8               	btfsc	status,2,c
 53341  0151CE  0012               	return	
 53342  0151D0  D7F7               	goto	i2l906
 53343  0151D2                     i2l897:
 53344  0151D2  5005               	movf	i2SYSTEM_Initialize@state,w,c
 53345                           
 53346                           ; Switch size 1, requested type "space"
 53347                           ; Number of cases is 3, Range of values is 0 to 2
 53348                           ; switch strategies available:
 53349                           ; Name         Instructions Cycles
 53350                           ; simple_byte           10     6 (average)
 53351                           ;	Chosen strategy is simple_byte
 53352  0151D4  0A00               	xorlw	0	; case 0
 53353  0151D6  B4D8               	btfsc	status,2,c
 53354  0151D8  D7DF               	goto	i2l898
 53355  0151DA  0A01               	xorlw	1	; case 1
 53356  0151DC  B4D8               	btfsc	status,2,c
 53357  0151DE  0012               	return	
 53358  0151E0  0A03               	xorlw	3	; case 2
 53359  0151E2  A4D8               	btfss	status,2,c
 53360  0151E4  0012               	return	
 53361  0151E6  D7E6               	goto	i2l904
 53362  0151E8                     __end_ofi2_SYSTEM_Initialize:
 53363                           	opt stack 0
 53364                           tosu	equ	0xFFF
 53365                           tosh	equ	0xFFE
 53366                           tosl	equ	0xFFD
 53367                           pclatu	equ	0xFFB
 53368                           pclath	equ	0xFFA
 53369                           tblptru	equ	0xFF8
 53370                           tblptrh	equ	0xFF7
 53371                           tblptrl	equ	0xFF6
 53372                           tablat	equ	0xFF5
 53373                           prodh	equ	0xFF4
 53374                           prodl	equ	0xFF3
 53375                           intcon	equ	0xFF2
 53376                           indf0	equ	0xFEF
 53377                           postinc0	equ	0xFEE
 53378                           fsr0h	equ	0xFEA
 53379                           fsr0l	equ	0xFE9
 53380                           wreg	equ	0xFE8
 53381                           indf1	equ	0xFE7
 53382                           postinc1	equ	0xFE6
 53383                           postdec1	equ	0xFE5
 53384                           plusw1	equ	0xFE3
 53385                           fsr1h	equ	0xFE2
 53386                           fsr1l	equ	0xFE1
 53387                           indf2	equ	0xFDF
 53388                           postinc2	equ	0xFDE
 53389                           postdec2	equ	0xFDD
 53390                           plusw2	equ	0xFDB
 53391                           fsr2h	equ	0xFDA
 53392                           fsr2l	equ	0xFD9
 53393                           status	equ	0xFD8
 53394                           
 53395 ;; *************** function _USBCheckMSDRequest *****************
 53396 ;; Defined at:
 53397 ;;		line 218 in file "usb_device_msd.c"
 53398 ;; Parameters:    Size  Location     Type
 53399 ;;		None
 53400 ;; Auto vars:     Size  Location     Type
 53401 ;;		None
 53402 ;; Return value:  Size  Location     Type
 53403 ;;                  1    wreg      void 
 53404 ;; Registers used:
 53405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 53406 ;; Tracked objects:
 53407 ;;		On entry : 0/0
 53408 ;;		On exit  : 0/0
 53409 ;;		Unchanged: 0/0
 53410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53412 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53414 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53415 ;;Total ram usage:        4 bytes
 53416 ;; Hardware stack levels used:    1
 53417 ;; Hardware stack levels required when called:    1
 53418 ;; This function calls:
 53419 ;;		i2_USBTransferOnePacket
 53420 ;; This function is called by:
 53421 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 53422 ;; This function uses a non-reentrant model
 53423 ;;
 53424                           
 53425                           	psect	text224
 53426  012E68                     __ptext224:
 53427                           	opt stack 0
 53428  012E68                     _USBCheckMSDRequest:
 53429                           	opt stack 14
 53430                           
 53431                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 53432                           
 53433                           ;incstack = 0
 53434  012E68  010D               	movlb	13	; () banked
 53435  012E6A  5130               	movf	48,w,b	;volatile
 53436  012E6C  0B1F               	andlw	31
 53437  012E6E  06E8               	decf	wreg,f,c
 53438  012E70  A4D8               	btfss	status,2,c
 53439  012E72  0012               	return	
 53440                           
 53441                           ; BSR set to: 13
 53442                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 53443                           
 53444                           ; BSR set to: 13
 53445                           
 53446                           ; BSR set to: 13
 53447                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 53448  012E74  5134               	movf	52,w,b	;volatile
 53449  012E76  A4D8               	btfss	status,2,c
 53450  012E78  0012               	return	
 53451  012E7A  D04E               	goto	i2l545
 53452  012E7C                     
 53453                           ; BSR set to: 13
 53454                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 53455                           
 53456                           ; BSR set to: 13
 53457  012E7C  5132               	movf	50,w,b	;volatile
 53458  012E7E  1133               	iorwf	51,w,b	;volatile
 53459  012E80  A4D8               	btfss	status,2,c
 53460  012E82  0012               	return	
 53461                           
 53462                           ; BSR set to: 13
 53463  012E84  5136               	movf	54,w,b	;volatile
 53464  012E86  1137               	iorwf	55,w,b	;volatile
 53465  012E88  A4D8               	btfss	status,2,c
 53466  012E8A  0012               	return	
 53467                           
 53468                           ; BSR set to: 13
 53469                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 53470                           
 53471                           ; BSR set to: 13
 53472                           
 53473                           ; BSR set to: 13
 53474                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 53475  012E8C  0E00               	movlw	0
 53476  012E8E  0101               	movlb	1	; () banked
 53477  012E90  6F58               	movwf	_MSD_State& (0+255),b
 53478                           
 53479                           ; BSR set to: 1
 53480                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 53481  012E92  6957               	setf	_MSDCommandState& (0+255),b
 53482                           
 53483                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 53484  012E94  0E00               	movlw	0
 53485  012E96  6F56               	movwf	_MSDReadState& (0+255),b
 53486                           
 53487                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 53488  012E98  0E00               	movlw	0
 53489  012E9A  6F55               	movwf	_MSDWriteState& (0+255),b
 53490                           
 53491                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 53492  012E9C  0E01               	movlw	1
 53493  012E9E  6F50               	movwf	_MSDCBWValid& (0+255),b
 53494                           
 53495                           ; BSR set to: 1
 53496                           
 53497                           ; BSR set to: 1
 53498                           
 53499                           ; BSR set to: 1
 53500                           
 53501                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 53502  012EA0  C119  F00C         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2534
 53503  012EA4  C11A  F00D         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2534+1
 53504                           
 53505                           ; BSR set to: 1
 53506  012EA8  500C               	movf	_USBCheckMSDRequest$2534,w,c
 53507  012EAA  100D               	iorwf	_USBCheckMSDRequest$2534+1,w,c
 53508  012EAC  B4D8               	btfsc	status,2,c
 53509  012EAE  D00A               	goto	i2u1062_40
 53510                           
 53511                           ; BSR set to: 1
 53512                           
 53513                           ; BSR set to: 1
 53514                           
 53515                           ; BSR set to: 1
 53516                           
 53517                           ; BSR set to: 1
 53518  012EB0  C119  F00E         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2535
 53519  012EB4  C11A  F00F         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2535+1
 53520                           
 53521                           ; BSR set to: 1
 53522                           
 53523                           ; BSR set to: 1
 53524  012EB8  C00E  FFD9         	movff	_USBCheckMSDRequest$2535,fsr2l
 53525  012EBC  C00F  FFDA         	movff	_USBCheckMSDRequest$2535+1,fsr2h
 53526  012EC0  BEDF               	btfsc	indf2,7,c
 53527  012EC2  D00F               	goto	i2l550
 53528  012EC4                     i2u1062_40:
 53529                           
 53530                           ; BSR set to: 1
 53531                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 53532                           
 53533                           ; BSR set to: 1
 53534  012EC4  0E00               	movlw	0
 53535  012EC6  6E01               	movwf	i2USBTransferOnePacket@dir,c
 53536  012EC8  0E40               	movlw	64
 53537  012ECA  6E02               	movwf	i2USBTransferOnePacket@data,c
 53538  012ECC  0E0D               	movlw	13
 53539  012ECE  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 53540  012ED0  0E40               	movlw	64
 53541  012ED2  6E04               	movwf	i2USBTransferOnePacket@len,c
 53542  012ED4  0E02               	movlw	2
 53543  012ED6  ECA6  F08B         	call	i2_USBTransferOnePacket
 53544  012EDA  C001  F141         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 53545  012EDE  C002  F142         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 53546  012EE2                     i2l550:
 53547                           
 53548                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 53549  012EE2  0E80               	movlw	128
 53550  012EE4  0101               	movlb	1	; () banked
 53551  012EE6  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 53552                           
 53553                           ;usb_device_msd.c: 263: break;
 53554  012EE8  0012               	return	
 53555  012EEA                     
 53556                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 53557                           
 53558                           ; BSR set to: 1
 53559  012EEA  010D               	movlb	13	; () banked
 53560  012EEC  5132               	movf	50,w,b	;volatile
 53561  012EEE  1133               	iorwf	51,w,b	;volatile
 53562  012EF0  A4D8               	btfss	status,2,c
 53563  012EF2  0012               	return	
 53564                           
 53565                           ; BSR set to: 13
 53566  012EF4  0536               	decf	54,w,b	;volatile
 53567  012EF6  1137               	iorwf	55,w,b	;volatile
 53568  012EF8  A4D8               	btfss	status,2,c
 53569  012EFA  0012               	return	
 53570                           
 53571                           ; BSR set to: 13
 53572                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 53573                           
 53574                           ; BSR set to: 13
 53575                           
 53576                           ; BSR set to: 13
 53577                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 53578  012EFC  0E00               	movlw	0
 53579  012EFE  6F38               	movwf	56,b	;volatile
 53580                           
 53581                           ; BSR set to: 13
 53582                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 53583  012F00  0E38               	movlw	56
 53584  012F02  0101               	movlb	1	; () banked
 53585  012F04  6F09               	movwf	_inPipes& (0+255),b	;volatile
 53586  012F06  0E0D               	movlw	13
 53587  012F08  6F0A               	movwf	(_inPipes+1)& (0+255),b	;volatile
 53588                           
 53589                           ; BSR set to: 1
 53590  012F0A  0E00               	movlw	0
 53591  012F0C  6F0E               	movwf	(_inPipes+5)& (0+255),b	;volatile
 53592  012F0E  0E01               	movlw	1
 53593  012F10  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 53594                           
 53595                           ; BSR set to: 1
 53596  012F12  0EC1               	movlw	193
 53597  012F14  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 53598                           
 53599                           ; BSR set to: 1
 53600                           ;usb_device_msd.c: 278: }
 53601                           
 53602                           ;usb_device_msd.c: 277: break;
 53603  012F16  0012               	return	
 53604  012F18                     i2l545:
 53605                           
 53606                           ; BSR set to: 1
 53607  012F18  010D               	movlb	13	; () banked
 53608  012F1A  5131               	movf	49,w,b	;volatile
 53609                           
 53610                           ; Switch size 1, requested type "space"
 53611                           ; Number of cases is 2, Range of values is 254 to 255
 53612                           ; switch strategies available:
 53613                           ; Name         Instructions Cycles
 53614                           ; simple_byte            7     4 (average)
 53615                           ;	Chosen strategy is simple_byte
 53616  012F1C  0AFE               	xorlw	254	; case 254
 53617  012F1E  B4D8               	btfsc	status,2,c
 53618  012F20  D7E4               	goto	i2l562
 53619  012F22  0A01               	xorlw	1	; case 255
 53620  012F24  A4D8               	btfss	status,2,c
 53621  012F26  0012               	return	
 53622  012F28  D7A9               	goto	i2l546
 53623  012F2A                     __end_of_USBCheckMSDRequest:
 53624                           	opt stack 0
 53625                           tosu	equ	0xFFF
 53626                           tosh	equ	0xFFE
 53627                           tosl	equ	0xFFD
 53628                           pclatu	equ	0xFFB
 53629                           pclath	equ	0xFFA
 53630                           tblptru	equ	0xFF8
 53631                           tblptrh	equ	0xFF7
 53632                           tblptrl	equ	0xFF6
 53633                           tablat	equ	0xFF5
 53634                           prodh	equ	0xFF4
 53635                           prodl	equ	0xFF3
 53636                           intcon	equ	0xFF2
 53637                           indf0	equ	0xFEF
 53638                           postinc0	equ	0xFEE
 53639                           fsr0h	equ	0xFEA
 53640                           fsr0l	equ	0xFE9
 53641                           wreg	equ	0xFE8
 53642                           indf1	equ	0xFE7
 53643                           postinc1	equ	0xFE6
 53644                           postdec1	equ	0xFE5
 53645                           plusw1	equ	0xFE3
 53646                           fsr1h	equ	0xFE2
 53647                           fsr1l	equ	0xFE1
 53648                           indf2	equ	0xFDF
 53649                           postinc2	equ	0xFDE
 53650                           postdec2	equ	0xFDD
 53651                           plusw2	equ	0xFDB
 53652                           fsr2h	equ	0xFDA
 53653                           fsr2l	equ	0xFD9
 53654                           status	equ	0xFD8
 53655                           
 53656 ;; *************** function _USBCheckHIDRequest *****************
 53657 ;; Defined at:
 53658 ;;		line 153 in file "usb_device_hid.c"
 53659 ;; Parameters:    Size  Location     Type
 53660 ;;		None
 53661 ;; Auto vars:     Size  Location     Type
 53662 ;;		None
 53663 ;; Return value:  Size  Location     Type
 53664 ;;                  1    wreg      void 
 53665 ;; Registers used:
 53666 ;;		wreg, status,2, status,0
 53667 ;; Tracked objects:
 53668 ;;		On entry : 0/0
 53669 ;;		On exit  : 0/0
 53670 ;;		Unchanged: 0/0
 53671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53676 ;;Total ram usage:        0 bytes
 53677 ;; Hardware stack levels used:    1
 53678 ;; This function calls:
 53679 ;;		Nothing
 53680 ;; This function is called by:
 53681 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 53682 ;; This function uses a non-reentrant model
 53683 ;;
 53684                           
 53685                           	psect	text225
 53686  012382                     __ptext225:
 53687                           	opt stack 0
 53688  012382                     _USBCheckHIDRequest:
 53689                           	opt stack 15
 53690                           
 53691                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 53692                           
 53693                           ;incstack = 0
 53694  012382  010D               	movlb	13	; () banked
 53695  012384  5130               	movf	48,w,b	;volatile
 53696  012386  0B1F               	andlw	31
 53697  012388  06E8               	decf	wreg,f,c
 53698  01238A  A4D8               	btfss	status,2,c
 53699  01238C  0012               	return	
 53700                           
 53701                           ; BSR set to: 13
 53702                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 53703                           
 53704                           ; BSR set to: 13
 53705                           
 53706                           ; BSR set to: 13
 53707  01238E  5134               	movf	52,w,b	;volatile
 53708  012390  A4D8               	btfss	status,2,c
 53709  012392  0012               	return	
 53710                           
 53711                           ; BSR set to: 13
 53712                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 53713                           
 53714                           ; BSR set to: 13
 53715                           
 53716                           ; BSR set to: 13
 53717  012394  0E06               	movlw	6
 53718  012396  1931               	xorwf	49,w,b	;volatile
 53719  012398  B4D8               	btfsc	status,2,c
 53720  01239A  D01A               	goto	i2l425
 53721  01239C  D022               	goto	i2l428
 53722  01239E                     
 53723                           ; BSR set to: 13
 53724                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 53725                           
 53726                           ; BSR set to: 13
 53727  01239E  0101               	movlb	1	; () banked
 53728  0123A0  05C3               	decf	_USBActiveConfiguration& (0+255),w,b	;volatile
 53729  0123A2  A4D8               	btfss	status,2,c
 53730  0123A4  D01E               	goto	i2l428
 53731                           
 53732                           ; BSR set to: 1
 53733                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 53734  0123A6  0ED0               	movlw	low (_configDescriptor1+18)
 53735  0123A8  6F09               	movwf	_inPipes& (0+255),b	;volatile
 53736  0123AA  0EA0               	movlw	high (_configDescriptor1+18)
 53737  0123AC  6F0A               	movwf	(_inPipes+1)& (0+255),b	;volatile
 53738                           
 53739                           ; BSR set to: 1
 53740  0123AE  0E00               	movlw	0
 53741  0123B0  6F0E               	movwf	(_inPipes+5)& (0+255),b	;volatile
 53742  0123B2  0E09               	movlw	9
 53743  0123B4  D00B               	goto	L80
 53744  0123B6                     i2l12622:
 53745                           
 53746                           ; BSR set to: 1
 53747  0123B6  0EC0               	movlw	192
 53748  0123B8  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 53749                           
 53750                           ; BSR set to: 1
 53751                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 53752  0123BA  D013               	goto	i2l428
 53753  0123BC                     
 53754                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 53755                           
 53756                           ; BSR set to: 1
 53757  0123BC  0E84               	movlw	low _hid_rpt01
 53758  0123BE  0101               	movlb	1	; () banked
 53759  0123C0  6F09               	movwf	_inPipes& (0+255),b	;volatile
 53760  0123C2  0EA1               	movlw	high _hid_rpt01
 53761  0123C4  6F0A               	movwf	(_inPipes+1)& (0+255),b	;volatile
 53762                           
 53763                           ; BSR set to: 1
 53764  0123C6  0E00               	movlw	0
 53765  0123C8  6F0E               	movwf	(_inPipes+5)& (0+255),b	;volatile
 53766  0123CA  0E1D               	movlw	29
 53767  0123CC                     L80:
 53768  0123CC  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 53769  0123CE  D7F3               	goto	i2l12622
 53770  0123D0                     i2l425:
 53771                           
 53772                           ; BSR set to: 1
 53773  0123D0  010D               	movlb	13	; () banked
 53774  0123D2  5133               	movf	51,w,b	;volatile
 53775                           
 53776                           ; Switch size 1, requested type "space"
 53777                           ; Number of cases is 3, Range of values is 33 to 35
 53778                           ; switch strategies available:
 53779                           ; Name         Instructions Cycles
 53780                           ; simple_byte           10     6 (average)
 53781                           ;	Chosen strategy is simple_byte
 53782  0123D4  0A21               	xorlw	33	; case 33
 53783  0123D6  B4D8               	btfsc	status,2,c
 53784  0123D8  D7E2               	goto	i2l426
 53785  0123DA  0A03               	xorlw	3	; case 34
 53786  0123DC  B4D8               	btfsc	status,2,c
 53787  0123DE  D7EE               	goto	i2l429
 53788  0123E0  0A01               	xorlw	1	; case 35
 53789  0123E2                     i2l428:
 53790                           
 53791                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 53792                           
 53793                           ; BSR set to: 13
 53794                           
 53795                           ; BSR set to: 13
 53796  0123E2  010D               	movlb	13	; () banked
 53797  0123E4  3930               	swapf	48,w,b	;volatile
 53798  0123E6  32E8               	rrcf	wreg,f,c
 53799  0123E8  0B03               	andlw	3
 53800  0123EA  06E8               	decf	wreg,f,c
 53801  0123EC  A4D8               	btfss	status,2,c
 53802  0123EE  0012               	return	
 53803  0123F0  D024               	goto	i2l432
 53804  0123F2                     
 53805                           ; BSR set to: 13
 53806                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 53807                           
 53808                           ; BSR set to: 13
 53809  0123F2  0EC2               	movlw	low _idle_rate
 53810  0123F4  0101               	movlb	1	; () banked
 53811  0123F6  6F09               	movwf	_inPipes& (0+255),b	;volatile
 53812  0123F8  0E01               	movlw	high _idle_rate
 53813  0123FA  6F0A               	movwf	(_inPipes+1)& (0+255),b	;volatile
 53814                           
 53815                           ; BSR set to: 1
 53816  0123FC  0E00               	movlw	0
 53817  0123FE  6F0E               	movwf	(_inPipes+5)& (0+255),b	;volatile
 53818  012400  0E01               	movlw	1
 53819  012402  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 53820                           
 53821                           ; BSR set to: 1
 53822  012404  0EC1               	movlw	193
 53823  012406  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 53824                           
 53825                           ;usb_device_hid.c: 223: break;
 53826  012408  0012               	return	
 53827  01240A                     
 53828                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 53829                           
 53830                           ; BSR set to: 1
 53831  01240A  0E80               	movlw	128
 53832  01240C  0101               	movlb	1	; () banked
 53833  01240E  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 53834                           
 53835                           ; BSR set to: 1
 53836                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 53837  012410  CD33 F1C2          	movff	3379,_idle_rate	;volatile
 53838                           
 53839                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 53840  012414  0012               	return	
 53841  012416                     
 53842                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 53843                           
 53844                           ; BSR set to: 1
 53845  012416  0EC1               	movlw	low _active_protocol
 53846  012418  0101               	movlb	1	; () banked
 53847  01241A  6F09               	movwf	_inPipes& (0+255),b	;volatile
 53848  01241C  0E01               	movlw	high _active_protocol
 53849  01241E  6F0A               	movwf	(_inPipes+1)& (0+255),b	;volatile
 53850                           
 53851                           ; BSR set to: 1
 53852  012420  0E00               	movlw	0
 53853  012422  6F0E               	movwf	(_inPipes+5)& (0+255),b	;volatile
 53854  012424  0E01               	movlw	1
 53855  012426  6F0D               	movwf	(_inPipes+4)& (0+255),b	;volatile
 53856                           
 53857                           ; BSR set to: 1
 53858  012428  0E81               	movlw	129
 53859  01242A  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 53860                           
 53861                           ;usb_device_hid.c: 234: break;
 53862  01242C  0012               	return	
 53863  01242E                     
 53864                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 53865                           
 53866                           ; BSR set to: 1
 53867  01242E  0E80               	movlw	128
 53868  012430  0101               	movlb	1	; () banked
 53869  012432  6F0C               	movwf	(_inPipes+3)& (0+255),b	;volatile
 53870                           
 53871                           ; BSR set to: 1
 53872                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 53873  012434  CD32 F1C1          	movff	3378,_active_protocol	;volatile
 53874                           
 53875                           ; BSR set to: 1
 53876                           ;usb_device_hid.c: 239: }
 53877                           
 53878                           ;usb_device_hid.c: 238: break;
 53879  012438  0012               	return	
 53880  01243A                     i2l432:
 53881                           
 53882                           ; BSR set to: 1
 53883  01243A  010D               	movlb	13	; () banked
 53884  01243C  5131               	movf	49,w,b	;volatile
 53885                           
 53886                           ; Switch size 1, requested type "space"
 53887                           ; Number of cases is 6, Range of values is 1 to 11
 53888                           ; switch strategies available:
 53889                           ; Name         Instructions Cycles
 53890                           ; simple_byte           19    10 (average)
 53891                           ;	Chosen strategy is simple_byte
 53892  01243E  0A01               	xorlw	1	; case 1
 53893  012440  B4D8               	btfsc	status,2,c
 53894  012442  0012               	return	
 53895  012444  0A03               	xorlw	3	; case 2
 53896  012446  B4D8               	btfsc	status,2,c
 53897  012448  D7D4               	goto	i2l436
 53898  01244A  0A01               	xorlw	1	; case 3
 53899  01244C  B4D8               	btfsc	status,2,c
 53900  01244E  D7E3               	goto	i2l438
 53901  012450  0A0A               	xorlw	10	; case 9
 53902  012452  B4D8               	btfsc	status,2,c
 53903  012454  0012               	return	
 53904  012456  0A03               	xorlw	3	; case 10
 53905  012458  B4D8               	btfsc	status,2,c
 53906  01245A  D7D7               	goto	i2l437
 53907  01245C  0A01               	xorlw	1	; case 11
 53908  01245E  A4D8               	btfss	status,2,c
 53909  012460  0012               	return	
 53910  012462  D7E5               	goto	i2l439
 53911  012464                     __end_of_USBCheckHIDRequest:
 53912                           	opt stack 0
 53913                           tosu	equ	0xFFF
 53914                           tosh	equ	0xFFE
 53915                           tosl	equ	0xFFD
 53916                           pclatu	equ	0xFFB
 53917                           pclath	equ	0xFFA
 53918                           tblptru	equ	0xFF8
 53919                           tblptrh	equ	0xFF7
 53920                           tblptrl	equ	0xFF6
 53921                           tablat	equ	0xFF5
 53922                           prodh	equ	0xFF4
 53923                           prodl	equ	0xFF3
 53924                           intcon	equ	0xFF2
 53925                           indf0	equ	0xFEF
 53926                           postinc0	equ	0xFEE
 53927                           fsr0h	equ	0xFEA
 53928                           fsr0l	equ	0xFE9
 53929                           wreg	equ	0xFE8
 53930                           indf1	equ	0xFE7
 53931                           postinc1	equ	0xFE6
 53932                           postdec1	equ	0xFE5
 53933                           plusw1	equ	0xFE3
 53934                           fsr1h	equ	0xFE2
 53935                           fsr1l	equ	0xFE1
 53936                           indf2	equ	0xFDF
 53937                           postinc2	equ	0xFDE
 53938                           postdec2	equ	0xFDD
 53939                           plusw2	equ	0xFDB
 53940                           fsr2h	equ	0xFDA
 53941                           fsr2l	equ	0xFD9
 53942                           status	equ	0xFD8
 53943                           
 53944 ;; *************** function _MSDTransferTerminated *****************
 53945 ;; Defined at:
 53946 ;;		line 1674 in file "usb_device_msd.c"
 53947 ;; Parameters:    Size  Location     Type
 53948 ;;  handle          2   11[COMRAM] PTR void 
 53949 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 53950 ;;		 -> BDT(48), 
 53951 ;; Auto vars:     Size  Location     Type
 53952 ;;		None
 53953 ;; Return value:  Size  Location     Type
 53954 ;;                  1    wreg      void 
 53955 ;; Registers used:
 53956 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 53957 ;; Tracked objects:
 53958 ;;		On entry : 0/0
 53959 ;;		On exit  : 0/0
 53960 ;;		Unchanged: 0/0
 53961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53962 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53963 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53965 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53966 ;;Total ram usage:        4 bytes
 53967 ;; Hardware stack levels used:    1
 53968 ;; Hardware stack levels required when called:    1
 53969 ;; This function calls:
 53970 ;;		i2_USBStallEndpoint
 53971 ;;		i2_USBTransferOnePacket
 53972 ;; This function is called by:
 53973 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 53974 ;; This function uses a non-reentrant model
 53975 ;;
 53976                           
 53977                           	psect	text226
 53978  015042                     __ptext226:
 53979                           	opt stack 0
 53980  015042                     _MSDTransferTerminated:
 53981                           	opt stack 14
 53982                           
 53983                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 53984                           
 53985                           ;incstack = 0
 53986  015042  0101               	movlb	1	; () banked
 53987  015044  5150               	movf	_MSDCBWValid& (0+255),w,b
 53988  015046  A4D8               	btfss	status,2,c
 53989  015048  D00B               	goto	i2l780
 53990                           
 53991                           ; BSR set to: 1
 53992                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 53993  01504A  0E01               	movlw	1
 53994  01504C  6E01               	movwf	i2USBStallEndpoint@dir,c
 53995  01504E  0E02               	movlw	2
 53996  015050  ECA2  F08A         	call	i2_USBStallEndpoint
 53997                           
 53998                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 53999  015054  0E00               	movlw	0
 54000  015056  6E01               	movwf	i2USBStallEndpoint@dir,c
 54001  015058  0E02               	movlw	2
 54002  01505A  ECA2  F08A         	call	i2_USBStallEndpoint
 54003                           
 54004                           ;usb_device_msd.c: 1681: }
 54005  01505E  0012               	return	
 54006  015060                     i2l780:
 54007  015060  C119  F00E         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2623
 54008  015064  C11A  F00F         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2623+1
 54009  015068  500E               	movf	_MSDTransferTerminated$2623,w,c
 54010  01506A  180C               	xorwf	MSDTransferTerminated@handle,w,c
 54011  01506C  E114               	bnz	i2l783
 54012  01506E  500F               	movf	_MSDTransferTerminated$2623+1,w,c
 54013  015070  180D               	xorwf	MSDTransferTerminated@handle+1,w,c
 54014  015072  A4D8               	btfss	status,2,c
 54015  015074  0012               	return	
 54016                           
 54017                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 54018  015076  0E00               	movlw	0
 54019  015078  6E01               	movwf	i2USBTransferOnePacket@dir,c
 54020  01507A  0E40               	movlw	64
 54021  01507C  6E02               	movwf	i2USBTransferOnePacket@data,c
 54022  01507E  0E0D               	movlw	13
 54023  015080  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 54024  015082  0E40               	movlw	64
 54025  015084  6E04               	movwf	i2USBTransferOnePacket@len,c
 54026  015086  0E02               	movlw	2
 54027  015088  ECA6  F08B         	call	i2_USBTransferOnePacket
 54028  01508C  C001  F141         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 54029  015090  C002  F142         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 54030  015094  0012               	return	
 54031  015096                     i2l783:
 54032  015096  0012               	return		;funcret
 54033  015098                     __end_of_MSDTransferTerminated:
 54034                           	opt stack 0
 54035                           tosu	equ	0xFFF
 54036                           tosh	equ	0xFFE
 54037                           tosl	equ	0xFFD
 54038                           pclatu	equ	0xFFB
 54039                           pclath	equ	0xFFA
 54040                           tblptru	equ	0xFF8
 54041                           tblptrh	equ	0xFF7
 54042                           tblptrl	equ	0xFF6
 54043                           tablat	equ	0xFF5
 54044                           prodh	equ	0xFF4
 54045                           prodl	equ	0xFF3
 54046                           intcon	equ	0xFF2
 54047                           indf0	equ	0xFEF
 54048                           postinc0	equ	0xFEE
 54049                           fsr0h	equ	0xFEA
 54050                           fsr0l	equ	0xFE9
 54051                           wreg	equ	0xFE8
 54052                           indf1	equ	0xFE7
 54053                           postinc1	equ	0xFE6
 54054                           postdec1	equ	0xFE5
 54055                           plusw1	equ	0xFE3
 54056                           fsr1h	equ	0xFE2
 54057                           fsr1l	equ	0xFE1
 54058                           indf2	equ	0xFDF
 54059                           postinc2	equ	0xFDE
 54060                           postdec2	equ	0xFDD
 54061                           plusw2	equ	0xFDB
 54062                           fsr2h	equ	0xFDA
 54063                           fsr2l	equ	0xFD9
 54064                           status	equ	0xFD8
 54065                           
 54066 ;; *************** function i2_USBStallEndpoint *****************
 54067 ;; Defined at:
 54068 ;;		line 1073 in file "usb_device.c"
 54069 ;; Parameters:    Size  Location     Type
 54070 ;;  ep              1    wreg     unsigned char 
 54071 ;;  dir             1    0[COMRAM] unsigned char 
 54072 ;; Auto vars:     Size  Location     Type
 54073 ;;  ep              1    5[COMRAM] unsigned char 
 54074 ;;  USBStallEndp    2    6[COMRAM] PTR struct __BDT
 54075 ;;		 -> BDT(48), 
 54076 ;; Return value:  Size  Location     Type
 54077 ;;                  1    wreg      void 
 54078 ;; Registers used:
 54079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 54080 ;; Tracked objects:
 54081 ;;		On entry : 0/0
 54082 ;;		On exit  : 0/0
 54083 ;;		Unchanged: 0/0
 54084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54085 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54086 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54087 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54088 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54089 ;;Total ram usage:        8 bytes
 54090 ;; Hardware stack levels used:    1
 54091 ;; This function calls:
 54092 ;;		Nothing
 54093 ;; This function is called by:
 54094 ;;		_MSDTransferTerminated
 54095 ;; This function uses a non-reentrant model
 54096 ;;
 54097                           
 54098                           	psect	text227
 54099  011544                     __ptext227:
 54100                           	opt stack 0
 54101  011544                     i2_USBStallEndpoint:
 54102                           	opt stack 14
 54103                           
 54104                           ;incstack = 0
 54105                           ;i2USBStallEndpoint@ep stored from wreg
 54106  011544  6E06               	movwf	i2USBStallEndpoint@ep,c
 54107                           
 54108                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 54109  011546  5006               	movf	i2USBStallEndpoint@ep,w,c
 54110  011548  A4D8               	btfss	status,2,c
 54111  01154A  D02B               	goto	i2l192
 54112                           
 54113                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 54114  01154C  EE20 F001          	lfsr	2,1
 54115  011550  5059               	movf	_pBDTEntryEP0OutNext,w,c
 54116  011552  26D9               	addwf	fsr2l,f,c
 54117  011554  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 54118  011556  22DA               	addwfc	fsr2h,f,c
 54119  011558  0E08               	movlw	8
 54120  01155A  6EDF               	movwf	indf2,c
 54121                           
 54122                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 54123  01155C  EE20 F002          	lfsr	2,2
 54124  011560  5059               	movf	_pBDTEntryEP0OutNext,w,c
 54125  011562  26D9               	addwf	fsr2l,f,c
 54126  011564  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 54127  011566  22DA               	addwfc	fsr2h,f,c
 54128  011568  0E30               	movlw	48
 54129  01156A  6EDE               	movwf	postinc2,c
 54130  01156C  0E0D               	movlw	13
 54131  01156E  6EDD               	movwf	postdec2,c
 54132                           
 54133                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 54134  011570  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 54135  011574  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 54136  011578  0E0C               	movlw	12
 54137  01157A  6EDF               	movwf	indf2,c
 54138                           
 54139                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 54140  01157C  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 54141  011580  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 54142  011584  0E00               	movlw	0
 54143  011586  8EDB               	bsf	plusw2,7,c
 54144                           
 54145                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 54146  011588  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 54147  01158C  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54148  011590  0E04               	movlw	4
 54149  011592  6EDF               	movwf	indf2,c
 54150                           
 54151                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 54152  011594  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 54153  011598  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54154  01159C  0E00               	movlw	0
 54155  01159E  8EDB               	bsf	plusw2,7,c
 54156                           
 54157                           ;usb_device.c: 1089: }
 54158  0115A0  0012               	return	
 54159  0115A2                     i2l192:
 54160                           
 54161                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 54162  0115A2  5001               	movf	i2USBStallEndpoint@dir,w,c
 54163  0115A4  6E02               	movwf	??i2_USBStallEndpoint& (0+255),c
 54164  0115A6  6A03               	clrf	(??i2_USBStallEndpoint+1)& (0+255),c
 54165  0115A8  90D8               	bcf	status,0,c
 54166  0115AA  3602               	rlcf	??i2_USBStallEndpoint,f,c
 54167  0115AC  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 54168  0115AE  5006               	movf	i2USBStallEndpoint@ep,w,c
 54169  0115B0  6E04               	movwf	(??i2_USBStallEndpoint+2)& (0+255),c
 54170  0115B2  6A05               	clrf	(??i2_USBStallEndpoint+3)& (0+255),c
 54171  0115B4  90D8               	bcf	status,0,c
 54172  0115B6  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 54173  0115B8  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 54174  0115BA  90D8               	bcf	status,0,c
 54175  0115BC  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 54176  0115BE  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 54177  0115C0  5002               	movf	??i2_USBStallEndpoint,w,c
 54178  0115C2  2604               	addwf	??i2_USBStallEndpoint+2,f,c
 54179  0115C4  5003               	movf	??i2_USBStallEndpoint+1,w,c
 54180  0115C6  2205               	addwfc	??i2_USBStallEndpoint+3,f,c
 54181  0115C8  90D8               	bcf	status,0,c
 54182  0115CA  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 54183  0115CC  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 54184  0115CE  90D8               	bcf	status,0,c
 54185  0115D0  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 54186  0115D2  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 54187  0115D4  0E00               	movlw	0
 54188  0115D6  2404               	addwf	??i2_USBStallEndpoint+2,w,c
 54189  0115D8  6E07               	movwf	i2USBStallEndpoint@p,c
 54190  0115DA  0E0D               	movlw	13
 54191  0115DC  2005               	addwfc	??i2_USBStallEndpoint+3,w,c
 54192  0115DE  6E08               	movwf	i2USBStallEndpoint@p+1,c
 54193                           
 54194                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 54195  0115E0  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 54196  0115E4  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 54197  0115E8  0E00               	movlw	0
 54198  0115EA  84DB               	bsf	plusw2,2,c
 54199                           
 54200                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 54201  0115EC  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 54202  0115F0  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 54203  0115F4  0E00               	movlw	0
 54204  0115F6  8EDB               	bsf	plusw2,7,c
 54205                           
 54206                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 54207  0115F8  5006               	movf	i2USBStallEndpoint@ep,w,c
 54208  0115FA  0D04               	mullw	4
 54209  0115FC  CFF3 F002          	movff	prodl,??i2_USBStallEndpoint
 54210  011600  CFF4 F003          	movff	prodh,??i2_USBStallEndpoint+1
 54211  011604  5001               	movf	i2USBStallEndpoint@dir,w,c
 54212  011606  0D02               	mullw	2
 54213  011608  50F3               	movf	prodl,w,c
 54214  01160A  2602               	addwf	??i2_USBStallEndpoint,f,c
 54215  01160C  50F4               	movf	prodh,w,c
 54216  01160E  2203               	addwfc	??i2_USBStallEndpoint+1,f,c
 54217  011610  90D8               	bcf	status,0,c
 54218  011612  3602               	rlcf	??i2_USBStallEndpoint,f,c
 54219  011614  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 54220  011616  90D8               	bcf	status,0,c
 54221  011618  3602               	rlcf	??i2_USBStallEndpoint,f,c
 54222  01161A  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 54223  01161C  0E04               	movlw	4
 54224  01161E  2602               	addwf	??i2_USBStallEndpoint,f,c
 54225  011620  0E00               	movlw	0
 54226  011622  2203               	addwfc	??i2_USBStallEndpoint+1,f,c
 54227  011624  0E00               	movlw	0
 54228  011626  2402               	addwf	??i2_USBStallEndpoint,w,c
 54229  011628  6E07               	movwf	i2USBStallEndpoint@p,c
 54230  01162A  0E0D               	movlw	13
 54231  01162C  2003               	addwfc	??i2_USBStallEndpoint+1,w,c
 54232  01162E  6E08               	movwf	i2USBStallEndpoint@p+1,c
 54233                           
 54234                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 54235  011630  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 54236  011634  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 54237  011638  0E00               	movlw	0
 54238  01163A  84DB               	bsf	plusw2,2,c
 54239                           
 54240                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 54241  01163C  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 54242  011640  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 54243  011644  0E00               	movlw	0
 54244  011646  8EDB               	bsf	plusw2,7,c
 54245  011648  0012               	return	
 54246  01164A                     __end_ofi2_USBStallEndpoint:
 54247                           	opt stack 0
 54248                           tosu	equ	0xFFF
 54249                           tosh	equ	0xFFE
 54250                           tosl	equ	0xFFD
 54251                           pclatu	equ	0xFFB
 54252                           pclath	equ	0xFFA
 54253                           tblptru	equ	0xFF8
 54254                           tblptrh	equ	0xFF7
 54255                           tblptrl	equ	0xFF6
 54256                           tablat	equ	0xFF5
 54257                           prodh	equ	0xFF4
 54258                           prodl	equ	0xFF3
 54259                           intcon	equ	0xFF2
 54260                           indf0	equ	0xFEF
 54261                           postinc0	equ	0xFEE
 54262                           fsr0h	equ	0xFEA
 54263                           fsr0l	equ	0xFE9
 54264                           wreg	equ	0xFE8
 54265                           indf1	equ	0xFE7
 54266                           postinc1	equ	0xFE6
 54267                           postdec1	equ	0xFE5
 54268                           plusw1	equ	0xFE3
 54269                           fsr1h	equ	0xFE2
 54270                           fsr1l	equ	0xFE1
 54271                           indf2	equ	0xFDF
 54272                           postinc2	equ	0xFDE
 54273                           postdec2	equ	0xFDD
 54274                           plusw2	equ	0xFDB
 54275                           fsr2h	equ	0xFDA
 54276                           fsr2l	equ	0xFD9
 54277                           status	equ	0xFD8
 54278                           
 54279 ;; *************** function _APP_DeviceMSDInitialize *****************
 54280 ;; Defined at:
 54281 ;;		line 84 in file "app_device_msd.c"
 54282 ;; Parameters:    Size  Location     Type
 54283 ;;		None
 54284 ;; Auto vars:     Size  Location     Type
 54285 ;;		None
 54286 ;; Return value:  Size  Location     Type
 54287 ;;                  1    wreg      void 
 54288 ;; Registers used:
 54289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 54290 ;; Tracked objects:
 54291 ;;		On entry : 0/0
 54292 ;;		On exit  : 0/0
 54293 ;;		Unchanged: 0/0
 54294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54299 ;;Total ram usage:        0 bytes
 54300 ;; Hardware stack levels used:    1
 54301 ;; Hardware stack levels required when called:    2
 54302 ;; This function calls:
 54303 ;;		_USBEnableEndpoint
 54304 ;;		_USBMSDInit
 54305 ;; This function is called by:
 54306 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 54307 ;; This function uses a non-reentrant model
 54308 ;;
 54309                           
 54310                           	psect	text228
 54311  015FD6                     __ptext228:
 54312                           	opt stack 0
 54313  015FD6                     _APP_DeviceMSDInitialize:
 54314                           	opt stack 13
 54315                           
 54316                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 54317                           
 54318                           ;incstack = 0
 54319  015FD6  0E1E               	movlw	30
 54320  015FD8  6E09               	movwf	USBEnableEndpoint@options,c
 54321  015FDA  0E02               	movlw	2
 54322  015FDC  ECF1  F0AB         	call	_USBEnableEndpoint
 54323                           
 54324                           ;app_device_msd.c: 93: USBMSDInit();
 54325  015FE0  EC8C  F088         	call	_USBMSDInit	;wreg free
 54326  015FE4  0012               	return		;funcret
 54327  015FE6                     __end_of_APP_DeviceMSDInitialize:
 54328                           	opt stack 0
 54329                           tosu	equ	0xFFF
 54330                           tosh	equ	0xFFE
 54331                           tosl	equ	0xFFD
 54332                           pclatu	equ	0xFFB
 54333                           pclath	equ	0xFFA
 54334                           tblptru	equ	0xFF8
 54335                           tblptrh	equ	0xFF7
 54336                           tblptrl	equ	0xFF6
 54337                           tablat	equ	0xFF5
 54338                           prodh	equ	0xFF4
 54339                           prodl	equ	0xFF3
 54340                           intcon	equ	0xFF2
 54341                           indf0	equ	0xFEF
 54342                           postinc0	equ	0xFEE
 54343                           fsr0h	equ	0xFEA
 54344                           fsr0l	equ	0xFE9
 54345                           wreg	equ	0xFE8
 54346                           indf1	equ	0xFE7
 54347                           postinc1	equ	0xFE6
 54348                           postdec1	equ	0xFE5
 54349                           plusw1	equ	0xFE3
 54350                           fsr1h	equ	0xFE2
 54351                           fsr1l	equ	0xFE1
 54352                           indf2	equ	0xFDF
 54353                           postinc2	equ	0xFDE
 54354                           postdec2	equ	0xFDD
 54355                           plusw2	equ	0xFDB
 54356                           fsr2h	equ	0xFDA
 54357                           fsr2l	equ	0xFD9
 54358                           status	equ	0xFD8
 54359                           
 54360 ;; *************** function _USBMSDInit *****************
 54361 ;; Defined at:
 54362 ;;		line 142 in file "usb_device_msd.c"
 54363 ;; Parameters:    Size  Location     Type
 54364 ;;		None
 54365 ;; Auto vars:     Size  Location     Type
 54366 ;;		None
 54367 ;; Return value:  Size  Location     Type
 54368 ;;                  1    wreg      void 
 54369 ;; Registers used:
 54370 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 54371 ;; Tracked objects:
 54372 ;;		On entry : 0/0
 54373 ;;		On exit  : 0/0
 54374 ;;		Unchanged: 0/0
 54375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54378 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54379 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54380 ;;Total ram usage:        3 bytes
 54381 ;; Hardware stack levels used:    1
 54382 ;; Hardware stack levels required when called:    1
 54383 ;; This function calls:
 54384 ;;		i2_ExternalFlash_MediaDetect
 54385 ;;		i2_ExternalFlash_MediaInitialize
 54386 ;;		i2_ResetSenseData
 54387 ;;		i2_USBTransferOnePacket
 54388 ;; This function is called by:
 54389 ;;		_APP_DeviceMSDInitialize
 54390 ;; This function uses a non-reentrant model
 54391 ;;
 54392                           
 54393                           	psect	text229
 54394  011118                     __ptext229:
 54395                           	opt stack 0
 54396  011118                     _USBMSDInit:
 54397                           	opt stack 13
 54398                           
 54399                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 54400                           
 54401                           ;incstack = 0
 54402  011118  0E00               	movlw	0
 54403  01111A  6E01               	movwf	i2USBTransferOnePacket@dir,c
 54404  01111C  0E40               	movlw	64
 54405  01111E  6E02               	movwf	i2USBTransferOnePacket@data,c
 54406  011120  0E0D               	movlw	13
 54407  011122  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 54408  011124  0E40               	movlw	64
 54409  011126  6E04               	movwf	i2USBTransferOnePacket@len,c
 54410  011128  0E02               	movlw	2
 54411  01112A  ECA6  F08B         	call	i2_USBTransferOnePacket
 54412  01112E  C001  F141         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 54413  011132  C002  F142         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 54414  011136  C113  F13F         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 54415  01113A  C114  F140         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 54416                           
 54417                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 54418  01113E  0E00               	movlw	0
 54419  011140  0101               	movlb	1	; () banked
 54420  011142  6F58               	movwf	_MSD_State& (0+255),b
 54421                           
 54422                           ; BSR set to: 1
 54423                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 54424  011144  6957               	setf	_MSDCommandState& (0+255),b
 54425                           
 54426                           ; BSR set to: 1
 54427                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 54428  011146  0E00               	movlw	0
 54429  011148  6F56               	movwf	_MSDReadState& (0+255),b
 54430                           
 54431                           ; BSR set to: 1
 54432                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 54433  01114A  0E00               	movlw	0
 54434  01114C  6F55               	movwf	_MSDWriteState& (0+255),b
 54435                           
 54436                           ; BSR set to: 1
 54437                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 54438  01114E  0E00               	movlw	0
 54439  011150  6F51               	movwf	_MSDHostNoData& (0+255),b
 54440                           
 54441                           ; BSR set to: 1
 54442                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 54443  011152  0E00               	movlw	0
 54444  011154  0102               	movlb	2	; () banked
 54445  011156  6F40               	movwf	_gblNumBLKS& (0+255),b
 54446  011158  0E00               	movlw	0
 54447  01115A  6F41               	movwf	(_gblNumBLKS+1)& (0+255),b
 54448  01115C  0E00               	movlw	0
 54449  01115E  6F42               	movwf	(_gblNumBLKS+2)& (0+255),b
 54450  011160  0E00               	movlw	0
 54451  011162  6F43               	movwf	(_gblNumBLKS+3)& (0+255),b
 54452                           
 54453                           ; BSR set to: 2
 54454                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 54455  011164  0E00               	movlw	0
 54456  011166  6F3C               	movwf	_gblBLKLen& (0+255),b
 54457  011168  0E00               	movlw	0
 54458  01116A  6F3D               	movwf	(_gblBLKLen+1)& (0+255),b
 54459  01116C  0E00               	movlw	0
 54460  01116E  6F3E               	movwf	(_gblBLKLen+2)& (0+255),b
 54461  011170  0E00               	movlw	0
 54462  011172  6F3F               	movwf	(_gblBLKLen+3)& (0+255),b
 54463                           
 54464                           ; BSR set to: 2
 54465                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 54466  011174  0E01               	movlw	1
 54467  011176  0101               	movlb	1	; () banked
 54468  011178  6F50               	movwf	_MSDCBWValid& (0+255),b
 54469                           
 54470                           ; BSR set to: 1
 54471                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 54472  01117A  0E00               	movlw	0
 54473  01117C  0102               	movlb	2	; () banked
 54474  01117E  6F45               	movwf	(_gblMediaPresent+1)& (0+255),b
 54475  011180  0E00               	movlw	0
 54476  011182  6F44               	movwf	_gblMediaPresent& (0+255),b
 54477                           
 54478                           ; BSR set to: 2
 54479                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 54480  011184  0E00               	movlw	0
 54481  011186  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 54482  011188  D04A               	goto	i2l534
 54483  01118A                     
 54484                           ; BSR set to: 2
 54485                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 54486                           
 54487                           ; BSR set to: 2
 54488  01118A  510D               	movf	(_gblCBW+13)& (0+255),w,b
 54489  01118C  0D01               	mullw	1
 54490  01118E  0E52               	movlw	low _SoftDetach
 54491  011190  24F3               	addwf	prodl,w,c
 54492  011192  6ED9               	movwf	fsr2l,c
 54493  011194  0E01               	movlw	high _SoftDetach
 54494  011196  20F4               	addwfc	prodh,w,c
 54495  011198  6EDA               	movwf	fsr2h,c
 54496  01119A  0E00               	movlw	0
 54497  01119C  6EDF               	movwf	indf2,c
 54498                           
 54499                           ; BSR set to: 2
 54500                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 54501  01119E  C2B2  F001         	movff	_LUN+21,i2ExternalFlash_MediaDetect@config
 54502  0111A2  C2B3  F002         	movff	_LUN+22,i2ExternalFlash_MediaDetect@config+1
 54503  0111A6  EE22  F0A6         	lfsr	2,_LUN+9
 54504  0111AA  D801               	call	i2u1033_48
 54505  0111AC  D00A               	goto	i2u1033_49
 54506  0111AE                     i2u1033_48:
 54507  0111AE  0005               	push	
 54508  0111B0  6EFA               	movwf	pclath,c
 54509  0111B2  50DE               	movf	postinc2,w,c
 54510  0111B4  6EFD               	movwf	tosl,c
 54511  0111B6  50DE               	movf	postinc2,w,c
 54512  0111B8  6EFE               	movwf	tosh,c
 54513  0111BA  50DE               	movf	postinc2,w,c
 54514  0111BC  6EFF               	movwf	tosu,c
 54515  0111BE  50FA               	movf	pclath,w,c
 54516  0111C0  0012               	return		;indir
 54517  0111C2                     i2u1033_49:
 54518  0111C2  0900               	iorlw	0
 54519  0111C4  B4D8               	btfsc	status,2,c
 54520  0111C6  D027               	goto	i2l537
 54521                           
 54522                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 54523  0111C8  C2B2  F001         	movff	_LUN+21,i2ExternalFlash_MediaInitialize@config
 54524  0111CC  C2B3  F002         	movff	_LUN+22,i2ExternalFlash_MediaInitialize@config+1
 54525  0111D0  D801               	call	i2u1035_48
 54526  0111D2  D00B               	goto	i2u1035_49
 54527  0111D4                     i2u1035_48:
 54528  0111D4  0005               	push	
 54529  0111D6  6EFA               	movwf	pclath,c
 54530  0111D8  0102               	movlb	2	; () banked
 54531  0111DA  519D               	movf	_LUN& (0+255),w,b
 54532  0111DC  6EFD               	movwf	tosl,c
 54533  0111DE  519E               	movf	(_LUN+1)& (0+255),w,b
 54534  0111E0  6EFE               	movwf	tosh,c
 54535  0111E2  519F               	movf	(_LUN+2)& (0+255),w,b
 54536  0111E4  6EFF               	movwf	tosu,c
 54537  0111E6  50FA               	movf	pclath,w,c
 54538  0111E8  0012               	return		;indir
 54539  0111EA                     i2u1035_49:
 54540  0111EA  5001               	movf	?i2_ExternalFlash_MediaInitialize,w,c
 54541  0111EC  1002               	iorwf	?i2_ExternalFlash_MediaInitialize+1,w,c
 54542  0111EE  B4D8               	btfsc	status,2,c
 54543  0111F0  D012               	goto	i2l537
 54544                           
 54545                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 54546  0111F2  C20D  F00C         	movff	_gblCBW+13,??_USBMSDInit
 54547  0111F6  0E01               	movlw	1
 54548  0111F8  6E0D               	movwf	(??_USBMSDInit+1)& (0+255),c
 54549  0111FA  0E00               	movlw	0
 54550  0111FC  6E0E               	movwf	(??_USBMSDInit+2)& (0+255),c
 54551  0111FE  2A0C               	incf	??_USBMSDInit,f,c
 54552  011200  D003               	goto	i2u1037_44
 54553  011202                     i2u1037_45:
 54554  011202  90D8               	bcf	status,0,c
 54555  011204  360D               	rlcf	??_USBMSDInit+1,f,c
 54556  011206  360E               	rlcf	??_USBMSDInit+2,f,c
 54557  011208                     i2u1037_44:
 54558  011208  2E0C               	decfsz	??_USBMSDInit,f,c
 54559  01120A  D7FB               	goto	i2u1037_45
 54560  01120C  500D               	movf	??_USBMSDInit+1,w,c
 54561  01120E  0102               	movlb	2	; () banked
 54562  011210  1344               	iorwf	_gblMediaPresent& (0+255),f,b
 54563  011212  500E               	movf	??_USBMSDInit+2,w,c
 54564  011214  1345               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 54565  011216                     i2l537:
 54566                           
 54567                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 54568                           
 54569                           ; BSR set to: 2
 54570                           
 54571                           ; BSR set to: 2
 54572  011216  EC4A  F0A5         	call	i2_ResetSenseData	;wreg free
 54573  01121A  0102               	movlb	2	; () banked
 54574  01121C  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 54575  01121E                     i2l534:
 54576                           
 54577                           ; BSR set to: 2
 54578                           
 54579                           ; BSR set to: 2
 54580  01121E  510D               	movf	(_gblCBW+13)& (0+255),w,b
 54581  011220  A4D8               	btfss	status,2,c
 54582  011222  0012               	return	
 54583  011224  D7B2               	goto	i2l535
 54584  011226                     __end_of_USBMSDInit:
 54585                           	opt stack 0
 54586                           tosu	equ	0xFFF
 54587                           tosh	equ	0xFFE
 54588                           tosl	equ	0xFFD
 54589                           pclatu	equ	0xFFB
 54590                           pclath	equ	0xFFA
 54591                           tblptru	equ	0xFF8
 54592                           tblptrh	equ	0xFF7
 54593                           tblptrl	equ	0xFF6
 54594                           tablat	equ	0xFF5
 54595                           prodh	equ	0xFF4
 54596                           prodl	equ	0xFF3
 54597                           intcon	equ	0xFF2
 54598                           indf0	equ	0xFEF
 54599                           postinc0	equ	0xFEE
 54600                           fsr0h	equ	0xFEA
 54601                           fsr0l	equ	0xFE9
 54602                           wreg	equ	0xFE8
 54603                           indf1	equ	0xFE7
 54604                           postinc1	equ	0xFE6
 54605                           postdec1	equ	0xFE5
 54606                           plusw1	equ	0xFE3
 54607                           fsr1h	equ	0xFE2
 54608                           fsr1l	equ	0xFE1
 54609                           indf2	equ	0xFDF
 54610                           postinc2	equ	0xFDE
 54611                           postdec2	equ	0xFDD
 54612                           plusw2	equ	0xFDB
 54613                           fsr2h	equ	0xFDA
 54614                           fsr2l	equ	0xFD9
 54615                           status	equ	0xFD8
 54616                           
 54617 ;; *************** function i2_ResetSenseData *****************
 54618 ;; Defined at:
 54619 ;;		line 1373 in file "usb_device_msd.c"
 54620 ;; Parameters:    Size  Location     Type
 54621 ;;		None
 54622 ;; Auto vars:     Size  Location     Type
 54623 ;;		None
 54624 ;; Return value:  Size  Location     Type
 54625 ;;                  1    wreg      void 
 54626 ;; Registers used:
 54627 ;;		wreg, status,2
 54628 ;; Tracked objects:
 54629 ;;		On entry : 0/0
 54630 ;;		On exit  : 0/0
 54631 ;;		Unchanged: 0/0
 54632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54637 ;;Total ram usage:        0 bytes
 54638 ;; Hardware stack levels used:    1
 54639 ;; This function calls:
 54640 ;;		Nothing
 54641 ;; This function is called by:
 54642 ;;		_USBMSDInit
 54643 ;; This function uses a non-reentrant model
 54644 ;;
 54645                           
 54646                           	psect	text230
 54647  014A94                     __ptext230:
 54648                           	opt stack 0
 54649  014A94                     i2_ResetSenseData:
 54650                           	opt stack 13
 54651                           
 54652                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 54653                           
 54654                           ; BSR set to: 2
 54655                           ;incstack = 0
 54656  014A94  0102               	movlb	2	; () banked
 54657  014A96  911F               	bcf	_gblSenseData& (0+255),0,b
 54658  014A98  931F               	bcf	_gblSenseData& (0+255),1,b
 54659  014A9A  951F               	bcf	_gblSenseData& (0+255),2,b
 54660  014A9C  971F               	bcf	_gblSenseData& (0+255),3,b
 54661  014A9E  891F               	bsf	_gblSenseData& (0+255),4,b
 54662  014AA0  8B1F               	bsf	_gblSenseData& (0+255),5,b
 54663  014AA2  8D1F               	bsf	_gblSenseData& (0+255),6,b
 54664                           
 54665                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 54666  014AA4  9F1F               	bcf	_gblSenseData& (0+255),7,b
 54667                           
 54668                           ; BSR set to: 2
 54669                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 54670  014AA6  0E00               	movlw	0
 54671  014AA8  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 54672                           
 54673                           ; BSR set to: 2
 54674                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 54675  014AAA  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 54676  014AAC  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 54677  014AAE  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 54678  014AB0  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 54679                           
 54680                           ; BSR set to: 2
 54681                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 54682  014AB2  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 54683                           
 54684                           ; BSR set to: 2
 54685                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 54686  014AB4  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 54687                           
 54688                           ; BSR set to: 2
 54689                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 54690  014AB6  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 54691                           
 54692                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 54693  014AB8  0E00               	movlw	0
 54694  014ABA  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 54695                           
 54696                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 54697  014ABC  0E00               	movlw	0
 54698  014ABE  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 54699                           
 54700                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 54701  014AC0  0E00               	movlw	0
 54702  014AC2  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 54703                           
 54704                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 54705  014AC4  0E00               	movlw	0
 54706  014AC6  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 54707                           
 54708                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 54709  014AC8  0E0A               	movlw	10
 54710  014ACA  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 54711                           
 54712                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 54713  014ACC  0E00               	movlw	0
 54714  014ACE  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 54715  014AD0  0E00               	movlw	0
 54716  014AD2  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 54717  014AD4  0E00               	movlw	0
 54718  014AD6  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 54719  014AD8  0E00               	movlw	0
 54720  014ADA  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 54721                           
 54722                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 54723  014ADC  0E00               	movlw	0
 54724  014ADE  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 54725                           
 54726                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 54727  014AE0  0E00               	movlw	0
 54728  014AE2  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 54729                           
 54730                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 54731  014AE4  0E00               	movlw	0
 54732  014AE6  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 54733                           
 54734                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 54735  014AE8  0E00               	movlw	0
 54736  014AEA  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 54737                           
 54738                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 54739  014AEC  0E00               	movlw	0
 54740  014AEE  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 54741                           
 54742                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 54743  014AF0  0E00               	movlw	0
 54744  014AF2  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 54745                           
 54746                           ; BSR set to: 2
 54747  014AF4  0012               	return		;funcret
 54748  014AF6                     __end_ofi2_ResetSenseData:
 54749                           	opt stack 0
 54750                           tosu	equ	0xFFF
 54751                           tosh	equ	0xFFE
 54752                           tosl	equ	0xFFD
 54753                           pclatu	equ	0xFFB
 54754                           pclath	equ	0xFFA
 54755                           tblptru	equ	0xFF8
 54756                           tblptrh	equ	0xFF7
 54757                           tblptrl	equ	0xFF6
 54758                           tablat	equ	0xFF5
 54759                           prodh	equ	0xFF4
 54760                           prodl	equ	0xFF3
 54761                           intcon	equ	0xFF2
 54762                           indf0	equ	0xFEF
 54763                           postinc0	equ	0xFEE
 54764                           fsr0h	equ	0xFEA
 54765                           fsr0l	equ	0xFE9
 54766                           wreg	equ	0xFE8
 54767                           indf1	equ	0xFE7
 54768                           postinc1	equ	0xFE6
 54769                           postdec1	equ	0xFE5
 54770                           plusw1	equ	0xFE3
 54771                           fsr1h	equ	0xFE2
 54772                           fsr1l	equ	0xFE1
 54773                           indf2	equ	0xFDF
 54774                           postinc2	equ	0xFDE
 54775                           postdec2	equ	0xFDD
 54776                           plusw2	equ	0xFDB
 54777                           fsr2h	equ	0xFDA
 54778                           fsr2l	equ	0xFD9
 54779                           status	equ	0xFD8
 54780                           
 54781 ;; *************** function i2_ExternalFlash_MediaInitialize *****************
 54782 ;; Defined at:
 54783 ;;		line 10 in file "external_flash.c"
 54784 ;; Parameters:    Size  Location     Type
 54785 ;;  config          2    0[COMRAM] PTR void 
 54786 ;;		 -> NULL(0), 
 54787 ;; Auto vars:     Size  Location     Type
 54788 ;;		None
 54789 ;; Return value:  Size  Location     Type
 54790 ;;                  2    0[COMRAM] PTR struct .
 54791 ;; Registers used:
 54792 ;;		wreg, status,2, status,0
 54793 ;; Tracked objects:
 54794 ;;		On entry : 0/0
 54795 ;;		On exit  : 0/0
 54796 ;;		Unchanged: 0/0
 54797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54798 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54801 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54802 ;;Total ram usage:        2 bytes
 54803 ;; Hardware stack levels used:    1
 54804 ;; This function calls:
 54805 ;;		Nothing
 54806 ;; This function is called by:
 54807 ;;		_USBMSDInit
 54808 ;;		_MSDProcessCommand
 54809 ;; This function uses a non-reentrant model
 54810 ;;
 54811                           
 54812                           	psect	text231
 54813  015F48                     __ptext231:
 54814                           	opt stack 0
 54815  015F48                     i2_ExternalFlash_MediaInitialize:
 54816                           	opt stack 13
 54817                           
 54818                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 54819                           
 54820                           ; BSR set to: 2
 54821                           ;incstack = 0
 54822  015F48  0102               	movlb	2	; () banked
 54823  015F4A  8199               	bsf	(_mediaInformation+1)& (0+255),0,b
 54824                           
 54825                           ; BSR set to: 2
 54826                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 54827  015F4C  0E02               	movlw	2
 54828  015F4E  6F9B               	movwf	(_mediaInformation+3)& (0+255),b
 54829  015F50  0E00               	movlw	0
 54830  015F52  6F9A               	movwf	(_mediaInformation+2)& (0+255),b
 54831                           
 54832                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 54833  015F54  0E00               	movlw	0
 54834  015F56  6F98               	movwf	_mediaInformation& (0+255),b
 54835                           
 54836                           ; BSR set to: 2
 54837                           ;external_flash.c: 15: return &mediaInformation;
 54838  015F58  0E98               	movlw	low _mediaInformation
 54839  015F5A  6E01               	movwf	?i2_ExternalFlash_MediaInitialize,c
 54840  015F5C  0E02               	movlw	high _mediaInformation
 54841  015F5E  6E02               	movwf	?i2_ExternalFlash_MediaInitialize+1,c
 54842  015F60  0012               	return	
 54843  015F62                     __end_ofi2_ExternalFlash_MediaInitialize:
 54844                           	opt stack 0
 54845                           tosu	equ	0xFFF
 54846                           tosh	equ	0xFFE
 54847                           tosl	equ	0xFFD
 54848                           pclatu	equ	0xFFB
 54849                           pclath	equ	0xFFA
 54850                           tblptru	equ	0xFF8
 54851                           tblptrh	equ	0xFF7
 54852                           tblptrl	equ	0xFF6
 54853                           tablat	equ	0xFF5
 54854                           prodh	equ	0xFF4
 54855                           prodl	equ	0xFF3
 54856                           intcon	equ	0xFF2
 54857                           indf0	equ	0xFEF
 54858                           postinc0	equ	0xFEE
 54859                           fsr0h	equ	0xFEA
 54860                           fsr0l	equ	0xFE9
 54861                           wreg	equ	0xFE8
 54862                           indf1	equ	0xFE7
 54863                           postinc1	equ	0xFE6
 54864                           postdec1	equ	0xFE5
 54865                           plusw1	equ	0xFE3
 54866                           fsr1h	equ	0xFE2
 54867                           fsr1l	equ	0xFE1
 54868                           indf2	equ	0xFDF
 54869                           postinc2	equ	0xFDE
 54870                           postdec2	equ	0xFDD
 54871                           plusw2	equ	0xFDB
 54872                           fsr2h	equ	0xFDA
 54873                           fsr2l	equ	0xFD9
 54874                           status	equ	0xFD8
 54875                           
 54876 ;; *************** function i2_ExternalFlash_MediaDetect *****************
 54877 ;; Defined at:
 54878 ;;		line 29 in file "external_flash.c"
 54879 ;; Parameters:    Size  Location     Type
 54880 ;;  config          2    0[COMRAM] PTR void 
 54881 ;;		 -> NULL(0), 
 54882 ;; Auto vars:     Size  Location     Type
 54883 ;;		None
 54884 ;; Return value:  Size  Location     Type
 54885 ;;                  1    wreg      unsigned char 
 54886 ;; Registers used:
 54887 ;;		wreg
 54888 ;; Tracked objects:
 54889 ;;		On entry : 0/0
 54890 ;;		On exit  : 0/0
 54891 ;;		Unchanged: 0/0
 54892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54893 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54896 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54897 ;;Total ram usage:        2 bytes
 54898 ;; Hardware stack levels used:    1
 54899 ;; This function calls:
 54900 ;;		Nothing
 54901 ;; This function is called by:
 54902 ;;		_USBMSDInit
 54903 ;;		_MSDProcessCommand
 54904 ;; This function uses a non-reentrant model
 54905 ;;
 54906                           
 54907                           	psect	text232
 54908  01609C                     __ptext232:
 54909                           	opt stack 0
 54910  01609C                     i2_ExternalFlash_MediaDetect:
 54911                           	opt stack 13
 54912                           
 54913                           ;external_flash.c: 31: return 1;
 54914                           
 54915                           ; BSR set to: 2
 54916                           ;incstack = 0
 54917  01609C  0E01               	movlw	1
 54918  01609E  0012               	return	
 54919  0160A0                     __end_ofi2_ExternalFlash_MediaDetect:
 54920                           	opt stack 0
 54921                           tosu	equ	0xFFF
 54922                           tosh	equ	0xFFE
 54923                           tosl	equ	0xFFD
 54924                           pclatu	equ	0xFFB
 54925                           pclath	equ	0xFFA
 54926                           tblptru	equ	0xFF8
 54927                           tblptrh	equ	0xFF7
 54928                           tblptrl	equ	0xFF6
 54929                           tablat	equ	0xFF5
 54930                           prodh	equ	0xFF4
 54931                           prodl	equ	0xFF3
 54932                           intcon	equ	0xFF2
 54933                           indf0	equ	0xFEF
 54934                           postinc0	equ	0xFEE
 54935                           fsr0h	equ	0xFEA
 54936                           fsr0l	equ	0xFE9
 54937                           wreg	equ	0xFE8
 54938                           indf1	equ	0xFE7
 54939                           postinc1	equ	0xFE6
 54940                           postdec1	equ	0xFE5
 54941                           plusw1	equ	0xFE3
 54942                           fsr1h	equ	0xFE2
 54943                           fsr1l	equ	0xFE1
 54944                           indf2	equ	0xFDF
 54945                           postinc2	equ	0xFDE
 54946                           postdec2	equ	0xFDD
 54947                           plusw2	equ	0xFDB
 54948                           fsr2h	equ	0xFDA
 54949                           fsr2l	equ	0xFD9
 54950                           status	equ	0xFD8
 54951                           
 54952 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 54953 ;; Defined at:
 54954 ;;		line 46 in file "app_device_custom_hid.c"
 54955 ;; Parameters:    Size  Location     Type
 54956 ;;		None
 54957 ;; Auto vars:     Size  Location     Type
 54958 ;;		None
 54959 ;; Return value:  Size  Location     Type
 54960 ;;                  1    wreg      void 
 54961 ;; Registers used:
 54962 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 54963 ;; Tracked objects:
 54964 ;;		On entry : 0/0
 54965 ;;		On exit  : 0/0
 54966 ;;		Unchanged: 0/0
 54967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54972 ;;Total ram usage:        0 bytes
 54973 ;; Hardware stack levels used:    1
 54974 ;; Hardware stack levels required when called:    2
 54975 ;; This function calls:
 54976 ;;		_USBEnableEndpoint
 54977 ;;		i2_USBTransferOnePacket
 54978 ;; This function is called by:
 54979 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 54980 ;; This function uses a non-reentrant model
 54981 ;;
 54982                           
 54983                           	psect	text233
 54984  015A0C                     __ptext233:
 54985                           	opt stack 0
 54986  015A0C                     _APP_DeviceCustomHIDInitialize:
 54987                           	opt stack 13
 54988                           
 54989                           ;app_device_custom_hid.c: 50: USBInHandle = 0;
 54990                           
 54991                           ;incstack = 0
 54992  015A0C  0E00               	movlw	0
 54993  015A0E  0101               	movlb	1	; () banked
 54994  015A10  6F39               	movwf	_USBInHandle& (0+255),b
 54995  015A12  0E00               	movlw	0
 54996  015A14  6F3A               	movwf	(_USBInHandle+1)& (0+255),b
 54997                           
 54998                           ; BSR set to: 1
 54999                           ;app_device_custom_hid.c: 53: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 55000  015A16  0E1E               	movlw	30
 55001  015A18  6E09               	movwf	USBEnableEndpoint@options,c
 55002  015A1A  0E01               	movlw	1
 55003  015A1C  ECF1  F0AB         	call	_USBEnableEndpoint
 55004                           
 55005                           ;app_device_custom_hid.c: 56: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 55006  015A20  0E00               	movlw	0
 55007  015A22  6E01               	movwf	i2USBTransferOnePacket@dir,c
 55008  015A24  0E80               	movlw	low _ReceivedDataBuffer
 55009  015A26  6E02               	movwf	i2USBTransferOnePacket@data,c
 55010  015A28  0E03               	movlw	high _ReceivedDataBuffer
 55011  015A2A  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 55012  015A2C  0E40               	movlw	64
 55013  015A2E  6E04               	movwf	i2USBTransferOnePacket@len,c
 55014  015A30  0E01               	movlw	1
 55015  015A32  ECA6  F08B         	call	i2_USBTransferOnePacket
 55016  015A36  C001  F13B         	movff	?i2_USBTransferOnePacket,_USBOutHandle
 55017  015A3A  C002  F13C         	movff	?i2_USBTransferOnePacket+1,_USBOutHandle+1
 55018  015A3E  0012               	return		;funcret
 55019  015A40                     __end_of_APP_DeviceCustomHIDInitialize:
 55020                           	opt stack 0
 55021                           tosu	equ	0xFFF
 55022                           tosh	equ	0xFFE
 55023                           tosl	equ	0xFFD
 55024                           pclatu	equ	0xFFB
 55025                           pclath	equ	0xFFA
 55026                           tblptru	equ	0xFF8
 55027                           tblptrh	equ	0xFF7
 55028                           tblptrl	equ	0xFF6
 55029                           tablat	equ	0xFF5
 55030                           prodh	equ	0xFF4
 55031                           prodl	equ	0xFF3
 55032                           intcon	equ	0xFF2
 55033                           indf0	equ	0xFEF
 55034                           postinc0	equ	0xFEE
 55035                           fsr0h	equ	0xFEA
 55036                           fsr0l	equ	0xFE9
 55037                           wreg	equ	0xFE8
 55038                           indf1	equ	0xFE7
 55039                           postinc1	equ	0xFE6
 55040                           postdec1	equ	0xFE5
 55041                           plusw1	equ	0xFE3
 55042                           fsr1h	equ	0xFE2
 55043                           fsr1l	equ	0xFE1
 55044                           indf2	equ	0xFDF
 55045                           postinc2	equ	0xFDE
 55046                           postdec2	equ	0xFDD
 55047                           plusw2	equ	0xFDB
 55048                           fsr2h	equ	0xFDA
 55049                           fsr2l	equ	0xFD9
 55050                           status	equ	0xFD8
 55051                           
 55052 ;; *************** function i2_USBTransferOnePacket *****************
 55053 ;; Defined at:
 55054 ;;		line 995 in file "usb_device.c"
 55055 ;; Parameters:    Size  Location     Type
 55056 ;;  ep              1    wreg     unsigned char 
 55057 ;;  dir             1    0[COMRAM] unsigned char 
 55058 ;;  data            2    1[COMRAM] PTR unsigned char 
 55059 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 55060 ;;		 -> msd_cbw(31), NULL(0), 
 55061 ;;  len             1    3[COMRAM] unsigned char 
 55062 ;; Auto vars:     Size  Location     Type
 55063 ;;  ep              1    8[COMRAM] unsigned char 
 55064 ;;  USBTransferO    2    9[COMRAM] PTR volatile struct __BD
 55065 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 55066 ;; Return value:  Size  Location     Type
 55067 ;;                  2    0[COMRAM] PTR void 
 55068 ;; Registers used:
 55069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 55070 ;; Tracked objects:
 55071 ;;		On entry : 0/0
 55072 ;;		On exit  : 0/0
 55073 ;;		Unchanged: 0/0
 55074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55075 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55076 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55077 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55078 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55079 ;;Total ram usage:       11 bytes
 55080 ;; Hardware stack levels used:    1
 55081 ;; This function calls:
 55082 ;;		Nothing
 55083 ;; This function is called by:
 55084 ;;		_USBMSDInit
 55085 ;;		_USBCheckMSDRequest
 55086 ;;		_MSDTransferTerminated
 55087 ;;		_APP_DeviceCustomHIDInitialize
 55088 ;; This function uses a non-reentrant model
 55089 ;;
 55090                           
 55091                           	psect	text234
 55092  01174C                     __ptext234:
 55093                           	opt stack 0
 55094  01174C                     i2_USBTransferOnePacket:
 55095                           	opt stack 14
 55096                           
 55097                           ;incstack = 0
 55098                           ;i2USBTransferOnePacket@ep stored from wreg
 55099  01174C  6E09               	movwf	i2USBTransferOnePacket@ep,c
 55100                           
 55101                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 55102  01174E  5001               	movf	i2USBTransferOnePacket@dir,w,c
 55103  011750  B4D8               	btfsc	status,2,c
 55104  011752  D007               	goto	i2l184
 55105                           
 55106                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 55107  011754  5009               	movf	i2USBTransferOnePacket@ep,w,c
 55108  011756  0D02               	mullw	2
 55109  011758  0E0F               	movlw	low _pBDTEntryIn
 55110  01175A  24F3               	addwf	prodl,w,c
 55111  01175C  6ED9               	movwf	fsr2l,c
 55112  01175E  0E01               	movlw	high _pBDTEntryIn
 55113  011760  D006               	goto	L81
 55114  011762                     i2l184:
 55115                           
 55116                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 55117  011762  5009               	movf	i2USBTransferOnePacket@ep,w,c
 55118  011764  0D02               	mullw	2
 55119  011766  0E15               	movlw	low _pBDTEntryOut
 55120  011768  24F3               	addwf	prodl,w,c
 55121  01176A  6ED9               	movwf	fsr2l,c
 55122  01176C  0E01               	movlw	high _pBDTEntryOut
 55123  01176E                     L81:
 55124  01176E  20F4               	addwfc	prodh,w,c
 55125  011770  6EDA               	movwf	fsr2h,c
 55126  011772  CFDE F00A          	movff	postinc2,i2USBTransferOnePacket@handle
 55127  011776  CFDD F00B          	movff	postdec2,i2USBTransferOnePacket@handle+1
 55128                           
 55129                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 55130  01177A  500A               	movf	i2USBTransferOnePacket@handle,w,c
 55131  01177C  100B               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 55132  01177E  A4D8               	btfss	status,2,c
 55133  011780  D005               	goto	i2l186
 55134                           
 55135                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 55136  011782  0E00               	movlw	0
 55137  011784  6E01               	movwf	?i2_USBTransferOnePacket,c
 55138  011786  0E00               	movlw	0
 55139  011788  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 55140  01178A  0012               	return	
 55141  01178C                     i2l186:
 55142                           
 55143                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 55144  01178C  EE20 F002          	lfsr	2,2
 55145  011790  500A               	movf	i2USBTransferOnePacket@handle,w,c
 55146  011792  26D9               	addwf	fsr2l,f,c
 55147  011794  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 55148  011796  22DA               	addwfc	fsr2h,f,c
 55149  011798  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 55150  01179C  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 55151                           
 55152                           ;usb_device.c: 1030: handle->CNT = len;
 55153  0117A0  EE20 F001          	lfsr	2,1
 55154  0117A4  500A               	movf	i2USBTransferOnePacket@handle,w,c
 55155  0117A6  26D9               	addwf	fsr2l,f,c
 55156  0117A8  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 55157  0117AA  22DA               	addwfc	fsr2h,f,c
 55158  0117AC  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 55159                           
 55160                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 55161  0117B0  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 55162  0117B4  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 55163  0117B8  0E40               	movlw	64
 55164  0117BA  16DF               	andwf	indf2,f,c
 55165                           
 55166                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 55167  0117BC  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 55168  0117C0  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 55169  0117C4  0E00               	movlw	0
 55170  0117C6  86DB               	bsf	plusw2,3,c
 55171                           
 55172                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 55173  0117C8  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 55174  0117CC  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 55175  0117D0  0E00               	movlw	0
 55176  0117D2  8EDB               	bsf	plusw2,7,c
 55177                           
 55178                           ;usb_device.c: 1036: if(dir != 0)
 55179  0117D4  5001               	movf	i2USBTransferOnePacket@dir,w,c
 55180  0117D6  B4D8               	btfsc	status,2,c
 55181  0117D8  D018               	goto	i2l188
 55182                           
 55183                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 55184  0117DA  5009               	movf	i2USBTransferOnePacket@ep,w,c
 55185  0117DC  0D02               	mullw	2
 55186  0117DE  0E0F               	movlw	low _pBDTEntryIn
 55187  0117E0  24F3               	addwf	prodl,w,c
 55188  0117E2  6ED9               	movwf	fsr2l,c
 55189  0117E4  0E01               	movlw	high _pBDTEntryIn
 55190  0117E6  20F4               	addwfc	prodh,w,c
 55191  0117E8  6EDA               	movwf	fsr2h,c
 55192  0117EA  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 55193  0117EE  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 55194  0117F2  0E04               	movlw	4
 55195  0117F4  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 55196  0117F6  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 55197  0117F8  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 55198  0117FA  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 55199  0117FC  5009               	movf	i2USBTransferOnePacket@ep,w,c
 55200  0117FE  0D02               	mullw	2
 55201  011800  0E0F               	movlw	low _pBDTEntryIn
 55202  011802  24F3               	addwf	prodl,w,c
 55203  011804  6ED9               	movwf	fsr2l,c
 55204  011806  0E01               	movlw	high _pBDTEntryIn
 55205  011808  D017               	goto	L82
 55206  01180A                     i2l188:
 55207                           
 55208                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 55209  01180A  5009               	movf	i2USBTransferOnePacket@ep,w,c
 55210  01180C  0D02               	mullw	2
 55211  01180E  0E15               	movlw	low _pBDTEntryOut
 55212  011810  24F3               	addwf	prodl,w,c
 55213  011812  6ED9               	movwf	fsr2l,c
 55214  011814  0E01               	movlw	high _pBDTEntryOut
 55215  011816  20F4               	addwfc	prodh,w,c
 55216  011818  6EDA               	movwf	fsr2h,c
 55217  01181A  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 55218  01181E  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 55219  011822  0E04               	movlw	4
 55220  011824  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 55221  011826  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 55222  011828  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 55223  01182A  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 55224  01182C  5009               	movf	i2USBTransferOnePacket@ep,w,c
 55225  01182E  0D02               	mullw	2
 55226  011830  0E15               	movlw	low _pBDTEntryOut
 55227  011832  24F3               	addwf	prodl,w,c
 55228  011834  6ED9               	movwf	fsr2l,c
 55229  011836  0E01               	movlw	high _pBDTEntryOut
 55230  011838                     L82:
 55231  011838  20F4               	addwfc	prodh,w,c
 55232  01183A  6EDA               	movwf	fsr2h,c
 55233  01183C  C007  FFDE         	movff	??i2_USBTransferOnePacket+2,postinc2
 55234  011840  C008  FFDD         	movff	??i2_USBTransferOnePacket+3,postdec2
 55235                           
 55236                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 55237  011844  C00A  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 55238  011848  C00B  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 55239  01184C  0012               	return	
 55240  01184E                     __end_ofi2_USBTransferOnePacket:
 55241                           	opt stack 0
 55242                           tosu	equ	0xFFF
 55243                           tosh	equ	0xFFE
 55244                           tosl	equ	0xFFD
 55245                           pclatu	equ	0xFFB
 55246                           pclath	equ	0xFFA
 55247                           tblptru	equ	0xFF8
 55248                           tblptrh	equ	0xFF7
 55249                           tblptrl	equ	0xFF6
 55250                           tablat	equ	0xFF5
 55251                           prodh	equ	0xFF4
 55252                           prodl	equ	0xFF3
 55253                           intcon	equ	0xFF2
 55254                           indf0	equ	0xFEF
 55255                           postinc0	equ	0xFEE
 55256                           fsr0h	equ	0xFEA
 55257                           fsr0l	equ	0xFE9
 55258                           wreg	equ	0xFE8
 55259                           indf1	equ	0xFE7
 55260                           postinc1	equ	0xFE6
 55261                           postdec1	equ	0xFE5
 55262                           plusw1	equ	0xFE3
 55263                           fsr1h	equ	0xFE2
 55264                           fsr1l	equ	0xFE1
 55265                           indf2	equ	0xFDF
 55266                           postinc2	equ	0xFDE
 55267                           postdec2	equ	0xFDD
 55268                           plusw2	equ	0xFDB
 55269                           fsr2h	equ	0xFDA
 55270                           fsr2l	equ	0xFD9
 55271                           status	equ	0xFD8
 55272                           
 55273 ;; *************** function _USBEnableEndpoint *****************
 55274 ;; Defined at:
 55275 ;;		line 878 in file "usb_device.c"
 55276 ;; Parameters:    Size  Location     Type
 55277 ;;  ep              1    wreg     unsigned char 
 55278 ;;  options         1    8[COMRAM] unsigned char 
 55279 ;; Auto vars:     Size  Location     Type
 55280 ;;  ep              1   11[COMRAM] unsigned char 
 55281 ;;  p               2    9[COMRAM] PTR unsigned char 
 55282 ;;		 -> UEP0(1), 
 55283 ;; Return value:  Size  Location     Type
 55284 ;;                  1    wreg      void 
 55285 ;; Registers used:
 55286 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 55287 ;; Tracked objects:
 55288 ;;		On entry : 0/0
 55289 ;;		On exit  : 0/0
 55290 ;;		Unchanged: 0/0
 55291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55292 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55293 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55295 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55296 ;;Total ram usage:        4 bytes
 55297 ;; Hardware stack levels used:    1
 55298 ;; Hardware stack levels required when called:    1
 55299 ;; This function calls:
 55300 ;;		_USBConfigureEndpoint
 55301 ;; This function is called by:
 55302 ;;		_APP_DeviceCustomHIDInitialize
 55303 ;;		_APP_DeviceMSDInitialize
 55304 ;; This function uses a non-reentrant model
 55305 ;;
 55306                           
 55307                           	psect	text235
 55308  0157E2                     __ptext235:
 55309                           	opt stack 0
 55310  0157E2                     _USBEnableEndpoint:
 55311                           	opt stack 13
 55312                           
 55313                           ;incstack = 0
 55314                           ;USBEnableEndpoint@ep stored from wreg
 55315  0157E2  6E0C               	movwf	USBEnableEndpoint@ep,c
 55316                           
 55317                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 55318  0157E4  A409               	btfss	USBEnableEndpoint@options,2,c
 55319  0157E6  D005               	goto	i2l179
 55320                           
 55321                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 55322  0157E8  0E00               	movlw	0
 55323  0157EA  6E01               	movwf	USBConfigureEndpoint@direction,c
 55324  0157EC  500C               	movf	USBEnableEndpoint@ep,w,c
 55325  0157EE  EC62  F09E         	call	_USBConfigureEndpoint
 55326  0157F2                     i2l179:
 55327                           
 55328                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 55329  0157F2  A209               	btfss	USBEnableEndpoint@options,1,c
 55330  0157F4  D005               	goto	i2l180
 55331                           
 55332                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 55333  0157F6  0E01               	movlw	1
 55334  0157F8  6E01               	movwf	USBConfigureEndpoint@direction,c
 55335  0157FA  500C               	movf	USBEnableEndpoint@ep,w,c
 55336  0157FC  EC62  F09E         	call	_USBConfigureEndpoint
 55337  015800                     i2l180:
 55338                           
 55339                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 55340  015800  500C               	movf	USBEnableEndpoint@ep,w,c
 55341  015802  0D01               	mullw	1
 55342  015804  0E26               	movlw	38
 55343  015806  24F3               	addwf	prodl,w,c
 55344  015808  6E0A               	movwf	USBEnableEndpoint@p,c
 55345  01580A  0E0F               	movlw	15
 55346  01580C  20F4               	addwfc	prodh,w,c
 55347  01580E  6E0B               	movwf	USBEnableEndpoint@p+1,c
 55348                           
 55349                           ;usb_device.c: 901: *p = options;
 55350  015810  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 55351  015814  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 55352  015818  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 55353  01581C  0012               	return		;funcret
 55354  01581E                     __end_of_USBEnableEndpoint:
 55355                           	opt stack 0
 55356                           tosu	equ	0xFFF
 55357                           tosh	equ	0xFFE
 55358                           tosl	equ	0xFFD
 55359                           pclatu	equ	0xFFB
 55360                           pclath	equ	0xFFA
 55361                           tblptru	equ	0xFF8
 55362                           tblptrh	equ	0xFF7
 55363                           tblptrl	equ	0xFF6
 55364                           tablat	equ	0xFF5
 55365                           prodh	equ	0xFF4
 55366                           prodl	equ	0xFF3
 55367                           intcon	equ	0xFF2
 55368                           indf0	equ	0xFEF
 55369                           postinc0	equ	0xFEE
 55370                           fsr0h	equ	0xFEA
 55371                           fsr0l	equ	0xFE9
 55372                           wreg	equ	0xFE8
 55373                           indf1	equ	0xFE7
 55374                           postinc1	equ	0xFE6
 55375                           postdec1	equ	0xFE5
 55376                           plusw1	equ	0xFE3
 55377                           fsr1h	equ	0xFE2
 55378                           fsr1l	equ	0xFE1
 55379                           indf2	equ	0xFDF
 55380                           postinc2	equ	0xFDE
 55381                           postdec2	equ	0xFDD
 55382                           plusw2	equ	0xFDB
 55383                           fsr2h	equ	0xFDA
 55384                           fsr2l	equ	0xFD9
 55385                           status	equ	0xFD8
 55386                           
 55387 ;; *************** function _USBConfigureEndpoint *****************
 55388 ;; Defined at:
 55389 ;;		line 1545 in file "usb_device.c"
 55390 ;; Parameters:    Size  Location     Type
 55391 ;;  EPNum           1    wreg     unsigned char 
 55392 ;;  direction       1    0[COMRAM] unsigned char 
 55393 ;; Auto vars:     Size  Location     Type
 55394 ;;  EPNum           1    5[COMRAM] unsigned char 
 55395 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 55396 ;;		 -> BDT(48), 
 55397 ;; Return value:  Size  Location     Type
 55398 ;;                  1    wreg      void 
 55399 ;; Registers used:
 55400 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 55401 ;; Tracked objects:
 55402 ;;		On entry : 0/0
 55403 ;;		On exit  : 0/0
 55404 ;;		Unchanged: 0/0
 55405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55406 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55407 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55408 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55409 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55410 ;;Total ram usage:        8 bytes
 55411 ;; Hardware stack levels used:    1
 55412 ;; This function calls:
 55413 ;;		Nothing
 55414 ;; This function is called by:
 55415 ;;		_USBEnableEndpoint
 55416 ;; This function uses a non-reentrant model
 55417 ;;
 55418                           
 55419                           	psect	text236
 55420  013CC4                     __ptext236:
 55421                           	opt stack 0
 55422  013CC4                     _USBConfigureEndpoint:
 55423                           	opt stack 13
 55424                           
 55425                           ;incstack = 0
 55426                           ;USBConfigureEndpoint@EPNum stored from wreg
 55427  013CC4  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 55428                           
 55429                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 55430  013CC6  0E00               	movlw	0
 55431  013CC8  6E07               	movwf	USBConfigureEndpoint@handle,c
 55432  013CCA  0E0D               	movlw	13
 55433  013CCC  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 55434                           
 55435                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 55436  013CCE  5001               	movf	USBConfigureEndpoint@direction,w,c
 55437  013CD0  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 55438  013CD2  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 55439  013CD4  90D8               	bcf	status,0,c
 55440  013CD6  3602               	rlcf	??_USBConfigureEndpoint,f,c
 55441  013CD8  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 55442  013CDA  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 55443  013CDC  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 55444  013CDE  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 55445  013CE0  90D8               	bcf	status,0,c
 55446  013CE2  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 55447  013CE4  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 55448  013CE6  90D8               	bcf	status,0,c
 55449  013CE8  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 55450  013CEA  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 55451  013CEC  5002               	movf	??_USBConfigureEndpoint,w,c
 55452  013CEE  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 55453  013CF0  5003               	movf	??_USBConfigureEndpoint+1,w,c
 55454  013CF2  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 55455  013CF4  90D8               	bcf	status,0,c
 55456  013CF6  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 55457  013CF8  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 55458  013CFA  90D8               	bcf	status,0,c
 55459  013CFC  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 55460  013CFE  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 55461  013D00  5004               	movf	??_USBConfigureEndpoint+2,w,c
 55462  013D02  2607               	addwf	USBConfigureEndpoint@handle,f,c
 55463  013D04  5005               	movf	??_USBConfigureEndpoint+3,w,c
 55464  013D06  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 55465                           
 55466                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 55467  013D08  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 55468  013D0C  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 55469  013D10  9EDF               	bcf	indf2,7,c
 55470                           
 55471                           ;usb_device.c: 1559: if(direction == 0)
 55472  013D12  5001               	movf	USBConfigureEndpoint@direction,w,c
 55473  013D14  A4D8               	btfss	status,2,c
 55474  013D16  D007               	goto	i2l226
 55475                           
 55476                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 55477  013D18  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 55478  013D1A  0D02               	mullw	2
 55479  013D1C  0E15               	movlw	low _pBDTEntryOut
 55480  013D1E  24F3               	addwf	prodl,w,c
 55481  013D20  6ED9               	movwf	fsr2l,c
 55482  013D22  0E01               	movlw	high _pBDTEntryOut
 55483  013D24  D006               	goto	L83
 55484  013D26                     i2l226:
 55485                           
 55486                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 55487  013D26  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 55488  013D28  0D02               	mullw	2
 55489  013D2A  0E0F               	movlw	low _pBDTEntryIn
 55490  013D2C  24F3               	addwf	prodl,w,c
 55491  013D2E  6ED9               	movwf	fsr2l,c
 55492  013D30  0E01               	movlw	high _pBDTEntryIn
 55493  013D32                     L83:
 55494  013D32  20F4               	addwfc	prodh,w,c
 55495  013D34  6EDA               	movwf	fsr2h,c
 55496  013D36  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 55497  013D3A  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 55498                           
 55499                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 55500  013D3E  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 55501  013D42  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 55502  013D46  9CDF               	bcf	indf2,6,c
 55503                           
 55504                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 55505  013D48  EE20 F004          	lfsr	2,4
 55506  013D4C  5007               	movf	USBConfigureEndpoint@handle,w,c
 55507  013D4E  26D9               	addwf	fsr2l,f,c
 55508  013D50  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 55509  013D52  22DA               	addwfc	fsr2h,f,c
 55510  013D54  8CDF               	bsf	indf2,6,c
 55511  013D56  0012               	return		;funcret
 55512  013D58                     __end_of_USBConfigureEndpoint:
 55513                           	opt stack 0
 55514                           tosu	equ	0xFFF
 55515                           tosh	equ	0xFFE
 55516                           tosl	equ	0xFFD
 55517                           pclatu	equ	0xFFB
 55518                           pclath	equ	0xFFA
 55519                           tblptru	equ	0xFF8
 55520                           tblptrh	equ	0xFF7
 55521                           tblptrl	equ	0xFF6
 55522                           tablat	equ	0xFF5
 55523                           prodh	equ	0xFF4
 55524                           prodl	equ	0xFF3
 55525                           intcon	equ	0xFF2
 55526                           indf0	equ	0xFEF
 55527                           postinc0	equ	0xFEE
 55528                           fsr0h	equ	0xFEA
 55529                           fsr0l	equ	0xFE9
 55530                           wreg	equ	0xFE8
 55531                           indf1	equ	0xFE7
 55532                           postinc1	equ	0xFE6
 55533                           postdec1	equ	0xFE5
 55534                           plusw1	equ	0xFE3
 55535                           fsr1h	equ	0xFE2
 55536                           fsr1l	equ	0xFE1
 55537                           indf2	equ	0xFDF
 55538                           postinc2	equ	0xFDE
 55539                           postdec2	equ	0xFDD
 55540                           plusw2	equ	0xFDB
 55541                           fsr2h	equ	0xFDA
 55542                           fsr2l	equ	0xFD9
 55543                           status	equ	0xFD8
 55544                           
 55545 ;; *************** function _USBCtrlTrfOutHandler *****************
 55546 ;; Defined at:
 55547 ;;		line 2540 in file "usb_device.c"
 55548 ;; Parameters:    Size  Location     Type
 55549 ;;		None
 55550 ;; Auto vars:     Size  Location     Type
 55551 ;;		None
 55552 ;; Return value:  Size  Location     Type
 55553 ;;                  1    wreg      void 
 55554 ;; Registers used:
 55555 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 55556 ;; Tracked objects:
 55557 ;;		On entry : 0/0
 55558 ;;		On exit  : 0/0
 55559 ;;		Unchanged: 0/0
 55560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55565 ;;Total ram usage:        0 bytes
 55566 ;; Hardware stack levels used:    1
 55567 ;; Hardware stack levels required when called:    2
 55568 ;; This function calls:
 55569 ;;		_USBCtrlTrfRxService
 55570 ;; This function is called by:
 55571 ;;		_USBCtrlEPService
 55572 ;; This function uses a non-reentrant model
 55573 ;;
 55574                           
 55575                           	psect	text237
 55576  014AF6                     __ptext237:
 55577                           	opt stack 0
 55578  014AF6                     _USBCtrlTrfOutHandler:
 55579                           	opt stack 13
 55580                           
 55581                           ;usb_device.c: 2542: if(controlTransferState == 2)
 55582                           
 55583                           ;incstack = 0
 55584  014AF6  0E02               	movlw	2
 55585  014AF8  0100               	movlb	0	; () banked
 55586  014AFA  19FF               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 55587  014AFC  A4D8               	btfss	status,2,c
 55588  014AFE  D003               	goto	i2l332
 55589                           
 55590                           ; BSR set to: 0
 55591                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 55592  014B00  EC13  F089         	call	_USBCtrlTrfRxService	;wreg free
 55593                           
 55594                           ;usb_device.c: 2545: }
 55595  014B04  0012               	return	
 55596  014B06                     i2l332:
 55597                           
 55598                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 55599  014B06  0E00               	movlw	0
 55600  014B08  0100               	movlb	0	; () banked
 55601  014B0A  6FFF               	movwf	_controlTransferState& (0+255),b	;volatile
 55602                           
 55603                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 55604  014B0C  0101               	movlb	1	; () banked
 55605  014B0E  5160               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 55606  014B10  A4D8               	btfss	status,2,c
 55607  014B12  D01F               	goto	i2l334
 55608                           
 55609                           ; BSR set to: 1
 55610                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 55611  014B14  EE20 F001          	lfsr	2,1
 55612  014B18  5059               	movf	_pBDTEntryEP0OutNext,w,c
 55613  014B1A  26D9               	addwf	fsr2l,f,c
 55614  014B1C  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 55615  014B1E  22DA               	addwfc	fsr2h,f,c
 55616  014B20  0E08               	movlw	8
 55617  014B22  6EDF               	movwf	indf2,c
 55618                           
 55619                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 55620  014B24  EE20 F002          	lfsr	2,2
 55621  014B28  5059               	movf	_pBDTEntryEP0OutNext,w,c
 55622  014B2A  26D9               	addwf	fsr2l,f,c
 55623  014B2C  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 55624  014B2E  22DA               	addwfc	fsr2h,f,c
 55625  014B30  0E30               	movlw	48
 55626  014B32  6EDE               	movwf	postinc2,c
 55627  014B34  0E0D               	movlw	13
 55628  014B36  6EDD               	movwf	postdec2,c
 55629                           
 55630                           ; BSR set to: 1
 55631                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 55632  014B38  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55633  014B3C  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55634  014B40  0E0C               	movlw	12
 55635  014B42  6EDF               	movwf	indf2,c
 55636                           
 55637                           ; BSR set to: 1
 55638                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 55639  014B44  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55640  014B48  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55641  014B4C  0E00               	movlw	0
 55642  014B4E  8EDB               	bsf	plusw2,7,c
 55643                           
 55644                           ;usb_device.c: 2563: }
 55645  014B50  0012               	return	
 55646  014B52                     i2l334:
 55647                           
 55648                           ; BSR set to: 1
 55649                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 55650                           
 55651                           ; BSR set to: 1
 55652  014B52  0E00               	movlw	0
 55653  014B54  6F60               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 55654                           
 55655                           ; BSR set to: 1
 55656  014B56  0012               	return	
 55657  014B58                     __end_of_USBCtrlTrfOutHandler:
 55658                           	opt stack 0
 55659                           tosu	equ	0xFFF
 55660                           tosh	equ	0xFFE
 55661                           tosl	equ	0xFFD
 55662                           pclatu	equ	0xFFB
 55663                           pclath	equ	0xFFA
 55664                           tblptru	equ	0xFF8
 55665                           tblptrh	equ	0xFF7
 55666                           tblptrl	equ	0xFF6
 55667                           tablat	equ	0xFF5
 55668                           prodh	equ	0xFF4
 55669                           prodl	equ	0xFF3
 55670                           intcon	equ	0xFF2
 55671                           indf0	equ	0xFEF
 55672                           postinc0	equ	0xFEE
 55673                           fsr0h	equ	0xFEA
 55674                           fsr0l	equ	0xFE9
 55675                           wreg	equ	0xFE8
 55676                           indf1	equ	0xFE7
 55677                           postinc1	equ	0xFE6
 55678                           postdec1	equ	0xFE5
 55679                           plusw1	equ	0xFE3
 55680                           fsr1h	equ	0xFE2
 55681                           fsr1l	equ	0xFE1
 55682                           indf2	equ	0xFDF
 55683                           postinc2	equ	0xFDE
 55684                           postdec2	equ	0xFDD
 55685                           plusw2	equ	0xFDB
 55686                           fsr2h	equ	0xFDA
 55687                           fsr2l	equ	0xFD9
 55688                           status	equ	0xFD8
 55689                           
 55690 ;; *************** function _USBCtrlTrfRxService *****************
 55691 ;; Defined at:
 55692 ;;		line 1854 in file "usb_device.c"
 55693 ;; Parameters:    Size  Location     Type
 55694 ;;		None
 55695 ;; Auto vars:     Size  Location     Type
 55696 ;;  byteToRead      1    1[COMRAM] unsigned char 
 55697 ;;  i               1    0[COMRAM] unsigned char 
 55698 ;; Return value:  Size  Location     Type
 55699 ;;                  1    wreg      void 
 55700 ;; Registers used:
 55701 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 55702 ;; Tracked objects:
 55703 ;;		On entry : 0/0
 55704 ;;		On exit  : 0/0
 55705 ;;		Unchanged: 0/0
 55706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55708 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55710 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55711 ;;Total ram usage:        2 bytes
 55712 ;; Hardware stack levels used:    1
 55713 ;; Hardware stack levels required when called:    1
 55714 ;; This function calls:
 55715 ;;		_USBCtrlEPAllowStatusStage
 55716 ;; This function is called by:
 55717 ;;		_USBCtrlTrfOutHandler
 55718 ;; This function uses a non-reentrant model
 55719 ;;
 55720                           
 55721                           	psect	text238
 55722  011226                     __ptext238:
 55723                           	opt stack 0
 55724  011226                     _USBCtrlTrfRxService:
 55725                           	opt stack 13
 55726                           
 55727                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 55728                           
 55729                           ;incstack = 0
 55730  011226  EE20 F001          	lfsr	2,1
 55731  01122A  505B               	movf	_pBDTEntryEP0OutCurrent,w,c
 55732  01122C  26D9               	addwf	fsr2l,f,c
 55733  01122E  505C               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 55734  011230  22DA               	addwfc	fsr2h,f,c
 55735  011232  50DF               	movf	indf2,w,c
 55736  011234  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 55737                           
 55738                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 55739  011236  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 55740  011238  0101               	movlb	1	; () banked
 55741  01123A  5D04               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 55742  01123C  0E00               	movlw	0
 55743  01123E  5905               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 55744  011240  A0D8               	btfss	status,0,c
 55745                           
 55746                           ; BSR set to: 1
 55747                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 55748  011242  C104  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 55749                           
 55750                           ; BSR set to: 1
 55751                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 55752                           
 55753                           ; BSR set to: 1
 55754  011246  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 55755  011248  5F04               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 55756  01124A  0E00               	movlw	0
 55757  01124C  5B05               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 55758                           
 55759                           ; BSR set to: 1
 55760                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 55761  01124E  0E00               	movlw	0
 55762  011250  6E01               	movwf	USBCtrlTrfRxService@i,c
 55763  011252  D011               	goto	i2l260
 55764  011254                     
 55765                           ; BSR set to: 1
 55766                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 55767                           
 55768                           ; BSR set to: 1
 55769  011254  5001               	movf	USBCtrlTrfRxService@i,w,c
 55770  011256  0D01               	mullw	1
 55771  011258  0E38               	movlw	56
 55772  01125A  24F3               	addwf	prodl,w,c
 55773  01125C  6ED9               	movwf	fsr2l,c
 55774  01125E  0E0D               	movlw	13
 55775  011260  20F4               	addwfc	prodh,w,c
 55776  011262  6EDA               	movwf	fsr2h,c
 55777  011264  C100  FFE1         	movff	_outPipes,fsr1l	;volatile
 55778  011268  C101  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 55779  01126C  CFDF FFE7          	movff	indf2,indf1
 55780                           
 55781                           ; BSR set to: 1
 55782  011270  4B00               	infsnz	_outPipes& (0+255),f,b	;volatile
 55783  011272  2B01               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 55784                           
 55785                           ; BSR set to: 1
 55786  011274  2A01               	incf	USBCtrlTrfRxService@i,f,c
 55787  011276                     i2l260:
 55788                           
 55789                           ; BSR set to: 1
 55790                           
 55791                           ; BSR set to: 1
 55792  011276  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 55793  011278  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 55794  01127A  A0D8               	btfss	status,0,c
 55795  01127C  D7EB               	goto	i2l261
 55796                           
 55797                           ; BSR set to: 1
 55798                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 55799                           
 55800                           ; BSR set to: 1
 55801  01127E  5104               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 55802  011280  1105               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 55803  011282  B4D8               	btfsc	status,2,c
 55804  011284  D032               	goto	i2l263
 55805                           
 55806                           ; BSR set to: 1
 55807                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 55808  011286  EE20 F001          	lfsr	2,1
 55809  01128A  5059               	movf	_pBDTEntryEP0OutNext,w,c
 55810  01128C  26D9               	addwf	fsr2l,f,c
 55811  01128E  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 55812  011290  22DA               	addwfc	fsr2h,f,c
 55813  011292  0E08               	movlw	8
 55814  011294  6EDF               	movwf	indf2,c
 55815                           
 55816                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 55817  011296  EE20 F002          	lfsr	2,2
 55818  01129A  5059               	movf	_pBDTEntryEP0OutNext,w,c
 55819  01129C  26D9               	addwf	fsr2l,f,c
 55820  01129E  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 55821  0112A0  22DA               	addwfc	fsr2h,f,c
 55822  0112A2  0E38               	movlw	56
 55823  0112A4  6EDE               	movwf	postinc2,c
 55824  0112A6  0E0D               	movlw	13
 55825  0112A8  6EDD               	movwf	postdec2,c
 55826                           
 55827                           ; BSR set to: 1
 55828                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 55829  0112AA  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 55830  0112AE  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 55831  0112B2  BCDF               	btfsc	indf2,6,c
 55832  0112B4  D00D               	goto	i2l264
 55833                           
 55834                           ; BSR set to: 1
 55835                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 55836  0112B6  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55837  0112BA  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55838  0112BE  0E48               	movlw	72
 55839  0112C0  6EDF               	movwf	indf2,c
 55840                           
 55841                           ; BSR set to: 1
 55842                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 55843  0112C2  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55844  0112C6  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55845  0112CA  0E00               	movlw	0
 55846  0112CC  8EDB               	bsf	plusw2,7,c
 55847                           
 55848                           ;usb_device.c: 1891: }
 55849  0112CE  0012               	return	
 55850  0112D0                     i2l264:
 55851                           
 55852                           ; BSR set to: 1
 55853                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 55854                           
 55855                           ; BSR set to: 1
 55856  0112D0  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55857  0112D4  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55858  0112D8  0E08               	movlw	8
 55859  0112DA  6EDF               	movwf	indf2,c
 55860                           
 55861                           ; BSR set to: 1
 55862                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 55863  0112DC  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55864  0112E0  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55865  0112E4  0E00               	movlw	0
 55866  0112E6  8EDB               	bsf	plusw2,7,c
 55867                           
 55868                           ; BSR set to: 1
 55869                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 55870  0112E8  0012               	return	
 55871  0112EA                     i2l263:
 55872                           
 55873                           ; BSR set to: 1
 55874                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 55875                           
 55876                           ; BSR set to: 1
 55877  0112EA  EE20 F001          	lfsr	2,1
 55878  0112EE  5059               	movf	_pBDTEntryEP0OutNext,w,c
 55879  0112F0  26D9               	addwf	fsr2l,f,c
 55880  0112F2  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 55881  0112F4  22DA               	addwfc	fsr2h,f,c
 55882  0112F6  0E08               	movlw	8
 55883  0112F8  6EDF               	movwf	indf2,c
 55884                           
 55885                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 55886  0112FA  EE20 F002          	lfsr	2,2
 55887  0112FE  5059               	movf	_pBDTEntryEP0OutNext,w,c
 55888  011300  26D9               	addwf	fsr2l,f,c
 55889  011302  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 55890  011304  22DA               	addwfc	fsr2h,f,c
 55891  011306  0E30               	movlw	48
 55892  011308  6EDE               	movwf	postinc2,c
 55893  01130A  0E0D               	movlw	13
 55894  01130C  6EDD               	movwf	postdec2,c
 55895                           
 55896                           ; BSR set to: 1
 55897                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 55898  01130E  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55899  011312  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55900  011316  0E04               	movlw	4
 55901  011318  6EDF               	movwf	indf2,c
 55902                           
 55903                           ; BSR set to: 1
 55904                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 55905  01131A  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55906  01131E  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55907  011322  0E00               	movlw	0
 55908  011324  8EDB               	bsf	plusw2,7,c
 55909                           
 55910                           ; BSR set to: 1
 55911                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 55912                           
 55913                           ; BSR set to: 1
 55914                           ;usb_device.c: 1917: {;usb_device.c: 1923: outPipes[0].pFunc();
 55915  011326  9F03               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 55916                           
 55917                           ; BSR set to: 1
 55918                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 55919  011328  515E               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 55920  01132A  A4D8               	btfss	status,2,c
 55921  01132C  0012               	return	
 55922                           
 55923                           ; BSR set to: 1
 55924                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 55925  01132E  EC69  F096         	call	_USBCtrlEPAllowStatusStage	;wreg free
 55926  011332  0012               	return	
 55927  011334                     __end_of_USBCtrlTrfRxService:
 55928                           	opt stack 0
 55929                           tosu	equ	0xFFF
 55930                           tosh	equ	0xFFE
 55931                           tosl	equ	0xFFD
 55932                           pclatu	equ	0xFFB
 55933                           pclath	equ	0xFFA
 55934                           tblptru	equ	0xFF8
 55935                           tblptrh	equ	0xFF7
 55936                           tblptrl	equ	0xFF6
 55937                           tablat	equ	0xFF5
 55938                           prodh	equ	0xFF4
 55939                           prodl	equ	0xFF3
 55940                           intcon	equ	0xFF2
 55941                           indf0	equ	0xFEF
 55942                           postinc0	equ	0xFEE
 55943                           fsr0h	equ	0xFEA
 55944                           fsr0l	equ	0xFE9
 55945                           wreg	equ	0xFE8
 55946                           indf1	equ	0xFE7
 55947                           postinc1	equ	0xFE6
 55948                           postdec1	equ	0xFE5
 55949                           plusw1	equ	0xFE3
 55950                           fsr1h	equ	0xFE2
 55951                           fsr1l	equ	0xFE1
 55952                           indf2	equ	0xFDF
 55953                           postinc2	equ	0xFDE
 55954                           postdec2	equ	0xFDD
 55955                           plusw2	equ	0xFDB
 55956                           fsr2h	equ	0xFDA
 55957                           fsr2l	equ	0xFD9
 55958                           status	equ	0xFD8
 55959                           
 55960 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 55961 ;; Defined at:
 55962 ;;		line 1418 in file "usb_device.c"
 55963 ;; Parameters:    Size  Location     Type
 55964 ;;		None
 55965 ;; Auto vars:     Size  Location     Type
 55966 ;;		None
 55967 ;; Return value:  Size  Location     Type
 55968 ;;                  1    wreg      void 
 55969 ;; Registers used:
 55970 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 55971 ;; Tracked objects:
 55972 ;;		On entry : 0/0
 55973 ;;		On exit  : 0/0
 55974 ;;		Unchanged: 0/0
 55975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55980 ;;Total ram usage:        0 bytes
 55981 ;; Hardware stack levels used:    1
 55982 ;; This function calls:
 55983 ;;		Nothing
 55984 ;; This function is called by:
 55985 ;;		_USBDeviceTasks
 55986 ;;		_USBCtrlEPServiceComplete
 55987 ;;		_USBCtrlTrfRxService
 55988 ;; This function uses a non-reentrant model
 55989 ;;
 55990                           
 55991                           	psect	text239
 55992  012CD2                     __ptext239:
 55993                           	opt stack 0
 55994  012CD2                     _USBCtrlEPAllowStatusStage:
 55995                           	opt stack 13
 55996                           
 55997                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 55998                           
 55999                           ;incstack = 0
 56000  012CD2  0101               	movlb	1	; () banked
 56001  012CD4  515D               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 56002  012CD6  A4D8               	btfss	status,2,c
 56003  012CD8  0012               	return	
 56004                           
 56005                           ; BSR set to: 1
 56006                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 56007  012CDA  0E01               	movlw	1
 56008  012CDC  6F5D               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 56009                           
 56010                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 56011  012CDE  515C               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 56012  012CE0  A4D8               	btfss	status,2,c
 56013  012CE2  0012               	return	
 56014                           
 56015                           ; BSR set to: 1
 56016                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 56017  012CE4  0E01               	movlw	1
 56018  012CE6  6F5C               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 56019                           
 56020                           ; BSR set to: 1
 56021                           ;usb_device.c: 1434: if(controlTransferState == 2)
 56022  012CE8  0E02               	movlw	2
 56023  012CEA  0100               	movlb	0	; () banked
 56024  012CEC  19FF               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 56025  012CEE  A4D8               	btfss	status,2,c
 56026  012CF0  D016               	goto	i2l214
 56027                           
 56028                           ; BSR set to: 0
 56029                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 56030  012CF2  0101               	movlb	1	; () banked
 56031  012CF4  EE20 F001          	lfsr	2,1
 56032  012CF8  510F               	movf	_pBDTEntryIn& (0+255),w,b
 56033  012CFA  26D9               	addwf	fsr2l,f,c
 56034  012CFC  5110               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 56035  012CFE  22DA               	addwfc	fsr2h,f,c
 56036  012D00  0E00               	movlw	0
 56037  012D02  6EDF               	movwf	indf2,c
 56038                           
 56039                           ; BSR set to: 1
 56040                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 56041  012D04  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 56042  012D08  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 56043  012D0C  0E48               	movlw	72
 56044  012D0E  6EDF               	movwf	indf2,c
 56045                           
 56046                           ; BSR set to: 1
 56047                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 56048  012D10  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 56049  012D14  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 56050  012D18  0E00               	movlw	0
 56051  012D1A  8EDB               	bsf	plusw2,7,c
 56052                           
 56053                           ;usb_device.c: 1439: }
 56054  012D1C  0012               	return	
 56055  012D1E                     i2l214:
 56056                           
 56057                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 56058                           
 56059                           ; BSR set to: 1
 56060  012D1E  0100               	movlb	0	; () banked
 56061  012D20  05FF               	decf	_controlTransferState& (0+255),w,b	;volatile
 56062  012D22  A4D8               	btfss	status,2,c
 56063  012D24  0012               	return	
 56064                           
 56065                           ; BSR set to: 0
 56066                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 56067  012D26  0E00               	movlw	0
 56068  012D28  0101               	movlb	1	; () banked
 56069  012D2A  6F60               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 56070                           
 56071                           ; BSR set to: 1
 56072                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 56073  012D2C  EE20 F001          	lfsr	2,1
 56074  012D30  505B               	movf	_pBDTEntryEP0OutCurrent,w,c
 56075  012D32  26D9               	addwf	fsr2l,f,c
 56076  012D34  505C               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 56077  012D36  22DA               	addwfc	fsr2h,f,c
 56078  012D38  0E08               	movlw	8
 56079  012D3A  6EDF               	movwf	indf2,c
 56080                           
 56081                           ; BSR set to: 1
 56082                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 56083  012D3C  EE20 F002          	lfsr	2,2
 56084  012D40  505B               	movf	_pBDTEntryEP0OutCurrent,w,c
 56085  012D42  26D9               	addwf	fsr2l,f,c
 56086  012D44  505C               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 56087  012D46  22DA               	addwfc	fsr2h,f,c
 56088  012D48  0E30               	movlw	48
 56089  012D4A  6EDE               	movwf	postinc2,c
 56090  012D4C  0E0D               	movlw	13
 56091  012D4E  6EDD               	movwf	postdec2,c
 56092                           
 56093                           ; BSR set to: 1
 56094                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 56095  012D50  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 56096  012D54  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 56097  012D58  0E04               	movlw	4
 56098  012D5A  6EDF               	movwf	indf2,c
 56099                           
 56100                           ; BSR set to: 1
 56101                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 56102  012D5C  C05B  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 56103  012D60  C05C  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 56104  012D64  0E00               	movlw	0
 56105  012D66  8EDB               	bsf	plusw2,7,c
 56106                           
 56107                           ; BSR set to: 1
 56108                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 56109  012D68  0E01               	movlw	1
 56110  012D6A  6F60               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 56111                           
 56112                           ; BSR set to: 1
 56113                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 56114  012D6C  EE20 F001          	lfsr	2,1
 56115  012D70  5059               	movf	_pBDTEntryEP0OutNext,w,c
 56116  012D72  26D9               	addwf	fsr2l,f,c
 56117  012D74  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 56118  012D76  22DA               	addwfc	fsr2h,f,c
 56119  012D78  0E08               	movlw	8
 56120  012D7A  6EDF               	movwf	indf2,c
 56121                           
 56122                           ; BSR set to: 1
 56123                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 56124  012D7C  EE20 F002          	lfsr	2,2
 56125  012D80  5059               	movf	_pBDTEntryEP0OutNext,w,c
 56126  012D82  26D9               	addwf	fsr2l,f,c
 56127  012D84  505A               	movf	_pBDTEntryEP0OutNext+1,w,c
 56128  012D86  22DA               	addwfc	fsr2h,f,c
 56129  012D88  0E30               	movlw	48
 56130  012D8A  6EDE               	movwf	postinc2,c
 56131  012D8C  0E0D               	movlw	13
 56132  012D8E  6EDD               	movwf	postdec2,c
 56133                           
 56134                           ; BSR set to: 1
 56135                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 56136  012D90  C059  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 56137  012D94  C05A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 56138  012D98  0E80               	movlw	128
 56139  012D9A  6EDF               	movwf	indf2,c
 56140                           
 56141                           ; BSR set to: 1
 56142                           
 56143                           ; BSR set to: 1
 56144                           
 56145                           ; BSR set to: 1
 56146  012D9C  0012               	return	
 56147  012D9E                     __end_of_USBCtrlEPAllowStatusStage:
 56148                           	opt stack 0
 56149                           tosu	equ	0xFFF
 56150                           tosh	equ	0xFFE
 56151                           tosl	equ	0xFFD
 56152                           pclatu	equ	0xFFB
 56153                           pclath	equ	0xFFA
 56154                           tblptru	equ	0xFF8
 56155                           tblptrh	equ	0xFF7
 56156                           tblptrl	equ	0xFF6
 56157                           tablat	equ	0xFF5
 56158                           prodh	equ	0xFF4
 56159                           prodl	equ	0xFF3
 56160                           intcon	equ	0xFF2
 56161                           indf0	equ	0xFEF
 56162                           postinc0	equ	0xFEE
 56163                           fsr0h	equ	0xFEA
 56164                           fsr0l	equ	0xFE9
 56165                           wreg	equ	0xFE8
 56166                           indf1	equ	0xFE7
 56167                           postinc1	equ	0xFE6
 56168                           postdec1	equ	0xFE5
 56169                           plusw1	equ	0xFE3
 56170                           fsr1h	equ	0xFE2
 56171                           fsr1l	equ	0xFE1
 56172                           indf2	equ	0xFDF
 56173                           postinc2	equ	0xFDE
 56174                           postdec2	equ	0xFDD
 56175                           plusw2	equ	0xFDB
 56176                           fsr2h	equ	0xFDA
 56177                           fsr2l	equ	0xFD9
 56178                           status	equ	0xFD8
 56179                           
 56180 ;; *************** function _USBCtrlTrfInHandler *****************
 56181 ;; Defined at:
 56182 ;;		line 2594 in file "usb_device.c"
 56183 ;; Parameters:    Size  Location     Type
 56184 ;;		None
 56185 ;; Auto vars:     Size  Location     Type
 56186 ;;  lastDTS         1    1[COMRAM] unsigned char 
 56187 ;; Return value:  Size  Location     Type
 56188 ;;                  1    wreg      void 
 56189 ;; Registers used:
 56190 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 56191 ;; Tracked objects:
 56192 ;;		On entry : 0/0
 56193 ;;		On exit  : 0/0
 56194 ;;		Unchanged: 0/0
 56195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 56196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56197 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56199 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56200 ;;Total ram usage:        1 bytes
 56201 ;; Hardware stack levels used:    1
 56202 ;; Hardware stack levels required when called:    1
 56203 ;; This function calls:
 56204 ;;		_USBCtrlTrfTxService
 56205 ;; This function is called by:
 56206 ;;		_USBCtrlEPService
 56207 ;; This function uses a non-reentrant model
 56208 ;;
 56209                           
 56210                           	psect	text240
 56211  012D9E                     __ptext240:
 56212                           	opt stack 0
 56213  012D9E                     _USBCtrlTrfInHandler:
 56214                           	opt stack 14
 56215                           
 56216                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 56217                           
 56218                           ;incstack = 0
 56219  012D9E  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 56220  012DA2  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 56221  012DA6  0101               	movlb	1	; () banked
 56222  012DA8  0E00               	movlw	0
 56223  012DAA  BCDF               	btfsc	indf2,6,c
 56224  012DAC  0E01               	movlw	1
 56225  012DAE  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 56226                           
 56227                           ; BSR set to: 1
 56228                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 56229  012DB0  0E04               	movlw	4
 56230  012DB2  190F               	xorwf	_pBDTEntryIn& (0+255),w,b
 56231  012DB4  6F0F               	movwf	_pBDTEntryIn& (0+255),b
 56232  012DB6  5110               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 56233  012DB8  6F10               	movwf	(_pBDTEntryIn+1)& (0+255),b
 56234                           
 56235                           ; BSR set to: 1
 56236                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 56237  012DBA  0E08               	movlw	8
 56238  012DBC  185D               	xorwf	_USBDeviceState,w,c	;volatile
 56239  012DBE  A4D8               	btfss	status,2,c
 56240  012DC0  D00C               	goto	i2l341
 56241                           
 56242                           ; BSR set to: 1
 56243                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 56244  012DC2  010D               	movlb	13	; () banked
 56245  012DC4  5132               	movf	50,w,b	;volatile
 56246  012DC6  0B7F               	andlw	127
 56247  012DC8  010F               	movlb	15	; () banked
 56248  012DCA  6F38               	movwf	56,b	;volatile
 56249                           
 56250                           ; BSR set to: 15
 56251                           ;usb_device.c: 2609: if(UADDR != 0u)
 56252  012DCC  5138               	movf	56,w,b	;volatile
 56253  012DCE  B4D8               	btfsc	status,2,c
 56254  012DD0  D002               	goto	i2l340
 56255                           
 56256                           ; BSR set to: 15
 56257                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 56258  012DD2  0E10               	movlw	16
 56259  012DD4  D001               	goto	L84
 56260  012DD6                     i2l340:
 56261                           
 56262                           ; BSR set to: 15
 56263                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 56264                           
 56265                           ; BSR set to: 15
 56266  012DD6  0E04               	movlw	4
 56267  012DD8                     L84:
 56268  012DD8  6E5D               	movwf	_USBDeviceState,c	;volatile
 56269  012DDA                     i2l341:
 56270                           
 56271                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 56272                           
 56273                           ; BSR set to: 15
 56274                           
 56275                           ; BSR set to: 15
 56276  012DDA  0100               	movlb	0	; () banked
 56277  012DDC  05FF               	decf	_controlTransferState& (0+255),w,b	;volatile
 56278  012DDE  A4D8               	btfss	status,2,c
 56279  012DE0  D03C               	goto	i2l342
 56280                           
 56281                           ; BSR set to: 0
 56282                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 56283  012DE2  0101               	movlb	1	; () banked
 56284  012DE4  EE20 F002          	lfsr	2,2
 56285  012DE8  510F               	movf	_pBDTEntryIn& (0+255),w,b
 56286  012DEA  26D9               	addwf	fsr2l,f,c
 56287  012DEC  5110               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 56288  012DEE  22DA               	addwfc	fsr2h,f,c
 56289  012DF0  0E38               	movlw	56
 56290  012DF2  6EDE               	movwf	postinc2,c
 56291  012DF4  0E0D               	movlw	13
 56292  012DF6  6EDD               	movwf	postdec2,c
 56293                           
 56294                           ; BSR set to: 1
 56295                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 56296  012DF8  EC33  F095         	call	_USBCtrlTrfTxService	;wreg free
 56297                           
 56298                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 56299  012DFC  0E02               	movlw	2
 56300  012DFE  0101               	movlb	1	; () banked
 56301  012E00  1964               	xorwf	_shortPacketStatus& (0+255),w,b	;volatile
 56302  012E02  A4D8               	btfss	status,2,c
 56303  012E04  D00D               	goto	i2l343
 56304                           
 56305                           ; BSR set to: 1
 56306                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 56307  012E06  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 56308  012E0A  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 56309  012E0E  0E04               	movlw	4
 56310  012E10  6EDF               	movwf	indf2,c
 56311                           
 56312                           ; BSR set to: 1
 56313                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 56314  012E12  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 56315  012E16  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 56316  012E1A  0E00               	movlw	0
 56317  012E1C  8EDB               	bsf	plusw2,7,c
 56318                           
 56319                           ;usb_device.c: 2635: }
 56320  012E1E  0012               	return	
 56321  012E20                     i2l343:
 56322                           
 56323                           ; BSR set to: 1
 56324                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 56325                           
 56326                           ; BSR set to: 1
 56327  012E20  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 56328  012E22  A4D8               	btfss	status,2,c
 56329  012E24  D00D               	goto	i2l345
 56330                           
 56331                           ; BSR set to: 1
 56332                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 56333  012E26  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 56334  012E2A  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 56335  012E2E  0E48               	movlw	72
 56336  012E30  6EDF               	movwf	indf2,c
 56337                           
 56338                           ; BSR set to: 1
 56339                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 56340  012E32  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 56341  012E36  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 56342  012E3A  0E00               	movlw	0
 56343  012E3C  8EDB               	bsf	plusw2,7,c
 56344                           
 56345                           ;usb_device.c: 2642: }
 56346  012E3E  0012               	return	
 56347  012E40                     i2l345:
 56348                           
 56349                           ; BSR set to: 1
 56350                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 56351                           
 56352                           ; BSR set to: 1
 56353  012E40  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 56354  012E44  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 56355  012E48  0E08               	movlw	8
 56356  012E4A  6EDF               	movwf	indf2,c
 56357                           
 56358                           ; BSR set to: 1
 56359                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 56360  012E4C  C10F  FFD9         	movff	_pBDTEntryIn,fsr2l
 56361  012E50  C110  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 56362  012E54  0E00               	movlw	0
 56363  012E56  8EDB               	bsf	plusw2,7,c
 56364                           
 56365                           ; BSR set to: 1
 56366                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 56367                           
 56368                           ; BSR set to: 1
 56369  012E58  0012               	return	
 56370  012E5A                     i2l342:
 56371                           
 56372                           ; BSR set to: 0
 56373                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 56374  012E5A  0101               	movlb	1	; () banked
 56375  012E5C  BF03               	btfsc	(_outPipes+3)& (0+255),7,b	;volatile
 56376                           
 56377                           ; BSR set to: 1
 56378                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 56379                           
 56380                           ; BSR set to: 1
 56381                           ;usb_device.c: 2658: {;usb_device.c: 2659: outPipes[0].pFunc();
 56382  012E5E  9F03               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 56383                           
 56384                           ; BSR set to: 1
 56385                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 56386                           
 56387                           ; BSR set to: 1
 56388  012E60  0E00               	movlw	0
 56389  012E62  0100               	movlb	0	; () banked
 56390  012E64  6FFF               	movwf	_controlTransferState& (0+255),b	;volatile
 56391  012E66  0012               	return	
 56392  012E68                     __end_of_USBCtrlTrfInHandler:
 56393                           	opt stack 0
 56394                           tosu	equ	0xFFF
 56395                           tosh	equ	0xFFE
 56396                           tosl	equ	0xFFD
 56397                           pclatu	equ	0xFFB
 56398                           pclath	equ	0xFFA
 56399                           tblptru	equ	0xFF8
 56400                           tblptrh	equ	0xFF7
 56401                           tblptrl	equ	0xFF6
 56402                           tablat	equ	0xFF5
 56403                           prodh	equ	0xFF4
 56404                           prodl	equ	0xFF3
 56405                           intcon	equ	0xFF2
 56406                           indf0	equ	0xFEF
 56407                           postinc0	equ	0xFEE
 56408                           fsr0h	equ	0xFEA
 56409                           fsr0l	equ	0xFE9
 56410                           wreg	equ	0xFE8
 56411                           indf1	equ	0xFE7
 56412                           postinc1	equ	0xFE6
 56413                           postdec1	equ	0xFE5
 56414                           plusw1	equ	0xFE3
 56415                           fsr1h	equ	0xFE2
 56416                           fsr1l	equ	0xFE1
 56417                           indf2	equ	0xFDF
 56418                           postinc2	equ	0xFDE
 56419                           postdec2	equ	0xFDD
 56420                           plusw2	equ	0xFDB
 56421                           fsr2h	equ	0xFDA
 56422                           fsr2l	equ	0xFD9
 56423                           status	equ	0xFD8
 56424                           
 56425 ;; *************** function _USBCtrlTrfTxService *****************
 56426 ;; Defined at:
 56427 ;;		line 1773 in file "usb_device.c"
 56428 ;; Parameters:    Size  Location     Type
 56429 ;;		None
 56430 ;; Auto vars:     Size  Location     Type
 56431 ;;  byteToSend      1    0[COMRAM] unsigned char 
 56432 ;; Return value:  Size  Location     Type
 56433 ;;                  1    wreg      void 
 56434 ;; Registers used:
 56435 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 56436 ;; Tracked objects:
 56437 ;;		On entry : 0/0
 56438 ;;		On exit  : 0/0
 56439 ;;		Unchanged: 0/0
 56440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 56441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56442 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56444 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 56445 ;;Total ram usage:        1 bytes
 56446 ;; Hardware stack levels used:    1
 56447 ;; This function calls:
 56448 ;;		Nothing
 56449 ;; This function is called by:
 56450 ;;		_USBCtrlEPAllowDataStage
 56451 ;;		_USBCtrlTrfInHandler
 56452 ;; This function uses a non-reentrant model
 56453 ;;
 56454                           
 56455                           	psect	text241
 56456  012A66                     __ptext241:
 56457                           	opt stack 0
 56458  012A66                     _USBCtrlTrfTxService:
 56459                           	opt stack 12
 56460                           
 56461                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 56462                           
 56463                           ;incstack = 0
 56464  012A66  0E08               	movlw	8
 56465  012A68  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 56466                           
 56467                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 56468  012A6A  0101               	movlb	1	; () banked
 56469  012A6C  510E               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 56470  012A6E  E110               	bnz	i2l13038
 56471  012A70  0E08               	movlw	8
 56472  012A72  5D0D               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 56473  012A74  B0D8               	btfsc	status,0,c
 56474  012A76  D00C               	goto	i2l247
 56475                           
 56476                           ; BSR set to: 1
 56477                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 56478  012A78  C10D  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 56479                           
 56480                           ; BSR set to: 1
 56481                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 56482  012A7C  5164               	movf	_shortPacketStatus& (0+255),w,b	;volatile
 56483  012A7E  A4D8               	btfss	status,2,c
 56484  012A80  D002               	goto	i2l245
 56485                           
 56486                           ; BSR set to: 1
 56487                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 56488  012A82  0E01               	movlw	1
 56489  012A84  D004               	goto	L85
 56490  012A86                     i2l245:
 56491                           
 56492                           ; BSR set to: 1
 56493                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 56494                           
 56495                           ; BSR set to: 1
 56496  012A86  0564               	decf	_shortPacketStatus& (0+255),w,b	;volatile
 56497  012A88  A4D8               	btfss	status,2,c
 56498  012A8A  D002               	goto	i2l247
 56499                           
 56500                           ; BSR set to: 1
 56501                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 56502  012A8C  0E02               	movlw	2
 56503  012A8E                     L85:
 56504  012A8E  6F64               	movwf	_shortPacketStatus& (0+255),b	;volatile
 56505  012A90                     i2l247:
 56506  012A90                     i2l13038:
 56507                           
 56508                           ; BSR set to: 1
 56509                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 56510  012A90  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 56511  012A92  5F0D               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 56512  012A94  0E00               	movlw	0
 56513  012A96  5B0E               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 56514                           
 56515                           ; BSR set to: 1
 56516                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 56517  012A98  EE20 F001          	lfsr	2,1
 56518  012A9C  510F               	movf	_pBDTEntryIn& (0+255),w,b
 56519  012A9E  26D9               	addwf	fsr2l,f,c
 56520  012AA0  5110               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 56521  012AA2  22DA               	addwfc	fsr2h,f,c
 56522  012AA4  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 56523                           
 56524                           ; BSR set to: 1
 56525                           ;usb_device.c: 1810: pDst = (volatile uint8_t*)CtrlTrfData;
 56526  012AA8  0E38               	movlw	56
 56527  012AAA  6F45               	movwf	_pDst& (0+255),b
 56528  012AAC  0E0D               	movlw	13
 56529  012AAE  6F46               	movwf	(_pDst+1)& (0+255),b
 56530                           
 56531                           ; BSR set to: 1
 56532                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 56533  012AB0  A10C               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 56534  012AB2  D01D               	goto	i2l249
 56535  012AB4  D03C               	goto	i2l253
 56536  012AB6                     
 56537                           ; BSR set to: 1
 56538                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 56539                           
 56540                           ; BSR set to: 1
 56541  012AB6  C109  FFF6         	movff	_inPipes,tblptrl	;volatile
 56542  012ABA  C10A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 56543  012ABE  0E00               	movlw	low (__mediumconst shr (0+16))
 56544  012AC0  6EF8               	movwf	tblptru,c
 56545  012AC2  C145  FFD9         	movff	_pDst,fsr2l
 56546  012AC6  C146  FFDA         	movff	_pDst+1,fsr2h
 56547  012ACA  0E0E               	movlw	(high __ramtop+-1)
 56548  012ACC  64F7               	cpfsgt	tblptrh,c
 56549  012ACE  D003               	bra	i2u1112_47
 56550  012AD0  0008               	tblrd		*
 56551  012AD2  50F5               	movf	tablat,w,c
 56552  012AD4  D005               	bra	i2u1112_40
 56553  012AD6                     i2u1112_47:
 56554  012AD6  CFF6 FFE9          	movff	tblptrl,fsr0l
 56555  012ADA  CFF7 FFEA          	movff	tblptrh,fsr0h
 56556  012ADE  50EF               	movf	indf0,w,c
 56557  012AE0                     i2u1112_40:
 56558  012AE0  6EDF               	movwf	indf2,c
 56559  012AE2  0101               	movlb	1	; () banked
 56560  012AE4  4B09               	infsnz	_inPipes& (0+255),f,b	;volatile
 56561  012AE6  2B0A               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 56562                           
 56563                           ; BSR set to: 1
 56564  012AE8  4B45               	infsnz	_pDst& (0+255),f,b
 56565  012AEA  2B46               	incf	(_pDst+1)& (0+255),f,b
 56566                           
 56567                           ; BSR set to: 1
 56568                           ;usb_device.c: 1816: byteToSend--;
 56569  012AEC  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 56570  012AEE                     i2l249:
 56571                           
 56572                           ; BSR set to: 1
 56573                           
 56574                           ; BSR set to: 1
 56575  012AEE  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 56576  012AF0  B4D8               	btfsc	status,2,c
 56577  012AF2  0012               	return	
 56578  012AF4  D7E0               	goto	i2l250
 56579  012AF6                     
 56580                           ; BSR set to: 1
 56581                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 56582                           
 56583                           ; BSR set to: 1
 56584  012AF6  C109  FFF6         	movff	_inPipes,tblptrl	;volatile
 56585  012AFA  C10A  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 56586  012AFE  0E00               	movlw	low (__mediumconst shr (0+16))
 56587  012B00  6EF8               	movwf	tblptru,c
 56588  012B02  C145  FFD9         	movff	_pDst,fsr2l
 56589  012B06  C146  FFDA         	movff	_pDst+1,fsr2h
 56590  012B0A  0E0E               	movlw	(high __ramtop+-1)
 56591  012B0C  64F7               	cpfsgt	tblptrh,c
 56592  012B0E  D003               	bra	i2u1114_47
 56593  012B10  0008               	tblrd		*
 56594  012B12  50F5               	movf	tablat,w,c
 56595  012B14  D005               	bra	i2u1114_40
 56596  012B16                     i2u1114_47:
 56597  012B16  CFF6 FFE9          	movff	tblptrl,fsr0l
 56598  012B1A  CFF7 FFEA          	movff	tblptrh,fsr0h
 56599  012B1E  50EF               	movf	indf0,w,c
 56600  012B20                     i2u1114_40:
 56601  012B20  6EDF               	movwf	indf2,c
 56602  012B22  0101               	movlb	1	; () banked
 56603  012B24  4B09               	infsnz	_inPipes& (0+255),f,b	;volatile
 56604  012B26  2B0A               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 56605                           
 56606                           ; BSR set to: 1
 56607  012B28  4B45               	infsnz	_pDst& (0+255),f,b
 56608  012B2A  2B46               	incf	(_pDst+1)& (0+255),f,b
 56609                           
 56610                           ; BSR set to: 1
 56611                           ;usb_device.c: 1824: byteToSend--;
 56612  012B2C  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 56613  012B2E                     i2l253:
 56614                           
 56615                           ; BSR set to: 1
 56616                           
 56617                           ; BSR set to: 1
 56618  012B2E  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 56619  012B30  B4D8               	btfsc	status,2,c
 56620  012B32  0012               	return	
 56621  012B34  D7E0               	goto	i2l254
 56622  012B36                     __end_of_USBCtrlTrfTxService:
 56623                           	opt stack 0
 56624                           tosu	equ	0xFFF
 56625                           tosh	equ	0xFFE
 56626                           tosl	equ	0xFFD
 56627                           pclatu	equ	0xFFB
 56628                           pclath	equ	0xFFA
 56629                           tblptru	equ	0xFF8
 56630                           tblptrh	equ	0xFF7
 56631                           tblptrl	equ	0xFF6
 56632                           tablat	equ	0xFF5
 56633                           prodh	equ	0xFF4
 56634                           prodl	equ	0xFF3
 56635                           intcon	equ	0xFF2
 56636                           indf0	equ	0xFEF
 56637                           postinc0	equ	0xFEE
 56638                           fsr0h	equ	0xFEA
 56639                           fsr0l	equ	0xFE9
 56640                           wreg	equ	0xFE8
 56641                           indf1	equ	0xFE7
 56642                           postinc1	equ	0xFE6
 56643                           postdec1	equ	0xFE5
 56644                           plusw1	equ	0xFE3
 56645                           fsr1h	equ	0xFE2
 56646                           fsr1l	equ	0xFE1
 56647                           indf2	equ	0xFDF
 56648                           postinc2	equ	0xFDE
 56649                           postdec2	equ	0xFDD
 56650                           plusw2	equ	0xFDB
 56651                           fsr2h	equ	0xFDA
 56652                           fsr2l	equ	0xFD9
 56653                           status	equ	0xFD8
 56654                           tosu	equ	0xFFF
 56655                           tosh	equ	0xFFE
 56656                           tosl	equ	0xFFD
 56657                           pclatu	equ	0xFFB
 56658                           pclath	equ	0xFFA
 56659                           tblptru	equ	0xFF8
 56660                           tblptrh	equ	0xFF7
 56661                           tblptrl	equ	0xFF6
 56662                           tablat	equ	0xFF5
 56663                           prodh	equ	0xFF4
 56664                           prodl	equ	0xFF3
 56665                           intcon	equ	0xFF2
 56666                           indf0	equ	0xFEF
 56667                           postinc0	equ	0xFEE
 56668                           fsr0h	equ	0xFEA
 56669                           fsr0l	equ	0xFE9
 56670                           wreg	equ	0xFE8
 56671                           indf1	equ	0xFE7
 56672                           postinc1	equ	0xFE6
 56673                           postdec1	equ	0xFE5
 56674                           plusw1	equ	0xFE3
 56675                           fsr1h	equ	0xFE2
 56676                           fsr1l	equ	0xFE1
 56677                           indf2	equ	0xFDF
 56678                           postinc2	equ	0xFDE
 56679                           postdec2	equ	0xFDD
 56680                           plusw2	equ	0xFDB
 56681                           fsr2h	equ	0xFDA
 56682                           fsr2l	equ	0xFD9
 56683                           status	equ	0xFD8
 56684                           
 56685                           	psect	text242
 56686  000000                     __ptext242:
 56687                           	opt stack 0
 56688                           tosu	equ	0xFFF
 56689                           tosh	equ	0xFFE
 56690                           tosl	equ	0xFFD
 56691                           pclatu	equ	0xFFB
 56692                           pclath	equ	0xFFA
 56693                           tblptru	equ	0xFF8
 56694                           tblptrh	equ	0xFF7
 56695                           tblptrl	equ	0xFF6
 56696                           tablat	equ	0xFF5
 56697                           prodh	equ	0xFF4
 56698                           prodl	equ	0xFF3
 56699                           intcon	equ	0xFF2
 56700                           indf0	equ	0xFEF
 56701                           postinc0	equ	0xFEE
 56702                           fsr0h	equ	0xFEA
 56703                           fsr0l	equ	0xFE9
 56704                           wreg	equ	0xFE8
 56705                           indf1	equ	0xFE7
 56706                           postinc1	equ	0xFE6
 56707                           postdec1	equ	0xFE5
 56708                           plusw1	equ	0xFE3
 56709                           fsr1h	equ	0xFE2
 56710                           fsr1l	equ	0xFE1
 56711                           indf2	equ	0xFDF
 56712                           postinc2	equ	0xFDE
 56713                           postdec2	equ	0xFDD
 56714                           plusw2	equ	0xFDB
 56715                           fsr2h	equ	0xFDA
 56716                           fsr2l	equ	0xFD9
 56717                           status	equ	0xFD8
 56718                           
 56719                           	psect	rparam
 56720  0000                     tosu	equ	0xFFF
 56721                           tosh	equ	0xFFE
 56722                           tosl	equ	0xFFD
 56723                           pclatu	equ	0xFFB
 56724                           pclath	equ	0xFFA
 56725                           tblptru	equ	0xFF8
 56726                           tblptrh	equ	0xFF7
 56727                           tblptrl	equ	0xFF6
 56728                           tablat	equ	0xFF5
 56729                           prodh	equ	0xFF4
 56730                           prodl	equ	0xFF3
 56731                           intcon	equ	0xFF2
 56732                           indf0	equ	0xFEF
 56733                           postinc0	equ	0xFEE
 56734                           fsr0h	equ	0xFEA
 56735                           fsr0l	equ	0xFE9
 56736                           wreg	equ	0xFE8
 56737                           indf1	equ	0xFE7
 56738                           postinc1	equ	0xFE6
 56739                           postdec1	equ	0xFE5
 56740                           plusw1	equ	0xFE3
 56741                           fsr1h	equ	0xFE2
 56742                           fsr1l	equ	0xFE1
 56743                           indf2	equ	0xFDF
 56744                           postinc2	equ	0xFDE
 56745                           postdec2	equ	0xFDD
 56746                           plusw2	equ	0xFDB
 56747                           fsr2h	equ	0xFDA
 56748                           fsr2l	equ	0xFD9
 56749                           status	equ	0xFD8
 56750                           
 56751                           	psect	temp
 56752  00005F                     btemp:
 56753                           	opt stack 0
 56754  00005F                     	ds	1
 56755  0000                     int$flags	set	btemp
 56756  0000                     wtemp8	set	btemp+1
 56757  0000                     ttemp5	set	btemp+1
 56758  0000                     ttemp6	set	btemp+4
 56759  0000                     ttemp7	set	btemp+8
 56760                           tosu	equ	0xFFF
 56761                           tosh	equ	0xFFE
 56762                           tosl	equ	0xFFD
 56763                           pclatu	equ	0xFFB
 56764                           pclath	equ	0xFFA
 56765                           tblptru	equ	0xFF8
 56766                           tblptrh	equ	0xFF7
 56767                           tblptrl	equ	0xFF6
 56768                           tablat	equ	0xFF5
 56769                           prodh	equ	0xFF4
 56770                           prodl	equ	0xFF3
 56771                           intcon	equ	0xFF2
 56772                           indf0	equ	0xFEF
 56773                           postinc0	equ	0xFEE
 56774                           fsr0h	equ	0xFEA
 56775                           fsr0l	equ	0xFE9
 56776                           wreg	equ	0xFE8
 56777                           indf1	equ	0xFE7
 56778                           postinc1	equ	0xFE6
 56779                           postdec1	equ	0xFE5
 56780                           plusw1	equ	0xFE3
 56781                           fsr1h	equ	0xFE2
 56782                           fsr1l	equ	0xFE1
 56783                           indf2	equ	0xFDF
 56784                           postinc2	equ	0xFDE
 56785                           postdec2	equ	0xFDD
 56786                           plusw2	equ	0xFDB
 56787                           fsr2h	equ	0xFDA
 56788                           fsr2l	equ	0xFD9
 56789                           status	equ	0xFD8


Data Sizes:
    Strings     69
    Constant    4715
    Data        157
    BSS         1578
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      94
    BANK0           160    159     160
    BANK1           256     60     256
    BANK2           256      0     234
    BANK3           256      0     192
    BANK4           256      0      80
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2167$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2167$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 8
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), configFile_extention(BANK2[3]), configFile_name(BANK2[8]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    stricmp@s2	PTR const unsigned char  size(2) Largest target is 24
		 -> position_display_180_string(CODE[21]), ccw_limit_string(CODE[10]), use_ccw_limit_string(CODE[14]), cw_limit_string(CODE[9]), 
		 -> use_cw_limit_string(CODE[13]), beep_duration_string(CODE[14]), maximum_speed_manual_string(CODE[21]), initial_speed_manual_string(CODE[21]), 
		 -> maximum_speed_arc_string(CODE[18]), initial_speed_arc_string(CODE[18]), maximum_speed_string(CODE[14]), minimum_speed_string(CODE[14]), 
		 -> overshoot_cost_in_steps_string(CODE[24]), inverse_direction_string(CODE[18]), overshoot_in_steps_string(CODE[19]), full_circle_in_steps_string(CODE[21]), 

    stricmp@s1	PTR const unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), i2c_eeprom_save_position@buffer(COMRAM[11]), 
		 -> os.divide_position(BANK1[2]), os.division(BANK1[2]), os.absolute_position(BANK1[2]), os.current_position_in_steps(BANK1[4]), 
		 -> ToSendDataBuffer(BANK3[64]), os(BANK1[49]), msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), i2c_eeprom_save_position@buffer(COMRAM[11]), 
		 -> os.divide_position(BANK1[2]), os.division(BANK1[2]), os.absolute_position(BANK1[2]), os.current_position_in_steps(BANK1[4]), 
		 -> ToSendDataBuffer(BANK3[64]), os(BANK1[49]), msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3759
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> STR_6(CODE[6]), STR_5(CODE[9]), STR_4(CODE[7]), STR_3(CODE[9]), 
		 -> dc_manual(CODE[80]), dc_zero(CODE[80]), STR_2(CODE[7]), STR_1(CODE[9]), 
		 -> dc_arc2(CODE[80]), dc_arc1(CODE[80]), dc_divide2(CODE[80]), dc_divide1(CODE[80]), 
		 -> dc_setup2(CODE[80]), dc_setup1(CODE[80]), dc_main(CODE[80]), dc_startup(BANK4[80]), 
		 -> i2c_eeprom_recover_position@buffer(BANK0[11]), config(BANK1[41]), os.current_position_in_degrees(BANK1[2]), os.current_position_in_steps(BANK1[4]), 
		 -> ReceivedDataBuffer(BANK3[64]), os(BANK1[49]), inq_resp(CODE[36]), RAM(DATA[3759]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3759
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> STR_6(CODE[6]), STR_5(CODE[9]), STR_4(CODE[7]), STR_3(CODE[9]), 
		 -> dc_manual(CODE[80]), dc_zero(CODE[80]), STR_2(CODE[7]), STR_1(CODE[9]), 
		 -> dc_arc2(CODE[80]), dc_arc1(CODE[80]), dc_divide2(CODE[80]), dc_divide1(CODE[80]), 
		 -> dc_setup2(CODE[80]), dc_setup1(CODE[80]), dc_main(CODE[80]), dc_startup(BANK4[80]), 
		 -> i2c_eeprom_recover_position@buffer(BANK0[11]), config(BANK1[41]), os.current_position_in_degrees(BANK1[2]), os.current_position_in_steps(BANK1[4]), 
		 -> ReceivedDataBuffer(BANK3[64]), os(BANK1[49]), inq_resp(CODE[36]), RAM(DATA[3759]), 

    ultoa@buf	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    ltoa@buf	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    ltoa@cp	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _parse_item@value_string	PTR unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _parse_item@item_string	PTR unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    _get_item@value_string	PTR unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _get_item@item_string	PTR unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    _get_item@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    _add_item@item_string	PTR unsigned char  size(2) Largest target is 24
		 -> position_display_180_string(CODE[21]), ccw_limit_string(CODE[10]), use_ccw_limit_string(CODE[14]), cw_limit_string(CODE[9]), 
		 -> use_cw_limit_string(CODE[13]), beep_duration_string(CODE[14]), maximum_speed_manual_string(CODE[21]), initial_speed_manual_string(CODE[21]), 
		 -> maximum_speed_arc_string(CODE[18]), initial_speed_arc_string(CODE[18]), maximum_speed_string(CODE[14]), minimum_speed_string(CODE[14]), 
		 -> overshoot_cost_in_steps_string(CODE[24]), inverse_direction_string(CODE[18]), overshoot_in_steps_string(CODE[19]), full_circle_in_steps_string(CODE[21]), 

    _add_item@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    _parse_set_manual_speed@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_set_manual_speed@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_set_manual_speed@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _parse_jump_steps_with_overshoot@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_jump_steps_with_overshoot@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_jump_steps_with_overshoot@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _parse_jump_steps@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_jump_steps@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_jump_steps@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _parse_command_long@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_command_long@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_command_long@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _fill_buffer_get_mode_details@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _fill_buffer_get_display@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _fill_buffer_get_status@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_parse@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_parse@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    api_parse@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    api_prepare@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_prepare@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), buffer(BIGRAMll[512]), _flash_get_status@status(BANK0[2]), msd_buffer(BIGRAMll[512]), 

    spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_buffer_read@command(COMRAM[4]), _flash_partial_read@command(BANK0[4]), _flash_get_status@command(BANK0[1]), 

    spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(BANK0[4]), 

    spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(BANK0[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(BANK0[4]), 
		 -> _flash_copy_page_to_buffer@command(BANK0[4]), _flash_wakeup@command(BANK0[1]), _flash_set_page_size@command(BANK0[4]), 

    fat_get_file_information@data	PTR struct . size(2) Largest target is 32
		 -> fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), 

    fat_modify_file@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_read_from_file_fast@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_read_from_file_fast@cluster	PTR unsigned int  size(2) Largest target is 2
		 -> fat_read_from_file@cluster(BANK0[2]), 

    fat_read_from_file_fast@cluster_number	PTR unsigned int  size(2) Largest target is 2
		 -> fat_read_from_file@cluster_number(BANK0[2]), 

    fat_read_from_file@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_create_file@extension	PTR unsigned char  size(2) Largest target is 3
		 -> configFile_used_extention(BANK2[3]), 

    fat_create_file@name	PTR unsigned char  size(2) Largest target is 8
		 -> configFile_used_name(BANK2[8]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 3
		 -> configFile_used_extention(BANK2[3]), configFile_extention(BANK2[3]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 8
		 -> configFile_used_name(BANK2[8]), configFile_name(BANK2[8]), 

    _write_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 

    _write_value_to_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _read_value_from_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _get_available_offset_from_buffer@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    flash_partial_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), 

    flash_sector_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_sector_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _display_itoa_u16@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    _display_itoa_long@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    _display_itoa@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_prepare@temp(BANK0[10]), display_content(BANK2[80]), 

    _display_signed_itoa@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    _display_padded_itoa@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    i2c_display_program_custom_character@bit_pattern	PTR unsigned char  size(2) Largest target is 8
		 -> bit_pattern_ae(CODE[8]), bit_pattern_degree(CODE[8]), bit_pattern_verticalbar(CODE[8]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    i2c_eeprom_read@data	PTR unsigned char  size(2) Largest target is 11
		 -> i2c_eeprom_recover_position@buffer(BANK0[11]), i2c_eeprom_readInt16@data(COMRAM[2]), i2c_eeprom_readUint32@data(COMRAM[4]), i2c_eeprom_readUint16@data(COMRAM[2]), 

    i2c_eeprom_write@data	PTR unsigned char  size(2) Largest target is 11
		 -> i2c_eeprom_save_position@buffer(COMRAM[11]), i2c_eeprom_writeInt16@data(COMRAM[2]), i2c_eeprom_writeUint32@data(COMRAM[4]), i2c_eeprom_writeUint16@data(COMRAM[2]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 11
		 -> i2c_eeprom_recover_position@buffer(BANK0[11]), i2c_eeprom_readInt16@data(COMRAM[2]), i2c_eeprom_readUint32@data(COMRAM[4]), i2c_eeprom_readUint16@data(COMRAM[2]), 
		 -> i2c_eeprom_readByte@addr(COMRAM[1]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_display_program_custom_character@data_array(BANK0[11]), _ic2_display_set_cgram_address@data_array(BANK0[3]), _ic2_display_set_ddram_address@data_array(BANK0[2]), i2c_display_init@init_sequence(BANK0[9]), 
		 -> _i2c_display_send_init_sequence@init_sequence(COMRAM[9]), i2c_eeprom_read@addr(BANK0[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), 
		 -> i2c_eeprom_writeByte@dat(COMRAM[2]), i2c_adc_start@configuration_byte(COMRAM[1]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(COMRAM[1]), USBActiveConfiguration(BANK1[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2623	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(COMRAM[1]), USBActiveConfiguration(BANK1[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2589	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2588	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2535	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2534	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S2167$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    S2167$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2167$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2167$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S2167$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S2167$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S2167$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> i2_ExternalFlash_MediaDetect(), ExternalFlash_MediaDetect(), 

    S2167$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S2167$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S2167$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> i2_ExternalFlash_MediaInitialize(), ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), i2c_eeprom_save_position@buffer(COMRAM[11]), 
		 -> os.divide_position(BANK1[2]), os.division(BANK1[2]), os.absolute_position(BANK1[2]), os.current_position_in_steps(BANK1[4]), 
		 -> ToSendDataBuffer(BANK3[64]), os(BANK1[49]), msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK3[64]), ReceivedDataBuffer(BANK3[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S105$pFunc	PTR FTN()void  size(3) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0

    S95$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S71$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_motor_isr
    _motor_isr->_i2c_eeprom_save_position
    _i2c_eeprom_save_position->_i2c_eeprom_write
    _i2c_eeprom_write->i2__i2c_write
    i2__i2c_write->i2__i2c_wait_idle
    i2__i2c_eeprom_busy->i2__i2c_wait_idle
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->i2_USBTransferOnePacket
    _MSDTransferTerminated->i2_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->i2_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _main->_system_init
    _motor_calculate_position_in_degrees->___fldiv
    _motor_calculate_position_in_degrees->___flmul
    _i2c_eeprom_recover_position->_i2c_eeprom_read
    _i2c_eeprom_read->__i2c_read
    __i2c_read->__i2c_wait_idle
    __i2c_eeprom_busy->__i2c_wait_idle
    _flash_init->__flash_set_page_size
    _spi_init->__spi_init
    __flash_set_page_size->__flash_is_busy
    _fat_init->_fat_get_format_status
    _fat_restore_mbr_fbr->_flash_sector_write
    _fat_get_format_status->_flash_sector_read
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_ddram_address
    __ic2_display_set_ddram_address->__i2c_write
    _display_init->_i2c_display_program_custom_character
    _i2c_display_program_custom_character->__ic2_display_set_cgram_address
    __ic2_display_set_cgram_address->__i2c_write
    _i2c_display_init->__i2c_write
    __i2c_write->__i2c_wait_idle
    __display_start->__display_itoa_u16
    __display_itoa_u16->_itoa
    _configFile_write->_fat_modify_file
    _fat_resize_file->__make_cluster_chain
    _fat_modify_file->__find_nth_cluster
    _fat_create_file->__make_cluster_chain
    __write_root->_flash_partial_write
    _flash_partial_write->__flash_compare_page_to_buffer
    __flash_copy_page_to_buffer->__flash_is_busy
    __make_cluster_chain->__get_available_cluster
    __get_available_cluster->_flash_sector_read
    __get_available_root_entry->__root_is_available
    __add_item->_ltoa
    _ltoa->_ultoa
    _ultoa->___lldiv
    _configFile_read->_fat_read_from_file
    _fat_read_from_file->_fat_read_from_file_fast
    _fat_read_from_file_fast->__find_nth_cluster
    __find_nth_cluster->__read_fat
    __read_fat->_flash_partial_read
    _fat_get_file_information->_flash_partial_read
    _fat_get_file_size->__root_is_available
    __root_is_available->_flash_partial_read
    _flash_partial_read->__flash_partial_read
    _fat_find_file->_flash_sector_read
    __parse_item->__steps_from_degrees
    _stricmp->_toupper
    _atol->___lmul
    _atoi->___wmul
    __steps_from_degrees->___fldiv
    __steps_from_degrees->___flmul
    ___flge->___xxtofl
    _motor_process_cue->__motor_run
    _encoder_statemachine->_motor_divide_jump_to_nearest
    _motor_move_degrees_int->__motor_steps_from_degrees_int
    __motor_steps_from_degrees_int->___fldiv
    __motor_steps_from_degrees_int->___flmul
    _motor_increase_manual_speed->_motor_set_manual_speed
    _motor_divide_jump_to_nearest->_motor_goto_steps
    _motor_divide_jump->_motor_goto_steps
    __step_position_from_divide_position->___fldiv
    __step_position_from_divide_position->___flmul
    _motor_decrease_manual_speed->_motor_set_manual_speed
    _motor_arc_move->_motor_move_steps
    _display_prepare->__display_itoa_long
    _motor_speed_from_index->__motor_get_speed_in_degrees
    __motor_get_speed_in_degrees->___fldiv
    ___fldiv->___xxtofl
    __display_signed_itoa->__display_padded_itoa
    __display_padded_itoa->_itoa
    __display_itoa_long->__display_itoa
    __display_itoa->_motor_speed_from_index
    _itoa->_utoa
    _utoa->___lwdiv
    _adc_read_temperature->___flmul
    ___xxtofl->___fltol
    ___flneg->___xxtofl
    ___flmul->___xxtofl
    ___fladd->___flneg
    _USBDeviceInit->_memset
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_sector_write
    _flash_sector_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->__flash_is_busy
    __flash_write_page_from_buffer->__flash_is_busy
    __flash_compare_page_to_buffer->__flash_is_busy
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_sector_read
    _flash_sector_read->__flash_partial_read
    __flash_partial_read->__flash_is_busy
    __flash_is_busy->__flash_get_status
    __flash_wakeup->_spi_tx
    __flash_get_status->_spi_tx_rx
    _APP_DeviceCustomHIDTasks->_api_parse
    _api_prepare->__fill_buffer_get_display
    __fill_buffer_get_status->_memcpy
    __fill_buffer_get_display->_display_get_character
    _api_parse->__parse_command_long
    __parse_command_short->_motor_goto_steps
    _motor_set_zero->__motor_move_back_forth
    __motor_move_back_forth->__motor_schedule_command
    _motor_move_endless->__motor_move_steps
    _motor_goto_steps->__motor_decide_direction
    __motor_decide_direction->__motor_distance_to_limit
    __parse_command_long->__parse_jump_steps
    __parse_command_long->__parse_jump_steps_with_overshoot
    __parse_set_manual_speed->_motor_set_manual_speed
    _motor_set_manual_speed->_motor_change_speed
    __parse_jump_steps_with_overshoot->_motor_move_steps
    __parse_jump_steps->_motor_move_steps
    _motor_move_steps->__motor_move_steps
    __motor_move_steps->__motor_distance_to_limit
    __motor_distance_to_limit->___lmul

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _system_init->_configFile_read

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _SYS_InterruptHigh in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _SYS_InterruptHigh in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SYS_InterruptHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  778326
                                            158 BANK0      1     1      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
               _adc_read_temperature
                    _display_prepare
                     _display_update
               _encoder_statemachine
_motor_calculate_position_in_degrees
                  _motor_process_cue
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          1     1      0  406223
                                            157 BANK0      1     1      0
                    __backlight_init
                  __system_pin_setup
                __system_timer0_init
                           _adc_init
                    _configFile_read
             _configFile_readDefault
                   _configFile_write
                       _display_init
                     _display_update
                       _encoder_init
                           _fat_init
                         _flash_init
        _i2c_eeprom_recover_position
                           _i2c_init
_motor_calculate_position_in_degrees
                         _motor_init
 ---------------------------------------------------------------------------------
 (2) _motor_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _motor_calculate_position_in_degrees                  4     4      0    9741
                                             49 BANK0      4     4      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_recover_position                         11    11      0   12617
                                             25 BANK0     11    11      0
                    _i2c_eeprom_read
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _i2c_eeprom_read                                      8     3      5    3647
                                             17 BANK0      8     3      5
                   __i2c_eeprom_busy
                          __i2c_read
                         __i2c_write
 ---------------------------------------------------------------------------------
 (4) __i2c_read                                           12     9      3     534
                                              5 BANK0     12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (5) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_eeprom_busy                                     1     1      0      23
                                              5 BANK0      1     1      0
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0   13192
               __flash_set_page_size
                           _spi_init
 ---------------------------------------------------------------------------------
 (3) _spi_init                                             1     1      0     222
                                              3 BANK0      1     1      0
                          __spi_init
 ---------------------------------------------------------------------------------
 (4) __spi_init                                            3     0      3     178
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0   12970
                                             19 BANK0      5     5      0
                     __flash_is_busy
                             _memcpy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (2) _fat_init                                             0     0      0   24913
              _fat_get_format_status
                _fat_restore_mbr_fbr
 ---------------------------------------------------------------------------------
 (3) _fat_restore_mbr_fbr                                  2     2      0   17966
                                             36 BANK0      2     2      0
                           __get_fbr
                           __get_mbr
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (3) _fat_get_format_status                                4     4      0    6947
                                             43 BANK0      4     4      0
                           __get_fbr
                           __get_mbr
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (4) __get_mbr                                             4     2      2     289
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fbr                                             4     2      2     289
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _encoder_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_update                                       1     1      0    2472
                                             16 BANK0      1     1      0
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (3) _i2c_display_write_fixed                              4     1      3     290
                                              5 BANK0      4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_display_cursor                                   3     2      1    2092
                                             13 BANK0      3     2      1
     __ic2_display_set_ddram_address
 ---------------------------------------------------------------------------------
 (4) __ic2_display_set_ddram_address                       3     3      0    1933
                                             10 BANK0      3     3      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (2) _display_init                                         0     0      0   18268
                     __display_start
                   _i2c_display_init
_i2c_display_program_custom_characte
 ---------------------------------------------------------------------------------
 (3) _i2c_display_program_custom_character                19    17      2    4270
                                             14 BANK0     19    17      2
                         __i2c_write
     __ic2_display_set_cgram_address
 ---------------------------------------------------------------------------------
 (4) __ic2_display_set_cgram_address                       4     4      0    1958
                                             10 BANK0      4     4      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_display_init                                    10    10      0    1887
                                             10 BANK0     10    10      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (4) __i2c_write                                           5     2      3    1862
                                              5 BANK0      5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (5) __i2c_wait_idle                                       5     5      0       0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (5) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_send                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) __display_start                                       1     1      0   12111
                                             28 BANK0      1     1      0
                  __display_itoa_u16
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) __display_itoa_u16                                    4     0      4    3164
                                             24 BANK0      4     0      4
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _configFile_write                                     6     6      0  233644
                                            131 BANK0      6     6      0
                          __add_item
                    _fat_create_file
                      _fat_find_file
                    _fat_modify_file
                    _fat_resize_file
 ---------------------------------------------------------------------------------
 (3) _fat_resize_file                                     47    43      4   75708
                                             76 BANK0     47    43      4
                __make_cluster_chain
                 __root_is_available
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (3) _fat_modify_file                                     66    58      8   58065
                                             65 BANK0     66    58      8
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
           _fat_get_file_information
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) _fat_create_file                                     49    41      8   85180
                                             76 BANK0     49    41      8
          __get_available_root_entry
                          __get_date
                          __get_time
                __make_cluster_chain
                        __write_root
                      _fat_find_file
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) __write_root                                          7     5      2   24113
                                             40 BANK0      7     5      2
           __offset_from_file_number
           __sector_from_file_number
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (5) _flash_partial_write                                  9     1      8   23640
                                             31 BANK0      9     1      8
      __flash_compare_page_to_buffer
         __flash_copy_page_to_buffer
                     __flash_is_busy
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (6) __flash_copy_page_to_buffer                          10     7      3    4565
                                             19 BANK0     10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) __make_cluster_chain                                 23    19      4   35886
                                             53 BANK0     23    19      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
             __get_available_cluster
  __get_available_offset_from_buffer
            __read_value_from_offset
             __write_value_to_offset
                  _flash_sector_read
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (5) __write_value_to_offset                               8     2      6     934
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) __get_available_cluster                              10     6      4    7752
                                             43 BANK0     10     6      4
    __cluster_from_sector_and_offset
  __get_available_offset_from_buffer
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (5) __get_available_offset_from_buffer                    8     4      4     712
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (6) __cluster_from_sector_and_offset                      4     0      4     226
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) __get_time                                            2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __get_date                                            2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __get_available_root_entry                            1     1      0    7485
                                             53 BANK0      1     1      0
                 __root_is_available
 ---------------------------------------------------------------------------------
 (3) __add_item                                           11     3      8    6527
                                             36 BANK0     11     3      8
                               _ltoa
 ---------------------------------------------------------------------------------
 (4) _ltoa                                                10     2      8    1853
                                             26 BANK0     10     2      8
                              _ultoa
 ---------------------------------------------------------------------------------
 (5) _ultoa                                               13     5      8    1423
                                             13 BANK0     13     5      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     337
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     518
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) _configFile_readDefault                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configFile_read                                     60    60      0   91376
                                              0 BANK1     60    60      0
                          __get_item
                        __parse_item
                      _fat_find_file
                  _fat_get_file_size
                 _fat_read_from_file
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file                                  52    42     10   42312
                                            105 BANK0     52    42     10
           _fat_get_file_information
            _fat_read_from_file_fast
 ---------------------------------------------------------------------------------
 (4) _fat_read_from_file_fast                             40    26     14   33651
                                             65 BANK0     40    26     14
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __find_nth_cluster                                   10     6      4   16816
                                             55 BANK0     10     6      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                          __read_fat
            __read_value_from_offset
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (5) __read_value_from_offset                              9     5      4     825
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (4) __read_fat                                            8     6      2    8284
                                             47 BANK0      8     6      2
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __fat_sector_from_cluster                             2     0      2     469
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) __fat_offset_from_cluster                             2     0      2     291
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __data_sector_from_cluster                            2     0      2     289
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _fat_get_file_information                             8     6      2    7751
                                             47 BANK0      8     6      2
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_size                                   13     9      4   14768
                                             53 BANK0     13     9      4
           __offset_from_file_number
                 __root_is_available
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __root_is_available                                   6     6      0    7395
                                             47 BANK0      6     6      0
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) _flash_partial_read                                   8     0      8    7123
                                             39 BANK0      8     0      8
                __flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __sector_from_file_number                             5     3      2      47
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (5) __offset_from_file_number                             5     3      2      47
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _fat_find_file                                       11     7      4    7661
                                             43 BANK0     11     7      4
                  _flash_sector_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     668
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) __parse_item                                          4     0      4   25127
                                             57 BANK0      4     0      4
                __steps_from_degrees
                               _atoi
                               _atol
                            _stricmp
 ---------------------------------------------------------------------------------
 (4) _stricmp                                              6     2      4    3184
                                              1 BANK0      6     2      4
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              1     1      0      67
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _atol                                                14    10      4    1878
                                             12 BANK0     14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2    8416
                                              6 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    7141
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) __steps_from_degrees                                  8     4      4   10723
                                             49 BANK0      8     4      4
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     716
                                             24 BANK0     12     4      8
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __get_item                                           11     5      6    1132
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_pin_setup                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __backlight_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motor_process_cue                                    0     0      0     377
                         __motor_run
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (2) __motor_run                                          12     5      7     377
                                              0 BANK0     12     5      7
 ---------------------------------------------------------------------------------
 (1) _encoder_statemachine                                 4     4      0  118358
                                             72 BANK0      4     4      0
        __divide_jump_size_decrement
        __divide_jump_size_increment
        __encoder_next_arc_step_size
     __encoder_next_divide_step_size
       __encoder_next_setup_stepsize
                     _motor_arc_move
                 _motor_change_speed
        _motor_decrease_manual_speed
                  _motor_divide_jump
       _motor_divide_jump_to_nearest
                   _motor_goto_steps
        _motor_increase_manual_speed
             _motor_move_degrees_int
                 _motor_move_endless
                     _motor_set_zero
                         _motor_stop
 ---------------------------------------------------------------------------------
 (2) _motor_move_degrees_int                              10     5      5   20726
                                             57 BANK0     10     5      5
                  __motor_move_steps
      __motor_steps_from_degrees_int
 ---------------------------------------------------------------------------------
 (3) __motor_steps_from_degrees_int                        8     4      4   12986
                                             49 BANK0      8     4      4
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _motor_increase_manual_speed                          0     0      0     645
             _motor_set_manual_speed
 ---------------------------------------------------------------------------------
 (2) _motor_divide_jump_to_nearest                        10    10      0   34265
                                             62 BANK0     10    10      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
__step_position_from_divide_position
                   _motor_goto_steps
 ---------------------------------------------------------------------------------
 (2) _motor_divide_jump                                    7     7      0   21548
                                             62 BANK0      7     7      0
__step_position_from_divide_position
                   _motor_goto_steps
 ---------------------------------------------------------------------------------
 (3) __step_position_from_divide_position                  8     4      4    9941
                                             49 BANK0      8     4      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _motor_decrease_manual_speed                          0     0      0     645
             _motor_set_manual_speed
 ---------------------------------------------------------------------------------
 (2) _motor_arc_move                                       5     5      0   18281
                                             52 BANK0      5     5      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                   _motor_move_steps
 ---------------------------------------------------------------------------------
 (2) __encoder_next_setup_stepsize                         4     2      2     111
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) __encoder_next_divide_step_size                       1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __encoder_next_arc_step_size                          4     2      2     111
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) __divide_jump_size_increment                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __divide_jump_size_decrement                          3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _display_prepare                                     14    14      0   47164
                                            102 BANK0     14    14      0
                     __display_clear
                      __display_itoa
                 __display_itoa_long
               __display_padded_itoa
       __display_position_in_degrees
               __display_signed_itoa
                             _memcpy
             _motor_speed_from_index
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _motor_speed_from_index                               2     0      2    8013
                                             61 BANK0      2     0      2
        __motor_get_speed_in_degrees
 ---------------------------------------------------------------------------------
 (3) __motor_get_speed_in_degrees                         12    10      2    7813
                                             49 BANK0     12    10      2
                            ___fldiv
                            ___fltol
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2875
                                             24 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __display_signed_itoa                                 4     0      4    4979
                                             47 BANK0      4     0      4
               __display_padded_itoa
 ---------------------------------------------------------------------------------
 (3) __display_padded_itoa                                23    18      5    4668
                                             24 BANK0     23    18      5
                               _itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (2) __display_position_in_degrees                         8     4      4      46
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) __display_itoa_long                                  15     8      7   10370
                                             87 BANK0     15     8      7
                            ___aldiv
                            ___almod
                      __display_itoa
       __display_position_in_degrees (ARG)
                             _strlen
 ---------------------------------------------------------------------------------
 (3) __display_itoa                                       24    19      5    6858
                                             63 BANK0     24    19      5
                               _itoa
             _motor_speed_from_index (ARG)
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     535
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _itoa                                                 8     2      6    2388
                                             16 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                 9     3      6    1424
                                              7 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     337
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     518
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     474
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     478
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __display_clear                                       4     4      0     136
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _adc_read_temperature                                 8     8      0   10091
                                             49 BANK0      8     8      0
                            ___fladd
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    2280
                                             10 BANK0     14    10      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4    1297
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     223
                                             24 BANK0      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    3220
                                             24 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3000
                                             28 BANK0     20    12      8
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1132
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     930
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    5     5      0      68
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0  117124
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0  117124
                                             76 BANK0      6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0  112324
                                             71 BANK0      5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   56913
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   55207
                                             57 BANK0     14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   24725
                                             47 BANK0      5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     192
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   17553
                                             36 BANK0     11     2      9
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (4) _flash_sector_write                                   5     1      4   17208
                                             31 BANK0      5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    4519
                                             19 BANK0     11     4      7
                     __flash_is_busy
                          _spi_tx_tx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_tx                                           12     4      8     532
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    4743
                                             19 BANK0     10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    5899
                                             19 BANK0     12     9      3
                  __flash_get_status
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   13450
                                             53 BANK0      4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2318
                                             10 BANK0      7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    1706
                                              8 BANK0      2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (3) _USBStallEndpoint                                     8     7      1    1661
                                              0 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    6470
                                             43 BANK0     10     2      8
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (4) _flash_sector_read                                    4     0      4    6189
                                             39 BANK0      4     0      4
                __flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __flash_partial_read                                 20    12      8    4899
                                             19 BANK0     20    12      8
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (4) __flash_is_busy                                       2     2      0    2691
                                             17 BANK0      2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1357
                                              8 BANK0      1     1      0
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) _spi_tx                                               8     4      4    1334
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2    1311
                                             12 BANK0      5     3      2
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_rx                                           12     4      8    1244
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     422
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      64
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      64
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaInitialize                        2     0      2     102
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaDetect                            2     0      2     102
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                             1     1      0   65552
               _USBTransferOnePacket
                          _api_parse
                        _api_prepare
 ---------------------------------------------------------------------------------
 (2) _api_prepare                                          5     1      4   20232
                                             16 BANK0      5     1      4
           __fill_buffer_get_display
      __fill_buffer_get_mode_details
            __fill_buffer_get_status
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_status                              2     0      2    9580
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              11     5      6    8831
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_mode_details                        4     2      2     529
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_display                            12     9      3     827
                                              4 BANK0     12     9      3
              _display_get_character
 ---------------------------------------------------------------------------------
 (4) _display_get_character                                4     3      1     133
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _api_parse                                           11     6      5   42319
                                             71 BANK0     11     6      5
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (3) __parse_command_short                                 1     1      0   21737
                                             62 BANK0      1     1      0
            _motor_clear_command_cue
                   _motor_goto_steps
                 _motor_move_endless
                     _motor_set_zero
                         _motor_stop
 ---------------------------------------------------------------------------------
 (2) _motor_stop                                           2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _motor_set_zero                                       1     1      0    2728
                                             10 BANK0      1     1      0
             __motor_move_back_forth
 ---------------------------------------------------------------------------------
 (3) __motor_move_back_forth                               2     2      0    2706
                                              8 BANK0      2     2      0
            __motor_schedule_command
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (2) _motor_move_endless                                   3     1      2    7495
                                             44 BANK0      3     1      2
                  __motor_move_steps
 ---------------------------------------------------------------------------------
 (2) _motor_goto_steps                                    12     5      7   11492
                                             50 BANK0     12     5      7
          __motor_calculate_distance
            __motor_decide_direction
                  __motor_move_steps
 ---------------------------------------------------------------------------------
 (3) __motor_decide_direction                             21    16      5    2526
                                             29 BANK0     21    16      5
          __motor_calculate_distance
           __motor_distance_to_limit
 ---------------------------------------------------------------------------------
 (4) __motor_calculate_distance                           13     9      4     581
                                              0 BANK0     13     9      4
 ---------------------------------------------------------------------------------
 (4) _motor_clear_command_cue                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) __parse_command_long                                  7     1      6   19830
                                             64 BANK0      7     1      6
                  __parse_jump_steps
   __parse_jump_steps_with_overshoot
            __parse_set_manual_speed
 ---------------------------------------------------------------------------------
 (4) __parse_set_manual_speed                              9     3      6    1069
                                              6 BANK0      9     3      6
             _motor_set_manual_speed
 ---------------------------------------------------------------------------------
 (3) _motor_set_manual_speed                               4     2      2     645
                                              2 BANK0      4     2      2
                 _motor_change_speed
 ---------------------------------------------------------------------------------
 (4) _motor_change_speed                                   2     0      2     289
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __parse_jump_steps_with_overshoot                    12     6      6    9123
                                             52 BANK0     12     6      6
                   _motor_move_steps
 ---------------------------------------------------------------------------------
 (4) __parse_jump_steps                                   12     6      6    9125
                                             52 BANK0     12     6      6
                   _motor_move_steps
 ---------------------------------------------------------------------------------
 (3) _motor_move_steps                                     8     1      7    8518
                                             44 BANK0      8     1      7
                            ___fltol (ARG)
                  __motor_move_steps
 ---------------------------------------------------------------------------------
 (3) __motor_move_steps                                   15     7      8    7095
                                             29 BANK0     15     7      8
           __motor_distance_to_limit
            __motor_schedule_command
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (4) __motor_schedule_command                              8     1      7    2646
                                              0 BANK0      8     1      7
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (2) _motor_items_in_cue                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __motor_distance_to_limit                            17    13      4    1115
                                             12 BANK0     17    13      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     956
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    3001
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _SYS_InterruptHigh                                  14    14      0   57225
                                             72 COMRAM    14    14      0
                     _USBDeviceTasks
                          _motor_isr
                           _tmr0_isr
 ---------------------------------------------------------------------------------
 (14) _tmr0_isr                                            0     0      0       0
                        _encoder_run
 ---------------------------------------------------------------------------------
 (15) _encoder_run                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _motor_isr                                          24    24      0    2291
                                             48 COMRAM    24    24      0
           _i2c_eeprom_save_position
 ---------------------------------------------------------------------------------
 (15) _i2c_eeprom_save_position                           11    11      0    2200
                                             37 COMRAM    11    11      0
                   _i2c_eeprom_write
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (16) _i2c_eeprom_write                                   27    22      5    1528
                                             10 COMRAM    27    22      5
                 i2__i2c_eeprom_busy
                       i2__i2c_write
 ---------------------------------------------------------------------------------
 (17) i2__i2c_write                                        5     2      3     186
                                              5 COMRAM     5     2      3
                        i2__i2c_send
                       i2__i2c_start
                        i2__i2c_stop
                   i2__i2c_wait_idle
 ---------------------------------------------------------------------------------
 (17) i2__i2c_eeprom_busy                                  1     1      0      23
                                              5 COMRAM     1     1      0
                        i2__i2c_send
                       i2__i2c_start
                        i2__i2c_stop
                   i2__i2c_wait_idle
 ---------------------------------------------------------------------------------
 (18) i2__i2c_wait_idle                                    5     5      0       0
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_stop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_start                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_send                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) _USBDeviceTasks                                      1     1      0   54934
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (15) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (15) _USBWakeFromSuspend                                  0     0      0    7487
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBSuspend                                          0     0      0    7487
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USBIncrement1msInternalTimers                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPService                                    1     1      0   31817
                                             29 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (16) i2_memcpy                                           11     5      6     533
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfSetupHandler                              0     0      0   31055
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (17) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCheckStdRequest                                  0     0      0   23476
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (18) _USBStdSetCfgHandler                                 1     1      0    7985
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (16) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (18) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (18) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (18) _USBStdFeatureReqHandler                             6     6      0    7958
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    7487
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
                i2_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (16) i2_SYSTEM_Initialize                                 5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (16) _USBCheckMSDRequest                                  4     4      0     736
                                             11 COMRAM     4     4      0
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) _USBCheckHIDRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _MSDTransferTerminated                               4     2      2    1075
                                             11 COMRAM     4     2      2
                 i2_USBStallEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBStallEndpoint                                  8     7      1     252
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceMSDInitialize                             0     0      0    1473
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (17) _USBMSDInit                                          3     3      0     740
                                             11 COMRAM     3     3      0
        i2_ExternalFlash_MediaDetect *
    i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (18) i2_ResetSenseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaInitialize                     2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaDetect                         2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceCustomHIDInitialize                       0     0      0    1421
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBTransferOnePacket                             11     7      4     688
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (17) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (18) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (19) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     _api_parse
       __parse_command_long
         __parse_jump_steps
           _motor_move_steps
             ___fltol (ARG)
             __motor_move_steps (ARG)
               __motor_distance_to_limit
                 ___lmul
               __motor_schedule_command
                 _motor_items_in_cue
               _motor_items_in_cue
         __parse_jump_steps_with_overshoot
           _motor_move_steps
             ___fltol (ARG)
             __motor_move_steps (ARG)
               __motor_distance_to_limit
                 ___lmul
               __motor_schedule_command
                 _motor_items_in_cue
               _motor_items_in_cue
         __parse_set_manual_speed
           _motor_set_manual_speed
             _motor_change_speed
       __parse_command_short
         _motor_clear_command_cue
         _motor_goto_steps
           __motor_calculate_distance
           __motor_decide_direction
             __motor_calculate_distance
             __motor_distance_to_limit
               ___lmul
           __motor_move_steps
             __motor_distance_to_limit
               ___lmul
             __motor_schedule_command
               _motor_items_in_cue
             _motor_items_in_cue
         _motor_move_endless
           __motor_move_steps
             __motor_distance_to_limit
               ___lmul
             __motor_schedule_command
               _motor_items_in_cue
             _motor_items_in_cue
         _motor_set_zero
           __motor_move_back_forth
             __motor_schedule_command
               _motor_items_in_cue
             _motor_items_in_cue
         _motor_stop
     _api_prepare
       __fill_buffer_get_display
         _display_get_character
       __fill_buffer_get_mode_details
       __fill_buffer_get_status
         _memcpy
       _memcpy
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_sector_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _adc_read_temperature
     ___fladd
       ___flneg (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___flmul
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___flneg
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___fltol
     ___xxtofl
       ___fltol (ARG)
   _display_prepare
     __display_clear
     __display_itoa
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _motor_speed_from_index (ARG)
         __motor_get_speed_in_degrees
           ___fldiv
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___fltol
           ___lmul
           ___xxtofl
             ___fltol (ARG)
       _strlen (ARG)
     __display_itoa_long
       ___aldiv
       ___almod
       __display_itoa
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _motor_speed_from_index (ARG)
           __motor_get_speed_in_degrees
             ___fldiv
               ___xxtofl (ARG)
                 ___fltol (ARG)
             ___fltol
             ___lmul
             ___xxtofl
               ___fltol (ARG)
         _strlen (ARG)
       __display_position_in_degrees (ARG)
       _strlen (ARG)
     __display_padded_itoa
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _strlen
     __display_position_in_degrees
     __display_signed_itoa
       __display_padded_itoa
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _strlen
     _memcpy
     _motor_speed_from_index
       __motor_get_speed_in_degrees
         ___fldiv
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___fltol
         ___lmul
         ___xxtofl
           ___fltol (ARG)
     _strlen
   _display_update
     _i2c_display_cursor
       __ic2_display_set_ddram_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
   _encoder_statemachine
     __divide_jump_size_decrement
     __divide_jump_size_increment
     __encoder_next_arc_step_size
     __encoder_next_divide_step_size
     __encoder_next_setup_stepsize
     _motor_arc_move
       ___fldiv
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___fltol
       ___xxtofl
         ___fltol (ARG)
       _motor_move_steps
         ___fltol (ARG)
         __motor_move_steps (ARG)
           __motor_distance_to_limit
             ___lmul
           __motor_schedule_command
             _motor_items_in_cue
           _motor_items_in_cue
     _motor_change_speed
     _motor_decrease_manual_speed
       _motor_set_manual_speed
         _motor_change_speed
     _motor_divide_jump
       __step_position_from_divide_position
         ___fldiv
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___fltol
         ___xxtofl
           ___fltol (ARG)
       _motor_goto_steps
         __motor_calculate_distance
         __motor_decide_direction
           __motor_calculate_distance
           __motor_distance_to_limit
             ___lmul
         __motor_move_steps
           __motor_distance_to_limit
             ___lmul
           __motor_schedule_command
             _motor_items_in_cue
           _motor_items_in_cue
     _motor_divide_jump_to_nearest
       ___fladd
         ___flneg (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___fldiv
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___fltol
       ___xxtofl
         ___fltol (ARG)
       __step_position_from_divide_position
         ___fldiv
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___fltol
         ___xxtofl
           ___fltol (ARG)
       _motor_goto_steps
         __motor_calculate_distance
         __motor_decide_direction
           __motor_calculate_distance
           __motor_distance_to_limit
             ___lmul
         __motor_move_steps
           __motor_distance_to_limit
             ___lmul
           __motor_schedule_command
             _motor_items_in_cue
           _motor_items_in_cue
     _motor_goto_steps
       __motor_calculate_distance
       __motor_decide_direction
         __motor_calculate_distance
         __motor_distance_to_limit
           ___lmul
       __motor_move_steps
         __motor_distance_to_limit
           ___lmul
         __motor_schedule_command
           _motor_items_in_cue
         _motor_items_in_cue
     _motor_increase_manual_speed
       _motor_set_manual_speed
         _motor_change_speed
     _motor_move_degrees_int
       __motor_move_steps
         __motor_distance_to_limit
           ___lmul
         __motor_schedule_command
           _motor_items_in_cue
         _motor_items_in_cue
       __motor_steps_from_degrees_int
         ___fladd
           ___flneg (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___fldiv
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___fltol
         ___xxtofl
           ___fltol (ARG)
     _motor_move_endless
       __motor_move_steps
         __motor_distance_to_limit
           ___lmul
         __motor_schedule_command
           _motor_items_in_cue
         _motor_items_in_cue
     _motor_set_zero
       __motor_move_back_forth
         __motor_schedule_command
           _motor_items_in_cue
         _motor_items_in_cue
     _motor_stop
   _motor_calculate_position_in_degrees
     ___fldiv
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___flmul
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___fltol
     ___xxtofl
       ___fltol (ARG)
   _motor_process_cue
     __motor_run
     _motor_items_in_cue
   _system_init
     __backlight_init
     __system_pin_setup
     __system_timer0_init
     _adc_init
     _configFile_read
       __get_item
       __parse_item
         __steps_from_degrees
           ___fldiv
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___flge
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___fltol
           ___xxtofl
             ___fltol (ARG)
         _atoi
           ___wmul
           _isdigit
         _atol
           ___lmul
           _isdigit
         _stricmp
           _toupper
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
         _strncmp
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _fat_read_from_file
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _fat_read_from_file_fast
           __data_sector_from_cluster
           __find_nth_cluster
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
             __read_value_from_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
     _configFile_readDefault
     _configFile_write
       __add_item
         _ltoa
           _ultoa
             ___lldiv
             ___llmod
       _fat_create_file
         __get_available_root_entry
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
         __get_date
         __get_time
         __make_cluster_chain
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __get_available_cluster
             __cluster_from_sector_and_offset
             __get_available_offset_from_buffer
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __get_available_offset_from_buffer
           __read_value_from_offset
           __write_value_to_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _flash_sector_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         __write_root
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         _fat_find_file
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _strncmp
         _memcpy
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
         _strncmp
       _fat_modify_file
         __data_sector_from_cluster
         __find_nth_cluster
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __read_value_from_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __read_fat
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _flash_partial_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_copy_page_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_is_busy
             __flash_get_status
               _spi_tx_rx
             __flash_wakeup
               _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
       _fat_resize_file
         __make_cluster_chain
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __get_available_cluster
             __cluster_from_sector_and_offset
             __get_available_offset_from_buffer
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __get_available_offset_from_buffer
           __read_value_from_offset
           __write_value_to_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _flash_sector_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __write_root
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
     _display_init
       __display_start
         __display_itoa_u16
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
         _memcpy
       _i2c_display_init
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
       _i2c_display_program_custom_character
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __ic2_display_set_cgram_address
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
     _display_update
       _i2c_display_cursor
         __ic2_display_set_ddram_address
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
       _i2c_display_write_fixed
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
     _encoder_init
     _fat_init
       _fat_get_format_status
         __get_fbr
         __get_mbr
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _fat_restore_mbr_fbr
         __get_fbr
         __get_mbr
         _flash_sector_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
     _flash_init
       __flash_set_page_size
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _memcpy
         _spi_tx
       _spi_init
         __spi_init
     _i2c_eeprom_recover_position
       _i2c_eeprom_read
         __i2c_eeprom_busy
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __i2c_read
           __i2c_acknowledge
           __i2c_get
           __i2c_not_acknowledge
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
       _memcpy
     _i2c_init
     _motor_calculate_position_in_degrees
       ___fldiv
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___fltol
       ___xxtofl
         ___fltol (ARG)
     _motor_init

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 i2_ExternalFlash_MediaDetect *
                 i2_ExternalFlash_MediaInitialize *
                 i2_ResetSenseData *
                 i2_USBTransferOnePacket *
             _MSDTransferTerminated
               i2_USBStallEndpoint
               i2_USBTransferOnePacket
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               i2_USBTransferOnePacket
             i2_SYSTEM_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               i2_ExternalFlash_MediaDetect *
               i2_ExternalFlash_MediaInitialize *
               i2_ResetSenseData *
               i2_USBTransferOnePacket *
           _MSDTransferTerminated
             i2_USBStallEndpoint
             i2_USBTransferOnePacket
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             i2_USBTransferOnePacket
           i2_SYSTEM_Initialize
       i2_memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i2_USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           i2_ExternalFlash_MediaDetect *
           i2_ExternalFlash_MediaInitialize *
           i2_ResetSenseData *
           i2_USBTransferOnePacket *
       _MSDTransferTerminated
         i2_USBStallEndpoint
         i2_USBTransferOnePacket
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         i2_USBTransferOnePacket
       i2_SYSTEM_Initialize
     i2_USBDeviceInit
       i2_memset
   _motor_isr
     _i2c_eeprom_save_position
       _i2c_eeprom_write
         i2__i2c_eeprom_busy
           i2__i2c_send
           i2__i2c_start
           i2__i2c_stop
           i2__i2c_wait_idle
         i2__i2c_write
           i2__i2c_send
           i2__i2c_start
           i2__i2c_stop
           i2__i2c_wait_idle
       i2_memcpy
   _tmr0_isr
     _encoder_run

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     400      36       66.7%
BIGRAMlh           500      0       0      35        0.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      50      13       31.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C0      11       75.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      EA       9       91.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     3C     100       7      100.0%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9F      A0       5      100.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5E       1      100.0%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3F8      31        0.0%
DATA                 0      0     7F8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Jan 05 16:00:28 2020

                           __end_of_fat_read_from_file 20DA  
                               _motor_next_speed_check 0238  
                      __size_of__write_value_to_offset 0036  
                                           _USB_SD_Ptr 9DE4  
                                         ___fldiv@aexp 0090  
                                         ___fldiv@bexp 008F  
                             fat_create_file@extension 00AE  
                                  __get_item@value_ctr 0069  
                                         ___fldiv@sign 0088  
               motor_calculate_position_in_degrees@tmp 0091  
                                  __system_timer0_init 5BEA  
                      __size_of_configFile_readDefault 0078  
                     __motor_move_steps@return_value_1 0085  
                     __motor_move_steps@return_value_2 0086  
                         __motor_schedule_command@type 0066  
                            __end_of_motor_divide_jump 30A2  
                              configFile_read@position 01FC  
                                                   _os 0165  
                                        _USBDeviceInit FF28  
                                  ___wmul@multiplicand 0062  
                                   _USBCheckHIDRequest 2382  
                          ??__data_sector_from_cluster 0062  
               __end_of__encoder_next_divide_step_size 5B60  
              __size_of__encoder_next_divide_step_size 002E  
                       __encoder_next_divide_step_size 5B32  
                                     __i2c_eeprom_busy 5CC0  
                                     ??__flash_is_busy 0071  
                           ??__sector_from_file_number 0062  
                                         __CFG_CP0$OFF 000000  
                       __root_is_available@root_sector 008F  
                                  __end_of_system_init F9CC  
                             ?_i2c_display_write_fixed 0065  
                              fat_modify_file@position 00BF  
                                      _fat_resize_file 184E  
                 USER_USB_CALLBACK_EVENT_HANDLER@event 0010  
                 USER_USB_CALLBACK_EVENT_HANDLER@pdata 0012  
                        __motor_schedule_command@speed 0064  
                                                  l206 5A68  
                                                  l207 5A66  
                                                  l145 FF72  
                                                  l147 FF9A  
                                                  l149 FFD4  
                          __end_of_USBStdGetDscHandler 06CC  
                                                  l184 1458  
                                                  l192 1396  
                                                  l186 1482  
                                                  l602 DFDC  
                                                  l188 1500  
                                                  l700 D306  
                                                  l620 49D2  
                                                  l612 0A6A  
                                                  l701 D046  
                                                  l613 0A64  
                                                  l605 DFE4  
                                                  l710 D146  
                                                  l630 C96C  
                                                  l622 49EE  
                                                  l703 D32A  
                                                  l711 D1B4  
                                                  l631 C5CA  
                                                  l615 0A6E  
                                                  l720 D2EC  
                                                  l712 D1B0  
                                                  l704 D0F2  
                                                  l640 C70E  
                                                  l624 49FA  
                                                  l608 09BE  
                                                  l641 C718  
                                                  l625 4A00  
                                                  l714 D1C8  
                                                  l706 D0F8  
                                                  l650 C812  
                                                  l642 C73C  
                                                  l634 C5DA  
                                                  l626 4A06  
                                                  l570 DFFC  
                                                  l731 0F5C  
                                                  l715 D24C  
                                                  l707 D104  
                                                  l619 4A0E  
                                                  l571 DDC4  
                                                  l708 D122  
                                                  l660 C8B8  
                                                  l652 C848  
                                                  l644 C76C  
                                                  l636 C5EA  
                                                  l580 DED2  
                                                  l900 4D38  
                                                  l709 D16E  
                                                  l661 C8CC  
                                                  l637 C5F4  
                                                  l734 0F68  
                                                  l726 0F06  
                                                  l718 D2BC  
                                                  l670 C964  
                                                  l662 C8F4  
                                                  l654 C864  
                                                  l646 C7AC  
                                                  l582 DEEA  
                                                  l735 0F90  
                                                  l719 D2D4  
                                                  l639 C648  
                                                  l591 DF5E  
                                                  l575 DDE8  
                                                  l728 0F1E  
                                                  l664 C928  
                                                  l656 C87C  
                                                  l592 DF62  
                                                  l904 4D4A  
                                                  l753 0FFA  
                                                  l737 0FCC  
                                                  l681 EA80  
                                                  l665 C8FC  
                                                  l649 C7E4  
                                                  l593 DF88  
                                                  l577 DF10  
                                                  l770 0E80  
                                                  l738 0FB2  
                                                  l690 E996  
                                                  l682 E8C2  
                                                  l666 C90E  
                                                  l578 DEF6  
                                                  l586 E01A  
                                                  l906 4D56  
                                                  l675 2F76  
                                                  l763 0ECA  
                                                  l771 0EBC  
                                                  l747 0FDA  
                                                  l691 E9C0  
                                                  l667 C924  
                                                  l587 DF30  
                                                  l579 DECA  
                                                  l764 0E34  
                                                  l684 EAA4  
                                                  l692 E9EE  
                                                  _BDT 000D00  
                                                  l677 2F92  
                                                  l757 0E08  
                                                  l749 0FE8  
                                                  l693 EA00  
                                                  l685 E91C  
                                                  l589 DF3C  
                                                  l950 3686  
                                                  l766 0E3C  
                                                  l694 EA06  
                                                  l686 E928  
                                                  l862 3B20  
                                                  l767 0E4A  
                                                  l695 EA1A  
                                                  l687 E932  
                                                  l871 3B62  
                                                  l863 3B3A  
                                                  l944 3622  
                                                  l768 0E5E  
                                                  l696 EA68  
                                                  l688 E946  
                                                  l872 3B66  
                                                  l769 0E6C  
                                                  l873 3B6C  
                                                  l867 3B72  
                                                  l869 3B94  
                                                  l897 4D68  
                                                  l986 5FAC  
                                                  l898 4D2C  
                                                  _LBA 0123  
                                        ?_display_init 0001  
                                                  _PR2 000FCB  
                                                  _LUN 029D  
                                                  _UIE 000F36  
                                                  _UIR 000F62  
                                     ??_motor_set_zero 006A  
                                   api_prepare@command 0074  
                                           _USBSuspend 5B02  
                               __end_of_display_update 5902  
                                 USBStdSetCfgHandler@i 0018  
                               i2c_eeprom_read@address 0071  
                                                  prod 000FF3  
                                                  tosl 000FFD  
                                                  wreg 000FE8  
                                       _USBDeviceTasks 01BC  
                                  ?_USBCheckHIDRequest 0001  
                                         __CFG_IESO$ON 000000  
                                       _USBDeviceState 005D  
                                         ___flmul@aexp 0089  
                                         ___flmul@bexp 008A  
                                         ?__write_root 0088  
                              __parse_item@item_string 0099  
                                         ___flmul@sign 0084  
                                         ___flmul@temp 008F  
                                         ___flmul@prod 008B  
                            __size_of_i2c_display_init 0050  
                                    ?_motor_goto_steps 0092  
                                ??_USBCtrlTrfRxService 0001  
                             __size_ofi2_USBDeviceInit 0146  
                             USBEnableEndpoint@options 0009  
                             ?__motor_decide_direction 007D  
                                    __find_nth_cluster 36C2  
                                    ??_MSDErrorHandler 0068  
                                 ?__system_timer0_init 0001  
                                  api_prepare@inBuffer 0070  
                                         ___fltol@exp1 0069  
                    __size_of__offset_from_file_number 002A  
                          __flash_write_to_buffer@data 0075  
                                                 l2000 DC3E  
                                                 l2001 DC42  
                                                 l2010 DC62  
                                                 l2002 DC46  
                                                 l1131 6076  
                                                 l2011 DC66  
                                                 l2012 DC6A  
                                                 l2004 DC4A  
                                                 l1140 603C  
                                                 l2013 DC6E  
                                                 l2005 DC4E  
                                                 l2014 DC72  
                                                 l2006 DC52  
                                                 l2007 DC56  
                                                 l1400 A386  
                                                 l2008 DC5A  
                                                 l1152 6048  
                                                 l1224 500E  
                                                 l1401 A368  
                                                 l2105 43B8  
                                                 l2009 DC5E  
                                                 l1146 606E  
                                                 l1170 3BC2  
                                                 l1082 F984  
                                                 l1411 A42C  
                                                 l1403 A372  
                                                 l2107 441E  
                                                 l1163 531C  
                                                 l1083 F9C6  
                                                 l2300 3130  
                                                 l1420 A46A  
                                                 l1412 A3FC  
                                                 l1164 52FE  
                                                 l1260 50DE  
                                                 l3101 4F4E  
                                                 l2301 30FA  
                                                 l2205 3ECE  
                                                 l1501 AF4C  
                                                 l1405 A37C  
                                                 l1261 50C0  
                                                 l3102 4F62  
                                                 l2302 3106  
                                                 l2214 3A28  
                                                 l1334 220C  
                                                 l1422 A474  
                                                 l3030 1BF4  
                                                 l1158 6034  
                                                 l2311 F226  
                                                 l1327 550C  
                                                 l1335 21F6  
                                                 l1343 55F2  
                                                 l1431 A556  
                                                 l1423 A492  
                                                 l1407 AFB0  
                                                 l2208 3F04  
                                                 l1360 E63A  
                                                 l1352 E52E  
                                                 l1432 A574  
                                                 l1424 A4D6  
                                                 l1408 A3A6  
                                                 l3120 40D6  
                                                 l2072 3364  
                                                 l2313 F238  
                                                 l2217 3A66  
                                                 l1329 5518  
                                                 l1361 E5F4  
                                                 l1353 E54C  
                                                 l1337 226A  
                                                 l1441 A78E  
                                                 l1433 A5E4  
                                                 l1409 A3F0  
                                                 l3121 40CA  
                                                 l1169 3BE0  
                                                 l2322 FC12  
                                                 l2330 FB5E  
                                                 l1362 E638  
                                                 l1370 105A  
                                                 l1338 223A  
                                                 l1450 A88A  
                                                 l1442 A75E  
                                                 l1434 A5B4  
                                                 l1426 A524  
                                                 l1418 A44A  
                                                 l3026 1B86  
                                                 l1266 42D2  
                                                 l2331 FB66  
                                                 l2323 FB2E  
                                                 l2315 F2B6  
                                                 l1603 5E14  
                                                 l1355 E5E2  
                                                 l1451 A872  
                                                 l1419 A47E  
                                                 l3035 F6DC  
                                                 l3051 BE56  
                                                 l3027 1B4E  
                                                 l1507 58D8  
                                                 l2332 FB6E  
                                                 l2308 F346  
                                                 l1364 E674  
                                                 l1348 E556  
                                                 l1460 A9B2  
                                                 l1452 A8E4  
                                                 l1444 A834  
                                                 l1436 A668  
                                                 l1428 A560  
                                                 l3060 C03C  
                                                 l3052 BE8C  
                                                 l3124 410A  
                                                 l2068 3310  
                                                 l2501 F5DE  
                                                 l2341 FBDE  
                                                 l2333 FB9E  
                                                 l2325 FB36  
                                                 l1365 E644  
                                                 l1461 AA1A  
                                                 l1453 A8B4  
                                                 l1445 A804  
                                                 l1429 A54C  
                                                 l3061 C072  
                                                 l3053 BEC2  
                                                 l3125 4118  
                                                 l3029 1BF8  
                                                 l1381 31DA  
                                                 l2350 401C  
                                                 l2334 FBA4  
                                                 l2326 FB3E  
                                                 l2318 F310  
                                                 l2270 2834  
                                                 l1358 E5C6  
                                                 l1462 A9D0  
                                                 l1438 A6F6  
                                                 l3038 F73E  
                                                 l3062 C0A8  
                                                 l3054 BEF8  
                                                 l2351 3FC0  
                                                 l2503 F5F6  
                                                 l2343 FBFA  
                                                 l2335 FBAA  
                                                 l2327 FB46  
                                                 l2271 2848  
                                                 l1703 598C  
                                                 l1359 E5DA  
                                                 l1471 ABA8  
                                                 l1463 AA2A  
                                                 l1455 A942  
                                                 l1447 A84C  
                                                 l1439 A6C6  
                                                 l3071 F15A  
                                                 l3063 C10A  
                                                 l3055 BF2E  
                                                 l1383 31FA  
                                                 l2191 5712  
                                                 l2352 3FDE  
                                                 l2504 F60E  
                                                 l2336 FBB0  
                                                 l2328 FB4E  
                                                 l2280 0AE0  
                                                 l2272 2856  
                                                 l1552 4F2A  
                                                 l1480 AC86  
                                                 l1472 AB78  
                                                 l1464 A9DC  
                                                 l1448 A87A  
                                                 l3072 F1C0  
                                                 l3064 C140  
                                                 l3056 BF64  
                                                 l3080 F4EA  
                                                 l1800 D44E  
                                                 l1376 319A  
                                                 l1544 4718  
                                                 l2192 56EE  
                                                 l2521 009C  
                                                 l2337 FBB6  
                                                 l2329 FB56  
                                                 l2265 2896  
                                                 l2273 2876  
                                                 l1553 4EE6  
                                                 l3161 2C22  
                                                 l1481 AD24  
                                                 l1465 AA84  
                                                 l1457 A97E  
                                                 l1449 A86A  
                                                 l3065 C1A2  
                                                 l3057 BF9A  
                                                 l3049 BE20  
                                                 l3081 F3DE  
                                                 l1801 D3FA  
                                                 l1545 473C  
                                                 l2193 5722  
                                                 l2362 FD3A  
                                                 l2506 F662  
                                                 l2338 FBBC  
                                                 l2282 0AE6  
                                                 l1570 4342  
                                                 l3170 2CC0  
                                                 l3162 2C3A  
                                                 l1490 AE86  
                                                 l1482 AC92  
                                                 l1474 ABC0  
                                                 l1466 AA54  
                                                 l1458 A94E  
                                                 l2450 ECBC  
                                                 l3058 BFD0  
                                                 l3082 F474  
                                                 l1802 D516  
                                                 l1562 4C88  
                                                 l2194 5700  
                                                 l2523 00C0  
                                                 l2363 FD6C  
                                                 l2531 2532  
                                                 l2507 F6B0  
                                                 l2339 FBC2  
                                                 l1555 4F10  
                                                 l1571 434C  
                                                 l1491 AEB0  
                                                 l1483 ACD0  
                                                 l1475 AC3A  
                                                 l2451 ED16  
                                                 l3059 C006  
                                                 l3083 F4A6  
                                                 l1811 D56E  
                                                 l1563 4C92  
                                                 l1379 31BA  
                                                 l2524 0160  
                                                 l2356 FE8C  
                                                 l2364 FDD2  
                                                 l2348 4000  
                                                 l2508 F6CA  
                                                 l2284 0B5E  
                                                 l2268 2812  
                                                 l3164 2C68  
                                                 l1388 5368  
                                                 l1484 ADA0  
                                                 l1476 AC0A  
                                                 l1468 AB34  
                                                 l1812 D566  
                           USBConfigureEndpoint@handle 0007  
                                                 l2349 3FA2  
                                                 l2285 0B00  
                                                 l2277 0A92  
                                                 l2269 2820  
                                                 l1573 4384  
                                                 l3165 2C5C  
                                                 l3181 33E6  
                                                 l1493 AEBE  
                                                 l1485 AD68  
                                                 l1469 AAFC  
                                                 l2517 0CDC  
                                                 l3069 F04C  
                                                 l3501 4924  
                                                 l1813 D5AE  
                                                 l2462 1E32  
                                                 l2358 FF24  
                                                 l2614 45B4  
                                                 l2286 0B94  
                                                 l1590 5208  
                                                 l3182 33F4  
                                                 l3174 338C  
                                                 l1398 AF54  
                                                 l1478 AC68  
                                                 l3350 0BD4  
                                                 l1830 4896  
                                                 l1902 E296  
                                                 l3502 4918  
                                                 l1806 D4E2  
                                                 l2471 EE76  
                                                 l2287 0B18  
                                                 l2199 4E2C  
                                                 l1575 43A4  
                                                 l3183 340A  
                                                 l3175 33A0  
                                                 l1495 AEE8  
                                                 l1487 AE14  
                                                 l1479 AD0E  
                                                 l1399 A348  
                                                 l2455 ED22  
                                                 l3351 0C08  
                                                 l3087 C588  
                                                 l2464 1E44  
                                                 l2480 EEF2  
                                                 l2616 45D0  
                                                 l2368 41AA  
                                                 l2528 24A8  
                                                 l2288 0B34  
                                                 l2296 30B6  
                                                 l3168 2C9C  
                                                 l1488 ADE4  
                                                 l2712 463C  
                                                 l2456 ED24  
                                                 l3352 0C46  
                                                 l1904 E460  
                                                 l1808 D4F0  
                                                 l3088 C59E  
                                                 l2465 1E54  
                                                 l2481 EF0A  
                                                 l2617 45D8  
                                                 l3169 2CAA  
                                                 l3177 33BE  
                                                 l1497 AF14  
                                                 l2713 4608  
                                                 l2625 3036  
                                                 l2801 B0FA  
                                                 l2457 ED90  
                                                 l3353 0C84  
                                                 l1905 E34E  
                                                 l3505 494C  
                                                 l1817 D5E8  
                                                 l1809 D4F8  
                                                 l2466 1E64  
                                                 l2482 EF2E  
                                                 l2298 30F0  
                                                 l3610 CE38  
                                                 l3602 CD82  
                                                 l3178 33B2  
                                                 l2722 5B48  
                                                 l2810 B198  
                                                 l2458 EDC0  
                                                 l1906 E376  
                                                 l3506 495A  
                                                 l1818 D5FC  
                                                 l1922 185E  
                                                 l2467 1E70  
                                                 l2483 EF58  
                                                 l2475 EE88  
                                                 l2619 4604  
                                                 l3611 CE46  
                                                 l3603 CD7E  
                                                 l1499 AF22  
                                                 l2731 46AC  
                                                 l2723 5B38  
                                                 l2715 4614  
                                                 l2803 B120  
                                                 l1907 E41E  
                                                 l1763 4BC6  
                                                 l2547 2700  
                                                 l2468 1E8A  
                                                 l2484 EF8A  
                                                 l2476 EE98  
                                                 l3620 CEA4  
                                                 l3612 CE4A  
                                                 l3700 CBF8  
                                                 l3380 2722  
                                                 l2732 4678  
                                                 l2716 461E  
                                                 l2628 305A  
                                                 l2900 B666  
                                                 l2820 B238  
                                                 l2804 B130  
                                                 l1828 483E  
                                                 l1836 5C7A  
                                                 l1932 E098  
                                                 l1924 186E  
                                                 l1940 29E4  
                                                 l2485 EFBA  
                                                 l2477 EEA4  
                                                 l1597 4D96  
                                                 l1589 51FE  
                                                 l3605 CDDE  
                                                 l3357 5AC0  
                                                 l2741 573E  
                                                 l2725 5B3C  
                                                 l2717 4628  
                                                 l2821 B246  
                                                 l2813 B1CA  
                                                 l1765 4C00  
                                                 l1933 E230  
                                                 l1925 192A  
                                                 l1941 2998  
                                                 l2486 F028  
                                                 l2478 EEB4  
                                                 l2654 38EE  
                                                 l1598 4DA0  
                                                 l3630 CF88  
                                                 l3606 CDA2  
                                                 l3382 278E  
                                                 l2734 4684  
                                                 l2726 5B40  
                                                 l2718 4632  
                                                 l2902 B66E  
                                                 l2830 B2C6  
                                                 l1790 36EA  
                                                 l1838 5C8C  
                                                 l1782 2BEA  
                                                 l1934 E11E  
                                                 l1926 1922  
                                                 l1950 29B8  
                                                 l2479 EEC4  
                                                 l2495 352C  
                                                 l3623 CF3E  
                                                 l3615 CEB6  
                                                 l3711 CCD4  
                                                 l3391 27CE  
                                                 l3383 277E  
                                                 l2735 468E  
                                                 l2727 5B44  
                                                 l2911 B77A  
                                                 l2903 B680  
                                                 l2823 B280  
                                                 l2807 B162  
                                                 l1855 1FF0  
                                                 l1791 3736  
                                                 l1871 06EA  
                                                 l1935 E146  
                                                 l1951 29BC  
                                                 l1943 299C  
                                                 l3640 CFF8  
                                                 l3632 CF92  
                                                 l3616 CE7E  
                                                 l3712 CCF2  
                                                 l2736 4698  
                                                 l2816 B7E2  
                                                 l2920 B746  
                                                 l2912 B6FC  
                                                 l2824 B24E  
                                                 l1864 1FDA  
                                                 l1784 2BF4  
                                                 l1936 E1EE  
                                                 l1960 29E0  
                                                 l1952 29C0  
                                                 l1944 29A0  
                                                 l3625 CF4E  
                                                 l3609 CE5A  
                                                 l2737 46A2  
                                                 l2921 B75E  
                                                 l2913 B718  
                                                 l2905 B6A0  
                                                 l2825 B258  
                                                 l2809 B188  
                                                 l1873 06FC  
                                                 l1953 29C4  
                                                 l1945 29A4  
                                                 l3706 CC4E  
                                                 l2746 4768  
                                                 l2906 B6D8  
                                                 l2850 B3D6  
                                                 l2834 B3C4  
                                                 l2842 B35A  
                                                 l2818 B270  
                                                 l2826 B266  
                                                 l1858 1F62  
                                                 l3810 19B8  
                                                 l1874 075A  
                                                 l1970 DB64  
                                                 l1954 29C8  
                                                 l1946 29A8  
                                                 l1699 59C0  
                                                 l3619 CEA0  
                                                 l2923 B768  
                                                 l2851 B3E6  
                                                 l2843 B36C  
                                                 l2835 B2EE  
                                                 l2819 B216  
                                                 l1867 4440  
                                                 l3811 1A26  
                                                 l1779 2B90  
                                                 l1971 DB76  
                                                 l1955 29CC  
                                                 l1947 29AC  
                                                 l3644 D01E  
                                                 l3628 CF72  
                                                 l3708 CC92  
                                                 l3388 27B2  
                                                 l3740 04BE  
                                                 l3572 5160  
                                                 l2916 B726  
                                                 l2908 B6E2  
                                                 l2860 B450  
                                                 l2852 B3F4  
                                                 l2836 B302  
                                                 l2828 B29A  
                                                 l3804 511A  
                                                 l1796 D39E  
                                                 l1964 DC76  
                                                 l1980 DBEE  
                                                 l1972 DB88  
                                                 l1956 29D0  
                                                 l1948 29B0  
                                                 l3645 D026  
                                                 l3637 CFB2  
                                                 l3709 CCB0  
                                                 l3389 27A6  
                                                 l3573 5158  
                                                 l3661 D6C2  
                                                 l2781 B798  
                                                 l2917 B730  
                                                 l1789 3754  
                                                 l1981 DBF2  
                                                 l1973 DB9A  
                                                 l1965 DB46  
                                                 l1957 29D4  
                                                 l1949 29B4  
                                                 l3822 5AEE  
                                                 l3646 D028  
                                                 l3742 0508  
                                                 l2950 EC64  
                                                 l3582 5678  
                                                 l3654 D638  
                                                 l2918 B73E  
                                                 l2870 B502  
                                                 l2862 B484  
                                                 l2854 B42E  
                                                 l2846 B39E  
                                                 l3830 4CD8  
                                                 l1990 DC16  
                                                 l1982 DBF6  
                                                 l1974 DBAC  
                                                 l1958 29D8  
                                                 l3823 5ADC  
                                                 l3751 057A  
                                                 l3743 04F0  
                                                 l3735 048A  
                                                 l3583 5670  
                                                 l3671 D7CC  
                                                 l3663 D6EA  
                                                 l3655 D634  
                                                 l2871 B4BE  
                                                 l2855 B3FC  
                                                 l2839 B334  
                                                 l2783 B1F0  
                                                 l2791 B050  
                                                 l3831 4CCE  
                                                 l1799 D3A8  
                                                 l1991 DC1A  
                                                 l1983 DBFA  
                                                 l1975 DBBE  
                                                 l1967 DB4A  
                                                 l1959 29DC  
                                                 l3816 4BA4  
                                                 l3736 049A  
                                                 l3576 5180  
                                                 l3680 D848  
                                                 l3672 D7AE  
                                                 l3664 D798  
                                                 l2880 B52C  
                                                 l2872 B4CA  
                                                 l2864 B490  
                                                 l2856 B406  
                                                 l2792 B060  
                                                 l2784 AFE8  
                                                 l3808 195C  
                                                 l1992 DC1E  
                                                 l1984 DBFE  
                                                 l1976 DBD0  
                                                 l1968 DB4E  
                                                 l3817 4B6A  
                                                 l3745 053A  
                                                 l3737 04B8  
                                                 l2953 EC7A  
                                                 l3577 518A  
                                                 l3681 D86C  
                                                 l3665 D748  
                                                 l2873 B4D8  
                                                 l2865 B49C  
                                                 l2849 B41E  
                                                 l2857 B414  
                                                 l2785 AFF8  
                                                 l1993 DC22  
                                                 l1985 DC02  
                                                 l1977 DBE2  
                                                 l1969 DB52  
                                                 l3690 C9F8  
                                                 l3746 052E  
                                                 l3586 5690  
                                                 l3682 D896  
                                                 l3666 D770  
                                                 l3658 D678  
                                                 l2890 B60E  
                                                 l2882 B570  
                                                 l3762 2958  
                                                 l1994 DC26  
                                                 l1986 DC06  
                                                 l1978 DBE6  
                                                 l3739 04CA  
                                                 l2947 EC3E  
                                                 l3587 569A  
                                                 l3683 D8A2  
                                                 l3659 D674  
                                                 l2875 B512  
                                                 l2859 B43E  
                                                 l2795 B092  
                                                 l3763 291A  
                                                 l1899 208C  
                                                 l1995 DC2A  
                                                 l1987 DC0A  
                                                 l1979 DBEA  
                                                 l3692 CA28  
                                                 l3684 D8A4  
                                                 l3668 D796  
                                                 l2892 B688  
                                                 l2876 B4E0  
                                                 l2788 B02A  
                                                 l3756 28C6  
                                                 l3844 4294  
                                                 l1996 DC2E  
                                                 l1988 DC0E  
                                                 l3597 CD3A  
                                                 l3693 CA24  
                                                 l2893 B622  
                                                 l2885 B5C8  
                                                 l2877 B4EA  
                                                 l2797 B0B8  
                                                 l3765 298C  
                                                 l3757 28C0  
                                                 l3773 1A8C  
                                                 l3853 5F76  
                                                 l3845 4232  
                                                 l1997 DC32  
                                                 l1989 DC12  
                            ?__offset_from_file_number 0060  
                                                 l3598 CD36  
                                                 l3694 CA38  
                                                 l3790 5642  
                                                 l3838 5778  
                                                 l3678 D804  
                                                 l2894 B636  
                                                 l2878 B4F8  
                                                 l2798 B0C8  
                                                 l3846 428A  
                                                 l1998 DC36  
                                                 l3695 CA56  
                                                 l3839 5772  
                                                 l2887 B5E4  
                                                 l3759 2908  
                                                 l1999 DC3A  
                                                 l3688 C9E8  
                                                 l2888 B5F6  
                                                 l3784 5E54  
                                                 l3776 1AEE  
                                                 l3689 C9E4  
                                                 l2897 B644  
                                                 l3777 1A96  
                                                 l3794 3424  
                                                 l2898 B658  
                                                 l3699 CC16  
                                                 l3779 1B34  
                                                 l3796 3460  
                                                 l3797 34A2  
                  __end_of__encoder_next_arc_step_size 46E6  
                          __encoder_next_arc_step_size 4676  
                        __size_of_encoder_statemachine 082A  
                                ??i2_SYSTEM_Initialize 0001  
                                                 STR_1 A329  
                                                 STR_2 A332  
                                                 STR_3 A329  
                                                 STR_4 A332  
                                                 STR_5 A329  
                                                 STR_6 A339  
                                                 STR_7 A320  
                                                 STR_8 A320  
                                                 STR_9 A320  
                                   ??_motor_goto_steps 0099  
                                ??_USBCtrlTrfTxService 0001  
                                                 _UCFG 000F39  
                                 _configFile_extention 02E7  
                                                 _UEP0 000F26  
                                                 _UEP1 000F27  
                                     ?_fat_create_file 00AC  
                                                 _UEIE 000F37  
                                                 _UEIR 000F63  
                                                 _UCON 000F65  
                                                 _TMR2 000FCC  
                          __size_ofi2_USBStallEndpoint 0106  
                                   ?__find_nth_cluster 0097  
                                       ??_encoder_init 0060  
                              ??_fat_get_format_status 008B  
                                 api_parse@out_idx_ptr 00AE  
                                       _ResetSenseData 4A32  
                          __end_of_fat_restore_mbr_fbr 3E7C  
                                                 _enc1 0148  
                                                 _enc2 0147  
               USBStdFeatureReqHandler@current_ep_data 001B  
                                                 _pDst 0145  
                                                 _atoi 28BE  
                                                 _atol 1A4A  
                                                 _main 3B06  
                              _bit_pattern_verticalbar A2EA  
                                                 _itoa 561C  
                             ??i2_USBTransferOnePacket 0005  
                                  _use_cw_limit_string A2BA  
                                                 _ltoa 50EC  
                          __size_of_APP_DeviceMSDTasks 0012  
                                                 fsr0h 000FEA  
                                                 fsr1h 000FE2  
                              __end_of_display_prepare AFCC  
                    motor_goto_steps@distance_in_steps 0099  
                                                 indf0 000FEF  
                                                 fsr2h 000FDA  
                                                 fsr0l 000FE9  
                                                 indf1 000FE7  
                                                 indf2 000FDF  
                                                 fsr1l 000FE1  
                                                 fsr2l 000FD9  
                                      _USBDeviceAttach 5A40  
                                                 btemp 005F  
                                                 _utoa 341C  
                               __CFG_DSWDTOSC$T1OSCREF 000000  
                           ??_ExternalFlash_SectorRead 0093  
                         ?i2_ExternalFlash_MediaDetect 0001  
                            _ExternalFlash_MediaDetect 6058  
                                                 prodh 000FF4  
                                                 prodl 000FF3  
     __get_available_offset_from_buffer@minimum_offset 0060  
                       fat_modify_file@number_of_bytes 00BD  
                                                 start 908E  
                      __end_of_APP_DeviceMSDInitialize 5FE6  
                         ?__motor_get_speed_in_degrees 0091  
                                      ___fldiv@new_exp 0089  
                                _display_get_character 5B60  
                                 ??_USBCheckHIDRequest 0001  
  __motor_distance_to_limit@absolute_position_in_steps 0079  
                                     ?_MSDWriteHandler 0001  
                              __end_of_fat_modify_file E252  
                        ??__encoder_next_arc_step_size 0062  
                                  ??__find_nth_cluster 009B  
                       ??_MSDProcessCommandMediaAbsent 00A7  
                           __end_of_USBCheckStdRequest 2382  
                               ??_USBCtrlTrfOutHandler 0003  
                         ??__flash_copy_page_to_buffer 0076  
                       ?__flash_write_page_from_buffer 0073  
                                         ___param_bank 000000  
                            ??_USBStdFeatureReqHandler 0018  
                                         _USBOutHandle 013B  
                     __end_of__fat_sector_from_cluster 5F14  
                               __get_available_cluster 2B36  
                        __write_value_to_offset@buffer 0062  
                               __get_item@value_string 0062  
                           __end_ofi2__i2c_eeprom_busy 5DAC  
                        __size_of__display_padded_itoa 00E2  
                      __end_of__parse_set_manual_speed 41AE  
                      __size_of__flash_write_to_buffer 0052  
                             ??_USBStdGetStatusHandler 0001  
                        __write_value_to_offset@offset 0060  
                                       ?_USBDeviceInit 0001  
                                    __flash_get_status 59D8  
                 __make_cluster_chain@sector_in_buffer 00A6  
                     __fat_offset_from_cluster@cluster 0060  
                    motor_speed_from_index@speed_index 009D  
                                        __CFG_PLLDIV$2 000000  
                                 _configFile_used_name 02D4  
                           __end_of_motor_speed_lookup 9461  
                                    ?_motor_move_steps 008C  
                        i2c_display_write_fixed@length 0067  
                                                l20122 4656  
                                                l20124 466C  
                                                l20116 DC90  
                                                l20126 46C6  
                                                l12126 0CBC  
                                                l20118 DDA8  
                                                l20128 46DC  
                                                l13070 4B6A  
                                                l14006 2B5A  
                                                l14030 2BFA  
                                                l13148 EA7A  
                                                l13408 EEF2  
                                                l15024 5C72  
                                                l12740 0F68  
                                                l14308 D896  
                                                l14076 4232  
                                                l15054 1F44  
                                                l16300 075A  
                                                l17110 DDE0  
                                                l16126 42CA  
                                                l13840 C734  
                                                l17024 5ADC  
                                                l15088 1FF0  
                                                l16242 46EA  
                                                l16166 E4C6  
                                                l18024 FFCC  
                                         spi_tx@length 0062  
                                                l16186 E570  
                                                l17218 58D0  
                                                l16434 32E0  
                                                l16452 3334  
                                                l15664 2954  
                                                l16472 3DF4  
                                                l18180 4D56  
                                                l17620 105A  
                                                l16582 30FE  
                                                l17710 EDC0  
                                                l16486 3E3C  
                                                l17288 0B2E  
                                                l18176 4D38  
                                                l17704 ED90  
                                                l16808 F7C8  
                                                l16772 F6D4  
                                                l17590 5510  
                                                l17584 5504  
                                                l16792 F736  
                                                l18832 A4CE  
                                                l18846 A51C  
                                        ___fltol@sign1 0068  
                                motor_move_steps@speed 0090  
                                      __end_of___aldiv 2CD2  
                                                l17996 FF6A  
                                   ?__flash_get_status 006C  
                                       ??_display_init 0081  
                                                ?_atoi 0066  
                                      __end_of___almod 341C  
                                                ?_atol 006C  
                                      __end_of___fladd D044  
                                                ?_main 0001  
                  __end_of_initial_speed_manual_string A212  
                          _initial_speed_manual_string A1FD  
                                      __end_of___fldiv D8C0  
                                                ?_itoa 0070  
                                      __end_of___flneg 5AD2  
                                                STR_10 A320  
                                                ?_ltoa 007A  
                                                STR_11 A320  
                                                STR_12 A320  
                                                STR_13 A320  
                                                STR_14 A320  
                                                STR_15 A30B  
                                                STR_16 A317  
                                                STR_17 A33F  
                                                STR_18 A2FE  
                                      __end_of___flmul CD08  
                                     ??__display_clear 0060  
                                      _cw_limit_string A2D1  
                    __size_of_USBCtrlEPServiceComplete 0102  
                                      __end_of___fltol 27E0  
                                      __end_of___lldiv 412A  
                                                ?_utoa 0067  
                     MSDCheckForErrorCases@DeviceBytes 006A  
                                                u11010 5164  
                                                u10400 0DF4  
                                                u11040 567C  
                                                u10165 4358  
                                                u10255 4DAC  
                                                u11160 4B8C  
                                                u10275 44B6  
                                                u11420 D288  
                                                u11500 4986  
                                                u11238 E970  
                                                u11430 D28A  
                                                u11318 D0AA  
                                                u13110 D800  
                                                u11510 4994  
                                                u11167 4B82  
                                                u11239 E984  
                                                u11319 D0BE  
                                                u20047 52A6  
                                                u10800 0FE2  
                                                u14000 D490  
                                                u11520 49A2  
                                                u11185 E8EE  
                                      __end_of___llmod 496C  
                                                u20057 52BA  
                               __end_of_USBDeviceTasks 0302  
                                                u14010 D4BC  
                                                u11530 49B0  
                                                u20067 4F02  
                                                u10820 0FF6  
                                                u12500 C890  
                                                u13300 CC4A  
                                                u13140 D856  
                                                u11540 49BC  
                                                u11508 498A  
                                                u20077 4F14  
                                                u10750 0FAE  
                                                u12510 C8A2  
                                                u12430 C764  
                                                u13150 D87A  
                                                u11518 4998  
                                                u20087 4F1E  
                                                u11295 D072  
                                                u11615 4C9E  
                                                u11448 D296  
                                                u12408 C68C  
                                                u13240 CA44  
                                                u14200 1FF0  
                                                u14120 5C92  
                                                u14040 D546  
                                                u11528 49A6  
                                                u11449 D2AA  
                                                u12409 C6A0  
                                                u11625 5CAC  
                                                u10850 59BC  
                                                u11378 D17E  
                                                u13330 CCA0  
                                                u13250 CBBA  
                                                u11546 49BE  
                                                u11538 49B4  
                                                u11490 4978  
                                                u11379 D192  
                                                u10780 0FC8  
                                                u10860 5988  
                                                u12540 C930  
                                                u13340 CCBE  
                                                u13420 2740  
                                                u12700 3722  
                                                u14060 D5C2  
                                                u14230 441A  
                                                u11910 4928  
                                                u14070 D5CE  
                                                u13255 CBB0  
                                                u11680 EE72  
                                                u14320 FE6A  
                                                u12448 C788  
                                                u15104 09D6  
                                                u14240 E272  
                                                u12449 C79C  
                                                u15105 09D0  
                                                u13425 2736  
                                                u15201 5294  
                                                u11770 EEEE  
                                                u11498 497C  
                                                u11780 EF06  
                                                u13460 27B8  
                                                u13540 0544  
                                                u15300 E550  
                                                u14420 4D1A  
                                                u12740 4892  
                                                u12660 2BBA  
                                                u14245 E266  
                                                u14350 FD18  
                                                u12398 C658  
                                                u14190 1FE6  
                                                u15230 4318  
                                                u12399 C66C  
                                                u15144 0A34  
                                                u15128 09FE  
                                                u15080 0984  
                                                u12760 4258  
                                                u11880 40DA  
                                                u12680 2BFA  
                                                u15145 0A2E  
                                                u15129 0A14  
                                                u14265 E30A  
                                                u16210 33C2  
                                                u15330 E584  
                            ?_USBCtrlEPServiceComplete 0001  
                                                u15068 0952  
                                                u15340 E5DE  
                                                u15500 18F6  
                                                u15069 0966  
                                                u15094 099C  
                                                u16150 2C6C  
                                                u13910 31C6  
                                                u15095 0996  
                                   ??_motor_move_steps 0093  
                                                u16400 DE10  
                                                u14720 CE62  
                                                u18000 B15C  
                                                u15440 0722  
                                                u13920 31E6  
                                                u17041 F536  
                                                u15185 4FFE  
                                                u15290 E4DA  
                                                u17210 ED1E  
                                                u17140 5358  
                                                u15445 0718  
                                                u14670 CE0E  
                                                u18030 B194  
                                                u15550 E0BE  
                                                u15710 3E66  
                                                u14680 CE1E  
                                                u17080 5544  
                                                u18040 B1C4  
                                                u13960 D3E0  
                                                u15480 18AA  
                                                u15640 3316  
                                                u14930 D004  
                                                u14850 CF96  
                                                u14690 CE20  
                                                u17250 2FFA  
                                                u15490 18DC  
                                                u15555 E0B4  
                                                u16380 DDDA  
                                                u17420 0030  
                                                u18220 B366  
                                                u15900 F7B4  
                                                u13980 D45A  
                                                u15485 18A0  
                                                u15750 312E  
                                                u18230 B398  
                                                u13990 D484  
                                                u15670 336A  
                                                u15815 083C  
                                                u15495 18D2  
                                                u14880 CFAE  
                                                u16570 DFBC  
                                                u15690 3E1E  
                                                u18180 B2FC  
                                                u15860 F71C  
                                                u17390 FF8E  
                                                u18190 B32E  
                                                u17720 F99A  
                                                u17810 3650  
                                                u17730 F9B4  
                                      __end_of___lwdiv 5194  
                                                u19420 3B42  
                                                u18470 B560  
                                                u17910 B05C  
                                                u18800 EC28  
                                                u17920 B08C  
                                                u18810 EC38  
                                                u18490 B5B6  
                         __flash_write_to_buffer@start 0073  
                                                u18491 B5B4  
                                                u18820 EC4E  
                                                u17790 363C  
                                                u18830 EC5E  
                                                u17950 B0C4  
                                                u17870 AFF4  
                                                u17960 B0F4  
                                                u17880 B024  
                                                u17990 B12C  
                          __size_of_motor_change_speed 000A  
                                                u18880 A4FE  
                                      __end_of___lwmod 56A4  
                                                i2l300 35B2  
                                                i2l220 37BA  
                                                i2l214 2D1E  
                                                i2l222 37D6  
                                                i2l231 16C8  
                                                i2l232 1672  
                                                i2l160 020C  
                                                i2l321 3AF6  
                                                i2l145 0348  
                                                i2l250 2AB6  
                                                i2l226 3D26  
                                                i2l322 3AF0  
                                                i2l162 0232  
                                      __end_of_dc_arc1 9F2E  
                                                i2l307 56E4  
                                                i2l315 592E  
                                                i2l147 0370  
                                                i2l155 01D2  
                                      __end_of_dc_arc2 9EDE  
                                                i2l340 2DD6  
                                                i2l260 1276  
                                                i2l332 4B06  
                                                i2l180 5800  
                                                i2l236 16F4  
                                                i2l308 56E2  
                                                i2l316 592C  
                                                i2l172 02C0  
                                                i2l164 0248  
                                                i2l156 01E2  
                                        __CFG_WDTEN$ON 000000  
                                                i2l253 2B2E  
                                                i2l245 2A86  
                                                i2l341 2DDA  
                                                i2l261 1254  
                                                i2l149 03A8  
                                                i2l165 0254  
                                                i2l157 01EA  
                                                i2l254 2AF6  
                                                i2l342 2E5A  
                                                i2l334 4B52  
                                                i2l174 02DE  
                                                i2l166 027C  
                                                i2l247 2A90  
                                                i2l343 2E20  
                                                i2l263 12EA  
                                                i2l167 0286  
                                                i2l159 0200  
                                                i2l264 12D0  
                                                i2l184 1762  
                                                i2l192 15A2  
                                                i2l432 243A  
                                                i2l280 06B4  
                                                i2l272 258E  
                                                i2l360 22C6  
                                                i2l176 02FA  
                                                i2l249 2AEE  
                                                i2l345 2E40  
                                                i2l425 23D0  
                                                i2l281 059E  
                                                i2l361 22DA  
                                                i2l169 0298  
                                                i2l186 178C  
                                                i2l426 239E  
                                                i2l274 2602  
                                                i2l362 22E0  
                                                i2l179 57F2  
                                                i2l283 05B2  
                                                i2l355 233E  
                                                i2l188 180A  
                                                i2l436 23F2  
                                                i2l428 23E2  
                                                i2l372 D8E4  
                                                i2l284 0644  
                                                i2l364 22E6  
                                                i2l356 22B0  
                                                i2l437 240A  
                                                i2l429 23BC  
                                                i2l381 DA40  
                                                i2l373 D8EA  
                                                i2l293 35EE  
                                                i2l365 2304  
                                                i2l534 121E  
                                                i2l438 2416  
                                                i2l550 2EE2  
                                                i2l286 064C  
                                                i2l294 357C  
                                                i2l366 2320  
                                                i2l358 22BA  
                                                i2l535 118A  
                                                i2l439 242E  
                                                i2l391 DACC  
                                                i2l383 DA0A  
                                                i2l375 D956  
                                                i2l287 06A4  
                                                i2l359 22C0  
                                                i2l384 DA26  
                                                i2l537 1216  
                                                i2l545 2F18  
                                                i2l393 DB1E  
                                                i2l377 D99E  
                                                i2l289 06AC  
                                                i2l297 3604  
                                                i2l562 2EEA  
                                                i2l546 2E7C  
                                                i2l386 DA8C  
                                                i2l298 358E  
                                                i2l387 DA98  
                                                i2l379 D9C0  
                                                i2l299 3594  
                                                i2l900 51A2  
                                                i2l820 4022  
                                                i2l388 DB12  
                                                i2l821 402A  
                                                i2l822 4032  
                                                i2l904 51B4  
                                                i2l816 4054  
                                                i2l824 403C  
                                                i2l906 51C0  
                                                i2l826 4046  
                                                i2l780 5060  
                                                i2l783 5096  
                                                _UADDR 000F38  
                                                i2l897 51D2  
                                                i2l898 5198  
          __end_of_motor_calculate_position_in_degrees 2702  
         __size_of_motor_calculate_position_in_degrees 00DE  
                 ?_motor_calculate_position_in_degrees 0001  
                ??_motor_calculate_position_in_degrees 0091  
                  _motor_calculate_position_in_degrees 2624  
                                      __end_of_dc_main A0BE  
                                                _TMR0H 000FD7  
                                                _TMR0L 000FD6  
                                                _PORTA 000F80  
                                                _PORTE 000F84  
                                                _RPOR4 000EC4  
                                     ??__display_start 007C  
                          __motor_move_steps@direction 008B  
                      __end_of__motor_schedule_command 1F0C  
                                                _USTAT 000F64  
                                      __end_of_dc_zero 9E8E  
                           ?__motor_calculate_distance 0060  
                                     __i2c_read@length 0067  
                                 _beep_duration_string A290  
                          ?_ExternalFlash_CapacityRead 0060  
                                      ?_display_update 0001  
                             __find_nth_cluster@offset 009B  
                   __size_of_USBCtrlEPAllowStatusStage 00CC  
                                      _i2c_eeprom_read 4FEC  
                                  ___lmul@multiplicand 0064  
                               __motor_move_back_forth 34C6  
                            __end_of__find_nth_cluster 3768  
                             __find_nth_cluster@sector 009F  
                                     __end_of_MSDTasks E01E  
                                           i2memcpy@d1 0001  
                                       __CFG_FCMEN$OFF 000000  
                                      __read_fat@value 0095  
                                   _USBCheckMSDRequest 2E68  
                                           i2memcpy@s1 0003  
                      __end_of_USBCtrlEPAllowDataStage 380A  
            motor_divide_jump@target_position_in_steps 009F  
                                                _sd000 A2FA  
                               __write_value_to_offset 593A  
                                                _sd001 A0FE  
                                                _sd002 A132  
                                                _sd003 A1A1  
                       ?_USBIncrement1msInternalTimers 0001  
                       __size_of_MSDTransferTerminated 0056  
                                  ??__flash_get_status 006E  
                __i2c_display_send_init_sequence@F7090 02C3  
                        __end_of_MSDTransferTerminated 5098  
                                         _gblCBWLength 0153  
                                           i2memset@p1 0001  
                               ?_MSDCheckForErrorCases 006A  
                                ??__system_timer0_init 0060  
                                 _use_ccw_limit_string A282  
                               _configFile_readDefault 4516  
                                      __end_of_isdigit 5E5C  
                                i2USBStallEndpoint@dir 0001  
                               __end_of_ResetSenseData 4A94  
                                                atoi@a 006B  
                                                atol@a 0075  
                                                atol@c 0079  
                                                atoi@s 0066  
                                                atol@s 006C  
                              __end_of__backlight_init 6098  
                                      __motor_run@type 0066  
                                                _ultoa 194C  
                             __parse_command_long@data 00A0  
                            __data_sector_from_cluster 5FC6  
                            fat_get_format_status@cntr 008D  
                      __end_of_motor_postscaler_lookup 9A16  
                       __end_of_motor_prescaler_lookup 9DE4  
                                                pclath 000FFA  
                           __end_of__display_itoa_long 1118  
                                                tablat 000FF5  
                           i2__i2c_write@slave_address 0009  
                            __size_of_USBStallEndpoint 010A  
                                  ?_USBCheckMSDRequest 0001  
                                      _MSDCommandState 0157  
                          ??_ExternalFlash_SectorWrite 008D  
                                                plusw1 000FE3  
                                                plusw2 000FDB  
                                          ?_USBMSDInit 0001  
             ExternalFlash_WriteProtectStateGet@config 0060  
                                                ttemp5 0060  
                                                ttemp6 0063  
                                                ttemp7 0067  
                                                utoa@c 006F  
                                                utoa@v 006D  
                                                status 000FD8  
                          ?__flash_copy_page_to_buffer 0073  
                                    __CFG_DSWDTPS$8192 000000  
                                                wtemp8 0060  
                             __end_ofi2_ResetSenseData 4AF6  
                                      __end_of_stricmp 4D26  
                                      __end_of_strncmp 42B0  
                                      __end_of_toupper 5F7A  
                                     __end_ofi2_memcpy 4C72  
                                     __end_ofi2_memset 5C42  
                       ??_MSDComputeDeviceInAndResidue 0062  
                                 __size_of__parse_item 03F6  
                                       _MSDReadHandler E8C0  
          i2c_display_program_custom_character@address 007F  
                                  __steps_from_degrees F02C  
                         __size_of_USBStdSetCfgHandler 00E0  
                    fat_create_file@number_of_clusters 00B8  
                        ??i2_ExternalFlash_MediaDetect 0003  
                          __end_of__make_cluster_chain D606  
                    __make_cluster_chain@first_cluster 0095  
                                      __initialization 3D58  
                         ?_motor_decrease_manual_speed 0001  
                        fat_read_from_file@file_number 00D7  
                            __end_of__flash_get_status 5A0C  
                         fat_get_file_information@data 008F  
                          fat_read_from_file_fast@data 00A9  
              __end_ofi2_ExternalFlash_MediaInitialize 5F62  
             __size_ofi2_ExternalFlash_MediaInitialize 001A  
                __end_of_ExternalFlash_MediaInitialize 5EA0  
               __size_of_ExternalFlash_MediaInitialize 0022  
                    ??i2_ExternalFlash_MediaInitialize 0003  
                     ?i2_ExternalFlash_MediaInitialize 0001  
                      i2_ExternalFlash_MediaInitialize 5F48  
                        _ExternalFlash_MediaInitialize 5E7E  
                 __offset_from_file_number@file_number 0062  
                                          _system_init F858  
        __motor_decide_direction@distance_to_limit_ccw 0086  
                              __end_of_fat_resize_file 194C  
                                         __end_of_atoi 2996  
                                         __end_of_atol 1B46  
                                         __end_of_main 3B9C  
                                         __end_of_itoa 5660  
               __end_of__ic2_display_set_ddram_address 5DF4  
              __size_of__ic2_display_set_ddram_address 0024  
                       __ic2_display_set_ddram_address 5DD0  
                                         __end_of_ltoa 5140  
                      __end_of_i2c_display_write_fixed 50EC  
                                         __end_of_utoa 34C6  
                        fat_read_from_file_fast@length 00A5  
                        fat_read_from_file_fast@offset 00BF  
                             __parse_command_short@cmd 009E  
                   fat_read_from_file_fast@read_length 00C3  
                                     __end_of_i2c_init 5EFA  
                           __display_signed_itoa@value 008F  
                        fat_read_from_file_fast@sector 00BB  
                             __end_of__i2c_acknowledge 604E  
                          configFile_write@file_number 00E4  
                           __size_of_motor_divide_jump 00B8  
                         __motor_run@distance_in_steps 0060  
                       ??__encoder_next_setup_stepsize 0062  
                                 ??_USBCheckMSDRequest 000C  
                    __fill_buffer_get_status@outBuffer 006B  
                                 _adc_read_temperature EAAA  
                                       __CFG_OSC$HSPLL 000000  
               MSDComputeDeviceInAndResidue@DiExpected 0060  
                              _USBCheckMSDRequest$2534 000C  
                              _USBCheckMSDRequest$2535 000E  
                            __size_of_USBCtrlEPService 0098  
                 __end_of_motor_divide_jump_to_nearest FB28  
                __size_of_motor_divide_jump_to_nearest 015C  
                         _motor_divide_jump_to_nearest F9CC  
                                         __get_fbr@idx 0060  
                                    ?i2__i2c_wait_idle 0001  
                                               ??_atoi 0068  
                                               ??_atol 0070  
                                 api_prepare@outBuffer 0072  
                                               ??_main 00FE  
                                     __end_of__i2c_get 6044  
                                               ??_itoa 0076  
                                               ??_ltoa 0082  
                                   USBStallEndpoint@ep 0065  
                                               ??_utoa 006D  
                                        __activetblptr 000003  
                                      ?_USBDeviceTasks 0001  
        __motor_decide_direction@distance_to_target_cw 008A  
                             _fat_get_file_information 43A8  
                                   __write_root@offset 008C  
                                         __get_mbr@idx 0060  
           __end_of_ExternalFlash_WriteProtectStateGet 609C  
          __size_of_ExternalFlash_WriteProtectStateGet 0004  
                 ??_ExternalFlash_WriteProtectStateGet 0062  
                  ?_ExternalFlash_WriteProtectStateGet 0060  
                   _ExternalFlash_WriteProtectStateGet 6098  
                                  __find_nth_cluster@n 0099  
                                          ?_USBSuspend 0001  
                                   __write_root@sector 008A  
                                   ??i2__i2c_wait_idle 0001  
                                 __size_of_api_prepare 00DE  
                                _motor_final_stepcount 011B  
                             __steps_from_degrees@temp 0095  
                                 ?__steps_from_degrees 0091  
                        __get_available_cluster@offset 0091  
                                   _motor_items_in_cue 6024  
                          __motor_move_steps@overshoot 0083  
                        __get_available_cluster@sector 0093  
                              motor_move_endless@speed 008C  
                        __flash_write_to_buffer@buffer 0079  
                              __end_of_USBDeviceAttach 5A72  
                               __flash_write_to_buffer 51E8  
               __end_of__ic2_display_set_cgram_address 5C6C  
              __size_of__ic2_display_set_cgram_address 002A  
                       __ic2_display_set_cgram_address 5C42  
                                     ___llmod@dividend 0060  
                                               _ADRESH 000FC4  
                                               _ADRESL 000FC3  
                     __end_of__fat_offset_from_cluster 5F2E  
                                               _CCPR1L 000FBB  
                                     _ccw_limit_string A2C7  
                                               _EECON2 000FA7  
                                               _DMABCH 000F66  
                                               _DMABCL 000F67  
                                      ?_ResetSenseData 0001  
                          ??__get_available_root_entry 0095  
                                               ?_ultoa 006D  
                                           __i2c_start 6074  
                               SYSTEM_Initialize@state 0064  
                                           __i2c_write 52DA  
                          motor_move_endless@direction 008E  
                                     __end_of_adc_init 4EE4  
                                               i2l1131 6086  
                                               i2l1214 420A  
                            fat_read_from_file@cluster 00D9  
                                               i2l1215 41DA  
                                  ?_motor_items_in_cue 0001  
                                               i2l1146 607E  
                                               i2l1066 5888  
                                               i2l1163 55CA  
                                               i2l1164 55AE  
                                               i2l2600 BD2A  
                                               i2l2581 B840  
                                               i2l2591 B9C2  
                                               i2l2592 BA10  
                                               i2l2584 B842  
                                               i2l2760 1C8E  
                 __flash_write_page_from_buffer@buffer 0075  
                                               i2l2593 BB40  
                                               i2l2585 B89C  
                                               i2l2586 B8CC  
                                               i2l2770 1CFE  
                                               i2l2762 1CA4  
                                               i2l2754 1CB2  
                                               i2l2579 B808  
                                               i2l2763 1CAC  
                                               i2l2596 BC74  
                                               i2l2588 BB8E  
                                               i2l2764 1D22  
                                               i2l2772 1D14  
                                               i2l2773 1D1C  
                                               i2l2757 1C6C  
                                               i2l3822 5C30  
                                               i2l3823 5C20  
                                               i2l2767 1CDC  
                                               i2l3816 4C60  
                                               i2l3817 4C28  
                      ??_APP_DeviceCustomHIDInitialize 000D  
                             ?__fill_buffer_get_status 006B  
                                     __end_of__get_fbr DDB8  
                                     __end_of__get_mbr 2A66  
                                               _OSCCON 000FD3  
                          __flash_partial_read@address 0083  
                       ??__display_position_in_degrees 0064  
                                       __CFG_WDTPS$512 000000  
                                               _RPOR21 000ED5  
                                               _RPOR23 000ED7  
                                       __CFG_WPCFG$OFF 000000  
                                __display_itoa@missing 00B5  
                               __end_of_MSDReadHandler EAAA  
                                    __spi_init@details 0060  
                              i2c_eeprom_write@address 000B  
                                     __end_of___xxtofl 058C  
                             i2USBTransferOnePacket@ep 0009  
                                     ??__i2c_wait_idle 0060  
                                    ??i2_USBDeviceInit 0009  
                               ?_display_get_character 0060  
                                     ?_display_prepare 0001  
                      __size_ofi2_USBTransferOnePacket 0102  
                         ?__divide_jump_size_decrement 0001  
                              ?_motor_speed_from_index 009D  
                          __flash_partial_read@command 007F  
                                       __CFG_WPDIS$OFF 000000  
                             __motor_distance_to_limit 0074  
                                     _configFile_write C1D8  
                                     __read_fat@offset 0093  
                                     __end_of_fat_init 5FC6  
                                     __read_fat@sector 0091  
                                    _shortPacketStatus 0164  
                     __end_of_initial_speed_arc_string A25E  
                                       __CFG_XINST$OFF 000000  
                                     _i2c_eeprom_write 41AE  
                                     ?_fat_modify_file 00A1  
                             __size_of_configFile_read 01A4  
                                  _motor_current_speed 0057  
                                      USBDeviceTasks@i 001F  
                                          i2memcpy@tmp 000B  
                                         _CCPTMRS0bits 000F52  
        __parse_jump_steps_with_overshoot@return_value 009B  
                                    _motor_process_cue 380A  
                          USBStdFeatureReqHandler@pUEP 0019  
                             USBTransferOnePacket@data 0061  
                           USBCtrlTrfInHandler@lastDTS 0002  
                                 __size_of_encoder_run 00F4  
                         __end_of__flash_set_page_size 4754  
                                               ___flge 0B9E  
                                      ??_USBDeviceInit 0068  
                   __flash_copy_page_to_buffer@command 0079  
                             flash_partial_read@length 008B  
                                               ___lmul 4F3C  
                              __end_of_cw_limit_string A2DA  
                                               _gblCBW 0200  
                                            ??___aldiv 0068  
                             ?_motor_clear_command_cue 0001  
                                    _fat_get_file_size 4422  
                                            ??___almod 0068  
                                   __size_of__i2c_read 0094  
                                            ??___fladd 0084  
                                               ___wmul 5D10  
                                   __size_of__i2c_send 000A  
                                            ??___fldiv 0080  
                                            ??___flneg 007C  
                                       __CFG_STVREN$ON 000000  
                       __read_value_from_offset@buffer 0062  
                                            ??___flmul 0080  
                                   __size_of__i2c_stop 0008  
                                            ??___fltol 0064  
                        ??_motor_decrease_manual_speed 0066  
                                            ??___lldiv 0068  
                                            ??___llmod 0068  
          i2SYSTEM_Initialize@pll_startup_counter_3143 0003  
            SYSTEM_Initialize@pll_startup_counter_3143 0062  
                                            ??___lwdiv 0064  
                                   ?_motor_process_cue 0001  
                         __size_of_flash_partial_write 006C  
                                           _SoftDetach 0152  
                                            ??___lwmod 0064  
                                               _config 0196  
                                               _buffer 0A00  
                                    _USBEnableEndpoint 57E2  
                       __read_value_from_offset@offset 0060  
                      __size_of_USBStdGetStatusHandler 00AA  
                                ?_adc_read_temperature 0001  
                                 ??_motor_items_in_cue 0060  
                            _configFile_used_extention 02E4  
                                               _memcpy 4B58  
                                   ?_fat_get_file_size 0095  
                                               _memset 5AD2  
                     __end_of__sector_from_file_number 5AA2  
                              __end_of_i2c_eeprom_read 5042  
                                               _params 0231  
                                               clear_0 3DA0  
                                               clear_1 3DB2  
                                               clear_2 3DBE  
                                               clear_3 3DCA  
                                               clear_4 3DDA  
                            _ExternalFlash_SectorWrite 5970  
                                    api_parse@inBuffer 00A7  
                                      __CFG_CLKOEC$OFF 000000  
                                     __end_of_inq_resp A184  
                                     __motor_run@speed 0064  
                                 __end_of_encoder_init 5DD0  
                                               _spi_tx 4DDA  
                                   ?_USBEnableEndpoint 0009  
                           ??_i2c_eeprom_save_position 0026  
                                   _flash_partial_read 5D60  
               __make_cluster_chain@number_of_clusters 0097  
                                               _tx_buf 02CC  
                                i2c_display_init@F7093 02BA  
                                               _strlen 5768  
                              _motor_current_stepcount 011F  
                           __parse_command_long@length 00A6  
             i2c_display_program_custom_character@cntr 0080  
                              motor_set_zero@direction 006A  
                                     __end_of_tmr0_isr 5892  
                        __size_of_USBTransferOnePacket 0106  
                                  __size_of_USBMSDInit 010E  
                 __size_of_i2c_eeprom_recover_position 0098  
                          i2c_display_write_fixed@data 0065  
                        ?_motor_divide_jump_to_nearest 0001  
                               __size_of__flash_wakeup 0058  
                                               itoa@cp 0076  
                                  ??_motor_process_cue 006C  
                                ??__steps_from_degrees 0095  
                        __size_of__display_signed_itoa 0044  
                                            ??_isdigit 0060  
                    i2c_eeprom_recover_position@buffer 0079  
                           __end_of_motor_steps_lookup 982F  
                                __end_of_fat_find_file 1FF4  
                 __size_of__motor_get_speed_in_degrees 013A  
                              ?_motor_set_manual_speed 0062  
                                               ltoa@cp 0082  
                       __parse_command_long@out_buffer 00A2  
                                  ??_fat_get_file_size 0099  
                        __size_of__parse_command_short 015C  
                     __size_of__read_value_from_offset 0048  
                     __size_of_fat_read_from_file_fast 0226  
                         ?__divide_jump_size_increment 0001  
                                         __mediumconst 9092  
                           __size_of__find_nth_cluster 00A6  
                                               tblptrh 000FF7  
                                               tblptrl 000FF6  
                                               tblptru 000FF8  
                                     __end_of_spi_init 5728  
                     __size_of_APP_DeviceMSDInitialize 0010  
                                      _motor_direction 014A  
                      ??__flash_compare_page_to_buffer 0076  
                                  ??_USBEnableEndpoint 000A  
                                  ?_flash_partial_read 0087  
                                     _i2c_display_init 528A  
                                               ultoa@c 0079  
                                        spi_tx_rx@data 0064  
                    __size_of__fat_sector_from_cluster 001A  
                                               ultoa@v 0075  
                           __end_of__root_is_available 489A  
                            ?__fat_sector_from_cluster 0060  
                                        spi_tx_tx@data 0064  
                                            ??_stricmp 0065  
                                motor_goto_steps@speed 0096  
                                          _CtrlTrfData 000D38  
                                    __system_pin_setup 489A  
                                            ??_strncmp 0066  
                                            ??_toupper 0060  
                                   __size_of__add_item 00FA  
                                 __size_of__write_root 004C  
                                     ?__backlight_init 0001  
                    i2ExternalFlash_MediaDetect@config 0001  
                      ExternalFlash_MediaDetect@config 0060  
                                 _controlTransferState 00FF  
                           ??_APP_DeviceCustomHIDTasks 00B2  
                                           ___flge@ff1 0078  
                                           ___flge@ff2 007C  
                                 __CFG_LS48MHZ$SYS48X8 000000  
                                         ___xxtofl@arg 0074  
                                         ___xxtofl@exp 0073  
                                    _SYSTEM_Initialize 4D26  
                                         ___xxtofl@val 006A  
                                fat_modify_file@length 00A5  
                                   ?__system_pin_setup 0001  
                                fat_modify_file@offset 00BB  
                             __end_of__i2c_eeprom_busy 5CE8  
                                           __accesstop 0060  
                              __end_of__initialization 3DE0  
                       __end_of_motor_speed_from_index 5F90  
                                fat_modify_file@sector 00B5  
                    MSDCheckForErrorCases@MSDErrorCase 006F  
                                           ___flneg@f1 0078  
                                      ?_MSDReadHandler 0001  
                                         ?i2__i2c_send 0001  
                         fat_resize_file@first_cluster 00B8  
                                         ?i2__i2c_stop 0001  
                                 __end_of_display_init 5858  
                                   ?_SYSTEM_Initialize 0001  
                               __size_of__display_itoa 0224  
                                        ___rparam_used 000001  
        motor_isr@steps_until_standstill_if_accelerate 0043  
                             __size_of_USBStallHandler 0044  
                                           ___fltol@f1 0060  
                         __end_of__i2c_not_acknowledge 603A  
                      ExternalFlash_SectorWrite@config 0084  
                      ExternalFlash_SectorWrite@buffer 008A  
                            __end_of_motor_process_cue 38A4  
                          __end_of__parse_command_long 4020  
                                   __size_of__get_date 000C  
                            __end_of_fat_get_file_size 449C  
                                   __size_of__get_item 018A  
                                  __size_of_USBSuspend 0030  
                                   __size_of__get_time 000C  
                                  ??__system_pin_setup 0060  
                                  _motor_maximum_speed 0137  
                                 ??_flash_partial_read 008F  
                  __end_of_motor_increase_manual_speed 5F48  
                          _motor_increase_manual_speed 5F2E  
                                       __pcstackCOMRAM 0001  
                           __size_of__flash_get_status 0034  
                            __end_of_USBEnableEndpoint 581E  
                  __size_of_ExternalFlash_CapacityRead 0014  
                                        __end_of_sd000 A2FE  
                                        __end_of_sd001 A132  
                                        __end_of_sd002 A160  
                                        __end_of_sd003 A1BB  
                                            ?_MSDTasks 0001  
                                         __pidataBANK2 541A  
                                         __pidataBANK4 523A  
                             __parse_item@value_string 009B  
                                     ?_fat_resize_file 00AC  
                                  ??_SYSTEM_Initialize 0060  
                            __get_available_root_entry 5C6C  
                 ExternalFlash_SectorWrite@sector_addr 0086  
                      __end_of_bit_pattern_verticalbar A2F2  
                     __size_of_USBCtrlEPAllowDataStage 00A2  
                                   __size_of__read_fat 0058  
                                      _active_protocol 01C1  
                                  i2USBStallEndpoint@p 0007  
                        __size_of_USBConfigureEndpoint 0094  
                   __size_of_ExternalFlash_MediaDetect 000A  
                          __end_of_USBCtrlTrfInHandler 2E68  
                                        __end_of_ultoa 1A4A  
                                  display_prepare@cntr 00D3  
                                  display_prepare@temp 00C8  
                                         _gblSenseData 021F  
                          motor_change_speed@new_speed 0060  
                                      _MSDErrorHandler 0DDA  
                       ?_ExternalFlash_MediaInitialize 0060  
                 __sector_from_file_number@file_number 0062  
                               i2_USBTransferOnePacket 174C  
                       __end_of_motor_set_manual_speed 4606  
                                   __size_of_api_parse 012A  
                      ??__motor_steps_from_degrees_int 0095  
                                      _motor_move_type 014B  
                                   _motor_move_endless 5B8E  
                                   _flash_sector_write 537A  
                                           _dc_divide1 9F7E  
                                           _dc_divide2 9F2E  
                                   _fat_read_from_file 1FF4  
                                   __size_of__spi_init 0038  
                                            ?i2_memcpy 0001  
                                            ?i2_memset 0001  
                              flash_sector_write@match 0083  
                __end_of_MSDProcessCommandMediaPresent C9B6  
               __size_of_MSDProcessCommandMediaPresent 03EE  
                        _MSDProcessCommandMediaPresent C5C8  
                               flash_partial_read@data 008D  
                            __end_of__system_pin_setup 4904  
                               flash_partial_read@page 0087  
                 __size_of_motor_decrease_manual_speed 0022  
                             ??_USBCtrlTrfSetupHandler 001E  
                              _USBTicksSinceSuspendEnd 0159  
                       motor_move_degrees_int@distance 0099  
                    __flash_copy_page_to_buffer@buffer 0075  
                                     ?_USBDeviceAttach 0001  
                                  ?_motor_move_endless 008C  
                            __end_of_SYSTEM_Initialize 4D80  
                                    __end_of__i2c_read 3C30  
                                    __end_of__i2c_send 6058  
                               _USBStdGetStatusHandler 3570  
                                  ?_flash_sector_write 007F  
                                  USBStallEndpoint@dir 0060  
                                    __end_of__i2c_stop 6074  
                                          ?__i2c_start 0001  
                                              ??_ultoa 0075  
                      ?__encoder_next_divide_step_size 0001  
                     ??__encoder_next_divide_step_size 0060  
                                  ?_fat_read_from_file 00C9  
                                          ?__i2c_write 0065  
                        __read_value_from_offset@value 0067  
                                           __pbssBANK0 00FF  
                                           __pbssBANK1 0100  
                                           __pbssBANK2 0200  
                                           __pbssBANK3 0300  
                                           _dc_startup 0400  
       __motor_decide_direction@distance_to_target_ccw 008E  
                     __size_of_i2c_display_write_fixed 0054  
                                     _USBStallEndpoint 1334  
                                           _gblNumBLKS 0240  
                                            ?_i2c_init 0001  
                            _overshoot_in_steps_string A227  
                                     _mediaInformation 0298  
                       __size_of_fat_get_format_status 00AE  
                       fat_get_file_information@offset 0094  
                       __get_available_cluster@cluster 008F  
                        __end_of_fat_get_format_status 336E  
                                        __flash_wakeup 4EE4  
                             __fill_buffer_get_display 30A2  
                              ?__get_available_cluster 008B  
                                            ?__i2c_get 0001  
                          __size_of_USBWakeFromSuspend 0038  
                                          _pBDTEntryIn 010F  
                          __size_of_i2c_display_cursor 0022  
                     __end_of_USBCtrlEPServiceComplete 174C  
                __end_of_APP_DeviceCustomHIDInitialize 5A40  
               __size_of_APP_DeviceCustomHIDInitialize 0034  
                        _APP_DeviceCustomHIDInitialize 5A0C  
                          MSDTransferTerminated@handle 000C  
                               __motor_move_steps@type 0084  
                   __size_of__data_sector_from_cluster 0010  
                            __size_of_motor_goto_steps 009A  
                     __size_of__motor_decide_direction 0196  
                   ExternalFlash_SectorSizeRead@config 0060  
                                 USBCtrlTrfRxService@i 0001  
                                              ?___flge 0078  
                                              ?___lmul 0060  
                                           ??_MSDTasks 00AC  
                               __display_itoa@decimals 00A1  
                         __parse_jump_steps@out_buffer 0096  
                                 ??_motor_move_endless 008E  
                               ??_adc_read_temperature 0091  
                                              ?___wmul 0060  
                         __end_of_encoder_statemachine B7F6  
                                 ??_flash_sector_write 0083  
                    __size_of__fat_offset_from_cluster 001A  
                       __flash_write_to_buffer@command 007A  
                                 ??_fat_read_from_file 00D3  
                         __size_of__flash_partial_read 007A  
                            ?__fat_offset_from_cluster 0060  
                                    __end_of__add_item 1C40  
                                            MSDTasks@i 00B1  
                             ??_motor_move_degrees_int 009E  
                                              ?_memcpy 0060  
                                              ?_memset 0060  
                                           __motor_run EC88  
                                       ___lmul@product 0068  
                                           _device_dsc A270  
                  fat_get_file_information@file_number 0096  
                                     ??_display_update 0070  
                                     ?_i2c_eeprom_read 0071  
                                     _USBCtrlEPService 3A6E  
                                    ??_configFile_read 01C4  
                                           _ep_data_in 0134  
                                              ?_spi_tx 0060  
                                   __display_clear@col 0063  
                                            ?_adc_init 0001  
            __motor_calculate_distance@target_position 0060  
                              ?__motor_move_back_forth 0001  
                                   __display_clear@row 0062  
                                              ?_strlen 0060  
                                            ?__get_fbr 0060  
                __data_sector_from_cluster@fat_cluster 0060  
                                            ?__get_mbr 0060  
                          __end_of_USBCtrlTrfRxService 1334  
            __ic2_display_set_ddram_address@data_array 006B  
                                        __display_itoa E478  
                              ?__write_value_to_offset 0060  
                                   _USBCheckStdRequest 22A0  
                                   __size_of_motor_isr 05EC  
                                    _configDescriptor1 A0BE  
                 __size_of__divide_jump_size_decrement 006E  
                                              i2l20136 406C  
                                              i2l20138 40A0  
                                              i2l13038 2A90  
                                              i2l12622 23B6  
                                              i2l13608 2586  
                                              i2l13538 5C20  
                                              i2l17012 4C28  
                                              i2l12990 51C0  
                                              i2l12986 51A2  
                                              i2l18130 0290  
                                              i2l19140 B89C  
                              ??_MSDCheckForErrorCases 006E  
                                              i2l19146 B8CC  
                                              i2l17924 0340  
                                              i2l17952 03A0  
                                    i2__i2c_write@data 0006  
                                            ?___xxtofl 006A  
                                    i2__i2c_write@cntr 000A  
                              ?_configFile_readDefault 0001  
                          __end_ofi2_SYSTEM_Initialize 51E8  
                                           ??i2_memcpy 0007  
                          ??__motor_calculate_distance 0064  
                                           ??i2_memset 0007  
                                           _flash_init 5FE6  
                             ?__parse_set_manual_speed 0066  
                   __fill_buffer_get_display@outBuffer 0064  
                          __end_of_USBCtrlTrfTxService 2B36  
                                    __end_of__get_date 600C  
                                  _USBStdSetCfgHandler 2544  
                                    __end_of__get_item F858  
                                   i2__i2c_eeprom_busy 5D86  
                                    __end_of__get_time 6000  
                     __end_of_maximum_speed_arc_string A24C  
                                   __size_of_spi_tx_rx 0098  
                                   __size_of_spi_tx_tx 0090  
                                            ?_fat_init 0001  
                __parse_jump_steps_with_overshoot@data 0094  
                                              _RPINR21 000EFC  
                                              _RPINR22 000EFD  
                                              _SSP1ADD 000FC8  
                        i2c_display_init@init_sequence 006B  
                                    __end_of_dc_manual 9E3E  
                         __end_of__display_padded_itoa 22A0  
                                              _SSP1BUF 000FC9  
                                              _RXADDRH 000F68  
                                              _RXADDRL 000F69  
                           __end_ofi2_USBStallEndpoint 164A  
                       ??_motor_divide_jump_to_nearest 009E  
                                              _TXADDRH 000F6A  
                                              _TXADDRL 000F6B  
                                  ?_USBCheckStdRequest 0001  
                         __size_of_USBStdGetDscHandler 0140  
                                   _motor_speed_lookup 9093  
                                 __flash_set_page_size 46E6  
                                    __end_of_dc_setup1 A06E  
                                    __end_of_dc_setup2 A01E  
                                              _UIEbits 000F36  
                         __parse_set_manual_speed@data 0066  
                            __size_of_motor_move_steps 002E  
                                  i2c_eeprom_read@addr 0077  
                           __end_of_APP_DeviceMSDTasks 5FB6  
                                              _UIRbits 000F62  
                                    __end_of__read_fat 4E8C  
                                  i2c_eeprom_read@data 0073  
          MSDCheckForErrorCases@HostMoreDataThanDevice 006E  
                    __size_of__sector_from_file_number 0030  
                __end_of__flash_compare_page_to_buffer 43A8  
               __size_of__flash_compare_page_to_buffer 007C  
                        __flash_compare_page_to_buffer 432C  
                                  ?i2__i2c_eeprom_busy 0001  
                                           ??_i2c_init 0060  
                                     __CFG_CFGPLLEN$ON 000000  
                             __i2c_write@slave_address 0068  
                            ?__sector_from_file_number 0060  
                             ?__motor_schedule_command 0060  
                                         ??_USBMSDInit 000C  
                        fat_read_from_file@return_code 00D8  
                                    __read_fat@cluster 008F  
                       __end_of__get_available_cluster 2C04  
                                       ?__flash_wakeup 0001  
               fat_read_from_file_fast@working_cluster 00BD  
             __encoder_next_arc_step_size@old_stepsize 0060  
                               fat_find_file@extension 008D  
                                    __end_of_api_parse 0B9E  
                                    ?i2_ResetSenseData 0001  
                                           ??__i2c_get 0060  
                                    _MSDProcessCommand 0942  
                           __display_padded_itoa@value 0078  
                           __size_of_motor_process_cue 009A  
                             fat_find_file@file_number 0091  
                            motor_goto_steps@direction 009D  
                                        __i2c_send@dat 0060  
                  __motor_move_steps@distance_in_steps 007D  
                            __flash_get_status@command 006E  
                                            ?_tmr0_isr 0001  
                                              __Hparam 0000  
                      ??_USBIncrement1msInternalTimers 0001  
                                 ?_USBStdSetCfgHandler 0001  
                           __size_of_fat_get_file_size 007A  
            __end_of__get_available_offset_from_buffer 4C16  
           __size_of__get_available_offset_from_buffer 005E  
                  ??__get_available_offset_from_buffer 0064  
                   ?__get_available_offset_from_buffer 0060  
                    __get_available_offset_from_buffer 4BB8  
                                    __end_of__spi_init 58CA  
                          __size_of_USBCheckHIDRequest 00E2  
                                              __Lparam 0000  
                 __size_of__divide_jump_size_increment 0040  
                                   ??i2_ResetSenseData 0001  
                                   __display_itoa@text 00A2  
                             __size_of_fat_create_file 013C  
                                    __end_of_hid_rpt01 A1A1  
                                   ?_MSDProcessCommand 0001  
                              __end_of_MSDErrorHandler 0EF4  
                           _MSDTransferTerminated$2623 000E  
                           __size_of_USBEnableEndpoint 003C  
                                         ?_system_init 0001  
                         __size_of_fat_restore_mbr_fbr 0092  
                             _inverse_direction_string A25E  
                                __size_of_encoder_init 0024  
                           ??_fat_get_file_information 0091  
                                 ??_USBCheckStdRequest 001E  
                                              ___aldiv 2C04  
                                      __size_of___flge 0122  
                                              ___almod 336E  
                                            ?_spi_init 0001  
                                              ___fladd CD08  
                        __size_of_USBCtrlTrfOutHandler 0062  
                                   __display_itoa_long 100A  
                i2ExternalFlash_MediaInitialize@config 0001  
                  ExternalFlash_MediaInitialize@config 0060  
                                              ___fldiv D606  
                                     _ToSendDataBuffer 0340  
                                              ___flneg 5AA2  
                                      __size_of___lmul 0058  
                    __end_of__data_sector_from_cluster 5FD6  
                                              ___flmul C9B6  
                                              ___fltol 2702  
                                              ___lldiv 40A6  
                             __end_of_ccw_limit_string A2D1  
                                     ??_USBDeviceTasks 001F  
                                      __size_of___wmul 0028  
                                              ___llmod 4904  
                    __motor_decide_direction@overshoot 0081  
                                              ___lwdiv 5140  
                                    ??_USBStallHandler 0001  
                                              ___lwmod 5660  
                                              _dc_arc1 9EDE  
                                              _dc_arc2 9E8E  
       i2c_display_program_custom_character@data_array 0074  
                                              _dc_main A06E  
                       __end_of__motor_move_back_forth 3570  
                                    ?__i2c_acknowledge 0001  
               __ic2_display_set_cgram_address@address 006D  
                           __end_of_motor_change_speed 606C  
                                 ??i2__i2c_eeprom_busy 0006  
                                              _dc_zero 9E3E  
                                  __size_of__i2c_start 0008  
                              __size_of_motor_arc_move 00E4  
                                              __pcinit 3D58  
                                      __size_of_memcpy 0060  
                                  __size_of__i2c_write 0050  
                                      __size_of_memset 0030  
                             __size_of_MSDWriteHandler 02EC  
                            __end_of_configDescriptor1 A0FE  
                       __end_of__write_value_to_offset 5970  
                                  ??_MSDProcessCommand 00A7  
                  __motor_move_steps@distance_to_limit 0087  
                                              __ramtop 0F00  
                                    __motor_move_steps EE5C  
                         ExternalFlash_SectorRead@page 0093  
                               __display_itoa_u16@text 007A  
                                           ??_adc_init 0060  
                                              __ptext0 3B06  
                                              __ptext1 F858  
                                              __ptext2 5EC0  
                                              __ptext3 2624  
                                              __ptext4 5EDE  
                                              __ptext5 393E  
                                              __ptext6 4FEC  
                                              __ptext7 3B9C  
                                              __ptext8 6030  
                                              __ptext9 603A  
                                       ?__display_itoa 009F  
                                              _inPipes 0109  
                    __size_of_ExternalFlash_SectorRead 0034  
                                      __size_of_spi_tx 005A  
                          _USBDeferOUTDataStagePackets 015A  
                                   ??__i2c_acknowledge 0060  
                                            _T0CONbits 000FD5  
                                           ??__get_fbr 0062  
                       __end_of_configFile_readDefault 458E  
                                  ?__display_itoa_long 00B7  
                                           ??__get_mbr 0062  
                            ?_ExternalFlash_SectorRead 008B  
              motor_divide_jump@target_divide_position 00A3  
                                 __motor_run@direction 006B  
                                      __size_of_strlen 003E  
                          __end_of__system_timer0_init 5C16  
                              __read_value_from_offset 5548  
                                   ?__motor_move_steps 007D  
                              _fat_read_from_file_fast E252  
                                         ??_USBSuspend 0018  
                                            _T2CONbits 000FCA  
                                   __end_of_USBMSDInit 1226  
                                              _isdigit 5E3A  
                                     ??_ResetSenseData 0060  
                              ?__flash_write_to_buffer 0073  
                             __end_of_configFile_write C5C8  
                                           ??___xxtofl 006E  
                              _APP_DeviceMSDInitialize 5FD6  
                                              _msd_cbw 000D40  
                                     ___aldiv@dividend 0060  
                                              _msd_csw 000D80  
                                 __i2c_not_acknowledge 6030  
                             __offset_from_file_number 5C96  
                             __end_of_i2c_eeprom_write 4230  
                          __display_itoa_long@decimals 00BB  
                                      i2_USBDeviceInit 0302  
                                     i2USBDeviceInit@i 0009  
                           __size_of__system_pin_setup 006A  
                      ?__ic2_display_set_ddram_address 0001  
                     ??__ic2_display_set_ddram_address 006A  
                                           ??_fat_init 008F  
                    __parse_set_manual_speed@new_speed 006D  
                   __size_of_ExternalFlash_SectorWrite 0034  
                __end_of__motor_steps_from_degrees_int 0DDA  
               __size_of__motor_steps_from_degrees_int 011A  
                        __motor_steps_from_degrees_int 0CC0  
                                ?__flash_set_page_size 0001  
                                   __end_of_USB_CD_Ptr 9DEE  
                                           _msd_buffer 000600  
                           ??__motor_distance_to_limit 0070  
                           __size_of_SYSTEM_Initialize 005A  
                      __size_of_USBCtrlTrfSetupHandler 0094  
                                  ??__motor_move_steps 0085  
                                              _stricmp 4CCC  
                                __size_of_display_init 003A  
                              __size_of__flash_is_busy 0024  
                         fat_get_file_size@file_number 00A1  
                                              _strncmp 4230  
                                              _toupper 5F62  
                                  _flash_partial_write 47C2  
                                 end_of_initialization 3DE0  
                  __end_of_maximum_speed_manual_string A1FD  
                          _maximum_speed_manual_string A1E8  
                              ??_display_get_character 0061  
                                _MSDTransferTerminated 5042  
                __flash_compare_page_to_buffer@command 007B  
                       ?_MSDProcessCommandMediaPresent 0001  
                                   __end_of_USB_SD_Ptr 9DEC  
                           __end_of_bit_pattern_degree A2EA  
                                  i2__i2c_write@length 0008  
                              __size_of_motor_set_zero 003C  
                            __size_ofi2__i2c_wait_idle 0058  
                                  i2c_eeprom_write@dat 0013  
                                              memcpy@d 0066  
                                              memcpy@n 0064  
                                              memcpy@s 0068  
                                        ??__parse_item 009D  
              __motor_get_speed_in_degrees@speed_index 0091  
                                  _pBDTEntryEP0OutNext 0059  
                            __end_of_MSDProcessCommand 0A74  
                                              itoa@buf 0070  
                                              memset@c 0062  
                                              itoa@val 0072  
                                              memset@n 0064  
                                              memset@p 0066  
                                         _encoder_init 5DAC  
                                      _USB1msTickCount 0127  
                                 ??__display_itoa_long 00BE  
                             __flash_partial_read@data 0079  
                                            i2u1112_40 2AE0  
                                            i2u1112_47 2AD6  
                                            i2u1114_40 2B20  
                                            i2u1033_48 11AE  
                                            i2u1033_49 11C2  
                                            i2u1114_47 2B16  
                                            i2u1211_40 0698  
                                            i2u1211_47 068E  
                                            i2u1035_48 11D4  
                                            i2u1204_40 25BA  
                                            i2u1035_49 11EA  
                                            i2u1037_44 1208  
                                            i2u1037_45 1202  
                                            i2u1062_40 2EC4  
                             ?_USBStdFeatureReqHandler 0001  
                                            i2u1208_40 060C  
                             __flash_partial_read@page 0073  
                                            i2u1208_47 0602  
                                            i2u1233_40 DAB2  
                                            i2u1209_40 063E  
                                            i2u1209_47 0634  
                        i2c_eeprom_write@slave_address 0024  
                                              ltoa@buf 007A  
                                            i2u1370_40 4FD8  
                                            i2u1370_46 4FDA  
                                            i2u1515_45 41BA  
                                            i2u1516_40 4212  
                                            i2u1365_40 4F9E  
                                              ltoa@val 007C  
                                            i2u1366_40 4FAA  
                                            i2u1365_48 4FA0  
                                            i2u1367_40 4FB6  
                                            i2u1366_48 4FAC  
                                            i2u1624_40 4C4A  
                                            i2u1368_40 4FC2  
                                            i2u1367_48 4FB8  
                                            i2u1624_47 4C40  
                                            i2u1369_40 4FCE  
                                            i2u1368_48 4FC4  
                                            i2u1369_48 4FD0  
                                    __end_of_motor_isr BDE2  
                                            i2u1734_40 0364  
                                            i2u1920_40 B9B4  
                                            i2u1737_40 0404  
                                            i2u1915_41 B82C  
                            __motor_calculate_distance 2464  
                                            i2u1925_40 BB9E  
                                            i2u1766_40 02FE  
                                            i2u1926_40 BBBE  
                                            i2u1918_41 B8F4  
                                ??_USBStdSetCfgHandler 0018  
                      __parse_command_long@out_idx_ptr 00A4  
                                      ___lldiv@divisor 0064  
                                           ??_tmr0_isr 0001  
                                      ___lldiv@counter 006C  
                                 __size_ofi2__i2c_send 0008  
              motor_move_degrees_int@distance_in_steps 009E  
                                 __size_ofi2__i2c_stop 0008  
                         ?_i2c_eeprom_recover_position 0001  
                            motor_goto_steps@overshoot 0098  
                      ?__ic2_display_set_cgram_address 0001  
                     ??__ic2_display_set_cgram_address 006A  
                                   __end_of_USBSuspend 5B32  
                          __end_of_use_cw_limit_string A2C7  
                                  _motor_period_lookup 9A16  
              __fill_buffer_get_mode_details@outBuffer 0060  
                              _USBCtrlEPAllowDataStage 3768  
                                    __end_of_spi_tx_rx 3A6E  
                                    __end_of_spi_tx_tx 3F0C  
                             __end_of_i2c_display_init 52DA  
                                     ___aldiv@quotient 006A  
                                              postdec1 000FE5  
                                              postdec2 000FDD  
         __make_cluster_chain@different_sector_cluster 009F  
                 __end_of_ExternalFlash_SectorSizeRead 6018  
                __size_of_ExternalFlash_SectorSizeRead 000C  
                         _ExternalFlash_SectorSizeRead 600C  
                                           ??_spi_init 0063  
                                              postinc0 000FEE  
                                              postinc1 000FE6  
                                              postinc2 000FDE  
                                 ?_flash_partial_write 007F  
                            __end_of__motor_move_steps F02C  
                     __size_of__fill_buffer_get_status 0224  
                                              utoa@buf 0067  
                                           _motor_init 5EC0  
              MSDProcessCommandMediaPresent@sectorSize 009E  
                                           _motor_mode 0149  
                             _USBCtrlEPServiceComplete 164A  
                                              utoa@val 0069  
                                            _MSD_State 0158  
                                           _motor_stop 53CA  
              __end_of__cluster_from_sector_and_offset 5D10  
             __size_of__cluster_from_sector_and_offset 0028  
                    ??__cluster_from_sector_and_offset 0064  
                     ?__cluster_from_sector_and_offset 0060  
                      __cluster_from_sector_and_offset 5CE8  
                                          ?__motor_run 0060  
                                              strlen@s 0060  
                          __size_of_USBCheckMSDRequest 00C2  
                                        ??_api_prepare 0074  
                      __size_of_motor_move_degrees_int 004A  
                           _USBStatusStageEnabledFlag1 015D  
                           _USBStatusStageEnabledFlag2 015C  
                             flash_partial_write@match 0087  
                                       _bit_pattern_ae A2DA  
                                   USBEnableEndpoint@p 000A  
                         __size_of__make_cluster_chain 02D6  
                                            _PORTAbits 000F80  
                                            _PORTDbits 000F83  
                                            _PORTEbits 000F84  
                             flash_partial_write@start 0081  
                       __end_of__flash_write_to_buffer 523A  
                                     __CFG_DSBOREN$OFF 000000  
                                   __get_item@item_ctr 006A  
                                         _display_init 581E  
motor_divide_jump_to_nearest@nearest_position_in_steps 009E  
                                          ___fladd@grs 008F  
                   __size_of__get_available_root_entry 002A  
                                 spi_tx_rx@data_length 0066  
                                ?__i2c_not_acknowledge 0001  
                     __make_cluster_chain@next_cluster 00AA  
                               fat_modify_file@cluster 00B9  
                                          ?_flash_init 0001  
                                     __CFG_CPUDIV$OSC1 000000  
                      adc_read_temperature@temperature 0095  
                                        ___xxtofl@sign 0072  
                                            _TRISAbits 000F92  
                                            _TRISBbits 000F93  
                                            _TRISCbits 000F94  
                                   api_parse@outBuffer 00AA  
                                            _TRISDbits 000F95  
                                            _TRISEbits 000F96  
                     __size_of_motor_clear_command_cue 000C  
                                   _ReceivedDataBuffer 0380  
                                   _BothEP0OutUOWNsSet 0160  
                                          ___fldiv@grs 008B  
                                          ___fldiv@rem 0084  
                       i2c_eeprom_save_position@buffer 0026  
                                        __pbssBIGRAMll 0800  
                                     ??_MSDReadHandler 0095  
                            __flash_partial_read@start 0075  
                            USBConfigureEndpoint@EPNum 0006  
                              _i2c_display_write_fixed 5098  
                           motor_arc_move@arc_in_steps 0095  
     __parse_jump_steps_with_overshoot@number_of_steps 009C  
                                    __CFG_SOSCSEL$HIGH 000000  
                           ?_USBCtrlEPAllowStatusStage 0001  
                                        ?i2__i2c_start 0001  
                                 _encoder_statemachine AFCC  
                  USER_USB_CALLBACK_EVENT_HANDLER@size 0014  
                                        ?i2__i2c_write 0006  
                              __size_of__display_clear 004A  
                                            _USTATcopy 005E  
                                      ??__flash_wakeup 0068  
        MSDProcessCommandMediaPresent@NumBytesInPacket 009D  
  __step_position_from_divide_position@divide_position 0091  
                 __end_of__encoder_next_setup_stepsize 4676  
                __size_of__encoder_next_setup_stepsize 0070  
                         __encoder_next_setup_stepsize 4606  
                                          ___flmul@grs 0085  
                              __size_of__display_start 00B2  
                         __end_of_USBTransferOnePacket 1544  
                                   _motor_steps_lookup 9461  
                                          _CCP1CONbits 000FBA  
                                    ?__i2c_eeprom_busy 0001  
                                __i2c_eeprom_busy@busy 0065  
                  __end_ofi2_ExternalFlash_MediaDetect 60A0  
                                i2c_eeprom_read@length 0075  
                          i2_ExternalFlash_MediaDetect 609C  
                    __parse_jump_steps@number_of_steps 009C  
                         __end_of__display_signed_itoa 561C  
                  __end_of__motor_get_speed_in_degrees 0942  
                          __motor_get_speed_in_degrees 0808  
                               i2c_display_cursor@line 006E  
                     __fat_sector_from_cluster@cluster 0060  
                                     __CFG_IOL1WAY$OFF 000000  
                                        ??_encoder_run 0001  
                         __end_of__parse_command_short FC84  
                                   ??__i2c_eeprom_busy 0065  
                              __motor_decide_direction F538  
                  __end_of_position_display_180_string A1E8  
                          _position_display_180_string A1D3  
                       ?__flash_compare_page_to_buffer 0073  
                        __fill_buffer_get_display@cntr 006C  
                                   __root_is_available 482E  
                        __fill_buffer_get_display@line 006D  
                                    __CFG_WPEND$PAGE_0 000000  
                                     _motor_goto_steps 38A4  
                   __flash_compare_page_to_buffer@page 0073  
                                  __CFG_MSSP7B_EN$MSK7 000000  
                                  __end_of__parse_item C1D8  
                   __make_cluster_chain@minimum_sector 009D  
                                     ?_MSDErrorHandler 0001  
                fat_resize_file@new_number_of_clusters 00B6  
                   __find_nth_cluster@sector_in_buffer 009D  
                         fat_resize_file@new_file_size 00AC  
                                     __write_root@data 0088  
                               _USBCtrlTrfSetupHandler 3C30  
                        ??_i2c_eeprom_recover_position 0079  
                                ??_flash_partial_write 0087  
                         __write_value_to_offset@value 0064  
                                 __display_padded_itoa 21BE  
                               __end_of_bit_pattern_ae A2E2  
                     ExternalFlash_CapacityRead@config 0060  
                              ?i2_USBTransferOnePacket 0001  
                             __size_of_display_prepare 0C88  
                                       __end_of___flge 0CC0  
                        ??__motor_get_speed_in_degrees 0093  
                                __end_of_USBDeviceInit 0074  
                __end_of_USBIncrement1msInternalTimers 5EC0  
               __size_of_USBIncrement1msInternalTimers 0020  
                        _USBIncrement1msInternalTimers 5EA0  
                          __end_of__steps_from_degrees F1E6  
                                       __end_of___lmul 4F94  
                      __sector_from_file_number@sector 0063  
                                      ??__display_itoa 00A4  
                        ?_ExternalFlash_SectorSizeRead 0060  
                                       __end_of___wmul 5D38  
                          __size_of_motor_items_in_cue 000C  
                            ??__read_value_from_offset 0064  
                                  ?__root_is_available 0001  
                                    __size_of_MSDTasks 0266  
                            ??_fat_read_from_file_fast 00AF  
                             __end_of_USBStallEndpoint 143E  
                                            i2memcpy@d 0007  
                                            i2memcpy@n 0005  
                                    ??_fat_create_file 00B4  
                       adc_read_temperature@adc_result 0093  
                              __end_ofi2_USBDeviceInit 0448  
                                            i2memcpy@s 0009  
                             __size_of_fat_modify_file 0234  
                            ??_APP_DeviceMSDInitialize 000F  
                                            i2memset@c 0003  
                                            i2memset@n 0005  
                                            i2memset@p 0007  
                                       __end_of_memcpy 4BB8  
                 __end_of__display_position_in_degrees 537A  
                __size_of__display_position_in_degrees 0050  
                         __display_position_in_degrees 532A  
                                      _MSDRetryAttempt 0154  
                                 i2USBStallEndpoint@ep 0006  
                                       __end_of_memset 5B02  
                                     __CFG_DSWDTEN$OFF 000000  
                                    _USBBusIsSuspended 0162  
                            flash_partial_write@length 0083  
                                       __end_of_spi_tx 4E34  
                __get_available_root_entry@file_number 0095  
                                  fat_modify_file@data 00A7  
                                       __end_of_strlen 57A6  
                         __display_padded_itoa@padding 008E  
                            __flash_set_page_size@size 0077  
                                  start_initialization 3D58  
                                  fat_modify_file@root 00C3  
                              ?_USBStdGetStatusHandler 0001  
                                        ??__write_root 008A  
                             i2SYSTEM_Initialize@state 0005  
                        ExternalFlash_SectorWrite@page 008D  
                        USBCtrlTrfRxService@byteToRead 0002  
                               ??__flash_set_page_size 0073  
                                 display_prepare@space 00D2  
                                    ??_MSDWriteHandler 008F  
                                  __end_of_api_prepare 28BE  
                    __end_of__get_available_root_entry 5C96  
                            __display_itoa_long@length 00C2  
         __motor_decide_direction@distance_to_limit_cw 0082  
  __step_position_from_divide_position@target_position 0095  
                           ??__fill_buffer_get_display 0067  
                                    __size_ofi2_memcpy 005C  
                           i2c_display_cursor@position 006D  
                               ?_MSDTransferTerminated 000C  
                                    __size_ofi2_memset 002C  
                                       ??i2__i2c_start 0001  
                                      _USBMSDOutHandle 0141  
                         __end_of_USBConfigureEndpoint 3D58  
                                ?_encoder_statemachine 0001  
                                       ??i2__i2c_write 0009  
                                         ??__i2c_start 0060  
                                         ??__i2c_write 0068  
                      __end_of_USBStdFeatureReqHandler DB44  
                                  __flash_partial_read 449C  
                                    USBStallEndpoint@p 0066  
                                     _motor_move_steps 5BBC  
                                        _MSDHostNoData 0151  
                                 ??__root_is_available 008F  
                               _motor_move_degrees_int 54B4  
                    __end_of_USBCtrlEPAllowStatusStage 2D9E  
                         ?__encoder_next_arc_step_size 0060  
                    __size_of_i2c_eeprom_save_position 008E  
                             __end_of_USBCtrlEPService 3B06  
                       ?__motor_steps_from_degrees_int 0091  
                           __size_of_MSDProcessCommand 0132  
                                  __size_of__motor_run 01D4  
                            ?_i2c_eeprom_save_position 0001  
                                            __i2c_read 3B9C  
                                            __i2c_send 604E  
                                      ___llmod@divisor 0064  
                                            __i2c_stop 606C  
                        ?__encoder_next_setup_stepsize 0060  
                                      ___llmod@counter 0068  
              _ExternalFlash_MediaInitialize$intlevel0 5E84  
             __end_of__parse_jump_steps_with_overshoot FDD6  
            __size_of__parse_jump_steps_with_overshoot 0152  
                   ??__parse_jump_steps_with_overshoot 009A  
                    ?__parse_jump_steps_with_overshoot 0094  
                     __parse_jump_steps_with_overshoot FC84  
                                    __size_of_i2c_init 001C  
                           configFile_read@file_number 01FB  
                            ??_USBCtrlEPAllowDataStage 0002  
                                _motor_cue_write_index 014C  
                                      _configFile_name 02DC  
                      ??__fill_buffer_get_mode_details 0062  
                                      _configFile_read F394  
                                       USBDeviceInit@i 0068  
                  __end_of_motor_decrease_manual_speed 5E7E  
                          _motor_decrease_manual_speed 5E5C  
                             __size_of__backlight_init 0004  
                           __flash_partial_read@length 0077  
                        __root_is_available@first_byte 0094  
                               _pBDTEntryEP0OutCurrent 005B  
                               __size_of_fat_find_file 00E8  
                     __end_of_fat_get_file_information 4422  
                                          _DMACON1bits 000F88  
                               i2c_eeprom_write@length 000F  
                                          _DMACON2bits 000F86  
                                  __size_of_flash_init 000E  
                              USBTransferOnePacket@dir 0060  
                              USBTransferOnePacket@len 0063  
                                    __size_of__i2c_get 000A  
                                        _MSDTasks$2588 00AD  
                          MSDErrorHandler@OldMSD_State 0069  
                                        _MSDTasks$2589 00AF  
                       __end_ofi2_USBTransferOnePacket 184E  
                          __size_of_flash_partial_read 0026  
                                             ??___flge 0080  
                                             ??___lmul 0068  
                                spi_init@configuration 0063  
                                ?__display_padded_itoa 0078  
                              flash_partial_read@start 0089  
                      motor_move_degrees_int@direction 00A2  
                                             ??___wmul 0064  
                                  _USBStdGetDscHandler 058C  
                           __size_of__motor_move_steps 01D0  
                                 ?__flash_partial_read 0073  
                                          ?_motor_init 0001  
                                  __end_of_encoder_run 1D34  
                                    __CFG_ADCSEL$BIT12 000000  
                    __size_of_APP_DeviceCustomHIDTasks 00A8  
                           fat_get_file_size@file_size 009D  
                                          __pdataBANK2 029D  
                                          __pdataBANK4 0400  
                             motor_isr@steps_remaining 0045  
                                          ?_motor_stop 0001  
                            ?_APP_DeviceCustomHIDTasks 0001  
                                       _motor_arc_move 20DA  
                    __end_of_overshoot_in_steps_string A23A  
                                 __size_of_system_init 0174  
                                             ??_memcpy 0066  
                              __size_of__i2c_wait_idle 0064  
                                             ??_memset 0066  
     __motor_decide_direction@target_position_in_steps 007D  
                         __size_of__parse_command_long 0086  
                                   __end_of__i2c_start 607C  
                                             ??_spi_tx 0064  
                                   __end_of__i2c_write 532A  
                                     __get_item@buffer 0064  
                            __root_is_available@offset 0091  
          __parse_jump_steps_with_overshoot@out_buffer 0096  
                                             ??_strlen 0062  
                               ??__i2c_not_acknowledge 0060  
                                            ___fladd@a 0080  
                                            ___fladd@b 007C  
  motor_divide_jump_to_nearest@nearest_divide_position 00A2  
                                            __add_item 1B46  
                               _USBActiveConfiguration 01C3  
                       __end_of_USBStdGetStatusHandler 361A  
                                            ___fldiv@a 007C  
                                            ___fldiv@b 0078  
                             __size_of_fat_resize_file 00FE  
                        ?__display_position_in_degrees 0060  
                             __fat_sector_from_cluster 5EFA  
                          api_parse@receivedDataLength 00A9  
                                     api_parse@out_idx 00B0  
                                    __size_of_adc_init 0058  
                                            ___flmul@a 007C  
                                            ___flmul@b 0078  
                                          __pbssCOMRAM 0057  
                                    __size_of__get_fbr 0274  
                            ??_i2c_display_write_fixed 0068  
                                        __pcstackBANK0 0060  
                                        __pcstackBANK1 01C4  
                         __size_of_USBCtrlTrfInHandler 00CA  
                                    __size_of__get_mbr 00D0  
                         ??_ExternalFlash_CapacityRead 0064  
                       __size_of_MSDCheckForErrorCases 0116  
             __get_available_offset_from_buffer@buffer 0062  
                        __end_of_MSDCheckForErrorCases 100A  
                     __end_of__motor_distance_to_limit 01BC  
                                  _fat_restore_mbr_fbr 3DEA  
                           fat_create_file@file_number 00BC  
                                    __size_of___xxtofl 0144  
                                            _gblBLKLen 023C  
             __get_available_offset_from_buffer@offset 0066  
                   __end_of_flash_command_pagesize_512 A2FA  
                           _flash_command_pagesize_512 A2F6  
                   __end_of_flash_command_pagesize_528 A2F6  
                           _flash_command_pagesize_528 A2F2  
                                       __flash_is_busy 5DF4  
                                 ?_USBStdGetDscHandler 0001  
                                         _isdigit$8442 0061  
         __end_of_i2c_display_program_custom_character 432C  
        __size_of_i2c_display_program_custom_character 007C  
               ??_i2c_display_program_custom_character 0070  
                ?_i2c_display_program_custom_character 006E  
                 _i2c_display_program_custom_character 42B0  
                                            __get_date 6000  
                                    _flash_sector_read 5D38  
                                    __size_of_fat_init 0010  
                  fat_get_file_information@root_sector 0092  
                      __end_of__read_value_from_offset 5590  
                                            __get_item F6CE  
                      __end_of_fat_read_from_file_fast E478  
                                       _motor_set_zero 57A6  
                                            __get_time 5FF4  
                               flash_sector_write@data 0081  
                                     i2__i2c_wait_idle 4F94  
                               flash_sector_write@page 007F  
                                  __end_of__write_root 54B4  
                                            _dc_manual 9DEE  
                          motor_move_degrees_int@speed 009B  
                           __end_of_USBWakeFromSuspend 593A  
                            ??__motor_decide_direction 0082  
                                   ?_flash_sector_read 0087  
                           __end_of_i2c_display_cursor 5E3A  
                                          __parse_item BDE2  
                  __end_of__divide_jump_size_decrement 47C2  
                          __divide_jump_size_decrement 4754  
                                           ?__i2c_read 0065  
                                           ?__i2c_send 0001  
                                            _dc_setup1 A01E  
                                            _dc_setup2 9FCE  
                                      _USBStallHandler 56A4  
                             __display_padded_itoa@len 008C  
                                         _pBDTEntryOut 0115  
                                           ?__i2c_stop 0001  
                           fat_modify_file@file_number 00B7  
                             __display_padded_itoa@pos 008D  
                             __display_padded_itoa@tmp 0082  
                             motor_move_steps@distance 008C  
                                            __read_fat 4E34  
                          configFile_read@value_string 01EB  
                     __size_of__parse_set_manual_speed 0084  
                             __size_of_USBDeviceAttach 0032  
                     __end_of_ExternalFlash_SectorRead 59D8  
          __end_of__step_position_from_divide_position 1E20  
         __size_of__step_position_from_divide_position 00EC  
                ??__step_position_from_divide_position 0095  
                 ?__step_position_from_divide_position 0091  
                  __step_position_from_divide_position 1D34  
                              __motor_move_steps@speed 0081  
                   __get_available_cluster@skip_sector 008D  
                                   i2_USBStallEndpoint 1544  
                                     ___lwdiv@dividend 0060  
                                 _motor_cue_read_index 014D  
                                _fat_get_format_status 32C0  
                    fat_read_from_file_fast@start_byte 00A1  
                                    fat_find_file@name 008B  
                       MSDProcessCommandMediaPresent@i 00A6  
                                 ?_fat_restore_mbr_fbr 0001  
                                  ??_flash_sector_read 008B  
                                            _api_parse 0A74  
                                            __pintcode 9008  
                            fat_create_file@root_entry 00BD  
                               __end_of_motor_arc_move 21BE  
                              __fill_buffer_get_status E69C  
                                   _APP_DeviceMSDTasks 5FA4  
                                        __pmediumconst 9092  
                                             ?___aldiv 0060  
                                    __size_of_tmr0_isr 003A  
                                             ?___almod 0060  
                                             ?___fladd 007C  
                                  fat_find_file@offset 0094  
                                ??__flash_partial_read 007B  
                               __parse_jump_steps@data 0094  
                                             ?___fldiv 0078  
                                            __ptext100 4606  
                                            __ptext101 5B32  
                                            __ptext110 21BE  
                                            __ptext102 4676  
                                             ?___flneg 0078  
                                            __ptext111 532A  
                                            __ptext103 5728  
                                            __ptext200 5D86  
                                            __ptext120 2C04  
                                            __ptext112 100A  
                                            __ptext104 4754  
                                            __ptext201 4F94  
                                            __ptext121 54FE  
                                            __ptext113 E478  
                                            __ptext105 A344  
                                            __ptext210 5EA0  
                                            __ptext202 607C  
                                            __ptext130 5A40  
                                            __ptext122 EAAA  
                                            __ptext114 5768  
                                            __ptext106 5F7A  
                                            __ptext211 3A6E  
                                            __ptext203 6084  
                                            __ptext131 4D26  
                                            __ptext123 0448  
                                            __ptext115 561C  
                                            __ptext107 0808  
                                            __ptext220 058C  
                                            __ptext212 4C16  
                                            __ptext204 608C  
                                            __ptext140 537A  
                                            __ptext132 5FA4  
                                            __ptext124 2702  
                                            __ptext116 341C  
                                            __ptext108 D606  
                                            __ptext221 D8C0  
                                            __ptext213 3C30  
                                            __ptext205 01BC  
                                            __ptext141 51E8  
                                            __ptext133 DDB8  
                                            __ptext125 5AA2  
                                            __ptext117 5660  
                                            __ptext109 55D8  
                                            __ptext230 4A94  
                                            __ptext222 4020  
                                            __ptext214 164A  
                                            __ptext206 0302  
                                            __ptext150 59A4  
                                            __ptext142 3E7C  
                                            __ptext134 0942  
                                            __ptext126 C9B6  
                                            __ptext118 5140  
                                            __ptext231 5F48  
                                            __ptext223 5194  
                                            __ptext215 3768  
                                            __ptext207 5902  
                                            __ptext151 5D38  
                                            __ptext143 4D80  
                                            __ptext135 49D0  
                                            __ptext127 CD08  
                                            __ptext119 336E  
                                            __ptext240 2D9E  
                                            __ptext232 609C  
                                            __ptext224 2E68  
                                            __ptext216 22A0  
                                            __ptext208 5B02  
                                            __ptext160 5F90  
                                            __ptext152 449C  
                                            __ptext144 432C  
                                            __ptext136 C5C8  
                                            __ptext128 FF28  
                                            __ptext241 2A66  
                                            __ptext233 5A0C  
                                            __ptext225 2382  
                                            __ptext217 2544  
                                            __ptext209 56A4  
                                            __ptext161 5E7E  
                                            __ptext153 5DF4  
                                            __ptext145 E8C0  
                                            __ptext137 D044  
                                            __ptext129 5AD2  
                        ??__divide_jump_size_decrement 0060  
                                            __ptext242 0000  
                                            __ptext234 174C  
                                            __ptext226 5042  
                                            __ptext218 5C16  
                                            __ptext170 0A74  
                                            __ptext162 6058  
                                            __ptext154 4EE4  
                                            __ptext146 0EF4  
                                            __ptext138 6098  
                                            __ptext235 57E2  
                                            __ptext227 1544  
                                            __ptext219 3570  
                                            __ptext171 FB28  
                                            __ptext163 361A  
                                            __ptext155 4DDA  
                                            __ptext147 0DDA  
                                            __ptext139 5970  
                                            __ptext236 3CC4  
                                            __ptext228 5FD6  
                                            __ptext180 3F9A  
                                            __ptext172 53CA  
                                            __ptext164 27E0  
                                            __ptext156 59D8  
                                            __ptext148 1334  
                                            __ptext237 4AF6  
                                            __ptext229 1118  
                                            __ptext181 412A  
                                            __ptext173 57A6  
                                            __ptext165 E69C  
                                            __ptext157 39D6  
                                            __ptext149 4A32  
                                            __ptext238 1226  
                                            __ptext190 0074  
                                            __ptext182 458E  
                                            __ptext174 34C6  
                                            __ptext166 4B58  
                                            __ptext158 2F2A  
                                            __ptext239 2CD2  
                                            __ptext191 4F3C  
                                            __ptext183 6062  
                                            __ptext175 5B8E  
                                            __ptext167 F1E6  
                                            __ptext159 600C  
                                            __ptext192 143E  
                                            __ptext184 FC84  
                                            __ptext176 38A4  
                                            __ptext168 30A2  
                                            __ptext185 FDD6  
                                            __ptext177 F538  
                                            __ptext169 5B60  
                                            __ptext194 5858  
                                            __ptext186 5BBC  
                                            __ptext178 2464  
                                            __ptext195 1C40  
                                            __ptext187 EE5C  
                                            __ptext179 6018  
                                            __ptext196 B7F6  
                                            __ptext188 1E20  
                                            __ptext197 3F0C  
                                            __ptext189 6024  
                                            __ptext198 41AE  
                                            __ptext199 5590  
                                             ?___flmul 0078  
                          __size_of_motor_move_endless 002E  
                                             ?___fltol 0060  
                                  fat_find_file@sector 0092  
                                             ?___lldiv 0060  
                                             ?___llmod 0060  
                      motor_move_degrees_int@overshoot 009D  
                          __size_of_flash_sector_write 0050  
                                             ?___lwdiv 0060  
                                            __spi_init 5892  
                                             ?___lwmod 0060  
                           ??__offset_from_file_number 0062  
                          __size_of_fat_read_from_file 00E6  
                     __size_of__motor_schedule_command 00EC  
                                            _hid_rpt01 A184  
                                  ?i2_USBStallEndpoint 0001  
                        __size_of_adc_read_temperature 01DE  
                        __parse_jump_steps@out_idx_ptr 0098  
                                            _idle_rate 01C2  
                   __size_of__motor_calculate_distance 00E0  
                                   display_update@line 0070  
                                    __size_of_spi_init 0040  
                                     ___almod@dividend 0060  
                                     ?i2_USBDeviceInit 0001  
                                          _api_prepare 27E0  
                            fat_modify_file@start_byte 00A1  
                                      __i2c_write@data 0065  
                                      __i2c_write@cntr 0069  
                                  fat_create_file@name 00AC  
                                  ?_APP_DeviceMSDTasks 0001  
                            __size_ofi2_ResetSenseData 0062  
                   __motor_calculate_distance@distance 0069  
                   __flash_write_to_buffer@data_length 0077  
                                  fat_create_file@size 00B0  
                                           ?__add_item 0084  
                                 _USBTransferOnePacket 143E  
                           __make_cluster_chain@offset 00A8  
            __ic2_display_set_cgram_address@data_array 006A  
                           ?_ExternalFlash_MediaDetect 0060  
                           __make_cluster_chain@sector 00A4  
                       ??_ExternalFlash_SectorSizeRead 0062  
                                 __display_signed_itoa 55D8  
                  __end_of__divide_jump_size_increment 5768  
                          __divide_jump_size_increment 5728  
                                    ??_display_prepare 00C6  
                                             ?_isdigit 0001  
                              _motor_clear_command_cue 6018  
                                 __CFG_RTCOSC$T1OSCREF 000000  
                                 __parse_command_short FB28  
                               fat_read_from_file@data 00D1  
                  __fill_buffer_get_display@secondHalf 0066  
                                    ?_configFile_write 0001  
                               __end_of__flash_is_busy 5E18  
                                        _fat_find_file 1F0C  
                                    __display_itoa@len 00B4  
                                    __display_itoa@pos 00B6  
                                    __display_itoa@tmp 00AA  
                               fat_read_from_file@root 00DD  
                                    __display_itoa_u16 315A  
                                    ?_i2c_eeprom_write 000B  
                         __end_of_USBCtrlTrfOutHandler 4B58  
                             __size_of_i2c_eeprom_read 0056  
                                    ??_fat_modify_file 00A9  
                               ??_encoder_statemachine 00A8  
                             ??_motor_speed_from_index 009F  
                            __end_of_flash_sector_read 5D60  
                                ??_USBStdGetDscHandler 0001  
                  __size_of__flash_copy_page_to_buffer 005A  
                                          _ep_data_out 0131  
                                     ___lwdiv@quotient 0064  
                               __end_of_motor_set_zero 57E2  
                                   ??_configFile_write 00E3  
                                   _motor_change_speed 6062  
                                        _MSDWriteState 0155  
                         __size_of_USBCtrlTrfRxService 010E  
                                             ?_stricmp 0061  
                                    _ConfigFile_buffer 0800  
                                   ?__display_itoa_u16 0078  
                        USBConfigureEndpoint@direction 0001  
                                             ?_strncmp 0060  
                                             ?_toupper 0001  
                                       __display_clear 54FE  
                                   ??_i2c_eeprom_write 0010  
                            __size_of__i2c_acknowledge 000A  
                                           ?__get_date 0060  
               __cluster_from_sector_and_offset@offset 0062  
                                       __size_of_ultoa 00FE  
                              __end_of_configFile_read F538  
                                 ??i2_USBStallEndpoint 0002  
                                           ?__get_item 0060  
               __cluster_from_sector_and_offset@sector 0060  
                                      _config_internal 012E  
                                           ?__get_time 0060  
                        ??__divide_jump_size_increment 0060  
                                  __size_of_motor_init 001E  
                         __size_ofi2_SYSTEM_Initialize 0054  
                              i2__i2c_eeprom_busy@busy 0006  
                                      _config_external 012B  
                                       __display_start 320E  
                                  __size_of_motor_stop 0050  
                                      ___aldiv@divisor 0064  
                         __size_of_USBCtrlTrfTxService 00D0  
                       __size_of_display_get_character 002E  
                                  __make_cluster_chain D330  
                                      ___aldiv@counter 0068  
                                 ??_APP_DeviceMSDTasks 00B2  
                        __end_of_display_get_character 5B8E  
                                       ___wmul@product 0064  
                                             _LATAbits 000F89  
                                             _LATBbits 000F8A  
                                             _LATCbits 000F8B  
                                             _LATDbits 000F8C  
                           __end_of_USBCheckHIDRequest 2464  
                       __root_is_available@file_number 0093  
                 __flash_compare_page_to_buffer@buffer 0075  
                                  ?_motor_change_speed 0060  
                           ??_USBCtrlEPServiceComplete 0002  
                                           ?__read_fat 008F  
                                  ??__display_itoa_u16 007C  
                              __i2c_read@slave_address 006F  
                                             _IPR2bits 000FA2  
                                             _PIE1bits 000F9D  
                                             _PIE2bits 000FA0  
                      motor_isr@steps_until_standstill 0041  
                           configFile_read@item_string 01CC  
                                          _encoder_run 1C40  
                             __fat_offset_from_cluster 5F14  
                                ??_fat_restore_mbr_fbr 0084  
                 __flash_compare_page_to_buffer@status 0079  
                                             _PIR1bits 000F9E  
                                             _PIR2bits 000FA1  
                               ??__display_padded_itoa 007D  
                                   __end_of_dc_divide1 9FCE  
                                   __end_of_dc_divide2 9F7E  
                                             _RCONbits 000FD0  
                                           ?_api_parse 00A7  
                                             _UEP0bits 000F26  
                                      ?_motor_arc_move 0001  
                                             _MSDTasks DDB8  
                                            _motor_isr B7F6  
                           _USBDeferINDataStagePackets 015B  
                                 _active_configuration 014E  
                             ??_motor_set_manual_speed 0064  
                                    ?_i2c_display_init 0001  
                              spi_tx_rx@command_length 0062  
                              flash_partial_write@data 0085  
                                   _bit_pattern_degree A2E2  
                          __size_of_USBCheckStdRequest 00E2  
                      ??_MSDProcessCommandMediaPresent 0099  
                              flash_partial_write@page 007F  
                __end_of__fill_buffer_get_mode_details F394  
               __size_of__fill_buffer_get_mode_details 01AE  
                        __fill_buffer_get_mode_details F1E6  
                                             _UCONbits 000F65  
                                           ?__spi_init 0060  
                                 __end_ofi2__i2c_start 608C  
                                 __end_ofi2__i2c_write 55D8  
                                 _USBConfigureEndpoint 3CC4  
                                         ??__motor_run 0067  
                           ?__data_sector_from_cluster 0060  
               __ic2_display_set_ddram_address@address 006A  
                                   ??_i2c_display_init 006A  
                 __size_of__encoder_next_arc_step_size 0070  
                                    __i2c_write@length 0067  
                                    ??__backlight_init 0060  
                                            _spi_tx_rx 39D6  
                                            _spi_tx_tx 3E7C  
                          __size_ofi2__i2c_eeprom_busy 0026  
                      __end_of__motor_decide_direction F6CE  
                                 ?__make_cluster_chain 0095  
                      __make_cluster_chain@next_offset 009B  
                   __flash_write_page_from_buffer@page 0073  
                     __size_of_USBStdFeatureReqHandler 0284  
                                       _USBMSDInHandle 013F  
                                           _ADCON0bits 000FC2  
                                           _ADCON1bits 000FC1  
                                flash_sector_read@data 0089  
                                    ___wmul@multiplier 0060  
                                ?_USBTransferOnePacket 0060  
                                flash_sector_read@page 0087  
                                 ??_motor_change_speed 0062  
                             _initial_speed_arc_string A24C  
                    __end_of__motor_calculate_distance 2544  
                __motor_steps_from_degrees_int@degrees 0091  
                                ?__display_signed_itoa 008F  
                  _ExternalFlash_MediaDetect$intlevel0 605E  
                                    _SYS_InterruptHigh 9008  
                            __end_of__display_itoa_u16 320E  
                                ?__parse_command_short 0001  
                            i2c_display_cursor@address 006F  
                                     __CFG_WPFP$PAGE_1 000000  
                                       ?_fat_find_file 008B  
                         i2c_eeprom_read@slave_address 0078  
                                         ??_flash_init 0078  
                                         _RemoteWakeup 0163  
                    __end_of_ExternalFlash_MediaDetect 6062  
                                             i2_memcpy 4C16  
                                             i2_memset 5C16  
                    MSDCheckForErrorCases@DeviceNoData 0070  
                                 spi_tx_tx@data_length 0066  
                      fat_read_from_file_fast@position 00C5  
                                      ?__flash_is_busy 0001  
                     __end_of__fill_buffer_get_display 315A  
                                          __write_root 5468  
                                   ?_SYS_InterruptHigh 0001  
                             __end_of_motor_goto_steps 393E  
                  __fill_buffer_get_display@start_line 006E  
                               __end_of__display_clear 5548  
                    __size_of_fat_get_file_information 007A  
                                           spi_tx@data 0060  
                            ?_fat_get_file_information 008F  
               __end_of_overshoot_cost_in_steps_string A1D3  
                       _overshoot_cost_in_steps_string A1BB  
                              __end_of_USBStallHandler 56E8  
                    __motor_schedule_command@direction 0067  
                             __sector_from_file_number 5A72  
                                      ?_motor_set_zero 0001  
                                       __i2c_read@data 0065  
                      ??__flash_write_page_from_buffer 0076  
                              __size_of_display_update 0038  
                                       __i2c_read@cntr 0070  
                         __end_of_maximum_speed_string A2AC  
                               __end_of__display_start 32C0  
                         __end_of_minimum_speed_string A2BA  
                                    ___lmul@multiplier 0060  
                                     __add_item@buffer 008A  
                                            copy_data0 3D6C  
                                            copy_data1 3D8C  
                         __size_of__system_timer0_init 002C  
                                    ??_fat_resize_file 00B0  
                            __display_signed_itoa@text 0091  
          __encoder_next_divide_step_size@old_stepsize 0060  
                                     __add_item@length 008E  
                          ??_USBCtrlEPAllowStatusStage 0001  
                            __find_nth_cluster@cluster 0097  
                          __end_of_USBStdSetCfgHandler 2624  
                          __display_padded_itoa@length 007A  
                                             _i2c_init 5EDE  
                                  ??_SYS_InterruptHigh 0049  
                                        ??i2__i2c_send 0001  
                                          ??__i2c_read 0068  
                                          ??__i2c_send 0060  
                                         _MSDReadState 0156  
                                        ??i2__i2c_stop 0001  
                                          ??__i2c_stop 0060  
                                   __end_of__motor_run EE5C  
                                   __end_of_device_dsc A282  
                          __size_of__display_itoa_long 010E  
            __encoder_next_setup_stepsize@old_stepsize 0060  
                             MSDErrorHandler@ErrorCase 0068  
                               ?_fat_get_format_status 0001  
                                             __i2c_get 603A  
                              ?_USBCtrlTrfSetupHandler 0001  
                                      _fat_create_file 06CC  
                            ??__fill_buffer_get_status 006D  
                                           _ANCON0bits 000F48  
                                           _ANCON1bits 000F49  
                              USBStdGetStatusHandler@p 0002  
                             fat_read_from_file@length 00CD  
                                             __Hrparam 0000  
                                  __display_itoa@value 009F  
                               _motor_prescaler_lookup 9BFD  
                                            memcpy@tmp 006A  
                                             __Lrparam 0000  
                               USBTransferOnePacket@ep 0068  
                                    __parse_jump_steps FDD6  
                    __size_of__motor_distance_to_limit 0148  
                                             _SetupPkt 000D30  
                                   __end_of_flash_init 5FF4  
                                       _TransferLength 013D  
                                           ?_motor_isr 0001  
                            ?__motor_distance_to_limit 006C  
                         ?_motor_increase_manual_speed 0001  
                           __end_of_USBCheckMSDRequest 2F2A  
                                      api_parse@in_idx 00B1  
                fat_read_from_file_fast@cluster_number 00AD  
                                ?_USBConfigureEndpoint 0001  
                                __flash_is_busy@status 0071  
                                     __size_of___aldiv 00CE  
                             _ExternalFlash_SectorRead 59A4  
                            display_get_character@line 0063  
                                   ?__parse_jump_steps 0094  
                                     __size_of___almod 00AE  
                                     __size_of___fladd 033C  
                                    ??_USBDeviceAttach 0060  
                                       __i2c_wait_idle 496C  
                                      _MSDWriteHandler D044  
                                     __size_of___fldiv 02BA  
                             __end_of_motor_move_steps 5BEA  
                                     __size_of___flneg 0030  
                                     __size_of___flmul 0352  
                                     __size_of___fltol 00DE  
                         fat_create_file@first_cluster 00BA  
                                     __size_of___lldiv 0084  
                                     __size_of___llmod 0068  
                                      i2__i2c_send@dat 0001  
                                ??__make_cluster_chain 0099  
                                     __size_of___lwdiv 0054  
                       __display_itoa_long@short_value 00C3  
                                     __size_of___lwmod 0044  
            ExternalFlash_SectorWrite@allowWriteToZero 008C  
                                           ?_spi_tx_rx 0060  
                                           ?_spi_tx_tx 0060  
                 __size_ofi2_ExternalFlash_MediaDetect 0004  
                                          _MSDCBWValid 0150  
                            __size_of__i2c_eeprom_busy 0028  
                            __end_of_SYS_InterruptHigh 908E  
                            ??_motor_clear_command_cue 0060  
                        __display_itoa_long@last_digit 00C5  
                                    ?_USBStallEndpoint 0060  
                           i2c_display_write_fixed@pos 0068  
                                             _adc_init 4E8C  
                          __steps_from_degrees@degrees 0091  
  __motor_distance_to_limit@distance_to_limit_in_steps 0074  
                                             __get_fbr DB44  
                                             __get_mbr 2996  
                                          ??__add_item 008C  
                     __end_of_i2c_eeprom_save_position 3F9A  
                                   ??_USBStallEndpoint 0061  
                                  ??__parse_jump_steps 009A  
                      __flash_copy_page_to_buffer@page 0073  
                   __end_of_ExternalFlash_CapacityRead 5FA4  
                           _ExternalFlash_CapacityRead 5F90  
                                             ___xxtofl 0448  
                              ??_MSDTransferTerminated 000E  
                                     __size_of_isdigit 0022  
                              __size_of_USBDeviceTasks 0146  
         __parse_jump_steps_with_overshoot@out_idx_ptr 0098  
                                      ___lwdiv@divisor 0062  
                              __display_itoa_u16@value 0078  
                                             _fat_init 5FB6  
                              ?_motor_move_degrees_int 0099  
                                      ?__display_clear 0001  
                                      ___lwdiv@counter 0066  
                           __size_of_flash_sector_read 0028  
                             ??__get_available_cluster 008F  
                                             __ptext10 6044  
                                             __ptext11 5CC0  
                                             __ptext20 DB44  
                                             __ptext12 5FE6  
                                             __ptext21 5DAC  
                                             __ptext13 56E8  
                                             __ptext30 52DA  
                                             __ptext22 58CA  
                                             __ptext14 5892  
                                             __ptext31 496C  
                                             __ptext23 5098  
                                             __ptext15 46E6  
                                             __ptext40 06CC  
                                             __ptext32 606C  
                                             __ptext24 5E18  
                                             __ptext16 5FB6  
                                             __ptext41 5468  
                                             __ptext33 6074  
                                             __ptext25 5DD0  
                                             __ptext17 3DEA  
                                             __ptext50 6000  
                                             __ptext42 47C2  
                                             __ptext34 604E  
                                             __ptext26 581E  
                                             __ptext18 32C0  
                                             __ptext51 5C6C  
                                             __ptext43 4C72  
                                             __ptext35 320E  
                                             __ptext27 42B0  
                                             __ptext19 2996  
                                             __ptext60 E252  
                                             __ptext52 1B46  
                                             __ptext44 D330  
                                             __ptext36 315A  
                                             __ptext28 5C42  
                                             __ptext61 36C2  
                                             __ptext53 50EC  
                                             __ptext45 593A  
                                             __ptext37 C1D8  
                                             __ptext29 528A  
                                             __ptext70 5D60  
                                             __ptext62 5548  
                                             __ptext54 194C  
                                             __ptext46 2B36  
                                             __ptext38 184E  
                                             __ptext71 5A72  
                                             __ptext63 4E34  
                                             __ptext55 4904  
                                             __ptext47 4BB8  
                                             __ptext39 E01E  
                                             __ptext80 5E3A  
                                             __ptext72 5C96  
                                             __ptext64 5EFA  
                                             __ptext56 40A6  
                                             __ptext48 5CE8  
                                             __ptext81 5D10  
                                             __ptext73 1F0C  
                                             __ptext65 5F14  
                                             __ptext57 4516  
                                             __ptext49 5FF4  
                                             __ptext90 EC88  
                                             __ptext82 F02C  
                                             __ptext74 4230  
                                             __ptext66 5FC6  
                                             __ptext58 F394  
                                             __ptext91 AFCC  
                                             __ptext83 0B9E  
                                             __ptext75 BDE2  
                                             __ptext67 43A8  
                                             __ptext59 1FF4  
                                             __ptext92 54B4  
                                             __ptext84 F6CE  
                                             __ptext76 4CCC  
                                             __ptext68 4422  
                                             __ptext93 0CC0  
                                             __ptext85 4E8C  
                                             __ptext77 5F62  
                                             __ptext69 482E  
                                             __ptext94 5F2E  
                                             __ptext86 5BEA  
                                             __ptext78 1A4A  
                                             __ptext95 F9CC  
                                             __ptext87 489A  
                                             __ptext79 28BE  
                                             __ptext96 2FEA  
                                             __ptext88 6094  
                                             __ptext97 1D34  
                                             __ptext89 380A  
                                             __ptext98 5E5C  
                                             __ptext99 20DA  
                                         _SSP1CON1bits 000FC6  
                      __size_of_motor_speed_from_index 0016  
                                         _SSP1CON2bits 000FC5  
                                      ?__display_start 0001  
                         __flash_set_page_size@command 0073  
                                         _SSP2CON1bits 000F72  
                 __end_of_MSDProcessCommandMediaAbsent 4A32  
                __size_of_MSDProcessCommandMediaAbsent 0062  
                         _MSDProcessCommandMediaAbsent 49D0  
                                      ___almod@divisor 0064  
                                          ??__get_date 0062  
                                __flash_wakeup@command 0068  
                                          ??__get_item 0066  
                                      ___almod@counter 0068  
                                          ??__get_time 0062  
                                     __size_of_stricmp 005A  
                     __end_of_inverse_direction_string A270  
                                     ?_configFile_read 0001  
                                     __size_of_strncmp 0080  
                                     __size_of_toupper 0018  
                                  __parse_command_long 3F9A  
                           ?_ExternalFlash_SectorWrite 0084  
                       ExternalFlash_SectorRead@config 008B  
                       ExternalFlash_SectorRead@buffer 0091  
                   __end_of__flash_copy_page_to_buffer 4CCC  
                           __flash_copy_page_to_buffer 4C72  
                              __size_of_ResetSenseData 0062  
                     __end_of_APP_DeviceCustomHIDTasks 36C2  
                                    ??_i2c_eeprom_read 0076  
                                __end_of__flash_wakeup 4F3C  
                              __parse_set_manual_speed 412A  
                                        __size_of_atoi 00D8  
                                        __size_of_atol 00FC  
                       __end_of_USBCtrlTrfSetupHandler 3CC4  
                                        __size_of_main 0096  
                                    ?_USBCtrlEPService 0001  
                                        __size_of_itoa 0044  
                                             _inq_resp A160  
                                        __size_of_ltoa 0054  
                                        __size_of_utoa 00AA  
                                          ??__read_fat 0091  
                          __end_of_flash_partial_write 482E  
                                           strncmp@len 0064  
                              fat_get_file_size@offset 009B  
                              fat_get_file_size@sector 0099  
                            __end_of__parse_jump_steps FF28  
                fat_read_from_file_fast@needed_cluster 00C1  
                                   ??_USBCtrlEPService 001E  
                                             _tmr0_isr 5858  
                             ??__motor_move_back_forth 0068  
                                  _USBCtrlTrfInHandler 2D9E  
                   _MSDProcessCommandMediaPresent$2606 009B  
                             ??__write_value_to_offset 0066  
                  __parse_set_manual_speed@out_idx_ptr 006A  
                       fat_read_from_file_fast@cluster 00AB  
                                          ??_api_parse 00AC  
                               __end_of__i2c_wait_idle 49D0  
                fat_resize_file@old_number_of_clusters 00B4  
                                  __end_ofi2__i2c_send 6094  
                           __end_of_motor_items_in_cue 6030  
                                             _outPipes 0100  
      i2c_display_program_custom_character@bit_pattern 006E  
                                  __end_ofi2__i2c_stop 6084  
                                             _spi_init 56E8  
                              __motor_schedule_command 1E20  
                             ??_configFile_readDefault 0060  
                                 _USBCtrlTrfOutHandler 4AF6  
                                             int$flags 005F  
                     __end_of__offset_from_file_number 5CC0  
                           ??__fat_sector_from_cluster 0062  
                                             atoi@sign 006A  
                            _USBCtrlEPAllowStatusStage 2CD2  
                      __size_of_motor_set_manual_speed 0078  
                                         ??_motor_init 0060  
                                          ??__spi_init 0063  
                                             atol@sign 0074  
                                         ??_motor_stop 0060  
                        ??_motor_increase_manual_speed 0066  
                                 ?__parse_command_long 00A0  
                                         _SSP1STATbits 000FC7  
                               ??_USBTransferOnePacket 0064  
                             __end_ofi2__i2c_wait_idle 4FEC  
                                    main@startup_timer 00FE  
                          __end_of_motor_period_lookup 9BFD  
               __make_cluster_chain@remaining_clusters 00A2  
                                  __display_start@cntr 007C  
                                         _SSP2STATbits 000F73  
                __display_position_in_degrees@position 0064  
                               ??__display_signed_itoa 0093  
                                __end_of__display_itoa E69C  
                                     i2_ResetSenseData 4A94  
                       ?_APP_DeviceCustomHIDInitialize 0001  
                                      ??_fat_find_file 008F  
                               ??__parse_command_short 009E  
                MSDProcessCommandMediaPresent@capacity 00A2  
                        display_get_character@position 0060  
                             __size_of_MSDErrorHandler 011A  
                       ?__fill_buffer_get_mode_details 0060  
                                      __add_item@value 0086  
                              _motor_postscaler_lookup 982F  
                            _USBDeferStatusStagePacket 015E  
                           __size_of__display_itoa_u16 00B4  
                      __end_of__fill_buffer_get_status E8C0  
                    __fill_buffer_get_display@position 006F  
                                          _OSCTUNEbits 000F9B  
                                           _INTCONbits 000FF2  
                       __end_of_motor_move_degrees_int 54FE  
                       __parse_jump_steps@return_value 009B  
                            motor_move_steps@direction 0093  
                         __size_of__steps_from_degrees 01BA  
                                 ?_USBCtrlTrfInHandler 0001  
                                             memcpy@d1 0060  
                                             memcpy@s1 0062  
                                 i2c_eeprom_write@data 000D  
                                 i2c_eeprom_write@cntr 0025  
                        USBCtrlTrfTxService@byteToSend 0001  
                   __motor_get_speed_in_degrees@lookup 0099  
                            __display_padded_itoa@text 007B  
                                             itoa@base 0074  
                __motor_move_back_forth@return_value_1 0068  
                __motor_move_back_forth@return_value_2 0069  
                                             isdigit@c 0062  
                                             memset@p1 0060  
                                            ultoa@base 0073  
                     fat_read_from_file@cluster_number 00DB  
                 __end_of_MSDComputeDeviceInAndResidue 2FEA  
                __size_of_MSDComputeDeviceInAndResidue 00C0  
                         _MSDComputeDeviceInAndResidue 2F2A  
                           fat_modify_file@return_code 00B8  
                                     ?_USBStallHandler 0001  
                             USBStdFeatureReqHandler@p 001C  
                           ?__get_available_root_entry 0001  
                              spi_tx_tx@command_length 0062  
                        __size_of__flash_set_page_size 006E  
                                     __i2c_acknowledge 6044  
                              __end_of_fat_create_file 0808  
                                             intlevel2 0000  
                                     spi_tx_rx@command 0060  
                             __flash_get_status@status 006F  
                                             ltoa@base 0080  
                          __size_of__root_is_available 006C  
                              fat_restore_mbr_fbr@cntr 0084  
                               __size_of_USBDeviceInit 014C  
                      __end_of_motor_clear_command_cue 6024  
                        ?_MSDProcessCommandMediaAbsent 0001  
              __end_of_USER_USB_CALLBACK_EVENT_HANDLER 40A6  
             __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
                    ??_USER_USB_CALLBACK_EVENT_HANDLER 0016  
                     ?_USER_USB_CALLBACK_EVENT_HANDLER 0010  
                      _USER_USB_CALLBACK_EVENT_HANDLER 4020  
            __motor_schedule_command@distance_in_steps 0060  
                                   __end_of_motor_init 5EDE  
                                         ?__parse_item 0099  
                                     ___lwmod@dividend 0060  
                  __end_of_full_circle_in_steps_string A227  
                          _full_circle_in_steps_string A212  
                         i2USBTransferOnePacket@handle 000A  
                    __end_of_ExternalFlash_SectorWrite 59A4  
                                     ___lldiv@dividend 0060  
                                   __end_of_motor_stop 541A  
                __end_of__flash_write_page_from_buffer 4DDA  
               __size_of__flash_write_page_from_buffer 005A  
                        __flash_write_page_from_buffer 4D80  
               i2SYSTEM_Initialize@pll_startup_counter 0001  
                 SYSTEM_Initialize@pll_startup_counter 0060  
                                            stricmp@s1 0061  
                                            stricmp@s2 0063  
                             _maximum_speed_arc_string A23A  
                         __end_of_beep_duration_string A29E  
                         fat_read_from_file@start_byte 00C9  
                                      _display_content 0248  
                           __end_of_flash_partial_read 5D86  
                              __end_of_MSDWriteHandler D330  
                                            strncmp@s1 0060  
                  __end_of_i2c_eeprom_recover_position 39D6  
                                            strncmp@s2 0062  
                          _i2c_eeprom_recover_position 393E  
                              __write_root@file_number 008E  
                                     spi_tx_tx@command 0060  
                                __size_ofi2__i2c_start 0008  
                              __size_of_MSDReadHandler 01EA  
                                __size_ofi2__i2c_write 0048  
                                __add_item@item_string 0084  
                   __parse_set_manual_speed@out_buffer 0068  
                                  fat_resize_file@root 00BB  
                           i2USBTransferOnePacket@data 0002  
                                        ??_system_init 00FD  
                                __get_item@item_string 0060  
                    __size_of__fill_buffer_get_display 00B8  
                         __end_of_use_ccw_limit_string A290  
                             ?__read_value_from_offset 0060  
                             ?_fat_read_from_file_fast 00A1  
                               _motor_speed_from_index 5F7A  
                            ?__fill_buffer_get_display 0064  
                               ??_USBConfigureEndpoint 0002  
                                      ?__i2c_wait_idle 0001  
                                ?_USBCtrlTrfOutHandler 0001  
                             motor_goto_steps@position 0092  
                                      _display_prepare A344  
                                          ??_motor_isr 0031  
                             ??__flash_write_to_buffer 007A  
                             ?_APP_DeviceMSDInitialize 0001  
                                  _USBCtrlTrfRxService 1226  
                                   _USBWakeFromSuspend 5902  
                                ??__parse_command_long 00A6  
                      motor_set_manual_speed@old_speed 0064  
                                 _maximum_speed_string A29E  
                                   _i2c_display_cursor 5E18  
                      motor_set_manual_speed@new_speed 0062  
                                 _minimum_speed_string A2AC  
                              _USBStdFeatureReqHandler D8C0  
                                      _fat_modify_file E01E  
                                  i2_SYSTEM_Initialize 5194  
                                          ??_spi_tx_rx 0068  
                                          ??_spi_tx_tx 0068  
                                  _USBCtrlTrfTxService 2A66  
                           __size_of_SYS_InterruptHigh 0086  
                                         ?_api_prepare 0070  
                    __motor_get_speed_in_degrees@speed 0095  
                __flash_write_page_from_buffer@command 0079  
                                             utoa@base 006B  
                                             ultoa@buf 006D  
                                    _motor_divide_jump 2FEA  
                                             ultoa@val 006F  
                                      _gblMediaPresent 0244  
                   __motor_steps_from_degrees_int@temp 0095  
                             configFile_read@file_size 01F7  
                  ExternalFlash_SectorRead@sector_addr 008D  
                                    _motor_command_cue 0300  
                  __motor_calculate_distance@direction 0068  
                                  ?_USBWakeFromSuspend 0001  
                                           _PPSCONbits 000EBF  
                                     ___lldiv@quotient 0068  
                                      ___lwmod@divisor 0062  
                          ??_ExternalFlash_MediaDetect 0062  
                                  ?_i2c_display_cursor 006D  
                                ??_USBCtrlTrfInHandler 0002  
                                   ?_motor_divide_jump 0001  
                                             stricmp@r 0066  
                                             strlen@cp 0064  
                                _USBAlternateInterface 01BF  
                                      ___lwmod@counter 0064  
                        __size_of__i2c_not_acknowledge 000A  
                                             toupper@c 0060  
                                          _ptrNextData 0143  
                                         ___aldiv@sign 0069  
                     __make_cluster_chain@data_changed 00A1  
                            motor_move_steps@overshoot 0092  
                            i2USBTransferOnePacket@dir 0001  
                            i2USBTransferOnePacket@len 0004  
                                  USBEnableEndpoint@ep 000C  
                                      _endpoint_number 0161  
                                       _display_update 58CA  
                  __get_available_cluster@first_sector 008B  
                               _motor_set_manual_speed 458E  
                             _i2c_eeprom_save_position 3F0C  
                      __size_of__get_available_cluster 00CE  
                                 ?_USBCtrlTrfRxService 0001  
                 __size_of_motor_increase_manual_speed 001A  
                                        ___fladd@signs 008C  
                         __end_of_adc_read_temperature EC88  
                            ??__parse_set_manual_speed 006C  
                                _MSDCheckForErrorCases 0EF4  
                                  ??_motor_divide_jump 009E  
                           ??__fat_offset_from_cluster 0062  
                        ?_MSDComputeDeviceInAndResidue 0060  
                                         i2__i2c_start 6084  
                              motor_arc_move@direction 0094  
                                 ?i2_SYSTEM_Initialize 0001  
                                         i2__i2c_write 5590  
                             ?_USBCtrlEPAllowDataStage 0001  
                                       _MSBBufferIndex 0246  
                                         ___almod@sign 0069  
                                 ?_USBCtrlTrfTxService 0001  
                      __offset_from_file_number@offset 0063  
                                         ___fladd@aexp 008D  
                                        ?_encoder_init 0001  
                                         ___fladd@bexp 008E  
                                           _USBMSDInit 1118  
                         _USBStatusStageTimeoutCounter 015F  
                                          i2__i2c_send 608C  
                      ??_ExternalFlash_MediaInitialize 0062  
                                          i2__i2c_stop 607C  
                                     ??_motor_arc_move 0094  
                                 ??_USBWakeFromSuspend 0018  
                             __display_itoa_long@value 00B7  
                          __end_of__flash_partial_read 4516  
                            configFile_write@file_size 00E5  
                           USBTransferOnePacket@handle 0069  
                                      __backlight_init 6094  
                                 ??_i2c_display_cursor 006E  
                                         ?_encoder_run 0001  
    motor_divide_jump_to_nearest@divide_position_float 00A4  
                           __size_of__parse_jump_steps 0152  
                            __size_of_configFile_write 03F0  
                              __display_itoa_long@text 00BC  
                            ??__motor_schedule_command 0067  
                   __motor_distance_to_limit@direction 0078  
                           fat_resize_file@file_number 00BA  
                                           _USB_CD_Ptr 9DEC  
                           __end_of_motor_move_endless 5BBC  
                            __size_of_i2c_eeprom_write 0082  
                                          _power_state 014F  
                                          _USBInHandle 0139  
                             _APP_DeviceCustomHIDTasks 361A  
                      __size_of__motor_move_back_forth 00AA  
                           __end_of_flash_sector_write 53CA  
