

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Jan 01 22:49:07 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text84,global,reloc=2,class=CODE,delta=1
   105                           	psect	text85,global,reloc=2,class=CODE,delta=1
   106                           	psect	text86,global,reloc=2,class=CODE,delta=1
   107                           	psect	text87,global,reloc=2,class=CODE,delta=1
   108                           	psect	text88,global,reloc=2,class=CODE,delta=1
   109                           	psect	text89,global,reloc=2,class=CODE,delta=1
   110                           	psect	text90,global,reloc=2,class=CODE,delta=1
   111                           	psect	text91,global,reloc=2,class=CODE,delta=1
   112                           	psect	text92,global,reloc=2,class=CODE,delta=1
   113                           	psect	text93,global,reloc=2,class=CODE,delta=1
   114                           	psect	text94,global,reloc=2,class=CODE,delta=1
   115                           	psect	text95,global,reloc=2,class=CODE,delta=1
   116                           	psect	text96,global,reloc=2,class=CODE,delta=1
   117                           	psect	text97,global,reloc=2,class=CODE,delta=1
   118                           	psect	text98,global,reloc=2,class=CODE,delta=1
   119                           	psect	text99,global,reloc=2,class=CODE,delta=1
   120                           	psect	text100,global,reloc=2,class=CODE,delta=1
   121                           	psect	text101,global,reloc=2,class=CODE,delta=1
   122                           	psect	text102,global,reloc=2,class=CODE,delta=1
   123                           	psect	text103,global,reloc=2,class=CODE,delta=1
   124                           	psect	text104,global,reloc=2,class=CODE,delta=1
   125                           	psect	text105,global,reloc=2,class=CODE,delta=1
   126                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   127                           	psect	text107,global,reloc=2,class=CODE,delta=1
   128                           	psect	text108,global,reloc=2,class=CODE,delta=1
   129                           	psect	text109,global,reloc=2,class=CODE,delta=1
   130                           	psect	text110,global,reloc=2,class=CODE,delta=1
   131                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=2
   132                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=2
   133                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=2
   134                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text116,global,reloc=2,class=CODE,delta=1,group=1
   137                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=1
   138                           	psect	text118,global,reloc=2,class=CODE,delta=1
   139                           	psect	text119,global,reloc=2,class=CODE,delta=1
   140                           	psect	text120,global,reloc=2,class=CODE,delta=1,group=1
   141                           	psect	text121,global,reloc=2,class=CODE,delta=1,group=1
   142                           	psect	text122,global,reloc=2,class=CODE,delta=1
   143                           	psect	text123,global,reloc=2,class=CODE,delta=1,group=2
   144                           	psect	text124,global,reloc=2,class=CODE,delta=1
   145                           	psect	text125,global,reloc=2,class=CODE,delta=1
   146                           	psect	text126,global,reloc=2,class=CODE,delta=1
   147                           	psect	text127,global,reloc=2,class=CODE,delta=1
   148                           	psect	text128,global,reloc=2,class=CODE,delta=1
   149                           	psect	text129,global,reloc=2,class=CODE,delta=1
   150                           	psect	text130,global,reloc=2,class=CODE,delta=1
   151                           	psect	text131,global,reloc=2,class=CODE,delta=1
   152                           	psect	text132,global,reloc=2,class=CODE,delta=1
   153                           	psect	text133,global,reloc=2,class=CODE,delta=1
   154                           	psect	text134,global,reloc=2,class=CODE,delta=1
   155                           	psect	text135,global,reloc=2,class=CODE,delta=1
   156                           	psect	text136,global,reloc=2,class=CODE,delta=1
   157                           	psect	text137,global,reloc=2,class=CODE,delta=1
   158                           	psect	text138,global,reloc=2,class=CODE,delta=1
   159                           	psect	text139,global,reloc=2,class=CODE,delta=1
   160                           	psect	text140,global,reloc=2,class=CODE,delta=1
   161                           	psect	text141,global,reloc=2,class=CODE,delta=1
   162                           	psect	text142,global,reloc=2,class=CODE,delta=1
   163                           	psect	text143,global,reloc=2,class=CODE,delta=1
   164                           	psect	text144,global,reloc=2,class=CODE,delta=1
   165                           	psect	text145,global,reloc=2,class=CODE,delta=1
   166                           	psect	text146,global,reloc=2,class=CODE,delta=1
   167                           	psect	text147,global,reloc=2,class=CODE,delta=1
   168                           	psect	text148,global,reloc=2,class=CODE,delta=1
   169                           	psect	text149,global,reloc=2,class=CODE,delta=1
   170                           	psect	text150,global,reloc=2,class=CODE,delta=1
   171                           	psect	text151,global,reloc=2,class=CODE,delta=1
   172                           	psect	text152,global,reloc=2,class=CODE,delta=1
   173                           	psect	text153,global,reloc=2,class=CODE,delta=1
   174                           	psect	text154,global,reloc=2,class=CODE,delta=1
   175                           	psect	text155,global,reloc=2,class=CODE,delta=1
   176                           	psect	text156,global,reloc=2,class=CODE,delta=1
   177                           	psect	text157,global,reloc=2,class=CODE,delta=1
   178                           	psect	text158,global,reloc=2,class=CODE,delta=1
   179                           	psect	text159,global,reloc=2,class=CODE,delta=1
   180                           	psect	text160,global,reloc=2,class=CODE,delta=1,group=2
   181                           	psect	text161,global,reloc=2,class=CODE,delta=1
   182                           	psect	text162,global,reloc=2,class=CODE,delta=1
   183                           	psect	text163,global,reloc=2,class=CODE,delta=1
   184                           	psect	text164,global,reloc=2,class=CODE,delta=1
   185                           	psect	text165,global,reloc=2,class=CODE,delta=1
   186                           	psect	text166,global,reloc=2,class=CODE,delta=1
   187                           	psect	text167,global,reloc=2,class=CODE,delta=1
   188                           	psect	text168,global,reloc=2,class=CODE,delta=1
   189                           	psect	text169,global,reloc=2,class=CODE,delta=1
   190                           	psect	text170,global,reloc=2,class=CODE,delta=1
   191                           	psect	text171,global,reloc=2,class=CODE,delta=1
   192                           	psect	text172,global,reloc=2,class=CODE,delta=1
   193                           	psect	text173,global,reloc=2,class=CODE,delta=1
   194                           	psect	text174,global,reloc=2,class=CODE,delta=1
   195                           	psect	text175,global,reloc=2,class=CODE,delta=1
   196                           	psect	text176,global,reloc=2,class=CODE,delta=1
   197                           	psect	text177,global,reloc=2,class=CODE,delta=1
   198                           	psect	text178,global,reloc=2,class=CODE,delta=1
   199                           	psect	text179,global,reloc=2,class=CODE,delta=1
   200                           	psect	text180,global,reloc=2,class=CODE,delta=1,group=1
   201                           	psect	text181,global,reloc=2,class=CODE,delta=1,group=1
   202                           	psect	text182,global,reloc=2,class=CODE,delta=1,group=1
   203                           	psect	text183,global,reloc=2,class=CODE,delta=1,group=1
   204                           	psect	text184,global,reloc=2,class=CODE,delta=1
   205                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   206                           	psect	text186,global,reloc=2,class=CODE,delta=1
   207                           	psect	text187,global,reloc=2,class=CODE,delta=1
   208                           	psect	text188,global,reloc=2,class=CODE,delta=1
   209                           	psect	text189,global,reloc=2,class=CODE,delta=1
   210                           	psect	text190,global,reloc=2,class=CODE,delta=1
   211                           	psect	text191,global,reloc=2,class=CODE,delta=1
   212                           	psect	text192,global,reloc=2,class=CODE,delta=1
   213                           	psect	text193,global,reloc=2,class=CODE,delta=1
   214                           	psect	text194,global,reloc=2,class=CODE,delta=1
   215                           	psect	text195,global,reloc=2,class=CODE,delta=1
   216                           	psect	text196,global,reloc=2,class=CODE,delta=1
   217                           	psect	text197,global,reloc=2,class=CODE,delta=1
   218                           	psect	text198,global,reloc=2,class=CODE,delta=1
   219                           	psect	text199,global,reloc=2,class=CODE,delta=1
   220                           	psect	text200,global,reloc=2,class=CODE,delta=1
   221                           	psect	text201,global,reloc=2,class=CODE,delta=1
   222                           	psect	text202,global,reloc=2,class=CODE,delta=1
   223                           	psect	text203,global,reloc=2,class=CODE,delta=1
   224                           	psect	text204,global,reloc=2,class=CODE,delta=1
   225                           	psect	text205,global,reloc=2,class=CODE,delta=1
   226                           	psect	text206,global,reloc=2,class=CODE,delta=1
   227                           	psect	text207,global,reloc=2,class=CODE,delta=1
   228                           	psect	text208,global,reloc=2,class=CODE,delta=1
   229                           	psect	text209,global,reloc=2,class=CODE,delta=1
   230                           	psect	text210,global,reloc=2,class=CODE,delta=1
   231                           	psect	text211,global,reloc=2,class=CODE,delta=1
   232                           	psect	text212,global,reloc=2,class=CODE,delta=1
   233                           	psect	text213,global,reloc=2,class=CODE,delta=1
   234                           	psect	text214,global,reloc=2,class=CODE,delta=1
   235                           	psect	text215,global,reloc=2,class=CODE,delta=1
   236                           	psect	text216,global,reloc=2,class=CODE,delta=1
   237                           	psect	text217,global,reloc=2,class=CODE,delta=1
   238                           	psect	text218,global,reloc=2,class=CODE,delta=1
   239                           	psect	text219,global,reloc=2,class=CODE,delta=1
   240                           	psect	text220,global,reloc=2,class=CODE,delta=1
   241                           	psect	text221,global,reloc=2,class=CODE,delta=1
   242                           	psect	text222,global,reloc=2,class=CODE,delta=1
   243                           	psect	text223,global,reloc=2,class=CODE,delta=1
   244                           	psect	text224,global,reloc=2,class=CODE,delta=1
   245                           	psect	text225,global,reloc=2,class=CODE,delta=1
   246                           	psect	text226,global,reloc=2,class=CODE,delta=1
   247                           	psect	text227,global,reloc=2,class=CODE,delta=1
   248                           	psect	text228,global,reloc=2,class=CODE,delta=1
   249                           	psect	text229,global,reloc=2,class=CODE,delta=1
   250                           	psect	text230,global,reloc=2,class=CODE,delta=1
   251                           	psect	text231,global,reloc=2,class=CODE,delta=1
   252                           	psect	text232,global,reloc=2,class=CODE,delta=1
   253                           	psect	text233,global,reloc=2,class=CODE,delta=1
   254                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   255                           	psect	text234,global,reloc=2,class=CODE,delta=1
   256                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   257                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   258                           	dabs	1,0x600,512,_msd_buffer
   259                           	dabs	1,0xD00,48,_BDT
   260                           	dabs	1,0xD40,31,_msd_cbw
   261                           	dabs	1,0xD80,13,_msd_csw
   262                           	dabs	1,0xD38,8,_CtrlTrfData
   263                           	dabs	1,0xD30,8,_SetupPkt
   264  0000                     
   265                           ; Version 2.00
   266                           ; Generated 27/05/2018 GMT
   267                           ; 
   268                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   269                           ; All rights reserved.
   270                           ; 
   271                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   272                           ; 
   273                           ; Redistribution and use in source and binary forms, with or without modification, are
   274                           ; permitted provided that the following conditions are met:
   275                           ; 
   276                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   277                           ;        conditions and the following disclaimer.
   278                           ; 
   279                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   280                           ;        of conditions and the following disclaimer in the documentation and/or other
   281                           ;        materials provided with the distribution.
   282                           ; 
   283                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   284                           ;        software without specific prior written permission.
   285                           ; 
   286                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   287                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   288                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   289                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   290                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   291                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   292                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   293                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   294                           ; 
   295                           ; 
   296                           ; Code-generator required, PIC18F47J53 Definitions
   297                           ; 
   298                           ; SFR Addresses
   299  0000                     
   300                           	psect	idataBANK2
   301  014D34                     __pidataBANK2:
   302                           	opt stack 0
   303                           
   304                           ;initializer for _LUN
   305  014D34  9E                 	db	low _ExternalFlash_MediaInitialize
   306  014D35  57                 	db	high _ExternalFlash_MediaInitialize
   307  014D36  01                 	db	low (_ExternalFlash_MediaInitialize shr (0+16))
   308  014D37  CA                 	db	low _ExternalFlash_CapacityRead
   309  014D38  58                 	db	high _ExternalFlash_CapacityRead
   310  014D39  01                 	db	low (_ExternalFlash_CapacityRead shr (0+16))
   311  014D3A  46                 	db	low _ExternalFlash_SectorSizeRead
   312  014D3B  59                 	db	high _ExternalFlash_SectorSizeRead
   313  014D3C  01                 	db	low (_ExternalFlash_SectorSizeRead shr (0+16))
   314  014D3D  86                 	db	low _ExternalFlash_MediaDetect
   315  014D3E  59                 	db	high _ExternalFlash_MediaDetect
   316  014D3F  01                 	db	low (_ExternalFlash_MediaDetect shr (0+16))
   317  014D40  CA                 	db	low _ExternalFlash_SectorRead
   318  014D41  52                 	db	high _ExternalFlash_SectorRead
   319  014D42  01                 	db	low (_ExternalFlash_SectorRead shr (0+16))
   320  014D43  CC                 	db	low _ExternalFlash_WriteProtectStateGet
   321  014D44  59                 	db	high _ExternalFlash_WriteProtectStateGet
   322  014D45  01                 	db	low (_ExternalFlash_WriteProtectStateGet shr (0+16))
   323  014D46  96                 	db	low _ExternalFlash_SectorWrite
   324  014D47  52                 	db	high _ExternalFlash_SectorWrite
   325  014D48  01                 	db	low (_ExternalFlash_SectorWrite shr (0+16))
   326  014D49  00                 	db	0
   327  014D4A  00                 	db	0
   328  014D4B  00                 	db	0
   329  014D4C  00                 	db	0
   330  014D4D  00                 	db	0
   331  014D4E  00                 	db	0
   332  014D4F  00                 	db	0
   333  014D50  00                 	db	0
   334                           
   335                           ;initializer for i2c_display_init@F6942
   336  014D51  3A                 	db	58
   337  014D52  1E                 	db	30
   338  014D53  39                 	db	57
   339  014D54  0C                 	db	12
   340  014D55  74                 	db	116
   341  014D56  5C                 	db	92
   342  014D57  6D                 	db	109
   343  014D58  0C                 	db	12
   344  014D59  01                 	db	1
   345                           
   346                           ;initializer for __i2c_display_send_init_sequence@F6939
   347  014D5A  3A                 	db	58
   348  014D5B  1E                 	db	30
   349  014D5C  39                 	db	57
   350  014D5D  0C                 	db	12
   351  014D5E  74                 	db	116
   352  014D5F  5C                 	db	92
   353  014D60  6D                 	db	109
   354  014D61  0C                 	db	12
   355  014D62  01                 	db	1
   356                           
   357                           ;initializer for _tx_buf
   358  014D63  01                 	db	1
   359  014D64  02                 	db	2
   360  014D65  03                 	db	3
   361  014D66  04                 	db	4
   362  014D67  05                 	db	5
   363  014D68  06                 	db	6
   364  014D69  07                 	db	7
   365  014D6A  08                 	db	8
   366                           
   367                           ;initializer for _configFile_used_name
   368  014D6B  55                 	db	85
   369  014D6C  53                 	db	83
   370  014D6D  45                 	db	69
   371  014D6E  44                 	db	68
   372  014D6F  43                 	db	67
   373  014D70  4F                 	db	79
   374  014D71  4E                 	db	78
   375  014D72  46                 	db	70
   376                           
   377                           ;initializer for _configFile_name
   378  014D73  43                 	db	67
   379  014D74  4F                 	db	79
   380  014D75  4E                 	db	78
   381  014D76  46                 	db	70
   382  014D77  49                 	db	73
   383  014D78  47                 	db	71
   384  014D79  20                 	db	32
   385  014D7A  20                 	db	32
   386                           
   387                           ;initializer for _configFile_used_extention
   388  014D7B  54                 	db	84
   389  014D7C  58                 	db	88
   390  014D7D  54                 	db	84
   391                           
   392                           ;initializer for _configFile_extention
   393  014D7E  54                 	db	84
   394  014D7F  58                 	db	88
   395  014D80  54                 	db	84
   396                           
   397                           	psect	idataBANK4
   398  014BA4                     __pidataBANK4:
   399                           	opt stack 0
   400                           
   401                           ;initializer for _dc_startup
   402  014BA4  2A                 	db	42
   403  014BA5  20                 	db	32
   404  014BA6  20                 	db	32
   405  014BA7  53                 	db	83
   406  014BA8  74                 	db	116
   407  014BA9  65                 	db	101
   408  014BAA  70                 	db	112
   409  014BAB  70                 	db	112
   410  014BAC  65                 	db	101
   411  014BAD  72                 	db	114
   412  014BAE  20                 	db	32
   413  014BAF  4D                 	db	77
   414  014BB0  6F                 	db	111
   415  014BB1  74                 	db	116
   416  014BB2  6F                 	db	111
   417  014BB3  72                 	db	114
   418  014BB4  20                 	db	32
   419  014BB5  20                 	db	32
   420  014BB6  20                 	db	32
   421  014BB7  2A                 	db	42
   422  014BB8  2A                 	db	42
   423  014BB9  20                 	db	32
   424  014BBA  20                 	db	32
   425  014BBB  20                 	db	32
   426  014BBC  20                 	db	32
   427  014BBD  43                 	db	67
   428  014BBE  6F                 	db	111
   429  014BBF  6E                 	db	110
   430  014BC0  74                 	db	116
   431  014BC1  72                 	db	114
   432  014BC2  6F                 	db	111
   433  014BC3  6C                 	db	108
   434  014BC4  6C                 	db	108
   435  014BC5  65                 	db	101
   436  014BC6  72                 	db	114
   437  014BC7  20                 	db	32
   438  014BC8  20                 	db	32
   439  014BC9  20                 	db	32
   440  014BCA  20                 	db	32
   441  014BCB  2A                 	db	42
   442  014BCC  2A                 	db	42
   443  014BCD  20                 	db	32
   444  014BCE  20                 	db	32
   445  014BCF  20                 	db	32
   446  014BD0  20                 	db	32
   447  014BD1  76                 	db	118
   448  014BD2  20                 	db	32
   449  014BD3  20                 	db	32
   450  014BD4  20                 	db	32
   451  014BD5  20                 	db	32
   452  014BD6  20                 	db	32
   453  014BD7  20                 	db	32
   454  014BD8  20                 	db	32
   455  014BD9  20                 	db	32
   456  014BDA  20                 	db	32
   457  014BDB  20                 	db	32
   458  014BDC  20                 	db	32
   459  014BDD  20                 	db	32
   460  014BDE  20                 	db	32
   461  014BDF  2A                 	db	42
   462  014BE0  2A                 	db	42
   463  014BE1  20                 	db	32
   464  014BE2  20                 	db	32
   465  014BE3  73                 	db	115
   466  014BE4  6F                 	db	111
   467  014BE5  6C                 	db	108
   468  014BE6  64                 	db	100
   469  014BE7  65                 	db	101
   470  014BE8  72                 	db	114
   471  014BE9  6E                 	db	110
   472  014BEA  65                 	db	101
   473  014BEB  72                 	db	114
   474  014BEC  64                 	db	100
   475  014BED  2E                 	db	46
   476  014BEE  63                 	db	99
   477  014BEF  6F                 	db	111
   478  014BF0  6D                 	db	109
   479  014BF1  20                 	db	32
   480  014BF2  20                 	db	32
   481  014BF3  2A                 	db	42
   482                           
   483                           	psect	mediumconst
   484  009092                     __pmediumconst:
   485                           	opt stack 0
   486  009092  00                 	db	0
   487  009093                     _motor_speed_lookup:
   488                           	opt stack 0
   489  009093  0008               	dw	8
   490  009095  000C               	dw	12
   491  009097  0010               	dw	16
   492  009099  0013               	dw	19
   493  00909B  0016               	dw	22
   494  00909D  0019               	dw	25
   495  00909F  001C               	dw	28
   496  0090A1  001E               	dw	30
   497  0090A3  0021               	dw	33
   498  0090A5  0023               	dw	35
   499  0090A7  0026               	dw	38
   500  0090A9  0028               	dw	40
   501  0090AB  002A               	dw	42
   502  0090AD  002C               	dw	44
   503  0090AF  002E               	dw	46
   504  0090B1  0030               	dw	48
   505  0090B3  0032               	dw	50
   506  0090B5  0034               	dw	52
   507  0090B7  0036               	dw	54
   508  0090B9  0038               	dw	56
   509  0090BB  003A               	dw	58
   510  0090BD  003C               	dw	60
   511  0090BF  003D               	dw	61
   512  0090C1  003F               	dw	63
   513  0090C3  0041               	dw	65
   514  0090C5  0043               	dw	67
   515  0090C7  0045               	dw	69
   516  0090C9  0046               	dw	70
   517  0090CB  0048               	dw	72
   518  0090CD  0049               	dw	73
   519  0090CF  004B               	dw	75
   520  0090D1  004D               	dw	77
   521  0090D3  004E               	dw	78
   522  0090D5  0050               	dw	80
   523  0090D7  0051               	dw	81
   524  0090D9  0053               	dw	83
   525  0090DB  0054               	dw	84
   526  0090DD  0056               	dw	86
   527  0090DF  0057               	dw	87
   528  0090E1  0059               	dw	89
   529  0090E3  005A               	dw	90
   530  0090E5  005C               	dw	92
   531  0090E7  005D               	dw	93
   532  0090E9  005F               	dw	95
   533  0090EB  0060               	dw	96
   534  0090ED  0062               	dw	98
   535  0090EF  0063               	dw	99
   536  0090F1  0064               	dw	100
   537  0090F3  0066               	dw	102
   538  0090F5  0067               	dw	103
   539  0090F7  0069               	dw	105
   540  0090F9  006A               	dw	106
   541  0090FB  006C               	dw	108
   542  0090FD  006D               	dw	109
   543  0090FF  006E               	dw	110
   544  009101  0070               	dw	112
   545  009103  0071               	dw	113
   546  009105  0072               	dw	114
   547  009107  0073               	dw	115
   548  009109  0074               	dw	116
   549  00910B  0076               	dw	118
   550  00910D  0078               	dw	120
   551  00910F  0079               	dw	121
   552  009111  007A               	dw	122
   553  009113  007B               	dw	123
   554  009115  007D               	dw	125
   555  009117  007E               	dw	126
   556  009119  007F               	dw	127
   557  00911B  0082               	dw	130
   558  00911D  0085               	dw	133
   559  00911F  0087               	dw	135
   560  009121  008A               	dw	138
   561  009123  008C               	dw	140
   562  009125  008F               	dw	143
   563  009127  0091               	dw	145
   564  009129  0092               	dw	146
   565  00912B  0094               	dw	148
   566  00912D  0098               	dw	152
   567  00912F  009A               	dw	154
   568  009131  009C               	dw	156
   569  009133  009E               	dw	158
   570  009135  00A1               	dw	161
   571  009137  00A3               	dw	163
   572  009139  00A5               	dw	165
   573  00913B  00A7               	dw	167
   574  00913D  00AA               	dw	170
   575  00913F  00AC               	dw	172
   576  009141  00AF               	dw	175
   577  009143  00B2               	dw	178
   578  009145  00B4               	dw	180
   579  009147  00B7               	dw	183
   580  009149  00B8               	dw	184
   581  00914B  00BA               	dw	186
   582  00914D  00BC               	dw	188
   583  00914F  00BE               	dw	190
   584  009151  00C0               	dw	192
   585  009153  00C3               	dw	195
   586  009155  00C4               	dw	196
   587  009157  00C6               	dw	198
   588  009159  00C8               	dw	200
   589  00915B  00CA               	dw	202
   590  00915D  00CC               	dw	204
   591  00915F  00CE               	dw	206
   592  009161  00D0               	dw	208
   593  009163  00D2               	dw	210
   594  009165  00D4               	dw	212
   595  009167  00D6               	dw	214
   596  009169  00D8               	dw	216
   597  00916B  00D9               	dw	217
   598  00916D  00DB               	dw	219
   599  00916F  00DD               	dw	221
   600  009171  00DF               	dw	223
   601  009173  00E1               	dw	225
   602  009175  00E2               	dw	226
   603  009177  00E5               	dw	229
   604  009179  00E7               	dw	231
   605  00917B  00E8               	dw	232
   606  00917D  00EA               	dw	234
   607  00917F  00EC               	dw	236
   608  009181  00EE               	dw	238
   609  009183  00EF               	dw	239
   610  009185  00F2               	dw	242
   611  009187  00F3               	dw	243
   612  009189  00F5               	dw	245
   613  00918B  00F7               	dw	247
   614  00918D  00F8               	dw	248
   615  00918F  00FB               	dw	251
   616  009191  00FD               	dw	253
   617  009193  0100               	dw	256
   618  009195  0103               	dw	259
   619  009197  0104               	dw	260
   620  009199  0107               	dw	263
   621  00919B  010A               	dw	266
   622  00919D  010C               	dw	268
   623  00919F  010F               	dw	271
   624  0091A1  0112               	dw	274
   625  0091A3  0114               	dw	276
   626  0091A5  0117               	dw	279
   627  0091A7  0119               	dw	281
   628  0091A9  011C               	dw	284
   629  0091AB  011E               	dw	286
   630  0091AD  0121               	dw	289
   631  0091AF  0123               	dw	291
   632  0091B1  0125               	dw	293
   633  0091B3  0129               	dw	297
   634  0091B5  012B               	dw	299
   635  0091B7  012C               	dw	300
   636  0091B9  012E               	dw	302
   637  0091BB  0132               	dw	306
   638  0091BD  0134               	dw	308
   639  0091BF  0136               	dw	310
   640  0091C1  0138               	dw	312
   641  0091C3  013B               	dw	315
   642  0091C5  013D               	dw	317
   643  0091C7  013F               	dw	319
   644  0091C9  0143               	dw	323
   645  0091CB  0146               	dw	326
   646  0091CD  0148               	dw	328
   647  0091CF  014A               	dw	330
   648  0091D1  014C               	dw	332
   649  0091D3  014F               	dw	335
   650  0091D5  0151               	dw	337
   651  0091D7  0154               	dw	340
   652  0091D9  0156               	dw	342
   653  0091DB  0159               	dw	345
   654  0091DD  015B               	dw	347
   655  0091DF  015E               	dw	350
   656  0091E1  0160               	dw	352
   657  0091E3  0163               	dw	355
   658  0091E5  0166               	dw	358
   659  0091E7  0169               	dw	361
   660  0091E9  016B               	dw	363
   661  0091EB  016E               	dw	366
   662  0091ED  0171               	dw	369
   663  0091EF  0174               	dw	372
   664  0091F1  0177               	dw	375
   665  0091F3  017A               	dw	378
   666  0091F5  017D               	dw	381
   667  0091F7  0180               	dw	384
   668  0091F9  0183               	dw	387
   669  0091FB  0187               	dw	391
   670  0091FD  018A               	dw	394
   671  0091FF  018D               	dw	397
   672  009201  0191               	dw	401
   673  009203  0194               	dw	404
   674  009205  0198               	dw	408
   675  009207  019B               	dw	411
   676  009209  019F               	dw	415
   677  00920B  01A3               	dw	419
   678  00920D  01A6               	dw	422
   679  00920F  01AA               	dw	426
   680  009211  01AE               	dw	430
   681  009213  01B2               	dw	434
   682  009215  01B6               	dw	438
   683  009217  01BA               	dw	442
   684  009219  01BE               	dw	446
   685  00921B  01C3               	dw	451
   686  00921D  01C7               	dw	455
   687  00921F  01CC               	dw	460
   688  009221  01D0               	dw	464
   689  009223  01D5               	dw	469
   690  009225  01D9               	dw	473
   691  009227  01DE               	dw	478
   692  009229  01E3               	dw	483
   693  00922B  01E8               	dw	488
   694  00922D  01ED               	dw	493
   695  00922F  01F3               	dw	499
   696  009231  01F8               	dw	504
   697  009233  01FE               	dw	510
   698  009235  0203               	dw	515
   699  009237  0209               	dw	521
   700  009239  020F               	dw	527
   701  00923B  0215               	dw	533
   702  00923D  021B               	dw	539
   703  00923F  0221               	dw	545
   704  009241  0227               	dw	551
   705  009243  022E               	dw	558
   706  009245  0235               	dw	565
   707  009247  023C               	dw	572
   708  009249  0243               	dw	579
   709  00924B  024A               	dw	586
   710  00924D  0251               	dw	593
   711  00924F  0259               	dw	601
   712  009251  0261               	dw	609
   713  009253  0269               	dw	617
   714  009255  0271               	dw	625
   715  009257  0279               	dw	633
   716  009259  0282               	dw	642
   717  00925B  028B               	dw	651
   718  00925D  0294               	dw	660
   719  00925F  029E               	dw	670
   720  009261  02A7               	dw	679
   721  009263  02B1               	dw	689
   722  009265  02BC               	dw	700
   723  009267  02C6               	dw	710
   724  009269  02D1               	dw	721
   725  00926B  02DC               	dw	732
   726  00926D  02DC               	dw	732
   727  00926F  02DF               	dw	735
   728  009271  02E2               	dw	738
   729  009273  02E5               	dw	741
   730  009275  02E8               	dw	744
   731  009277  02EB               	dw	747
   732  009279  02EE               	dw	750
   733  00927B  02F1               	dw	753
   734  00927D  02F4               	dw	756
   735  00927F  02F7               	dw	759
   736  009281  02FA               	dw	762
   737  009283  02FD               	dw	765
   738  009285  0300               	dw	768
   739  009287  0304               	dw	772
   740  009289  0307               	dw	775
   741  00928B  030A               	dw	778
   742  00928D  030D               	dw	781
   743  00928F  0311               	dw	785
   744  009291  0314               	dw	788
   745  009293  0317               	dw	791
   746  009295  031A               	dw	794
   747  009297  031E               	dw	798
   748  009299  0321               	dw	801
   749  00929B  0325               	dw	805
   750  00929D  0328               	dw	808
   751  00929F  032C               	dw	812
   752  0092A1  032F               	dw	815
   753  0092A3  0333               	dw	819
   754  0092A5  0336               	dw	822
   755  0092A7  033A               	dw	826
   756  0092A9  033E               	dw	830
   757  0092AB  0341               	dw	833
   758  0092AD  0345               	dw	837
   759  0092AF  0349               	dw	841
   760  0092B1  034D               	dw	845
   761  0092B3  0350               	dw	848
   762  0092B5  0354               	dw	852
   763  0092B7  0358               	dw	856
   764  0092B9  035C               	dw	860
   765  0092BB  0360               	dw	864
   766  0092BD  0364               	dw	868
   767  0092BF  0368               	dw	872
   768  0092C1  036C               	dw	876
   769  0092C3  0370               	dw	880
   770  0092C5  0374               	dw	884
   771  0092C7  0379               	dw	889
   772  0092C9  037D               	dw	893
   773  0092CB  0381               	dw	897
   774  0092CD  0385               	dw	901
   775  0092CF  038A               	dw	906
   776  0092D1  038E               	dw	910
   777  0092D3  0393               	dw	915
   778  0092D5  0397               	dw	919
   779  0092D7  039C               	dw	924
   780  0092D9  03A0               	dw	928
   781  0092DB  03A5               	dw	933
   782  0092DD  03AA               	dw	938
   783  0092DF  03AE               	dw	942
   784  0092E1  03B3               	dw	947
   785  0092E3  03B8               	dw	952
   786  0092E5  03BD               	dw	957
   787  0092E7  03C2               	dw	962
   788  0092E9  03C6               	dw	966
   789  0092EB  03CC               	dw	972
   790  0092ED  03D1               	dw	977
   791  0092EF  03D6               	dw	982
   792  0092F1  03DB               	dw	987
   793  0092F3  03E0               	dw	992
   794  0092F5  03E5               	dw	997
   795  0092F7  03EB               	dw	1003
   796  0092F9  03F0               	dw	1008
   797  0092FB  03F6               	dw	1014
   798  0092FD  03FB               	dw	1019
   799  0092FF  0401               	dw	1025
   800  009301  0406               	dw	1030
   801  009303  040C               	dw	1036
   802  009305  0412               	dw	1042
   803  009307  0417               	dw	1047
   804  009309  041D               	dw	1053
   805  00930B  0423               	dw	1059
   806  00930D  0429               	dw	1065
   807  00930F  042F               	dw	1071
   808  009311  0436               	dw	1078
   809  009313  043C               	dw	1084
   810  009315  0442               	dw	1090
   811  009317  0448               	dw	1096
   812  009319  044F               	dw	1103
   813  00931B  0455               	dw	1109
   814  00931D  045C               	dw	1116
   815  00931F  0463               	dw	1123
   816  009321  046A               	dw	1130
   817  009323  0470               	dw	1136
   818  009325  0477               	dw	1143
   819  009327  047E               	dw	1150
   820  009329  0485               	dw	1157
   821  00932B  048D               	dw	1165
   822  00932D  0494               	dw	1172
   823  00932F  049B               	dw	1179
   824  009331  04A3               	dw	1187
   825  009333  04AA               	dw	1194
   826  009335  04B2               	dw	1202
   827  009337  04BA               	dw	1210
   828  009339  04C2               	dw	1218
   829  00933B  04C9               	dw	1225
   830  00933D  04D2               	dw	1234
   831  00933F  04DA               	dw	1242
   832  009341  04E2               	dw	1250
   833  009343  04EA               	dw	1258
   834  009345  04F3               	dw	1267
   835  009347  04FC               	dw	1276
   836  009349  0504               	dw	1284
   837  00934B  050D               	dw	1293
   838  00934D  0516               	dw	1302
   839  00934F  051F               	dw	1311
   840  009351  0528               	dw	1320
   841  009353  0532               	dw	1330
   842  009355  053B               	dw	1339
   843  009357  0545               	dw	1349
   844  009359  054F               	dw	1359
   845  00935B  0559               	dw	1369
   846  00935D  0563               	dw	1379
   847  00935F  056D               	dw	1389
   848  009361  0577               	dw	1399
   849  009363  0582               	dw	1410
   850  009365  058C               	dw	1420
   851  009367  0597               	dw	1431
   852  009369  05A2               	dw	1442
   853  00936B  05AD               	dw	1453
   854  00936D  05B9               	dw	1465
   855  00936F  05C4               	dw	1476
   856  009371  05D0               	dw	1488
   857  009373  05DC               	dw	1500
   858  009375  05E8               	dw	1512
   859  009377  05F4               	dw	1524
   860  009379  0601               	dw	1537
   861  00937B  060E               	dw	1550
   862  00937D  061A               	dw	1562
   863  00937F  0628               	dw	1576
   864  009381  0635               	dw	1589
   865  009383  0643               	dw	1603
   866  009385  0650               	dw	1616
   867  009387  065E               	dw	1630
   868  009389  066D               	dw	1645
   869  00938B  067B               	dw	1659
   870  00938D  068A               	dw	1674
   871  00938F  0699               	dw	1689
   872  009391  06A9               	dw	1705
   873  009393  06B8               	dw	1720
   874  009395  06C8               	dw	1736
   875  009397  06D8               	dw	1752
   876  009399  06E9               	dw	1769
   877  00939B  06FA               	dw	1786
   878  00939D  070B               	dw	1803
   879  00939F  071C               	dw	1820
   880  0093A1  072E               	dw	1838
   881  0093A3  0740               	dw	1856
   882  0093A5  0753               	dw	1875
   883  0093A7  0766               	dw	1894
   884  0093A9  0779               	dw	1913
   885  0093AB  078D               	dw	1933
   886  0093AD  07A1               	dw	1953
   887  0093AF  07B6               	dw	1974
   888  0093B1  07CB               	dw	1995
   889  0093B3  07E0               	dw	2016
   890  0093B5  07F6               	dw	2038
   891  0093B7  080C               	dw	2060
   892  0093B9  0823               	dw	2083
   893  0093BB  083B               	dw	2107
   894  0093BD  0853               	dw	2131
   895  0093BF  086B               	dw	2155
   896  0093C1  0884               	dw	2180
   897  0093C3  089E               	dw	2206
   898  0093C5  08B8               	dw	2232
   899  0093C7  08D3               	dw	2259
   900  0093C9  08EF               	dw	2287
   901  0093CB  090B               	dw	2315
   902  0093CD  0928               	dw	2344
   903  0093CF  0945               	dw	2373
   904  0093D1  0964               	dw	2404
   905  0093D3  0983               	dw	2435
   906  0093D5  09A3               	dw	2467
   907  0093D7  09C4               	dw	2500
   908  0093D9  09E6               	dw	2534
   909  0093DB  0A08               	dw	2568
   910  0093DD  0A2C               	dw	2604
   911  0093DF  0A51               	dw	2641
   912  0093E1  0A77               	dw	2679
   913  0093E3  0A9D               	dw	2717
   914  0093E5  0AC5               	dw	2757
   915  0093E7  0AEF               	dw	2799
   916  0093E9  0B19               	dw	2841
   917  0093EB  0B45               	dw	2885
   918  0093ED  0B72               	dw	2930
   919  0093EF  0B72               	dw	2930
   920  0093F1  0B7D               	dw	2941
   921  0093F3  0B89               	dw	2953
   922  0093F5  0B94               	dw	2964
   923  0093F7  0BA0               	dw	2976
   924  0093F9  0BAC               	dw	2988
   925  0093FB  0BB8               	dw	3000
   926  0093FD  0BC4               	dw	3012
   927  0093FF  0BD0               	dw	3024
   928  009401  0BDC               	dw	3036
   929  009403  0BE9               	dw	3049
   930  009405  0BF5               	dw	3061
   931  009407  0C02               	dw	3074
   932  009409  0C0E               	dw	3086
   933  00940B  0C1B               	dw	3099
   934  00940D  0C28               	dw	3112
   935  00940F  0C35               	dw	3125
   936  009411  0C42               	dw	3138
   937  009413  0C4F               	dw	3151
   938  009415  0C5D               	dw	3165
   939  009417  0C6A               	dw	3178
   940  009419  0C77               	dw	3191
   941  00941B  0C85               	dw	3205
   942  00941D  0C93               	dw	3219
   943  00941F  0CA1               	dw	3233
   944  009421  0CAF               	dw	3247
   945  009423  0CBD               	dw	3261
   946  009425  0CCB               	dw	3275
   947  009427  0CD9               	dw	3289
   948  009429  0CE8               	dw	3304
   949  00942B  0CF7               	dw	3319
   950  00942D  0D05               	dw	3333
   951  00942F  0D14               	dw	3348
   952  009431  0D23               	dw	3363
   953  009433  0D32               	dw	3378
   954  009435  0D42               	dw	3394
   955  009437  0D51               	dw	3409
   956  009439  0D61               	dw	3425
   957  00943B  0D70               	dw	3440
   958  00943D  0D80               	dw	3456
   959  00943F  0D90               	dw	3472
   960  009441  0DA0               	dw	3488
   961  009443  0DB1               	dw	3505
   962  009445  0DC1               	dw	3521
   963  009447  0DD2               	dw	3538
   964  009449  0DE3               	dw	3555
   965  00944B  0DF3               	dw	3571
   966  00944D  0E05               	dw	3589
   967  00944F  0E16               	dw	3606
   968  009451  0E27               	dw	3623
   969  009453  0E39               	dw	3641
   970  009455  0E4B               	dw	3659
   971  009457  0E5C               	dw	3676
   972  009459  0E6F               	dw	3695
   973  00945B  0E81               	dw	3713
   974  00945D  0E93               	dw	3731
   975  00945F  0EA6               	dw	3750
   976  009461                     __end_of_motor_speed_lookup:
   977                           	opt stack 0
   978  009461                     _motor_steps_lookup:
   979                           	opt stack 0
   980  009461  0001               	dw	1
   981  009463  0002               	dw	2
   982  009465  0003               	dw	3
   983  009467  0004               	dw	4
   984  009469  0005               	dw	5
   985  00946B  0006               	dw	6
   986  00946D  0007               	dw	7
   987  00946F  0008               	dw	8
   988  009471  0009               	dw	9
   989  009473  000A               	dw	10
   990  009475  000B               	dw	11
   991  009477  000C               	dw	12
   992  009479  000D               	dw	13
   993  00947B  000E               	dw	14
   994  00947D  000F               	dw	15
   995  00947F  0010               	dw	16
   996  009481  0011               	dw	17
   997  009483  0012               	dw	18
   998  009485  0013               	dw	19
   999  009487  0014               	dw	20
  1000  009489  0015               	dw	21
  1001  00948B  0016               	dw	22
  1002  00948D  0017               	dw	23
  1003  00948F  0018               	dw	24
  1004  009491  0019               	dw	25
  1005  009493  001A               	dw	26
  1006  009495  001B               	dw	27
  1007  009497  001C               	dw	28
  1008  009499  001D               	dw	29
  1009  00949B  001E               	dw	30
  1010  00949D  001F               	dw	31
  1011  00949F  0020               	dw	32
  1012  0094A1  0021               	dw	33
  1013  0094A3  0022               	dw	34
  1014  0094A5  0023               	dw	35
  1015  0094A7  0024               	dw	36
  1016  0094A9  0025               	dw	37
  1017  0094AB  0026               	dw	38
  1018  0094AD  0027               	dw	39
  1019  0094AF  0028               	dw	40
  1020  0094B1  0029               	dw	41
  1021  0094B3  002A               	dw	42
  1022  0094B5  002B               	dw	43
  1023  0094B7  002C               	dw	44
  1024  0094B9  002D               	dw	45
  1025  0094BB  002E               	dw	46
  1026  0094BD  002F               	dw	47
  1027  0094BF  0030               	dw	48
  1028  0094C1  0031               	dw	49
  1029  0094C3  0032               	dw	50
  1030  0094C5  0033               	dw	51
  1031  0094C7  0034               	dw	52
  1032  0094C9  0035               	dw	53
  1033  0094CB  0036               	dw	54
  1034  0094CD  0037               	dw	55
  1035  0094CF  0038               	dw	56
  1036  0094D1  0039               	dw	57
  1037  0094D3  003A               	dw	58
  1038  0094D5  003B               	dw	59
  1039  0094D7  003C               	dw	60
  1040  0094D9  003D               	dw	61
  1041  0094DB  003E               	dw	62
  1042  0094DD  003F               	dw	63
  1043  0094DF  0040               	dw	64
  1044  0094E1  0041               	dw	65
  1045  0094E3  0042               	dw	66
  1046  0094E5  0043               	dw	67
  1047  0094E7  0045               	dw	69
  1048  0094E9  0047               	dw	71
  1049  0094EB  0049               	dw	73
  1050  0094ED  004B               	dw	75
  1051  0094EF  004D               	dw	77
  1052  0094F1  004F               	dw	79
  1053  0094F3  0051               	dw	81
  1054  0094F5  0053               	dw	83
  1055  0094F7  0055               	dw	85
  1056  0094F9  0057               	dw	87
  1057  0094FB  0059               	dw	89
  1058  0094FD  005B               	dw	91
  1059  0094FF  005D               	dw	93
  1060  009501  005F               	dw	95
  1061  009503  0061               	dw	97
  1062  009505  0063               	dw	99
  1063  009507  0065               	dw	101
  1064  009509  0067               	dw	103
  1065  00950B  0069               	dw	105
  1066  00950D  006B               	dw	107
  1067  00950F  006E               	dw	110
  1068  009511  0070               	dw	112
  1069  009513  0073               	dw	115
  1070  009515  0075               	dw	117
  1071  009517  0077               	dw	119
  1072  009519  0079               	dw	121
  1073  00951B  007B               	dw	123
  1074  00951D  007D               	dw	125
  1075  00951F  007F               	dw	127
  1076  009521  0081               	dw	129
  1077  009523  0083               	dw	131
  1078  009525  0085               	dw	133
  1079  009527  0087               	dw	135
  1080  009529  0089               	dw	137
  1081  00952B  008B               	dw	139
  1082  00952D  008D               	dw	141
  1083  00952F  008F               	dw	143
  1084  009531  0091               	dw	145
  1085  009533  0093               	dw	147
  1086  009535  0095               	dw	149
  1087  009537  0097               	dw	151
  1088  009539  0099               	dw	153
  1089  00953B  009B               	dw	155
  1090  00953D  009D               	dw	157
  1091  00953F  009F               	dw	159
  1092  009541  00A1               	dw	161
  1093  009543  00A3               	dw	163
  1094  009545  00A5               	dw	165
  1095  009547  00A7               	dw	167
  1096  009549  00A9               	dw	169
  1097  00954B  00AB               	dw	171
  1098  00954D  00AD               	dw	173
  1099  00954F  00AF               	dw	175
  1100  009551  00B1               	dw	177
  1101  009553  00B3               	dw	179
  1102  009555  00B5               	dw	181
  1103  009557  00B7               	dw	183
  1104  009559  00B9               	dw	185
  1105  00955B  00BB               	dw	187
  1106  00955D  00BD               	dw	189
  1107  00955F  00C0               	dw	192
  1108  009561  00C3               	dw	195
  1109  009563  00C6               	dw	198
  1110  009565  00C9               	dw	201
  1111  009567  00CC               	dw	204
  1112  009569  00CF               	dw	207
  1113  00956B  00D2               	dw	210
  1114  00956D  00D5               	dw	213
  1115  00956F  00D8               	dw	216
  1116  009571  00DB               	dw	219
  1117  009573  00DE               	dw	222
  1118  009575  00E1               	dw	225
  1119  009577  00E4               	dw	228
  1120  009579  00E7               	dw	231
  1121  00957B  00EA               	dw	234
  1122  00957D  00ED               	dw	237
  1123  00957F  00F0               	dw	240
  1124  009581  00F3               	dw	243
  1125  009583  00F6               	dw	246
  1126  009585  00F9               	dw	249
  1127  009587  00FC               	dw	252
  1128  009589  00FF               	dw	255
  1129  00958B  0102               	dw	258
  1130  00958D  0105               	dw	261
  1131  00958F  0108               	dw	264
  1132  009591  010B               	dw	267
  1133  009593  010E               	dw	270
  1134  009595  0111               	dw	273
  1135  009597  0114               	dw	276
  1136  009599  0117               	dw	279
  1137  00959B  011A               	dw	282
  1138  00959D  011D               	dw	285
  1139  00959F  0120               	dw	288
  1140  0095A1  0123               	dw	291
  1141  0095A3  0126               	dw	294
  1142  0095A5  012A               	dw	298
  1143  0095A7  012D               	dw	301
  1144  0095A9  0130               	dw	304
  1145  0095AB  0133               	dw	307
  1146  0095AD  0137               	dw	311
  1147  0095AF  013A               	dw	314
  1148  0095B1  013E               	dw	318
  1149  0095B3  0142               	dw	322
  1150  0095B5  0145               	dw	325
  1151  0095B7  0149               	dw	329
  1152  0095B9  014D               	dw	333
  1153  0095BB  0151               	dw	337
  1154  0095BD  0155               	dw	341
  1155  0095BF  0159               	dw	345
  1156  0095C1  015D               	dw	349
  1157  0095C3  0161               	dw	353
  1158  0095C5  0166               	dw	358
  1159  0095C7  016A               	dw	362
  1160  0095C9  016E               	dw	366
  1161  0095CB  0173               	dw	371
  1162  0095CD  0178               	dw	376
  1163  0095CF  017D               	dw	381
  1164  0095D1  0182               	dw	386
  1165  0095D3  0187               	dw	391
  1166  0095D5  018C               	dw	396
  1167  0095D7  0191               	dw	401
  1168  0095D9  0196               	dw	406
  1169  0095DB  019C               	dw	412
  1170  0095DD  01A1               	dw	417
  1171  0095DF  01A7               	dw	423
  1172  0095E1  01AD               	dw	429
  1173  0095E3  01B3               	dw	435
  1174  0095E5  01B9               	dw	441
  1175  0095E7  01BF               	dw	447
  1176  0095E9  01C6               	dw	454
  1177  0095EB  01CC               	dw	460
  1178  0095ED  01D3               	dw	467
  1179  0095EF  01DA               	dw	474
  1180  0095F1  01E1               	dw	481
  1181  0095F3  01E8               	dw	488
  1182  0095F5  01F0               	dw	496
  1183  0095F7  01F7               	dw	503
  1184  0095F9  01FF               	dw	511
  1185  0095FB  0207               	dw	519
  1186  0095FD  020F               	dw	527
  1187  0095FF  0218               	dw	536
  1188  009601  0221               	dw	545
  1189  009603  022A               	dw	554
  1190  009605  0233               	dw	563
  1191  009607  023D               	dw	573
  1192  009609  0247               	dw	583
  1193  00960B  0251               	dw	593
  1194  00960D  025C               	dw	604
  1195  00960F  0267               	dw	615
  1196  009611  0272               	dw	626
  1197  009613  027E               	dw	638
  1198  009615  028A               	dw	650
  1199  009617  0297               	dw	663
  1200  009619  02A4               	dw	676
  1201  00961B  02B2               	dw	690
  1202  00961D  02C0               	dw	704
  1203  00961F  02CF               	dw	719
  1204  009621  02DF               	dw	735
  1205  009623  02EF               	dw	751
  1206  009625  02FF               	dw	767
  1207  009627  0311               	dw	785
  1208  009629  0323               	dw	803
  1209  00962B  0336               	dw	822
  1210  00962D  0349               	dw	841
  1211  00962F  035E               	dw	862
  1212  009631  0373               	dw	883
  1213  009633  0389               	dw	905
  1214  009635  03A1               	dw	929
  1215  009637  03B9               	dw	953
  1216  009639  03D3               	dw	979
  1217  00963B  03DD               	dw	989
  1218  00963D  03E4               	dw	996
  1219  00963F  03EA               	dw	1002
  1220  009641  03F1               	dw	1009
  1221  009643  03F8               	dw	1016
  1222  009645  03FF               	dw	1023
  1223  009647  0406               	dw	1030
  1224  009649  040D               	dw	1037
  1225  00964B  0415               	dw	1045
  1226  00964D  041C               	dw	1052
  1227  00964F  0424               	dw	1060
  1228  009651  042B               	dw	1067
  1229  009653  0433               	dw	1075
  1230  009655  043B               	dw	1083
  1231  009657  0442               	dw	1090
  1232  009659  044A               	dw	1098
  1233  00965B  0452               	dw	1106
  1234  00965D  045A               	dw	1114
  1235  00965F  0463               	dw	1123
  1236  009661  046B               	dw	1131
  1237  009663  0474               	dw	1140
  1238  009665  047C               	dw	1148
  1239  009667  0485               	dw	1157
  1240  009669  048E               	dw	1166
  1241  00966B  0496               	dw	1174
  1242  00966D  049F               	dw	1183
  1243  00966F  04A9               	dw	1193
  1244  009671  04B2               	dw	1202
  1245  009673  04BB               	dw	1211
  1246  009675  04C5               	dw	1221
  1247  009677  04CE               	dw	1230
  1248  009679  04D8               	dw	1240
  1249  00967B  04E2               	dw	1250
  1250  00967D  04EC               	dw	1260
  1251  00967F  04F6               	dw	1270
  1252  009681  0500               	dw	1280
  1253  009683  050B               	dw	1291
  1254  009685  0515               	dw	1301
  1255  009687  0520               	dw	1312
  1256  009689  052B               	dw	1323
  1257  00968B  0536               	dw	1334
  1258  00968D  0541               	dw	1345
  1259  00968F  054C               	dw	1356
  1260  009691  0558               	dw	1368
  1261  009693  0564               	dw	1380
  1262  009695  056F               	dw	1391
  1263  009697  057B               	dw	1403
  1264  009699  0587               	dw	1415
  1265  00969B  0594               	dw	1428
  1266  00969D  05A0               	dw	1440
  1267  00969F  05AD               	dw	1453
  1268  0096A1  05BA               	dw	1466
  1269  0096A3  05C7               	dw	1479
  1270  0096A5  05D4               	dw	1492
  1271  0096A7  05E2               	dw	1506
  1272  0096A9  05EF               	dw	1519
  1273  0096AB  05FD               	dw	1533
  1274  0096AD  060B               	dw	1547
  1275  0096AF  0619               	dw	1561
  1276  0096B1  0628               	dw	1576
  1277  0096B3  0637               	dw	1591
  1278  0096B5  0646               	dw	1606
  1279  0096B7  0655               	dw	1621
  1280  0096B9  0664               	dw	1636
  1281  0096BB  0674               	dw	1652
  1282  0096BD  0684               	dw	1668
  1283  0096BF  0694               	dw	1684
  1284  0096C1  06A4               	dw	1700
  1285  0096C3  06B5               	dw	1717
  1286  0096C5  06C6               	dw	1734
  1287  0096C7  06D7               	dw	1751
  1288  0096C9  06E9               	dw	1769
  1289  0096CB  06FA               	dw	1786
  1290  0096CD  070C               	dw	1804
  1291  0096CF  071F               	dw	1823
  1292  0096D1  0731               	dw	1841
  1293  0096D3  0744               	dw	1860
  1294  0096D5  0758               	dw	1880
  1295  0096D7  076B               	dw	1899
  1296  0096D9  077F               	dw	1919
  1297  0096DB  0793               	dw	1939
  1298  0096DD  07A8               	dw	1960
  1299  0096DF  07BD               	dw	1981
  1300  0096E1  07D2               	dw	2002
  1301  0096E3  07E8               	dw	2024
  1302  0096E5  07FE               	dw	2046
  1303  0096E7  0815               	dw	2069
  1304  0096E9  082C               	dw	2092
  1305  0096EB  0843               	dw	2115
  1306  0096ED  085B               	dw	2139
  1307  0096EF  0873               	dw	2163
  1308  0096F1  088B               	dw	2187
  1309  0096F3  08A5               	dw	2213
  1310  0096F5  08BE               	dw	2238
  1311  0096F7  08D8               	dw	2264
  1312  0096F9  08F2               	dw	2290
  1313  0096FB  090D               	dw	2317
  1314  0096FD  0929               	dw	2345
  1315  0096FF  0945               	dw	2373
  1316  009701  0961               	dw	2401
  1317  009703  097E               	dw	2430
  1318  009705  099C               	dw	2460
  1319  009707  09BA               	dw	2490
  1320  009709  09D9               	dw	2521
  1321  00970B  09F9               	dw	2553
  1322  00970D  0A19               	dw	2585
  1323  00970F  0A39               	dw	2617
  1324  009711  0A5B               	dw	2651
  1325  009713  0A7D               	dw	2685
  1326  009715  0A9F               	dw	2719
  1327  009717  0AC3               	dw	2755
  1328  009719  0AE7               	dw	2791
  1329  00971B  0B0C               	dw	2828
  1330  00971D  0B31               	dw	2865
  1331  00971F  0B58               	dw	2904
  1332  009721  0B7F               	dw	2943
  1333  009723  0BA7               	dw	2983
  1334  009725  0BD0               	dw	3024
  1335  009727  0BFA               	dw	3066
  1336  009729  0C25               	dw	3109
  1337  00972B  0C51               	dw	3153
  1338  00972D  0C7E               	dw	3198
  1339  00972F  0CAB               	dw	3243
  1340  009731  0CDA               	dw	3290
  1341  009733  0D0A               	dw	3338
  1342  009735  0D3B               	dw	3387
  1343  009737  0D6D               	dw	3437
  1344  009739  0DA0               	dw	3488
  1345  00973B  0DD4               	dw	3540
  1346  00973D  0E0A               	dw	3594
  1347  00973F  0E41               	dw	3649
  1348  009741  0E79               	dw	3705
  1349  009743  0EB3               	dw	3763
  1350  009745  0EEE               	dw	3822
  1351  009747  0F2A               	dw	3882
  1352  009749  0F68               	dw	3944
  1353  00974B  0FA8               	dw	4008
  1354  00974D  0FE9               	dw	4073
  1355  00974F  102C               	dw	4140
  1356  009751  1070               	dw	4208
  1357  009753  10B6               	dw	4278
  1358  009755  10FE               	dw	4350
  1359  009757  1148               	dw	4424
  1360  009759  1194               	dw	4500
  1361  00975B  11E2               	dw	4578
  1362  00975D  1232               	dw	4658
  1363  00975F  1285               	dw	4741
  1364  009761  12D9               	dw	4825
  1365  009763  1330               	dw	4912
  1366  009765  1389               	dw	5001
  1367  009767  13E5               	dw	5093
  1368  009769  1444               	dw	5188
  1369  00976B  14A5               	dw	5285
  1370  00976D  1509               	dw	5385
  1371  00976F  1570               	dw	5488
  1372  009771  15DA               	dw	5594
  1373  009773  1647               	dw	5703
  1374  009775  16B8               	dw	5816
  1375  009777  172B               	dw	5931
  1376  009779  17A3               	dw	6051
  1377  00977B  181E               	dw	6174
  1378  00977D  189D               	dw	6301
  1379  00977F  1921               	dw	6433
  1380  009781  19A8               	dw	6568
  1381  009783  1A34               	dw	6708
  1382  009785  1AC4               	dw	6852
  1383  009787  1B5A               	dw	7002
  1384  009789  1BF4               	dw	7156
  1385  00978B  1C94               	dw	7316
  1386  00978D  1D39               	dw	7481
  1387  00978F  1DE4               	dw	7652
  1388  009791  1E95               	dw	7829
  1389  009793  1F4C               	dw	8012
  1390  009795  200A               	dw	8202
  1391  009797  20CE               	dw	8398
  1392  009799  219A               	dw	8602
  1393  00979B  226E               	dw	8814
  1394  00979D  234A               	dw	9034
  1395  00979F  242E               	dw	9262
  1396  0097A1  251B               	dw	9499
  1397  0097A3  2612               	dw	9746
  1398  0097A5  2712               	dw	10002
  1399  0097A7  281D               	dw	10269
  1400  0097A9  2932               	dw	10546
  1401  0097AB  2A53               	dw	10835
  1402  0097AD  2B81               	dw	11137
  1403  0097AF  2CBB               	dw	11451
  1404  0097B1  2E03               	dw	11779
  1405  0097B3  2F5A               	dw	12122
  1406  0097B5  30C0               	dw	12480
  1407  0097B7  3236               	dw	12854
  1408  0097B9  33BD               	dw	13245
  1409  0097BB  3557               	dw	13655
  1410  0097BD  35F5               	dw	13813
  1411  0097BF  3661               	dw	13921
  1412  0097C1  36CD               	dw	14029
  1413  0097C3  373B               	dw	14139
  1414  0097C5  37AA               	dw	14250
  1415  0097C7  381B               	dw	14363
  1416  0097C9  388C               	dw	14476
  1417  0097CB  3900               	dw	14592
  1418  0097CD  3974               	dw	14708
  1419  0097CF  39EA               	dw	14826
  1420  0097D1  3A62               	dw	14946
  1421  0097D3  3ADB               	dw	15067
  1422  0097D5  3B55               	dw	15189
  1423  0097D7  3BD1               	dw	15313
  1424  0097D9  3C4E               	dw	15438
  1425  0097DB  3CCD               	dw	15565
  1426  0097DD  3D4E               	dw	15694
  1427  0097DF  3DD0               	dw	15824
  1428  0097E1  3E54               	dw	15956
  1429  0097E3  3EDA               	dw	16090
  1430  0097E5  3F61               	dw	16225
  1431  0097E7  3FEA               	dw	16362
  1432  0097E9  4074               	dw	16500
  1433  0097EB  4101               	dw	16641
  1434  0097ED  418F               	dw	16783
  1435  0097EF  421F               	dw	16927
  1436  0097F1  42B1               	dw	17073
  1437  0097F3  4345               	dw	17221
  1438  0097F5  43DB               	dw	17371
  1439  0097F7  4473               	dw	17523
  1440  0097F9  450D               	dw	17677
  1441  0097FB  45A9               	dw	17833
  1442  0097FD  4647               	dw	17991
  1443  0097FF  46E7               	dw	18151
  1444  009801  4789               	dw	18313
  1445  009803  482E               	dw	18478
  1446  009805  48D5               	dw	18645
  1447  009807  497E               	dw	18814
  1448  009809  4A29               	dw	18985
  1449  00980B  4AD7               	dw	19159
  1450  00980D  4B87               	dw	19335
  1451  00980F  4C3A               	dw	19514
  1452  009811  4CEF               	dw	19695
  1453  009813  4DA6               	dw	19878
  1454  009815  4E61               	dw	20065
  1455  009817  4F1E               	dw	20254
  1456  009819  4FDD               	dw	20445
  1457  00981B  50A0               	dw	20640
  1458  00981D  5165               	dw	20837
  1459  00981F  522D               	dw	21037
  1460  009821  52F8               	dw	21240
  1461  009823  53C6               	dw	21446
  1462  009825  5497               	dw	21655
  1463  009827  556B               	dw	21867
  1464  009829  5642               	dw	22082
  1465  00982B  571C               	dw	22300
  1466  00982D  57FA               	dw	22522
  1467  00982F                     __end_of_motor_steps_lookup:
  1468                           	opt stack 0
  1469  00982F                     _motor_postscaler_lookup:
  1470                           	opt stack 0
  1471  00982F  0C                 	db	12
  1472  009830  07                 	db	7
  1473  009831  05                 	db	5
  1474  009832  04                 	db	4
  1475  009833  04                 	db	4
  1476  009834  03                 	db	3
  1477  009835  03                 	db	3
  1478  009836  03                 	db	3
  1479  009837  02                 	db	2
  1480  009838  02                 	db	2
  1481  009839  02                 	db	2
  1482  00983A  02                 	db	2
  1483  00983B  02                 	db	2
  1484  00983C  02                 	db	2
  1485  00983D  01                 	db	1
  1486  00983E  01                 	db	1
  1487  00983F  01                 	db	1
  1488  009840  01                 	db	1
  1489  009841  01                 	db	1
  1490  009842  01                 	db	1
  1491  009843  01                 	db	1
  1492  009844  01                 	db	1
  1493  009845  01                 	db	1
  1494  009846  01                 	db	1
  1495  009847  01                 	db	1
  1496  009848  01                 	db	1
  1497  009849  01                 	db	1
  1498  00984A  01                 	db	1
  1499  00984B  01                 	db	1
  1500  00984C  01                 	db	1
  1501  00984D  01                 	db	1
  1502  00984E  01                 	db	1
  1503  00984F  01                 	db	1
  1504  009850  01                 	db	1
  1505  009851  01                 	db	1
  1506  009852  01                 	db	1
  1507  009853  01                 	db	1
  1508  009854  01                 	db	1
  1509  009855  01                 	db	1
  1510  009856  01                 	db	1
  1511  009857  01                 	db	1
  1512  009858  01                 	db	1
  1513  009859  01                 	db	1
  1514  00985A  01                 	db	1
  1515  00985B  01                 	db	1
  1516  00985C  01                 	db	1
  1517  00985D  01                 	db	1
  1518  00985E  01                 	db	1
  1519  00985F  01                 	db	1
  1520  009860  01                 	db	1
  1521  009861  01                 	db	1
  1522  009862  01                 	db	1
  1523  009863  01                 	db	1
  1524  009864  01                 	db	1
  1525  009865  01                 	db	1
  1526  009866  01                 	db	1
  1527  009867  01                 	db	1
  1528  009868  01                 	db	1
  1529  009869  01                 	db	1
  1530  00986A  01                 	db	1
  1531  00986B  01                 	db	1
  1532  00986C  01                 	db	1
  1533  00986D  01                 	db	1
  1534  00986E  01                 	db	1
  1535  00986F  01                 	db	1
  1536  009870  01                 	db	1
  1537  009871  01                 	db	1
  1538  009872  01                 	db	1
  1539  009873  01                 	db	1
  1540  009874  01                 	db	1
  1541  009875  01                 	db	1
  1542  009876  01                 	db	1
  1543  009877  01                 	db	1
  1544  009878  01                 	db	1
  1545  009879  01                 	db	1
  1546  00987A  01                 	db	1
  1547  00987B  01                 	db	1
  1548  00987C  01                 	db	1
  1549  00987D  01                 	db	1
  1550  00987E  01                 	db	1
  1551  00987F  01                 	db	1
  1552  009880  01                 	db	1
  1553  009881  01                 	db	1
  1554  009882  01                 	db	1
  1555  009883  01                 	db	1
  1556  009884  01                 	db	1
  1557  009885  01                 	db	1
  1558  009886  01                 	db	1
  1559  009887  01                 	db	1
  1560  009888  01                 	db	1
  1561  009889  01                 	db	1
  1562  00988A  00                 	db	0
  1563  00988B  00                 	db	0
  1564  00988C  00                 	db	0
  1565  00988D  00                 	db	0
  1566  00988E  00                 	db	0
  1567  00988F  00                 	db	0
  1568  009890  00                 	db	0
  1569  009891  00                 	db	0
  1570  009892  00                 	db	0
  1571  009893  00                 	db	0
  1572  009894  00                 	db	0
  1573  009895  00                 	db	0
  1574  009896  00                 	db	0
  1575  009897  00                 	db	0
  1576  009898  00                 	db	0
  1577  009899  00                 	db	0
  1578  00989A  00                 	db	0
  1579  00989B  00                 	db	0
  1580  00989C  00                 	db	0
  1581  00989D  00                 	db	0
  1582  00989E  00                 	db	0
  1583  00989F  00                 	db	0
  1584  0098A0  00                 	db	0
  1585  0098A1  00                 	db	0
  1586  0098A2  00                 	db	0
  1587  0098A3  00                 	db	0
  1588  0098A4  00                 	db	0
  1589  0098A5  00                 	db	0
  1590  0098A6  00                 	db	0
  1591  0098A7  00                 	db	0
  1592  0098A8  00                 	db	0
  1593  0098A9  00                 	db	0
  1594  0098AA  00                 	db	0
  1595  0098AB  00                 	db	0
  1596  0098AC  00                 	db	0
  1597  0098AD  00                 	db	0
  1598  0098AE  00                 	db	0
  1599  0098AF  00                 	db	0
  1600  0098B0  00                 	db	0
  1601  0098B1  00                 	db	0
  1602  0098B2  00                 	db	0
  1603  0098B3  00                 	db	0
  1604  0098B4  00                 	db	0
  1605  0098B5  00                 	db	0
  1606  0098B6  00                 	db	0
  1607  0098B7  00                 	db	0
  1608  0098B8  00                 	db	0
  1609  0098B9  00                 	db	0
  1610  0098BA  00                 	db	0
  1611  0098BB  00                 	db	0
  1612  0098BC  00                 	db	0
  1613  0098BD  00                 	db	0
  1614  0098BE  00                 	db	0
  1615  0098BF  00                 	db	0
  1616  0098C0  00                 	db	0
  1617  0098C1  00                 	db	0
  1618  0098C2  00                 	db	0
  1619  0098C3  00                 	db	0
  1620  0098C4  00                 	db	0
  1621  0098C5  00                 	db	0
  1622  0098C6  00                 	db	0
  1623  0098C7  00                 	db	0
  1624  0098C8  00                 	db	0
  1625  0098C9  00                 	db	0
  1626  0098CA  00                 	db	0
  1627  0098CB  00                 	db	0
  1628  0098CC  00                 	db	0
  1629  0098CD  00                 	db	0
  1630  0098CE  00                 	db	0
  1631  0098CF  00                 	db	0
  1632  0098D0  00                 	db	0
  1633  0098D1  00                 	db	0
  1634  0098D2  00                 	db	0
  1635  0098D3  00                 	db	0
  1636  0098D4  00                 	db	0
  1637  0098D5  00                 	db	0
  1638  0098D6  00                 	db	0
  1639  0098D7  00                 	db	0
  1640  0098D8  00                 	db	0
  1641  0098D9  00                 	db	0
  1642  0098DA  00                 	db	0
  1643  0098DB  00                 	db	0
  1644  0098DC  00                 	db	0
  1645  0098DD  00                 	db	0
  1646  0098DE  00                 	db	0
  1647  0098DF  00                 	db	0
  1648  0098E0  00                 	db	0
  1649  0098E1  00                 	db	0
  1650  0098E2  00                 	db	0
  1651  0098E3  00                 	db	0
  1652  0098E4  00                 	db	0
  1653  0098E5  00                 	db	0
  1654  0098E6  00                 	db	0
  1655  0098E7  00                 	db	0
  1656  0098E8  00                 	db	0
  1657  0098E9  00                 	db	0
  1658  0098EA  00                 	db	0
  1659  0098EB  00                 	db	0
  1660  0098EC  00                 	db	0
  1661  0098ED  00                 	db	0
  1662  0098EE  00                 	db	0
  1663  0098EF  00                 	db	0
  1664  0098F0  00                 	db	0
  1665  0098F1  00                 	db	0
  1666  0098F2  00                 	db	0
  1667  0098F3  00                 	db	0
  1668  0098F4  00                 	db	0
  1669  0098F5  00                 	db	0
  1670  0098F6  00                 	db	0
  1671  0098F7  00                 	db	0
  1672  0098F8  00                 	db	0
  1673  0098F9  00                 	db	0
  1674  0098FA  00                 	db	0
  1675  0098FB  00                 	db	0
  1676  0098FC  00                 	db	0
  1677  0098FD  00                 	db	0
  1678  0098FE  00                 	db	0
  1679  0098FF  00                 	db	0
  1680  009900  00                 	db	0
  1681  009901  00                 	db	0
  1682  009902  00                 	db	0
  1683  009903  00                 	db	0
  1684  009904  00                 	db	0
  1685  009905  00                 	db	0
  1686  009906  00                 	db	0
  1687  009907  00                 	db	0
  1688  009908  00                 	db	0
  1689  009909  00                 	db	0
  1690  00990A  00                 	db	0
  1691  00990B  00                 	db	0
  1692  00990C  00                 	db	0
  1693  00990D  00                 	db	0
  1694  00990E  00                 	db	0
  1695  00990F  00                 	db	0
  1696  009910  00                 	db	0
  1697  009911  00                 	db	0
  1698  009912  00                 	db	0
  1699  009913  00                 	db	0
  1700  009914  00                 	db	0
  1701  009915  00                 	db	0
  1702  009916  00                 	db	0
  1703  009917  00                 	db	0
  1704  009918  00                 	db	0
  1705  009919  00                 	db	0
  1706  00991A  00                 	db	0
  1707  00991B  00                 	db	0
  1708  00991C  00                 	db	0
  1709  00991D  00                 	db	0
  1710  00991E  00                 	db	0
  1711  00991F  00                 	db	0
  1712  009920  00                 	db	0
  1713  009921  00                 	db	0
  1714  009922  00                 	db	0
  1715  009923  00                 	db	0
  1716  009924  00                 	db	0
  1717  009925  00                 	db	0
  1718  009926  00                 	db	0
  1719  009927  00                 	db	0
  1720  009928  00                 	db	0
  1721  009929  00                 	db	0
  1722  00992A  00                 	db	0
  1723  00992B  00                 	db	0
  1724  00992C  00                 	db	0
  1725  00992D  00                 	db	0
  1726  00992E  00                 	db	0
  1727  00992F  00                 	db	0
  1728  009930  00                 	db	0
  1729  009931  00                 	db	0
  1730  009932  00                 	db	0
  1731  009933  00                 	db	0
  1732  009934  00                 	db	0
  1733  009935  00                 	db	0
  1734  009936  00                 	db	0
  1735  009937  00                 	db	0
  1736  009938  00                 	db	0
  1737  009939  00                 	db	0
  1738  00993A  00                 	db	0
  1739  00993B  00                 	db	0
  1740  00993C  00                 	db	0
  1741  00993D  00                 	db	0
  1742  00993E  00                 	db	0
  1743  00993F  00                 	db	0
  1744  009940  00                 	db	0
  1745  009941  00                 	db	0
  1746  009942  00                 	db	0
  1747  009943  00                 	db	0
  1748  009944  00                 	db	0
  1749  009945  00                 	db	0
  1750  009946  00                 	db	0
  1751  009947  00                 	db	0
  1752  009948  00                 	db	0
  1753  009949  00                 	db	0
  1754  00994A  00                 	db	0
  1755  00994B  00                 	db	0
  1756  00994C  00                 	db	0
  1757  00994D  00                 	db	0
  1758  00994E  00                 	db	0
  1759  00994F  00                 	db	0
  1760  009950  00                 	db	0
  1761  009951  00                 	db	0
  1762  009952  00                 	db	0
  1763  009953  00                 	db	0
  1764  009954  00                 	db	0
  1765  009955  00                 	db	0
  1766  009956  00                 	db	0
  1767  009957  00                 	db	0
  1768  009958  00                 	db	0
  1769  009959  00                 	db	0
  1770  00995A  00                 	db	0
  1771  00995B  00                 	db	0
  1772  00995C  00                 	db	0
  1773  00995D  00                 	db	0
  1774  00995E  00                 	db	0
  1775  00995F  00                 	db	0
  1776  009960  00                 	db	0
  1777  009961  00                 	db	0
  1778  009962  00                 	db	0
  1779  009963  00                 	db	0
  1780  009964  00                 	db	0
  1781  009965  00                 	db	0
  1782  009966  00                 	db	0
  1783  009967  00                 	db	0
  1784  009968  00                 	db	0
  1785  009969  00                 	db	0
  1786  00996A  00                 	db	0
  1787  00996B  00                 	db	0
  1788  00996C  00                 	db	0
  1789  00996D  00                 	db	0
  1790  00996E  00                 	db	0
  1791  00996F  00                 	db	0
  1792  009970  00                 	db	0
  1793  009971  00                 	db	0
  1794  009972  00                 	db	0
  1795  009973  00                 	db	0
  1796  009974  00                 	db	0
  1797  009975  00                 	db	0
  1798  009976  00                 	db	0
  1799  009977  00                 	db	0
  1800  009978  00                 	db	0
  1801  009979  00                 	db	0
  1802  00997A  00                 	db	0
  1803  00997B  00                 	db	0
  1804  00997C  00                 	db	0
  1805  00997D  00                 	db	0
  1806  00997E  00                 	db	0
  1807  00997F  00                 	db	0
  1808  009980  00                 	db	0
  1809  009981  00                 	db	0
  1810  009982  00                 	db	0
  1811  009983  00                 	db	0
  1812  009984  00                 	db	0
  1813  009985  00                 	db	0
  1814  009986  00                 	db	0
  1815  009987  00                 	db	0
  1816  009988  00                 	db	0
  1817  009989  00                 	db	0
  1818  00998A  00                 	db	0
  1819  00998B  00                 	db	0
  1820  00998C  00                 	db	0
  1821  00998D  00                 	db	0
  1822  00998E  00                 	db	0
  1823  00998F  00                 	db	0
  1824  009990  00                 	db	0
  1825  009991  00                 	db	0
  1826  009992  00                 	db	0
  1827  009993  00                 	db	0
  1828  009994  00                 	db	0
  1829  009995  00                 	db	0
  1830  009996  00                 	db	0
  1831  009997  00                 	db	0
  1832  009998  00                 	db	0
  1833  009999  00                 	db	0
  1834  00999A  00                 	db	0
  1835  00999B  00                 	db	0
  1836  00999C  00                 	db	0
  1837  00999D  00                 	db	0
  1838  00999E  00                 	db	0
  1839  00999F  00                 	db	0
  1840  0099A0  00                 	db	0
  1841  0099A1  00                 	db	0
  1842  0099A2  00                 	db	0
  1843  0099A3  00                 	db	0
  1844  0099A4  00                 	db	0
  1845  0099A5  00                 	db	0
  1846  0099A6  00                 	db	0
  1847  0099A7  00                 	db	0
  1848  0099A8  00                 	db	0
  1849  0099A9  00                 	db	0
  1850  0099AA  00                 	db	0
  1851  0099AB  00                 	db	0
  1852  0099AC  00                 	db	0
  1853  0099AD  00                 	db	0
  1854  0099AE  00                 	db	0
  1855  0099AF  00                 	db	0
  1856  0099B0  00                 	db	0
  1857  0099B1  00                 	db	0
  1858  0099B2  00                 	db	0
  1859  0099B3  00                 	db	0
  1860  0099B4  00                 	db	0
  1861  0099B5  00                 	db	0
  1862  0099B6  00                 	db	0
  1863  0099B7  00                 	db	0
  1864  0099B8  00                 	db	0
  1865  0099B9  00                 	db	0
  1866  0099BA  00                 	db	0
  1867  0099BB  00                 	db	0
  1868  0099BC  00                 	db	0
  1869  0099BD  00                 	db	0
  1870  0099BE  00                 	db	0
  1871  0099BF  00                 	db	0
  1872  0099C0  00                 	db	0
  1873  0099C1  00                 	db	0
  1874  0099C2  00                 	db	0
  1875  0099C3  00                 	db	0
  1876  0099C4  00                 	db	0
  1877  0099C5  00                 	db	0
  1878  0099C6  00                 	db	0
  1879  0099C7  00                 	db	0
  1880  0099C8  00                 	db	0
  1881  0099C9  00                 	db	0
  1882  0099CA  00                 	db	0
  1883  0099CB  00                 	db	0
  1884  0099CC  00                 	db	0
  1885  0099CD  00                 	db	0
  1886  0099CE  00                 	db	0
  1887  0099CF  00                 	db	0
  1888  0099D0  00                 	db	0
  1889  0099D1  00                 	db	0
  1890  0099D2  00                 	db	0
  1891  0099D3  00                 	db	0
  1892  0099D4  00                 	db	0
  1893  0099D5  00                 	db	0
  1894  0099D6  00                 	db	0
  1895  0099D7  00                 	db	0
  1896  0099D8  00                 	db	0
  1897  0099D9  00                 	db	0
  1898  0099DA  00                 	db	0
  1899  0099DB  00                 	db	0
  1900  0099DC  00                 	db	0
  1901  0099DD  00                 	db	0
  1902  0099DE  00                 	db	0
  1903  0099DF  00                 	db	0
  1904  0099E0  00                 	db	0
  1905  0099E1  00                 	db	0
  1906  0099E2  00                 	db	0
  1907  0099E3  00                 	db	0
  1908  0099E4  00                 	db	0
  1909  0099E5  00                 	db	0
  1910  0099E6  00                 	db	0
  1911  0099E7  00                 	db	0
  1912  0099E8  00                 	db	0
  1913  0099E9  00                 	db	0
  1914  0099EA  00                 	db	0
  1915  0099EB  00                 	db	0
  1916  0099EC  00                 	db	0
  1917  0099ED  00                 	db	0
  1918  0099EE  00                 	db	0
  1919  0099EF  00                 	db	0
  1920  0099F0  00                 	db	0
  1921  0099F1  00                 	db	0
  1922  0099F2  00                 	db	0
  1923  0099F3  00                 	db	0
  1924  0099F4  00                 	db	0
  1925  0099F5  00                 	db	0
  1926  0099F6  00                 	db	0
  1927  0099F7  00                 	db	0
  1928  0099F8  00                 	db	0
  1929  0099F9  00                 	db	0
  1930  0099FA  00                 	db	0
  1931  0099FB  00                 	db	0
  1932  0099FC  00                 	db	0
  1933  0099FD  00                 	db	0
  1934  0099FE  00                 	db	0
  1935  0099FF  00                 	db	0
  1936  009A00  00                 	db	0
  1937  009A01  00                 	db	0
  1938  009A02  00                 	db	0
  1939  009A03  00                 	db	0
  1940  009A04  00                 	db	0
  1941  009A05  00                 	db	0
  1942  009A06  00                 	db	0
  1943  009A07  00                 	db	0
  1944  009A08  00                 	db	0
  1945  009A09  00                 	db	0
  1946  009A0A  00                 	db	0
  1947  009A0B  00                 	db	0
  1948  009A0C  00                 	db	0
  1949  009A0D  00                 	db	0
  1950  009A0E  00                 	db	0
  1951  009A0F  00                 	db	0
  1952  009A10  00                 	db	0
  1953  009A11  00                 	db	0
  1954  009A12  00                 	db	0
  1955  009A13  00                 	db	0
  1956  009A14  00                 	db	0
  1957  009A15  00                 	db	0
  1958  009A16                     __end_of_motor_postscaler_lookup:
  1959                           	opt stack 0
  1960  009A16                     _motor_period_lookup:
  1961                           	opt stack 0
  1962  009A16  EC                 	db	236
  1963  009A17  F2                 	db	242
  1964  009A18  F6                 	db	246
  1965  009A19  F4                 	db	244
  1966  009A1A  D2                 	db	210
  1967  009A1B  E8                 	db	232
  1968  009A1C  D2                 	db	210
  1969  009A1D  C0                 	db	192
  1970  009A1E  EC                 	db	236
  1971  009A1F  DC                 	db	220
  1972  009A20  CF                 	db	207
  1973  009A21  C3                 	db	195
  1974  009A22  B9                 	db	185
  1975  009A23  B0                 	db	176
  1976  009A24  FC                 	db	252
  1977  009A25  F2                 	db	242
  1978  009A26  E8                 	db	232
  1979  009A27  DF                 	db	223
  1980  009A28  D7                 	db	215
  1981  009A29  D0                 	db	208
  1982  009A2A  CA                 	db	202
  1983  009A2B  C3                 	db	195
  1984  009A2C  BE                 	db	190
  1985  009A2D  B8                 	db	184
  1986  009A2E  B3                 	db	179
  1987  009A2F  AF                 	db	175
  1988  009A30  AA                 	db	170
  1989  009A31  A6                 	db	166
  1990  009A32  A2                 	db	162
  1991  009A33  9F                 	db	159
  1992  009A34  9B                 	db	155
  1993  009A35  98                 	db	152
  1994  009A36  95                 	db	149
  1995  009A37  92                 	db	146
  1996  009A38  8F                 	db	143
  1997  009A39  8C                 	db	140
  1998  009A3A  8A                 	db	138
  1999  009A3B  87                 	db	135
  2000  009A3C  85                 	db	133
  2001  009A3D  83                 	db	131
  2002  009A3E  81                 	db	129
  2003  009A3F  7F                 	db	127
  2004  009A40  7D                 	db	125
  2005  009A41  7B                 	db	123
  2006  009A42  79                 	db	121
  2007  009A43  77                 	db	119
  2008  009A44  75                 	db	117
  2009  009A45  74                 	db	116
  2010  009A46  72                 	db	114
  2011  009A47  71                 	db	113
  2012  009A48  6F                 	db	111
  2013  009A49  6E                 	db	110
  2014  009A4A  6C                 	db	108
  2015  009A4B  6B                 	db	107
  2016  009A4C  6A                 	db	106
  2017  009A4D  68                 	db	104
  2018  009A4E  67                 	db	103
  2019  009A4F  66                 	db	102
  2020  009A50  65                 	db	101
  2021  009A51  64                 	db	100
  2022  009A52  62                 	db	98
  2023  009A53  61                 	db	97
  2024  009A54  60                 	db	96
  2025  009A55  5F                 	db	95
  2026  009A56  5E                 	db	94
  2027  009A57  5D                 	db	93
  2028  009A58  5C                 	db	92
  2029  009A59  5B                 	db	91
  2030  009A5A  59                 	db	89
  2031  009A5B  57                 	db	87
  2032  009A5C  56                 	db	86
  2033  009A5D  54                 	db	84
  2034  009A5E  53                 	db	83
  2035  009A5F  51                 	db	81
  2036  009A60  50                 	db	80
  2037  009A61  4F                 	db	79
  2038  009A62  4E                 	db	78
  2039  009A63  4C                 	db	76
  2040  009A64  4B                 	db	75
  2041  009A65  4A                 	db	74
  2042  009A66  49                 	db	73
  2043  009A67  48                 	db	72
  2044  009A68  47                 	db	71
  2045  009A69  46                 	db	70
  2046  009A6A  45                 	db	69
  2047  009A6B  44                 	db	68
  2048  009A6C  43                 	db	67
  2049  009A6D  42                 	db	66
  2050  009A6E  41                 	db	65
  2051  009A6F  40                 	db	64
  2052  009A70  3F                 	db	63
  2053  009A71  FE                 	db	254
  2054  009A72  FB                 	db	251
  2055  009A73  F8                 	db	248
  2056  009A74  F6                 	db	246
  2057  009A75  F3                 	db	243
  2058  009A76  F0                 	db	240
  2059  009A77  EE                 	db	238
  2060  009A78  EC                 	db	236
  2061  009A79  E9                 	db	233
  2062  009A7A  E7                 	db	231
  2063  009A7B  E5                 	db	229
  2064  009A7C  E3                 	db	227
  2065  009A7D  E0                 	db	224
  2066  009A7E  DE                 	db	222
  2067  009A7F  DC                 	db	220
  2068  009A80  DA                 	db	218
  2069  009A81  D8                 	db	216
  2070  009A82  D7                 	db	215
  2071  009A83  D5                 	db	213
  2072  009A84  D3                 	db	211
  2073  009A85  D1                 	db	209
  2074  009A86  CF                 	db	207
  2075  009A87  CE                 	db	206
  2076  009A88  CC                 	db	204
  2077  009A89  CA                 	db	202
  2078  009A8A  C9                 	db	201
  2079  009A8B  C7                 	db	199
  2080  009A8C  C6                 	db	198
  2081  009A8D  C4                 	db	196
  2082  009A8E  C3                 	db	195
  2083  009A8F  C1                 	db	193
  2084  009A90  C0                 	db	192
  2085  009A91  BE                 	db	190
  2086  009A92  BD                 	db	189
  2087  009A93  BC                 	db	188
  2088  009A94  BA                 	db	186
  2089  009A95  B8                 	db	184
  2090  009A96  B6                 	db	182
  2091  009A97  B4                 	db	180
  2092  009A98  B3                 	db	179
  2093  009A99  B1                 	db	177
  2094  009A9A  AF                 	db	175
  2095  009A9B  AE                 	db	174
  2096  009A9C  AC                 	db	172
  2097  009A9D  AA                 	db	170
  2098  009A9E  A9                 	db	169
  2099  009A9F  A7                 	db	167
  2100  009AA0  A6                 	db	166
  2101  009AA1  A4                 	db	164
  2102  009AA2  A3                 	db	163
  2103  009AA3  A1                 	db	161
  2104  009AA4  A0                 	db	160
  2105  009AA5  9F                 	db	159
  2106  009AA6  9D                 	db	157
  2107  009AA7  9C                 	db	156
  2108  009AA8  9B                 	db	155
  2109  009AA9  9A                 	db	154
  2110  009AAA  98                 	db	152
  2111  009AAB  97                 	db	151
  2112  009AAC  96                 	db	150
  2113  009AAD  95                 	db	149
  2114  009AAE  94                 	db	148
  2115  009AAF  93                 	db	147
  2116  009AB0  92                 	db	146
  2117  009AB1  90                 	db	144
  2118  009AB2  8F                 	db	143
  2119  009AB3  8E                 	db	142
  2120  009AB4  8D                 	db	141
  2121  009AB5  8C                 	db	140
  2122  009AB6  8B                 	db	139
  2123  009AB7  8A                 	db	138
  2124  009AB8  89                 	db	137
  2125  009AB9  88                 	db	136
  2126  009ABA  87                 	db	135
  2127  009ABB  86                 	db	134
  2128  009ABC  85                 	db	133
  2129  009ABD  84                 	db	132
  2130  009ABE  83                 	db	131
  2131  009ABF  82                 	db	130
  2132  009AC0  81                 	db	129
  2133  009AC1  80                 	db	128
  2134  009AC2  7F                 	db	127
  2135  009AC3  7E                 	db	126
  2136  009AC4  7D                 	db	125
  2137  009AC5  7C                 	db	124
  2138  009AC6  7B                 	db	123
  2139  009AC7  7A                 	db	122
  2140  009AC8  79                 	db	121
  2141  009AC9  78                 	db	120
  2142  009ACA  77                 	db	119
  2143  009ACB  76                 	db	118
  2144  009ACC  75                 	db	117
  2145  009ACD  74                 	db	116
  2146  009ACE  73                 	db	115
  2147  009ACF  72                 	db	114
  2148  009AD0  71                 	db	113
  2149  009AD1  70                 	db	112
  2150  009AD2  6F                 	db	111
  2151  009AD3  6E                 	db	110
  2152  009AD4  6D                 	db	109
  2153  009AD5  6C                 	db	108
  2154  009AD6  6B                 	db	107
  2155  009AD7  6A                 	db	106
  2156  009AD8  69                 	db	105
  2157  009AD9  68                 	db	104
  2158  009ADA  67                 	db	103
  2159  009ADB  66                 	db	102
  2160  009ADC  65                 	db	101
  2161  009ADD  64                 	db	100
  2162  009ADE  63                 	db	99
  2163  009ADF  62                 	db	98
  2164  009AE0  61                 	db	97
  2165  009AE1  60                 	db	96
  2166  009AE2  5F                 	db	95
  2167  009AE3  5E                 	db	94
  2168  009AE4  5D                 	db	93
  2169  009AE5  5C                 	db	92
  2170  009AE6  5B                 	db	91
  2171  009AE7  5A                 	db	90
  2172  009AE8  59                 	db	89
  2173  009AE9  58                 	db	88
  2174  009AEA  57                 	db	87
  2175  009AEB  56                 	db	86
  2176  009AEC  55                 	db	85
  2177  009AED  54                 	db	84
  2178  009AEE  53                 	db	83
  2179  009AEF  52                 	db	82
  2180  009AF0  51                 	db	81
  2181  009AF1  50                 	db	80
  2182  009AF2  4F                 	db	79
  2183  009AF3  4E                 	db	78
  2184  009AF4  4D                 	db	77
  2185  009AF5  4C                 	db	76
  2186  009AF6  4B                 	db	75
  2187  009AF7  4A                 	db	74
  2188  009AF8  49                 	db	73
  2189  009AF9  48                 	db	72
  2190  009AFA  47                 	db	71
  2191  009AFB  46                 	db	70
  2192  009AFC  45                 	db	69
  2193  009AFD  44                 	db	68
  2194  009AFE  43                 	db	67
  2195  009AFF  42                 	db	66
  2196  009B00  41                 	db	65
  2197  009B01  40                 	db	64
  2198  009B02  3F                 	db	63
  2199  009B03  FF                 	db	255
  2200  009B04  FE                 	db	254
  2201  009B05  FD                 	db	253
  2202  009B06  FC                 	db	252
  2203  009B07  FB                 	db	251
  2204  009B08  FA                 	db	250
  2205  009B09  F9                 	db	249
  2206  009B0A  F8                 	db	248
  2207  009B0B  F7                 	db	247
  2208  009B0C  F6                 	db	246
  2209  009B0D  F5                 	db	245
  2210  009B0E  F4                 	db	244
  2211  009B0F  F3                 	db	243
  2212  009B10  F2                 	db	242
  2213  009B11  F1                 	db	241
  2214  009B12  F0                 	db	240
  2215  009B13  EF                 	db	239
  2216  009B14  EE                 	db	238
  2217  009B15  ED                 	db	237
  2218  009B16  EC                 	db	236
  2219  009B17  EB                 	db	235
  2220  009B18  EA                 	db	234
  2221  009B19  E9                 	db	233
  2222  009B1A  E8                 	db	232
  2223  009B1B  E7                 	db	231
  2224  009B1C  E6                 	db	230
  2225  009B1D  E5                 	db	229
  2226  009B1E  E4                 	db	228
  2227  009B1F  E3                 	db	227
  2228  009B20  E2                 	db	226
  2229  009B21  E1                 	db	225
  2230  009B22  E0                 	db	224
  2231  009B23  DF                 	db	223
  2232  009B24  DE                 	db	222
  2233  009B25  DD                 	db	221
  2234  009B26  DC                 	db	220
  2235  009B27  DB                 	db	219
  2236  009B28  DA                 	db	218
  2237  009B29  D9                 	db	217
  2238  009B2A  D8                 	db	216
  2239  009B2B  D7                 	db	215
  2240  009B2C  D6                 	db	214
  2241  009B2D  D5                 	db	213
  2242  009B2E  D4                 	db	212
  2243  009B2F  D3                 	db	211
  2244  009B30  D2                 	db	210
  2245  009B31  D1                 	db	209
  2246  009B32  D0                 	db	208
  2247  009B33  CF                 	db	207
  2248  009B34  CE                 	db	206
  2249  009B35  CD                 	db	205
  2250  009B36  CC                 	db	204
  2251  009B37  CB                 	db	203
  2252  009B38  CA                 	db	202
  2253  009B39  C9                 	db	201
  2254  009B3A  C8                 	db	200
  2255  009B3B  C7                 	db	199
  2256  009B3C  C6                 	db	198
  2257  009B3D  C5                 	db	197
  2258  009B3E  C4                 	db	196
  2259  009B3F  C3                 	db	195
  2260  009B40  C2                 	db	194
  2261  009B41  C1                 	db	193
  2262  009B42  C0                 	db	192
  2263  009B43  BF                 	db	191
  2264  009B44  BE                 	db	190
  2265  009B45  BD                 	db	189
  2266  009B46  BC                 	db	188
  2267  009B47  BB                 	db	187
  2268  009B48  BA                 	db	186
  2269  009B49  B9                 	db	185
  2270  009B4A  B8                 	db	184
  2271  009B4B  B7                 	db	183
  2272  009B4C  B6                 	db	182
  2273  009B4D  B5                 	db	181
  2274  009B4E  B4                 	db	180
  2275  009B4F  B3                 	db	179
  2276  009B50  B2                 	db	178
  2277  009B51  B1                 	db	177
  2278  009B52  B0                 	db	176
  2279  009B53  AF                 	db	175
  2280  009B54  AE                 	db	174
  2281  009B55  AD                 	db	173
  2282  009B56  AC                 	db	172
  2283  009B57  AB                 	db	171
  2284  009B58  AA                 	db	170
  2285  009B59  A9                 	db	169
  2286  009B5A  A8                 	db	168
  2287  009B5B  A7                 	db	167
  2288  009B5C  A6                 	db	166
  2289  009B5D  A5                 	db	165
  2290  009B5E  A4                 	db	164
  2291  009B5F  A3                 	db	163
  2292  009B60  A2                 	db	162
  2293  009B61  A1                 	db	161
  2294  009B62  A0                 	db	160
  2295  009B63  9F                 	db	159
  2296  009B64  9E                 	db	158
  2297  009B65  9D                 	db	157
  2298  009B66  9C                 	db	156
  2299  009B67  9B                 	db	155
  2300  009B68  9A                 	db	154
  2301  009B69  99                 	db	153
  2302  009B6A  98                 	db	152
  2303  009B6B  97                 	db	151
  2304  009B6C  96                 	db	150
  2305  009B6D  95                 	db	149
  2306  009B6E  94                 	db	148
  2307  009B6F  93                 	db	147
  2308  009B70  92                 	db	146
  2309  009B71  91                 	db	145
  2310  009B72  90                 	db	144
  2311  009B73  8F                 	db	143
  2312  009B74  8E                 	db	142
  2313  009B75  8D                 	db	141
  2314  009B76  8C                 	db	140
  2315  009B77  8B                 	db	139
  2316  009B78  8A                 	db	138
  2317  009B79  89                 	db	137
  2318  009B7A  88                 	db	136
  2319  009B7B  87                 	db	135
  2320  009B7C  86                 	db	134
  2321  009B7D  85                 	db	133
  2322  009B7E  84                 	db	132
  2323  009B7F  83                 	db	131
  2324  009B80  82                 	db	130
  2325  009B81  81                 	db	129
  2326  009B82  80                 	db	128
  2327  009B83  7F                 	db	127
  2328  009B84  7E                 	db	126
  2329  009B85  7D                 	db	125
  2330  009B86  7C                 	db	124
  2331  009B87  7B                 	db	123
  2332  009B88  7A                 	db	122
  2333  009B89  79                 	db	121
  2334  009B8A  78                 	db	120
  2335  009B8B  77                 	db	119
  2336  009B8C  76                 	db	118
  2337  009B8D  75                 	db	117
  2338  009B8E  74                 	db	116
  2339  009B8F  73                 	db	115
  2340  009B90  72                 	db	114
  2341  009B91  71                 	db	113
  2342  009B92  70                 	db	112
  2343  009B93  6F                 	db	111
  2344  009B94  6E                 	db	110
  2345  009B95  6D                 	db	109
  2346  009B96  6C                 	db	108
  2347  009B97  6B                 	db	107
  2348  009B98  6A                 	db	106
  2349  009B99  69                 	db	105
  2350  009B9A  68                 	db	104
  2351  009B9B  67                 	db	103
  2352  009B9C  66                 	db	102
  2353  009B9D  65                 	db	101
  2354  009B9E  64                 	db	100
  2355  009B9F  63                 	db	99
  2356  009BA0  62                 	db	98
  2357  009BA1  61                 	db	97
  2358  009BA2  60                 	db	96
  2359  009BA3  5F                 	db	95
  2360  009BA4  5E                 	db	94
  2361  009BA5  5D                 	db	93
  2362  009BA6  5C                 	db	92
  2363  009BA7  5B                 	db	91
  2364  009BA8  5A                 	db	90
  2365  009BA9  59                 	db	89
  2366  009BAA  58                 	db	88
  2367  009BAB  57                 	db	87
  2368  009BAC  56                 	db	86
  2369  009BAD  55                 	db	85
  2370  009BAE  54                 	db	84
  2371  009BAF  53                 	db	83
  2372  009BB0  52                 	db	82
  2373  009BB1  51                 	db	81
  2374  009BB2  50                 	db	80
  2375  009BB3  4F                 	db	79
  2376  009BB4  4E                 	db	78
  2377  009BB5  4D                 	db	77
  2378  009BB6  4C                 	db	76
  2379  009BB7  4B                 	db	75
  2380  009BB8  4A                 	db	74
  2381  009BB9  49                 	db	73
  2382  009BBA  48                 	db	72
  2383  009BBB  47                 	db	71
  2384  009BBC  46                 	db	70
  2385  009BBD  45                 	db	69
  2386  009BBE  44                 	db	68
  2387  009BBF  43                 	db	67
  2388  009BC0  42                 	db	66
  2389  009BC1  41                 	db	65
  2390  009BC2  40                 	db	64
  2391  009BC3  3F                 	db	63
  2392  009BC4  FF                 	db	255
  2393  009BC5  FE                 	db	254
  2394  009BC6  FD                 	db	253
  2395  009BC7  FC                 	db	252
  2396  009BC8  FB                 	db	251
  2397  009BC9  FA                 	db	250
  2398  009BCA  F9                 	db	249
  2399  009BCB  F8                 	db	248
  2400  009BCC  F7                 	db	247
  2401  009BCD  F6                 	db	246
  2402  009BCE  F5                 	db	245
  2403  009BCF  F4                 	db	244
  2404  009BD0  F3                 	db	243
  2405  009BD1  F2                 	db	242
  2406  009BD2  F1                 	db	241
  2407  009BD3  F0                 	db	240
  2408  009BD4  EF                 	db	239
  2409  009BD5  EE                 	db	238
  2410  009BD6  ED                 	db	237
  2411  009BD7  EC                 	db	236
  2412  009BD8  EB                 	db	235
  2413  009BD9  EA                 	db	234
  2414  009BDA  E9                 	db	233
  2415  009BDB  E8                 	db	232
  2416  009BDC  E7                 	db	231
  2417  009BDD  E6                 	db	230
  2418  009BDE  E5                 	db	229
  2419  009BDF  E4                 	db	228
  2420  009BE0  E3                 	db	227
  2421  009BE1  E2                 	db	226
  2422  009BE2  E1                 	db	225
  2423  009BE3  E0                 	db	224
  2424  009BE4  DF                 	db	223
  2425  009BE5  DE                 	db	222
  2426  009BE6  DD                 	db	221
  2427  009BE7  DC                 	db	220
  2428  009BE8  DB                 	db	219
  2429  009BE9  DA                 	db	218
  2430  009BEA  D9                 	db	217
  2431  009BEB  D8                 	db	216
  2432  009BEC  D7                 	db	215
  2433  009BED  D6                 	db	214
  2434  009BEE  D5                 	db	213
  2435  009BEF  D4                 	db	212
  2436  009BF0  D3                 	db	211
  2437  009BF1  D2                 	db	210
  2438  009BF2  D1                 	db	209
  2439  009BF3  D0                 	db	208
  2440  009BF4  CF                 	db	207
  2441  009BF5  CE                 	db	206
  2442  009BF6  CD                 	db	205
  2443  009BF7  CC                 	db	204
  2444  009BF8  CB                 	db	203
  2445  009BF9  CA                 	db	202
  2446  009BFA  C9                 	db	201
  2447  009BFB  C8                 	db	200
  2448  009BFC  C7                 	db	199
  2449  009BFD                     __end_of_motor_period_lookup:
  2450                           	opt stack 0
  2451  009BFD                     _motor_prescaler_lookup:
  2452                           	opt stack 0
  2453  009BFD  02                 	db	2
  2454  009BFE  02                 	db	2
  2455  009BFF  02                 	db	2
  2456  009C00  02                 	db	2
  2457  009C01  02                 	db	2
  2458  009C02  02                 	db	2
  2459  009C03  02                 	db	2
  2460  009C04  02                 	db	2
  2461  009C05  02                 	db	2
  2462  009C06  02                 	db	2
  2463  009C07  02                 	db	2
  2464  009C08  02                 	db	2
  2465  009C09  02                 	db	2
  2466  009C0A  02                 	db	2
  2467  009C0B  02                 	db	2
  2468  009C0C  02                 	db	2
  2469  009C0D  02                 	db	2
  2470  009C0E  02                 	db	2
  2471  009C0F  02                 	db	2
  2472  009C10  02                 	db	2
  2473  009C11  02                 	db	2
  2474  009C12  02                 	db	2
  2475  009C13  02                 	db	2
  2476  009C14  02                 	db	2
  2477  009C15  02                 	db	2
  2478  009C16  02                 	db	2
  2479  009C17  02                 	db	2
  2480  009C18  02                 	db	2
  2481  009C19  02                 	db	2
  2482  009C1A  02                 	db	2
  2483  009C1B  02                 	db	2
  2484  009C1C  02                 	db	2
  2485  009C1D  02                 	db	2
  2486  009C1E  02                 	db	2
  2487  009C1F  02                 	db	2
  2488  009C20  02                 	db	2
  2489  009C21  02                 	db	2
  2490  009C22  02                 	db	2
  2491  009C23  02                 	db	2
  2492  009C24  02                 	db	2
  2493  009C25  02                 	db	2
  2494  009C26  02                 	db	2
  2495  009C27  02                 	db	2
  2496  009C28  02                 	db	2
  2497  009C29  02                 	db	2
  2498  009C2A  02                 	db	2
  2499  009C2B  02                 	db	2
  2500  009C2C  02                 	db	2
  2501  009C2D  02                 	db	2
  2502  009C2E  02                 	db	2
  2503  009C2F  02                 	db	2
  2504  009C30  02                 	db	2
  2505  009C31  02                 	db	2
  2506  009C32  02                 	db	2
  2507  009C33  02                 	db	2
  2508  009C34  02                 	db	2
  2509  009C35  02                 	db	2
  2510  009C36  02                 	db	2
  2511  009C37  02                 	db	2
  2512  009C38  02                 	db	2
  2513  009C39  02                 	db	2
  2514  009C3A  02                 	db	2
  2515  009C3B  02                 	db	2
  2516  009C3C  02                 	db	2
  2517  009C3D  02                 	db	2
  2518  009C3E  02                 	db	2
  2519  009C3F  02                 	db	2
  2520  009C40  02                 	db	2
  2521  009C41  02                 	db	2
  2522  009C42  02                 	db	2
  2523  009C43  02                 	db	2
  2524  009C44  02                 	db	2
  2525  009C45  02                 	db	2
  2526  009C46  02                 	db	2
  2527  009C47  02                 	db	2
  2528  009C48  02                 	db	2
  2529  009C49  02                 	db	2
  2530  009C4A  02                 	db	2
  2531  009C4B  02                 	db	2
  2532  009C4C  02                 	db	2
  2533  009C4D  02                 	db	2
  2534  009C4E  02                 	db	2
  2535  009C4F  02                 	db	2
  2536  009C50  02                 	db	2
  2537  009C51  02                 	db	2
  2538  009C52  02                 	db	2
  2539  009C53  02                 	db	2
  2540  009C54  02                 	db	2
  2541  009C55  02                 	db	2
  2542  009C56  02                 	db	2
  2543  009C57  02                 	db	2
  2544  009C58  02                 	db	2
  2545  009C59  02                 	db	2
  2546  009C5A  02                 	db	2
  2547  009C5B  02                 	db	2
  2548  009C5C  02                 	db	2
  2549  009C5D  02                 	db	2
  2550  009C5E  02                 	db	2
  2551  009C5F  02                 	db	2
  2552  009C60  02                 	db	2
  2553  009C61  02                 	db	2
  2554  009C62  02                 	db	2
  2555  009C63  02                 	db	2
  2556  009C64  02                 	db	2
  2557  009C65  02                 	db	2
  2558  009C66  02                 	db	2
  2559  009C67  02                 	db	2
  2560  009C68  02                 	db	2
  2561  009C69  02                 	db	2
  2562  009C6A  02                 	db	2
  2563  009C6B  02                 	db	2
  2564  009C6C  02                 	db	2
  2565  009C6D  02                 	db	2
  2566  009C6E  02                 	db	2
  2567  009C6F  02                 	db	2
  2568  009C70  02                 	db	2
  2569  009C71  02                 	db	2
  2570  009C72  02                 	db	2
  2571  009C73  02                 	db	2
  2572  009C74  02                 	db	2
  2573  009C75  02                 	db	2
  2574  009C76  02                 	db	2
  2575  009C77  02                 	db	2
  2576  009C78  02                 	db	2
  2577  009C79  02                 	db	2
  2578  009C7A  02                 	db	2
  2579  009C7B  02                 	db	2
  2580  009C7C  02                 	db	2
  2581  009C7D  02                 	db	2
  2582  009C7E  02                 	db	2
  2583  009C7F  02                 	db	2
  2584  009C80  02                 	db	2
  2585  009C81  02                 	db	2
  2586  009C82  02                 	db	2
  2587  009C83  02                 	db	2
  2588  009C84  02                 	db	2
  2589  009C85  02                 	db	2
  2590  009C86  02                 	db	2
  2591  009C87  02                 	db	2
  2592  009C88  02                 	db	2
  2593  009C89  02                 	db	2
  2594  009C8A  02                 	db	2
  2595  009C8B  02                 	db	2
  2596  009C8C  02                 	db	2
  2597  009C8D  02                 	db	2
  2598  009C8E  02                 	db	2
  2599  009C8F  02                 	db	2
  2600  009C90  02                 	db	2
  2601  009C91  02                 	db	2
  2602  009C92  02                 	db	2
  2603  009C93  02                 	db	2
  2604  009C94  02                 	db	2
  2605  009C95  02                 	db	2
  2606  009C96  02                 	db	2
  2607  009C97  02                 	db	2
  2608  009C98  02                 	db	2
  2609  009C99  02                 	db	2
  2610  009C9A  02                 	db	2
  2611  009C9B  02                 	db	2
  2612  009C9C  02                 	db	2
  2613  009C9D  02                 	db	2
  2614  009C9E  02                 	db	2
  2615  009C9F  02                 	db	2
  2616  009CA0  02                 	db	2
  2617  009CA1  02                 	db	2
  2618  009CA2  02                 	db	2
  2619  009CA3  02                 	db	2
  2620  009CA4  02                 	db	2
  2621  009CA5  02                 	db	2
  2622  009CA6  02                 	db	2
  2623  009CA7  02                 	db	2
  2624  009CA8  02                 	db	2
  2625  009CA9  02                 	db	2
  2626  009CAA  02                 	db	2
  2627  009CAB  02                 	db	2
  2628  009CAC  02                 	db	2
  2629  009CAD  02                 	db	2
  2630  009CAE  02                 	db	2
  2631  009CAF  02                 	db	2
  2632  009CB0  02                 	db	2
  2633  009CB1  02                 	db	2
  2634  009CB2  02                 	db	2
  2635  009CB3  02                 	db	2
  2636  009CB4  02                 	db	2
  2637  009CB5  02                 	db	2
  2638  009CB6  02                 	db	2
  2639  009CB7  02                 	db	2
  2640  009CB8  02                 	db	2
  2641  009CB9  02                 	db	2
  2642  009CBA  02                 	db	2
  2643  009CBB  02                 	db	2
  2644  009CBC  02                 	db	2
  2645  009CBD  02                 	db	2
  2646  009CBE  02                 	db	2
  2647  009CBF  02                 	db	2
  2648  009CC0  02                 	db	2
  2649  009CC1  02                 	db	2
  2650  009CC2  02                 	db	2
  2651  009CC3  02                 	db	2
  2652  009CC4  02                 	db	2
  2653  009CC5  02                 	db	2
  2654  009CC6  02                 	db	2
  2655  009CC7  02                 	db	2
  2656  009CC8  02                 	db	2
  2657  009CC9  02                 	db	2
  2658  009CCA  02                 	db	2
  2659  009CCB  02                 	db	2
  2660  009CCC  02                 	db	2
  2661  009CCD  02                 	db	2
  2662  009CCE  02                 	db	2
  2663  009CCF  02                 	db	2
  2664  009CD0  02                 	db	2
  2665  009CD1  02                 	db	2
  2666  009CD2  02                 	db	2
  2667  009CD3  02                 	db	2
  2668  009CD4  02                 	db	2
  2669  009CD5  02                 	db	2
  2670  009CD6  02                 	db	2
  2671  009CD7  02                 	db	2
  2672  009CD8  02                 	db	2
  2673  009CD9  02                 	db	2
  2674  009CDA  02                 	db	2
  2675  009CDB  02                 	db	2
  2676  009CDC  02                 	db	2
  2677  009CDD  02                 	db	2
  2678  009CDE  02                 	db	2
  2679  009CDF  02                 	db	2
  2680  009CE0  02                 	db	2
  2681  009CE1  02                 	db	2
  2682  009CE2  02                 	db	2
  2683  009CE3  02                 	db	2
  2684  009CE4  02                 	db	2
  2685  009CE5  02                 	db	2
  2686  009CE6  02                 	db	2
  2687  009CE7  02                 	db	2
  2688  009CE8  02                 	db	2
  2689  009CE9  02                 	db	2
  2690  009CEA  01                 	db	1
  2691  009CEB  01                 	db	1
  2692  009CEC  01                 	db	1
  2693  009CED  01                 	db	1
  2694  009CEE  01                 	db	1
  2695  009CEF  01                 	db	1
  2696  009CF0  01                 	db	1
  2697  009CF1  01                 	db	1
  2698  009CF2  01                 	db	1
  2699  009CF3  01                 	db	1
  2700  009CF4  01                 	db	1
  2701  009CF5  01                 	db	1
  2702  009CF6  01                 	db	1
  2703  009CF7  01                 	db	1
  2704  009CF8  01                 	db	1
  2705  009CF9  01                 	db	1
  2706  009CFA  01                 	db	1
  2707  009CFB  01                 	db	1
  2708  009CFC  01                 	db	1
  2709  009CFD  01                 	db	1
  2710  009CFE  01                 	db	1
  2711  009CFF  01                 	db	1
  2712  009D00  01                 	db	1
  2713  009D01  01                 	db	1
  2714  009D02  01                 	db	1
  2715  009D03  01                 	db	1
  2716  009D04  01                 	db	1
  2717  009D05  01                 	db	1
  2718  009D06  01                 	db	1
  2719  009D07  01                 	db	1
  2720  009D08  01                 	db	1
  2721  009D09  01                 	db	1
  2722  009D0A  01                 	db	1
  2723  009D0B  01                 	db	1
  2724  009D0C  01                 	db	1
  2725  009D0D  01                 	db	1
  2726  009D0E  01                 	db	1
  2727  009D0F  01                 	db	1
  2728  009D10  01                 	db	1
  2729  009D11  01                 	db	1
  2730  009D12  01                 	db	1
  2731  009D13  01                 	db	1
  2732  009D14  01                 	db	1
  2733  009D15  01                 	db	1
  2734  009D16  01                 	db	1
  2735  009D17  01                 	db	1
  2736  009D18  01                 	db	1
  2737  009D19  01                 	db	1
  2738  009D1A  01                 	db	1
  2739  009D1B  01                 	db	1
  2740  009D1C  01                 	db	1
  2741  009D1D  01                 	db	1
  2742  009D1E  01                 	db	1
  2743  009D1F  01                 	db	1
  2744  009D20  01                 	db	1
  2745  009D21  01                 	db	1
  2746  009D22  01                 	db	1
  2747  009D23  01                 	db	1
  2748  009D24  01                 	db	1
  2749  009D25  01                 	db	1
  2750  009D26  01                 	db	1
  2751  009D27  01                 	db	1
  2752  009D28  01                 	db	1
  2753  009D29  01                 	db	1
  2754  009D2A  01                 	db	1
  2755  009D2B  01                 	db	1
  2756  009D2C  01                 	db	1
  2757  009D2D  01                 	db	1
  2758  009D2E  01                 	db	1
  2759  009D2F  01                 	db	1
  2760  009D30  01                 	db	1
  2761  009D31  01                 	db	1
  2762  009D32  01                 	db	1
  2763  009D33  01                 	db	1
  2764  009D34  01                 	db	1
  2765  009D35  01                 	db	1
  2766  009D36  01                 	db	1
  2767  009D37  01                 	db	1
  2768  009D38  01                 	db	1
  2769  009D39  01                 	db	1
  2770  009D3A  01                 	db	1
  2771  009D3B  01                 	db	1
  2772  009D3C  01                 	db	1
  2773  009D3D  01                 	db	1
  2774  009D3E  01                 	db	1
  2775  009D3F  01                 	db	1
  2776  009D40  01                 	db	1
  2777  009D41  01                 	db	1
  2778  009D42  01                 	db	1
  2779  009D43  01                 	db	1
  2780  009D44  01                 	db	1
  2781  009D45  01                 	db	1
  2782  009D46  01                 	db	1
  2783  009D47  01                 	db	1
  2784  009D48  01                 	db	1
  2785  009D49  01                 	db	1
  2786  009D4A  01                 	db	1
  2787  009D4B  01                 	db	1
  2788  009D4C  01                 	db	1
  2789  009D4D  01                 	db	1
  2790  009D4E  01                 	db	1
  2791  009D4F  01                 	db	1
  2792  009D50  01                 	db	1
  2793  009D51  01                 	db	1
  2794  009D52  01                 	db	1
  2795  009D53  01                 	db	1
  2796  009D54  01                 	db	1
  2797  009D55  01                 	db	1
  2798  009D56  01                 	db	1
  2799  009D57  01                 	db	1
  2800  009D58  01                 	db	1
  2801  009D59  01                 	db	1
  2802  009D5A  01                 	db	1
  2803  009D5B  01                 	db	1
  2804  009D5C  01                 	db	1
  2805  009D5D  01                 	db	1
  2806  009D5E  01                 	db	1
  2807  009D5F  01                 	db	1
  2808  009D60  01                 	db	1
  2809  009D61  01                 	db	1
  2810  009D62  01                 	db	1
  2811  009D63  01                 	db	1
  2812  009D64  01                 	db	1
  2813  009D65  01                 	db	1
  2814  009D66  01                 	db	1
  2815  009D67  01                 	db	1
  2816  009D68  01                 	db	1
  2817  009D69  01                 	db	1
  2818  009D6A  01                 	db	1
  2819  009D6B  01                 	db	1
  2820  009D6C  01                 	db	1
  2821  009D6D  01                 	db	1
  2822  009D6E  01                 	db	1
  2823  009D6F  01                 	db	1
  2824  009D70  01                 	db	1
  2825  009D71  01                 	db	1
  2826  009D72  01                 	db	1
  2827  009D73  01                 	db	1
  2828  009D74  01                 	db	1
  2829  009D75  01                 	db	1
  2830  009D76  01                 	db	1
  2831  009D77  01                 	db	1
  2832  009D78  01                 	db	1
  2833  009D79  01                 	db	1
  2834  009D7A  01                 	db	1
  2835  009D7B  01                 	db	1
  2836  009D7C  01                 	db	1
  2837  009D7D  01                 	db	1
  2838  009D7E  01                 	db	1
  2839  009D7F  01                 	db	1
  2840  009D80  01                 	db	1
  2841  009D81  01                 	db	1
  2842  009D82  01                 	db	1
  2843  009D83  01                 	db	1
  2844  009D84  01                 	db	1
  2845  009D85  01                 	db	1
  2846  009D86  01                 	db	1
  2847  009D87  01                 	db	1
  2848  009D88  01                 	db	1
  2849  009D89  01                 	db	1
  2850  009D8A  01                 	db	1
  2851  009D8B  01                 	db	1
  2852  009D8C  01                 	db	1
  2853  009D8D  01                 	db	1
  2854  009D8E  01                 	db	1
  2855  009D8F  01                 	db	1
  2856  009D90  01                 	db	1
  2857  009D91  01                 	db	1
  2858  009D92  01                 	db	1
  2859  009D93  01                 	db	1
  2860  009D94  01                 	db	1
  2861  009D95  01                 	db	1
  2862  009D96  01                 	db	1
  2863  009D97  01                 	db	1
  2864  009D98  01                 	db	1
  2865  009D99  01                 	db	1
  2866  009D9A  01                 	db	1
  2867  009D9B  01                 	db	1
  2868  009D9C  01                 	db	1
  2869  009D9D  01                 	db	1
  2870  009D9E  01                 	db	1
  2871  009D9F  01                 	db	1
  2872  009DA0  01                 	db	1
  2873  009DA1  01                 	db	1
  2874  009DA2  01                 	db	1
  2875  009DA3  01                 	db	1
  2876  009DA4  01                 	db	1
  2877  009DA5  01                 	db	1
  2878  009DA6  01                 	db	1
  2879  009DA7  01                 	db	1
  2880  009DA8  01                 	db	1
  2881  009DA9  01                 	db	1
  2882  009DAA  01                 	db	1
  2883  009DAB  00                 	db	0
  2884  009DAC  00                 	db	0
  2885  009DAD  00                 	db	0
  2886  009DAE  00                 	db	0
  2887  009DAF  00                 	db	0
  2888  009DB0  00                 	db	0
  2889  009DB1  00                 	db	0
  2890  009DB2  00                 	db	0
  2891  009DB3  00                 	db	0
  2892  009DB4  00                 	db	0
  2893  009DB5  00                 	db	0
  2894  009DB6  00                 	db	0
  2895  009DB7  00                 	db	0
  2896  009DB8  00                 	db	0
  2897  009DB9  00                 	db	0
  2898  009DBA  00                 	db	0
  2899  009DBB  00                 	db	0
  2900  009DBC  00                 	db	0
  2901  009DBD  00                 	db	0
  2902  009DBE  00                 	db	0
  2903  009DBF  00                 	db	0
  2904  009DC0  00                 	db	0
  2905  009DC1  00                 	db	0
  2906  009DC2  00                 	db	0
  2907  009DC3  00                 	db	0
  2908  009DC4  00                 	db	0
  2909  009DC5  00                 	db	0
  2910  009DC6  00                 	db	0
  2911  009DC7  00                 	db	0
  2912  009DC8  00                 	db	0
  2913  009DC9  00                 	db	0
  2914  009DCA  00                 	db	0
  2915  009DCB  00                 	db	0
  2916  009DCC  00                 	db	0
  2917  009DCD  00                 	db	0
  2918  009DCE  00                 	db	0
  2919  009DCF  00                 	db	0
  2920  009DD0  00                 	db	0
  2921  009DD1  00                 	db	0
  2922  009DD2  00                 	db	0
  2923  009DD3  00                 	db	0
  2924  009DD4  00                 	db	0
  2925  009DD5  00                 	db	0
  2926  009DD6  00                 	db	0
  2927  009DD7  00                 	db	0
  2928  009DD8  00                 	db	0
  2929  009DD9  00                 	db	0
  2930  009DDA  00                 	db	0
  2931  009DDB  00                 	db	0
  2932  009DDC  00                 	db	0
  2933  009DDD  00                 	db	0
  2934  009DDE  00                 	db	0
  2935  009DDF  00                 	db	0
  2936  009DE0  00                 	db	0
  2937  009DE1  00                 	db	0
  2938  009DE2  00                 	db	0
  2939  009DE3  00                 	db	0
  2940  009DE4                     __end_of_motor_prescaler_lookup:
  2941                           	opt stack 0
  2942  009DE4                     _USB_SD_Ptr:
  2943                           	opt stack 0
  2944  009DE4  E5                 	db	low _sd000
  2945  009DE5  A2                 	db	high _sd000
  2946  009DE6  FE                 	db	low _sd001
  2947  009DE7  A0                 	db	high _sd001
  2948  009DE8  32                 	db	low _sd002
  2949  009DE9  A1                 	db	high _sd002
  2950  009DEA  A1                 	db	low _sd003
  2951  009DEB  A1                 	db	high _sd003
  2952  009DEC                     __end_of_USB_SD_Ptr:
  2953                           	opt stack 0
  2954  009DEC                     _USB_CD_Ptr:
  2955                           	opt stack 0
  2956  009DEC  BE                 	db	low _configDescriptor1
  2957  009DED  A0                 	db	high _configDescriptor1
  2958  009DEE                     __end_of_USB_CD_Ptr:
  2959                           	opt stack 0
  2960  009DEE                     _dc_manual:
  2961                           	opt stack 0
  2962  009DEE  4D                 	db	77
  2963  009DEF  61                 	db	97
  2964  009DF0  6E                 	db	110
  2965  009DF1  75                 	db	117
  2966  009DF2  61                 	db	97
  2967  009DF3  6C                 	db	108
  2968  009DF4  20                 	db	32
  2969  009DF5  4D                 	db	77
  2970  009DF6  6F                 	db	111
  2971  009DF7  64                 	db	100
  2972  009DF8  65                 	db	101
  2973  009DF9  20                 	db	32
  2974  009DFA  20                 	db	32
  2975  009DFB  20                 	db	32
  2976  009DFC  20                 	db	32
  2977  009DFD  20                 	db	32
  2978  009DFE  20                 	db	32
  2979  009DFF  20                 	db	32
  2980  009E00  20                 	db	32
  2981  009E01  20                 	db	32
  2982  009E02  43                 	db	67
  2983  009E03  75                 	db	117
  2984  009E04  72                 	db	114
  2985  009E05  72                 	db	114
  2986  009E06  65                 	db	101
  2987  009E07  6E                 	db	110
  2988  009E08  74                 	db	116
  2989  009E09  20                 	db	32
  2990  009E0A  70                 	db	112
  2991  009E0B  6F                 	db	111
  2992  009E0C  73                 	db	115
  2993  009E0D  3A                 	db	58
  2994  009E0E  20                 	db	32
  2995  009E0F  20                 	db	32
  2996  009E10  20                 	db	32
  2997  009E11  20                 	db	32
  2998  009E12  20                 	db	32
  2999  009E13  20                 	db	32
  3000  009E14  20                 	db	32
  3001  009E15  01                 	db	1
  3002  009E16  54                 	db	84
  3003  009E17  75                 	db	117
  3004  009E18  72                 	db	114
  3005  009E19  6E                 	db	110
  3006  009E1A  20                 	db	32
  3007  009E1B  43                 	db	67
  3008  009E1C  43                 	db	67
  3009  009E1D  57                 	db	87
  3010  009E1E  20                 	db	32
  3011  009E1F  00                 	db	0
  3012  009E20  20                 	db	32
  3013  009E21  53                 	db	83
  3014  009E22  70                 	db	112
  3015  009E23  65                 	db	101
  3016  009E24  65                 	db	101
  3017  009E25  64                 	db	100
  3018  009E26  20                 	db	32
  3019  009E27  20                 	db	32
  3020  009E28  20                 	db	32
  3021  009E29  20                 	db	32
  3022  009E2A  53                 	db	83
  3023  009E2B  74                 	db	116
  3024  009E2C  61                 	db	97
  3025  009E2D  72                 	db	114
  3026  009E2E  74                 	db	116
  3027  009E2F  20                 	db	32
  3028  009E30  20                 	db	32
  3029  009E31  20                 	db	32
  3030  009E32  20                 	db	32
  3031  009E33  00                 	db	0
  3032  009E34  20                 	db	32
  3033  009E35  20                 	db	32
  3034  009E36  20                 	db	32
  3035  009E37  20                 	db	32
  3036  009E38  20                 	db	32
  3037  009E39  20                 	db	32
  3038  009E3A  20                 	db	32
  3039  009E3B  20                 	db	32
  3040  009E3C  20                 	db	32
  3041  009E3D  20                 	db	32
  3042  009E3E                     __end_of_dc_manual:
  3043                           	opt stack 0
  3044  009E3E                     _dc_zero:
  3045                           	opt stack 0
  3046  009E3E  52                 	db	82
  3047  009E3F  65                 	db	101
  3048  009E40  74                 	db	116
  3049  009E41  75                 	db	117
  3050  009E42  72                 	db	114
  3051  009E43  6E                 	db	110
  3052  009E44  20                 	db	32
  3053  009E45  74                 	db	116
  3054  009E46  6F                 	db	111
  3055  009E47  20                 	db	32
  3056  009E48  5A                 	db	90
  3057  009E49  65                 	db	101
  3058  009E4A  72                 	db	114
  3059  009E4B  6F                 	db	111
  3060  009E4C  3F                 	db	63
  3061  009E4D  20                 	db	32
  3062  009E4E  20                 	db	32
  3063  009E4F  20                 	db	32
  3064  009E50  20                 	db	32
  3065  009E51  20                 	db	32
  3066  009E52  43                 	db	67
  3067  009E53  75                 	db	117
  3068  009E54  72                 	db	114
  3069  009E55  72                 	db	114
  3070  009E56  65                 	db	101
  3071  009E57  6E                 	db	110
  3072  009E58  74                 	db	116
  3073  009E59  20                 	db	32
  3074  009E5A  70                 	db	112
  3075  009E5B  6F                 	db	111
  3076  009E5C  73                 	db	115
  3077  009E5D  3A                 	db	58
  3078  009E5E  20                 	db	32
  3079  009E5F  20                 	db	32
  3080  009E60  20                 	db	32
  3081  009E61  20                 	db	32
  3082  009E62  20                 	db	32
  3083  009E63  20                 	db	32
  3084  009E64  20                 	db	32
  3085  009E65  20                 	db	32
  3086  009E66  20                 	db	32
  3087  009E67  20                 	db	32
  3088  009E68  20                 	db	32
  3089  009E69  20                 	db	32
  3090  009E6A  20                 	db	32
  3091  009E6B  20                 	db	32
  3092  009E6C  20                 	db	32
  3093  009E6D  20                 	db	32
  3094  009E6E  20                 	db	32
  3095  009E6F  20                 	db	32
  3096  009E70  20                 	db	32
  3097  009E71  20                 	db	32
  3098  009E72  20                 	db	32
  3099  009E73  20                 	db	32
  3100  009E74  20                 	db	32
  3101  009E75  20                 	db	32
  3102  009E76  20                 	db	32
  3103  009E77  20                 	db	32
  3104  009E78  20                 	db	32
  3105  009E79  20                 	db	32
  3106  009E7A  20                 	db	32
  3107  009E7B  59                 	db	89
  3108  009E7C  65                 	db	101
  3109  009E7D  73                 	db	115
  3110  009E7E  20                 	db	32
  3111  009E7F  20                 	db	32
  3112  009E80  20                 	db	32
  3113  009E81  20                 	db	32
  3114  009E82  20                 	db	32
  3115  009E83  20                 	db	32
  3116  009E84  20                 	db	32
  3117  009E85  20                 	db	32
  3118  009E86  20                 	db	32
  3119  009E87  20                 	db	32
  3120  009E88  20                 	db	32
  3121  009E89  20                 	db	32
  3122  009E8A  4E                 	db	78
  3123  009E8B  6F                 	db	111
  3124  009E8C  20                 	db	32
  3125  009E8D  20                 	db	32
  3126  009E8E                     __end_of_dc_zero:
  3127                           	opt stack 0
  3128  009E8E                     _dc_arc2:
  3129                           	opt stack 0
  3130  009E8E  41                 	db	65
  3131  009E8F  72                 	db	114
  3132  009E90  63                 	db	99
  3133  009E91  3A                 	db	58
  3134  009E92  20                 	db	32
  3135  009E93  53                 	db	83
  3136  009E94  69                 	db	105
  3137  009E95  7A                 	db	122
  3138  009E96  65                 	db	101
  3139  009E97  3D                 	db	61
  3140  009E98  20                 	db	32
  3141  009E99  20                 	db	32
  3142  009E9A  20                 	db	32
  3143  009E9B  20                 	db	32
  3144  009E9C  20                 	db	32
  3145  009E9D  20                 	db	32
  3146  009E9E  20                 	db	32
  3147  009E9F  20                 	db	32
  3148  009EA0  20                 	db	32
  3149  009EA1  20                 	db	32
  3150  009EA2  43                 	db	67
  3151  009EA3  75                 	db	117
  3152  009EA4  72                 	db	114
  3153  009EA5  72                 	db	114
  3154  009EA6  65                 	db	101
  3155  009EA7  6E                 	db	110
  3156  009EA8  74                 	db	116
  3157  009EA9  20                 	db	32
  3158  009EAA  70                 	db	112
  3159  009EAB  6F                 	db	111
  3160  009EAC  73                 	db	115
  3161  009EAD  3A                 	db	58
  3162  009EAE  20                 	db	32
  3163  009EAF  20                 	db	32
  3164  009EB0  20                 	db	32
  3165  009EB1  20                 	db	32
  3166  009EB2  20                 	db	32
  3167  009EB3  20                 	db	32
  3168  009EB4  20                 	db	32
  3169  009EB5  01                 	db	1
  3170  009EB6  54                 	db	84
  3171  009EB7  75                 	db	117
  3172  009EB8  72                 	db	114
  3173  009EB9  6E                 	db	110
  3174  009EBA  20                 	db	32
  3175  009EBB  43                 	db	67
  3176  009EBC  43                 	db	67
  3177  009EBD  57                 	db	87
  3178  009EBE  20                 	db	32
  3179  009EBF  00                 	db	0
  3180  009EC0  20                 	db	32
  3181  009EC1  53                 	db	83
  3182  009EC2  70                 	db	112
  3183  009EC3  65                 	db	101
  3184  009EC4  65                 	db	101
  3185  009EC5  64                 	db	100
  3186  009EC6  20                 	db	32
  3187  009EC7  20                 	db	32
  3188  009EC8  20                 	db	32
  3189  009EC9  20                 	db	32
  3190  009ECA  53                 	db	83
  3191  009ECB  74                 	db	116
  3192  009ECC  61                 	db	97
  3193  009ECD  72                 	db	114
  3194  009ECE  74                 	db	116
  3195  009ECF  20                 	db	32
  3196  009ED0  20                 	db	32
  3197  009ED1  20                 	db	32
  3198  009ED2  20                 	db	32
  3199  009ED3  00                 	db	0
  3200  009ED4  20                 	db	32
  3201  009ED5  20                 	db	32
  3202  009ED6  20                 	db	32
  3203  009ED7  20                 	db	32
  3204  009ED8  20                 	db	32
  3205  009ED9  20                 	db	32
  3206  009EDA  20                 	db	32
  3207  009EDB  20                 	db	32
  3208  009EDC  20                 	db	32
  3209  009EDD  20                 	db	32
  3210  009EDE                     __end_of_dc_arc2:
  3211                           	opt stack 0
  3212  009EDE                     _dc_arc1:
  3213                           	opt stack 0
  3214  009EDE  41                 	db	65
  3215  009EDF  72                 	db	114
  3216  009EE0  63                 	db	99
  3217  009EE1  3A                 	db	58
  3218  009EE2  20                 	db	32
  3219  009EE3  53                 	db	83
  3220  009EE4  65                 	db	101
  3221  009EE5  74                 	db	116
  3222  009EE6  20                 	db	32
  3223  009EE7  61                 	db	97
  3224  009EE8  72                 	db	114
  3225  009EE9  63                 	db	99
  3226  009EEA  20                 	db	32
  3227  009EEB  73                 	db	115
  3228  009EEC  69                 	db	105
  3229  009EED  7A                 	db	122
  3230  009EEE  65                 	db	101
  3231  009EEF  20                 	db	32
  3232  009EF0  20                 	db	32
  3233  009EF1  20                 	db	32
  3234  009EF2  41                 	db	65
  3235  009EF3  72                 	db	114
  3236  009EF4  63                 	db	99
  3237  009EF5  20                 	db	32
  3238  009EF6  73                 	db	115
  3239  009EF7  69                 	db	105
  3240  009EF8  7A                 	db	122
  3241  009EF9  65                 	db	101
  3242  009EFA  3A                 	db	58
  3243  009EFB  20                 	db	32
  3244  009EFC  20                 	db	32
  3245  009EFD  20                 	db	32
  3246  009EFE  20                 	db	32
  3247  009EFF  20                 	db	32
  3248  009F00  20                 	db	32
  3249  009F01  20                 	db	32
  3250  009F02  20                 	db	32
  3251  009F03  20                 	db	32
  3252  009F04  20                 	db	32
  3253  009F05  20                 	db	32
  3254  009F06  53                 	db	83
  3255  009F07  74                 	db	116
  3256  009F08  65                 	db	101
  3257  009F09  70                 	db	112
  3258  009F0A  20                 	db	32
  3259  009F0B  73                 	db	115
  3260  009F0C  69                 	db	105
  3261  009F0D  7A                 	db	122
  3262  009F0E  65                 	db	101
  3263  009F0F  20                 	db	32
  3264  009F10  00                 	db	0
  3265  009F11  20                 	db	32
  3266  009F12  20                 	db	32
  3267  009F13  43                 	db	67
  3268  009F14  6F                 	db	111
  3269  009F15  6E                 	db	110
  3270  009F16  66                 	db	102
  3271  009F17  69                 	db	105
  3272  009F18  72                 	db	114
  3273  009F19  6D                 	db	109
  3274  009F1A  20                 	db	32
  3275  009F1B  20                 	db	32
  3276  009F1C  20                 	db	32
  3277  009F1D  20                 	db	32
  3278  009F1E  20                 	db	32
  3279  009F1F  20                 	db	32
  3280  009F20  20                 	db	32
  3281  009F21  20                 	db	32
  3282  009F22  20                 	db	32
  3283  009F23  20                 	db	32
  3284  009F24  00                 	db	0
  3285  009F25  20                 	db	32
  3286  009F26  20                 	db	32
  3287  009F27  43                 	db	67
  3288  009F28  61                 	db	97
  3289  009F29  6E                 	db	110
  3290  009F2A  63                 	db	99
  3291  009F2B  65                 	db	101
  3292  009F2C  6C                 	db	108
  3293  009F2D  20                 	db	32
  3294  009F2E                     __end_of_dc_arc1:
  3295                           	opt stack 0
  3296  009F2E                     _dc_divide2:
  3297                           	opt stack 0
  3298  009F2E  44                 	db	68
  3299  009F2F  69                 	db	105
  3300  009F30  76                 	db	118
  3301  009F31  69                 	db	105
  3302  009F32  64                 	db	100
  3303  009F33  65                 	db	101
  3304  009F34  3A                 	db	58
  3305  009F35  20                 	db	32
  3306  009F36  20                 	db	32
  3307  009F37  20                 	db	32
  3308  009F38  20                 	db	32
  3309  009F39  20                 	db	32
  3310  009F3A  20                 	db	32
  3311  009F3B  20                 	db	32
  3312  009F3C  20                 	db	32
  3313  009F3D  20                 	db	32
  3314  009F3E  20                 	db	32
  3315  009F3F  20                 	db	32
  3316  009F40  20                 	db	32
  3317  009F41  20                 	db	32
  3318  009F42  50                 	db	80
  3319  009F43  6F                 	db	111
  3320  009F44  73                 	db	115
  3321  009F45  3A                 	db	58
  3322  009F46  20                 	db	32
  3323  009F47  20                 	db	32
  3324  009F48  20                 	db	32
  3325  009F49  20                 	db	32
  3326  009F4A  20                 	db	32
  3327  009F4B  20                 	db	32
  3328  009F4C  20                 	db	32
  3329  009F4D  20                 	db	32
  3330  009F4E  20                 	db	32
  3331  009F4F  20                 	db	32
  3332  009F50  20                 	db	32
  3333  009F51  20                 	db	32
  3334  009F52  20                 	db	32
  3335  009F53  20                 	db	32
  3336  009F54  20                 	db	32
  3337  009F55  20                 	db	32
  3338  009F56  4A                 	db	74
  3339  009F57  75                 	db	117
  3340  009F58  6D                 	db	109
  3341  009F59  70                 	db	112
  3342  009F5A  20                 	db	32
  3343  009F5B  73                 	db	115
  3344  009F5C  69                 	db	105
  3345  009F5D  7A                 	db	122
  3346  009F5E  65                 	db	101
  3347  009F5F  3A                 	db	58
  3348  009F60  20                 	db	32
  3349  009F61  20                 	db	32
  3350  009F62  20                 	db	32
  3351  009F63  20                 	db	32
  3352  009F64  20                 	db	32
  3353  009F65  20                 	db	32
  3354  009F66  20                 	db	32
  3355  009F67  20                 	db	32
  3356  009F68  20                 	db	32
  3357  009F69  20                 	db	32
  3358  009F6A  50                 	db	80
  3359  009F6B  72                 	db	114
  3360  009F6C  65                 	db	101
  3361  009F6D  73                 	db	115
  3362  009F6E  73                 	db	115
  3363  009F6F  54                 	db	84
  3364  009F70  6F                 	db	111
  3365  009F71  4A                 	db	74
  3366  009F72  75                 	db	117
  3367  009F73  6D                 	db	109
  3368  009F74  70                 	db	112
  3369  009F75  20                 	db	32
  3370  009F76  00                 	db	0
  3371  009F77  20                 	db	32
  3372  009F78  43                 	db	67
  3373  009F79  61                 	db	97
  3374  009F7A  6E                 	db	110
  3375  009F7B  63                 	db	99
  3376  009F7C  65                 	db	101
  3377  009F7D  6C                 	db	108
  3378  009F7E                     __end_of_dc_divide2:
  3379                           	opt stack 0
  3380  009F7E                     _dc_divide1:
  3381                           	opt stack 0
  3382  009F7E  44                 	db	68
  3383  009F7F  69                 	db	105
  3384  009F80  76                 	db	118
  3385  009F81  69                 	db	105
  3386  009F82  64                 	db	100
  3387  009F83  65                 	db	101
  3388  009F84  3A                 	db	58
  3389  009F85  20                 	db	32
  3390  009F86  53                 	db	83
  3391  009F87  65                 	db	101
  3392  009F88  74                 	db	116
  3393  009F89  20                 	db	32
  3394  009F8A  64                 	db	100
  3395  009F8B  69                 	db	105
  3396  009F8C  76                 	db	118
  3397  009F8D  69                 	db	105
  3398  009F8E  73                 	db	115
  3399  009F8F  69                 	db	105
  3400  009F90  6F                 	db	111
  3401  009F91  6E                 	db	110
  3402  009F92  20                 	db	32
  3403  009F93  20                 	db	32
  3404  009F94  20                 	db	32
  3405  009F95  20                 	db	32
  3406  009F96  20                 	db	32
  3407  009F97  20                 	db	32
  3408  009F98  20                 	db	32
  3409  009F99  20                 	db	32
  3410  009F9A  20                 	db	32
  3411  009F9B  20                 	db	32
  3412  009F9C  20                 	db	32
  3413  009F9D  20                 	db	32
  3414  009F9E  20                 	db	32
  3415  009F9F  20                 	db	32
  3416  009FA0  20                 	db	32
  3417  009FA1  20                 	db	32
  3418  009FA2  20                 	db	32
  3419  009FA3  20                 	db	32
  3420  009FA4  20                 	db	32
  3421  009FA5  20                 	db	32
  3422  009FA6  20                 	db	32
  3423  009FA7  20                 	db	32
  3424  009FA8  20                 	db	32
  3425  009FA9  2F                 	db	47
  3426  009FAA  73                 	db	115
  3427  009FAB  74                 	db	116
  3428  009FAC  65                 	db	101
  3429  009FAD  70                 	db	112
  3430  009FAE  20                 	db	32
  3431  009FAF  20                 	db	32
  3432  009FB0  00                 	db	0
  3433  009FB1  20                 	db	32
  3434  009FB2  20                 	db	32
  3435  009FB3  43                 	db	67
  3436  009FB4  6F                 	db	111
  3437  009FB5  6E                 	db	110
  3438  009FB6  66                 	db	102
  3439  009FB7  69                 	db	105
  3440  009FB8  72                 	db	114
  3441  009FB9  6D                 	db	109
  3442  009FBA  31                 	db	49
  3443  009FBB  32                 	db	50
  3444  009FBC  33                 	db	51
  3445  009FBD  34                 	db	52
  3446  009FBE  20                 	db	32
  3447  009FBF  20                 	db	32
  3448  009FC0  20                 	db	32
  3449  009FC1  20                 	db	32
  3450  009FC2  20                 	db	32
  3451  009FC3  20                 	db	32
  3452  009FC4  00                 	db	0
  3453  009FC5  20                 	db	32
  3454  009FC6  20                 	db	32
  3455  009FC7  43                 	db	67
  3456  009FC8  61                 	db	97
  3457  009FC9  6E                 	db	110
  3458  009FCA  63                 	db	99
  3459  009FCB  65                 	db	101
  3460  009FCC  6C                 	db	108
  3461  009FCD  20                 	db	32
  3462  009FCE                     __end_of_dc_divide1:
  3463                           	opt stack 0
  3464  009FCE                     _dc_setup2:
  3465                           	opt stack 0
  3466  009FCE  53                 	db	83
  3467  009FCF  65                 	db	101
  3468  009FD0  74                 	db	116
  3469  009FD1  75                 	db	117
  3470  009FD2  70                 	db	112
  3471  009FD3  3A                 	db	58
  3472  009FD4  20                 	db	32
  3473  009FD5  53                 	db	83
  3474  009FD6  65                 	db	101
  3475  009FD7  74                 	db	116
  3476  009FD8  20                 	db	32
  3477  009FD9  64                 	db	100
  3478  009FDA  69                 	db	105
  3479  009FDB  72                 	db	114
  3480  009FDC  65                 	db	101
  3481  009FDD  63                 	db	99
  3482  009FDE  74                 	db	116
  3483  009FDF  69                 	db	105
  3484  009FE0  6F                 	db	111
  3485  009FE1  6E                 	db	110
  3486  009FE2  20                 	db	32
  3487  009FE3  20                 	db	32
  3488  009FE4  20                 	db	32
  3489  009FE5  20                 	db	32
  3490  009FE6  20                 	db	32
  3491  009FE7  20                 	db	32
  3492  009FE8  20                 	db	32
  3493  009FE9  20                 	db	32
  3494  009FEA  20                 	db	32
  3495  009FEB  20                 	db	32
  3496  009FEC  20                 	db	32
  3497  009FED  20                 	db	32
  3498  009FEE  20                 	db	32
  3499  009FEF  20                 	db	32
  3500  009FF0  20                 	db	32
  3501  009FF1  20                 	db	32
  3502  009FF2  20                 	db	32
  3503  009FF3  20                 	db	32
  3504  009FF4  20                 	db	32
  3505  009FF5  20                 	db	32
  3506  009FF6  20                 	db	32
  3507  009FF7  43                 	db	67
  3508  009FF8  6F                 	db	111
  3509  009FF9  75                 	db	117
  3510  009FFA  6E                 	db	110
  3511  009FFB  74                 	db	116
  3512  009FFC  65                 	db	101
  3513  009FFD  72                 	db	114
  3514  009FFE  43                 	db	67
  3515  009FFF  6C                 	db	108
  3516  00A000  6F                 	db	111
  3517  00A001  63                 	db	99
  3518  00A002  6B                 	db	107
  3519  00A003  77                 	db	119
  3520  00A004  69                 	db	105
  3521  00A005  73                 	db	115
  3522  00A006  65                 	db	101
  3523  00A007  20                 	db	32
  3524  00A008  20                 	db	32
  3525  00A009  20                 	db	32
  3526  00A00A  20                 	db	32
  3527  00A00B  43                 	db	67
  3528  00A00C  6C                 	db	108
  3529  00A00D  6F                 	db	111
  3530  00A00E  63                 	db	99
  3531  00A00F  6B                 	db	107
  3532  00A010  77                 	db	119
  3533  00A011  69                 	db	105
  3534  00A012  73                 	db	115
  3535  00A013  65                 	db	101
  3536  00A014  20                 	db	32
  3537  00A015  20                 	db	32
  3538  00A016  20                 	db	32
  3539  00A017  20                 	db	32
  3540  00A018  20                 	db	32
  3541  00A019  20                 	db	32
  3542  00A01A  20                 	db	32
  3543  00A01B  20                 	db	32
  3544  00A01C  20                 	db	32
  3545  00A01D  20                 	db	32
  3546  00A01E                     __end_of_dc_setup2:
  3547                           	opt stack 0
  3548  00A01E                     _dc_setup1:
  3549                           	opt stack 0
  3550  00A01E  53                 	db	83
  3551  00A01F  65                 	db	101
  3552  00A020  74                 	db	116
  3553  00A021  75                 	db	117
  3554  00A022  70                 	db	112
  3555  00A023  3A                 	db	58
  3556  00A024  20                 	db	32
  3557  00A025  53                 	db	83
  3558  00A026  65                 	db	101
  3559  00A027  74                 	db	116
  3560  00A028  20                 	db	32
  3561  00A029  7A                 	db	122
  3562  00A02A  65                 	db	101
  3563  00A02B  72                 	db	114
  3564  00A02C  6F                 	db	111
  3565  00A02D  20                 	db	32
  3566  00A02E  70                 	db	112
  3567  00A02F  6F                 	db	111
  3568  00A030  73                 	db	115
  3569  00A031  2E                 	db	46
  3570  00A032  20                 	db	32
  3571  00A033  20                 	db	32
  3572  00A034  20                 	db	32
  3573  00A035  20                 	db	32
  3574  00A036  20                 	db	32
  3575  00A037  20                 	db	32
  3576  00A038  20                 	db	32
  3577  00A039  20                 	db	32
  3578  00A03A  20                 	db	32
  3579  00A03B  20                 	db	32
  3580  00A03C  20                 	db	32
  3581  00A03D  20                 	db	32
  3582  00A03E  20                 	db	32
  3583  00A03F  20                 	db	32
  3584  00A040  20                 	db	32
  3585  00A041  20                 	db	32
  3586  00A042  20                 	db	32
  3587  00A043  20                 	db	32
  3588  00A044  20                 	db	32
  3589  00A045  20                 	db	32
  3590  00A046  53                 	db	83
  3591  00A047  74                 	db	116
  3592  00A048  65                 	db	101
  3593  00A049  70                 	db	112
  3594  00A04A  20                 	db	32
  3595  00A04B  73                 	db	115
  3596  00A04C  69                 	db	105
  3597  00A04D  7A                 	db	122
  3598  00A04E  65                 	db	101
  3599  00A04F  20                 	db	32
  3600  00A050  00                 	db	0
  3601  00A051  20                 	db	32
  3602  00A052  20                 	db	32
  3603  00A053  43                 	db	67
  3604  00A054  6F                 	db	111
  3605  00A055  6E                 	db	110
  3606  00A056  66                 	db	102
  3607  00A057  69                 	db	105
  3608  00A058  72                 	db	114
  3609  00A059  6D                 	db	109
  3610  00A05A  20                 	db	32
  3611  00A05B  78                 	db	120
  3612  00A05C  2E                 	db	46
  3613  00A05D  78                 	db	120
  3614  00A05E  78                 	db	120
  3615  00A05F  01                 	db	1
  3616  00A060  20                 	db	32
  3617  00A061  20                 	db	32
  3618  00A062  20                 	db	32
  3619  00A063  20                 	db	32
  3620  00A064  00                 	db	0
  3621  00A065  20                 	db	32
  3622  00A066  20                 	db	32
  3623  00A067  43                 	db	67
  3624  00A068  61                 	db	97
  3625  00A069  6E                 	db	110
  3626  00A06A  63                 	db	99
  3627  00A06B  65                 	db	101
  3628  00A06C  6C                 	db	108
  3629  00A06D  20                 	db	32
  3630  00A06E                     __end_of_dc_setup1:
  3631                           	opt stack 0
  3632  00A06E                     _dc_main:
  3633                           	opt stack 0
  3634  00A06E  4D                 	db	77
  3635  00A06F  61                 	db	97
  3636  00A070  69                 	db	105
  3637  00A071  6E                 	db	110
  3638  00A072  20                 	db	32
  3639  00A073  4D                 	db	77
  3640  00A074  65                 	db	101
  3641  00A075  6E                 	db	110
  3642  00A076  75                 	db	117
  3643  00A077  3A                 	db	58
  3644  00A078  20                 	db	32
  3645  00A079  20                 	db	32
  3646  00A07A  20                 	db	32
  3647  00A07B  20                 	db	32
  3648  00A07C  20                 	db	32
  3649  00A07D  20                 	db	32
  3650  00A07E  20                 	db	32
  3651  00A07F  20                 	db	32
  3652  00A080  20                 	db	32
  3653  00A081  20                 	db	32
  3654  00A082  20                 	db	32
  3655  00A083  53                 	db	83
  3656  00A084  65                 	db	101
  3657  00A085  74                 	db	116
  3658  00A086  75                 	db	117
  3659  00A087  70                 	db	112
  3660  00A088  20                 	db	32
  3661  00A089  20                 	db	32
  3662  00A08A  20                 	db	32
  3663  00A08B  20                 	db	32
  3664  00A08C  44                 	db	68
  3665  00A08D  69                 	db	105
  3666  00A08E  76                 	db	118
  3667  00A08F  69                 	db	105
  3668  00A090  64                 	db	100
  3669  00A091  65                 	db	101
  3670  00A092  20                 	db	32
  3671  00A093  20                 	db	32
  3672  00A094  20                 	db	32
  3673  00A095  20                 	db	32
  3674  00A096  20                 	db	32
  3675  00A097  41                 	db	65
  3676  00A098  72                 	db	114
  3677  00A099  63                 	db	99
  3678  00A09A  20                 	db	32
  3679  00A09B  20                 	db	32
  3680  00A09C  20                 	db	32
  3681  00A09D  20                 	db	32
  3682  00A09E  20                 	db	32
  3683  00A09F  20                 	db	32
  3684  00A0A0  4D                 	db	77
  3685  00A0A1  61                 	db	97
  3686  00A0A2  6E                 	db	110
  3687  00A0A3  75                 	db	117
  3688  00A0A4  61                 	db	97
  3689  00A0A5  6C                 	db	108
  3690  00A0A6  20                 	db	32
  3691  00A0A7  20                 	db	32
  3692  00A0A8  20                 	db	32
  3693  00A0A9  20                 	db	32
  3694  00A0AA  20                 	db	32
  3695  00A0AB  47                 	db	71
  3696  00A0AC  6F                 	db	111
  3697  00A0AD  32                 	db	50
  3698  00A0AE  5A                 	db	90
  3699  00A0AF  65                 	db	101
  3700  00A0B0  72                 	db	114
  3701  00A0B1  6F                 	db	111
  3702  00A0B2  20                 	db	32
  3703  00A0B3  20                 	db	32
  3704  00A0B4  20                 	db	32
  3705  00A0B5  20                 	db	32
  3706  00A0B6  20                 	db	32
  3707  00A0B7  20                 	db	32
  3708  00A0B8  20                 	db	32
  3709  00A0B9  20                 	db	32
  3710  00A0BA  20                 	db	32
  3711  00A0BB  20                 	db	32
  3712  00A0BC  20                 	db	32
  3713  00A0BD  20                 	db	32
  3714  00A0BE                     __end_of_dc_main:
  3715                           	opt stack 0
  3716  00A0BE                     _configDescriptor1:
  3717                           	opt stack 0
  3718  00A0BE  09                 	db	9
  3719  00A0BF  02                 	db	2
  3720  00A0C0  40                 	db	64
  3721  00A0C1  00                 	db	0
  3722  00A0C2  02                 	db	2
  3723  00A0C3  01                 	db	1
  3724  00A0C4  00                 	db	0
  3725  00A0C5  C0                 	db	192
  3726  00A0C6  32                 	db	50
  3727  00A0C7  09                 	db	9
  3728  00A0C8  04                 	db	4
  3729  00A0C9  00                 	db	0
  3730  00A0CA  00                 	db	0
  3731  00A0CB  02                 	db	2
  3732  00A0CC  03                 	db	3
  3733  00A0CD  00                 	db	0
  3734  00A0CE  00                 	db	0
  3735  00A0CF  00                 	db	0
  3736  00A0D0  09                 	db	9
  3737  00A0D1  21                 	db	33
  3738  00A0D2  11                 	db	17
  3739  00A0D3  01                 	db	1
  3740  00A0D4  00                 	db	0
  3741  00A0D5  01                 	db	1
  3742  00A0D6  22                 	db	34
  3743  00A0D7  1D                 	db	29
  3744  00A0D8  00                 	db	0
  3745  00A0D9  07                 	db	7
  3746  00A0DA  05                 	db	5
  3747  00A0DB  81                 	db	129
  3748  00A0DC  03                 	db	3
  3749  00A0DD  40                 	db	64
  3750  00A0DE  00                 	db	0
  3751  00A0DF  01                 	db	1
  3752  00A0E0  07                 	db	7
  3753  00A0E1  05                 	db	5
  3754  00A0E2  01                 	db	1
  3755  00A0E3  03                 	db	3
  3756  00A0E4  40                 	db	64
  3757  00A0E5  00                 	db	0
  3758  00A0E6  01                 	db	1
  3759  00A0E7  09                 	db	9
  3760  00A0E8  04                 	db	4
  3761  00A0E9  01                 	db	1
  3762  00A0EA  00                 	db	0
  3763  00A0EB  02                 	db	2
  3764  00A0EC  08                 	db	8
  3765  00A0ED  06                 	db	6
  3766  00A0EE  50                 	db	80
  3767  00A0EF  00                 	db	0
  3768  00A0F0  07                 	db	7
  3769  00A0F1  05                 	db	5
  3770  00A0F2  82                 	db	130
  3771  00A0F3  02                 	db	2
  3772  00A0F4  40                 	db	64
  3773  00A0F5  00                 	db	0
  3774  00A0F6  01                 	db	1
  3775  00A0F7  07                 	db	7
  3776  00A0F8  05                 	db	5
  3777  00A0F9  02                 	db	2
  3778  00A0FA  02                 	db	2
  3779  00A0FB  40                 	db	64
  3780  00A0FC  00                 	db	0
  3781  00A0FD  01                 	db	1
  3782  00A0FE                     __end_of_configDescriptor1:
  3783                           	opt stack 0
  3784  00A0FE                     _sd001:
  3785                           	opt stack 0
  3786  00A0FE  34                 	db	52
  3787  00A0FF  03                 	db	3
  3788  00A100  0053               	dw	83
  3789  00A102  006F               	dw	111
  3790  00A104  006C               	dw	108
  3791  00A106  0064               	dw	100
  3792  00A108  0065               	dw	101
  3793  00A10A  0072               	dw	114
  3794  00A10C  006E               	dw	110
  3795  00A10E  0065               	dw	101
  3796  00A110  0072               	dw	114
  3797  00A112  0064               	dw	100
  3798  00A114  002E               	dw	46
  3799  00A116  0063               	dw	99
  3800  00A118  006F               	dw	111
  3801  00A11A  006D               	dw	109
  3802  00A11C  0020               	dw	32
  3803  00A11E  0020               	dw	32
  3804  00A120  0020               	dw	32
  3805  00A122  0020               	dw	32
  3806  00A124  0020               	dw	32
  3807  00A126  0020               	dw	32
  3808  00A128  0020               	dw	32
  3809  00A12A  0020               	dw	32
  3810  00A12C  0020               	dw	32
  3811  00A12E  0020               	dw	32
  3812  00A130  0020               	dw	32
  3813  00A132                     __end_of_sd001:
  3814                           	opt stack 0
  3815  00A132                     _sd002:
  3816                           	opt stack 0
  3817  00A132  2E                 	db	46
  3818  00A133  03                 	db	3
  3819  00A134  0053               	dw	83
  3820  00A136  0074               	dw	116
  3821  00A138  0065               	dw	101
  3822  00A13A  0070               	dw	112
  3823  00A13C  0070               	dw	112
  3824  00A13E  0065               	dw	101
  3825  00A140  0072               	dw	114
  3826  00A142  004D               	dw	77
  3827  00A144  006F               	dw	111
  3828  00A146  0074               	dw	116
  3829  00A148  006F               	dw	111
  3830  00A14A  0072               	dw	114
  3831  00A14C  0043               	dw	67
  3832  00A14E  006F               	dw	111
  3833  00A150  006E               	dw	110
  3834  00A152  0074               	dw	116
  3835  00A154  0072               	dw	114
  3836  00A156  006F               	dw	111
  3837  00A158  006C               	dw	108
  3838  00A15A  006C               	dw	108
  3839  00A15C  0065               	dw	101
  3840  00A15E  0072               	dw	114
  3841  00A160                     __end_of_sd002:
  3842                           	opt stack 0
  3843  00A160                     _inq_resp:
  3844                           	opt stack 0
  3845  00A160  00                 	db	0
  3846  00A161  80                 	db	128
  3847  00A162  04                 	db	4
  3848  00A163  02                 	db	2
  3849  00A164  20                 	db	32
  3850  00A165  00                 	db	0
  3851  00A166  00                 	db	0
  3852  00A167  00                 	db	0
  3853  00A168  4D                 	db	77
  3854  00A169  69                 	db	105
  3855  00A16A  63                 	db	99
  3856  00A16B  72                 	db	114
  3857  00A16C  6F                 	db	111
  3858  00A16D  63                 	db	99
  3859  00A16E  68                 	db	104
  3860  00A16F  70                 	db	112
  3861  00A170  4D                 	db	77
  3862  00A171  61                 	db	97
  3863  00A172  73                 	db	115
  3864  00A173  73                 	db	115
  3865  00A174  20                 	db	32
  3866  00A175  53                 	db	83
  3867  00A176  74                 	db	116
  3868  00A177  6F                 	db	111
  3869  00A178  72                 	db	114
  3870  00A179  61                 	db	97
  3871  00A17A  67                 	db	103
  3872  00A17B  65                 	db	101
  3873  00A17C  20                 	db	32
  3874  00A17D  20                 	db	32
  3875  00A17E  20                 	db	32
  3876  00A17F  20                 	db	32
  3877  00A180  30                 	db	48
  3878  00A181  30                 	db	48
  3879  00A182  30                 	db	48
  3880  00A183  31                 	db	49
  3881  00A184                     __end_of_inq_resp:
  3882                           	opt stack 0
  3883  00A184                     _hid_rpt01:
  3884                           	opt stack 0
  3885  00A184  06                 	db	6
  3886  00A185  00                 	db	0
  3887  00A186  FF                 	db	255
  3888  00A187  09                 	db	9
  3889  00A188  01                 	db	1
  3890  00A189  A1                 	db	161
  3891  00A18A  01                 	db	1
  3892  00A18B  19                 	db	25
  3893  00A18C  01                 	db	1
  3894  00A18D  29                 	db	41
  3895  00A18E  40                 	db	64
  3896  00A18F  15                 	db	21
  3897  00A190  00                 	db	0
  3898  00A191  26                 	db	38
  3899  00A192  FF                 	db	255
  3900  00A193  00                 	db	0
  3901  00A194  75                 	db	117
  3902  00A195  08                 	db	8
  3903  00A196  95                 	db	149
  3904  00A197  40                 	db	64
  3905  00A198  81                 	db	129
  3906  00A199  00                 	db	0
  3907  00A19A  19                 	db	25
  3908  00A19B  01                 	db	1
  3909  00A19C  29                 	db	41
  3910  00A19D  40                 	db	64
  3911  00A19E  91                 	db	145
  3912  00A19F  00                 	db	0
  3913  00A1A0  C0                 	db	192
  3914  00A1A1                     __end_of_hid_rpt01:
  3915                           	opt stack 0
  3916  00A1A1                     _sd003:
  3917                           	opt stack 0
  3918  00A1A1  1A                 	db	26
  3919  00A1A2  03                 	db	3
  3920  00A1A3  0031               	dw	49
  3921  00A1A5  0032               	dw	50
  3922  00A1A7  0033               	dw	51
  3923  00A1A9  0034               	dw	52
  3924  00A1AB  0035               	dw	53
  3925  00A1AD  0036               	dw	54
  3926  00A1AF  0037               	dw	55
  3927  00A1B1  0038               	dw	56
  3928  00A1B3  0039               	dw	57
  3929  00A1B5  0030               	dw	48
  3930  00A1B7  0039               	dw	57
  3931  00A1B9  0039               	dw	57
  3932  00A1BB                     __end_of_sd003:
  3933                           	opt stack 0
  3934  00A1BB                     _overshoot_cost_in_steps_string:
  3935                           	opt stack 0
  3936  00A1BB  4F                 	db	79
  3937  00A1BC  56                 	db	86
  3938  00A1BD  45                 	db	69
  3939  00A1BE  52                 	db	82
  3940  00A1BF  53                 	db	83
  3941  00A1C0  48                 	db	72
  3942  00A1C1  4F                 	db	79
  3943  00A1C2  4F                 	db	79
  3944  00A1C3  54                 	db	84
  3945  00A1C4  5F                 	db	95
  3946  00A1C5  43                 	db	67
  3947  00A1C6  4F                 	db	79
  3948  00A1C7  53                 	db	83
  3949  00A1C8  54                 	db	84
  3950  00A1C9  5F                 	db	95
  3951  00A1CA  49                 	db	73
  3952  00A1CB  4E                 	db	78
  3953  00A1CC  5F                 	db	95
  3954  00A1CD  53                 	db	83
  3955  00A1CE  54                 	db	84
  3956  00A1CF  45                 	db	69
  3957  00A1D0  50                 	db	80
  3958  00A1D1  53                 	db	83
  3959  00A1D2  00                 	db	0
  3960  00A1D3                     __end_of_overshoot_cost_in_steps_string:
  3961                           	opt stack 0
  3962  00A1D3                     _maximum_speed_manual_string:
  3963                           	opt stack 0
  3964  00A1D3  4D                 	db	77
  3965  00A1D4  41                 	db	65
  3966  00A1D5  58                 	db	88
  3967  00A1D6  49                 	db	73
  3968  00A1D7  4D                 	db	77
  3969  00A1D8  55                 	db	85
  3970  00A1D9  4D                 	db	77
  3971  00A1DA  5F                 	db	95
  3972  00A1DB  53                 	db	83
  3973  00A1DC  50                 	db	80
  3974  00A1DD  45                 	db	69
  3975  00A1DE  45                 	db	69
  3976  00A1DF  44                 	db	68
  3977  00A1E0  5F                 	db	95
  3978  00A1E1  4D                 	db	77
  3979  00A1E2  41                 	db	65
  3980  00A1E3  4E                 	db	78
  3981  00A1E4  55                 	db	85
  3982  00A1E5  41                 	db	65
  3983  00A1E6  4C                 	db	76
  3984  00A1E7  00                 	db	0
  3985  00A1E8                     __end_of_maximum_speed_manual_string:
  3986                           	opt stack 0
  3987  00A1E8                     _initial_speed_manual_string:
  3988                           	opt stack 0
  3989  00A1E8  49                 	db	73
  3990  00A1E9  4E                 	db	78
  3991  00A1EA  49                 	db	73
  3992  00A1EB  54                 	db	84
  3993  00A1EC  49                 	db	73
  3994  00A1ED  41                 	db	65
  3995  00A1EE  4C                 	db	76
  3996  00A1EF  5F                 	db	95
  3997  00A1F0  53                 	db	83
  3998  00A1F1  50                 	db	80
  3999  00A1F2  45                 	db	69
  4000  00A1F3  45                 	db	69
  4001  00A1F4  44                 	db	68
  4002  00A1F5  5F                 	db	95
  4003  00A1F6  4D                 	db	77
  4004  00A1F7  41                 	db	65
  4005  00A1F8  4E                 	db	78
  4006  00A1F9  55                 	db	85
  4007  00A1FA  41                 	db	65
  4008  00A1FB  4C                 	db	76
  4009  00A1FC  00                 	db	0
  4010  00A1FD                     __end_of_initial_speed_manual_string:
  4011                           	opt stack 0
  4012  00A1FD                     _full_circle_in_steps_string:
  4013                           	opt stack 0
  4014  00A1FD  46                 	db	70
  4015  00A1FE  55                 	db	85
  4016  00A1FF  4C                 	db	76
  4017  00A200  4C                 	db	76
  4018  00A201  5F                 	db	95
  4019  00A202  43                 	db	67
  4020  00A203  49                 	db	73
  4021  00A204  52                 	db	82
  4022  00A205  43                 	db	67
  4023  00A206  4C                 	db	76
  4024  00A207  45                 	db	69
  4025  00A208  5F                 	db	95
  4026  00A209  49                 	db	73
  4027  00A20A  4E                 	db	78
  4028  00A20B  5F                 	db	95
  4029  00A20C  53                 	db	83
  4030  00A20D  54                 	db	84
  4031  00A20E  45                 	db	69
  4032  00A20F  50                 	db	80
  4033  00A210  53                 	db	83
  4034  00A211  00                 	db	0
  4035  00A212                     __end_of_full_circle_in_steps_string:
  4036                           	opt stack 0
  4037  00A212                     _overshoot_in_steps_string:
  4038                           	opt stack 0
  4039  00A212  4F                 	db	79
  4040  00A213  56                 	db	86
  4041  00A214  45                 	db	69
  4042  00A215  52                 	db	82
  4043  00A216  53                 	db	83
  4044  00A217  48                 	db	72
  4045  00A218  4F                 	db	79
  4046  00A219  4F                 	db	79
  4047  00A21A  54                 	db	84
  4048  00A21B  5F                 	db	95
  4049  00A21C  49                 	db	73
  4050  00A21D  4E                 	db	78
  4051  00A21E  5F                 	db	95
  4052  00A21F  53                 	db	83
  4053  00A220  54                 	db	84
  4054  00A221  45                 	db	69
  4055  00A222  50                 	db	80
  4056  00A223  53                 	db	83
  4057  00A224  00                 	db	0
  4058  00A225                     __end_of_overshoot_in_steps_string:
  4059                           	opt stack 0
  4060  00A225                     _maximum_speed_arc_string:
  4061                           	opt stack 0
  4062  00A225  4D                 	db	77
  4063  00A226  41                 	db	65
  4064  00A227  58                 	db	88
  4065  00A228  49                 	db	73
  4066  00A229  4D                 	db	77
  4067  00A22A  55                 	db	85
  4068  00A22B  4D                 	db	77
  4069  00A22C  5F                 	db	95
  4070  00A22D  53                 	db	83
  4071  00A22E  50                 	db	80
  4072  00A22F  45                 	db	69
  4073  00A230  45                 	db	69
  4074  00A231  44                 	db	68
  4075  00A232  5F                 	db	95
  4076  00A233  41                 	db	65
  4077  00A234  52                 	db	82
  4078  00A235  43                 	db	67
  4079  00A236  00                 	db	0
  4080  00A237                     __end_of_maximum_speed_arc_string:
  4081                           	opt stack 0
  4082  00A237                     _initial_speed_arc_string:
  4083                           	opt stack 0
  4084  00A237  49                 	db	73
  4085  00A238  4E                 	db	78
  4086  00A239  49                 	db	73
  4087  00A23A  54                 	db	84
  4088  00A23B  49                 	db	73
  4089  00A23C  41                 	db	65
  4090  00A23D  4C                 	db	76
  4091  00A23E  5F                 	db	95
  4092  00A23F  53                 	db	83
  4093  00A240  50                 	db	80
  4094  00A241  45                 	db	69
  4095  00A242  45                 	db	69
  4096  00A243  44                 	db	68
  4097  00A244  5F                 	db	95
  4098  00A245  41                 	db	65
  4099  00A246  52                 	db	82
  4100  00A247  43                 	db	67
  4101  00A248  00                 	db	0
  4102  00A249                     __end_of_initial_speed_arc_string:
  4103                           	opt stack 0
  4104  00A249                     _inverse_direction_string:
  4105                           	opt stack 0
  4106  00A249  49                 	db	73
  4107  00A24A  4E                 	db	78
  4108  00A24B  56                 	db	86
  4109  00A24C  45                 	db	69
  4110  00A24D  52                 	db	82
  4111  00A24E  53                 	db	83
  4112  00A24F  45                 	db	69
  4113  00A250  5F                 	db	95
  4114  00A251  44                 	db	68
  4115  00A252  49                 	db	73
  4116  00A253  52                 	db	82
  4117  00A254  45                 	db	69
  4118  00A255  43                 	db	67
  4119  00A256  54                 	db	84
  4120  00A257  49                 	db	73
  4121  00A258  4F                 	db	79
  4122  00A259  4E                 	db	78
  4123  00A25A  00                 	db	0
  4124  00A25B                     __end_of_inverse_direction_string:
  4125                           	opt stack 0
  4126  00A25B                     _device_dsc:
  4127                           	opt stack 0
  4128  00A25B  12                 	db	18
  4129  00A25C  01                 	db	1
  4130  00A25D  0200               	dw	512
  4131  00A25F  00                 	db	0
  4132  00A260  00                 	db	0
  4133  00A261  00                 	db	0
  4134  00A262  08                 	db	8
  4135  00A263  04D8               	dw	1240
  4136  00A265  EDCF               	dw	60879
  4137  00A267  0100               	dw	256
  4138  00A269  01                 	db	1
  4139  00A26A  02                 	db	2
  4140  00A26B  00                 	db	0
  4141  00A26C  01                 	db	1
  4142  00A26D                     __end_of_device_dsc:
  4143                           	opt stack 0
  4144  00A26D                     _use_ccw_limit_string:
  4145                           	opt stack 0
  4146  00A26D  55                 	db	85
  4147  00A26E  53                 	db	83
  4148  00A26F  45                 	db	69
  4149  00A270  5F                 	db	95
  4150  00A271  43                 	db	67
  4151  00A272  43                 	db	67
  4152  00A273  57                 	db	87
  4153  00A274  5F                 	db	95
  4154  00A275  4C                 	db	76
  4155  00A276  49                 	db	73
  4156  00A277  4D                 	db	77
  4157  00A278  49                 	db	73
  4158  00A279  54                 	db	84
  4159  00A27A  00                 	db	0
  4160  00A27B                     __end_of_use_ccw_limit_string:
  4161                           	opt stack 0
  4162  00A27B                     _beep_duration_string:
  4163                           	opt stack 0
  4164  00A27B  42                 	db	66
  4165  00A27C  45                 	db	69
  4166  00A27D  45                 	db	69
  4167  00A27E  50                 	db	80
  4168  00A27F  5F                 	db	95
  4169  00A280  44                 	db	68
  4170  00A281  55                 	db	85
  4171  00A282  52                 	db	82
  4172  00A283  41                 	db	65
  4173  00A284  54                 	db	84
  4174  00A285  49                 	db	73
  4175  00A286  4F                 	db	79
  4176  00A287  4E                 	db	78
  4177  00A288  00                 	db	0
  4178  00A289                     __end_of_beep_duration_string:
  4179                           	opt stack 0
  4180  00A289                     _maximum_speed_string:
  4181                           	opt stack 0
  4182  00A289  4D                 	db	77
  4183  00A28A  41                 	db	65
  4184  00A28B  58                 	db	88
  4185  00A28C  49                 	db	73
  4186  00A28D  4D                 	db	77
  4187  00A28E  55                 	db	85
  4188  00A28F  4D                 	db	77
  4189  00A290  5F                 	db	95
  4190  00A291  53                 	db	83
  4191  00A292  50                 	db	80
  4192  00A293  45                 	db	69
  4193  00A294  45                 	db	69
  4194  00A295  44                 	db	68
  4195  00A296  00                 	db	0
  4196  00A297                     __end_of_maximum_speed_string:
  4197                           	opt stack 0
  4198  00A297                     _minimum_speed_string:
  4199                           	opt stack 0
  4200  00A297  4D                 	db	77
  4201  00A298  49                 	db	73
  4202  00A299  4E                 	db	78
  4203  00A29A  49                 	db	73
  4204  00A29B  4D                 	db	77
  4205  00A29C  55                 	db	85
  4206  00A29D  4D                 	db	77
  4207  00A29E  5F                 	db	95
  4208  00A29F  53                 	db	83
  4209  00A2A0  50                 	db	80
  4210  00A2A1  45                 	db	69
  4211  00A2A2  45                 	db	69
  4212  00A2A3  44                 	db	68
  4213  00A2A4  00                 	db	0
  4214  00A2A5                     __end_of_minimum_speed_string:
  4215                           	opt stack 0
  4216  00A2A5                     _use_cw_limit_string:
  4217                           	opt stack 0
  4218  00A2A5  55                 	db	85
  4219  00A2A6  53                 	db	83
  4220  00A2A7  45                 	db	69
  4221  00A2A8  5F                 	db	95
  4222  00A2A9  43                 	db	67
  4223  00A2AA  57                 	db	87
  4224  00A2AB  5F                 	db	95
  4225  00A2AC  4C                 	db	76
  4226  00A2AD  49                 	db	73
  4227  00A2AE  4D                 	db	77
  4228  00A2AF  49                 	db	73
  4229  00A2B0  54                 	db	84
  4230  00A2B1  00                 	db	0
  4231  00A2B2                     __end_of_use_cw_limit_string:
  4232                           	opt stack 0
  4233  00A2B2                     _ccw_limit_string:
  4234                           	opt stack 0
  4235  00A2B2  43                 	db	67
  4236  00A2B3  43                 	db	67
  4237  00A2B4  57                 	db	87
  4238  00A2B5  5F                 	db	95
  4239  00A2B6  4C                 	db	76
  4240  00A2B7  49                 	db	73
  4241  00A2B8  4D                 	db	77
  4242  00A2B9  49                 	db	73
  4243  00A2BA  54                 	db	84
  4244  00A2BB  00                 	db	0
  4245  00A2BC                     __end_of_ccw_limit_string:
  4246                           	opt stack 0
  4247  00A2BC                     _cw_limit_string:
  4248                           	opt stack 0
  4249  00A2BC  43                 	db	67
  4250  00A2BD  57                 	db	87
  4251  00A2BE  5F                 	db	95
  4252  00A2BF  4C                 	db	76
  4253  00A2C0  49                 	db	73
  4254  00A2C1  4D                 	db	77
  4255  00A2C2  49                 	db	73
  4256  00A2C3  54                 	db	84
  4257  00A2C4  00                 	db	0
  4258  00A2C5                     __end_of_cw_limit_string:
  4259                           	opt stack 0
  4260  00A2C5                     _bit_pattern_ae:
  4261                           	opt stack 0
  4262  00A2C5  0A                 	db	10
  4263  00A2C6  00                 	db	0
  4264  00A2C7  0E                 	db	14
  4265  00A2C8  01                 	db	1
  4266  00A2C9  0F                 	db	15
  4267  00A2CA  11                 	db	17
  4268  00A2CB  0F                 	db	15
  4269  00A2CC  00                 	db	0
  4270  00A2CD                     __end_of_bit_pattern_ae:
  4271                           	opt stack 0
  4272  00A2CD                     _bit_pattern_degree:
  4273                           	opt stack 0
  4274  00A2CD  18                 	db	24
  4275  00A2CE  18                 	db	24
  4276  00A2CF  00                 	db	0
  4277  00A2D0  00                 	db	0
  4278  00A2D1  00                 	db	0
  4279  00A2D2  00                 	db	0
  4280  00A2D3  00                 	db	0
  4281  00A2D4  00                 	db	0
  4282  00A2D5                     __end_of_bit_pattern_degree:
  4283                           	opt stack 0
  4284  00A2D5                     _bit_pattern_verticalbar:
  4285                           	opt stack 0
  4286  00A2D5  04                 	db	4
  4287  00A2D6  04                 	db	4
  4288  00A2D7  04                 	db	4
  4289  00A2D8  04                 	db	4
  4290  00A2D9  04                 	db	4
  4291  00A2DA  04                 	db	4
  4292  00A2DB  04                 	db	4
  4293  00A2DC  04                 	db	4
  4294  00A2DD                     __end_of_bit_pattern_verticalbar:
  4295                           	opt stack 0
  4296  00A2DD                     _flash_command_pagesize_528:
  4297                           	opt stack 0
  4298  00A2DD  3D                 	db	61
  4299  00A2DE  2A                 	db	42
  4300  00A2DF  80                 	db	128
  4301  00A2E0  A7                 	db	167
  4302  00A2E1                     __end_of_flash_command_pagesize_528:
  4303                           	opt stack 0
  4304  00A2E1                     _flash_command_pagesize_512:
  4305                           	opt stack 0
  4306  00A2E1  3D                 	db	61
  4307  00A2E2  2A                 	db	42
  4308  00A2E3  80                 	db	128
  4309  00A2E4  A6                 	db	166
  4310  00A2E5                     __end_of_flash_command_pagesize_512:
  4311                           	opt stack 0
  4312  00A2E5                     _sd000:
  4313                           	opt stack 0
  4314  00A2E5  04                 	db	4
  4315  00A2E6  03                 	db	3
  4316  00A2E7  0409               	dw	1033
  4317  00A2E9                     __end_of_sd000:
  4318                           	opt stack 0
  4319  0000                     _RPINR22	set	3837
  4320  0000                     _RPOR23	set	3799
  4321  0000                     _RPOR21	set	3797
  4322  0000                     _RPINR21	set	3836
  4323  0000                     _RPOR4	set	3780
  4324  0000                     _PPSCONbits	set	3775
  4325  0000                     _CCPTMRS0bits	set	3922
  4326  0000                     _ANCON0bits	set	3912
  4327  0000                     _ANCON1bits	set	3913
  4328  0000                     _UEP0bits	set	3878
  4329  0000                     _UIEbits	set	3894
  4330  0000                     _UADDR	set	3896
  4331  0000                     _UIE	set	3894
  4332  0000                     _UEIE	set	3895
  4333  0000                     _UCFG	set	3897
  4334  0000                     _UEP1	set	3879
  4335  0000                     _UEP0	set	3878
  4336  0000                     _ADRESL	set	4035
  4337  0000                     _ADRESH	set	4036
  4338  0000                     _ADCON1bits	set	4033
  4339  0000                     _ADCON0bits	set	4034
  4340  0000                     _PORTA	set	3968
  4341  0000                     _PORTE	set	3972
  4342  0000                     _TMR2	set	4044
  4343  0000                     _PIE1bits	set	3997
  4344  0000                     _CCPR1L	set	4027
  4345  0000                     _PR2	set	4043
  4346  0000                     _T2CONbits	set	4042
  4347  0000                     _CCP1CONbits	set	4026
  4348  0000                     _RXADDRL	set	3945
  4349  0000                     _RXADDRH	set	3944
  4350  0000                     _DMABCL	set	3943
  4351  0000                     _DMABCH	set	3942
  4352  0000                     _TXADDRL	set	3947
  4353  0000                     _TXADDRH	set	3946
  4354  0000                     _DMACON2bits	set	3974
  4355  0000                     _DMACON1bits	set	3976
  4356  0000                     _SSP2CON1bits	set	3954
  4357  0000                     _SSP2STATbits	set	3955
  4358  0000                     _PORTDbits	set	3971
  4359  0000                     _PORTEbits	set	3972
  4360  0000                     _SSP1BUF	set	4041
  4361  0000                     _SSP1CON2bits	set	4037
  4362  0000                     _SSP1CON1bits	set	4038
  4363  0000                     _SSP1ADD	set	4040
  4364  0000                     _SSP1STATbits	set	4039
  4365  0000                     _PORTAbits	set	3968
  4366  0000                     _T0CONbits	set	4053
  4367  0000                     _TRISEbits	set	3990
  4368  0000                     _EECON2	set	4007
  4369  0000                     _LATBbits	set	3978
  4370  0000                     _LATAbits	set	3977
  4371  0000                     _TRISAbits	set	3986
  4372  0000                     _LATCbits	set	3979
  4373  0000                     _TRISCbits	set	3988
  4374  0000                     _TRISBbits	set	3987
  4375  0000                     _LATDbits	set	3980
  4376  0000                     _TRISDbits	set	3989
  4377  0000                     _TMR0L	set	4054
  4378  0000                     _TMR0H	set	4055
  4379  0000                     _PIR1bits	set	3998
  4380  0000                     _OSCCON	set	4051
  4381  0000                     _OSCTUNEbits	set	3995
  4382  0000                     _INTCONbits	set	4082
  4383  0000                     _IPR2bits	set	4002
  4384  0000                     _RCONbits	set	4048
  4385  0000                     _UCON	set	3941
  4386  0000                     _USTAT	set	3940
  4387  0000                     _PIR2bits	set	4001
  4388  0000                     _UIRbits	set	3938
  4389  0000                     _UCONbits	set	3941
  4390  0000                     _UIR	set	3938
  4391  0000                     _UEIR	set	3939
  4392  0000                     _PIE2bits	set	4000
  4393  00A2E9                     STR_18:
  4394                           
  4395                           ; BSR set to: 1
  4396  00A2E9  68                 	db	104	;'h'
  4397  00A2EA  65                 	db	101	;'e'
  4398  00A2EB  6C                 	db	108	;'l'
  4399  00A2EC  6C                 	db	108	;'l'
  4400  00A2ED  6F                 	db	111	;'o'
  4401  00A2EE  20                 	db	32
  4402  00A2EF  77                 	db	119	;'w'
  4403  00A2F0  6F                 	db	111	;'o'
  4404  00A2F1  72                 	db	114	;'r'
  4405  00A2F2  6C                 	db	108	;'l'
  4406  00A2F3  64                 	db	100	;'d'
  4407  00A2F4  21                 	db	33
  4408  00A2F5  00                 	db	0
  4409  00A2F6                     STR_15:
  4410                           
  4411                           ; BSR set to: 1
  4412  00A2F6  53                 	db	83	;'S'
  4413  00A2F7  74                 	db	116	;'t'
  4414  00A2F8  65                 	db	101	;'e'
  4415  00A2F9  70                 	db	112	;'p'
  4416  00A2FA  70                 	db	112	;'p'
  4417  00A2FB  65                 	db	101	;'e'
  4418  00A2FC  72                 	db	114	;'r'
  4419  00A2FD  43                 	db	67	;'C'
  4420  00A2FE  74                 	db	116	;'t'
  4421  00A2FF  72                 	db	114	;'r'
  4422  00A300  6C                 	db	108	;'l'
  4423  00A301  00                 	db	0
  4424  00A302                     STR_16:
  4425                           
  4426                           ; BSR set to: 1
  4427  00A302  46                 	db	70	;'F'
  4428  00A303  49                 	db	73	;'I'
  4429  00A304  4C                 	db	76	;'L'
  4430  00A305  45                 	db	69	;'E'
  4431  00A306  20                 	db	32
  4432  00A307  20                 	db	32
  4433  00A308  20                 	db	32
  4434  00A309  20                 	db	32
  4435  00A30A  00                 	db	0
  4436  00A30B                     STR_7:
  4437                           
  4438                           ; BSR set to: 1
  4439  00A30B  4D                 	db	77	;'M'
  4440  00A30C  53                 	db	83	;'S'
  4441  00A30D  44                 	db	68	;'D'
  4442  00A30E  4F                 	db	79	;'O'
  4443  00A30F  53                 	db	83	;'S'
  4444  00A310  35                 	db	53	;'5'
  4445  00A311  2E                 	db	46
  4446  00A312  30                 	db	48	;'0'
  4447  00A313  00                 	db	0
  4448  00A314                     STR_1:
  4449                           
  4450                           ; BSR set to: 1
  4451  00A314  20                 	db	32
  4452  00A315  20                 	db	32
  4453  00A316  20                 	db	32
  4454  00A317  20                 	db	32
  4455  00A318  20                 	db	32
  4456  00A319  20                 	db	32
  4457  00A31A  20                 	db	32
  4458  00A31B  20                 	db	32
  4459  00A31C  00                 	db	0
  4460  00A31D                     STR_2:
  4461                           
  4462                           ; BSR set to: 1
  4463  00A31D  43                 	db	67	;'C'
  4464  00A31E  61                 	db	97	;'a'
  4465  00A31F  6E                 	db	110	;'n'
  4466  00A320  63                 	db	99	;'c'
  4467  00A321  65                 	db	101	;'e'
  4468  00A322  6C                 	db	108	;'l'
  4469  00A323  00                 	db	0
  4470  00A324                     STR_6:
  4471                           
  4472                           ; BSR set to: 1
  4473  00A324  53                 	db	83	;'S'
  4474  00A325  74                 	db	116	;'t'
  4475  00A326  6F                 	db	111	;'o'
  4476  00A327  70                 	db	112	;'p'
  4477  00A328  20                 	db	32
  4478  00A329  00                 	db	0
  4479  00A32A                     STR_17:
  4480                           
  4481                           ; BSR set to: 1
  4482  00A32A  54                 	db	84	;'T'
  4483  00A32B  58                 	db	88	;'X'
  4484  00A32C  54                 	db	84	;'T'
  4485  00A32D  00                 	db	0
  4486  0000                     
  4487                           ; #config settings
  4488  00A32E  00                 	db	0	; dummy byte at the end
  4489  0000                     
  4490                           	psect	cinit
  4491  01360C                     __pcinit:
  4492                           	opt stack 0
  4493  01360C                     start_initialization:
  4494                           	opt stack 0
  4495  01360C                     __initialization:
  4496                           	opt stack 0
  4497                           
  4498                           ; Initialize objects allocated to BANK4 (80 bytes)
  4499                           ; load TBLPTR registers with __pidataBANK4
  4500  01360C  0EA4               	movlw	low __pidataBANK4
  4501  01360E  6EF6               	movwf	tblptrl,c
  4502  013610  0E4B               	movlw	high __pidataBANK4
  4503  013612  6EF7               	movwf	tblptrh,c
  4504  013614  0E01               	movlw	low (__pidataBANK4 shr (0+16))
  4505  013616  6EF8               	movwf	tblptru,c
  4506  013618  EE04  F000         	lfsr	0,__pdataBANK4
  4507  01361C  EE10 F050          	lfsr	1,80
  4508  013620                     copy_data0:
  4509  013620  0009               	tblrd		*+
  4510  013622  CFF5 FFEE          	movff	tablat,postinc0
  4511  013626  50E5               	movf	postdec1,w,c
  4512  013628  50E1               	movf	fsr1l,w,c
  4513  01362A  E1FA               	bnz	copy_data0
  4514                           
  4515                           ; Initialize objects allocated to BANK2 (77 bytes)
  4516                           ; load TBLPTR registers with __pidataBANK2
  4517  01362C  0E34               	movlw	low __pidataBANK2
  4518  01362E  6EF6               	movwf	tblptrl,c
  4519  013630  0E4D               	movlw	high __pidataBANK2
  4520  013632  6EF7               	movwf	tblptrh,c
  4521  013634  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  4522  013636  6EF8               	movwf	tblptru,c
  4523  013638  EE02  F089         	lfsr	0,__pdataBANK2
  4524  01363C  EE10 F04D          	lfsr	1,77
  4525  013640                     copy_data1:
  4526  013640  0009               	tblrd		*+
  4527  013642  CFF5 FFEE          	movff	tablat,postinc0
  4528  013646  50E5               	movf	postdec1,w,c
  4529  013648  50E1               	movf	fsr1l,w,c
  4530  01364A  E1FA               	bnz	copy_data1
  4531                           
  4532                           ; Clear objects allocated to BIGRAMll (1024 bytes)
  4533  01364C  EE08  F000         	lfsr	0,__pbssBIGRAMll
  4534  013650  EE14 F000          	lfsr	1,1024
  4535  013654                     clear_0:
  4536  013654  6AEE               	clrf	postinc0,c
  4537  013656  50E5               	movf	postdec1,w,c
  4538  013658  50E1               	movf	fsr1l,w,c
  4539  01365A  E1FC               	bnz	clear_0
  4540  01365C  50E2               	movf	fsr1h,w,c
  4541  01365E  E1FA               	bnz	clear_0
  4542                           
  4543                           ; Clear objects allocated to BANK3 (184 bytes)
  4544  013660  EE03  F000         	lfsr	0,__pbssBANK3
  4545  013664  0EB8               	movlw	184
  4546  013666                     clear_1:
  4547  013666  6AEE               	clrf	postinc0,c
  4548  013668  06E8               	decf	wreg,f,c
  4549  01366A  E1FD               	bnz	clear_1
  4550                           
  4551                           ; Clear objects allocated to BANK2 (137 bytes)
  4552  01366C  EE02  F000         	lfsr	0,__pbssBANK2
  4553  013670  0E89               	movlw	137
  4554  013672                     clear_2:
  4555  013672  6AEE               	clrf	postinc0,c
  4556  013674  06E8               	decf	wreg,f,c
  4557  013676  E1FD               	bnz	clear_2
  4558                           
  4559                           ; Clear objects allocated to BANK1 (195 bytes)
  4560  013678  EE01  F000         	lfsr	0,__pbssBANK1
  4561  01367C  0EC3               	movlw	195
  4562  01367E                     clear_3:
  4563  01367E  6AEE               	clrf	postinc0,c
  4564  013680  06E8               	decf	wreg,f,c
  4565  013682  E1FD               	bnz	clear_3
  4566                           
  4567                           ; Clear objects allocated to BANK0 (2 bytes)
  4568  013684  0100               	movlb	0
  4569  013686  6BFF               	clrf	(__pbssBANK0+1)& (0+255),b
  4570  013688  6BFE               	clrf	__pbssBANK0& (0+255),b
  4571                           
  4572                           ; Clear objects allocated to COMRAM (13 bytes)
  4573  01368A  EE00  F052         	lfsr	0,__pbssCOMRAM
  4574  01368E  0E0D               	movlw	13
  4575  013690                     clear_4:
  4576  013690  6AEE               	clrf	postinc0,c
  4577  013692  06E8               	decf	wreg,f,c
  4578  013694  E1FD               	bnz	clear_4
  4579  013696                     end_of_initialization:
  4580                           	opt stack 0
  4581  013696                     __end_of__initialization:
  4582                           	opt stack 0
  4583  013696  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4584  013698  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4585  01369A  0100               	movlb	0
  4586  01369C  EFBB  F09A         	goto	_main	;jump to C main() function
  4587                           tblptru	equ	0xFF8
  4588                           tblptrh	equ	0xFF7
  4589                           tblptrl	equ	0xFF6
  4590                           tablat	equ	0xFF5
  4591                           postinc0	equ	0xFEE
  4592                           wreg	equ	0xFE8
  4593                           postdec1	equ	0xFE5
  4594                           fsr1h	equ	0xFE2
  4595                           fsr1l	equ	0xFE1
  4596                           
  4597                           	psect	bssCOMRAM
  4598  000052                     __pbssCOMRAM:
  4599                           	opt stack 0
  4600  000052                     _inPipes:
  4601                           	opt stack 0
  4602  000052                     	ds	6
  4603  000058                     _motor_current_stepcount:
  4604                           	opt stack 0
  4605  000058                     	ds	4
  4606  00005C                     _pBDTEntryEP0OutNext:
  4607                           	opt stack 0
  4608  00005C                     	ds	2
  4609  00005E                     _USBDeviceState:
  4610                           	opt stack 0
  4611  00005E                     	ds	1
  4612                           tblptru	equ	0xFF8
  4613                           tblptrh	equ	0xFF7
  4614                           tblptrl	equ	0xFF6
  4615                           tablat	equ	0xFF5
  4616                           postinc0	equ	0xFEE
  4617                           wreg	equ	0xFE8
  4618                           postdec1	equ	0xFE5
  4619                           fsr1h	equ	0xFE2
  4620                           fsr1l	equ	0xFE1
  4621                           
  4622                           	psect	bssBANK0
  4623  0000FE                     __pbssBANK0:
  4624                           	opt stack 0
  4625  0000FE                     _motor_current_speed:
  4626                           	opt stack 0
  4627  0000FE                     	ds	2
  4628                           tblptru	equ	0xFF8
  4629                           tblptrh	equ	0xFF7
  4630                           tblptrl	equ	0xFF6
  4631                           tablat	equ	0xFF5
  4632                           postinc0	equ	0xFEE
  4633                           wreg	equ	0xFE8
  4634                           postdec1	equ	0xFE5
  4635                           fsr1h	equ	0xFE2
  4636                           fsr1l	equ	0xFE1
  4637                           
  4638                           	psect	bssBANK1
  4639  000100                     __pbssBANK1:
  4640                           	opt stack 0
  4641  000100                     _gblSenseData:
  4642                           	opt stack 0
  4643  000100                     	ds	18
  4644  000112                     _outPipes:
  4645                           	opt stack 0
  4646  000112                     	ds	9
  4647  00011B                     _pBDTEntryIn:
  4648                           	opt stack 0
  4649  00011B                     	ds	6
  4650  000121                     _pBDTEntryOut:
  4651                           	opt stack 0
  4652  000121                     	ds	6
  4653  000127                     _motor_final_stepcount:
  4654                           	opt stack 0
  4655  000127                     	ds	4
  4656  00012B                     _LBA:
  4657                           	opt stack 0
  4658  00012B                     	ds	4
  4659  00012F                     _USB1msTickCount:
  4660                           	opt stack 0
  4661  00012F                     	ds	4
  4662  000133                     _config_external:
  4663                           	opt stack 0
  4664  000133                     	ds	3
  4665  000136                     _config_internal:
  4666                           	opt stack 0
  4667  000136                     	ds	3
  4668  000139                     _ep_data_out:
  4669                           	opt stack 0
  4670  000139                     	ds	3
  4671  00013C                     _ep_data_in:
  4672                           	opt stack 0
  4673  00013C                     	ds	3
  4674  00013F                     _motor_maximum_speed:
  4675                           	opt stack 0
  4676  00013F                     	ds	2
  4677  000141                     _USBInHandle:
  4678                           	opt stack 0
  4679  000141                     	ds	2
  4680  000143                     _USBOutHandle:
  4681                           	opt stack 0
  4682  000143                     	ds	2
  4683  000145                     _TransferLength:
  4684                           	opt stack 0
  4685  000145                     	ds	2
  4686  000147                     _gblMediaPresent:
  4687                           	opt stack 0
  4688  000147                     	ds	2
  4689  000149                     _USBMSDInHandle:
  4690                           	opt stack 0
  4691  000149                     	ds	2
  4692  00014B                     _USBMSDOutHandle:
  4693                           	opt stack 0
  4694  00014B                     	ds	2
  4695  00014D                     _ptrNextData:
  4696                           	opt stack 0
  4697  00014D                     	ds	2
  4698  00014F                     _pDst:
  4699                           	opt stack 0
  4700  00014F                     	ds	2
  4701  000151                     _pBDTEntryEP0OutCurrent:
  4702                           	opt stack 0
  4703  000151                     	ds	2
  4704  000153                     _enc2:
  4705                           	opt stack 0
  4706  000153                     	ds	1
  4707  000154                     _enc1:
  4708                           	opt stack 0
  4709  000154                     	ds	1
  4710  000155                     _motor_direction:
  4711                           	opt stack 0
  4712  000155                     	ds	1
  4713  000156                     _motor_mode:
  4714                           	opt stack 0
  4715  000156                     	ds	1
  4716  000157                     _motor_cue_write_index:
  4717                           	opt stack 0
  4718  000157                     	ds	1
  4719  000158                     _motor_cue_read_index:
  4720                           	opt stack 0
  4721  000158                     	ds	1
  4722  000159                     _active_configuration:
  4723                           	opt stack 0
  4724  000159                     	ds	1
  4725  00015A                     _power_state:
  4726                           	opt stack 0
  4727  00015A                     	ds	1
  4728  00015B                     _MSDCBWValid:
  4729                           	opt stack 0
  4730  00015B                     	ds	1
  4731  00015C                     _MSDHostNoData:
  4732                           	opt stack 0
  4733  00015C                     	ds	1
  4734  00015D                     _SoftDetach:
  4735                           	opt stack 0
  4736  00015D                     	ds	1
  4737  00015E                     _gblCBWLength:
  4738                           	opt stack 0
  4739  00015E                     	ds	1
  4740  00015F                     _MSDRetryAttempt:
  4741                           	opt stack 0
  4742  00015F                     	ds	1
  4743  000160                     _MSDWriteState:
  4744                           	opt stack 0
  4745  000160                     	ds	1
  4746  000161                     _MSDReadState:
  4747                           	opt stack 0
  4748  000161                     	ds	1
  4749  000162                     _MSDCommandState:
  4750                           	opt stack 0
  4751  000162                     	ds	1
  4752  000163                     _MSD_State:
  4753                           	opt stack 0
  4754  000163                     	ds	1
  4755  000164                     _USBTicksSinceSuspendEnd:
  4756                           	opt stack 0
  4757  000164                     	ds	1
  4758  000165                     _USBDeferOUTDataStagePackets:
  4759                           	opt stack 0
  4760  000165                     	ds	1
  4761  000166                     _USBDeferINDataStagePackets:
  4762                           	opt stack 0
  4763  000166                     	ds	1
  4764  000167                     _USBStatusStageEnabledFlag2:
  4765                           	opt stack 0
  4766  000167                     	ds	1
  4767  000168                     _USBStatusStageEnabledFlag1:
  4768                           	opt stack 0
  4769  000168                     	ds	1
  4770  000169                     _USBDeferStatusStagePacket:
  4771                           	opt stack 0
  4772  000169                     	ds	1
  4773  00016A                     _USBStatusStageTimeoutCounter:
  4774                           	opt stack 0
  4775  00016A                     	ds	1
  4776  00016B                     _BothEP0OutUOWNsSet:
  4777                           	opt stack 0
  4778  00016B                     	ds	1
  4779  00016C                     _endpoint_number:
  4780                           	opt stack 0
  4781  00016C                     	ds	1
  4782  00016D                     _USBBusIsSuspended:
  4783                           	opt stack 0
  4784  00016D                     	ds	1
  4785  00016E                     _RemoteWakeup:
  4786                           	opt stack 0
  4787  00016E                     	ds	1
  4788  00016F                     _controlTransferState:
  4789                           	opt stack 0
  4790  00016F                     	ds	1
  4791  000170                     _shortPacketStatus:
  4792                           	opt stack 0
  4793  000170                     	ds	1
  4794  000171                     _os:
  4795                           	opt stack 0
  4796  000171                     	ds	48
  4797  0001A1                     _config:
  4798                           	opt stack 0
  4799  0001A1                     	ds	28
  4800  0001BD                     _USBAlternateInterface:
  4801                           	opt stack 0
  4802  0001BD                     	ds	2
  4803  0001BF                     _active_protocol:
  4804                           	opt stack 0
  4805  0001BF                     	ds	1
  4806  0001C0                     _idle_rate:
  4807                           	opt stack 0
  4808  0001C0                     	ds	1
  4809  0001C1                     _USTATcopy:
  4810                           	opt stack 0
  4811  0001C1                     	ds	1
  4812  0001C2                     _USBActiveConfiguration:
  4813                           	opt stack 0
  4814  0001C2                     	ds	1
  4815                           tblptru	equ	0xFF8
  4816                           tblptrh	equ	0xFF7
  4817                           tblptrl	equ	0xFF6
  4818                           tablat	equ	0xFF5
  4819                           postinc0	equ	0xFEE
  4820                           wreg	equ	0xFE8
  4821                           postdec1	equ	0xFE5
  4822                           fsr1h	equ	0xFE2
  4823                           fsr1l	equ	0xFE1
  4824                           
  4825                           	psect	bssBANK2
  4826  000200                     __pbssBANK2:
  4827                           	opt stack 0
  4828  000200                     _gblCBW:
  4829                           	opt stack 0
  4830  000200                     	ds	31
  4831  00021F                     _params:
  4832                           	opt stack 0
  4833  00021F                     	ds	7
  4834  000226                     _motor_next_speed_check:
  4835                           	opt stack 0
  4836  000226                     	ds	4
  4837  00022A                     _gblBLKLen:
  4838                           	opt stack 0
  4839  00022A                     	ds	4
  4840  00022E                     _gblNumBLKS:
  4841                           	opt stack 0
  4842  00022E                     	ds	4
  4843  000232                     _MSBBufferIndex:
  4844                           	opt stack 0
  4845  000232                     	ds	2
  4846  000234                     _display_content:
  4847                           	opt stack 0
  4848  000234                     	ds	80
  4849  000284                     _mediaInformation:
  4850                           	opt stack 0
  4851  000284                     	ds	5
  4852                           tblptru	equ	0xFF8
  4853                           tblptrh	equ	0xFF7
  4854                           tblptrl	equ	0xFF6
  4855                           tablat	equ	0xFF5
  4856                           postinc0	equ	0xFEE
  4857                           wreg	equ	0xFE8
  4858                           postdec1	equ	0xFE5
  4859                           fsr1h	equ	0xFE2
  4860                           fsr1l	equ	0xFE1
  4861                           
  4862                           	psect	dataBANK2
  4863  000289                     __pdataBANK2:
  4864                           	opt stack 0
  4865  000289                     _LUN:
  4866                           	opt stack 0
  4867  000289                     	ds	29
  4868  0002A6                     i2c_display_init@F6942:
  4869                           	opt stack 0
  4870  0002A6                     	ds	9
  4871  0002AF                     __i2c_display_send_init_sequence@F6939:
  4872                           	opt stack 0
  4873  0002AF                     	ds	9
  4874  0002B8                     	ds	8
  4875  0002C0                     _configFile_used_name:
  4876                           	opt stack 0
  4877  0002C0                     	ds	8
  4878  0002C8                     _configFile_name:
  4879                           	opt stack 0
  4880  0002C8                     	ds	8
  4881  0002D0                     _configFile_used_extention:
  4882                           	opt stack 0
  4883  0002D0                     	ds	3
  4884  0002D3                     _configFile_extention:
  4885                           	opt stack 0
  4886  0002D3                     	ds	3
  4887                           tblptru	equ	0xFF8
  4888                           tblptrh	equ	0xFF7
  4889                           tblptrl	equ	0xFF6
  4890                           tablat	equ	0xFF5
  4891                           postinc0	equ	0xFEE
  4892                           wreg	equ	0xFE8
  4893                           postdec1	equ	0xFE5
  4894                           fsr1h	equ	0xFE2
  4895                           fsr1l	equ	0xFE1
  4896                           
  4897                           	psect	bssBANK3
  4898  000300                     __pbssBANK3:
  4899                           	opt stack 0
  4900  000300                     _motor_command_cue:
  4901                           	opt stack 0
  4902  000300                     	ds	56
  4903  000338                     _ToSendDataBuffer:
  4904                           	opt stack 0
  4905  000338                     	ds	64
  4906  000378                     _ReceivedDataBuffer:
  4907                           	opt stack 0
  4908  000378                     	ds	64
  4909                           tblptru	equ	0xFF8
  4910                           tblptrh	equ	0xFF7
  4911                           tblptrl	equ	0xFF6
  4912                           tablat	equ	0xFF5
  4913                           postinc0	equ	0xFEE
  4914                           wreg	equ	0xFE8
  4915                           postdec1	equ	0xFE5
  4916                           fsr1h	equ	0xFE2
  4917                           fsr1l	equ	0xFE1
  4918                           
  4919                           	psect	dataBANK4
  4920  000400                     __pdataBANK4:
  4921                           	opt stack 0
  4922  000400                     _dc_startup:
  4923                           	opt stack 0
  4924  000400                     	ds	80
  4925                           tblptru	equ	0xFF8
  4926                           tblptrh	equ	0xFF7
  4927                           tblptrl	equ	0xFF6
  4928                           tablat	equ	0xFF5
  4929                           postinc0	equ	0xFEE
  4930                           wreg	equ	0xFE8
  4931                           postdec1	equ	0xFE5
  4932                           fsr1h	equ	0xFE2
  4933                           fsr1l	equ	0xFE1
  4934                           
  4935                           	psect	bssBIGRAMll
  4936  000800                     __pbssBIGRAMll:
  4937                           	opt stack 0
  4938  000800                     _ConfigFile_buffer:
  4939                           	opt stack 0
  4940  000800                     	ds	512
  4941  000A00                     _buffer:
  4942                           	opt stack 0
  4943  000A00                     	ds	512
  4944                           tblptru	equ	0xFF8
  4945                           tblptrh	equ	0xFF7
  4946                           tblptrl	equ	0xFF6
  4947                           tablat	equ	0xFF5
  4948                           postinc0	equ	0xFEE
  4949                           wreg	equ	0xFE8
  4950                           postdec1	equ	0xFE5
  4951                           fsr1h	equ	0xFE2
  4952                           fsr1l	equ	0xFE1
  4953                           
  4954                           	psect	cstackBANK1
  4955  0001C3                     __pcstackBANK1:
  4956                           	opt stack 0
  4957  0001C3                     ??_configFile_read:
  4958                           
  4959                           ; 1 bytes @ 0x0
  4960  0001C3                     	ds	8
  4961  0001CB                     configFile_read@item_string:
  4962                           	opt stack 0
  4963                           
  4964                           ; 31 bytes @ 0x8
  4965  0001CB                     	ds	31
  4966  0001EA                     configFile_read@value_string:
  4967                           	opt stack 0
  4968                           
  4969                           ; 12 bytes @ 0x27
  4970  0001EA                     	ds	12
  4971  0001F6                     configFile_read@file_size:
  4972                           	opt stack 0
  4973                           
  4974                           ; 4 bytes @ 0x33
  4975  0001F6                     	ds	4
  4976  0001FA                     configFile_read@file_number:
  4977                           	opt stack 0
  4978                           
  4979                           ; 1 bytes @ 0x37
  4980  0001FA                     	ds	1
  4981  0001FB                     configFile_read@position:
  4982                           	opt stack 0
  4983                           
  4984                           ; 4 bytes @ 0x38
  4985  0001FB                     	ds	4
  4986                           tblptru	equ	0xFF8
  4987                           tblptrh	equ	0xFF7
  4988                           tblptrl	equ	0xFF6
  4989                           tablat	equ	0xFF5
  4990                           postinc0	equ	0xFEE
  4991                           wreg	equ	0xFE8
  4992                           postdec1	equ	0xFE5
  4993                           fsr1h	equ	0xFE2
  4994                           fsr1l	equ	0xFE1
  4995                           
  4996                           	psect	cstackBANK0
  4997  000060                     __pcstackBANK0:
  4998                           	opt stack 0
  4999  000060                     ??_motor_stop:
  5000  000060                     ??_isdigit:
  5001  000060                     ??__i2c_wait_idle:
  5002  000060                     ??__display_clear:
  5003  000060                     ??__divide_jump_size_increment:
  5004  000060                     ??__divide_jump_size_decrement:
  5005  000060                     ?_USBTransferOnePacket:
  5006                           	opt stack 0
  5007  000060                     ?_ExternalFlash_MediaInitialize:
  5008                           	opt stack 0
  5009  000060                     ?_ExternalFlash_SectorSizeRead:
  5010                           	opt stack 0
  5011  000060                     ?_strlen:
  5012                           	opt stack 0
  5013  000060                     ?_strncmp:
  5014                           	opt stack 0
  5015  000060                     ?__sector_from_file_number:
  5016                           	opt stack 0
  5017  000060                     ?__offset_from_file_number:
  5018                           	opt stack 0
  5019  000060                     ?__data_sector_from_cluster:
  5020                           	opt stack 0
  5021  000060                     ?__fat_sector_from_cluster:
  5022                           	opt stack 0
  5023  000060                     ?__fat_offset_from_cluster:
  5024                           	opt stack 0
  5025  000060                     ?__cluster_from_sector_and_offset:
  5026                           	opt stack 0
  5027  000060                     ?__get_available_offset_from_buffer:
  5028                           	opt stack 0
  5029  000060                     ?__read_value_from_offset:
  5030                           	opt stack 0
  5031  000060                     ?__get_time:
  5032                           	opt stack 0
  5033  000060                     ?__get_date:
  5034                           	opt stack 0
  5035  000060                     ?__encoder_next_setup_stepsize:
  5036                           	opt stack 0
  5037  000060                     ?__encoder_next_arc_step_size:
  5038                           	opt stack 0
  5039  000060                     ?___wmul:
  5040                           	opt stack 0
  5041  000060                     ?___lwdiv:
  5042                           	opt stack 0
  5043  000060                     ?___lwmod:
  5044                           	opt stack 0
  5045  000060                     ?_ExternalFlash_CapacityRead:
  5046                           	opt stack 0
  5047  000060                     ?___lmul:
  5048                           	opt stack 0
  5049  000060                     ?___lldiv:
  5050                           	opt stack 0
  5051  000060                     ?___aldiv:
  5052                           	opt stack 0
  5053  000060                     ?___almod:
  5054                           	opt stack 0
  5055  000060                     ?___fltol:
  5056                           	opt stack 0
  5057  000060                     ?___llmod:
  5058                           	opt stack 0
  5059  000060                     ?___xxtofl:
  5060                           	opt stack 0
  5061  000060                     USBTransferOnePacket@dir:
  5062                           	opt stack 0
  5063  000060                     USBStallEndpoint@dir:
  5064                           	opt stack 0
  5065  000060                     __i2c_send@dat:
  5066                           	opt stack 0
  5067  000060                     display_get_character@position:
  5068                           	opt stack 0
  5069  000060                     __encoder_next_divide_step_size@old_stepsize:
  5070                           	opt stack 0
  5071  000060                     toupper@c:
  5072                           	opt stack 0
  5073  000060                     MSDComputeDeviceInAndResidue@DiExpected:
  5074                           	opt stack 0
  5075  000060                     SYSTEM_Initialize@pll_startup_counter:
  5076                           	opt stack 0
  5077  000060                     ExternalFlash_MediaInitialize@config:
  5078                           	opt stack 0
  5079  000060                     ExternalFlash_SectorSizeRead@config:
  5080                           	opt stack 0
  5081  000060                     ExternalFlash_CapacityRead@config:
  5082                           	opt stack 0
  5083  000060                     ExternalFlash_MediaDetect@config:
  5084                           	opt stack 0
  5085  000060                     ExternalFlash_WriteProtectStateGet@config:
  5086                           	opt stack 0
  5087  000060                     __data_sector_from_cluster@fat_cluster:
  5088                           	opt stack 0
  5089  000060                     __fat_sector_from_cluster@cluster:
  5090                           	opt stack 0
  5091  000060                     __fat_offset_from_cluster@cluster:
  5092                           	opt stack 0
  5093  000060                     __cluster_from_sector_and_offset@sector:
  5094                           	opt stack 0
  5095  000060                     __get_available_offset_from_buffer@minimum_offset:
  5096                           	opt stack 0
  5097  000060                     __read_value_from_offset@offset:
  5098                           	opt stack 0
  5099  000060                     __write_value_to_offset@offset:
  5100                           	opt stack 0
  5101  000060                     __get_mbr@idx:
  5102                           	opt stack 0
  5103  000060                     __get_fbr@idx:
  5104                           	opt stack 0
  5105  000060                     __get_fat@idx:
  5106                           	opt stack 0
  5107  000060                     __get_root@idx:
  5108                           	opt stack 0
  5109  000060                     __get_data@idx:
  5110                           	opt stack 0
  5111  000060                     spi_tx@data:
  5112                           	opt stack 0
  5113  000060                     spi_tx_tx@command:
  5114                           	opt stack 0
  5115  000060                     spi_tx_rx@command:
  5116                           	opt stack 0
  5117  000060                     __fill_buffer_get_mode_details@outBuffer:
  5118                           	opt stack 0
  5119  000060                     motor_change_speed@new_speed:
  5120                           	opt stack 0
  5121  000060                     __encoder_next_setup_stepsize@old_stepsize:
  5122                           	opt stack 0
  5123  000060                     __encoder_next_arc_step_size@old_stepsize:
  5124                           	opt stack 0
  5125  000060                     __get_item@item_string:
  5126                           	opt stack 0
  5127  000060                     ___wmul@multiplier:
  5128                           	opt stack 0
  5129  000060                     ___lwdiv@dividend:
  5130                           	opt stack 0
  5131  000060                     ___lwmod@dividend:
  5132                           	opt stack 0
  5133  000060                     memcpy@d1:
  5134                           	opt stack 0
  5135  000060                     memset@p1:
  5136                           	opt stack 0
  5137  000060                     strlen@s:
  5138                           	opt stack 0
  5139  000060                     strncmp@s1:
  5140                           	opt stack 0
  5141  000060                     __spi_init@details:
  5142                           	opt stack 0
  5143  000060                     ___lmul@multiplier:
  5144                           	opt stack 0
  5145  000060                     ___lldiv@dividend:
  5146                           	opt stack 0
  5147  000060                     ___aldiv@dividend:
  5148                           	opt stack 0
  5149  000060                     ___almod@dividend:
  5150                           	opt stack 0
  5151  000060                     ___fltol@f1:
  5152                           	opt stack 0
  5153  000060                     ___llmod@dividend:
  5154                           	opt stack 0
  5155  000060                     ___xxtofl@val:
  5156                           	opt stack 0
  5157                           
  5158                           ; 4 bytes @ 0x0
  5159  000060                     	ds	1
  5160  000061                     ??_USBStallEndpoint:
  5161  000061                     ??_display_get_character:
  5162  000061                     ?_stricmp:
  5163                           	opt stack 0
  5164  000061                     _isdigit$8180:
  5165                           	opt stack 0
  5166  000061                     USBTransferOnePacket@data:
  5167                           	opt stack 0
  5168  000061                     stricmp@s1:
  5169                           	opt stack 0
  5170                           
  5171                           ; 2 bytes @ 0x1
  5172  000061                     	ds	1
  5173  000062                     ??_MSDComputeDeviceInAndResidue:
  5174  000062                     ??_strlen:
  5175  000062                     ??__fill_buffer_get_mode_details:
  5176  000062                     ??__get_mbr:
  5177  000062                     ??__get_fbr:
  5178  000062                     ??__get_fat:
  5179  000062                     ??__get_root:
  5180  000062                     ??__encoder_next_setup_stepsize:
  5181  000062                     ??__encoder_next_arc_step_size:
  5182  000062                     __display_clear@row:
  5183                           	opt stack 0
  5184  000062                     __sector_from_file_number@file_number:
  5185                           	opt stack 0
  5186  000062                     __offset_from_file_number@file_number:
  5187                           	opt stack 0
  5188  000062                     isdigit@c:
  5189                           	opt stack 0
  5190  000062                     SYSTEM_Initialize@pll_startup_counter_3132:
  5191                           	opt stack 0
  5192  000062                     __cluster_from_sector_and_offset@offset:
  5193                           	opt stack 0
  5194  000062                     __get_available_offset_from_buffer@buffer:
  5195                           	opt stack 0
  5196  000062                     __read_value_from_offset@buffer:
  5197                           	opt stack 0
  5198  000062                     __write_value_to_offset@buffer:
  5199                           	opt stack 0
  5200  000062                     spi_tx@length:
  5201                           	opt stack 0
  5202  000062                     spi_tx_tx@command_length:
  5203                           	opt stack 0
  5204  000062                     spi_tx_rx@command_length:
  5205                           	opt stack 0
  5206  000062                     motor_set_manual_speed@new_speed:
  5207                           	opt stack 0
  5208  000062                     __get_item@value_string:
  5209                           	opt stack 0
  5210  000062                     ___wmul@multiplicand:
  5211                           	opt stack 0
  5212  000062                     ___lwdiv@divisor:
  5213                           	opt stack 0
  5214  000062                     ___lwmod@divisor:
  5215                           	opt stack 0
  5216  000062                     memcpy@s1:
  5217                           	opt stack 0
  5218  000062                     memset@c:
  5219                           	opt stack 0
  5220  000062                     strncmp@s2:
  5221                           	opt stack 0
  5222                           
  5223                           ; 2 bytes @ 0x2
  5224  000062                     	ds	1
  5225  000063                     USBTransferOnePacket@len:
  5226                           	opt stack 0
  5227  000063                     __display_clear@col:
  5228                           	opt stack 0
  5229  000063                     display_get_character@line:
  5230                           	opt stack 0
  5231  000063                     spi_init@configuration:
  5232                           	opt stack 0
  5233  000063                     __sector_from_file_number@sector:
  5234                           	opt stack 0
  5235  000063                     __offset_from_file_number@offset:
  5236                           	opt stack 0
  5237  000063                     stricmp@s2:
  5238                           	opt stack 0
  5239                           
  5240                           ; 2 bytes @ 0x3
  5241  000063                     	ds	1
  5242  000064                     ??_USBTransferOnePacket:
  5243  000064                     ??_spi_tx:
  5244  000064                     ??__get_available_offset_from_buffer:
  5245  000064                     ??__read_value_from_offset:
  5246  000064                     ??___fltol:
  5247  000064                     ??___xxtofl:
  5248  000064                     SYSTEM_Initialize@state:
  5249                           	opt stack 0
  5250  000064                     ___lwmod@counter:
  5251                           	opt stack 0
  5252  000064                     __write_value_to_offset@value:
  5253                           	opt stack 0
  5254  000064                     spi_tx_tx@data:
  5255                           	opt stack 0
  5256  000064                     spi_tx_rx@data:
  5257                           	opt stack 0
  5258  000064                     __fill_buffer_get_display@outBuffer:
  5259                           	opt stack 0
  5260  000064                     __parse_set_manual_speed@data:
  5261                           	opt stack 0
  5262  000064                     __get_item@buffer:
  5263                           	opt stack 0
  5264  000064                     ___wmul@product:
  5265                           	opt stack 0
  5266  000064                     ___lwdiv@quotient:
  5267                           	opt stack 0
  5268  000064                     memcpy@n:
  5269                           	opt stack 0
  5270  000064                     memset@n:
  5271                           	opt stack 0
  5272  000064                     strlen@cp:
  5273                           	opt stack 0
  5274  000064                     strncmp@len:
  5275                           	opt stack 0
  5276  000064                     ___lmul@multiplicand:
  5277                           	opt stack 0
  5278  000064                     ___lldiv@divisor:
  5279                           	opt stack 0
  5280  000064                     ___aldiv@divisor:
  5281                           	opt stack 0
  5282  000064                     ___almod@divisor:
  5283                           	opt stack 0
  5284  000064                     ___llmod@divisor:
  5285                           	opt stack 0
  5286                           
  5287                           ; 4 bytes @ 0x4
  5288  000064                     	ds	1
  5289  000065                     ??_stricmp:
  5290  000065                     USBStallEndpoint@ep:
  5291                           	opt stack 0
  5292  000065                     __i2c_eeprom_busy@busy:
  5293                           	opt stack 0
  5294  000065                     __i2c_write@data:
  5295                           	opt stack 0
  5296  000065                     __i2c_read@data:
  5297                           	opt stack 0
  5298  000065                     i2c_display_write_fixed@data:
  5299                           	opt stack 0
  5300                           
  5301                           ; 2 bytes @ 0x5
  5302  000065                     	ds	1
  5303  000066                     ??_strncmp:
  5304  000066                     ??__write_value_to_offset:
  5305  000066                     ??__get_item:
  5306  000066                     ?_atoi:
  5307                           	opt stack 0
  5308  000066                     __fill_buffer_get_display@secondHalf:
  5309                           	opt stack 0
  5310  000066                     ___lwdiv@counter:
  5311                           	opt stack 0
  5312  000066                     stricmp@r:
  5313                           	opt stack 0
  5314  000066                     USBStallEndpoint@p:
  5315                           	opt stack 0
  5316  000066                     __get_available_offset_from_buffer@offset:
  5317                           	opt stack 0
  5318  000066                     spi_tx_tx@data_length:
  5319                           	opt stack 0
  5320  000066                     spi_tx_rx@data_length:
  5321                           	opt stack 0
  5322  000066                     __parse_set_manual_speed@out_buffer:
  5323                           	opt stack 0
  5324  000066                     atoi@s:
  5325                           	opt stack 0
  5326  000066                     memcpy@d:
  5327                           	opt stack 0
  5328  000066                     memset@p:
  5329                           	opt stack 0
  5330                           
  5331                           ; 2 bytes @ 0x6
  5332  000066                     	ds	1
  5333  000067                     ??__fill_buffer_get_display:
  5334  000067                     __i2c_write@length:
  5335                           	opt stack 0
  5336  000067                     __i2c_read@length:
  5337                           	opt stack 0
  5338  000067                     i2c_display_write_fixed@length:
  5339                           	opt stack 0
  5340  000067                     __read_value_from_offset@value:
  5341                           	opt stack 0
  5342  000067                     utoa@buf:
  5343                           	opt stack 0
  5344                           
  5345                           ; 2 bytes @ 0x7
  5346  000067                     	ds	1
  5347  000068                     ??_spi_tx_rx:
  5348  000068                     ??_spi_tx_tx:
  5349  000068                     ??_atoi:
  5350  000068                     ??__i2c_read:
  5351  000068                     USBDeviceInit@i:
  5352                           	opt stack 0
  5353  000068                     USBTransferOnePacket@ep:
  5354                           	opt stack 0
  5355  000068                     MSDErrorHandler@ErrorCase:
  5356                           	opt stack 0
  5357  000068                     __i2c_write@slave_address:
  5358                           	opt stack 0
  5359  000068                     i2c_display_write_fixed@pos:
  5360                           	opt stack 0
  5361  000068                     __flash_wakeup@command:
  5362                           	opt stack 0
  5363  000068                     ___aldiv@counter:
  5364                           	opt stack 0
  5365  000068                     ___almod@counter:
  5366                           	opt stack 0
  5367  000068                     ___fltol@sign1:
  5368                           	opt stack 0
  5369  000068                     ___llmod@counter:
  5370                           	opt stack 0
  5371  000068                     ___xxtofl@sign:
  5372                           	opt stack 0
  5373  000068                     __parse_set_manual_speed@out_idx_ptr:
  5374                           	opt stack 0
  5375  000068                     memcpy@s:
  5376                           	opt stack 0
  5377  000068                     ___lmul@product:
  5378                           	opt stack 0
  5379  000068                     ___lldiv@quotient:
  5380                           	opt stack 0
  5381                           
  5382                           ; 4 bytes @ 0x8
  5383  000068                     	ds	1
  5384  000069                     MSDErrorHandler@OldMSD_State:
  5385                           	opt stack 0
  5386  000069                     __i2c_write@cntr:
  5387                           	opt stack 0
  5388  000069                     __get_item@value_ctr:
  5389                           	opt stack 0
  5390  000069                     ___aldiv@sign:
  5391                           	opt stack 0
  5392  000069                     ___almod@sign:
  5393                           	opt stack 0
  5394  000069                     ___fltol@exp1:
  5395                           	opt stack 0
  5396  000069                     ___xxtofl@exp:
  5397                           	opt stack 0
  5398  000069                     USBTransferOnePacket@handle:
  5399                           	opt stack 0
  5400  000069                     utoa@val:
  5401                           	opt stack 0
  5402                           
  5403                           ; 2 bytes @ 0x9
  5404  000069                     	ds	1
  5405  00006A                     ??__parse_set_manual_speed:
  5406  00006A                     ??_i2c_display_init:
  5407  00006A                     __ic2_display_set_ddram_address@address:
  5408                           	opt stack 0
  5409  00006A                     __get_item@item_ctr:
  5410                           	opt stack 0
  5411  00006A                     atoi@sign:
  5412                           	opt stack 0
  5413  00006A                     memcpy@tmp:
  5414                           	opt stack 0
  5415  00006A                     __ic2_display_set_cgram_address@data_array:
  5416                           	opt stack 0
  5417  00006A                     MSDCheckForErrorCases@DeviceBytes:
  5418                           	opt stack 0
  5419  00006A                     ___aldiv@quotient:
  5420                           	opt stack 0
  5421  00006A                     ___xxtofl@arg:
  5422                           	opt stack 0
  5423                           
  5424                           ; 4 bytes @ 0xA
  5425  00006A                     	ds	1
  5426  00006B                     __ic2_display_set_ddram_address@data_array:
  5427                           	opt stack 0
  5428  00006B                     __fill_buffer_get_status@outBuffer:
  5429                           	opt stack 0
  5430  00006B                     __parse_set_manual_speed@new_speed:
  5431                           	opt stack 0
  5432  00006B                     atoi@a:
  5433                           	opt stack 0
  5434  00006B                     utoa@base:
  5435                           	opt stack 0
  5436  00006B                     i2c_display_init@init_sequence:
  5437                           	opt stack 0
  5438                           
  5439                           ; 9 bytes @ 0xB
  5440  00006B                     	ds	1
  5441  00006C                     ?__flash_get_status:
  5442                           	opt stack 0
  5443  00006C                     ?_atol:
  5444                           	opt stack 0
  5445  00006C                     __fill_buffer_get_display@cntr:
  5446                           	opt stack 0
  5447  00006C                     ___lldiv@counter:
  5448                           	opt stack 0
  5449  00006C                     atol@s:
  5450                           	opt stack 0
  5451                           
  5452                           ; 2 bytes @ 0xC
  5453  00006C                     	ds	1
  5454  00006D                     __ic2_display_set_cgram_address@address:
  5455                           	opt stack 0
  5456  00006D                     i2c_display_cursor@position:
  5457                           	opt stack 0
  5458  00006D                     __fill_buffer_get_display@line:
  5459                           	opt stack 0
  5460  00006D                     utoa@v:
  5461                           	opt stack 0
  5462  00006D                     ultoa@buf:
  5463                           	opt stack 0
  5464                           
  5465                           ; 2 bytes @ 0xD
  5466  00006D                     	ds	1
  5467  00006E                     ?___fldiv:
  5468                           	opt stack 0
  5469  00006E                     ?___flmul:
  5470                           	opt stack 0
  5471  00006E                     ?___flneg:
  5472                           	opt stack 0
  5473  00006E                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  5474                           	opt stack 0
  5475  00006E                     i2c_display_cursor@line:
  5476                           	opt stack 0
  5477  00006E                     __flash_get_status@command:
  5478                           	opt stack 0
  5479  00006E                     __fill_buffer_get_display@start_line:
  5480                           	opt stack 0
  5481  00006E                     i2c_display_program_custom_character@bit_pattern:
  5482                           	opt stack 0
  5483  00006E                     ___flneg@f1:
  5484                           	opt stack 0
  5485  00006E                     ___fldiv@b:
  5486                           	opt stack 0
  5487  00006E                     ___flmul@b:
  5488                           	opt stack 0
  5489                           
  5490                           ; 4 bytes @ 0xE
  5491  00006E                     	ds	1
  5492  00006F                     MSDCheckForErrorCases@MSDErrorCase:
  5493                           	opt stack 0
  5494  00006F                     __i2c_read@slave_address:
  5495                           	opt stack 0
  5496  00006F                     i2c_display_cursor@address:
  5497                           	opt stack 0
  5498  00006F                     __fill_buffer_get_display@position:
  5499                           	opt stack 0
  5500  00006F                     utoa@c:
  5501                           	opt stack 0
  5502  00006F                     __flash_get_status@status:
  5503                           	opt stack 0
  5504  00006F                     ultoa@val:
  5505                           	opt stack 0
  5506                           
  5507                           ; 4 bytes @ 0xF
  5508  00006F                     	ds	1
  5509  000070                     ??_atol:
  5510  000070                     ??_i2c_display_program_custom_character:
  5511  000070                     MSDCheckForErrorCases@DeviceNoData:
  5512                           	opt stack 0
  5513  000070                     __i2c_read@cntr:
  5514                           	opt stack 0
  5515  000070                     display_update@line:
  5516                           	opt stack 0
  5517  000070                     api_prepare@inBuffer:
  5518                           	opt stack 0
  5519  000070                     itoa@buf:
  5520                           	opt stack 0
  5521                           
  5522                           ; 2 bytes @ 0x10
  5523  000070                     	ds	1
  5524  000071                     i2c_eeprom_read@address:
  5525                           	opt stack 0
  5526  000071                     __flash_is_busy@status:
  5527                           	opt stack 0
  5528                           
  5529                           ; 2 bytes @ 0x11
  5530  000071                     	ds	1
  5531  000072                     ?___fladd:
  5532                           	opt stack 0
  5533  000072                     api_prepare@outBuffer:
  5534                           	opt stack 0
  5535  000072                     itoa@val:
  5536                           	opt stack 0
  5537  000072                     ___fladd@b:
  5538                           	opt stack 0
  5539  000072                     ___fldiv@a:
  5540                           	opt stack 0
  5541  000072                     ___flmul@a:
  5542                           	opt stack 0
  5543                           
  5544                           ; 4 bytes @ 0x12
  5545  000072                     	ds	1
  5546  000073                     i2c_eeprom_read@data:
  5547                           	opt stack 0
  5548  000073                     __flash_copy_page_to_buffer@page:
  5549                           	opt stack 0
  5550  000073                     __flash_compare_page_to_buffer@page:
  5551                           	opt stack 0
  5552  000073                     __flash_write_to_buffer@start:
  5553                           	opt stack 0
  5554  000073                     __flash_write_page_from_buffer@page:
  5555                           	opt stack 0
  5556  000073                     __flash_partial_read@page:
  5557                           	opt stack 0
  5558  000073                     ultoa@base:
  5559                           	opt stack 0
  5560  000073                     __flash_set_page_size@command:
  5561                           	opt stack 0
  5562                           
  5563                           ; 4 bytes @ 0x13
  5564  000073                     	ds	1
  5565  000074                     api_prepare@command:
  5566                           	opt stack 0
  5567  000074                     atol@sign:
  5568                           	opt stack 0
  5569  000074                     itoa@base:
  5570                           	opt stack 0
  5571  000074                     i2c_display_program_custom_character@data_array:
  5572                           	opt stack 0
  5573                           
  5574                           ; 11 bytes @ 0x14
  5575  000074                     	ds	1
  5576  000075                     i2c_eeprom_read@length:
  5577                           	opt stack 0
  5578  000075                     __flash_copy_page_to_buffer@buffer:
  5579                           	opt stack 0
  5580  000075                     __flash_compare_page_to_buffer@buffer:
  5581                           	opt stack 0
  5582  000075                     __flash_write_page_from_buffer@buffer:
  5583                           	opt stack 0
  5584  000075                     __flash_write_to_buffer@data:
  5585                           	opt stack 0
  5586  000075                     __flash_partial_read@start:
  5587                           	opt stack 0
  5588  000075                     atol@a:
  5589                           	opt stack 0
  5590  000075                     ultoa@v:
  5591                           	opt stack 0
  5592                           
  5593                           ; 4 bytes @ 0x15
  5594  000075                     	ds	1
  5595  000076                     ??_i2c_eeprom_read:
  5596  000076                     ??___fldiv:
  5597  000076                     ??___flmul:
  5598  000076                     ??__flash_copy_page_to_buffer:
  5599  000076                     ??__flash_compare_page_to_buffer:
  5600  000076                     ??__flash_write_page_from_buffer:
  5601  000076                     itoa@cp:
  5602                           	opt stack 0
  5603  000076                     ___fladd@a:
  5604                           	opt stack 0
  5605                           
  5606                           ; 4 bytes @ 0x16
  5607  000076                     	ds	1
  5608  000077                     i2c_eeprom_read@addr:
  5609                           	opt stack 0
  5610  000077                     __flash_set_page_size@size:
  5611                           	opt stack 0
  5612  000077                     __flash_write_to_buffer@data_length:
  5613                           	opt stack 0
  5614  000077                     __flash_partial_read@length:
  5615                           	opt stack 0
  5616                           
  5617                           ; 2 bytes @ 0x17
  5618  000077                     	ds	1
  5619  000078                     i2c_eeprom_read@slave_address:
  5620                           	opt stack 0
  5621  000078                     __display_padded_itoa@value:
  5622                           	opt stack 0
  5623  000078                     __display_itoa_u16@value:
  5624                           	opt stack 0
  5625                           
  5626                           ; 2 bytes @ 0x18
  5627  000078                     	ds	1
  5628  000079                     ?_i2c_eeprom_readUint32:
  5629                           	opt stack 0
  5630  000079                     __flash_write_to_buffer@buffer:
  5631                           	opt stack 0
  5632  000079                     atol@c:
  5633                           	opt stack 0
  5634  000079                     ultoa@c:
  5635                           	opt stack 0
  5636  000079                     i2c_eeprom_readUint32@address:
  5637                           	opt stack 0
  5638  000079                     __flash_compare_page_to_buffer@status:
  5639                           	opt stack 0
  5640  000079                     __flash_partial_read@data:
  5641                           	opt stack 0
  5642  000079                     __flash_copy_page_to_buffer@command:
  5643                           	opt stack 0
  5644  000079                     __flash_write_page_from_buffer@command:
  5645                           	opt stack 0
  5646                           
  5647                           ; 4 bytes @ 0x19
  5648  000079                     	ds	1
  5649  00007A                     ??___fladd:
  5650  00007A                     __display_padded_itoa@length:
  5651                           	opt stack 0
  5652  00007A                     ___flmul@sign:
  5653                           	opt stack 0
  5654  00007A                     __display_itoa_u16@text:
  5655                           	opt stack 0
  5656  00007A                     __parse_item@item_string:
  5657                           	opt stack 0
  5658  00007A                     ltoa@buf:
  5659                           	opt stack 0
  5660  00007A                     __flash_write_to_buffer@command:
  5661                           	opt stack 0
  5662  00007A                     ___fldiv@rem:
  5663                           	opt stack 0
  5664                           
  5665                           ; 4 bytes @ 0x1A
  5666  00007A                     	ds	1
  5667  00007B                     ??__flash_partial_read:
  5668  00007B                     __display_padded_itoa@text:
  5669                           	opt stack 0
  5670  00007B                     __flash_compare_page_to_buffer@command:
  5671                           	opt stack 0
  5672  00007B                     ___flmul@grs:
  5673                           	opt stack 0
  5674                           
  5675                           ; 4 bytes @ 0x1B
  5676  00007B                     	ds	1
  5677  00007C                     __display_start@cntr:
  5678                           	opt stack 0
  5679  00007C                     __parse_item@value_string:
  5680                           	opt stack 0
  5681  00007C                     ltoa@val:
  5682                           	opt stack 0
  5683                           
  5684                           ; 4 bytes @ 0x1C
  5685  00007C                     	ds	1
  5686  00007D                     ??__display_padded_itoa:
  5687  00007D                     i2c_eeprom_readUint32@data:
  5688                           	opt stack 0
  5689                           
  5690                           ; 4 bytes @ 0x1D
  5691  00007D                     	ds	1
  5692  00007E                     ___fldiv@sign:
  5693                           	opt stack 0
  5694                           
  5695                           ; 1 bytes @ 0x1E
  5696  00007E                     	ds	1
  5697  00007F                     i2c_display_program_custom_character@address:
  5698                           	opt stack 0
  5699  00007F                     ___flmul@aexp:
  5700                           	opt stack 0
  5701  00007F                     flash_sector_write@page:
  5702                           	opt stack 0
  5703  00007F                     flash_partial_write@page:
  5704                           	opt stack 0
  5705  00007F                     ___fldiv@new_exp:
  5706                           	opt stack 0
  5707  00007F                     __flash_partial_read@command:
  5708                           	opt stack 0
  5709                           
  5710                           ; 4 bytes @ 0x1F
  5711  00007F                     	ds	1
  5712  000080                     i2c_display_program_custom_character@cntr:
  5713                           	opt stack 0
  5714  000080                     ___flmul@bexp:
  5715                           	opt stack 0
  5716  000080                     ltoa@base:
  5717                           	opt stack 0
  5718                           
  5719                           ; 2 bytes @ 0x20
  5720  000080                     	ds	1
  5721  000081                     flash_sector_write@data:
  5722                           	opt stack 0
  5723  000081                     flash_partial_write@start:
  5724                           	opt stack 0
  5725  000081                     ___fldiv@grs:
  5726                           	opt stack 0
  5727  000081                     ___flmul@prod:
  5728                           	opt stack 0
  5729                           
  5730                           ; 4 bytes @ 0x21
  5731  000081                     	ds	1
  5732  000082                     ___fladd@signs:
  5733                           	opt stack 0
  5734  000082                     ltoa@cp:
  5735                           	opt stack 0
  5736  000082                     __display_padded_itoa@tmp:
  5737                           	opt stack 0
  5738                           
  5739                           ; 10 bytes @ 0x22
  5740  000082                     	ds	1
  5741  000083                     flash_sector_write@match:
  5742                           	opt stack 0
  5743  000083                     ___fladd@aexp:
  5744                           	opt stack 0
  5745  000083                     flash_partial_write@length:
  5746                           	opt stack 0
  5747  000083                     __flash_partial_read@address:
  5748                           	opt stack 0
  5749                           
  5750                           ; 4 bytes @ 0x23
  5751  000083                     	ds	1
  5752  000084                     ___fladd@bexp:
  5753                           	opt stack 0
  5754  000084                     ExternalFlash_SectorWrite@config:
  5755                           	opt stack 0
  5756  000084                     fat_format@cntr:
  5757                           	opt stack 0
  5758  000084                     __add_item@item_string:
  5759                           	opt stack 0
  5760                           
  5761                           ; 2 bytes @ 0x24
  5762  000084                     	ds	1
  5763  000085                     ___fladd@grs:
  5764                           	opt stack 0
  5765  000085                     ___fldiv@bexp:
  5766                           	opt stack 0
  5767  000085                     flash_partial_write@data:
  5768                           	opt stack 0
  5769  000085                     ___flmul@temp:
  5770                           	opt stack 0
  5771                           
  5772                           ; 2 bytes @ 0x25
  5773  000085                     	ds	1
  5774  000086                     ___fldiv@aexp:
  5775                           	opt stack 0
  5776  000086                     ExternalFlash_SectorWrite@sector_addr:
  5777                           	opt stack 0
  5778  000086                     __add_item@value:
  5779                           	opt stack 0
  5780                           
  5781                           ; 4 bytes @ 0x26
  5782  000086                     	ds	1
  5783  000087                     ??_adc_read_temperature:
  5784  000087                     ?__motor_get_speed_in_degrees:
  5785                           	opt stack 0
  5786  000087                     ?_motor_steps_from_degrees:
  5787                           	opt stack 0
  5788  000087                     ?__step_position_from_divide_position:
  5789                           	opt stack 0
  5790  000087                     flash_partial_write@match:
  5791                           	opt stack 0
  5792  000087                     flash_sector_read@page:
  5793                           	opt stack 0
  5794  000087                     flash_partial_read@page:
  5795                           	opt stack 0
  5796  000087                     motor_steps_from_degrees@degrees:
  5797                           	opt stack 0
  5798  000087                     __motor_get_speed_in_degrees@speed_index:
  5799                           	opt stack 0
  5800  000087                     __step_position_from_divide_position@divide_position:
  5801                           	opt stack 0
  5802  000087                     motor_calculate_position_in_degrees@tmp:
  5803                           	opt stack 0
  5804                           
  5805                           ; 4 bytes @ 0x27
  5806  000087                     	ds	1
  5807  000088                     __write_root@data:
  5808                           	opt stack 0
  5809                           
  5810                           ; 2 bytes @ 0x28
  5811  000088                     	ds	1
  5812  000089                     ??__motor_get_speed_in_degrees:
  5813  000089                     flash_sector_read@data:
  5814                           	opt stack 0
  5815  000089                     flash_partial_read@start:
  5816                           	opt stack 0
  5817  000089                     adc_read_temperature@adc_result:
  5818                           	opt stack 0
  5819                           
  5820                           ; 2 bytes @ 0x29
  5821  000089                     	ds	1
  5822  00008A                     ExternalFlash_SectorWrite@buffer:
  5823                           	opt stack 0
  5824  00008A                     __write_root@sector:
  5825                           	opt stack 0
  5826  00008A                     __add_item@buffer:
  5827                           	opt stack 0
  5828                           
  5829                           ; 2 bytes @ 0x2A
  5830  00008A                     	ds	1
  5831  00008B                     ??_fat_get_format_status:
  5832  00008B                     ?__get_available_cluster:
  5833                           	opt stack 0
  5834  00008B                     flash_partial_read@length:
  5835                           	opt stack 0
  5836  00008B                     ExternalFlash_SectorRead@config:
  5837                           	opt stack 0
  5838  00008B                     __get_available_cluster@first_sector:
  5839                           	opt stack 0
  5840  00008B                     fat_find_file@name:
  5841                           	opt stack 0
  5842  00008B                     motor_steps_from_degrees@steps:
  5843                           	opt stack 0
  5844  00008B                     __motor_get_speed_in_degrees@speed:
  5845                           	opt stack 0
  5846  00008B                     __step_position_from_divide_position@target_position:
  5847                           	opt stack 0
  5848  00008B                     adc_read_temperature@temperature:
  5849                           	opt stack 0
  5850                           
  5851                           ; 4 bytes @ 0x2B
  5852  00008B                     	ds	1
  5853  00008C                     ??__add_item:
  5854  00008C                     __display_padded_itoa@len:
  5855                           	opt stack 0
  5856  00008C                     ExternalFlash_SectorWrite@allowWriteToZero:
  5857                           	opt stack 0
  5858  00008C                     __write_root@offset:
  5859                           	opt stack 0
  5860                           
  5861                           ; 2 bytes @ 0x2C
  5862  00008C                     	ds	1
  5863  00008D                     __display_padded_itoa@pos:
  5864                           	opt stack 0
  5865  00008D                     flash_partial_read@data:
  5866                           	opt stack 0
  5867  00008D                     ExternalFlash_SectorWrite@page:
  5868                           	opt stack 0
  5869  00008D                     __get_available_cluster@skip_sector:
  5870                           	opt stack 0
  5871  00008D                     fat_find_file@extension:
  5872                           	opt stack 0
  5873  00008D                     fat_get_format_status@cntr:
  5874                           	opt stack 0
  5875  00008D                     ExternalFlash_SectorRead@sector_addr:
  5876                           	opt stack 0
  5877                           
  5878                           ; 4 bytes @ 0x2D
  5879  00008D                     	ds	1
  5880  00008E                     __display_padded_itoa@padding:
  5881                           	opt stack 0
  5882  00008E                     __write_root@file_number:
  5883                           	opt stack 0
  5884  00008E                     __add_item@length:
  5885                           	opt stack 0
  5886                           
  5887                           ; 1 bytes @ 0x2E
  5888  00008E                     	ds	1
  5889  00008F                     ??_MSDWriteHandler:
  5890  00008F                     ??_fat_find_file:
  5891  00008F                     ?__read_fat:
  5892                           	opt stack 0
  5893  00008F                     ?_motor_nonzero_steps_from_degrees:
  5894                           	opt stack 0
  5895  00008F                     __display_signed_itoa@value:
  5896                           	opt stack 0
  5897  00008F                     __get_available_cluster@cluster:
  5898                           	opt stack 0
  5899  00008F                     __root_is_available@root_sector:
  5900                           	opt stack 0
  5901  00008F                     __read_fat@cluster:
  5902                           	opt stack 0
  5903  00008F                     fat_get_file_information@data:
  5904                           	opt stack 0
  5905  00008F                     motor_nonzero_steps_from_degrees@degrees:
  5906                           	opt stack 0
  5907  00008F                     __motor_get_speed_in_degrees@lookup:
  5908                           	opt stack 0
  5909  00008F                     __motor_run@distance_in_steps:
  5910                           	opt stack 0
  5911                           
  5912                           ; 4 bytes @ 0x2F
  5913  00008F                     	ds	2
  5914  000091                     fat_find_file@file_number:
  5915                           	opt stack 0
  5916  000091                     __display_signed_itoa@text:
  5917                           	opt stack 0
  5918  000091                     ExternalFlash_SectorRead@buffer:
  5919                           	opt stack 0
  5920  000091                     __get_available_cluster@offset:
  5921                           	opt stack 0
  5922  000091                     __root_is_available@offset:
  5923                           	opt stack 0
  5924  000091                     __read_fat@sector:
  5925                           	opt stack 0
  5926                           
  5927                           ; 2 bytes @ 0x31
  5928  000091                     	ds	1
  5929  000092                     fat_find_file@sector:
  5930                           	opt stack 0
  5931  000092                     fat_get_file_information@root_sector:
  5932                           	opt stack 0
  5933                           
  5934                           ; 2 bytes @ 0x32
  5935  000092                     	ds	1
  5936  000093                     ?_motor_speed_from_index:
  5937                           	opt stack 0
  5938  000093                     __root_is_available@file_number:
  5939                           	opt stack 0
  5940  000093                     ExternalFlash_SectorRead@page:
  5941                           	opt stack 0
  5942  000093                     __get_available_cluster@sector:
  5943                           	opt stack 0
  5944  000093                     __read_fat@offset:
  5945                           	opt stack 0
  5946  000093                     motor_speed_from_index@speed_index:
  5947                           	opt stack 0
  5948  000093                     __motor_run@speed:
  5949                           	opt stack 0
  5950  000093                     motor_nonzero_steps_from_degrees@steps:
  5951                           	opt stack 0
  5952                           
  5953                           ; 4 bytes @ 0x33
  5954  000093                     	ds	1
  5955  000094                     __root_is_available@first_byte:
  5956                           	opt stack 0
  5957  000094                     fat_find_file@offset:
  5958                           	opt stack 0
  5959  000094                     fat_get_file_information@offset:
  5960                           	opt stack 0
  5961                           
  5962                           ; 2 bytes @ 0x34
  5963  000094                     	ds	1
  5964  000095                     ??_MSDReadHandler:
  5965  000095                     ??__motor_run:
  5966  000095                     ?__make_cluster_chain:
  5967                           	opt stack 0
  5968  000095                     ?_fat_get_file_size:
  5969                           	opt stack 0
  5970  000095                     __get_available_root_entry@file_number:
  5971                           	opt stack 0
  5972  000095                     __display_itoa@value:
  5973                           	opt stack 0
  5974  000095                     __make_cluster_chain@first_cluster:
  5975                           	opt stack 0
  5976  000095                     __read_fat@value:
  5977                           	opt stack 0
  5978                           
  5979                           ; 2 bytes @ 0x35
  5980  000095                     	ds	1
  5981  000096                     fat_get_file_information@file_number:
  5982                           	opt stack 0
  5983                           
  5984                           ; 1 bytes @ 0x36
  5985  000096                     	ds	1
  5986  000097                     ?__find_nth_cluster:
  5987                           	opt stack 0
  5988  000097                     __display_itoa@decimals:
  5989                           	opt stack 0
  5990  000097                     __find_nth_cluster@cluster:
  5991                           	opt stack 0
  5992  000097                     __make_cluster_chain@number_of_clusters:
  5993                           	opt stack 0
  5994                           
  5995                           ; 2 bytes @ 0x37
  5996  000097                     	ds	1
  5997  000098                     __display_itoa@text:
  5998                           	opt stack 0
  5999                           
  6000                           ; 2 bytes @ 0x38
  6001  000098                     	ds	1
  6002  000099                     ??_MSDProcessCommandMediaPresent:
  6003  000099                     ??__make_cluster_chain:
  6004  000099                     __motor_run@direction:
  6005                           	opt stack 0
  6006  000099                     __find_nth_cluster@n:
  6007                           	opt stack 0
  6008  000099                     fat_get_file_size@sector:
  6009                           	opt stack 0
  6010                           
  6011                           ; 2 bytes @ 0x39
  6012  000099                     	ds	1
  6013  00009A                     ??__display_itoa:
  6014  00009A                     __motor_run@maximum_distance_in_degrees:
  6015                           	opt stack 0
  6016                           
  6017                           ; 2 bytes @ 0x3A
  6018  00009A                     	ds	1
  6019  00009B                     _MSDProcessCommandMediaPresent$2606:
  6020                           	opt stack 0
  6021  00009B                     __find_nth_cluster@offset:
  6022                           	opt stack 0
  6023  00009B                     __make_cluster_chain@next_offset:
  6024                           	opt stack 0
  6025  00009B                     fat_get_file_size@offset:
  6026                           	opt stack 0
  6027                           
  6028                           ; 2 bytes @ 0x3B
  6029  00009B                     	ds	1
  6030  00009C                     __motor_run@maximum_distance_in_steps:
  6031                           	opt stack 0
  6032                           
  6033                           ; 4 bytes @ 0x3C
  6034  00009C                     	ds	1
  6035  00009D                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  6036                           	opt stack 0
  6037  00009D                     __find_nth_cluster@sector_in_buffer:
  6038                           	opt stack 0
  6039  00009D                     __make_cluster_chain@minimum_sector:
  6040                           	opt stack 0
  6041  00009D                     fat_get_file_size@file_size:
  6042                           	opt stack 0
  6043                           
  6044                           ; 4 bytes @ 0x3D
  6045  00009D                     	ds	1
  6046  00009E                     MSDProcessCommandMediaPresent@sectorSize:
  6047                           	opt stack 0
  6048                           
  6049                           ; 4 bytes @ 0x3E
  6050  00009E                     	ds	1
  6051  00009F                     __find_nth_cluster@sector:
  6052                           	opt stack 0
  6053  00009F                     __make_cluster_chain@different_sector_cluster:
  6054                           	opt stack 0
  6055                           
  6056                           ; 2 bytes @ 0x3F
  6057  00009F                     	ds	1
  6058  0000A0                     motor_schedule_command@distance_in_steps:
  6059                           	opt stack 0
  6060  0000A0                     __display_itoa@tmp:
  6061                           	opt stack 0
  6062                           
  6063                           ; 10 bytes @ 0x40
  6064  0000A0                     	ds	1
  6065  0000A1                     __make_cluster_chain@data_changed:
  6066                           	opt stack 0
  6067  0000A1                     fat_get_file_size@file_number:
  6068                           	opt stack 0
  6069  0000A1                     fat_read_from_file_fast@start_byte:
  6070                           	opt stack 0
  6071  0000A1                     fat_modify_file@start_byte:
  6072                           	opt stack 0
  6073                           
  6074                           ; 4 bytes @ 0x41
  6075  0000A1                     	ds	1
  6076  0000A2                     __make_cluster_chain@remaining_clusters:
  6077                           	opt stack 0
  6078  0000A2                     MSDProcessCommandMediaPresent@capacity:
  6079                           	opt stack 0
  6080                           
  6081                           ; 4 bytes @ 0x42
  6082  0000A2                     	ds	2
  6083  0000A4                     __make_cluster_chain@sector:
  6084                           	opt stack 0
  6085  0000A4                     motor_schedule_command@speed:
  6086                           	opt stack 0
  6087                           
  6088                           ; 2 bytes @ 0x44
  6089  0000A4                     	ds	1
  6090  0000A5                     fat_modify_file@length:
  6091                           	opt stack 0
  6092  0000A5                     fat_read_from_file_fast@length:
  6093                           	opt stack 0
  6094                           
  6095                           ; 4 bytes @ 0x45
  6096  0000A5                     	ds	1
  6097  0000A6                     MSDProcessCommandMediaPresent@i:
  6098                           	opt stack 0
  6099  0000A6                     motor_schedule_command@direction:
  6100                           	opt stack 0
  6101  0000A6                     __make_cluster_chain@sector_in_buffer:
  6102                           	opt stack 0
  6103                           
  6104                           ; 2 bytes @ 0x46
  6105  0000A6                     	ds	1
  6106  0000A7                     ??_MSDProcessCommand:
  6107  0000A7                     motor_set_zero@direction:
  6108                           	opt stack 0
  6109  0000A7                     fat_modify_file@data:
  6110                           	opt stack 0
  6111  0000A7                     __parse_jump_steps@data:
  6112                           	opt stack 0
  6113  0000A7                     motor_go_to_steps_position@target_position:
  6114                           	opt stack 0
  6115  0000A7                     _motor_arc_move$8784:
  6116                           	opt stack 0
  6117                           
  6118                           ; 4 bytes @ 0x47
  6119  0000A7                     	ds	1
  6120  0000A8                     __make_cluster_chain@offset:
  6121                           	opt stack 0
  6122                           
  6123                           ; 2 bytes @ 0x48
  6124  0000A8                     	ds	1
  6125  0000A9                     ??_fat_modify_file:
  6126  0000A9                     fat_read_from_file_fast@data:
  6127                           	opt stack 0
  6128  0000A9                     __parse_jump_steps@out_buffer:
  6129                           	opt stack 0
  6130                           
  6131                           ; 2 bytes @ 0x49
  6132  0000A9                     	ds	1
  6133  0000AA                     __display_itoa@len:
  6134                           	opt stack 0
  6135  0000AA                     __make_cluster_chain@next_cluster:
  6136                           	opt stack 0
  6137                           
  6138                           ; 2 bytes @ 0x4A
  6139  0000AA                     	ds	1
  6140  0000AB                     ??_motor_go_to_steps_position:
  6141  0000AB                     __display_itoa@missing:
  6142                           	opt stack 0
  6143  0000AB                     motor_arc_move@direction:
  6144                           	opt stack 0
  6145  0000AB                     fat_read_from_file_fast@cluster:
  6146                           	opt stack 0
  6147  0000AB                     __parse_jump_steps@out_idx_ptr:
  6148                           	opt stack 0
  6149                           
  6150                           ; 2 bytes @ 0x4B
  6151  0000AB                     	ds	1
  6152  0000AC                     ??_MSDTasks:
  6153  0000AC                     __display_itoa@pos:
  6154                           	opt stack 0
  6155  0000AC                     fat_create_file@name:
  6156                           	opt stack 0
  6157  0000AC                     fat_resize_file@new_file_size:
  6158                           	opt stack 0
  6159  0000AC                     motor_arc_move@arc_in_steps:
  6160                           	opt stack 0
  6161                           
  6162                           ; 4 bytes @ 0x4C
  6163  0000AC                     	ds	1
  6164  0000AD                     ??__parse_jump_steps:
  6165  0000AD                     _MSDTasks$2588:
  6166                           	opt stack 0
  6167  0000AD                     fat_read_from_file_fast@cluster_number:
  6168                           	opt stack 0
  6169  0000AD                     __display_itoa_long@value:
  6170                           	opt stack 0
  6171                           
  6172                           ; 4 bytes @ 0x4D
  6173  0000AD                     	ds	1
  6174  0000AE                     __parse_jump_steps@return_value:
  6175                           	opt stack 0
  6176  0000AE                     fat_create_file@extension:
  6177                           	opt stack 0
  6178                           
  6179                           ; 2 bytes @ 0x4E
  6180  0000AE                     	ds	1
  6181  0000AF                     ??_fat_read_from_file_fast:
  6182  0000AF                     _MSDTasks$2589:
  6183                           	opt stack 0
  6184  0000AF                     __parse_jump_steps@number_of_steps:
  6185                           	opt stack 0
  6186                           
  6187                           ; 4 bytes @ 0x4F
  6188  0000AF                     	ds	1
  6189  0000B0                     ??_fat_resize_file:
  6190  0000B0                     fat_create_file@size:
  6191                           	opt stack 0
  6192                           
  6193                           ; 4 bytes @ 0x50
  6194  0000B0                     	ds	1
  6195  0000B1                     MSDTasks@i:
  6196                           	opt stack 0
  6197  0000B1                     __display_itoa_long@decimals:
  6198                           	opt stack 0
  6199                           
  6200                           ; 1 bytes @ 0x51
  6201  0000B1                     	ds	1
  6202  0000B2                     __display_itoa_long@text:
  6203                           	opt stack 0
  6204                           
  6205                           ; 2 bytes @ 0x52
  6206  0000B2                     	ds	1
  6207  0000B3                     __parse_command_long@data:
  6208                           	opt stack 0
  6209  0000B3                     motor_go_to_steps_position@overhead_cw:
  6210                           	opt stack 0
  6211                           
  6212                           ; 4 bytes @ 0x53
  6213  0000B3                     	ds	1
  6214  0000B4                     ??__display_itoa_long:
  6215  0000B4                     ??_fat_create_file:
  6216  0000B4                     fat_resize_file@old_number_of_clusters:
  6217                           	opt stack 0
  6218                           
  6219                           ; 2 bytes @ 0x54
  6220  0000B4                     	ds	1
  6221  0000B5                     fat_modify_file@sector:
  6222                           	opt stack 0
  6223  0000B5                     __parse_command_long@out_buffer:
  6224                           	opt stack 0
  6225                           
  6226                           ; 2 bytes @ 0x55
  6227  0000B5                     	ds	1
  6228  0000B6                     fat_resize_file@new_number_of_clusters:
  6229                           	opt stack 0
  6230                           
  6231                           ; 2 bytes @ 0x56
  6232  0000B6                     	ds	1
  6233  0000B7                     fat_modify_file@file_number:
  6234                           	opt stack 0
  6235  0000B7                     __parse_command_long@out_idx_ptr:
  6236                           	opt stack 0
  6237  0000B7                     motor_go_to_steps_position@overhead_ccw:
  6238                           	opt stack 0
  6239                           
  6240                           ; 4 bytes @ 0x57
  6241  0000B7                     	ds	1
  6242  0000B8                     __display_itoa_long@length:
  6243                           	opt stack 0
  6244  0000B8                     fat_modify_file@return_code:
  6245                           	opt stack 0
  6246  0000B8                     fat_create_file@number_of_clusters:
  6247                           	opt stack 0
  6248  0000B8                     fat_resize_file@first_cluster:
  6249                           	opt stack 0
  6250                           
  6251                           ; 2 bytes @ 0x58
  6252  0000B8                     	ds	1
  6253  0000B9                     __parse_command_long@length:
  6254                           	opt stack 0
  6255  0000B9                     __display_itoa_long@short_value:
  6256                           	opt stack 0
  6257  0000B9                     fat_modify_file@cluster:
  6258                           	opt stack 0
  6259                           
  6260                           ; 2 bytes @ 0x59
  6261  0000B9                     	ds	1
  6262  0000BA                     fat_resize_file@file_number:
  6263                           	opt stack 0
  6264  0000BA                     fat_create_file@first_cluster:
  6265                           	opt stack 0
  6266                           
  6267                           ; 2 bytes @ 0x5A
  6268  0000BA                     	ds	1
  6269  0000BB                     __display_itoa_long@last_digit:
  6270                           	opt stack 0
  6271  0000BB                     fat_read_from_file_fast@sector:
  6272                           	opt stack 0
  6273  0000BB                     fat_modify_file@offset:
  6274                           	opt stack 0
  6275  0000BB                     motor_go_to_steps_position@distance_cw:
  6276                           	opt stack 0
  6277  0000BB                     fat_resize_file@root:
  6278                           	opt stack 0
  6279                           
  6280                           ; 32 bytes @ 0x5B
  6281  0000BB                     	ds	1
  6282  0000BC                     ??_display_prepare:
  6283  0000BC                     fat_create_file@file_number:
  6284                           	opt stack 0
  6285                           
  6286                           ; 1 bytes @ 0x5C
  6287  0000BC                     	ds	1
  6288  0000BD                     fat_read_from_file_fast@working_cluster:
  6289                           	opt stack 0
  6290  0000BD                     fat_modify_file@number_of_bytes:
  6291                           	opt stack 0
  6292  0000BD                     fat_create_file@root_entry:
  6293                           	opt stack 0
  6294                           
  6295                           ; 32 bytes @ 0x5D
  6296  0000BD                     	ds	1
  6297  0000BE                     display_prepare@temp:
  6298                           	opt stack 0
  6299                           
  6300                           ; 10 bytes @ 0x5E
  6301  0000BE                     	ds	1
  6302  0000BF                     fat_read_from_file_fast@offset:
  6303                           	opt stack 0
  6304  0000BF                     fat_modify_file@position:
  6305                           	opt stack 0
  6306  0000BF                     motor_go_to_steps_position@distance_ccw:
  6307                           	opt stack 0
  6308                           
  6309                           ; 4 bytes @ 0x5F
  6310  0000BF                     	ds	2
  6311  0000C1                     fat_read_from_file_fast@needed_cluster:
  6312                           	opt stack 0
  6313                           
  6314                           ; 2 bytes @ 0x61
  6315  0000C1                     	ds	2
  6316  0000C3                     ??_motor_divide_jump:
  6317  0000C3                     __parse_command_short@cmd:
  6318                           	opt stack 0
  6319  0000C3                     fat_read_from_file_fast@read_length:
  6320                           	opt stack 0
  6321  0000C3                     motor_divide_jump_to_nearest@nearest_position_in_steps:
  6322                           	opt stack 0
  6323  0000C3                     fat_modify_file@root:
  6324                           	opt stack 0
  6325                           
  6326                           ; 32 bytes @ 0x63
  6327  0000C3                     	ds	1
  6328  0000C4                     api_parse@inBuffer:
  6329                           	opt stack 0
  6330  0000C4                     motor_divide_jump@target_position_in_steps:
  6331                           	opt stack 0
  6332                           
  6333                           ; 4 bytes @ 0x64
  6334  0000C4                     	ds	1
  6335  0000C5                     fat_read_from_file_fast@position:
  6336                           	opt stack 0
  6337                           
  6338                           ; 4 bytes @ 0x65
  6339  0000C5                     	ds	1
  6340  0000C6                     api_parse@receivedDataLength:
  6341                           	opt stack 0
  6342                           
  6343                           ; 1 bytes @ 0x66
  6344  0000C6                     	ds	1
  6345  0000C7                     api_parse@outBuffer:
  6346                           	opt stack 0
  6347  0000C7                     motor_divide_jump_to_nearest@nearest_divide_position:
  6348                           	opt stack 0
  6349                           
  6350                           ; 2 bytes @ 0x67
  6351  0000C7                     	ds	1
  6352  0000C8                     display_prepare@space:
  6353                           	opt stack 0
  6354  0000C8                     motor_divide_jump@target_divide_position:
  6355                           	opt stack 0
  6356                           
  6357                           ; 2 bytes @ 0x68
  6358  0000C8                     	ds	1
  6359  0000C9                     ??_api_parse:
  6360  0000C9                     display_prepare@cntr:
  6361                           	opt stack 0
  6362  0000C9                     fat_read_from_file@start_byte:
  6363                           	opt stack 0
  6364  0000C9                     motor_divide_jump_to_nearest@divide_position_float:
  6365                           	opt stack 0
  6366                           
  6367                           ; 4 bytes @ 0x69
  6368  0000C9                     	ds	2
  6369  0000CB                     api_parse@out_idx_ptr:
  6370                           	opt stack 0
  6371                           
  6372                           ; 2 bytes @ 0x6B
  6373  0000CB                     	ds	2
  6374  0000CD                     ??_encoder_statemachine:
  6375  0000CD                     api_parse@out_idx:
  6376                           	opt stack 0
  6377  0000CD                     fat_read_from_file@length:
  6378                           	opt stack 0
  6379                           
  6380                           ; 4 bytes @ 0x6D
  6381  0000CD                     	ds	1
  6382  0000CE                     api_parse@in_idx:
  6383                           	opt stack 0
  6384                           
  6385                           ; 1 bytes @ 0x6E
  6386  0000CE                     	ds	1
  6387  0000CF                     
  6388                           ; 1 bytes @ 0x6F
  6389  0000CF                     	ds	2
  6390  0000D1                     fat_read_from_file@data:
  6391                           	opt stack 0
  6392                           
  6393                           ; 2 bytes @ 0x71
  6394  0000D1                     	ds	2
  6395  0000D3                     ??_fat_read_from_file:
  6396                           
  6397                           ; 1 bytes @ 0x73
  6398  0000D3                     	ds	4
  6399  0000D7                     fat_read_from_file@file_number:
  6400                           	opt stack 0
  6401                           
  6402                           ; 1 bytes @ 0x77
  6403  0000D7                     	ds	1
  6404  0000D8                     fat_read_from_file@return_code:
  6405                           	opt stack 0
  6406                           
  6407                           ; 1 bytes @ 0x78
  6408  0000D8                     	ds	1
  6409  0000D9                     fat_read_from_file@cluster:
  6410                           	opt stack 0
  6411                           
  6412                           ; 2 bytes @ 0x79
  6413  0000D9                     	ds	2
  6414  0000DB                     fat_read_from_file@cluster_number:
  6415                           	opt stack 0
  6416                           
  6417                           ; 2 bytes @ 0x7B
  6418  0000DB                     	ds	2
  6419  0000DD                     fat_read_from_file@root:
  6420                           	opt stack 0
  6421                           
  6422                           ; 32 bytes @ 0x7D
  6423  0000DD                     	ds	6
  6424  0000E3                     ??_configFile_write:
  6425                           
  6426                           ; 1 bytes @ 0x83
  6427  0000E3                     	ds	1
  6428  0000E4                     configFile_write@file_number:
  6429                           	opt stack 0
  6430                           
  6431                           ; 1 bytes @ 0x84
  6432  0000E4                     	ds	1
  6433  0000E5                     configFile_write@file_size:
  6434                           	opt stack 0
  6435                           
  6436                           ; 4 bytes @ 0x85
  6437  0000E5                     	ds	24
  6438  0000FD                     main@startup_timer:
  6439                           	opt stack 0
  6440                           
  6441                           ; 1 bytes @ 0x9D
  6442  0000FD                     	ds	1
  6443                           tblptru	equ	0xFF8
  6444                           tblptrh	equ	0xFF7
  6445                           tblptrl	equ	0xFF6
  6446                           tablat	equ	0xFF5
  6447                           postinc0	equ	0xFEE
  6448                           wreg	equ	0xFE8
  6449                           postdec1	equ	0xFE5
  6450                           fsr1h	equ	0xFE2
  6451                           fsr1l	equ	0xFE1
  6452                           
  6453                           	psect	cstackCOMRAM
  6454  000001                     __pcstackCOMRAM:
  6455                           	opt stack 0
  6456  000001                     ??_USBStdGetDscHandler:
  6457  000001                     ??_USBStdGetStatusHandler:
  6458  000001                     ??i2__i2c_wait_idle:
  6459  000001                     ?i2_USBTransferOnePacket:
  6460                           	opt stack 0
  6461  000001                     ?i2_ExternalFlash_MediaInitialize:
  6462                           	opt stack 0
  6463  000001                     USBConfigureEndpoint@direction:
  6464                           	opt stack 0
  6465  000001                     USBCtrlTrfTxService@byteToSend:
  6466                           	opt stack 0
  6467  000001                     USBCtrlTrfRxService@i:
  6468                           	opt stack 0
  6469  000001                     i2USBTransferOnePacket@dir:
  6470                           	opt stack 0
  6471  000001                     i2USBStallEndpoint@dir:
  6472                           	opt stack 0
  6473  000001                     i2__i2c_send@dat:
  6474                           	opt stack 0
  6475  000001                     i2SYSTEM_Initialize@pll_startup_counter:
  6476                           	opt stack 0
  6477  000001                     i2ExternalFlash_MediaInitialize@config:
  6478                           	opt stack 0
  6479  000001                     i2ExternalFlash_MediaDetect@config:
  6480                           	opt stack 0
  6481  000001                     i2memcpy@d1:
  6482                           	opt stack 0
  6483  000001                     i2memset@p1:
  6484                           	opt stack 0
  6485                           
  6486                           ; 2 bytes @ 0x0
  6487  000001                     	ds	1
  6488  000002                     ??_USBConfigureEndpoint:
  6489  000002                     ??i2_USBStallEndpoint:
  6490  000002                     USBCtrlTrfRxService@byteToRead:
  6491                           	opt stack 0
  6492  000002                     USBCtrlTrfInHandler@lastDTS:
  6493                           	opt stack 0
  6494  000002                     USBStdGetStatusHandler@p:
  6495                           	opt stack 0
  6496  000002                     i2USBTransferOnePacket@data:
  6497                           	opt stack 0
  6498                           
  6499                           ; 2 bytes @ 0x1
  6500  000002                     	ds	1
  6501  000003                     i2SYSTEM_Initialize@pll_startup_counter_3132:
  6502                           	opt stack 0
  6503  000003                     i2memcpy@s1:
  6504                           	opt stack 0
  6505  000003                     i2memset@c:
  6506                           	opt stack 0
  6507                           
  6508                           ; 2 bytes @ 0x2
  6509  000003                     	ds	1
  6510  000004                     i2USBTransferOnePacket@len:
  6511                           	opt stack 0
  6512                           
  6513                           ; 1 bytes @ 0x3
  6514  000004                     	ds	1
  6515  000005                     ??i2_USBTransferOnePacket:
  6516  000005                     i2SYSTEM_Initialize@state:
  6517                           	opt stack 0
  6518  000005                     i2memcpy@n:
  6519                           	opt stack 0
  6520  000005                     i2memset@n:
  6521                           	opt stack 0
  6522                           
  6523                           ; 2 bytes @ 0x4
  6524  000005                     	ds	1
  6525  000006                     USBConfigureEndpoint@EPNum:
  6526                           	opt stack 0
  6527  000006                     i2USBStallEndpoint@ep:
  6528                           	opt stack 0
  6529  000006                     i2__i2c_eeprom_busy@busy:
  6530                           	opt stack 0
  6531  000006                     i2__i2c_write@data:
  6532                           	opt stack 0
  6533                           
  6534                           ; 2 bytes @ 0x5
  6535  000006                     	ds	1
  6536  000007                     USBConfigureEndpoint@handle:
  6537                           	opt stack 0
  6538  000007                     i2USBStallEndpoint@p:
  6539                           	opt stack 0
  6540  000007                     i2memcpy@d:
  6541                           	opt stack 0
  6542  000007                     i2memset@p:
  6543                           	opt stack 0
  6544                           
  6545                           ; 2 bytes @ 0x6
  6546  000007                     	ds	1
  6547  000008                     i2__i2c_write@length:
  6548                           	opt stack 0
  6549                           
  6550                           ; 1 bytes @ 0x7
  6551  000008                     	ds	1
  6552  000009                     USBEnableEndpoint@options:
  6553                           	opt stack 0
  6554  000009                     i2USBDeviceInit@i:
  6555                           	opt stack 0
  6556  000009                     i2USBTransferOnePacket@ep:
  6557                           	opt stack 0
  6558  000009                     i2__i2c_write@slave_address:
  6559                           	opt stack 0
  6560  000009                     i2memcpy@s:
  6561                           	opt stack 0
  6562                           
  6563                           ; 2 bytes @ 0x8
  6564  000009                     	ds	1
  6565  00000A                     i2__i2c_write@cntr:
  6566                           	opt stack 0
  6567  00000A                     USBEnableEndpoint@p:
  6568                           	opt stack 0
  6569  00000A                     i2USBTransferOnePacket@handle:
  6570                           	opt stack 0
  6571                           
  6572                           ; 2 bytes @ 0x9
  6573  00000A                     	ds	1
  6574  00000B                     i2memcpy@tmp:
  6575                           	opt stack 0
  6576  00000B                     i2c_eeprom_write@address:
  6577                           	opt stack 0
  6578                           
  6579                           ; 2 bytes @ 0xA
  6580  00000B                     	ds	1
  6581  00000C                     ??_USBMSDInit:
  6582  00000C                     USBEnableEndpoint@ep:
  6583                           	opt stack 0
  6584  00000C                     _USBCheckMSDRequest$2534:
  6585                           	opt stack 0
  6586  00000C                     MSDTransferTerminated@handle:
  6587                           	opt stack 0
  6588                           
  6589                           ; 2 bytes @ 0xB
  6590  00000C                     	ds	1
  6591  00000D                     i2c_eeprom_write@data:
  6592                           	opt stack 0
  6593                           
  6594                           ; 2 bytes @ 0xC
  6595  00000D                     	ds	1
  6596  00000E                     _USBCheckMSDRequest$2535:
  6597                           	opt stack 0
  6598  00000E                     _MSDTransferTerminated$2623:
  6599                           	opt stack 0
  6600                           
  6601                           ; 2 bytes @ 0xD
  6602  00000E                     	ds	1
  6603  00000F                     i2c_eeprom_write@length:
  6604                           	opt stack 0
  6605                           
  6606                           ; 1 bytes @ 0xE
  6607  00000F                     	ds	1
  6608  000010                     ??_i2c_eeprom_write:
  6609  000010                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  6610                           	opt stack 0
  6611                           
  6612                           ; 2 bytes @ 0xF
  6613  000010                     	ds	2
  6614  000012                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  6615                           	opt stack 0
  6616                           
  6617                           ; 2 bytes @ 0x11
  6618  000012                     	ds	1
  6619  000013                     i2c_eeprom_write@dat:
  6620                           	opt stack 0
  6621                           
  6622                           ; 17 bytes @ 0x12
  6623  000013                     	ds	1
  6624  000014                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  6625                           	opt stack 0
  6626                           
  6627                           ; 2 bytes @ 0x13
  6628  000014                     	ds	2
  6629  000016                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  6630                           
  6631                           ; 1 bytes @ 0x15
  6632  000016                     	ds	2
  6633  000018                     ??_USBStdFeatureReqHandler:
  6634  000018                     USBStdSetCfgHandler@i:
  6635                           	opt stack 0
  6636                           
  6637                           ; 1 bytes @ 0x17
  6638  000018                     	ds	1
  6639  000019                     USBStdFeatureReqHandler@pUEP:
  6640                           	opt stack 0
  6641                           
  6642                           ; 2 bytes @ 0x18
  6643  000019                     	ds	2
  6644  00001B                     USBStdFeatureReqHandler@current_ep_data:
  6645                           	opt stack 0
  6646                           
  6647                           ; 1 bytes @ 0x1A
  6648  00001B                     	ds	1
  6649  00001C                     USBStdFeatureReqHandler@p:
  6650                           	opt stack 0
  6651                           
  6652                           ; 2 bytes @ 0x1B
  6653  00001C                     	ds	2
  6654  00001E                     ??_USBCtrlEPService:
  6655  00001E                     
  6656                           ; 1 bytes @ 0x1D
  6657  00001E                     	ds	1
  6658  00001F                     USBDeviceTasks@i:
  6659                           	opt stack 0
  6660                           
  6661                           ; 1 bytes @ 0x1E
  6662  00001F                     	ds	5
  6663  000024                     i2c_eeprom_write@slave_address:
  6664                           	opt stack 0
  6665                           
  6666                           ; 1 bytes @ 0x23
  6667  000024                     	ds	1
  6668  000025                     i2c_eeprom_write@cntr:
  6669                           	opt stack 0
  6670                           
  6671                           ; 1 bytes @ 0x24
  6672  000025                     	ds	1
  6673  000026                     i2c_eeprom_writeUint32@address:
  6674                           	opt stack 0
  6675                           
  6676                           ; 2 bytes @ 0x25
  6677  000026                     	ds	2
  6678  000028                     i2c_eeprom_writeUint32@data:
  6679                           	opt stack 0
  6680                           
  6681                           ; 4 bytes @ 0x27
  6682  000028                     	ds	4
  6683  00002C                     ??_motor_isr:
  6684  00002C                     
  6685                           ; 1 bytes @ 0x2B
  6686  00002C                     	ds	16
  6687  00003C                     motor_isr@steps_until_standstill:
  6688                           	opt stack 0
  6689                           
  6690                           ; 2 bytes @ 0x3B
  6691  00003C                     	ds	2
  6692  00003E                     motor_isr@steps_until_standstill_if_accelerate:
  6693                           	opt stack 0
  6694                           
  6695                           ; 2 bytes @ 0x3D
  6696  00003E                     	ds	2
  6697  000040                     motor_isr@steps_remaining:
  6698                           	opt stack 0
  6699                           
  6700                           ; 4 bytes @ 0x3F
  6701  000040                     	ds	4
  6702  000044                     ??_SYS_InterruptHigh:
  6703                           
  6704                           ; 1 bytes @ 0x43
  6705  000044                     	ds	14
  6706                           tblptru	equ	0xFF8
  6707                           tblptrh	equ	0xFF7
  6708                           tblptrl	equ	0xFF6
  6709                           tablat	equ	0xFF5
  6710                           postinc0	equ	0xFEE
  6711                           wreg	equ	0xFE8
  6712                           postdec1	equ	0xFE5
  6713                           fsr1h	equ	0xFE2
  6714                           fsr1l	equ	0xFE1
  6715                           
  6716 ;;
  6717 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  6718 ;;
  6719 ;; *************** function _main *****************
  6720 ;; Defined at:
  6721 ;;		line 49 in file "main.c"
  6722 ;; Parameters:    Size  Location     Type
  6723 ;;		None
  6724 ;; Auto vars:     Size  Location     Type
  6725 ;;  startup_time    1  157[BANK0 ] unsigned char 
  6726 ;; Return value:  Size  Location     Type
  6727 ;;                  1    wreg      void 
  6728 ;; Registers used:
  6729 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  6730 ;; Tracked objects:
  6731 ;;		On entry : 0/0
  6732 ;;		On exit  : 0/0
  6733 ;;		Unchanged: 0/0
  6734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6736 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6738 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6739 ;;Total ram usage:        1 bytes
  6740 ;; Hardware stack levels required when called:   22
  6741 ;; This function calls:
  6742 ;;		_APP_DeviceCustomHIDTasks
  6743 ;;		_APP_DeviceMSDTasks
  6744 ;;		_SYSTEM_Initialize
  6745 ;;		_USBDeviceAttach
  6746 ;;		_USBDeviceInit
  6747 ;;		_adc_read_temperature
  6748 ;;		_display_prepare
  6749 ;;		_display_update
  6750 ;;		_encoder_statemachine
  6751 ;;		_motor_calculate_position_in_degrees
  6752 ;;		_motor_process_cue
  6753 ;;		_system_init
  6754 ;; This function is called by:
  6755 ;;		Startup code after reset
  6756 ;; This function uses a non-reentrant model
  6757 ;;
  6758                           
  6759                           	psect	text0
  6760  013576                     __ptext0:
  6761                           	opt stack 0
  6762  013576                     _main:
  6763                           	opt stack 9
  6764                           
  6765                           ;main.c: 51: uint8_t startup_timer;;main.c: 55: system_init();
  6766                           
  6767                           ;incstack = 0
  6768  013576  ECF6  F08C         	call	_system_init	;wreg free
  6769                           
  6770                           ;main.c: 57: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  6771  01357A  0E00               	movlw	0
  6772  01357C  EC1C  F0A3         	call	_SYSTEM_Initialize
  6773                           
  6774                           ;main.c: 59: USBDeviceInit();
  6775  013580  EC48  F07F         	call	_USBDeviceInit	;wreg free
  6776                           
  6777                           ;main.c: 60: USBDeviceAttach();
  6778  013584  ECB3  F0A9         	call	_USBDeviceAttach	;wreg free
  6779                           
  6780                           ;main.c: 63: startup_timer = 150;
  6781  013588  0E96               	movlw	150
  6782  01358A  0100               	movlb	0	; () banked
  6783  01358C  6FFD               	movwf	main@startup_timer& (0+255),b
  6784                           
  6785                           ;main.c: 64: while(startup_timer)
  6786  01358E  D00D               	goto	l863
  6787  013590                     
  6788                           ; BSR set to: 0
  6789                           ;main.c: 65: {;main.c: 67: APP_DeviceMSDTasks();
  6790                           
  6791                           ; BSR set to: 0
  6792  013590  EC6F  F0AC         	call	_APP_DeviceMSDTasks	;wreg free
  6793                           
  6794                           ;main.c: 69: if(!os.done)
  6795  013594  0101               	movlb	1	; () banked
  6796  013596  5173               	movf	(_os+2)& (0+255),w,b	;volatile
  6797  013598  A4D8               	btfss	status,2,c
  6798  01359A  D007               	goto	l863
  6799                           
  6800                           ; BSR set to: 1
  6801                           ;main.c: 70: {;main.c: 72: APP_DeviceCustomHIDTasks();
  6802  01359C  ECDE  F098         	call	_APP_DeviceCustomHIDTasks	;wreg free
  6803                           
  6804                           ;main.c: 74: --startup_timer;
  6805  0135A0  0100               	movlb	0	; () banked
  6806  0135A2  07FD               	decf	main@startup_timer& (0+255),f,b
  6807                           
  6808                           ; BSR set to: 0
  6809                           ;main.c: 75: os.done = 1;
  6810  0135A4  0E01               	movlw	1
  6811  0135A6  0101               	movlb	1	; () banked
  6812  0135A8  6F73               	movwf	(_os+2)& (0+255),b	;volatile
  6813  0135AA                     l863:
  6814                           
  6815                           ; BSR set to: 1
  6816                           
  6817                           ; BSR set to: 1
  6818  0135AA  0100               	movlb	0	; () banked
  6819  0135AC  51FD               	movf	main@startup_timer& (0+255),w,b
  6820  0135AE  A4D8               	btfss	status,2,c
  6821  0135B0  D7EF               	goto	l862
  6822  0135B2                     u18740:
  6823                           
  6824                           ;main.c: 81: {;main.c: 83: APP_DeviceMSDTasks();
  6825                           
  6826                           ; BSR set to: 0
  6827                           
  6828                           ;main.c: 76: };main.c: 78: };main.c: 80: while(1)
  6829                           
  6830                           ; BSR set to: 0
  6831  0135B2  EC6F  F0AC         	call	_APP_DeviceMSDTasks	;wreg free
  6832                           
  6833                           ;main.c: 85: if(!os.done)
  6834  0135B6  0101               	movlb	1	; () banked
  6835  0135B8  5173               	movf	(_os+2)& (0+255),w,b	;volatile
  6836  0135BA  A4D8               	btfss	status,2,c
  6837  0135BC  D7FA               	goto	u18740
  6838                           
  6839                           ; BSR set to: 1
  6840  0135BE  0004               	clrwdt		;# 
  6841                           
  6842                           ;main.c: 91: APP_DeviceCustomHIDTasks();
  6843  0135C0  ECDE  F098         	call	_APP_DeviceCustomHIDTasks	;wreg free
  6844                           
  6845                           ;main.c: 94: encoder_statemachine();
  6846  0135C4  ECCA  F057         	call	_encoder_statemachine	;wreg free
  6847                           
  6848                           ;main.c: 97: motor_process_cue();
  6849  0135C8  ECEF  F09E         	call	_motor_process_cue	;wreg free
  6850                           
  6851                           ;main.c: 100: adc_read_temperature();
  6852  0135CC  EC17  F079         	call	_adc_read_temperature	;wreg free
  6853                           
  6854                           ;main.c: 103: switch(os.timeSlot)
  6855  0135D0  D008               	goto	l867
  6856  0135D2                     
  6857                           ;main.c: 114: motor_calculate_position_in_degrees();
  6858  0135D2  EC1B  F090         	call	_motor_calculate_position_in_degrees	;wreg free
  6859  0135D6                     
  6860                           ;main.c: 117: display_prepare();
  6861  0135D6  EC98  F051         	call	_display_prepare	;wreg free
  6862                           
  6863                           ;main.c: 118: break;
  6864  0135DA  D014               	goto	l869
  6865  0135DC                     
  6866                           ;main.c: 121: display_update();
  6867  0135DC  ECF8  F0A8         	call	_display_update	;wreg free
  6868                           
  6869                           ;main.c: 123: }
  6870                           
  6871                           ;main.c: 122: break;
  6872  0135E0  D011               	goto	l869
  6873  0135E2                     l867:
  6874  0135E2  0101               	movlb	1	; () banked
  6875  0135E4  5172               	movf	(_os+1)& (0+255),w,b	;volatile
  6876                           
  6877                           ; Switch size 1, requested type "space"
  6878                           ; Number of cases is 5, Range of values is 0 to 7
  6879                           ; switch strategies available:
  6880                           ; Name         Instructions Cycles
  6881                           ; simple_byte           16     9 (average)
  6882                           ;	Chosen strategy is simple_byte
  6883  0135E6  0A00               	xorlw	0	; case 0
  6884  0135E8  B4D8               	btfsc	status,2,c
  6885  0135EA  D00C               	goto	l869
  6886  0135EC  0A01               	xorlw	1	; case 1
  6887  0135EE  B4D8               	btfsc	status,2,c
  6888  0135F0  D009               	goto	l869
  6889  0135F2  0A04               	xorlw	4	; case 5
  6890  0135F4  B4D8               	btfsc	status,2,c
  6891  0135F6  D7ED               	goto	l871
  6892  0135F8  0A03               	xorlw	3	; case 6
  6893  0135FA  B4D8               	btfsc	status,2,c
  6894  0135FC  D7EC               	goto	l872
  6895  0135FE  0A01               	xorlw	1	; case 7
  6896  013600  B4D8               	btfsc	status,2,c
  6897  013602  D7EC               	goto	l873
  6898  013604                     l869:
  6899                           
  6900                           ;main.c: 125: os.done = 1;
  6901                           
  6902                           ; BSR set to: 1
  6903  013604  0E01               	movlw	1
  6904  013606  0101               	movlb	1	; () banked
  6905  013608  6F73               	movwf	(_os+2)& (0+255),b	;volatile
  6906                           
  6907                           ; BSR set to: 1
  6908                           
  6909                           ; BSR set to: 1
  6910  01360A  D7D3               	goto	u18740
  6911  01360C                     __end_of_main:
  6912                           	opt stack 0
  6913                           tblptru	equ	0xFF8
  6914                           tblptrh	equ	0xFF7
  6915                           tblptrl	equ	0xFF6
  6916                           tablat	equ	0xFF5
  6917                           postinc0	equ	0xFEE
  6918                           wreg	equ	0xFE8
  6919                           postdec1	equ	0xFE5
  6920                           fsr1h	equ	0xFE2
  6921                           fsr1l	equ	0xFE1
  6922                           status	equ	0xFD8
  6923                           
  6924 ;; *************** function _system_init *****************
  6925 ;; Defined at:
  6926 ;;		line 177 in file "os.c"
  6927 ;; Parameters:    Size  Location     Type
  6928 ;;		None
  6929 ;; Auto vars:     Size  Location     Type
  6930 ;;		None
  6931 ;; Return value:  Size  Location     Type
  6932 ;;                  1    wreg      void 
  6933 ;; Registers used:
  6934 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6935 ;; Tracked objects:
  6936 ;;		On entry : 0/0
  6937 ;;		On exit  : 0/0
  6938 ;;		Unchanged: 0/0
  6939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6944 ;;Total ram usage:        0 bytes
  6945 ;; Hardware stack levels used:    1
  6946 ;; Hardware stack levels required when called:   20
  6947 ;; This function calls:
  6948 ;;		__backlight_init
  6949 ;;		__system_pin_setup
  6950 ;;		__system_timer0_init
  6951 ;;		_adc_init
  6952 ;;		_configFile_read
  6953 ;;		_configFile_readDefault
  6954 ;;		_configFile_write
  6955 ;;		_display_init
  6956 ;;		_display_update
  6957 ;;		_encoder_init
  6958 ;;		_fat_init
  6959 ;;		_flash_init
  6960 ;;		_i2c_eeprom_readUint32
  6961 ;;		_i2c_init
  6962 ;;		_motor_calculate_position_in_degrees
  6963 ;;		_motor_init
  6964 ;; This function is called by:
  6965 ;;		_main
  6966 ;; This function uses a non-reentrant model
  6967 ;;
  6968                           
  6969                           	psect	text1
  6970  0119EC                     __ptext1:
  6971                           	opt stack 0
  6972  0119EC                     _system_init:
  6973                           	opt stack 10
  6974                           
  6975                           ;os.c: 180: _system_pin_setup();
  6976                           
  6977                           ; BSR set to: 1
  6978                           ;incstack = 0
  6979  0119EC  EC74  F0A0         	call	__system_pin_setup	;wreg free
  6980                           
  6981                           ;os.c: 183: adc_init();
  6982  0119F0  ECFB  F0A3         	call	_adc_init	;wreg free
  6983                           
  6984                           ;os.c: 186: flash_init();
  6985  0119F4  EC90  F0AC         	call	_flash_init	;wreg free
  6986                           
  6987                           ;os.c: 189: fat_init();
  6988  0119F8  EC78  F0AC         	call	_fat_init	;wreg free
  6989                           
  6990                           ;os.c: 192: encoder_init();
  6991  0119FC  EC66  F0AB         	call	_encoder_init	;wreg free
  6992                           
  6993                           ;os.c: 195: i2c_init();
  6994  011A00  ECFF  F0AB         	call	_i2c_init	;wreg free
  6995                           
  6996                           ;os.c: 198: display_init();
  6997  011A04  ECA2  F0A8         	call	_display_init	;wreg free
  6998                           
  6999                           ;os.c: 199: display_update();
  7000  011A08  ECF8  F0A8         	call	_display_update	;wreg free
  7001                           
  7002                           ;os.c: 200: _backlight_init();
  7003  011A0C  ECE4  F0AC         	call	__backlight_init	;wreg free
  7004                           
  7005                           ;os.c: 203: motor_init();
  7006  011A10  ECF0  F0AB         	call	_motor_init	;wreg free
  7007                           
  7008                           ;os.c: 206: configFile_readDefault();
  7009  011A14  EC0F  F0A1         	call	_configFile_readDefault	;wreg free
  7010                           
  7011                           ;os.c: 209: configFile_read();
  7012  011A18  ECDD  F07A         	call	_configFile_read	;wreg free
  7013                           
  7014                           ;os.c: 212: configFile_write();
  7015  011A1C  ECCA  F060         	call	_configFile_write	;wreg free
  7016                           
  7017                           ;os.c: 215: os.displayState = DISPLAY_STATE_MAIN_SETUP;
  7018  011A20  0E01               	movlw	1
  7019  011A22  0101               	movlb	1	; () banked
  7020  011A24  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
  7021                           
  7022                           ; BSR set to: 1
  7023                           ;os.c: 216: os.busy = 0;
  7024  011A26  0E00               	movlw	0
  7025  011A28  6F7F               	movwf	(_os+14)& (0+255),b	;volatile
  7026                           
  7027                           ; BSR set to: 1
  7028                           ;os.c: 218: os.last_approach_direction = MOTOR_DIRECTION_CW;
  7029  011A2A  0E01               	movlw	1
  7030  011A2C  6F80               	movwf	(_os+15)& (0+255),b	;volatile
  7031                           
  7032                           ; BSR set to: 1
  7033                           ;os.c: 219: os.setup_step_size = 1000;
  7034  011A2E  0E03               	movlw	3
  7035  011A30  6F82               	movwf	(_os+17)& (0+255),b	;volatile
  7036  011A32  0EE8               	movlw	232
  7037  011A34  6F81               	movwf	(_os+16)& (0+255),b	;volatile
  7038                           
  7039                           ; BSR set to: 1
  7040                           ;os.c: 220: os.approach_direction = MOTOR_DIRECTION_CW;
  7041  011A36  0E01               	movlw	1
  7042  011A38  6F83               	movwf	(_os+18)& (0+255),b	;volatile
  7043                           
  7044                           ; BSR set to: 1
  7045                           ;os.c: 221: os.division = 36;
  7046  011A3A  0E00               	movlw	0
  7047  011A3C  6F85               	movwf	(_os+20)& (0+255),b	;volatile
  7048  011A3E  0E24               	movlw	36
  7049  011A40  6F84               	movwf	(_os+19)& (0+255),b	;volatile
  7050                           
  7051                           ; BSR set to: 1
  7052                           ;os.c: 222: os.divide_step_size = 10;
  7053  011A42  0E0A               	movlw	10
  7054  011A44  6F86               	movwf	(_os+21)& (0+255),b	;volatile
  7055                           
  7056                           ; BSR set to: 1
  7057                           ;os.c: 223: os.divide_position = 0;
  7058  011A46  0E00               	movlw	0
  7059  011A48  6F88               	movwf	(_os+23)& (0+255),b	;volatile
  7060  011A4A  0E00               	movlw	0
  7061  011A4C  6F87               	movwf	(_os+22)& (0+255),b	;volatile
  7062                           
  7063                           ; BSR set to: 1
  7064                           ;os.c: 224: os.divide_jump_size = 1;
  7065  011A4E  0E00               	movlw	0
  7066  011A50  6F8A               	movwf	(_os+25)& (0+255),b	;volatile
  7067  011A52  0E01               	movlw	1
  7068  011A54  6F89               	movwf	(_os+24)& (0+255),b	;volatile
  7069                           
  7070                           ; BSR set to: 1
  7071                           ;os.c: 225: os.arc_step_size = 1000;
  7072  011A56  0E03               	movlw	3
  7073  011A58  6F8C               	movwf	(_os+27)& (0+255),b	;volatile
  7074  011A5A  0EE8               	movlw	232
  7075  011A5C  6F8B               	movwf	(_os+26)& (0+255),b	;volatile
  7076                           
  7077                           ; BSR set to: 1
  7078                           ;os.c: 226: os.arc_size = 1000;
  7079  011A5E  0EE8               	movlw	232
  7080  011A60  6F8D               	movwf	(_os+28)& (0+255),b	;volatile
  7081  011A62  0E03               	movlw	3
  7082  011A64  6F8E               	movwf	(_os+29)& (0+255),b	;volatile
  7083  011A66  0E00               	movlw	0
  7084  011A68  6F8F               	movwf	(_os+30)& (0+255),b	;volatile
  7085  011A6A  0E00               	movlw	0
  7086  011A6C  6F90               	movwf	(_os+31)& (0+255),b	;volatile
  7087                           
  7088                           ; BSR set to: 1
  7089                           ;os.c: 227: os.arc_speed = config.initial_speed_arc;
  7090  011A6E  C1AE  F191         	movff	_config+13,_os+32	;volatile
  7091  011A72  C1AF  F192         	movff	_config+14,_os+33	;volatile
  7092                           
  7093                           ; BSR set to: 1
  7094                           ;os.c: 228: os.arc_direction = MOTOR_DIRECTION_CW;
  7095  011A76  0E01               	movlw	1
  7096  011A78  6F93               	movwf	(_os+34)& (0+255),b	;volatile
  7097                           
  7098                           ; BSR set to: 1
  7099                           ;os.c: 229: os.manual_speed = config.initial_speed_manual;
  7100  011A7A  C1B2  F194         	movff	_config+17,_os+35	;volatile
  7101  011A7E  C1B3  F195         	movff	_config+18,_os+36	;volatile
  7102                           
  7103                           ; BSR set to: 1
  7104                           ;os.c: 230: os.manual_direction = MOTOR_DIRECTION_CW;
  7105  011A82  0E01               	movlw	1
  7106  011A84  6F96               	movwf	(_os+37)& (0+255),b	;volatile
  7107                           
  7108                           ; BSR set to: 1
  7109                           ;os.c: 231: os.beep_count = 0;
  7110  011A86  0E00               	movlw	0
  7111  011A88  6F97               	movwf	(_os+38)& (0+255),b	;volatile
  7112                           
  7113                           ; BSR set to: 1
  7114                           ;os.c: 234: os.current_position_in_steps = i2c_eeprom_readUint32(0x200);
  7115  011A8A  0E02               	movlw	2
  7116  011A8C  0100               	movlb	0	; () banked
  7117  011A8E  6F7A               	movwf	(i2c_eeprom_readUint32@address+1)& (0+255),b
  7118  011A90  0E00               	movlw	0
  7119  011A92  6F79               	movwf	i2c_eeprom_readUint32@address& (0+255),b
  7120  011A94  EC5A  F0AA         	call	_i2c_eeprom_readUint32	;wreg free
  7121  011A98  C079  F178         	movff	?_i2c_eeprom_readUint32,_os+7	;volatile
  7122  011A9C  C07A  F179         	movff	?_i2c_eeprom_readUint32+1,_os+8	;volatile
  7123  011AA0  C07B  F17A         	movff	?_i2c_eeprom_readUint32+2,_os+9	;volatile
  7124  011AA4  C07C  F17B         	movff	?_i2c_eeprom_readUint32+3,_os+10	;volatile
  7125                           
  7126                           ;os.c: 235: if(os.current_position_in_steps>config.full_circle_in_steps)
  7127  011AA8  0101               	movlb	1	; () banked
  7128  011AAA  5178               	movf	(_os+7)& (0+255),w,b	;volatile
  7129  011AAC  5DA1               	subwf	_config& (0+255),w,b
  7130  011AAE  5179               	movf	(_os+8)& (0+255),w,b	;volatile
  7131  011AB0  59A2               	subwfb	(_config+1)& (0+255),w,b
  7132  011AB2  517A               	movf	(_os+9)& (0+255),w,b	;volatile
  7133  011AB4  59A3               	subwfb	(_config+2)& (0+255),w,b
  7134  011AB6  517B               	movf	(_os+10)& (0+255),w,b	;volatile
  7135  011AB8  59A4               	subwfb	(_config+3)& (0+255),w,b
  7136  011ABA  B0D8               	btfsc	status,0,c
  7137  011ABC  D008               	goto	l1082
  7138                           
  7139                           ; BSR set to: 1
  7140                           ;os.c: 236: {;os.c: 237: os.current_position_in_steps = 0;
  7141  011ABE  0E00               	movlw	0
  7142  011AC0  6F78               	movwf	(_os+7)& (0+255),b	;volatile
  7143  011AC2  0E00               	movlw	0
  7144  011AC4  6F79               	movwf	(_os+8)& (0+255),b	;volatile
  7145  011AC6  0E00               	movlw	0
  7146  011AC8  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
  7147  011ACA  0E00               	movlw	0
  7148  011ACC  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
  7149  011ACE                     l1082:
  7150                           
  7151                           ; BSR set to: 1
  7152                           ;os.c: 238: };os.c: 239: motor_calculate_position_in_degrees();
  7153                           
  7154                           ; BSR set to: 1
  7155  011ACE  EC1B  F090         	call	_motor_calculate_position_in_degrees	;wreg free
  7156                           
  7157                           ;os.c: 242: _system_timer0_init();
  7158  011AD2  EC70  F0AA         	call	__system_timer0_init	;wreg free
  7159  011AD6  0012               	return		;funcret
  7160  011AD8                     __end_of_system_init:
  7161                           	opt stack 0
  7162                           tblptru	equ	0xFF8
  7163                           tblptrh	equ	0xFF7
  7164                           tblptrl	equ	0xFF6
  7165                           tablat	equ	0xFF5
  7166                           postinc0	equ	0xFEE
  7167                           wreg	equ	0xFE8
  7168                           postdec1	equ	0xFE5
  7169                           fsr1h	equ	0xFE2
  7170                           fsr1l	equ	0xFE1
  7171                           status	equ	0xFD8
  7172                           
  7173 ;; *************** function _motor_init *****************
  7174 ;; Defined at:
  7175 ;;		line 184 in file "motor.c"
  7176 ;; Parameters:    Size  Location     Type
  7177 ;;		None
  7178 ;; Auto vars:     Size  Location     Type
  7179 ;;		None
  7180 ;; Return value:  Size  Location     Type
  7181 ;;                  1    wreg      void 
  7182 ;; Registers used:
  7183 ;;		wreg, status,2
  7184 ;; Tracked objects:
  7185 ;;		On entry : 0/0
  7186 ;;		On exit  : 0/0
  7187 ;;		Unchanged: 0/0
  7188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7193 ;;Total ram usage:        0 bytes
  7194 ;; Hardware stack levels used:    1
  7195 ;; Hardware stack levels required when called:   10
  7196 ;; This function calls:
  7197 ;;		Nothing
  7198 ;; This function is called by:
  7199 ;;		_system_init
  7200 ;; This function uses a non-reentrant model
  7201 ;;
  7202                           
  7203                           	psect	text2
  7204  0157E0                     __ptext2:
  7205                           	opt stack 0
  7206  0157E0                     _motor_init:
  7207                           	opt stack 19
  7208                           
  7209                           ;motor.c: 187: motor_cue_read_index = 0;
  7210                           
  7211                           ;incstack = 0
  7212  0157E0  0E00               	movlw	0
  7213  0157E2  0101               	movlb	1	; () banked
  7214  0157E4  6F58               	movwf	_motor_cue_read_index& (0+255),b
  7215                           
  7216                           ;motor.c: 188: motor_cue_write_index = 0;
  7217  0157E6  0E00               	movlw	0
  7218  0157E8  6F57               	movwf	_motor_cue_write_index& (0+255),b
  7219                           
  7220                           ; BSR set to: 1
  7221                           ;motor.c: 194: CCPTMRS0bits.C2TSEL = 0b000;
  7222  0157EA  010F               	movlb	15	; () banked
  7223  0157EC  9752               	bcf	82,3,b	;volatile
  7224  0157EE  9952               	bcf	82,4,b	;volatile
  7225  0157F0  9B52               	bcf	82,5,b	;volatile
  7226                           
  7227                           ;motor.c: 199: CCP1CONbits.P1M = 0b00;
  7228  0157F2  0E3F               	movlw	-193
  7229  0157F4  16BA               	andwf	4026,f,c	;volatile
  7230                           
  7231                           ;motor.c: 202: CCP1CONbits.DC1B = 0b00;
  7232  0157F6  0ECF               	movlw	-49
  7233  0157F8  16BA               	andwf	4026,f,c	;volatile
  7234                           
  7235                           ; BSR set to: 15
  7236                           ;motor.c: 205: LATBbits.LB0 = 0;
  7237  0157FA  908A               	bcf	3978,0,c	;volatile
  7238                           
  7239                           ; BSR set to: 15
  7240  0157FC  0012               	return		;funcret
  7241  0157FE                     __end_of_motor_init:
  7242                           	opt stack 0
  7243                           tblptru	equ	0xFF8
  7244                           tblptrh	equ	0xFF7
  7245                           tblptrl	equ	0xFF6
  7246                           tablat	equ	0xFF5
  7247                           postinc0	equ	0xFEE
  7248                           wreg	equ	0xFE8
  7249                           postdec1	equ	0xFE5
  7250                           fsr1h	equ	0xFE2
  7251                           fsr1l	equ	0xFE1
  7252                           status	equ	0xFD8
  7253                           
  7254 ;; *************** function _i2c_init *****************
  7255 ;; Defined at:
  7256 ;;		line 24 in file "i2c.c"
  7257 ;; Parameters:    Size  Location     Type
  7258 ;;		None
  7259 ;; Auto vars:     Size  Location     Type
  7260 ;;		None
  7261 ;; Return value:  Size  Location     Type
  7262 ;;                  1    wreg      void 
  7263 ;; Registers used:
  7264 ;;		wreg, status,2
  7265 ;; Tracked objects:
  7266 ;;		On entry : 0/0
  7267 ;;		On exit  : 0/0
  7268 ;;		Unchanged: 0/0
  7269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7274 ;;Total ram usage:        0 bytes
  7275 ;; Hardware stack levels used:    1
  7276 ;; Hardware stack levels required when called:   10
  7277 ;; This function calls:
  7278 ;;		Nothing
  7279 ;; This function is called by:
  7280 ;;		_system_init
  7281 ;; This function uses a non-reentrant model
  7282 ;;
  7283                           
  7284                           	psect	text3
  7285  0157FE                     __ptext3:
  7286                           	opt stack 0
  7287  0157FE                     _i2c_init:
  7288                           	opt stack 19
  7289                           
  7290                           ;i2c.c: 26: TRISBbits.TRISB5 = 1;
  7291                           
  7292                           ; BSR set to: 15
  7293                           ;incstack = 0
  7294  0157FE  8A93               	bsf	3987,5,c	;volatile
  7295                           
  7296                           ;i2c.c: 27: TRISBbits.TRISB4 = 1;
  7297  015800  8893               	bsf	3987,4,c	;volatile
  7298                           
  7299                           ;i2c.c: 29: SSP1STATbits.SMP = 1;
  7300  015802  8EC7               	bsf	4039,7,c	;volatile
  7301                           
  7302                           ;i2c.c: 30: SSP1STATbits.CKE = 0;
  7303  015804  9CC7               	bcf	4039,6,c	;volatile
  7304                           
  7305                           ;i2c.c: 32: SSP1ADD = 119;
  7306  015806  0E77               	movlw	119
  7307  015808  6EC8               	movwf	4040,c	;volatile
  7308                           
  7309                           ;i2c.c: 34: SSP1CON1bits.WCOL = 0;
  7310  01580A  9EC6               	bcf	4038,7,c	;volatile
  7311                           
  7312                           ;i2c.c: 35: SSP1CON1bits.SSPOV = 0;
  7313  01580C  9CC6               	bcf	4038,6,c	;volatile
  7314                           
  7315                           ;i2c.c: 36: SSP1CON1bits.SSPM = 0b1000;
  7316  01580E  50C6               	movf	4038,w,c	;volatile
  7317  015810  0BF0               	andlw	-16
  7318  015812  0908               	iorlw	8
  7319  015814  6EC6               	movwf	4038,c	;volatile
  7320                           
  7321                           ;i2c.c: 37: SSP1CON1bits.SSPEN = 1;
  7322  015816  8AC6               	bsf	4038,5,c	;volatile
  7323  015818  0012               	return		;funcret
  7324  01581A                     __end_of_i2c_init:
  7325                           	opt stack 0
  7326                           tblptru	equ	0xFF8
  7327                           tblptrh	equ	0xFF7
  7328                           tblptrl	equ	0xFF6
  7329                           tablat	equ	0xFF5
  7330                           postinc0	equ	0xFEE
  7331                           wreg	equ	0xFE8
  7332                           postdec1	equ	0xFE5
  7333                           fsr1h	equ	0xFE2
  7334                           fsr1l	equ	0xFE1
  7335                           status	equ	0xFD8
  7336                           
  7337 ;; *************** function _i2c_eeprom_readUint32 *****************
  7338 ;; Defined at:
  7339 ;;		line 235 in file "i2c.c"
  7340 ;; Parameters:    Size  Location     Type
  7341 ;;  address         2   25[BANK0 ] unsigned int 
  7342 ;; Auto vars:     Size  Location     Type
  7343 ;;  data            4   29[BANK0 ] unsigned long 
  7344 ;; Return value:  Size  Location     Type
  7345 ;;                  4   25[BANK0 ] unsigned long 
  7346 ;; Registers used:
  7347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7348 ;; Tracked objects:
  7349 ;;		On entry : 0/0
  7350 ;;		On exit  : 0/0
  7351 ;;		Unchanged: 0/0
  7352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7353 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7354 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7356 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7357 ;;Total ram usage:        8 bytes
  7358 ;; Hardware stack levels used:    1
  7359 ;; Hardware stack levels required when called:   13
  7360 ;; This function calls:
  7361 ;;		_i2c_eeprom_read
  7362 ;; This function is called by:
  7363 ;;		_system_init
  7364 ;; This function uses a non-reentrant model
  7365 ;;
  7366                           
  7367                           	psect	text4
  7368  0154B4                     __ptext4:
  7369                           	opt stack 0
  7370  0154B4                     _i2c_eeprom_readUint32:
  7371                           	opt stack 16
  7372                           
  7373                           ;i2c.c: 237: uint32_t data;;i2c.c: 238: i2c_eeprom_read(address, &data, 4);
  7374                           
  7375                           ;incstack = 0
  7376  0154B4  C079  F071         	movff	i2c_eeprom_readUint32@address,i2c_eeprom_read@address
  7377  0154B8  C07A  F072         	movff	i2c_eeprom_readUint32@address+1,i2c_eeprom_read@address+1
  7378  0154BC  0E7D               	movlw	low i2c_eeprom_readUint32@data
  7379  0154BE  0100               	movlb	0	; () banked
  7380  0154C0  6F73               	movwf	i2c_eeprom_read@data& (0+255),b
  7381  0154C2  0E00               	movlw	high i2c_eeprom_readUint32@data
  7382  0154C4  6F74               	movwf	(i2c_eeprom_read@data+1)& (0+255),b
  7383  0154C6  0E04               	movlw	4
  7384  0154C8  6F75               	movwf	i2c_eeprom_read@length& (0+255),b
  7385  0154CA  ECAB  F0A4         	call	_i2c_eeprom_read	;wreg free
  7386                           
  7387                           ;i2c.c: 239: return data;
  7388  0154CE  C07D  F079         	movff	i2c_eeprom_readUint32@data,?_i2c_eeprom_readUint32
  7389  0154D2  C07E  F07A         	movff	i2c_eeprom_readUint32@data+1,?_i2c_eeprom_readUint32+1
  7390  0154D6  C07F  F07B         	movff	i2c_eeprom_readUint32@data+2,?_i2c_eeprom_readUint32+2
  7391  0154DA  C080  F07C         	movff	i2c_eeprom_readUint32@data+3,?_i2c_eeprom_readUint32+3
  7392  0154DE  0012               	return	
  7393  0154E0                     __end_of_i2c_eeprom_readUint32:
  7394                           	opt stack 0
  7395                           tblptru	equ	0xFF8
  7396                           tblptrh	equ	0xFF7
  7397                           tblptrl	equ	0xFF6
  7398                           tablat	equ	0xFF5
  7399                           postinc0	equ	0xFEE
  7400                           wreg	equ	0xFE8
  7401                           postdec1	equ	0xFE5
  7402                           fsr1h	equ	0xFE2
  7403                           fsr1l	equ	0xFE1
  7404                           status	equ	0xFD8
  7405                           
  7406 ;; *************** function _i2c_eeprom_read *****************
  7407 ;; Defined at:
  7408 ;;		line 263 in file "i2c.c"
  7409 ;; Parameters:    Size  Location     Type
  7410 ;;  address         2   17[BANK0 ] unsigned int 
  7411 ;;  data            2   19[BANK0 ] PTR unsigned char 
  7412 ;;		 -> i2c_eeprom_readUint32@data(4), i2c_eeprom_readUint16@data(2), 
  7413 ;;  length          1   21[BANK0 ] unsigned char 
  7414 ;; Auto vars:     Size  Location     Type
  7415 ;;  slave_addres    1   24[BANK0 ] unsigned char 
  7416 ;;  addr            1   23[BANK0 ] unsigned char 
  7417 ;; Return value:  Size  Location     Type
  7418 ;;                  1    wreg      void 
  7419 ;; Registers used:
  7420 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7421 ;; Tracked objects:
  7422 ;;		On entry : 0/0
  7423 ;;		On exit  : 0/0
  7424 ;;		Unchanged: 0/0
  7425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7426 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7427 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7428 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7429 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7430 ;;Total ram usage:        8 bytes
  7431 ;; Hardware stack levels used:    1
  7432 ;; Hardware stack levels required when called:   12
  7433 ;; This function calls:
  7434 ;;		__i2c_eeprom_busy
  7435 ;;		__i2c_read
  7436 ;;		__i2c_write
  7437 ;; This function is called by:
  7438 ;;		_i2c_eeprom_readUint32
  7439 ;;		_i2c_eeprom_readUint16
  7440 ;; This function uses a non-reentrant model
  7441 ;;
  7442                           
  7443                           	psect	text5
  7444  014956                     __ptext5:
  7445                           	opt stack 0
  7446  014956                     _i2c_eeprom_read:
  7447                           	opt stack 16
  7448                           
  7449                           ;i2c.c: 265: uint8_t slave_address;;i2c.c: 266: uint8_t addr;;i2c.c: 267: addr = address
      +                           & 0xFF;
  7450                           
  7451                           ;incstack = 0
  7452  014956  C071  F077         	movff	i2c_eeprom_read@address,i2c_eeprom_read@addr
  7453                           
  7454                           ;i2c.c: 268: address &= 0b0000011100000000;
  7455  01495A  0100               	movlb	0	; () banked
  7456  01495C  0E00               	movlw	0
  7457  01495E  1771               	andwf	i2c_eeprom_read@address& (0+255),f,b
  7458  014960  0E07               	movlw	7
  7459  014962  1772               	andwf	(i2c_eeprom_read@address+1)& (0+255),f,b
  7460                           
  7461                           ;i2c.c: 269: address >>= 7;
  7462  014964  0E07               	movlw	7
  7463  014966  6F76               	movwf	??_i2c_eeprom_read& (0+255),b
  7464  014968                     u14135:
  7465  014968  90D8               	bcf	status,0,c
  7466  01496A  3372               	rrcf	(i2c_eeprom_read@address+1)& (0+255),f,b
  7467  01496C  3371               	rrcf	i2c_eeprom_read@address& (0+255),f,b
  7468  01496E  2F76               	decfsz	??_i2c_eeprom_read& (0+255),f,b
  7469  014970  D7FB               	goto	u14135
  7470                           
  7471                           ;i2c.c: 270: slave_address = 0b10100000 | address;
  7472  014972  5171               	movf	i2c_eeprom_read@address& (0+255),w,b
  7473  014974  09A0               	iorlw	160
  7474  014976  6F78               	movwf	i2c_eeprom_read@slave_address& (0+255),b
  7475  014978                     
  7476                           ; BSR set to: 0
  7477                           
  7478                           ; BSR set to: 0
  7479  014978  ECF0  F0AA         	call	__i2c_eeprom_busy	;wreg free
  7480  01497C  0900               	iorlw	0
  7481  01497E  A4D8               	btfss	status,2,c
  7482  014980  D7FB               	goto	l1213
  7483                           
  7484                           ;i2c.c: 275: _i2c_write(slave_address, &addr, 1);
  7485  014982  0E77               	movlw	low i2c_eeprom_read@addr
  7486  014984  0100               	movlb	0	; () banked
  7487  014986  6F65               	movwf	__i2c_write@data& (0+255),b
  7488  014988  0E00               	movlw	high i2c_eeprom_read@addr
  7489  01498A  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  7490  01498C  0E01               	movlw	1
  7491  01498E  6F67               	movwf	__i2c_write@length& (0+255),b
  7492  014990  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
  7493  014992  EC22  F0A6         	call	__i2c_write
  7494                           
  7495                           ;i2c.c: 276: _i2c_read(slave_address, &data[0], length);
  7496  014996  C073  F065         	movff	i2c_eeprom_read@data,__i2c_read@data
  7497  01499A  C074  F066         	movff	i2c_eeprom_read@data+1,__i2c_read@data+1
  7498  01499E  C075  F067         	movff	i2c_eeprom_read@length,__i2c_read@length
  7499  0149A2  0100               	movlb	0	; () banked
  7500  0149A4  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
  7501  0149A6  EC50  F09B         	call	__i2c_read
  7502  0149AA  0012               	return		;funcret
  7503  0149AC                     __end_of_i2c_eeprom_read:
  7504                           	opt stack 0
  7505                           tblptru	equ	0xFF8
  7506                           tblptrh	equ	0xFF7
  7507                           tblptrl	equ	0xFF6
  7508                           tablat	equ	0xFF5
  7509                           postinc0	equ	0xFEE
  7510                           wreg	equ	0xFE8
  7511                           postdec1	equ	0xFE5
  7512                           fsr1h	equ	0xFE2
  7513                           fsr1l	equ	0xFE1
  7514                           status	equ	0xFD8
  7515                           
  7516 ;; *************** function __i2c_read *****************
  7517 ;; Defined at:
  7518 ;;		line 103 in file "i2c.c"
  7519 ;; Parameters:    Size  Location     Type
  7520 ;;  slave_addres    1    wreg     unsigned char 
  7521 ;;  data            2    5[BANK0 ] PTR unsigned char 
  7522 ;;		 -> i2c_eeprom_readUint32@data(4), i2c_eeprom_readUint16@data(2), i2c_eeprom_readByte@addr(1), 
  7523 ;;  length          1    7[BANK0 ] unsigned char 
  7524 ;; Auto vars:     Size  Location     Type
  7525 ;;  slave_addres    1   15[BANK0 ] unsigned char 
  7526 ;;  cntr            1   16[BANK0 ] unsigned char 
  7527 ;; Return value:  Size  Location     Type
  7528 ;;                  1    wreg      void 
  7529 ;; Registers used:
  7530 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7531 ;; Tracked objects:
  7532 ;;		On entry : 0/0
  7533 ;;		On exit  : 0/0
  7534 ;;		Unchanged: 0/0
  7535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7536 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7537 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7538 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7539 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7540 ;;Total ram usage:       12 bytes
  7541 ;; Hardware stack levels used:    1
  7542 ;; Hardware stack levels required when called:   11
  7543 ;; This function calls:
  7544 ;;		__i2c_acknowledge
  7545 ;;		__i2c_get
  7546 ;;		__i2c_not_acknowledge
  7547 ;;		__i2c_send
  7548 ;;		__i2c_start
  7549 ;;		__i2c_stop
  7550 ;;		__i2c_wait_idle
  7551 ;; This function is called by:
  7552 ;;		_i2c_eeprom_read
  7553 ;;		_i2c_eeprom_readByte
  7554 ;; This function uses a non-reentrant model
  7555 ;;
  7556                           
  7557                           	psect	text6
  7558  0136A0                     __ptext6:
  7559                           	opt stack 0
  7560  0136A0                     __i2c_read:
  7561                           	opt stack 16
  7562                           
  7563                           ;incstack = 0
  7564                           ;__i2c_read@slave_address stored from wreg
  7565  0136A0  0100               	movlb	0	; () banked
  7566  0136A2  6F6F               	movwf	__i2c_read@slave_address& (0+255),b
  7567                           
  7568                           ;i2c.c: 105: uint8_t cntr;;i2c.c: 107: _i2c_wait_idle();
  7569  0136A4  ECDD  F0A0         	call	__i2c_wait_idle	;wreg free
  7570                           
  7571                           ;i2c.c: 108: _i2c_start();
  7572  0136A8  ECD1  F0AC         	call	__i2c_start	;wreg free
  7573                           
  7574                           ;i2c.c: 109: _i2c_wait_idle();
  7575  0136AC  ECDD  F0A0         	call	__i2c_wait_idle	;wreg free
  7576                           
  7577                           ;i2c.c: 110: _i2c_send(slave_address | 0x01);
  7578  0136B0  0100               	movlb	0	; () banked
  7579  0136B2  516F               	movf	__i2c_read@slave_address& (0+255),w,b
  7580  0136B4  0901               	iorlw	1
  7581  0136B6  ECBE  F0AC         	call	__i2c_send
  7582                           
  7583                           ;i2c.c: 111: _i2c_wait_idle();
  7584  0136BA  ECDD  F0A0         	call	__i2c_wait_idle	;wreg free
  7585                           
  7586                           ;i2c.c: 121: for(cntr=0; cntr<length-1; ++cntr)
  7587  0136BE  0E00               	movlw	0
  7588  0136C0  0100               	movlb	0	; () banked
  7589  0136C2  6F70               	movwf	__i2c_read@cntr& (0+255),b
  7590  0136C4  D00F               	goto	l1164
  7591  0136C6                     
  7592                           ; BSR set to: 0
  7593                           ;i2c.c: 122: {;i2c.c: 123: data[cntr] = _i2c_get();
  7594                           
  7595                           ; BSR set to: 0
  7596  0136C6  5170               	movf	__i2c_read@cntr& (0+255),w,b
  7597  0136C8  0D01               	mullw	1
  7598  0136CA  50F3               	movf	prodl,w,c
  7599  0136CC  2565               	addwf	__i2c_read@data& (0+255),w,b
  7600  0136CE  6ED9               	movwf	fsr2l,c
  7601  0136D0  50F4               	movf	prodh,w,c
  7602  0136D2  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
  7603  0136D4  6EDA               	movwf	fsr2h,c
  7604  0136D6  ECB4  F0AC         	call	__i2c_get	;wreg free
  7605  0136DA  6EDF               	movwf	indf2,c
  7606                           
  7607                           ;i2c.c: 124: _i2c_acknowledge();
  7608  0136DC  ECB9  F0AC         	call	__i2c_acknowledge	;wreg free
  7609  0136E0  0100               	movlb	0	; () banked
  7610  0136E2  2B70               	incf	__i2c_read@cntr& (0+255),f,b
  7611  0136E4                     l1164:
  7612                           
  7613                           ; BSR set to: 0
  7614                           
  7615                           ; BSR set to: 0
  7616  0136E4  0EFF               	movlw	255
  7617  0136E6  6F68               	movwf	??__i2c_read& (0+255),b
  7618  0136E8  0EFF               	movlw	255
  7619  0136EA  6F69               	movwf	(??__i2c_read+1)& (0+255),b
  7620  0136EC  5167               	movf	__i2c_read@length& (0+255),w,b
  7621  0136EE  6F6A               	movwf	(??__i2c_read+2)& (0+255),b
  7622  0136F0  6B6B               	clrf	(??__i2c_read+3)& (0+255),b
  7623  0136F2  5168               	movf	??__i2c_read& (0+255),w,b
  7624  0136F4  276A               	addwf	(??__i2c_read+2)& (0+255),f,b
  7625  0136F6  5169               	movf	(??__i2c_read+1)& (0+255),w,b
  7626  0136F8  236B               	addwfc	(??__i2c_read+3)& (0+255),f,b
  7627  0136FA  5170               	movf	__i2c_read@cntr& (0+255),w,b
  7628  0136FC  6F6C               	movwf	(??__i2c_read+4)& (0+255),b
  7629  0136FE  6B6D               	clrf	(??__i2c_read+5)& (0+255),b
  7630  013700  516A               	movf	(??__i2c_read+2)& (0+255),w,b
  7631  013702  5D6C               	subwf	(??__i2c_read+4)& (0+255),w,b
  7632  013704  516D               	movf	(??__i2c_read+5)& (0+255),w,b
  7633  013706  0A80               	xorlw	128
  7634  013708  6F6E               	movwf	(??__i2c_read+6)& (0+255),b
  7635  01370A  516B               	movf	(??__i2c_read+3)& (0+255),w,b
  7636  01370C  0A80               	xorlw	128
  7637  01370E  596E               	subwfb	(??__i2c_read+6)& (0+255),w,b
  7638  013710  A0D8               	btfss	status,0,c
  7639  013712  D7D9               	goto	l1165
  7640                           
  7641                           ; BSR set to: 0
  7642                           ;i2c.c: 125: };i2c.c: 126: data[cntr] = _i2c_get();
  7643                           
  7644                           ; BSR set to: 0
  7645  013714  5170               	movf	__i2c_read@cntr& (0+255),w,b
  7646  013716  0D01               	mullw	1
  7647  013718  50F3               	movf	prodl,w,c
  7648  01371A  2565               	addwf	__i2c_read@data& (0+255),w,b
  7649  01371C  6ED9               	movwf	fsr2l,c
  7650  01371E  50F4               	movf	prodh,w,c
  7651  013720  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
  7652  013722  6EDA               	movwf	fsr2h,c
  7653  013724  ECB4  F0AC         	call	__i2c_get	;wreg free
  7654  013728  6EDF               	movwf	indf2,c
  7655                           
  7656                           ;i2c.c: 127: _i2c_not_acknowledge();
  7657  01372A  ECAF  F0AC         	call	__i2c_not_acknowledge	;wreg free
  7658                           
  7659                           ;i2c.c: 129: _i2c_stop();
  7660  01372E  ECCD  F0AC         	call	__i2c_stop	;wreg free
  7661  013732  0012               	return		;funcret
  7662  013734                     __end_of__i2c_read:
  7663                           	opt stack 0
  7664                           tblptru	equ	0xFF8
  7665                           tblptrh	equ	0xFF7
  7666                           tblptrl	equ	0xFF6
  7667                           tablat	equ	0xFF5
  7668                           prodh	equ	0xFF4
  7669                           prodl	equ	0xFF3
  7670                           postinc0	equ	0xFEE
  7671                           wreg	equ	0xFE8
  7672                           postdec1	equ	0xFE5
  7673                           fsr1h	equ	0xFE2
  7674                           fsr1l	equ	0xFE1
  7675                           indf2	equ	0xFDF
  7676                           fsr2h	equ	0xFDA
  7677                           fsr2l	equ	0xFD9
  7678                           status	equ	0xFD8
  7679                           
  7680 ;; *************** function __i2c_not_acknowledge *****************
  7681 ;; Defined at:
  7682 ;;		line 76 in file "i2c.c"
  7683 ;; Parameters:    Size  Location     Type
  7684 ;;		None
  7685 ;; Auto vars:     Size  Location     Type
  7686 ;;		None
  7687 ;; Return value:  Size  Location     Type
  7688 ;;                  1    wreg      void 
  7689 ;; Registers used:
  7690 ;;		None
  7691 ;; Tracked objects:
  7692 ;;		On entry : 0/0
  7693 ;;		On exit  : 0/0
  7694 ;;		Unchanged: 0/0
  7695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7700 ;;Total ram usage:        0 bytes
  7701 ;; Hardware stack levels used:    1
  7702 ;; Hardware stack levels required when called:   10
  7703 ;; This function calls:
  7704 ;;		Nothing
  7705 ;; This function is called by:
  7706 ;;		__i2c_read
  7707 ;;		_i2c_adc_read
  7708 ;; This function uses a non-reentrant model
  7709 ;;
  7710                           
  7711                           	psect	text7
  7712  01595E                     __ptext7:
  7713                           	opt stack 0
  7714  01595E                     __i2c_not_acknowledge:
  7715                           	opt stack 16
  7716                           
  7717                           ;i2c.c: 78: SSP1CON2bits.ACKDT = 1;
  7718                           
  7719                           ;incstack = 0
  7720  01595E  8AC5               	bsf	4037,5,c	;volatile
  7721                           
  7722                           ;i2c.c: 79: SSP1CON2bits.ACKEN = 1;
  7723  015960  88C5               	bsf	4037,4,c	;volatile
  7724  015962  A8C5               	btfss	4037,4,c	;volatile
  7725  015964  0012               	return	
  7726  015966  D7FD               	goto	l1153
  7727  015968                     __end_of__i2c_not_acknowledge:
  7728                           	opt stack 0
  7729                           tblptru	equ	0xFF8
  7730                           tblptrh	equ	0xFF7
  7731                           tblptrl	equ	0xFF6
  7732                           tablat	equ	0xFF5
  7733                           prodh	equ	0xFF4
  7734                           prodl	equ	0xFF3
  7735                           postinc0	equ	0xFEE
  7736                           wreg	equ	0xFE8
  7737                           postdec1	equ	0xFE5
  7738                           fsr1h	equ	0xFE2
  7739                           fsr1l	equ	0xFE1
  7740                           indf2	equ	0xFDF
  7741                           fsr2h	equ	0xFDA
  7742                           fsr2l	equ	0xFD9
  7743                           status	equ	0xFD8
  7744                           
  7745 ;; *************** function __i2c_get *****************
  7746 ;; Defined at:
  7747 ;;		line 56 in file "i2c.c"
  7748 ;; Parameters:    Size  Location     Type
  7749 ;;		None
  7750 ;; Auto vars:     Size  Location     Type
  7751 ;;		None
  7752 ;; Return value:  Size  Location     Type
  7753 ;;                  1    wreg      unsigned char 
  7754 ;; Registers used:
  7755 ;;		wreg, status,2
  7756 ;; Tracked objects:
  7757 ;;		On entry : 0/0
  7758 ;;		On exit  : 0/0
  7759 ;;		Unchanged: 0/0
  7760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7765 ;;Total ram usage:        0 bytes
  7766 ;; Hardware stack levels used:    1
  7767 ;; Hardware stack levels required when called:   10
  7768 ;; This function calls:
  7769 ;;		Nothing
  7770 ;; This function is called by:
  7771 ;;		__i2c_read
  7772 ;;		_i2c_adc_read
  7773 ;; This function uses a non-reentrant model
  7774 ;;
  7775                           
  7776                           	psect	text8
  7777  015968                     __ptext8:
  7778                           	opt stack 0
  7779  015968                     __i2c_get:
  7780                           	opt stack 16
  7781                           
  7782                           ;i2c.c: 58: SSP1CON2bits.RCEN = 1 ;
  7783                           
  7784                           ;incstack = 0
  7785  015968  86C5               	bsf	4037,3,c	;volatile
  7786  01596A  B6C5               	btfsc	4037,3,c	;volatile
  7787  01596C  D7FE               	goto	l1135
  7788                           
  7789                           ;i2c.c: 60: return SSP1BUF;
  7790  01596E  50C9               	movf	4041,w,c	;volatile
  7791  015970  0012               	return	
  7792  015972                     __end_of__i2c_get:
  7793                           	opt stack 0
  7794                           tblptru	equ	0xFF8
  7795                           tblptrh	equ	0xFF7
  7796                           tblptrl	equ	0xFF6
  7797                           tablat	equ	0xFF5
  7798                           prodh	equ	0xFF4
  7799                           prodl	equ	0xFF3
  7800                           postinc0	equ	0xFEE
  7801                           wreg	equ	0xFE8
  7802                           postdec1	equ	0xFE5
  7803                           fsr1h	equ	0xFE2
  7804                           fsr1l	equ	0xFE1
  7805                           indf2	equ	0xFDF
  7806                           fsr2h	equ	0xFDA
  7807                           fsr2l	equ	0xFD9
  7808                           status	equ	0xFD8
  7809                           
  7810 ;; *************** function __i2c_acknowledge *****************
  7811 ;; Defined at:
  7812 ;;		line 69 in file "i2c.c"
  7813 ;; Parameters:    Size  Location     Type
  7814 ;;		None
  7815 ;; Auto vars:     Size  Location     Type
  7816 ;;		None
  7817 ;; Return value:  Size  Location     Type
  7818 ;;                  1    wreg      void 
  7819 ;; Registers used:
  7820 ;;		None
  7821 ;; Tracked objects:
  7822 ;;		On entry : 0/0
  7823 ;;		On exit  : 0/0
  7824 ;;		Unchanged: 0/0
  7825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7830 ;;Total ram usage:        0 bytes
  7831 ;; Hardware stack levels used:    1
  7832 ;; Hardware stack levels required when called:   10
  7833 ;; This function calls:
  7834 ;;		Nothing
  7835 ;; This function is called by:
  7836 ;;		__i2c_read
  7837 ;;		_i2c_adc_read
  7838 ;; This function uses a non-reentrant model
  7839 ;;
  7840                           
  7841                           	psect	text9
  7842  015972                     __ptext9:
  7843                           	opt stack 0
  7844  015972                     __i2c_acknowledge:
  7845                           	opt stack 16
  7846                           
  7847                           ;i2c.c: 71: SSP1CON2bits.ACKDT = 0;
  7848                           
  7849                           ;incstack = 0
  7850  015972  9AC5               	bcf	4037,5,c	;volatile
  7851                           
  7852                           ;i2c.c: 72: SSP1CON2bits.ACKEN = 1;
  7853  015974  88C5               	bsf	4037,4,c	;volatile
  7854  015976  A8C5               	btfss	4037,4,c	;volatile
  7855  015978  0012               	return	
  7856  01597A  D7FD               	goto	l1147
  7857  01597C                     __end_of__i2c_acknowledge:
  7858                           	opt stack 0
  7859                           tblptru	equ	0xFF8
  7860                           tblptrh	equ	0xFF7
  7861                           tblptrl	equ	0xFF6
  7862                           tablat	equ	0xFF5
  7863                           prodh	equ	0xFF4
  7864                           prodl	equ	0xFF3
  7865                           postinc0	equ	0xFEE
  7866                           wreg	equ	0xFE8
  7867                           postdec1	equ	0xFE5
  7868                           fsr1h	equ	0xFE2
  7869                           fsr1l	equ	0xFE1
  7870                           indf2	equ	0xFDF
  7871                           fsr2h	equ	0xFDA
  7872                           fsr2l	equ	0xFD9
  7873                           status	equ	0xFD8
  7874                           
  7875 ;; *************** function __i2c_eeprom_busy *****************
  7876 ;; Defined at:
  7877 ;;		line 169 in file "i2c.c"
  7878 ;; Parameters:    Size  Location     Type
  7879 ;;		None
  7880 ;; Auto vars:     Size  Location     Type
  7881 ;;  busy            1    5[BANK0 ] unsigned char 
  7882 ;; Return value:  Size  Location     Type
  7883 ;;                  1    wreg      unsigned char 
  7884 ;; Registers used:
  7885 ;;		wreg, status,2, status,0, cstack
  7886 ;; Tracked objects:
  7887 ;;		On entry : 0/0
  7888 ;;		On exit  : 0/0
  7889 ;;		Unchanged: 0/0
  7890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7892 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7894 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7895 ;;Total ram usage:        1 bytes
  7896 ;; Hardware stack levels used:    1
  7897 ;; Hardware stack levels required when called:   11
  7898 ;; This function calls:
  7899 ;;		__i2c_send
  7900 ;;		__i2c_start
  7901 ;;		__i2c_stop
  7902 ;;		__i2c_wait_idle
  7903 ;; This function is called by:
  7904 ;;		_i2c_eeprom_read
  7905 ;;		_i2c_eeprom_writeByte
  7906 ;;		_i2c_eeprom_readByte
  7907 ;; This function uses a non-reentrant model
  7908 ;;
  7909                           
  7910                           	psect	text10
  7911  0155E0                     __ptext10:
  7912                           	opt stack 0
  7913  0155E0                     __i2c_eeprom_busy:
  7914                           	opt stack 16
  7915                           
  7916                           ;i2c.c: 171: uint8_t busy;;i2c.c: 172: _i2c_wait_idle();
  7917                           
  7918                           ;incstack = 0
  7919  0155E0  ECDD  F0A0         	call	__i2c_wait_idle	;wreg free
  7920                           
  7921                           ;i2c.c: 173: _i2c_start();
  7922  0155E4  ECD1  F0AC         	call	__i2c_start	;wreg free
  7923                           
  7924                           ;i2c.c: 174: _i2c_wait_idle();
  7925  0155E8  ECDD  F0A0         	call	__i2c_wait_idle	;wreg free
  7926                           
  7927                           ;i2c.c: 175: _i2c_send(0b10100000);
  7928  0155EC  0EA0               	movlw	160
  7929  0155EE  ECBE  F0AC         	call	__i2c_send
  7930                           
  7931                           ;i2c.c: 176: _i2c_wait_idle();
  7932  0155F2  ECDD  F0A0         	call	__i2c_wait_idle	;wreg free
  7933                           
  7934                           ;i2c.c: 180: busy = SSP1CON2bits.ACKSTAT;
  7935  0155F6  0E00               	movlw	0
  7936  0155F8  BCC5               	btfsc	4037,6,c	;volatile
  7937  0155FA  0E01               	movlw	1
  7938  0155FC  0100               	movlb	0	; () banked
  7939  0155FE  6F65               	movwf	__i2c_eeprom_busy@busy& (0+255),b
  7940                           
  7941                           ; BSR set to: 0
  7942                           ;i2c.c: 181: _i2c_stop();
  7943  015600  ECCD  F0AC         	call	__i2c_stop	;wreg free
  7944                           
  7945                           ;i2c.c: 183: return 0;
  7946  015604  0E00               	movlw	0
  7947  015606  0012               	return	
  7948  015608                     __end_of__i2c_eeprom_busy:
  7949                           	opt stack 0
  7950                           tblptru	equ	0xFF8
  7951                           tblptrh	equ	0xFF7
  7952                           tblptrl	equ	0xFF6
  7953                           tablat	equ	0xFF5
  7954                           prodh	equ	0xFF4
  7955                           prodl	equ	0xFF3
  7956                           postinc0	equ	0xFEE
  7957                           wreg	equ	0xFE8
  7958                           postdec1	equ	0xFE5
  7959                           fsr1h	equ	0xFE2
  7960                           fsr1l	equ	0xFE1
  7961                           indf2	equ	0xFDF
  7962                           fsr2h	equ	0xFDA
  7963                           fsr2l	equ	0xFD9
  7964                           status	equ	0xFD8
  7965                           
  7966 ;; *************** function _flash_init *****************
  7967 ;; Defined at:
  7968 ;;		line 361 in file "flash.c"
  7969 ;; Parameters:    Size  Location     Type
  7970 ;;		None
  7971 ;; Auto vars:     Size  Location     Type
  7972 ;;		None
  7973 ;; Return value:  Size  Location     Type
  7974 ;;                  1    wreg      void 
  7975 ;; Registers used:
  7976 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7977 ;; Tracked objects:
  7978 ;;		On entry : 0/0
  7979 ;;		On exit  : 0/0
  7980 ;;		Unchanged: 0/0
  7981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7986 ;;Total ram usage:        0 bytes
  7987 ;; Hardware stack levels used:    1
  7988 ;; Hardware stack levels required when called:   14
  7989 ;; This function calls:
  7990 ;;		__flash_set_page_size
  7991 ;;		_spi_init
  7992 ;; This function is called by:
  7993 ;;		_system_init
  7994 ;; This function uses a non-reentrant model
  7995 ;;
  7996                           
  7997                           	psect	text11
  7998  015920                     __ptext11:
  7999                           	opt stack 0
  8000  015920                     _flash_init:
  8001                           	opt stack 15
  8002                           
  8003                           ;flash.c: 364: spi_init(SPI_CONFIGURATION_INTERNAL);
  8004                           
  8005                           ;incstack = 0
  8006  015920  0E00               	movlw	0
  8007  015922  EC25  F0A8         	call	_spi_init
  8008                           
  8009                           ;flash.c: 367: _flash_set_page_size(FLASH_PAGE_SIZE_512);
  8010  015926  0E00               	movlw	0
  8011  015928  EC9A  F09F         	call	__flash_set_page_size
  8012  01592C  0012               	return		;funcret
  8013  01592E                     __end_of_flash_init:
  8014                           	opt stack 0
  8015                           tblptru	equ	0xFF8
  8016                           tblptrh	equ	0xFF7
  8017                           tblptrl	equ	0xFF6
  8018                           tablat	equ	0xFF5
  8019                           prodh	equ	0xFF4
  8020                           prodl	equ	0xFF3
  8021                           postinc0	equ	0xFEE
  8022                           wreg	equ	0xFE8
  8023                           postdec1	equ	0xFE5
  8024                           fsr1h	equ	0xFE2
  8025                           fsr1l	equ	0xFE1
  8026                           indf2	equ	0xFDF
  8027                           fsr2h	equ	0xFDA
  8028                           fsr2l	equ	0xFD9
  8029                           status	equ	0xFD8
  8030                           
  8031 ;; *************** function _spi_init *****************
  8032 ;; Defined at:
  8033 ;;		line 89 in file "spi.c"
  8034 ;; Parameters:    Size  Location     Type
  8035 ;;  configuratio    1    wreg     enum E6823
  8036 ;; Auto vars:     Size  Location     Type
  8037 ;;  configuratio    1    3[BANK0 ] enum E6823
  8038 ;; Return value:  Size  Location     Type
  8039 ;;                  1    wreg      void 
  8040 ;; Registers used:
  8041 ;;		wreg, status,2, status,0, cstack
  8042 ;; Tracked objects:
  8043 ;;		On entry : 0/0
  8044 ;;		On exit  : 0/0
  8045 ;;		Unchanged: 0/0
  8046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8048 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8050 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8051 ;;Total ram usage:        1 bytes
  8052 ;; Hardware stack levels used:    1
  8053 ;; Hardware stack levels required when called:   11
  8054 ;; This function calls:
  8055 ;;		__spi_init
  8056 ;; This function is called by:
  8057 ;;		_flash_init
  8058 ;; This function uses a non-reentrant model
  8059 ;;
  8060                           
  8061                           	psect	text12
  8062  01504A                     __ptext12:
  8063                           	opt stack 0
  8064  01504A                     _spi_init:
  8065                           	opt stack 17
  8066                           
  8067                           ;incstack = 0
  8068                           ;spi_init@configuration stored from wreg
  8069  01504A  0100               	movlb	0	; () banked
  8070  01504C  6F63               	movwf	spi_init@configuration& (0+255),b
  8071                           
  8072                           ;spi.c: 91: switch(configuration)
  8073  01504E  D012               	goto	l2164
  8074  015050                     
  8075                           ;spi.c: 94: _spi_init(config_internal);
  8076  015050  C136  F060         	movff	_config_internal,__spi_init@details
  8077  015054  C137  F061         	movff	_config_internal+1,__spi_init@details+1
  8078  015058  C138  F062         	movff	_config_internal+2,__spi_init@details+2
  8079  01505C  ECDC  F0A8         	call	__spi_init	;wreg free
  8080                           
  8081                           ;spi.c: 95: break;
  8082  015060  D011               	goto	l2166
  8083  015062                     
  8084                           ;spi.c: 98: _spi_init(config_external);
  8085  015062  C133  F060         	movff	_config_external,__spi_init@details
  8086  015066  C134  F061         	movff	_config_external+1,__spi_init@details+1
  8087  01506A  C135  F062         	movff	_config_external+2,__spi_init@details+2
  8088  01506E  ECDC  F0A8         	call	__spi_init	;wreg free
  8089                           
  8090                           ;spi.c: 100: }
  8091                           
  8092                           ;spi.c: 99: break;
  8093  015072  D008               	goto	l2166
  8094  015074                     l2164:
  8095  015074  0100               	movlb	0	; () banked
  8096  015076  5163               	movf	spi_init@configuration& (0+255),w,b
  8097                           
  8098                           ; Switch size 1, requested type "space"
  8099                           ; Number of cases is 2, Range of values is 0 to 1
  8100                           ; switch strategies available:
  8101                           ; Name         Instructions Cycles
  8102                           ; simple_byte            7     4 (average)
  8103                           ;	Chosen strategy is simple_byte
  8104  015078  0A00               	xorlw	0	; case 0
  8105  01507A  B4D8               	btfsc	status,2,c
  8106  01507C  D7E9               	goto	l2165
  8107  01507E  0A01               	xorlw	1	; case 1
  8108  015080  B4D8               	btfsc	status,2,c
  8109  015082  D7EF               	goto	l2167
  8110  015084                     l2166:
  8111                           
  8112                           ;spi.c: 102: active_configuration = configuration;
  8113  015084  C063  F159         	movff	spi_init@configuration,_active_configuration
  8114  015088  0012               	return		;funcret
  8115  01508A                     __end_of_spi_init:
  8116                           	opt stack 0
  8117                           tblptru	equ	0xFF8
  8118                           tblptrh	equ	0xFF7
  8119                           tblptrl	equ	0xFF6
  8120                           tablat	equ	0xFF5
  8121                           prodh	equ	0xFF4
  8122                           prodl	equ	0xFF3
  8123                           postinc0	equ	0xFEE
  8124                           wreg	equ	0xFE8
  8125                           postdec1	equ	0xFE5
  8126                           fsr1h	equ	0xFE2
  8127                           fsr1l	equ	0xFE1
  8128                           indf2	equ	0xFDF
  8129                           fsr2h	equ	0xFDA
  8130                           fsr2l	equ	0xFD9
  8131                           status	equ	0xFD8
  8132                           
  8133 ;; *************** function __spi_init *****************
  8134 ;; Defined at:
  8135 ;;		line 24 in file "spi.c"
  8136 ;; Parameters:    Size  Location     Type
  8137 ;;  details         3    0[BANK0 ] struct .
  8138 ;; Auto vars:     Size  Location     Type
  8139 ;;		None
  8140 ;; Return value:  Size  Location     Type
  8141 ;;                  1    wreg      void 
  8142 ;; Registers used:
  8143 ;;		wreg, status,2
  8144 ;; Tracked objects:
  8145 ;;		On entry : 0/0
  8146 ;;		On exit  : 0/0
  8147 ;;		Unchanged: 0/0
  8148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8149 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8152 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8153 ;;Total ram usage:        3 bytes
  8154 ;; Hardware stack levels used:    1
  8155 ;; Hardware stack levels required when called:   10
  8156 ;; This function calls:
  8157 ;;		Nothing
  8158 ;; This function is called by:
  8159 ;;		_spi_init
  8160 ;; This function uses a non-reentrant model
  8161 ;;
  8162                           
  8163                           	psect	text13
  8164  0151B8                     __ptext13:
  8165                           	opt stack 0
  8166  0151B8                     __spi_init:
  8167                           	opt stack 17
  8168                           
  8169                           ;spi.c: 30: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  8170                           
  8171                           ;incstack = 0
  8172  0151B8  0E55               	movlw	85
  8173  0151BA  6EA7               	movwf	4007,c	;volsfr
  8174  0151BC  0EAA               	movlw	170
  8175  0151BE  6EA7               	movwf	4007,c	;volsfr
  8176  0151C0  010E               	movlb	14	; () banked
  8177  0151C2  91BF               	bcf	191,0,b	;volatile
  8178                           
  8179                           ;spi.c: 31: RPINR21 = 22;
  8180  0151C4  0E16               	movlw	22
  8181  0151C6  6FFC               	movwf	252,b	;volatile
  8182                           
  8183                           ;spi.c: 32: RPOR21 = 10;
  8184  0151C8  0E0A               	movlw	10
  8185  0151CA  6FD5               	movwf	213,b	;volatile
  8186                           
  8187                           ;spi.c: 34: RPOR23 = 11;
  8188  0151CC  0E0B               	movlw	11
  8189  0151CE  6FD7               	movwf	215,b	;volatile
  8190                           
  8191                           ;spi.c: 35: RPINR22 = 23;
  8192  0151D0  0E17               	movlw	23
  8193  0151D2  6FFD               	movwf	253,b	;volatile
  8194                           
  8195                           ;spi.c: 36: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  8196  0151D4  0E55               	movlw	85
  8197  0151D6  6EA7               	movwf	4007,c	;volsfr
  8198  0151D8  0EAA               	movlw	170
  8199  0151DA  6EA7               	movwf	4007,c	;volsfr
  8200                           
  8201                           ; BSR set to: 14
  8202  0151DC  81BF               	bsf	191,0,b	;volatile
  8203                           
  8204                           ; BSR set to: 14
  8205                           ;spi.c: 39: SSP2STATbits.SMP = 1;
  8206  0151DE  8E73               	bsf	3955,7,c	;volatile
  8207                           
  8208                           ; BSR set to: 14
  8209                           ;spi.c: 40: SSP2STATbits.CKE = 1;
  8210  0151E0  8C73               	bsf	3955,6,c	;volatile
  8211                           
  8212                           ; BSR set to: 14
  8213                           ;spi.c: 41: SSP2CON1bits.CKP = 0;
  8214  0151E2  9872               	bcf	3954,4,c	;volatile
  8215                           
  8216                           ; BSR set to: 14
  8217                           ;spi.c: 42: SSP2CON1bits.SSPM =0b0000;
  8218  0151E4  9072               	bcf	3954,0,c	;volatile
  8219  0151E6  9272               	bcf	3954,1,c	;volatile
  8220  0151E8  9472               	bcf	3954,2,c	;volatile
  8221  0151EA  9672               	bcf	3954,3,c	;volatile
  8222                           
  8223                           ; BSR set to: 14
  8224                           ;spi.c: 43: SSP2CON1bits.SSPEN = 1;
  8225  0151EC  8A72               	bsf	3954,5,c	;volatile
  8226                           
  8227                           ; BSR set to: 14
  8228  0151EE  0012               	return		;funcret
  8229  0151F0                     __end_of__spi_init:
  8230                           	opt stack 0
  8231                           tblptru	equ	0xFF8
  8232                           tblptrh	equ	0xFF7
  8233                           tblptrl	equ	0xFF6
  8234                           tablat	equ	0xFF5
  8235                           prodh	equ	0xFF4
  8236                           prodl	equ	0xFF3
  8237                           postinc0	equ	0xFEE
  8238                           wreg	equ	0xFE8
  8239                           postdec1	equ	0xFE5
  8240                           fsr1h	equ	0xFE2
  8241                           fsr1l	equ	0xFE1
  8242                           indf2	equ	0xFDF
  8243                           fsr2h	equ	0xFDA
  8244                           fsr2l	equ	0xFD9
  8245                           status	equ	0xFD8
  8246                           
  8247 ;; *************** function __flash_set_page_size *****************
  8248 ;; Defined at:
  8249 ;;		line 99 in file "flash.c"
  8250 ;; Parameters:    Size  Location     Type
  8251 ;;  size            1    wreg     enum E6996
  8252 ;; Auto vars:     Size  Location     Type
  8253 ;;  size            1   23[BANK0 ] enum E6996
  8254 ;;  command         4   19[BANK0 ] unsigned char [4]
  8255 ;; Return value:  Size  Location     Type
  8256 ;;                  1    wreg      void 
  8257 ;; Registers used:
  8258 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8259 ;; Tracked objects:
  8260 ;;		On entry : 0/0
  8261 ;;		On exit  : 0/0
  8262 ;;		Unchanged: 0/0
  8263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8265 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8267 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8268 ;;Total ram usage:        5 bytes
  8269 ;; Hardware stack levels used:    1
  8270 ;; Hardware stack levels required when called:   13
  8271 ;; This function calls:
  8272 ;;		__flash_is_busy
  8273 ;;		_memcpy
  8274 ;;		_spi_tx
  8275 ;; This function is called by:
  8276 ;;		_flash_init
  8277 ;; This function uses a non-reentrant model
  8278 ;;
  8279                           
  8280                           	psect	text14
  8281  013F34                     __ptext14:
  8282                           	opt stack 0
  8283  013F34                     __flash_set_page_size:
  8284                           	opt stack 15
  8285                           
  8286                           ; BSR set to: 14
  8287                           ;incstack = 0
  8288                           ;__flash_set_page_size@size stored from wreg
  8289  013F34  0100               	movlb	0	; () banked
  8290  013F36  6F77               	movwf	__flash_set_page_size@size& (0+255),b
  8291  013F38                     
  8292                           ;flash.c: 101: uint8_t command[4];;flash.c: 104: while(_flash_is_busy());
  8293  013F38  EC8A  F0AB         	call	__flash_is_busy	;wreg free
  8294  013F3C  0900               	iorlw	0
  8295  013F3E  A4D8               	btfss	status,2,c
  8296  013F40  D7FB               	goto	l15521
  8297                           
  8298                           ;flash.c: 107: if(size==FLASH_PAGE_SIZE_512)
  8299  013F42  0100               	movlb	0	; () banked
  8300  013F44  5177               	movf	__flash_set_page_size@size& (0+255),w,b
  8301  013F46  A4D8               	btfss	status,2,c
  8302  013F48  D00E               	goto	l1522
  8303                           
  8304                           ; BSR set to: 0
  8305                           ;flash.c: 108: memcpy(command, flash_command_pagesize_512, 4);
  8306  013F4A  0E73               	movlw	low __flash_set_page_size@command
  8307  013F4C  6F60               	movwf	memcpy@d1& (0+255),b
  8308  013F4E  0E00               	movlw	high __flash_set_page_size@command
  8309  013F50  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  8310  013F52  0EE1               	movlw	low _flash_command_pagesize_512
  8311  013F54  6F62               	movwf	memcpy@s1& (0+255),b
  8312  013F56  0EA2               	movlw	high _flash_command_pagesize_512
  8313  013F58  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  8314  013F5A  0E00               	movlw	0
  8315  013F5C  6F65               	movwf	(memcpy@n+1)& (0+255),b
  8316  013F5E  0E04               	movlw	4
  8317  013F60  6F64               	movwf	memcpy@n& (0+255),b
  8318  013F62  EC05  F0A2         	call	_memcpy	;wreg free
  8319  013F66                     l1522:
  8320                           
  8321                           ;flash.c: 109: if(size==FLASH_PAGE_SIZE_528)
  8322  013F66  0100               	movlb	0	; () banked
  8323  013F68  0577               	decf	__flash_set_page_size@size& (0+255),w,b
  8324  013F6A  A4D8               	btfss	status,2,c
  8325  013F6C  D00E               	goto	l1523
  8326                           
  8327                           ; BSR set to: 0
  8328                           ;flash.c: 110: memcpy(command, flash_command_pagesize_528, 4);
  8329  013F6E  0E73               	movlw	low __flash_set_page_size@command
  8330  013F70  6F60               	movwf	memcpy@d1& (0+255),b
  8331  013F72  0E00               	movlw	high __flash_set_page_size@command
  8332  013F74  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  8333  013F76  0EDD               	movlw	low _flash_command_pagesize_528
  8334  013F78  6F62               	movwf	memcpy@s1& (0+255),b
  8335  013F7A  0EA2               	movlw	high _flash_command_pagesize_528
  8336  013F7C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  8337  013F7E  0E00               	movlw	0
  8338  013F80  6F65               	movwf	(memcpy@n+1)& (0+255),b
  8339  013F82  0E04               	movlw	4
  8340  013F84  6F64               	movwf	memcpy@n& (0+255),b
  8341  013F86  EC05  F0A2         	call	_memcpy	;wreg free
  8342  013F8A                     l1523:
  8343                           
  8344                           ;flash.c: 113: spi_tx(command, 4);
  8345  013F8A  0E73               	movlw	low __flash_set_page_size@command
  8346  013F8C  0100               	movlb	0	; () banked
  8347  013F8E  6F60               	movwf	spi_tx@data& (0+255),b
  8348  013F90  0E00               	movlw	high __flash_set_page_size@command
  8349  013F92  6F61               	movwf	(spi_tx@data+1)& (0+255),b
  8350  013F94  0E00               	movlw	0
  8351  013F96  6F63               	movwf	(spi_tx@length+1)& (0+255),b
  8352  013F98  0E04               	movlw	4
  8353  013F9A  6F62               	movwf	spi_tx@length& (0+255),b
  8354  013F9C  EC76  F0A3         	call	_spi_tx	;wreg free
  8355  013FA0  0012               	return		;funcret
  8356  013FA2                     __end_of__flash_set_page_size:
  8357                           	opt stack 0
  8358                           tblptru	equ	0xFF8
  8359                           tblptrh	equ	0xFF7
  8360                           tblptrl	equ	0xFF6
  8361                           tablat	equ	0xFF5
  8362                           prodh	equ	0xFF4
  8363                           prodl	equ	0xFF3
  8364                           postinc0	equ	0xFEE
  8365                           wreg	equ	0xFE8
  8366                           postdec1	equ	0xFE5
  8367                           fsr1h	equ	0xFE2
  8368                           fsr1l	equ	0xFE1
  8369                           indf2	equ	0xFDF
  8370                           fsr2h	equ	0xFDA
  8371                           fsr2l	equ	0xFD9
  8372                           status	equ	0xFD8
  8373                           
  8374 ;; *************** function _fat_init *****************
  8375 ;; Defined at:
  8376 ;;		line 1382 in file "fat16.c"
  8377 ;; Parameters:    Size  Location     Type
  8378 ;;		None
  8379 ;; Auto vars:     Size  Location     Type
  8380 ;;		None
  8381 ;; Return value:  Size  Location     Type
  8382 ;;                  1    wreg      void 
  8383 ;; Registers used:
  8384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8385 ;; Tracked objects:
  8386 ;;		On entry : 0/0
  8387 ;;		On exit  : 0/0
  8388 ;;		Unchanged: 0/0
  8389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8394 ;;Total ram usage:        0 bytes
  8395 ;; Hardware stack levels used:    1
  8396 ;; Hardware stack levels required when called:   16
  8397 ;; This function calls:
  8398 ;;		_fat_format
  8399 ;;		_fat_get_format_status
  8400 ;; This function is called by:
  8401 ;;		_system_init
  8402 ;; This function uses a non-reentrant model
  8403 ;;
  8404                           
  8405                           	psect	text15
  8406  0158F0                     __ptext15:
  8407                           	opt stack 0
  8408  0158F0                     _fat_init:
  8409                           	opt stack 13
  8410                           
  8411                           ;fat16.c: 1385: if(fat_get_format_status()==DRIVE_NOT_FORMATED)
  8412                           
  8413                           ;incstack = 0
  8414  0158F0  ECDB  F096         	call	_fat_get_format_status	;wreg free
  8415  0158F4  0900               	iorlw	0
  8416  0158F6  A4D8               	btfss	status,2,c
  8417  0158F8  0012               	return	
  8418                           
  8419                           ;fat16.c: 1386: {;fat16.c: 1387: fat_format();
  8420  0158FA  EC1F  F076         	call	_fat_format	;wreg free
  8421  0158FE  0012               	return	
  8422  015900                     __end_of_fat_init:
  8423                           	opt stack 0
  8424                           tblptru	equ	0xFF8
  8425                           tblptrh	equ	0xFF7
  8426                           tblptrl	equ	0xFF6
  8427                           tablat	equ	0xFF5
  8428                           prodh	equ	0xFF4
  8429                           prodl	equ	0xFF3
  8430                           postinc0	equ	0xFEE
  8431                           wreg	equ	0xFE8
  8432                           postdec1	equ	0xFE5
  8433                           fsr1h	equ	0xFE2
  8434                           fsr1l	equ	0xFE1
  8435                           indf2	equ	0xFDF
  8436                           fsr2h	equ	0xFDA
  8437                           fsr2l	equ	0xFD9
  8438                           status	equ	0xFD8
  8439                           
  8440 ;; *************** function _fat_get_format_status *****************
  8441 ;; Defined at:
  8442 ;;		line 1292 in file "fat16.c"
  8443 ;; Parameters:    Size  Location     Type
  8444 ;;		None
  8445 ;; Auto vars:     Size  Location     Type
  8446 ;;  cntr            2   45[BANK0 ] unsigned int 
  8447 ;; Return value:  Size  Location     Type
  8448 ;;                  1    wreg      enum E6970
  8449 ;; Registers used:
  8450 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8451 ;; Tracked objects:
  8452 ;;		On entry : 0/0
  8453 ;;		On exit  : 0/0
  8454 ;;		Unchanged: 0/0
  8455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8457 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8458 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8459 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8460 ;;Total ram usage:        4 bytes
  8461 ;; Hardware stack levels used:    1
  8462 ;; Hardware stack levels required when called:   15
  8463 ;; This function calls:
  8464 ;;		__get_fbr
  8465 ;;		__get_mbr
  8466 ;;		_flash_sector_read
  8467 ;; This function is called by:
  8468 ;;		_fat_init
  8469 ;; This function uses a non-reentrant model
  8470 ;;
  8471                           
  8472                           	psect	text16
  8473  012DB6                     __ptext16:
  8474                           	opt stack 0
  8475  012DB6                     _fat_get_format_status:
  8476                           	opt stack 13
  8477                           
  8478                           ;fat16.c: 1294: uint16_t cntr;;fat16.c: 1297: flash_sector_read(0, buffer);
  8479                           
  8480                           ;incstack = 0
  8481  012DB6  0E00               	movlw	0
  8482  012DB8  0100               	movlb	0	; () banked
  8483  012DBA  6F88               	movwf	(flash_sector_read@page+1)& (0+255),b
  8484  012DBC  0E00               	movlw	0
  8485  012DBE  6F87               	movwf	flash_sector_read@page& (0+255),b
  8486  012DC0  0E00               	movlw	low _buffer
  8487  012DC2  6F89               	movwf	flash_sector_read@data& (0+255),b
  8488  012DC4  0E0A               	movlw	high _buffer
  8489  012DC6  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
  8490  012DC8  EC2C  F0AB         	call	_flash_sector_read	;wreg free
  8491                           
  8492                           ;fat16.c: 1298: for(cntr=0; cntr<512; ++cntr)
  8493  012DCC  0E00               	movlw	0
  8494  012DCE  0100               	movlb	0	; () banked
  8495  012DD0  6F8E               	movwf	(fat_get_format_status@cntr+1)& (0+255),b
  8496  012DD2  0E00               	movlw	0
  8497  012DD4  6F8D               	movwf	fat_get_format_status@cntr& (0+255),b
  8498  012DD6                     l15713:
  8499                           
  8500                           ; BSR set to: 0
  8501  012DD6  0E02               	movlw	2
  8502  012DD8  5D8E               	subwf	(fat_get_format_status@cntr+1)& (0+255),w,b
  8503  012DDA  B0D8               	btfsc	status,0,c
  8504  012DDC  D017               	goto	u14590
  8505                           
  8506                           ; BSR set to: 0
  8507                           ;fat16.c: 1299: {;fat16.c: 1300: if(buffer[cntr] != _get_mbr(cntr))
  8508                           
  8509                           ; BSR set to: 0
  8510                           
  8511                           ; BSR set to: 0
  8512  012DDE  0E00               	movlw	low _buffer
  8513  012DE0  258D               	addwf	fat_get_format_status@cntr& (0+255),w,b
  8514  012DE2  6ED9               	movwf	fsr2l,c
  8515  012DE4  0E0A               	movlw	high _buffer
  8516  012DE6  218E               	addwfc	(fat_get_format_status@cntr+1)& (0+255),w,b
  8517  012DE8  6EDA               	movwf	fsr2h,c
  8518  012DEA  C08D  F060         	movff	fat_get_format_status@cntr,__get_mbr@idx
  8519  012DEE  C08E  F061         	movff	fat_get_format_status@cntr+1,__get_mbr@idx+1
  8520  012DF2  EC14  F093         	call	__get_mbr	;wreg free
  8521  012DF6  0100               	movlb	0	; () banked
  8522  012DF8  6F8C               	movwf	(??_fat_get_format_status+1)& (0+255),b
  8523  012DFA  50DE               	movf	postinc2,w,c
  8524  012DFC  198C               	xorwf	(??_fat_get_format_status+1)& (0+255),w,b
  8525  012DFE  B4D8               	btfsc	status,2,c
  8526  012E00  D002               	goto	l2046
  8527                           
  8528                           ; BSR set to: 0
  8529                           ;fat16.c: 1301: {;fat16.c: 1302: return DRIVE_NOT_FORMATED;
  8530  012E02  0E00               	movlw	0
  8531                           
  8532                           ; BSR set to: 0
  8533  012E04  0012               	return	
  8534  012E06                     l2046:
  8535                           
  8536                           ; BSR set to: 0
  8537                           
  8538                           ; BSR set to: 0
  8539  012E06  4B8D               	infsnz	fat_get_format_status@cntr& (0+255),f,b
  8540  012E08  2B8E               	incf	(fat_get_format_status@cntr+1)& (0+255),f,b
  8541  012E0A  D7E5               	goto	l15713
  8542  012E0C                     u14590:
  8543                           
  8544                           ; BSR set to: 0
  8545                           ;fat16.c: 1303: };fat16.c: 1304: };fat16.c: 1307: flash_sector_read(1, buffer);
  8546                           
  8547                           ; BSR set to: 0
  8548  012E0C  0E00               	movlw	0
  8549  012E0E  6F88               	movwf	(flash_sector_read@page+1)& (0+255),b
  8550  012E10  0E01               	movlw	1
  8551  012E12  6F87               	movwf	flash_sector_read@page& (0+255),b
  8552  012E14  0E00               	movlw	low _buffer
  8553  012E16  6F89               	movwf	flash_sector_read@data& (0+255),b
  8554  012E18  0E0A               	movlw	high _buffer
  8555  012E1A  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
  8556  012E1C  EC2C  F0AB         	call	_flash_sector_read	;wreg free
  8557                           
  8558                           ;fat16.c: 1308: for(cntr=0; cntr<512; ++cntr)
  8559  012E20  0E00               	movlw	0
  8560  012E22  0100               	movlb	0	; () banked
  8561  012E24  6F8E               	movwf	(fat_get_format_status@cntr+1)& (0+255),b
  8562  012E26  0E00               	movlw	0
  8563  012E28  6F8D               	movwf	fat_get_format_status@cntr& (0+255),b
  8564  012E2A                     l15731:
  8565                           
  8566                           ; BSR set to: 0
  8567  012E2A  0E02               	movlw	2
  8568  012E2C  5D8E               	subwf	(fat_get_format_status@cntr+1)& (0+255),w,b
  8569  012E2E  B0D8               	btfsc	status,0,c
  8570  012E30  D017               	goto	u14620
  8571                           
  8572                           ; BSR set to: 0
  8573                           ;fat16.c: 1309: {;fat16.c: 1310: if(buffer[cntr] != _get_fbr(cntr))
  8574                           
  8575                           ; BSR set to: 0
  8576                           
  8577                           ; BSR set to: 0
  8578  012E32  0E00               	movlw	low _buffer
  8579  012E34  258D               	addwf	fat_get_format_status@cntr& (0+255),w,b
  8580  012E36  6ED9               	movwf	fsr2l,c
  8581  012E38  0E0A               	movlw	high _buffer
  8582  012E3A  218E               	addwfc	(fat_get_format_status@cntr+1)& (0+255),w,b
  8583  012E3C  6EDA               	movwf	fsr2h,c
  8584  012E3E  C08D  F060         	movff	fat_get_format_status@cntr,__get_fbr@idx
  8585  012E42  C08E  F061         	movff	fat_get_format_status@cntr+1,__get_fbr@idx+1
  8586  012E46  EC71  F070         	call	__get_fbr	;wreg free
  8587  012E4A  0100               	movlb	0	; () banked
  8588  012E4C  6F8C               	movwf	(??_fat_get_format_status+1)& (0+255),b
  8589  012E4E  50DE               	movf	postinc2,w,c
  8590  012E50  198C               	xorwf	(??_fat_get_format_status+1)& (0+255),w,b
  8591  012E52  B4D8               	btfsc	status,2,c
  8592  012E54  D002               	goto	l2050
  8593                           
  8594                           ; BSR set to: 0
  8595                           ;fat16.c: 1311: {;fat16.c: 1312: return DRIVE_NOT_FORMATED;
  8596  012E56  0E00               	movlw	0
  8597                           
  8598                           ; BSR set to: 0
  8599  012E58  0012               	return	
  8600  012E5A                     l2050:
  8601                           
  8602                           ; BSR set to: 0
  8603                           
  8604                           ; BSR set to: 0
  8605  012E5A  4B8D               	infsnz	fat_get_format_status@cntr& (0+255),f,b
  8606  012E5C  2B8E               	incf	(fat_get_format_status@cntr+1)& (0+255),f,b
  8607  012E5E  D7E5               	goto	l15731
  8608  012E60                     u14620:
  8609                           
  8610                           ; BSR set to: 0
  8611                           ;fat16.c: 1313: };fat16.c: 1314: };fat16.c: 1317: return DRIVE_FORMATED;
  8612                           
  8613                           ; BSR set to: 0
  8614  012E60  0E01               	movlw	1
  8615  012E62  0012               	return	
  8616  012E64                     __end_of_fat_get_format_status:
  8617                           	opt stack 0
  8618                           tblptru	equ	0xFF8
  8619                           tblptrh	equ	0xFF7
  8620                           tblptrl	equ	0xFF6
  8621                           tablat	equ	0xFF5
  8622                           prodh	equ	0xFF4
  8623                           prodl	equ	0xFF3
  8624                           postinc0	equ	0xFEE
  8625                           wreg	equ	0xFE8
  8626                           postdec1	equ	0xFE5
  8627                           fsr1h	equ	0xFE2
  8628                           fsr1l	equ	0xFE1
  8629                           indf2	equ	0xFDF
  8630                           postinc2	equ	0xFDE
  8631                           fsr2h	equ	0xFDA
  8632                           fsr2l	equ	0xFD9
  8633                           status	equ	0xFD8
  8634                           
  8635 ;; *************** function _fat_format *****************
  8636 ;; Defined at:
  8637 ;;		line 1320 in file "fat16.c"
  8638 ;; Parameters:    Size  Location     Type
  8639 ;;		None
  8640 ;; Auto vars:     Size  Location     Type
  8641 ;;  cntr            2   36[BANK0 ] unsigned int 
  8642 ;; Return value:  Size  Location     Type
  8643 ;;                  1    wreg      unsigned char 
  8644 ;; Registers used:
  8645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8646 ;; Tracked objects:
  8647 ;;		On entry : 0/0
  8648 ;;		On exit  : 0/0
  8649 ;;		Unchanged: 0/0
  8650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8652 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8654 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8655 ;;Total ram usage:        2 bytes
  8656 ;; Hardware stack levels used:    1
  8657 ;; Hardware stack levels required when called:   15
  8658 ;; This function calls:
  8659 ;;		__get_data
  8660 ;;		__get_fat
  8661 ;;		__get_fbr
  8662 ;;		__get_mbr
  8663 ;;		__get_root
  8664 ;;		_flash_sector_write
  8665 ;; This function is called by:
  8666 ;;		_fat_init
  8667 ;; This function uses a non-reentrant model
  8668 ;;
  8669                           
  8670                           	psect	text17
  8671  00EC3E                     __ptext17:
  8672                           	opt stack 0
  8673  00EC3E                     _fat_format:
  8674                           	opt stack 13
  8675                           
  8676                           ;fat16.c: 1322: uint16_t cntr;;fat16.c: 1325: for(cntr=0; cntr<512; ++cntr)
  8677                           
  8678                           ; BSR set to: 0
  8679                           ;incstack = 0
  8680  00EC3E  0E00               	movlw	0
  8681  00EC40  0100               	movlb	0	; () banked
  8682  00EC42  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  8683  00EC44  0E00               	movlw	0
  8684  00EC46  6F84               	movwf	fat_format@cntr& (0+255),b
  8685  00EC48                     l15751:
  8686                           
  8687                           ; BSR set to: 0
  8688  00EC48  0E02               	movlw	2
  8689  00EC4A  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  8690  00EC4C  B0D8               	btfsc	status,0,c
  8691  00EC4E  D011               	goto	u14640
  8692                           
  8693                           ; BSR set to: 0
  8694                           ;fat16.c: 1326: {;fat16.c: 1327: buffer[cntr] = _get_mbr(cntr);
  8695                           
  8696                           ; BSR set to: 0
  8697                           
  8698                           ; BSR set to: 0
  8699  00EC50  0E00               	movlw	low _buffer
  8700  00EC52  2584               	addwf	fat_format@cntr& (0+255),w,b
  8701  00EC54  6ED9               	movwf	fsr2l,c
  8702  00EC56  0E0A               	movlw	high _buffer
  8703  00EC58  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  8704  00EC5A  6EDA               	movwf	fsr2h,c
  8705  00EC5C  C084  F060         	movff	fat_format@cntr,__get_mbr@idx
  8706  00EC60  C085  F061         	movff	fat_format@cntr+1,__get_mbr@idx+1
  8707  00EC64  EC14  F093         	call	__get_mbr	;wreg free
  8708  00EC68  6EDF               	movwf	indf2,c
  8709  00EC6A  0100               	movlb	0	; () banked
  8710  00EC6C  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  8711  00EC6E  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  8712  00EC70  D7EB               	goto	l15751
  8713  00EC72                     u14640:
  8714                           
  8715                           ; BSR set to: 0
  8716                           ;fat16.c: 1328: };fat16.c: 1329: flash_sector_write(0, buffer);
  8717                           
  8718                           ; BSR set to: 0
  8719  00EC72  0E00               	movlw	0
  8720  00EC74  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  8721  00EC76  0E00               	movlw	0
  8722  00EC78  6F7F               	movwf	flash_sector_write@page& (0+255),b
  8723  00EC7A  0E00               	movlw	low _buffer
  8724  00EC7C  6F81               	movwf	flash_sector_write@data& (0+255),b
  8725  00EC7E  0E0A               	movlw	high _buffer
  8726  00EC80  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  8727  00EC82  EC4A  F0A6         	call	_flash_sector_write	;wreg free
  8728                           
  8729                           ;fat16.c: 1332: for(cntr=0; cntr<512; ++cntr)
  8730  00EC86  0E00               	movlw	0
  8731  00EC88  0100               	movlb	0	; () banked
  8732  00EC8A  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  8733  00EC8C  0E00               	movlw	0
  8734  00EC8E  6F84               	movwf	fat_format@cntr& (0+255),b
  8735  00EC90                     l15765:
  8736                           
  8737                           ; BSR set to: 0
  8738  00EC90  0E02               	movlw	2
  8739  00EC92  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  8740  00EC94  B0D8               	btfsc	status,0,c
  8741  00EC96  D011               	goto	u14660
  8742                           
  8743                           ; BSR set to: 0
  8744                           ;fat16.c: 1333: {;fat16.c: 1334: buffer[cntr] = _get_fbr(cntr);
  8745                           
  8746                           ; BSR set to: 0
  8747                           
  8748                           ; BSR set to: 0
  8749  00EC98  0E00               	movlw	low _buffer
  8750  00EC9A  2584               	addwf	fat_format@cntr& (0+255),w,b
  8751  00EC9C  6ED9               	movwf	fsr2l,c
  8752  00EC9E  0E0A               	movlw	high _buffer
  8753  00ECA0  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  8754  00ECA2  6EDA               	movwf	fsr2h,c
  8755  00ECA4  C084  F060         	movff	fat_format@cntr,__get_fbr@idx
  8756  00ECA8  C085  F061         	movff	fat_format@cntr+1,__get_fbr@idx+1
  8757  00ECAC  EC71  F070         	call	__get_fbr	;wreg free
  8758  00ECB0  6EDF               	movwf	indf2,c
  8759  00ECB2  0100               	movlb	0	; () banked
  8760  00ECB4  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  8761  00ECB6  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  8762  00ECB8  D7EB               	goto	l15765
  8763  00ECBA                     u14660:
  8764                           
  8765                           ; BSR set to: 0
  8766                           ;fat16.c: 1335: };fat16.c: 1336: flash_sector_write(1, buffer);
  8767                           
  8768                           ; BSR set to: 0
  8769  00ECBA  0E00               	movlw	0
  8770  00ECBC  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  8771  00ECBE  0E01               	movlw	1
  8772  00ECC0  6F7F               	movwf	flash_sector_write@page& (0+255),b
  8773  00ECC2  0E00               	movlw	low _buffer
  8774  00ECC4  6F81               	movwf	flash_sector_write@data& (0+255),b
  8775  00ECC6  0E0A               	movlw	high _buffer
  8776  00ECC8  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  8777  00ECCA  EC4A  F0A6         	call	_flash_sector_write	;wreg free
  8778                           
  8779                           ;fat16.c: 1339: for(cntr=0; cntr<512; ++cntr)
  8780  00ECCE  0E00               	movlw	0
  8781  00ECD0  0100               	movlb	0	; () banked
  8782  00ECD2  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  8783  00ECD4  0E00               	movlw	0
  8784  00ECD6  6F84               	movwf	fat_format@cntr& (0+255),b
  8785  00ECD8                     l15779:
  8786                           
  8787                           ; BSR set to: 0
  8788  00ECD8  0E02               	movlw	2
  8789  00ECDA  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  8790  00ECDC  B0D8               	btfsc	status,0,c
  8791  00ECDE  D011               	goto	u14680
  8792                           
  8793                           ; BSR set to: 0
  8794                           ;fat16.c: 1340: {;fat16.c: 1341: buffer[cntr] = _get_fat(cntr);
  8795                           
  8796                           ; BSR set to: 0
  8797                           
  8798                           ; BSR set to: 0
  8799  00ECE0  0E00               	movlw	low _buffer
  8800  00ECE2  2584               	addwf	fat_format@cntr& (0+255),w,b
  8801  00ECE4  6ED9               	movwf	fsr2l,c
  8802  00ECE6  0E0A               	movlw	high _buffer
  8803  00ECE8  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  8804  00ECEA  6EDA               	movwf	fsr2h,c
  8805  00ECEC  C084  F060         	movff	fat_format@cntr,__get_fat@idx
  8806  00ECF0  C085  F061         	movff	fat_format@cntr+1,__get_fat@idx+1
  8807  00ECF4  ECA3  F0A3         	call	__get_fat	;wreg free
  8808  00ECF8  6EDF               	movwf	indf2,c
  8809  00ECFA  0100               	movlb	0	; () banked
  8810  00ECFC  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  8811  00ECFE  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  8812  00ED00  D7EB               	goto	l15779
  8813  00ED02                     u14680:
  8814                           
  8815                           ; BSR set to: 0
  8816                           ;fat16.c: 1342: };fat16.c: 1343: flash_sector_write(2, buffer);
  8817                           
  8818                           ; BSR set to: 0
  8819  00ED02  0E00               	movlw	0
  8820  00ED04  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  8821  00ED06  0E02               	movlw	2
  8822  00ED08  6F7F               	movwf	flash_sector_write@page& (0+255),b
  8823  00ED0A  0E00               	movlw	low _buffer
  8824  00ED0C  6F81               	movwf	flash_sector_write@data& (0+255),b
  8825  00ED0E  0E0A               	movlw	high _buffer
  8826  00ED10  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  8827  00ED12  EC4A  F0A6         	call	_flash_sector_write	;wreg free
  8828                           
  8829                           ;fat16.c: 1346: for(cntr=0; cntr<512; ++cntr)
  8830  00ED16  0E00               	movlw	0
  8831  00ED18  0100               	movlb	0	; () banked
  8832  00ED1A  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  8833  00ED1C  0E00               	movlw	0
  8834  00ED1E  6F84               	movwf	fat_format@cntr& (0+255),b
  8835  00ED20                     l15793:
  8836                           
  8837                           ; BSR set to: 0
  8838  00ED20  0E02               	movlw	2
  8839  00ED22  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  8840  00ED24  B0D8               	btfsc	status,0,c
  8841  00ED26  D00B               	goto	u14700
  8842                           
  8843                           ; BSR set to: 0
  8844                           ;fat16.c: 1347: {;fat16.c: 1348: buffer[cntr] = 0x00;
  8845                           
  8846                           ; BSR set to: 0
  8847                           
  8848                           ; BSR set to: 0
  8849  00ED28  0E00               	movlw	low _buffer
  8850  00ED2A  2584               	addwf	fat_format@cntr& (0+255),w,b
  8851  00ED2C  6ED9               	movwf	fsr2l,c
  8852  00ED2E  0E0A               	movlw	high _buffer
  8853  00ED30  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  8854  00ED32  6EDA               	movwf	fsr2h,c
  8855  00ED34  0E00               	movlw	0
  8856  00ED36  6EDF               	movwf	indf2,c
  8857                           
  8858                           ; BSR set to: 0
  8859  00ED38  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  8860  00ED3A  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  8861  00ED3C  D7F1               	goto	l15793
  8862  00ED3E                     u14700:
  8863                           
  8864                           ; BSR set to: 0
  8865                           ;fat16.c: 1349: };fat16.c: 1350: for(cntr=2+1; cntr<=33; ++cntr)
  8866                           
  8867                           ; BSR set to: 0
  8868  00ED3E  0E00               	movlw	0
  8869  00ED40  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  8870  00ED42  0E03               	movlw	3
  8871  00ED44  6F84               	movwf	fat_format@cntr& (0+255),b
  8872  00ED46                     l15805:
  8873                           
  8874                           ; BSR set to: 0
  8875  00ED46  5185               	movf	(fat_format@cntr+1)& (0+255),w,b
  8876  00ED48  E112               	bnz	l15815
  8877  00ED4A  0E22               	movlw	34
  8878  00ED4C  5D84               	subwf	fat_format@cntr& (0+255),w,b
  8879  00ED4E  B0D8               	btfsc	status,0,c
  8880  00ED50  D00E               	goto	u14720
  8881                           
  8882                           ; BSR set to: 0
  8883                           ;fat16.c: 1351: {;fat16.c: 1352: flash_sector_write(cntr, buffer);
  8884                           
  8885                           ; BSR set to: 0
  8886                           
  8887                           ; BSR set to: 0
  8888  00ED52  C084  F07F         	movff	fat_format@cntr,flash_sector_write@page
  8889  00ED56  C085  F080         	movff	fat_format@cntr+1,flash_sector_write@page+1
  8890  00ED5A  0E00               	movlw	low _buffer
  8891  00ED5C  6F81               	movwf	flash_sector_write@data& (0+255),b
  8892  00ED5E  0E0A               	movlw	high _buffer
  8893  00ED60  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  8894  00ED62  EC4A  F0A6         	call	_flash_sector_write	;wreg free
  8895  00ED66  0100               	movlb	0	; () banked
  8896  00ED68  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  8897  00ED6A  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  8898  00ED6C  D7EC               	goto	l15805
  8899  00ED6E                     u14720:
  8900  00ED6E                     l15815:
  8901                           
  8902                           ; BSR set to: 0
  8903                           ;fat16.c: 1353: };fat16.c: 1356: for(cntr=0; cntr<512; ++cntr)
  8904  00ED6E  0E00               	movlw	0
  8905  00ED70  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  8906  00ED72  0E00               	movlw	0
  8907  00ED74  6F84               	movwf	fat_format@cntr& (0+255),b
  8908  00ED76                     l15817:
  8909                           
  8910                           ; BSR set to: 0
  8911  00ED76  0E02               	movlw	2
  8912  00ED78  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  8913  00ED7A  B0D8               	btfsc	status,0,c
  8914  00ED7C  D011               	goto	u14740
  8915                           
  8916                           ; BSR set to: 0
  8917                           ;fat16.c: 1357: {;fat16.c: 1358: buffer[cntr] = _get_root(cntr);
  8918                           
  8919                           ; BSR set to: 0
  8920                           
  8921                           ; BSR set to: 0
  8922  00ED7E  0E00               	movlw	low _buffer
  8923  00ED80  2584               	addwf	fat_format@cntr& (0+255),w,b
  8924  00ED82  6ED9               	movwf	fsr2l,c
  8925  00ED84  0E0A               	movlw	high _buffer
  8926  00ED86  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  8927  00ED88  6EDA               	movwf	fsr2h,c
  8928  00ED8A  C084  F060         	movff	fat_format@cntr,__get_root@idx
  8929  00ED8E  C085  F061         	movff	fat_format@cntr+1,__get_root@idx+1
  8930  00ED92  ECAF  F07B         	call	__get_root	;wreg free
  8931  00ED96  6EDF               	movwf	indf2,c
  8932  00ED98  0100               	movlb	0	; () banked
  8933  00ED9A  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  8934  00ED9C  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  8935  00ED9E  D7EB               	goto	l15817
  8936  00EDA0                     u14740:
  8937                           
  8938                           ; BSR set to: 0
  8939                           ;fat16.c: 1359: };fat16.c: 1360: flash_sector_write(34, buffer);
  8940                           
  8941                           ; BSR set to: 0
  8942  00EDA0  0E00               	movlw	0
  8943  00EDA2  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  8944  00EDA4  0E22               	movlw	34
  8945  00EDA6  6F7F               	movwf	flash_sector_write@page& (0+255),b
  8946  00EDA8  0E00               	movlw	low _buffer
  8947  00EDAA  6F81               	movwf	flash_sector_write@data& (0+255),b
  8948  00EDAC  0E0A               	movlw	high _buffer
  8949  00EDAE  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  8950  00EDB0  EC4A  F0A6         	call	_flash_sector_write	;wreg free
  8951                           
  8952                           ;fat16.c: 1363: for(cntr=0; cntr<512; ++cntr)
  8953  00EDB4  0E00               	movlw	0
  8954  00EDB6  0100               	movlb	0	; () banked
  8955  00EDB8  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  8956  00EDBA  0E00               	movlw	0
  8957  00EDBC  6F84               	movwf	fat_format@cntr& (0+255),b
  8958  00EDBE                     l15831:
  8959                           
  8960                           ; BSR set to: 0
  8961  00EDBE  0E02               	movlw	2
  8962  00EDC0  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  8963  00EDC2  B0D8               	btfsc	status,0,c
  8964  00EDC4  D00B               	goto	u14760
  8965                           
  8966                           ; BSR set to: 0
  8967                           ;fat16.c: 1364: {;fat16.c: 1365: buffer[cntr] = 0x00;
  8968                           
  8969                           ; BSR set to: 0
  8970                           
  8971                           ; BSR set to: 0
  8972  00EDC6  0E00               	movlw	low _buffer
  8973  00EDC8  2584               	addwf	fat_format@cntr& (0+255),w,b
  8974  00EDCA  6ED9               	movwf	fsr2l,c
  8975  00EDCC  0E0A               	movlw	high _buffer
  8976  00EDCE  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  8977  00EDD0  6EDA               	movwf	fsr2h,c
  8978  00EDD2  0E00               	movlw	0
  8979  00EDD4  6EDF               	movwf	indf2,c
  8980                           
  8981                           ; BSR set to: 0
  8982  00EDD6  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  8983  00EDD8  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  8984  00EDDA  D7F1               	goto	l15831
  8985  00EDDC                     u14760:
  8986                           
  8987                           ; BSR set to: 0
  8988                           ;fat16.c: 1366: };fat16.c: 1367: for(cntr=34+1; cntr<=37; ++cntr)
  8989                           
  8990                           ; BSR set to: 0
  8991  00EDDC  0E00               	movlw	0
  8992  00EDDE  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  8993  00EDE0  0E23               	movlw	35
  8994  00EDE2  6F84               	movwf	fat_format@cntr& (0+255),b
  8995  00EDE4                     l15843:
  8996                           
  8997                           ; BSR set to: 0
  8998  00EDE4  5185               	movf	(fat_format@cntr+1)& (0+255),w,b
  8999  00EDE6  E112               	bnz	l15853
  9000  00EDE8  0E26               	movlw	38
  9001  00EDEA  5D84               	subwf	fat_format@cntr& (0+255),w,b
  9002  00EDEC  B0D8               	btfsc	status,0,c
  9003  00EDEE  D00E               	goto	u14780
  9004                           
  9005                           ; BSR set to: 0
  9006                           ;fat16.c: 1368: {;fat16.c: 1369: flash_sector_write(cntr, buffer);
  9007                           
  9008                           ; BSR set to: 0
  9009                           
  9010                           ; BSR set to: 0
  9011  00EDF0  C084  F07F         	movff	fat_format@cntr,flash_sector_write@page
  9012  00EDF4  C085  F080         	movff	fat_format@cntr+1,flash_sector_write@page+1
  9013  00EDF8  0E00               	movlw	low _buffer
  9014  00EDFA  6F81               	movwf	flash_sector_write@data& (0+255),b
  9015  00EDFC  0E0A               	movlw	high _buffer
  9016  00EDFE  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  9017  00EE00  EC4A  F0A6         	call	_flash_sector_write	;wreg free
  9018  00EE04  0100               	movlb	0	; () banked
  9019  00EE06  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  9020  00EE08  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  9021  00EE0A  D7EC               	goto	l15843
  9022  00EE0C                     u14780:
  9023  00EE0C                     l15853:
  9024                           
  9025                           ; BSR set to: 0
  9026                           ;fat16.c: 1370: };fat16.c: 1373: for(cntr=0; cntr<512; ++cntr)
  9027  00EE0C  0E00               	movlw	0
  9028  00EE0E  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  9029  00EE10  0E00               	movlw	0
  9030  00EE12  6F84               	movwf	fat_format@cntr& (0+255),b
  9031  00EE14                     l15855:
  9032                           
  9033                           ; BSR set to: 0
  9034  00EE14  0E02               	movlw	2
  9035  00EE16  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  9036  00EE18  B0D8               	btfsc	status,0,c
  9037  00EE1A  D011               	goto	u14800
  9038                           
  9039                           ; BSR set to: 0
  9040                           ;fat16.c: 1374: {;fat16.c: 1375: buffer[cntr] = _get_data(cntr);
  9041                           
  9042                           ; BSR set to: 0
  9043                           
  9044                           ; BSR set to: 0
  9045  00EE1C  0E00               	movlw	low _buffer
  9046  00EE1E  2584               	addwf	fat_format@cntr& (0+255),w,b
  9047  00EE20  6ED9               	movwf	fsr2l,c
  9048  00EE22  0E0A               	movlw	high _buffer
  9049  00EE24  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  9050  00EE26  6EDA               	movwf	fsr2h,c
  9051  00EE28  C084  F060         	movff	fat_format@cntr,__get_data@idx
  9052  00EE2C  C085  F061         	movff	fat_format@cntr+1,__get_data@idx+1
  9053  00EE30  EC9C  F0AA         	call	__get_data	;wreg free
  9054  00EE34  6EDF               	movwf	indf2,c
  9055  00EE36  0100               	movlb	0	; () banked
  9056  00EE38  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  9057  00EE3A  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  9058  00EE3C  D7EB               	goto	l15855
  9059  00EE3E                     u14800:
  9060                           
  9061                           ; BSR set to: 0
  9062                           ;fat16.c: 1376: };fat16.c: 1377: flash_sector_write(38, buffer);
  9063                           
  9064                           ; BSR set to: 0
  9065  00EE3E  0E00               	movlw	0
  9066  00EE40  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  9067  00EE42  0E26               	movlw	38
  9068  00EE44  6F7F               	movwf	flash_sector_write@page& (0+255),b
  9069  00EE46  0E00               	movlw	low _buffer
  9070  00EE48  6F81               	movwf	flash_sector_write@data& (0+255),b
  9071  00EE4A  0E0A               	movlw	high _buffer
  9072  00EE4C  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  9073  00EE4E  EC4A  F0A6         	call	_flash_sector_write	;wreg free
  9074  00EE52  0012               	return	
  9075  00EE54                     __end_of_fat_format:
  9076                           	opt stack 0
  9077                           tblptru	equ	0xFF8
  9078                           tblptrh	equ	0xFF7
  9079                           tblptrl	equ	0xFF6
  9080                           tablat	equ	0xFF5
  9081                           prodh	equ	0xFF4
  9082                           prodl	equ	0xFF3
  9083                           postinc0	equ	0xFEE
  9084                           wreg	equ	0xFE8
  9085                           postdec1	equ	0xFE5
  9086                           fsr1h	equ	0xFE2
  9087                           fsr1l	equ	0xFE1
  9088                           indf2	equ	0xFDF
  9089                           postinc2	equ	0xFDE
  9090                           fsr2h	equ	0xFDA
  9091                           fsr2l	equ	0xFD9
  9092                           status	equ	0xFD8
  9093                           
  9094 ;; *************** function __get_root *****************
  9095 ;; Defined at:
  9096 ;;		line 1210 in file "fat16.c"
  9097 ;; Parameters:    Size  Location     Type
  9098 ;;  idx             2    0[BANK0 ] unsigned int 
  9099 ;; Auto vars:     Size  Location     Type
  9100 ;;		None
  9101 ;; Return value:  Size  Location     Type
  9102 ;;                  1    wreg      unsigned char 
  9103 ;; Registers used:
  9104 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  9105 ;; Tracked objects:
  9106 ;;		On entry : 0/0
  9107 ;;		On exit  : 0/0
  9108 ;;		Unchanged: 0/0
  9109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9110 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9112 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9113 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9114 ;;Total ram usage:        6 bytes
  9115 ;; Hardware stack levels used:    1
  9116 ;; Hardware stack levels required when called:   10
  9117 ;; This function calls:
  9118 ;;		Nothing
  9119 ;; This function is called by:
  9120 ;;		_fat_format
  9121 ;; This function uses a non-reentrant model
  9122 ;;
  9123                           
  9124                           	psect	text18
  9125  00F75E                     __ptext18:
  9126                           	opt stack 0
  9127  00F75E                     __get_root:
  9128                           	opt stack 17
  9129                           
  9130                           ;fat16.c: 1212: if(idx < 0x20)
  9131                           
  9132                           ;incstack = 0
  9133  00F75E  0100               	movlb	0	; () banked
  9134  00F760  5161               	movf	(__get_root@idx+1)& (0+255),w,b
  9135  00F762  E11D               	bnz	l14837
  9136  00F764  0E20               	movlw	32
  9137  00F766  5D60               	subwf	__get_root@idx& (0+255),w,b
  9138  00F768  B0D8               	btfsc	status,0,c
  9139  00F76A  D019               	goto	l2011
  9140                           
  9141                           ; BSR set to: 0
  9142                           ;fat16.c: 1213: {;fat16.c: 1214: if(idx < 11)
  9143  00F76C  5161               	movf	(__get_root@idx+1)& (0+255),w,b
  9144  00F76E  E110               	bnz	l14831
  9145  00F770  0E0B               	movlw	11
  9146  00F772  5D60               	subwf	__get_root@idx& (0+255),w,b
  9147  00F774  B0D8               	btfsc	status,0,c
  9148  00F776  D00C               	goto	l2009
  9149                           
  9150                           ; BSR set to: 0
  9151                           ;fat16.c: 1215: {;fat16.c: 1216: return "StepperCtrl"[idx];
  9152  00F778  0EF6               	movlw	low STR_15
  9153  00F77A  2560               	addwf	__get_root@idx& (0+255),w,b
  9154  00F77C  6EF6               	movwf	tblptrl,c
  9155  00F77E  0EA2               	movlw	high STR_15
  9156  00F780  2161               	addwfc	(__get_root@idx+1)& (0+255),w,b
  9157  00F782  6EF7               	movwf	tblptrh,c
  9158  00F784                     	if	1	;There are 3 active tblptr bytes
  9159  00F784  6AF8               	clrf	tblptru,c
  9160  00F786  0E00               	movlw	low (__mediumconst shr (0+16))
  9161  00F788  22F8               	addwfc	tblptru,f,c
  9162  00F78A                     	endif
  9163  00F78A  0008               	tblrd		*
  9164  00F78C  50F5               	movf	tablat,w,c
  9165                           
  9166                           ; BSR set to: 0
  9167  00F78E  0012               	return	
  9168  00F790                     l2009:
  9169  00F790                     l14831:
  9170                           
  9171                           ; BSR set to: 0
  9172                           ;fat16.c: 1217: };fat16.c: 1218: if(idx==11)
  9173  00F790  0E0B               	movlw	11
  9174  00F792  1960               	xorwf	__get_root@idx& (0+255),w,b
  9175  00F794  1161               	iorwf	(__get_root@idx+1)& (0+255),w,b
  9176  00F796  A4D8               	btfss	status,2,c
  9177  00F798  D002               	goto	l2011
  9178                           
  9179                           ; BSR set to: 0
  9180                           ;fat16.c: 1219: {;fat16.c: 1220: return 0x08;
  9181  00F79A  0E08               	movlw	8
  9182                           
  9183                           ; BSR set to: 0
  9184  00F79C  0012               	return	
  9185  00F79E                     l2011:
  9186  00F79E                     l14837:
  9187                           
  9188                           ; BSR set to: 0
  9189                           ;fat16.c: 1221: };fat16.c: 1222: };fat16.c: 1223: if(idx < 0x40)
  9190  00F79E  5161               	movf	(__get_root@idx+1)& (0+255),w,b
  9191  00F7A0  E103               	bnz	u13551
  9192  00F7A2  0E40               	movlw	64
  9193  00F7A4  5D60               	subwf	__get_root@idx& (0+255),w,b
  9194  00F7A6  B0D8               	btfsc	status,0,c
  9195  00F7A8                     u13551:
  9196  00F7A8  D0A4               	goto	l2037
  9197                           
  9198                           ; BSR set to: 0
  9199                           ;fat16.c: 1224: {;fat16.c: 1225: idx -= 0x20;
  9200  00F7AA  0E20               	movlw	32
  9201  00F7AC  5F60               	subwf	__get_root@idx& (0+255),f,b
  9202  00F7AE  0E00               	movlw	0
  9203  00F7B0  5B61               	subwfb	(__get_root@idx+1)& (0+255),f,b
  9204                           
  9205                           ;fat16.c: 1226: if(idx < 0+8)
  9206  00F7B2  5161               	movf	(__get_root@idx+1)& (0+255),w,b
  9207  00F7B4  E110               	bnz	l14845
  9208  00F7B6  0E08               	movlw	8
  9209  00F7B8  5D60               	subwf	__get_root@idx& (0+255),w,b
  9210  00F7BA  B0D8               	btfsc	status,0,c
  9211  00F7BC  D00C               	goto	l2013
  9212                           
  9213                           ; BSR set to: 0
  9214                           ;fat16.c: 1227: {;fat16.c: 1228: return "FILE    "[idx];
  9215  00F7BE  0E02               	movlw	low STR_16
  9216  00F7C0  2560               	addwf	__get_root@idx& (0+255),w,b
  9217  00F7C2  6EF6               	movwf	tblptrl,c
  9218  00F7C4  0EA3               	movlw	high STR_16
  9219  00F7C6  2161               	addwfc	(__get_root@idx+1)& (0+255),w,b
  9220  00F7C8  6EF7               	movwf	tblptrh,c
  9221  00F7CA                     	if	1	;There are 3 active tblptr bytes
  9222  00F7CA  6AF8               	clrf	tblptru,c
  9223  00F7CC  0E00               	movlw	low (__mediumconst shr (0+16))
  9224  00F7CE  22F8               	addwfc	tblptru,f,c
  9225  00F7D0                     	endif
  9226  00F7D0  0008               	tblrd		*
  9227  00F7D2  50F5               	movf	tablat,w,c
  9228                           
  9229                           ; BSR set to: 0
  9230  00F7D4  0012               	return	
  9231  00F7D6                     l2013:
  9232  00F7D6                     l14845:
  9233                           
  9234                           ; BSR set to: 0
  9235                           ;fat16.c: 1229: };fat16.c: 1230: if(idx < 11)
  9236  00F7D6  5161               	movf	(__get_root@idx+1)& (0+255),w,b
  9237  00F7D8  E146               	bnz	l14937
  9238  00F7DA  0E0B               	movlw	11
  9239  00F7DC  5D60               	subwf	__get_root@idx& (0+255),w,b
  9240  00F7DE  B0D8               	btfsc	status,0,c
  9241  00F7E0  D042               	goto	l2015
  9242                           
  9243                           ; BSR set to: 0
  9244                           ;fat16.c: 1231: {;fat16.c: 1232: return "TXT"[idx-8];
  9245  00F7E2  0EF8               	movlw	248
  9246  00F7E4  6F62               	movwf	??__get_root& (0+255),b
  9247  00F7E6  0EFF               	movlw	255
  9248  00F7E8  6F63               	movwf	(??__get_root+1)& (0+255),b
  9249  00F7EA  C060  F064         	movff	__get_root@idx,??__get_root+2
  9250  00F7EE  C061  F065         	movff	__get_root@idx+1,??__get_root+3
  9251  00F7F2  5162               	movf	??__get_root& (0+255),w,b
  9252  00F7F4  2764               	addwf	(??__get_root+2)& (0+255),f,b
  9253  00F7F6  5163               	movf	(??__get_root+1)& (0+255),w,b
  9254  00F7F8  2365               	addwfc	(??__get_root+3)& (0+255),f,b
  9255  00F7FA  0E2A               	movlw	low STR_17
  9256  00F7FC  2564               	addwf	(??__get_root+2)& (0+255),w,b
  9257  00F7FE  6EF6               	movwf	tblptrl,c
  9258  00F800  0EA3               	movlw	high STR_17
  9259  00F802  2165               	addwfc	(??__get_root+3)& (0+255),w,b
  9260  00F804  6EF7               	movwf	tblptrh,c
  9261  00F806                     	if	1	;There are 3 active tblptr bytes
  9262  00F806  6AF8               	clrf	tblptru,c
  9263  00F808  0E00               	movlw	low (__mediumconst shr (0+16))
  9264  00F80A  22F8               	addwfc	tblptru,f,c
  9265  00F80C                     	endif
  9266  00F80C  0008               	tblrd		*
  9267  00F80E  50F5               	movf	tablat,w,c
  9268                           
  9269                           ; BSR set to: 0
  9270  00F810  0012               	return	
  9271  00F812                     
  9272                           ; BSR set to: 0
  9273                           ;fat16.c: 1237: return 0x20;
  9274                           
  9275                           ; BSR set to: 0
  9276  00F812  0E20               	movlw	32
  9277                           
  9278                           ; BSR set to: 0
  9279  00F814  0012               	return	
  9280  00F816                     
  9281                           ; BSR set to: 0
  9282                           ;fat16.c: 1239: return 0x06;
  9283                           
  9284                           ; BSR set to: 0
  9285  00F816  0E06               	movlw	6
  9286                           
  9287                           ; BSR set to: 0
  9288  00F818  0012               	return	
  9289  00F81A                     
  9290                           ; BSR set to: 0
  9291                           ;fat16.c: 1241: return 0x28;
  9292                           
  9293                           ; BSR set to: 0
  9294  00F81A  0E28               	movlw	40
  9295                           
  9296                           ; BSR set to: 0
  9297  00F81C  0012               	return	
  9298  00F81E                     
  9299                           ; BSR set to: 0
  9300                           ;fat16.c: 1243: return 0x78;
  9301                           
  9302                           ; BSR set to: 0
  9303  00F81E  0E78               	movlw	120
  9304                           
  9305                           ; BSR set to: 0
  9306  00F820  0012               	return	
  9307  00F822                     
  9308                           ; BSR set to: 0
  9309                           ;fat16.c: 1245: return 0xDE;
  9310                           
  9311                           ; BSR set to: 0
  9312  00F822  0EDE               	movlw	222
  9313                           
  9314                           ; BSR set to: 0
  9315  00F824  0012               	return	
  9316  00F826                     
  9317                           ; BSR set to: 0
  9318                           ;fat16.c: 1247: return 0x38;
  9319                           
  9320                           ; BSR set to: 0
  9321  00F826  0E38               	movlw	56
  9322                           
  9323                           ; BSR set to: 0
  9324  00F828  0012               	return	
  9325  00F82A                     
  9326                           ; BSR set to: 0
  9327                           ;fat16.c: 1249: return 0x5F;
  9328                           
  9329                           ; BSR set to: 0
  9330  00F82A  0E5F               	movlw	95
  9331                           
  9332                           ; BSR set to: 0
  9333  00F82C  0012               	return	
  9334  00F82E                     
  9335                           ; BSR set to: 0
  9336                           ;fat16.c: 1251: return 0x4B;
  9337                           
  9338                           ; BSR set to: 0
  9339  00F82E  0E4B               	movlw	75
  9340                           
  9341                           ; BSR set to: 0
  9342  00F830  0012               	return	
  9343  00F832                     
  9344                           ; BSR set to: 0
  9345                           ;fat16.c: 1253: return 0x00;
  9346                           
  9347                           ; BSR set to: 0
  9348  00F832  0E00               	movlw	0
  9349                           
  9350                           ; BSR set to: 0
  9351  00F834  0012               	return	
  9352  00F836                     
  9353                           ; BSR set to: 0
  9354                           ;fat16.c: 1255: return 0x00;
  9355                           
  9356                           ; BSR set to: 0
  9357  00F836  0E00               	movlw	0
  9358                           
  9359                           ; BSR set to: 0
  9360  00F838  0012               	return	
  9361  00F83A                     
  9362                           ; BSR set to: 0
  9363                           ;fat16.c: 1257: return 0x04;
  9364                           
  9365                           ; BSR set to: 0
  9366  00F83A  0E04               	movlw	4
  9367                           
  9368                           ; BSR set to: 0
  9369  00F83C  0012               	return	
  9370  00F83E                     
  9371                           ; BSR set to: 0
  9372                           ;fat16.c: 1259: return 0x77;
  9373                           
  9374                           ; BSR set to: 0
  9375  00F83E  0E77               	movlw	119
  9376                           
  9377                           ; BSR set to: 0
  9378  00F840  0012               	return	
  9379  00F842                     
  9380                           ; BSR set to: 0
  9381                           ;fat16.c: 1261: return 0xDE;
  9382                           
  9383                           ; BSR set to: 0
  9384  00F842  0EDE               	movlw	222
  9385                           
  9386                           ; BSR set to: 0
  9387  00F844  0012               	return	
  9388  00F846                     
  9389                           ; BSR set to: 0
  9390                           ;fat16.c: 1263: return 0x38;
  9391                           
  9392                           ; BSR set to: 0
  9393  00F846  0E38               	movlw	56
  9394                           
  9395                           ; BSR set to: 0
  9396  00F848  0012               	return	
  9397  00F84A                     
  9398                           ; BSR set to: 0
  9399                           ;fat16.c: 1265: return ((unsigned char)((((uint16_t)2))&0xFF));
  9400                           
  9401                           ; BSR set to: 0
  9402  00F84A  0E02               	movlw	2
  9403                           
  9404                           ; BSR set to: 0
  9405  00F84C  0012               	return	
  9406  00F84E                     
  9407                           ; BSR set to: 0
  9408                           ;fat16.c: 1267: return ((unsigned char)(((((uint16_t)2))>>8)&0xFF));
  9409                           
  9410                           ; BSR set to: 0
  9411  00F84E  0E00               	movlw	0
  9412                           
  9413                           ; BSR set to: 0
  9414  00F850  0012               	return	
  9415  00F852                     
  9416                           ; BSR set to: 0
  9417                           ;fat16.c: 1269: return ((unsigned char)((((unsigned short)((((uint32_t)12))&0xFFFF)))&0x
      +                          FF));
  9418                           
  9419                           ; BSR set to: 0
  9420  00F852  0E0C               	movlw	12
  9421                           
  9422                           ; BSR set to: 0
  9423  00F854  0012               	return	
  9424  00F856                     
  9425                           ; BSR set to: 0
  9426                           ;fat16.c: 1271: return ((unsigned char)(((((unsigned short)((((uint32_t)12))&0xFFFF)))>>
      +                          8)&0xFF));
  9427                           
  9428                           ; BSR set to: 0
  9429  00F856  0E00               	movlw	0
  9430                           
  9431                           ; BSR set to: 0
  9432  00F858  0012               	return	
  9433  00F85A                     
  9434                           ; BSR set to: 0
  9435                           ;fat16.c: 1273: return ((unsigned char)((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF
      +                          )))&0xFF));
  9436                           
  9437                           ; BSR set to: 0
  9438  00F85A  0E00               	movlw	0
  9439                           
  9440                           ; BSR set to: 0
  9441  00F85C  0012               	return	
  9442  00F85E                     
  9443                           ; BSR set to: 0
  9444                           ;fat16.c: 1275: return ((unsigned char)(((((unsigned short)(((((uint32_t)12))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
  9445                           
  9446                           ; BSR set to: 0
  9447  00F85E  0E00               	movlw	0
  9448                           
  9449                           ; BSR set to: 0
  9450  00F860  0012               	return	
  9451  00F862                     
  9452                           ; BSR set to: 0
  9453                           ;fat16.c: 1277: return 0x00;
  9454                           
  9455                           ; BSR set to: 0
  9456  00F862  0E00               	movlw	0
  9457                           
  9458                           ; BSR set to: 0
  9459  00F864  0012               	return	
  9460  00F866                     l2015:
  9461  00F866                     l14937:
  9462                           
  9463                           ; BSR set to: 0
  9464  00F866  C060  F062         	movff	__get_root@idx,??__get_root
  9465  00F86A  C061  F063         	movff	__get_root@idx+1,??__get_root+1
  9466                           
  9467                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9468                           ; Switch size 1, requested type "space"
  9469                           ; Number of cases is 1, Range of values is 0 to 0
  9470                           ; switch strategies available:
  9471                           ; Name         Instructions Cycles
  9472                           ; simple_byte            4     3 (average)
  9473                           ;	Chosen strategy is simple_byte
  9474  00F86E  5163               	movf	(??__get_root+1)& (0+255),w,b
  9475  00F870  0A00               	xorlw	0	; case 0
  9476  00F872  A4D8               	btfss	status,2,c
  9477  00F874  D7F6               	goto	l2036
  9478                           
  9479                           ; BSR set to: 0
  9480                           ; Switch size 1, requested type "space"
  9481                           ; Number of cases is 20, Range of values is 11 to 31
  9482                           ; switch strategies available:
  9483                           ; Name         Instructions Cycles
  9484                           ; simple_byte           61    31 (average)
  9485                           ;	Chosen strategy is simple_byte
  9486  00F876  5162               	movf	??__get_root& (0+255),w,b
  9487  00F878  0A0B               	xorlw	11	; case 11
  9488  00F87A  B4D8               	btfsc	status,2,c
  9489  00F87C  D7CA               	goto	l2016
  9490  00F87E  0A06               	xorlw	6	; case 13
  9491  00F880  B4D8               	btfsc	status,2,c
  9492  00F882  D7C9               	goto	l2017
  9493  00F884  0A03               	xorlw	3	; case 14
  9494  00F886  B4D8               	btfsc	status,2,c
  9495  00F888  D7C8               	goto	l2018
  9496  00F88A  0A01               	xorlw	1	; case 15
  9497  00F88C  B4D8               	btfsc	status,2,c
  9498  00F88E  D7C7               	goto	l2019
  9499  00F890  0A1F               	xorlw	31	; case 16
  9500  00F892  B4D8               	btfsc	status,2,c
  9501  00F894  D7C6               	goto	l2020
  9502  00F896  0A01               	xorlw	1	; case 17
  9503  00F898  B4D8               	btfsc	status,2,c
  9504  00F89A  D7C5               	goto	l2021
  9505  00F89C  0A03               	xorlw	3	; case 18
  9506  00F89E  B4D8               	btfsc	status,2,c
  9507  00F8A0  D7C4               	goto	l2022
  9508  00F8A2  0A01               	xorlw	1	; case 19
  9509  00F8A4  B4D8               	btfsc	status,2,c
  9510  00F8A6  D7C3               	goto	l2023
  9511  00F8A8  0A07               	xorlw	7	; case 20
  9512  00F8AA  B4D8               	btfsc	status,2,c
  9513  00F8AC  D7C2               	goto	l2024
  9514  00F8AE  0A01               	xorlw	1	; case 21
  9515  00F8B0  B4D8               	btfsc	status,2,c
  9516  00F8B2  D7C1               	goto	l2025
  9517  00F8B4  0A03               	xorlw	3	; case 22
  9518  00F8B6  B4D8               	btfsc	status,2,c
  9519  00F8B8  D7C0               	goto	l2026
  9520  00F8BA  0A01               	xorlw	1	; case 23
  9521  00F8BC  B4D8               	btfsc	status,2,c
  9522  00F8BE  D7BF               	goto	l2027
  9523  00F8C0  0A0F               	xorlw	15	; case 24
  9524  00F8C2  B4D8               	btfsc	status,2,c
  9525  00F8C4  D7BE               	goto	l2028
  9526  00F8C6  0A01               	xorlw	1	; case 25
  9527  00F8C8  B4D8               	btfsc	status,2,c
  9528  00F8CA  D7BD               	goto	l2029
  9529  00F8CC  0A03               	xorlw	3	; case 26
  9530  00F8CE  B4D8               	btfsc	status,2,c
  9531  00F8D0  D7BC               	goto	l2030
  9532  00F8D2  0A01               	xorlw	1	; case 27
  9533  00F8D4  B4D8               	btfsc	status,2,c
  9534  00F8D6  D7BB               	goto	l2031
  9535  00F8D8  0A07               	xorlw	7	; case 28
  9536  00F8DA  B4D8               	btfsc	status,2,c
  9537  00F8DC  D7BA               	goto	l2032
  9538  00F8DE  0A01               	xorlw	1	; case 29
  9539  00F8E0  B4D8               	btfsc	status,2,c
  9540  00F8E2  D7B9               	goto	l2033
  9541  00F8E4  0A03               	xorlw	3	; case 30
  9542  00F8E6  B4D8               	btfsc	status,2,c
  9543  00F8E8  D7B8               	goto	l2034
  9544  00F8EA  0A01               	xorlw	1	; case 31
  9545  00F8EC  B4D8               	btfsc	status,2,c
  9546  00F8EE  D7B7               	goto	l2035
  9547  00F8F0  D7B8               	goto	l2036
  9548  00F8F2                     l2037:
  9549                           
  9550                           ; BSR set to: 0
  9551                           ;fat16.c: 1279: };fat16.c: 1280: return 0X00;
  9552                           
  9553                           ; BSR set to: 0
  9554                           
  9555                           ; BSR set to: 0
  9556  00F8F2  0E00               	movlw	0
  9557  00F8F4  0012               	return	
  9558  00F8F6                     __end_of__get_root:
  9559                           	opt stack 0
  9560                           tblptru	equ	0xFF8
  9561                           tblptrh	equ	0xFF7
  9562                           tblptrl	equ	0xFF6
  9563                           tablat	equ	0xFF5
  9564                           prodh	equ	0xFF4
  9565                           prodl	equ	0xFF3
  9566                           postinc0	equ	0xFEE
  9567                           wreg	equ	0xFE8
  9568                           postdec1	equ	0xFE5
  9569                           fsr1h	equ	0xFE2
  9570                           fsr1l	equ	0xFE1
  9571                           indf2	equ	0xFDF
  9572                           postinc2	equ	0xFDE
  9573                           fsr2h	equ	0xFDA
  9574                           fsr2l	equ	0xFD9
  9575                           status	equ	0xFD8
  9576                           
  9577 ;; *************** function __get_mbr *****************
  9578 ;; Defined at:
  9579 ;;		line 1037 in file "fat16.c"
  9580 ;; Parameters:    Size  Location     Type
  9581 ;;  idx             2    0[BANK0 ] unsigned int 
  9582 ;; Auto vars:     Size  Location     Type
  9583 ;;		None
  9584 ;; Return value:  Size  Location     Type
  9585 ;;                  1    wreg      unsigned char 
  9586 ;; Registers used:
  9587 ;;		wreg, status,2, status,0
  9588 ;; Tracked objects:
  9589 ;;		On entry : 0/0
  9590 ;;		On exit  : 0/0
  9591 ;;		Unchanged: 0/0
  9592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9593 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9595 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9596 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9597 ;;Total ram usage:        4 bytes
  9598 ;; Hardware stack levels used:    1
  9599 ;; Hardware stack levels required when called:   10
  9600 ;; This function calls:
  9601 ;;		Nothing
  9602 ;; This function is called by:
  9603 ;;		_fat_get_format_status
  9604 ;;		_fat_format
  9605 ;; This function uses a non-reentrant model
  9606 ;;
  9607                           
  9608                           	psect	text19
  9609  012628                     __ptext19:
  9610                           	opt stack 0
  9611  012628                     __get_mbr:
  9612                           	opt stack 17
  9613                           
  9614                           ;fat16.c: 1039: switch (idx)
  9615                           
  9616                           ; BSR set to: 0
  9617                           ;incstack = 0
  9618  012628  D026               	goto	l1918
  9619  01262A                     
  9620                           ;fat16.c: 1042: return 0x80;
  9621  01262A  0E80               	movlw	128
  9622  01262C  0012               	return	
  9623  01262E                     
  9624                           ;fat16.c: 1044: return 0;
  9625  01262E  0E00               	movlw	0
  9626  012630  0012               	return	
  9627  012632                     
  9628                           ;fat16.c: 1046: return 2;
  9629  012632  0E02               	movlw	2
  9630  012634  0012               	return	
  9631  012636                     
  9632                           ;fat16.c: 1048: return 0;
  9633  012636  0E00               	movlw	0
  9634  012638  0012               	return	
  9635  01263A                     
  9636                           ;fat16.c: 1050: return 0x04;
  9637  01263A  0E04               	movlw	4
  9638  01263C  0012               	return	
  9639  01263E                     
  9640                           ;fat16.c: 1052: return 2;
  9641  01263E  0E02               	movlw	2
  9642  012640  0012               	return	
  9643  012642                     
  9644                           ;fat16.c: 1054: return 3;
  9645  012642  0E03               	movlw	3
  9646  012644  0012               	return	
  9647  012646                     
  9648                           ;fat16.c: 1056: return 8;
  9649  012646  0E08               	movlw	8
  9650  012648  0012               	return	
  9651  01264A                     
  9652                           ;fat16.c: 1058: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xF
      +                          F));
  9653  01264A  0E01               	movlw	1
  9654  01264C  0012               	return	
  9655  01264E                     
  9656                           ;fat16.c: 1060: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8
      +                          )&0xFF));
  9657  01264E  0E00               	movlw	0
  9658  012650  0012               	return	
  9659  012652                     
  9660                           ;fat16.c: 1062: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF)
      +                          ))&0xFF));
  9661  012652  0E00               	movlw	0
  9662  012654  0012               	return	
  9663  012656                     
  9664                           ;fat16.c: 1064: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  9665  012656  0E00               	movlw	0
  9666  012658  0012               	return	
  9667  01265A                     
  9668                           ;fat16.c: 1066: return ((unsigned char)((((unsigned short)((((uint32_t)8191))&0xFFFF)))&
      +                          0xFF));
  9669  01265A  0EFF               	movlw	255
  9670  01265C  0012               	return	
  9671  01265E                     
  9672                           ;fat16.c: 1068: return ((unsigned char)(((((unsigned short)((((uint32_t)8191))&0xFFFF)))
      +                          >>8)&0xFF));
  9673  01265E  0E1F               	movlw	31
  9674  012660  0012               	return	
  9675  012662                     
  9676                           ;fat16.c: 1070: return ((unsigned char)((((unsigned short)(((((uint32_t)8191))>>16)&0xFF
      +                          FF)))&0xFF));
  9677  012662  0E00               	movlw	0
  9678  012664  0012               	return	
  9679  012666                     
  9680                           ;fat16.c: 1072: return ((unsigned char)(((((unsigned short)(((((uint32_t)8191))>>16)&0xF
      +                          FFF)))>>8)&0xFF));
  9681  012666  0E00               	movlw	0
  9682  012668  0012               	return	
  9683  01266A                     
  9684                           ;fat16.c: 1074: return ((unsigned char)((((uint16_t)0X55AA)>>8)&0xFF));
  9685  01266A  0E55               	movlw	85
  9686  01266C  0012               	return	
  9687  01266E                     
  9688                           ;fat16.c: 1076: return ((unsigned char)(((uint16_t)0X55AA)&0xFF));
  9689  01266E  0EAA               	movlw	170
  9690  012670  0012               	return	
  9691  012672                     
  9692                           ;fat16.c: 1078: return 0X00;
  9693  012672  0E00               	movlw	0
  9694                           
  9695                           ;fat16.c: 1079: }
  9696  012674  0012               	return	
  9697  012676                     l1918:
  9698  012676  C060  F062         	movff	__get_mbr@idx,??__get_mbr
  9699  01267A  C061  F063         	movff	__get_mbr@idx+1,??__get_mbr+1
  9700                           
  9701                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9702                           ; Switch size 1, requested type "space"
  9703                           ; Number of cases is 1, Range of values is 1 to 1
  9704                           ; switch strategies available:
  9705                           ; Name         Instructions Cycles
  9706                           ; simple_byte            4     3 (average)
  9707                           ;	Chosen strategy is simple_byte
  9708  01267E  0100               	movlb	0	; () banked
  9709  012680  5163               	movf	(??__get_mbr+1)& (0+255),w,b
  9710  012682  0A01               	xorlw	1	; case 1
  9711  012684  A4D8               	btfss	status,2,c
  9712  012686  D7F5               	goto	l1938
  9713                           
  9714                           ; BSR set to: 0
  9715                           ; Switch size 1, requested type "space"
  9716                           ; Number of cases is 18, Range of values is 190 to 255
  9717                           ; switch strategies available:
  9718                           ; Name         Instructions Cycles
  9719                           ; simple_byte           55    28 (average)
  9720                           ;	Chosen strategy is simple_byte
  9721  012688  5162               	movf	??__get_mbr& (0+255),w,b
  9722  01268A  0ABE               	xorlw	190	; case 190
  9723  01268C  B4D8               	btfsc	status,2,c
  9724  01268E  D7CD               	goto	l1919
  9725  012690  0A01               	xorlw	1	; case 191
  9726  012692  B4D8               	btfsc	status,2,c
  9727  012694  D7CC               	goto	l1921
  9728  012696  0A7F               	xorlw	127	; case 192
  9729  012698  B4D8               	btfsc	status,2,c
  9730  01269A  D7CB               	goto	l1922
  9731  01269C  0A01               	xorlw	1	; case 193
  9732  01269E  B4D8               	btfsc	status,2,c
  9733  0126A0  D7CA               	goto	l1923
  9734  0126A2  0A03               	xorlw	3	; case 194
  9735  0126A4  B4D8               	btfsc	status,2,c
  9736  0126A6  D7C9               	goto	l1924
  9737  0126A8  0A01               	xorlw	1	; case 195
  9738  0126AA  B4D8               	btfsc	status,2,c
  9739  0126AC  D7C8               	goto	l1925
  9740  0126AE  0A07               	xorlw	7	; case 196
  9741  0126B0  B4D8               	btfsc	status,2,c
  9742  0126B2  D7C7               	goto	l1926
  9743  0126B4  0A01               	xorlw	1	; case 197
  9744  0126B6  B4D8               	btfsc	status,2,c
  9745  0126B8  D7C6               	goto	l1927
  9746  0126BA  0A03               	xorlw	3	; case 198
  9747  0126BC  B4D8               	btfsc	status,2,c
  9748  0126BE  D7C5               	goto	l1928
  9749  0126C0  0A01               	xorlw	1	; case 199
  9750  0126C2  B4D8               	btfsc	status,2,c
  9751  0126C4  D7C4               	goto	l1929
  9752  0126C6  0A0F               	xorlw	15	; case 200
  9753  0126C8  B4D8               	btfsc	status,2,c
  9754  0126CA  D7C3               	goto	l1930
  9755  0126CC  0A01               	xorlw	1	; case 201
  9756  0126CE  B4D8               	btfsc	status,2,c
  9757  0126D0  D7C2               	goto	l1931
  9758  0126D2  0A03               	xorlw	3	; case 202
  9759  0126D4  B4D8               	btfsc	status,2,c
  9760  0126D6  D7C1               	goto	l1932
  9761  0126D8  0A01               	xorlw	1	; case 203
  9762  0126DA  B4D8               	btfsc	status,2,c
  9763  0126DC  D7C0               	goto	l1933
  9764  0126DE  0A07               	xorlw	7	; case 204
  9765  0126E0  B4D8               	btfsc	status,2,c
  9766  0126E2  D7BF               	goto	l1934
  9767  0126E4  0A01               	xorlw	1	; case 205
  9768  0126E6  B4D8               	btfsc	status,2,c
  9769  0126E8  D7BE               	goto	l1935
  9770  0126EA  0A33               	xorlw	51	; case 254
  9771  0126EC  B4D8               	btfsc	status,2,c
  9772  0126EE  D7BD               	goto	l1936
  9773  0126F0  0A01               	xorlw	1	; case 255
  9774  0126F2  B4D8               	btfsc	status,2,c
  9775  0126F4  D7BC               	goto	l1937
  9776  0126F6  D7BD               	goto	l1938
  9777  0126F8                     __end_of__get_mbr:
  9778                           	opt stack 0
  9779                           tblptru	equ	0xFF8
  9780                           tblptrh	equ	0xFF7
  9781                           tblptrl	equ	0xFF6
  9782                           tablat	equ	0xFF5
  9783                           prodh	equ	0xFF4
  9784                           prodl	equ	0xFF3
  9785                           postinc0	equ	0xFEE
  9786                           wreg	equ	0xFE8
  9787                           postdec1	equ	0xFE5
  9788                           fsr1h	equ	0xFE2
  9789                           fsr1l	equ	0xFE1
  9790                           indf2	equ	0xFDF
  9791                           postinc2	equ	0xFDE
  9792                           fsr2h	equ	0xFDA
  9793                           fsr2l	equ	0xFD9
  9794                           status	equ	0xFD8
  9795                           
  9796 ;; *************** function __get_fbr *****************
  9797 ;; Defined at:
  9798 ;;		line 1082 in file "fat16.c"
  9799 ;; Parameters:    Size  Location     Type
  9800 ;;  idx             2    0[BANK0 ] unsigned int 
  9801 ;; Auto vars:     Size  Location     Type
  9802 ;;		None
  9803 ;; Return value:  Size  Location     Type
  9804 ;;                  1    wreg      unsigned char 
  9805 ;; Registers used:
  9806 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  9807 ;; Tracked objects:
  9808 ;;		On entry : 0/0
  9809 ;;		On exit  : 0/0
  9810 ;;		Unchanged: 0/0
  9811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9812 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9814 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9815 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9816 ;;Total ram usage:        4 bytes
  9817 ;; Hardware stack levels used:    1
  9818 ;; Hardware stack levels required when called:   10
  9819 ;; This function calls:
  9820 ;;		Nothing
  9821 ;; This function is called by:
  9822 ;;		_fat_get_format_status
  9823 ;;		_fat_format
  9824 ;; This function uses a non-reentrant model
  9825 ;;
  9826                           
  9827                           	psect	text20
  9828  00E0E2                     __ptext20:
  9829                           	opt stack 0
  9830  00E0E2                     __get_fbr:
  9831                           	opt stack 17
  9832                           
  9833                           ;fat16.c: 1084: switch (idx)
  9834                           
  9835                           ;incstack = 0
  9836  00E0E2  D098               	goto	l1942
  9837  00E0E4                     
  9838                           ;fat16.c: 1087: return 0xEB;
  9839  00E0E4  0EEB               	movlw	235
  9840  00E0E6  0012               	return	
  9841  00E0E8                     
  9842                           ;fat16.c: 1089: return 0x3C;
  9843  00E0E8  0E3C               	movlw	60
  9844  00E0EA  0012               	return	
  9845  00E0EC                     
  9846                           ;fat16.c: 1091: return 0x90;
  9847  00E0EC  0E90               	movlw	144
  9848  00E0EE  0012               	return	
  9849  00E0F0                     
  9850                           ;fat16.c: 1093: return "MSDOS5.0"[0];
  9851  00E0F0  0E0B               	movlw	low STR_7
  9852  00E0F2  6EF6               	movwf	tblptrl,c
  9853  00E0F4                     	if	1	;There is more than 1 active tblptr byte
  9854  00E0F4  0EA3               	movlw	high STR_7
  9855  00E0F6  6EF7               	movwf	tblptrh,c
  9856  00E0F8                     	endif
  9857  00E0F8                     	if	1	;There are 3 active tblptr bytes
  9858  00E0F8  0E00               	movlw	low (STR_7 shr (0+16))
  9859  00E0FA  6EF8               	movwf	tblptru,c
  9860  00E0FC                     	endif
  9861  00E0FC  0008               	tblrd		*
  9862  00E0FE  50F5               	movf	tablat,w,c
  9863  00E100  0012               	return	
  9864  00E102                     
  9865                           ;fat16.c: 1095: return "MSDOS5.0"[1];
  9866  00E102  0E0C               	movlw	low (STR_7+1)
  9867  00E104  6EF6               	movwf	tblptrl,c
  9868  00E106  0EA3               	movlw	high (STR_7+1)
  9869  00E108  6EF7               	movwf	tblptrh,c
  9870  00E10A                     	if	0	;tblptru may be non-zero
  9871  00E10A                     	endif
  9872  00E10A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9873  00E10A  0E00               	movlw	low (__mediumconst shr (0+16))
  9874  00E10C  6EF8               	movwf	tblptru,c
  9875  00E10E                     	endif
  9876  00E10E  0008               	tblrd		*
  9877  00E110  50F5               	movf	tablat,w,c
  9878  00E112  0012               	return	
  9879  00E114                     
  9880                           ;fat16.c: 1097: return "MSDOS5.0"[2];
  9881  00E114  0E0D               	movlw	low (STR_7+2)
  9882  00E116  6EF6               	movwf	tblptrl,c
  9883  00E118  0EA3               	movlw	high (STR_7+2)
  9884  00E11A  6EF7               	movwf	tblptrh,c
  9885  00E11C                     	if	0	;tblptru may be non-zero
  9886  00E11C                     	endif
  9887  00E11C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9888  00E11C  0E00               	movlw	low (__mediumconst shr (0+16))
  9889  00E11E  6EF8               	movwf	tblptru,c
  9890  00E120                     	endif
  9891  00E120  0008               	tblrd		*
  9892  00E122  50F5               	movf	tablat,w,c
  9893  00E124  0012               	return	
  9894  00E126                     
  9895                           ;fat16.c: 1099: return "MSDOS5.0"[3];
  9896  00E126  0E0E               	movlw	low (STR_7+3)
  9897  00E128  6EF6               	movwf	tblptrl,c
  9898  00E12A  0EA3               	movlw	high (STR_7+3)
  9899  00E12C  6EF7               	movwf	tblptrh,c
  9900  00E12E                     	if	0	;tblptru may be non-zero
  9901  00E12E                     	endif
  9902  00E12E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9903  00E12E  0E00               	movlw	low (__mediumconst shr (0+16))
  9904  00E130  6EF8               	movwf	tblptru,c
  9905  00E132                     	endif
  9906  00E132  0008               	tblrd		*
  9907  00E134  50F5               	movf	tablat,w,c
  9908  00E136  0012               	return	
  9909  00E138                     
  9910                           ;fat16.c: 1101: return "MSDOS5.0"[4];
  9911  00E138  0E0F               	movlw	low (STR_7+4)
  9912  00E13A  6EF6               	movwf	tblptrl,c
  9913  00E13C  0EA3               	movlw	high (STR_7+4)
  9914  00E13E  6EF7               	movwf	tblptrh,c
  9915  00E140                     	if	0	;tblptru may be non-zero
  9916  00E140                     	endif
  9917  00E140                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9918  00E140  0E00               	movlw	low (__mediumconst shr (0+16))
  9919  00E142  6EF8               	movwf	tblptru,c
  9920  00E144                     	endif
  9921  00E144  0008               	tblrd		*
  9922  00E146  50F5               	movf	tablat,w,c
  9923  00E148  0012               	return	
  9924  00E14A                     
  9925                           ;fat16.c: 1103: return "MSDOS5.0"[5];
  9926  00E14A  0E10               	movlw	low (STR_7+5)
  9927  00E14C  6EF6               	movwf	tblptrl,c
  9928  00E14E  0EA3               	movlw	high (STR_7+5)
  9929  00E150  6EF7               	movwf	tblptrh,c
  9930  00E152                     	if	0	;tblptru may be non-zero
  9931  00E152                     	endif
  9932  00E152                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9933  00E152  0E00               	movlw	low (__mediumconst shr (0+16))
  9934  00E154  6EF8               	movwf	tblptru,c
  9935  00E156                     	endif
  9936  00E156  0008               	tblrd		*
  9937  00E158  50F5               	movf	tablat,w,c
  9938  00E15A  0012               	return	
  9939  00E15C                     
  9940                           ;fat16.c: 1105: return "MSDOS5.0"[6];
  9941  00E15C  0E11               	movlw	low (STR_7+6)
  9942  00E15E  6EF6               	movwf	tblptrl,c
  9943  00E160  0EA3               	movlw	high (STR_7+6)
  9944  00E162  6EF7               	movwf	tblptrh,c
  9945  00E164                     	if	0	;tblptru may be non-zero
  9946  00E164                     	endif
  9947  00E164                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9948  00E164  0E00               	movlw	low (__mediumconst shr (0+16))
  9949  00E166  6EF8               	movwf	tblptru,c
  9950  00E168                     	endif
  9951  00E168  0008               	tblrd		*
  9952  00E16A  50F5               	movf	tablat,w,c
  9953  00E16C  0012               	return	
  9954  00E16E                     
  9955                           ;fat16.c: 1107: return "MSDOS5.0"[7];
  9956  00E16E  0E12               	movlw	low (STR_7+7)
  9957  00E170  6EF6               	movwf	tblptrl,c
  9958  00E172  0EA3               	movlw	high (STR_7+7)
  9959  00E174  6EF7               	movwf	tblptrh,c
  9960  00E176                     	if	0	;tblptru may be non-zero
  9961  00E176                     	endif
  9962  00E176                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9963  00E176  0E00               	movlw	low (__mediumconst shr (0+16))
  9964  00E178  6EF8               	movwf	tblptru,c
  9965  00E17A                     	endif
  9966  00E17A  0008               	tblrd		*
  9967  00E17C  50F5               	movf	tablat,w,c
  9968  00E17E  0012               	return	
  9969  00E180                     
  9970                           ;fat16.c: 1109: return ((unsigned char)((((uint16_t)512))&0xFF));
  9971  00E180  0E00               	movlw	0
  9972  00E182  0012               	return	
  9973  00E184                     
  9974                           ;fat16.c: 1111: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
  9975  00E184  0E02               	movlw	2
  9976  00E186  0012               	return	
  9977  00E188                     
  9978                           ;fat16.c: 1113: return 1;
  9979  00E188  0E01               	movlw	1
  9980  00E18A  0012               	return	
  9981  00E18C                     
  9982                           ;fat16.c: 1115: return ((unsigned char)((((uint16_t)1))&0xFF));
  9983  00E18C  0E01               	movlw	1
  9984  00E18E  0012               	return	
  9985  00E190                     
  9986                           ;fat16.c: 1117: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
  9987  00E190  0E00               	movlw	0
  9988  00E192  0012               	return	
  9989  00E194                     
  9990                           ;fat16.c: 1119: return 1;
  9991  00E194  0E01               	movlw	1
  9992  00E196  0012               	return	
  9993  00E198                     
  9994                           ;fat16.c: 1121: return ((unsigned char)((((uint16_t)64))&0xFF));
  9995  00E198  0E40               	movlw	64
  9996  00E19A  0012               	return	
  9997  00E19C                     
  9998                           ;fat16.c: 1123: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
  9999  00E19C  0E00               	movlw	0
 10000  00E19E  0012               	return	
 10001  00E1A0                     
 10002                           ;fat16.c: 1125: return ((unsigned char)((((uint16_t)8191))&0xFF));
 10003  00E1A0  0EFF               	movlw	255
 10004  00E1A2  0012               	return	
 10005  00E1A4                     
 10006                           ;fat16.c: 1127: return ((unsigned char)(((((uint16_t)8191))>>8)&0xFF));
 10007  00E1A4  0E1F               	movlw	31
 10008  00E1A6  0012               	return	
 10009  00E1A8                     
 10010                           ;fat16.c: 1129: return 0XF8;
 10011  00E1A8  0EF8               	movlw	248
 10012  00E1AA  0012               	return	
 10013  00E1AC                     
 10014                           ;fat16.c: 1131: return ((unsigned char)((((uint16_t)32))&0xFF));
 10015  00E1AC  0E20               	movlw	32
 10016  00E1AE  0012               	return	
 10017  00E1B0                     
 10018                           ;fat16.c: 1133: return ((unsigned char)(((((uint16_t)32))>>8)&0xFF));
 10019  00E1B0  0E00               	movlw	0
 10020  00E1B2  0012               	return	
 10021  00E1B4                     
 10022                           ;fat16.c: 1135: return ((unsigned char)((((uint16_t)63))&0xFF));
 10023  00E1B4  0E3F               	movlw	63
 10024  00E1B6  0012               	return	
 10025  00E1B8                     
 10026                           ;fat16.c: 1137: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
 10027  00E1B8  0E00               	movlw	0
 10028  00E1BA  0012               	return	
 10029  00E1BC                     
 10030                           ;fat16.c: 1139: return ((unsigned char)((((uint16_t)16))&0xFF));
 10031  00E1BC  0E10               	movlw	16
 10032  00E1BE  0012               	return	
 10033  00E1C0                     
 10034                           ;fat16.c: 1141: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
 10035  00E1C0  0E00               	movlw	0
 10036  00E1C2  0012               	return	
 10037  00E1C4                     
 10038                           ;fat16.c: 1143: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xF
      +                          F));
 10039  00E1C4  0E00               	movlw	0
 10040  00E1C6  0012               	return	
 10041  00E1C8                     
 10042                           ;fat16.c: 1145: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8
      +                          )&0xFF));
 10043  00E1C8  0E00               	movlw	0
 10044  00E1CA  0012               	return	
 10045  00E1CC                     
 10046                           ;fat16.c: 1147: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))&0xFF));
 10047  00E1CC  0E00               	movlw	0
 10048  00E1CE  0012               	return	
 10049  00E1D0                     
 10050                           ;fat16.c: 1149: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
 10051  00E1D0  0E00               	movlw	0
 10052  00E1D2  0012               	return	
 10053  00E1D4                     
 10054                           ;fat16.c: 1151: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
 10055  00E1D4  0E01               	movlw	1
 10056  00E1D6  0012               	return	
 10057  00E1D8                     
 10058                           ;fat16.c: 1153: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
 10059  00E1D8  0E00               	movlw	0
 10060  00E1DA  0012               	return	
 10061  00E1DC                     
 10062                           ;fat16.c: 1155: return ((unsigned char)((((unsigned short)((((uint32_t)34))&0xFFFF)))&0x
      +                          FF));
 10063  00E1DC  0E22               	movlw	34
 10064  00E1DE  0012               	return	
 10065  00E1E0                     
 10066                           ;fat16.c: 1157: return ((unsigned char)(((((unsigned short)((((uint32_t)34))&0xFFFF)))>>
      +                          8)&0xFF));
 10067  00E1E0  0E00               	movlw	0
 10068  00E1E2  0012               	return	
 10069  00E1E4                     
 10070                           ;fat16.c: 1161: return ((unsigned char)(((((unsigned short)(((((uint32_t)34))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
 10071                           
 10072                           ;fat16.c: 1160: case 0x2F:
 10073  00E1E4  0E00               	movlw	0
 10074  00E1E6  0012               	return	
 10075  00E1E8                     
 10076                           ;fat16.c: 1163: return 'F';
 10077  00E1E8  0E46               	movlw	70
 10078  00E1EA  0012               	return	
 10079  00E1EC                     
 10080                           ;fat16.c: 1165: return 'A';
 10081  00E1EC  0E41               	movlw	65
 10082  00E1EE  0012               	return	
 10083  00E1F0                     
 10084                           ;fat16.c: 1167: return 'T';
 10085  00E1F0  0E54               	movlw	84
 10086  00E1F2  0012               	return	
 10087  00E1F4                     
 10088                           ;fat16.c: 1169: return '1';
 10089  00E1F4  0E31               	movlw	49
 10090  00E1F6  0012               	return	
 10091  00E1F8                     
 10092                           ;fat16.c: 1171: return '6';
 10093  00E1F8  0E36               	movlw	54
 10094  00E1FA  0012               	return	
 10095  00E1FC                     
 10096                           ;fat16.c: 1173: return ' ';
 10097  00E1FC  0E20               	movlw	32
 10098  00E1FE  0012               	return	
 10099  00E200                     
 10100                           ;fat16.c: 1175: return ' ';
 10101  00E200  0E20               	movlw	32
 10102  00E202  0012               	return	
 10103  00E204                     
 10104                           ;fat16.c: 1177: return ' ';
 10105  00E204  0E20               	movlw	32
 10106  00E206  0012               	return	
 10107  00E208                     
 10108                           ;fat16.c: 1179: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
 10109  00E208  0E55               	movlw	85
 10110  00E20A  0012               	return	
 10111  00E20C                     
 10112                           ;fat16.c: 1181: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
 10113  00E20C  0EAA               	movlw	170
 10114  00E20E  0012               	return	
 10115  00E210                     
 10116                           ;fat16.c: 1183: return 0X00;
 10117  00E210  0E00               	movlw	0
 10118                           
 10119                           ;fat16.c: 1184: }
 10120  00E212  0012               	return	
 10121  00E214                     l1942:
 10122  00E214  C060  F062         	movff	__get_fbr@idx,??__get_fbr
 10123  00E218  C061  F063         	movff	__get_fbr@idx+1,??__get_fbr+1
 10124                           
 10125                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 10126                           ; Switch size 1, requested type "space"
 10127                           ; Number of cases is 2, Range of values is 0 to 1
 10128                           ; switch strategies available:
 10129                           ; Name         Instructions Cycles
 10130                           ; simple_byte            7     4 (average)
 10131                           ;	Chosen strategy is simple_byte
 10132  00E21C  0100               	movlb	0	; () banked
 10133  00E21E  5163               	movf	(??__get_fbr+1)& (0+255),w,b
 10134  00E220  0A00               	xorlw	0	; case 0
 10135  00E222  B4D8               	btfsc	status,2,c
 10136  00E224  D004               	goto	l19355
 10137  00E226  0A01               	xorlw	1	; case 1
 10138  00E228  B4D8               	btfsc	status,2,c
 10139  00E22A  D08D               	goto	l19357
 10140  00E22C  D7F1               	goto	l1992
 10141  00E22E                     l19355:
 10142                           
 10143                           ; BSR set to: 0
 10144                           ; Switch size 1, requested type "space"
 10145                           ; Number of cases is 46, Range of values is 0 to 61
 10146                           ; switch strategies available:
 10147                           ; Name         Instructions Cycles
 10148                           ; simple_byte          139    70 (average)
 10149                           ;	Chosen strategy is simple_byte
 10150  00E22E  5162               	movf	??__get_fbr& (0+255),w,b
 10151  00E230  0A00               	xorlw	0	; case 0
 10152  00E232  B4D8               	btfsc	status,2,c
 10153  00E234  D757               	goto	l1943
 10154  00E236  0A01               	xorlw	1	; case 1
 10155  00E238  B4D8               	btfsc	status,2,c
 10156  00E23A  D756               	goto	l1945
 10157  00E23C  0A03               	xorlw	3	; case 2
 10158  00E23E  B4D8               	btfsc	status,2,c
 10159  00E240  D755               	goto	l1946
 10160  00E242  0A01               	xorlw	1	; case 3
 10161  00E244  B4D8               	btfsc	status,2,c
 10162  00E246  D754               	goto	l1947
 10163  00E248  0A07               	xorlw	7	; case 4
 10164  00E24A  B4D8               	btfsc	status,2,c
 10165  00E24C  D75A               	goto	l1948
 10166  00E24E  0A01               	xorlw	1	; case 5
 10167  00E250  B4D8               	btfsc	status,2,c
 10168  00E252  D760               	goto	l1949
 10169  00E254  0A03               	xorlw	3	; case 6
 10170  00E256  B4D8               	btfsc	status,2,c
 10171  00E258  D766               	goto	l1950
 10172  00E25A  0A01               	xorlw	1	; case 7
 10173  00E25C  B4D8               	btfsc	status,2,c
 10174  00E25E  D76C               	goto	l1951
 10175  00E260  0A0F               	xorlw	15	; case 8
 10176  00E262  B4D8               	btfsc	status,2,c
 10177  00E264  D772               	goto	l1952
 10178  00E266  0A01               	xorlw	1	; case 9
 10179  00E268  B4D8               	btfsc	status,2,c
 10180  00E26A  D778               	goto	l1953
 10181  00E26C  0A03               	xorlw	3	; case 10
 10182  00E26E  B4D8               	btfsc	status,2,c
 10183  00E270  D77E               	goto	l1954
 10184  00E272  0A01               	xorlw	1	; case 11
 10185  00E274  B4D8               	btfsc	status,2,c
 10186  00E276  D784               	goto	l1955
 10187  00E278  0A07               	xorlw	7	; case 12
 10188  00E27A  B4D8               	btfsc	status,2,c
 10189  00E27C  D783               	goto	l1956
 10190  00E27E  0A01               	xorlw	1	; case 13
 10191  00E280  B4D8               	btfsc	status,2,c
 10192  00E282  D782               	goto	l1957
 10193  00E284  0A03               	xorlw	3	; case 14
 10194  00E286  B4D8               	btfsc	status,2,c
 10195  00E288  D781               	goto	l1958
 10196  00E28A  0A01               	xorlw	1	; case 15
 10197  00E28C  B4D8               	btfsc	status,2,c
 10198  00E28E  D780               	goto	l1959
 10199  00E290  0A1F               	xorlw	31	; case 16
 10200  00E292  B4D8               	btfsc	status,2,c
 10201  00E294  D77F               	goto	l1960
 10202  00E296  0A01               	xorlw	1	; case 17
 10203  00E298  B4D8               	btfsc	status,2,c
 10204  00E29A  D77E               	goto	l1961
 10205  00E29C  0A03               	xorlw	3	; case 18
 10206  00E29E  B4D8               	btfsc	status,2,c
 10207  00E2A0  D77D               	goto	l1962
 10208  00E2A2  0A01               	xorlw	1	; case 19
 10209  00E2A4  B4D8               	btfsc	status,2,c
 10210  00E2A6  D77C               	goto	l1963
 10211  00E2A8  0A07               	xorlw	7	; case 20
 10212  00E2AA  B4D8               	btfsc	status,2,c
 10213  00E2AC  D77B               	goto	l1964
 10214  00E2AE  0A01               	xorlw	1	; case 21
 10215  00E2B0  B4D8               	btfsc	status,2,c
 10216  00E2B2  D77A               	goto	l1965
 10217  00E2B4  0A03               	xorlw	3	; case 22
 10218  00E2B6  B4D8               	btfsc	status,2,c
 10219  00E2B8  D779               	goto	l1966
 10220  00E2BA  0A01               	xorlw	1	; case 23
 10221  00E2BC  B4D8               	btfsc	status,2,c
 10222  00E2BE  D778               	goto	l1967
 10223  00E2C0  0A0F               	xorlw	15	; case 24
 10224  00E2C2  B4D8               	btfsc	status,2,c
 10225  00E2C4  D777               	goto	l1968
 10226  00E2C6  0A01               	xorlw	1	; case 25
 10227  00E2C8  B4D8               	btfsc	status,2,c
 10228  00E2CA  D776               	goto	l1969
 10229  00E2CC  0A03               	xorlw	3	; case 26
 10230  00E2CE  B4D8               	btfsc	status,2,c
 10231  00E2D0  D775               	goto	l1970
 10232  00E2D2  0A01               	xorlw	1	; case 27
 10233  00E2D4  B4D8               	btfsc	status,2,c
 10234  00E2D6  D774               	goto	l1971
 10235  00E2D8  0A07               	xorlw	7	; case 28
 10236  00E2DA  B4D8               	btfsc	status,2,c
 10237  00E2DC  D773               	goto	l1972
 10238  00E2DE  0A01               	xorlw	1	; case 29
 10239  00E2E0  B4D8               	btfsc	status,2,c
 10240  00E2E2  D772               	goto	l1973
 10241  00E2E4  0A03               	xorlw	3	; case 30
 10242  00E2E6  B4D8               	btfsc	status,2,c
 10243  00E2E8  D771               	goto	l1974
 10244  00E2EA  0A01               	xorlw	1	; case 31
 10245  00E2EC  B4D8               	btfsc	status,2,c
 10246  00E2EE  D770               	goto	l1975
 10247  00E2F0  0A37               	xorlw	55	; case 40
 10248  00E2F2  B4D8               	btfsc	status,2,c
 10249  00E2F4  D76F               	goto	l1976
 10250  00E2F6  0A01               	xorlw	1	; case 41
 10251  00E2F8  B4D8               	btfsc	status,2,c
 10252  00E2FA  D76E               	goto	l1977
 10253  00E2FC  0A05               	xorlw	5	; case 44
 10254  00E2FE  B4D8               	btfsc	status,2,c
 10255  00E300  D76D               	goto	l1978
 10256  00E302  0A01               	xorlw	1	; case 45
 10257  00E304  B4D8               	btfsc	status,2,c
 10258  00E306  D76C               	goto	l1979
 10259  00E308  0A03               	xorlw	3	; case 46
 10260  00E30A  B4D8               	btfsc	status,2,c
 10261  00E30C  D76B               	goto	l1980
 10262  00E30E  0A01               	xorlw	1	; case 47
 10263  00E310  B4D8               	btfsc	status,2,c
 10264  00E312  D768               	goto	l1980
 10265  00E314  0A19               	xorlw	25	; case 54
 10266  00E316  B4D8               	btfsc	status,2,c
 10267  00E318  D767               	goto	l1982
 10268  00E31A  0A01               	xorlw	1	; case 55
 10269  00E31C  B4D8               	btfsc	status,2,c
 10270  00E31E  D766               	goto	l1983
 10271  00E320  0A0F               	xorlw	15	; case 56
 10272  00E322  B4D8               	btfsc	status,2,c
 10273  00E324  D765               	goto	l1984
 10274  00E326  0A01               	xorlw	1	; case 57
 10275  00E328  B4D8               	btfsc	status,2,c
 10276  00E32A  D764               	goto	l1985
 10277  00E32C  0A03               	xorlw	3	; case 58
 10278  00E32E  B4D8               	btfsc	status,2,c
 10279  00E330  D763               	goto	l1986
 10280  00E332  0A01               	xorlw	1	; case 59
 10281  00E334  B4D8               	btfsc	status,2,c
 10282  00E336  D762               	goto	l1987
 10283  00E338  0A07               	xorlw	7	; case 60
 10284  00E33A  B4D8               	btfsc	status,2,c
 10285  00E33C  D761               	goto	l1988
 10286  00E33E  0A01               	xorlw	1	; case 61
 10287  00E340  B4D8               	btfsc	status,2,c
 10288  00E342  D760               	goto	l1989
 10289  00E344  D765               	goto	l1992
 10290  00E346                     l19357:
 10291                           
 10292                           ; BSR set to: 0
 10293                           ; Switch size 1, requested type "space"
 10294                           ; Number of cases is 2, Range of values is 254 to 255
 10295                           ; switch strategies available:
 10296                           ; Name         Instructions Cycles
 10297                           ; simple_byte            7     4 (average)
 10298                           ;	Chosen strategy is simple_byte
 10299  00E346  5162               	movf	??__get_fbr& (0+255),w,b
 10300  00E348  0AFE               	xorlw	254	; case 254
 10301  00E34A  B4D8               	btfsc	status,2,c
 10302  00E34C  D75D               	goto	l1990
 10303  00E34E  0A01               	xorlw	1	; case 255
 10304  00E350  B4D8               	btfsc	status,2,c
 10305  00E352  D75C               	goto	l1991
 10306  00E354  D75D               	goto	l1992
 10307  00E356                     __end_of__get_fbr:
 10308                           	opt stack 0
 10309                           tblptru	equ	0xFF8
 10310                           tblptrh	equ	0xFF7
 10311                           tblptrl	equ	0xFF6
 10312                           tablat	equ	0xFF5
 10313                           prodh	equ	0xFF4
 10314                           prodl	equ	0xFF3
 10315                           postinc0	equ	0xFEE
 10316                           wreg	equ	0xFE8
 10317                           postdec1	equ	0xFE5
 10318                           fsr1h	equ	0xFE2
 10319                           fsr1l	equ	0xFE1
 10320                           indf2	equ	0xFDF
 10321                           postinc2	equ	0xFDE
 10322                           fsr2h	equ	0xFDA
 10323                           fsr2l	equ	0xFD9
 10324                           status	equ	0xFD8
 10325                           
 10326 ;; *************** function __get_fat *****************
 10327 ;; Defined at:
 10328 ;;		line 1187 in file "fat16.c"
 10329 ;; Parameters:    Size  Location     Type
 10330 ;;  idx             2    0[BANK0 ] unsigned int 
 10331 ;; Auto vars:     Size  Location     Type
 10332 ;;		None
 10333 ;; Return value:  Size  Location     Type
 10334 ;;                  1    wreg      unsigned char 
 10335 ;; Registers used:
 10336 ;;		wreg, status,2, status,0
 10337 ;; Tracked objects:
 10338 ;;		On entry : 0/0
 10339 ;;		On exit  : 0/0
 10340 ;;		Unchanged: 0/0
 10341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10342 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10344 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10345 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10346 ;;Total ram usage:        4 bytes
 10347 ;; Hardware stack levels used:    1
 10348 ;; Hardware stack levels required when called:   10
 10349 ;; This function calls:
 10350 ;;		Nothing
 10351 ;; This function is called by:
 10352 ;;		_fat_format
 10353 ;; This function uses a non-reentrant model
 10354 ;;
 10355                           
 10356                           	psect	text21
 10357  014746                     __ptext21:
 10358                           	opt stack 0
 10359  014746                     __get_fat:
 10360                           	opt stack 17
 10361                           
 10362                           ;fat16.c: 1189: switch (idx)
 10363                           
 10364                           ;incstack = 0
 10365  014746  D00E               	goto	l1996
 10366  014748                     
 10367                           ;fat16.c: 1193: return 0xF8;
 10368  014748  0EF8               	movlw	248
 10369  01474A  0012               	return	
 10370  01474C                     
 10371                           ;fat16.c: 1195: return 0xFF;
 10372  01474C  0EFF               	movlw	255
 10373  01474E  0012               	return	
 10374  014750                     
 10375                           ;fat16.c: 1197: return 0xFF;
 10376  014750  0EFF               	movlw	255
 10377  014752  0012               	return	
 10378  014754                     
 10379                           ;fat16.c: 1199: return 0xFF;
 10380  014754  0EFF               	movlw	255
 10381  014756  0012               	return	
 10382  014758                     
 10383                           ;fat16.c: 1202: return 0xFF;
 10384  014758  0EFF               	movlw	255
 10385  01475A  0012               	return	
 10386  01475C                     
 10387                           ;fat16.c: 1204: return 0xFF;
 10388  01475C  0EFF               	movlw	255
 10389  01475E  0012               	return	
 10390  014760                     
 10391                           ;fat16.c: 1206: return 0X00;
 10392  014760  0E00               	movlw	0
 10393                           
 10394                           ;fat16.c: 1207: }
 10395  014762  0012               	return	
 10396  014764                     l1996:
 10397  014764  C060  F062         	movff	__get_fat@idx,??__get_fat
 10398  014768  C061  F063         	movff	__get_fat@idx+1,??__get_fat+1
 10399                           
 10400                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10401                           ; Switch size 1, requested type "space"
 10402                           ; Number of cases is 1, Range of values is 0 to 0
 10403                           ; switch strategies available:
 10404                           ; Name         Instructions Cycles
 10405                           ; simple_byte            4     3 (average)
 10406                           ;	Chosen strategy is simple_byte
 10407  01476C  0100               	movlb	0	; () banked
 10408  01476E  5163               	movf	(??__get_fat+1)& (0+255),w,b
 10409  014770  0A00               	xorlw	0	; case 0
 10410  014772  A4D8               	btfss	status,2,c
 10411  014774  D7F5               	goto	l2004
 10412                           
 10413                           ; BSR set to: 0
 10414                           ; Switch size 1, requested type "space"
 10415                           ; Number of cases is 6, Range of values is 0 to 5
 10416                           ; switch strategies available:
 10417                           ; Name         Instructions Cycles
 10418                           ; simple_byte           19    10 (average)
 10419                           ;	Chosen strategy is simple_byte
 10420  014776  5162               	movf	??__get_fat& (0+255),w,b
 10421  014778  0A00               	xorlw	0	; case 0
 10422  01477A  B4D8               	btfsc	status,2,c
 10423  01477C  D7E5               	goto	l1997
 10424  01477E  0A01               	xorlw	1	; case 1
 10425  014780  B4D8               	btfsc	status,2,c
 10426  014782  D7E4               	goto	l1999
 10427  014784  0A03               	xorlw	3	; case 2
 10428  014786  B4D8               	btfsc	status,2,c
 10429  014788  D7E3               	goto	l2000
 10430  01478A  0A01               	xorlw	1	; case 3
 10431  01478C  B4D8               	btfsc	status,2,c
 10432  01478E  D7E2               	goto	l2001
 10433  014790  0A07               	xorlw	7	; case 4
 10434  014792  B4D8               	btfsc	status,2,c
 10435  014794  D7E1               	goto	l2002
 10436  014796  0A01               	xorlw	1	; case 5
 10437  014798  B4D8               	btfsc	status,2,c
 10438  01479A  D7E0               	goto	l2003
 10439  01479C  D7E1               	goto	l2004
 10440  01479E                     __end_of__get_fat:
 10441                           	opt stack 0
 10442                           tblptru	equ	0xFF8
 10443                           tblptrh	equ	0xFF7
 10444                           tblptrl	equ	0xFF6
 10445                           tablat	equ	0xFF5
 10446                           prodh	equ	0xFF4
 10447                           prodl	equ	0xFF3
 10448                           postinc0	equ	0xFEE
 10449                           wreg	equ	0xFE8
 10450                           postdec1	equ	0xFE5
 10451                           fsr1h	equ	0xFE2
 10452                           fsr1l	equ	0xFE1
 10453                           indf2	equ	0xFDF
 10454                           postinc2	equ	0xFDE
 10455                           fsr2h	equ	0xFDA
 10456                           fsr2l	equ	0xFD9
 10457                           status	equ	0xFD8
 10458                           
 10459 ;; *************** function __get_data *****************
 10460 ;; Defined at:
 10461 ;;		line 1283 in file "fat16.c"
 10462 ;; Parameters:    Size  Location     Type
 10463 ;;  idx             2    0[BANK0 ] unsigned int 
 10464 ;; Auto vars:     Size  Location     Type
 10465 ;;		None
 10466 ;; Return value:  Size  Location     Type
 10467 ;;                  1    wreg      unsigned char 
 10468 ;; Registers used:
 10469 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 10470 ;; Tracked objects:
 10471 ;;		On entry : 0/0
 10472 ;;		On exit  : 0/0
 10473 ;;		Unchanged: 0/0
 10474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10475 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10478 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10479 ;;Total ram usage:        2 bytes
 10480 ;; Hardware stack levels used:    1
 10481 ;; Hardware stack levels required when called:   10
 10482 ;; This function calls:
 10483 ;;		Nothing
 10484 ;; This function is called by:
 10485 ;;		_fat_format
 10486 ;; This function uses a non-reentrant model
 10487 ;;
 10488                           
 10489                           	psect	text22
 10490  015538                     __ptext22:
 10491                           	opt stack 0
 10492  015538                     __get_data:
 10493                           	opt stack 17
 10494                           
 10495                           ;fat16.c: 1285: if(idx < 12)
 10496                           
 10497                           ;incstack = 0
 10498  015538  0100               	movlb	0	; () banked
 10499  01553A  5161               	movf	(__get_data@idx+1)& (0+255),w,b
 10500  01553C  E110               	bnz	l14955
 10501  01553E  0E0C               	movlw	12
 10502  015540  5D60               	subwf	__get_data@idx& (0+255),w,b
 10503  015542  B0D8               	btfsc	status,0,c
 10504  015544  D00C               	goto	l2040
 10505                           
 10506                           ; BSR set to: 0
 10507                           ;fat16.c: 1286: {;fat16.c: 1287: return "hello world!"[idx];
 10508  015546  0EE9               	movlw	low STR_18
 10509  015548  2560               	addwf	__get_data@idx& (0+255),w,b
 10510  01554A  6EF6               	movwf	tblptrl,c
 10511  01554C  0EA2               	movlw	high STR_18
 10512  01554E  2161               	addwfc	(__get_data@idx+1)& (0+255),w,b
 10513  015550  6EF7               	movwf	tblptrh,c
 10514  015552                     	if	1	;There are 3 active tblptr bytes
 10515  015552  6AF8               	clrf	tblptru,c
 10516  015554  0E00               	movlw	low (__mediumconst shr (0+16))
 10517  015556  22F8               	addwfc	tblptru,f,c
 10518  015558                     	endif
 10519  015558  0008               	tblrd		*
 10520  01555A  50F5               	movf	tablat,w,c
 10521                           
 10522                           ; BSR set to: 0
 10523  01555C  0012               	return	
 10524  01555E                     l2040:
 10525  01555E                     l14955:
 10526                           
 10527                           ; BSR set to: 0
 10528                           ;fat16.c: 1288: };fat16.c: 1289: return 0X00;
 10529  01555E  0E00               	movlw	0
 10530  015560  0012               	return	
 10531  015562                     __end_of__get_data:
 10532                           	opt stack 0
 10533                           tblptru	equ	0xFF8
 10534                           tblptrh	equ	0xFF7
 10535                           tblptrl	equ	0xFF6
 10536                           tablat	equ	0xFF5
 10537                           prodh	equ	0xFF4
 10538                           prodl	equ	0xFF3
 10539                           postinc0	equ	0xFEE
 10540                           wreg	equ	0xFE8
 10541                           postdec1	equ	0xFE5
 10542                           fsr1h	equ	0xFE2
 10543                           fsr1l	equ	0xFE1
 10544                           indf2	equ	0xFDF
 10545                           postinc2	equ	0xFDE
 10546                           fsr2h	equ	0xFDA
 10547                           fsr2l	equ	0xFD9
 10548                           status	equ	0xFD8
 10549                           
 10550 ;; *************** function _encoder_init *****************
 10551 ;; Defined at:
 10552 ;;		line 92 in file "encoder.c"
 10553 ;; Parameters:    Size  Location     Type
 10554 ;;		None
 10555 ;; Auto vars:     Size  Location     Type
 10556 ;;		None
 10557 ;; Return value:  Size  Location     Type
 10558 ;;                  1    wreg      void 
 10559 ;; Registers used:
 10560 ;;		wreg, status,2, status,0
 10561 ;; Tracked objects:
 10562 ;;		On entry : 0/0
 10563 ;;		On exit  : 0/0
 10564 ;;		Unchanged: 0/0
 10565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10570 ;;Total ram usage:        0 bytes
 10571 ;; Hardware stack levels used:    1
 10572 ;; Hardware stack levels required when called:   10
 10573 ;; This function calls:
 10574 ;;		Nothing
 10575 ;; This function is called by:
 10576 ;;		_system_init
 10577 ;; This function uses a non-reentrant model
 10578 ;;
 10579                           
 10580                           	psect	text23
 10581  0156CC                     __ptext23:
 10582                           	opt stack 0
 10583  0156CC                     _encoder_init:
 10584                           	opt stack 19
 10585                           
 10586                           ;encoder.c: 94: enc1 = PORTE & 0b00000111;
 10587                           
 10588                           ; BSR set to: 0
 10589                           ;incstack = 0
 10590  0156CC  5084               	movf	3972,w,c	;volatile
 10591  0156CE  0B07               	andlw	7
 10592  0156D0  0101               	movlb	1	; () banked
 10593  0156D2  6F54               	movwf	_enc1& (0+255),b
 10594                           
 10595                           ;encoder.c: 95: enc2 = PORTA & 0b00000111;
 10596  0156D4  5080               	movf	3968,w,c	;volatile
 10597  0156D6  0B07               	andlw	7
 10598  0156D8  6F53               	movwf	_enc2& (0+255),b
 10599                           
 10600                           ; BSR set to: 1
 10601                           ;encoder.c: 96: os.encoder1Count = 0;
 10602  0156DA  0E00               	movlw	0
 10603  0156DC  6F74               	movwf	(_os+3)& (0+255),b	;volatile
 10604                           
 10605                           ; BSR set to: 1
 10606                           ;encoder.c: 97: os.encoder2Count = 0;
 10607  0156DE  0E00               	movlw	0
 10608  0156E0  6F76               	movwf	(_os+5)& (0+255),b	;volatile
 10609                           
 10610                           ; BSR set to: 1
 10611                           ;encoder.c: 98: os.button1 = 0;
 10612  0156E2  0E00               	movlw	0
 10613  0156E4  6F75               	movwf	(_os+4)& (0+255),b	;volatile
 10614                           
 10615                           ; BSR set to: 1
 10616                           ;encoder.c: 99: os.button2 = 0;
 10617  0156E6  0E00               	movlw	0
 10618  0156E8  6F77               	movwf	(_os+6)& (0+255),b	;volatile
 10619                           
 10620                           ; BSR set to: 1
 10621                           ;encoder.c: 100: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 10622  0156EA  0E01               	movlw	1
 10623  0156EC  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 10624                           
 10625                           ; BSR set to: 1
 10626  0156EE  0012               	return		;funcret
 10627  0156F0                     __end_of_encoder_init:
 10628                           	opt stack 0
 10629                           tblptru	equ	0xFF8
 10630                           tblptrh	equ	0xFF7
 10631                           tblptrl	equ	0xFF6
 10632                           tablat	equ	0xFF5
 10633                           prodh	equ	0xFF4
 10634                           prodl	equ	0xFF3
 10635                           postinc0	equ	0xFEE
 10636                           wreg	equ	0xFE8
 10637                           postdec1	equ	0xFE5
 10638                           fsr1h	equ	0xFE2
 10639                           fsr1l	equ	0xFE1
 10640                           indf2	equ	0xFDF
 10641                           postinc2	equ	0xFDE
 10642                           fsr2h	equ	0xFDA
 10643                           fsr2l	equ	0xFD9
 10644                           status	equ	0xFD8
 10645                           
 10646 ;; *************** function _display_update *****************
 10647 ;; Defined at:
 10648 ;;		line 618 in file "display.c"
 10649 ;; Parameters:    Size  Location     Type
 10650 ;;		None
 10651 ;; Auto vars:     Size  Location     Type
 10652 ;;  line            1   16[BANK0 ] unsigned char 
 10653 ;; Return value:  Size  Location     Type
 10654 ;;                  1    wreg      void 
 10655 ;; Registers used:
 10656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10657 ;; Tracked objects:
 10658 ;;		On entry : 0/0
 10659 ;;		On exit  : 0/0
 10660 ;;		Unchanged: 0/0
 10661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10663 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10665 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10666 ;;Total ram usage:        1 bytes
 10667 ;; Hardware stack levels used:    1
 10668 ;; Hardware stack levels required when called:   14
 10669 ;; This function calls:
 10670 ;;		_i2c_display_cursor
 10671 ;;		_i2c_display_write_fixed
 10672 ;; This function is called by:
 10673 ;;		_main
 10674 ;;		_system_init
 10675 ;; This function uses a non-reentrant model
 10676 ;;
 10677                           
 10678                           	psect	text24
 10679  0151F0                     __ptext24:
 10680                           	opt stack 0
 10681  0151F0                     _display_update:
 10682                           	opt stack 15
 10683                           
 10684                           ;display.c: 620: uint8_t line;;display.c: 621: for(line=0; line<4; ++line)
 10685                           
 10686                           ; BSR set to: 1
 10687                           ;incstack = 0
 10688  0151F0  0E00               	movlw	0
 10689  0151F2  0100               	movlb	0	; () banked
 10690  0151F4  6F70               	movwf	display_update@line& (0+255),b
 10691  0151F6                     l16741:
 10692                           
 10693                           ; BSR set to: 0
 10694  0151F6  0E03               	movlw	3
 10695  0151F8  6570               	cpfsgt	display_update@line& (0+255),b
 10696  0151FA  D001               	goto	l1485
 10697  0151FC  0012               	return	
 10698  0151FE                     l1485:
 10699                           
 10700                           ; BSR set to: 0
 10701                           ;display.c: 622: {;display.c: 623: i2c_display_cursor(line, 0);
 10702                           
 10703                           ; BSR set to: 0
 10704  0151FE  0E00               	movlw	0
 10705  015200  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 10706  015202  5170               	movf	display_update@line& (0+255),w,b
 10707  015204  EC9C  F0AB         	call	_i2c_display_cursor
 10708                           
 10709                           ;display.c: 624: i2c_display_write_fixed(display_content[line], 20);
 10710  015208  0100               	movlb	0	; () banked
 10711  01520A  5170               	movf	display_update@line& (0+255),w,b
 10712  01520C  0D14               	mullw	20
 10713  01520E  0E34               	movlw	low _display_content
 10714  015210  24F3               	addwf	prodl,w,c
 10715  015212  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 10716  015214  0E02               	movlw	high _display_content
 10717  015216  20F4               	addwfc	prodh,w,c
 10718  015218  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 10719  01521A  0E14               	movlw	20
 10720  01521C  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 10721  01521E  EC01  F0A5         	call	_i2c_display_write_fixed	;wreg free
 10722  015222  0100               	movlb	0	; () banked
 10723  015224  2B70               	incf	display_update@line& (0+255),f,b
 10724  015226  D7E7               	goto	l16741
 10725  015228                     __end_of_display_update:
 10726                           	opt stack 0
 10727                           tblptru	equ	0xFF8
 10728                           tblptrh	equ	0xFF7
 10729                           tblptrl	equ	0xFF6
 10730                           tablat	equ	0xFF5
 10731                           prodh	equ	0xFF4
 10732                           prodl	equ	0xFF3
 10733                           postinc0	equ	0xFEE
 10734                           wreg	equ	0xFE8
 10735                           postdec1	equ	0xFE5
 10736                           fsr1h	equ	0xFE2
 10737                           fsr1l	equ	0xFE1
 10738                           indf2	equ	0xFDF
 10739                           postinc2	equ	0xFDE
 10740                           fsr2h	equ	0xFDA
 10741                           fsr2l	equ	0xFD9
 10742                           status	equ	0xFD8
 10743                           
 10744 ;; *************** function _i2c_display_write_fixed *****************
 10745 ;; Defined at:
 10746 ;;		line 419 in file "i2c.c"
 10747 ;; Parameters:    Size  Location     Type
 10748 ;;  data            2    5[BANK0 ] PTR unsigned char 
 10749 ;;		 -> display_content(80), 
 10750 ;;  length          1    7[BANK0 ] unsigned char 
 10751 ;; Auto vars:     Size  Location     Type
 10752 ;;  pos             1    8[BANK0 ] unsigned char 
 10753 ;; Return value:  Size  Location     Type
 10754 ;;                  1    wreg      void 
 10755 ;; Registers used:
 10756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10757 ;; Tracked objects:
 10758 ;;		On entry : 0/0
 10759 ;;		On exit  : 0/0
 10760 ;;		Unchanged: 0/0
 10761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10762 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10763 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10765 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10766 ;;Total ram usage:        4 bytes
 10767 ;; Hardware stack levels used:    1
 10768 ;; Hardware stack levels required when called:   11
 10769 ;; This function calls:
 10770 ;;		__i2c_send
 10771 ;;		__i2c_start
 10772 ;;		__i2c_stop
 10773 ;;		__i2c_wait_idle
 10774 ;; This function is called by:
 10775 ;;		_display_update
 10776 ;; This function uses a non-reentrant model
 10777 ;;
 10778                           
 10779                           	psect	text25
 10780  014A02                     __ptext25:
 10781                           	opt stack 0
 10782  014A02                     _i2c_display_write_fixed:
 10783                           	opt stack 17
 10784                           
 10785                           ;i2c.c: 421: uint8_t pos;;i2c.c: 426: _i2c_wait_idle();
 10786                           
 10787                           ; BSR set to: 0
 10788                           ;incstack = 0
 10789  014A02  ECDD  F0A0         	call	__i2c_wait_idle	;wreg free
 10790                           
 10791                           ;i2c.c: 427: _i2c_start();
 10792  014A06  ECD1  F0AC         	call	__i2c_start	;wreg free
 10793                           
 10794                           ;i2c.c: 428: _i2c_wait_idle();
 10795  014A0A  ECDD  F0A0         	call	__i2c_wait_idle	;wreg free
 10796                           
 10797                           ;i2c.c: 429: _i2c_send(0b01111000);
 10798  014A0E  0E78               	movlw	120
 10799  014A10  ECBE  F0AC         	call	__i2c_send
 10800                           
 10801                           ;i2c.c: 430: _i2c_wait_idle();
 10802  014A14  ECDD  F0A0         	call	__i2c_wait_idle	;wreg free
 10803                           
 10804                           ;i2c.c: 431: _i2c_send(0b01000000);
 10805  014A18  0E40               	movlw	64
 10806  014A1A  ECBE  F0AC         	call	__i2c_send
 10807                           
 10808                           ;i2c.c: 432: _i2c_wait_idle();
 10809  014A1E  ECDD  F0A0         	call	__i2c_wait_idle	;wreg free
 10810                           
 10811                           ;i2c.c: 435: for(pos=0; pos<length; ++pos)
 10812  014A22  0E00               	movlw	0
 10813  014A24  0100               	movlb	0	; () banked
 10814  014A26  6F68               	movwf	i2c_display_write_fixed@pos& (0+255),b
 10815  014A28  D00F               	goto	l1243
 10816  014A2A                     
 10817                           ; BSR set to: 0
 10818                           ;i2c.c: 436: {;i2c.c: 437: _i2c_send(data[pos]);
 10819                           
 10820                           ; BSR set to: 0
 10821  014A2A  5168               	movf	i2c_display_write_fixed@pos& (0+255),w,b
 10822  014A2C  0D01               	mullw	1
 10823  014A2E  50F3               	movf	prodl,w,c
 10824  014A30  2565               	addwf	i2c_display_write_fixed@data& (0+255),w,b
 10825  014A32  6ED9               	movwf	fsr2l,c
 10826  014A34  50F4               	movf	prodh,w,c
 10827  014A36  2166               	addwfc	(i2c_display_write_fixed@data+1)& (0+255),w,b
 10828  014A38  6EDA               	movwf	fsr2h,c
 10829  014A3A  50DF               	movf	indf2,w,c
 10830  014A3C  ECBE  F0AC         	call	__i2c_send
 10831                           
 10832                           ;i2c.c: 438: _i2c_wait_idle();
 10833  014A40  ECDD  F0A0         	call	__i2c_wait_idle	;wreg free
 10834  014A44  0100               	movlb	0	; () banked
 10835  014A46  2B68               	incf	i2c_display_write_fixed@pos& (0+255),f,b
 10836  014A48                     l1243:
 10837                           
 10838                           ; BSR set to: 0
 10839                           
 10840                           ; BSR set to: 0
 10841  014A48  5167               	movf	i2c_display_write_fixed@length& (0+255),w,b
 10842  014A4A  5D68               	subwf	i2c_display_write_fixed@pos& (0+255),w,b
 10843  014A4C  A0D8               	btfss	status,0,c
 10844  014A4E  D7ED               	goto	l1244
 10845                           
 10846                           ; BSR set to: 0
 10847                           ;i2c.c: 439: };i2c.c: 441: _i2c_stop();
 10848                           
 10849                           ; BSR set to: 0
 10850  014A50  ECCD  F0AC         	call	__i2c_stop	;wreg free
 10851  014A54  0012               	return		;funcret
 10852  014A56                     __end_of_i2c_display_write_fixed:
 10853                           	opt stack 0
 10854                           tblptru	equ	0xFF8
 10855                           tblptrh	equ	0xFF7
 10856                           tblptrl	equ	0xFF6
 10857                           tablat	equ	0xFF5
 10858                           prodh	equ	0xFF4
 10859                           prodl	equ	0xFF3
 10860                           postinc0	equ	0xFEE
 10861                           wreg	equ	0xFE8
 10862                           postdec1	equ	0xFE5
 10863                           fsr1h	equ	0xFE2
 10864                           fsr1l	equ	0xFE1
 10865                           indf2	equ	0xFDF
 10866                           postinc2	equ	0xFDE
 10867                           fsr2h	equ	0xFDA
 10868                           fsr2l	equ	0xFD9
 10869                           status	equ	0xFD8
 10870                           
 10871 ;; *************** function _i2c_display_cursor *****************
 10872 ;; Defined at:
 10873 ;;		line 379 in file "i2c.c"
 10874 ;; Parameters:    Size  Location     Type
 10875 ;;  line            1    wreg     unsigned char 
 10876 ;;  position        1   13[BANK0 ] unsigned char 
 10877 ;; Auto vars:     Size  Location     Type
 10878 ;;  line            1   14[BANK0 ] unsigned char 
 10879 ;;  address         1   15[BANK0 ] unsigned char 
 10880 ;; Return value:  Size  Location     Type
 10881 ;;                  1    wreg      void 
 10882 ;; Registers used:
 10883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10884 ;; Tracked objects:
 10885 ;;		On entry : 0/0
 10886 ;;		On exit  : 0/0
 10887 ;;		Unchanged: 0/0
 10888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10889 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10890 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10892 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10893 ;;Total ram usage:        3 bytes
 10894 ;; Hardware stack levels used:    1
 10895 ;; Hardware stack levels required when called:   13
 10896 ;; This function calls:
 10897 ;;		__ic2_display_set_ddram_address
 10898 ;; This function is called by:
 10899 ;;		_display_update
 10900 ;; This function uses a non-reentrant model
 10901 ;;
 10902                           
 10903                           	psect	text26
 10904  015738                     __ptext26:
 10905                           	opt stack 0
 10906  015738                     _i2c_display_cursor:
 10907                           	opt stack 15
 10908                           
 10909                           ;incstack = 0
 10910                           ;i2c_display_cursor@line stored from wreg
 10911  015738  0100               	movlb	0	; () banked
 10912  01573A  6F6E               	movwf	i2c_display_cursor@line& (0+255),b
 10913                           
 10914                           ;i2c.c: 381: uint8_t address;;i2c.c: 384: line &= 0b11;
 10915  01573C  0E03               	movlw	3
 10916  01573E  0100               	movlb	0	; () banked
 10917  015740  176E               	andwf	i2c_display_cursor@line& (0+255),f,b
 10918                           
 10919                           ;i2c.c: 385: address = line<<5;
 10920  015742  396E               	swapf	i2c_display_cursor@line& (0+255),w,b
 10921  015744  46E8               	rlncf	wreg,f,c
 10922  015746  0BE0               	andlw	224
 10923  015748  6F6F               	movwf	i2c_display_cursor@address& (0+255),b
 10924                           
 10925                           ;i2c.c: 386: position &= 0b11111;
 10926  01574A  0E1F               	movlw	31
 10927  01574C  176D               	andwf	i2c_display_cursor@position& (0+255),f,b
 10928                           
 10929                           ;i2c.c: 387: address |= position;
 10930  01574E  516D               	movf	i2c_display_cursor@position& (0+255),w,b
 10931  015750  136F               	iorwf	i2c_display_cursor@address& (0+255),f,b
 10932                           
 10933                           ; BSR set to: 0
 10934                           ;i2c.c: 393: _ic2_display_set_ddram_address(address);
 10935  015752  516F               	movf	i2c_display_cursor@address& (0+255),w,b
 10936  015754  EC78  F0AB         	call	__ic2_display_set_ddram_address
 10937  015758  0012               	return		;funcret
 10938  01575A                     __end_of_i2c_display_cursor:
 10939                           	opt stack 0
 10940                           tblptru	equ	0xFF8
 10941                           tblptrh	equ	0xFF7
 10942                           tblptrl	equ	0xFF6
 10943                           tablat	equ	0xFF5
 10944                           prodh	equ	0xFF4
 10945                           prodl	equ	0xFF3
 10946                           postinc0	equ	0xFEE
 10947                           wreg	equ	0xFE8
 10948                           postdec1	equ	0xFE5
 10949                           fsr1h	equ	0xFE2
 10950                           fsr1l	equ	0xFE1
 10951                           indf2	equ	0xFDF
 10952                           postinc2	equ	0xFDE
 10953                           fsr2h	equ	0xFDA
 10954                           fsr2l	equ	0xFD9
 10955                           status	equ	0xFD8
 10956                           
 10957 ;; *************** function __ic2_display_set_ddram_address *****************
 10958 ;; Defined at:
 10959 ;;		line 350 in file "i2c.c"
 10960 ;; Parameters:    Size  Location     Type
 10961 ;;  address         1    wreg     unsigned char 
 10962 ;; Auto vars:     Size  Location     Type
 10963 ;;  address         1   10[BANK0 ] unsigned char 
 10964 ;;  data_array      2   11[BANK0 ] unsigned char [2]
 10965 ;; Return value:  Size  Location     Type
 10966 ;;                  1    wreg      void 
 10967 ;; Registers used:
 10968 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10969 ;; Tracked objects:
 10970 ;;		On entry : 0/0
 10971 ;;		On exit  : 0/0
 10972 ;;		Unchanged: 0/0
 10973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10975 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10977 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10978 ;;Total ram usage:        3 bytes
 10979 ;; Hardware stack levels used:    1
 10980 ;; Hardware stack levels required when called:   12
 10981 ;; This function calls:
 10982 ;;		__i2c_write
 10983 ;; This function is called by:
 10984 ;;		_i2c_display_cursor
 10985 ;; This function uses a non-reentrant model
 10986 ;;
 10987                           
 10988                           	psect	text27
 10989  0156F0                     __ptext27:
 10990                           	opt stack 0
 10991  0156F0                     __ic2_display_set_ddram_address:
 10992                           	opt stack 15
 10993                           
 10994                           ;incstack = 0
 10995                           ;__ic2_display_set_ddram_address@address stored from wreg
 10996  0156F0  0100               	movlb	0	; () banked
 10997  0156F2  6F6A               	movwf	__ic2_display_set_ddram_address@address& (0+255),b
 10998                           
 10999                           ;i2c.c: 352: uint8_t data_array[2];;i2c.c: 353: data_array[0] = 0b00000000;
 11000  0156F4  0E00               	movlw	0
 11001  0156F6  0100               	movlb	0	; () banked
 11002  0156F8  6F6B               	movwf	__ic2_display_set_ddram_address@data_array& (0+255),b
 11003                           
 11004                           ; BSR set to: 0
 11005                           ;i2c.c: 354: data_array[1] = 0b10000000 | address;
 11006  0156FA  516A               	movf	__ic2_display_set_ddram_address@address& (0+255),w,b
 11007  0156FC  0980               	iorlw	128
 11008  0156FE  6F6C               	movwf	(__ic2_display_set_ddram_address@data_array+1)& (0+255),b
 11009                           
 11010                           ; BSR set to: 0
 11011                           ;i2c.c: 360: _i2c_write(0b01111000, &data_array[0], 2);
 11012  015700  0E6B               	movlw	low __ic2_display_set_ddram_address@data_array
 11013  015702  6F65               	movwf	__i2c_write@data& (0+255),b
 11014  015704  0E00               	movlw	high __ic2_display_set_ddram_address@data_array
 11015  015706  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 11016  015708  0E02               	movlw	2
 11017  01570A  6F67               	movwf	__i2c_write@length& (0+255),b
 11018  01570C  0E78               	movlw	120
 11019  01570E  EC22  F0A6         	call	__i2c_write
 11020  015712  0012               	return		;funcret
 11021  015714                     __end_of__ic2_display_set_ddram_address:
 11022                           	opt stack 0
 11023                           tblptru	equ	0xFF8
 11024                           tblptrh	equ	0xFF7
 11025                           tblptrl	equ	0xFF6
 11026                           tablat	equ	0xFF5
 11027                           prodh	equ	0xFF4
 11028                           prodl	equ	0xFF3
 11029                           postinc0	equ	0xFEE
 11030                           wreg	equ	0xFE8
 11031                           postdec1	equ	0xFE5
 11032                           fsr1h	equ	0xFE2
 11033                           fsr1l	equ	0xFE1
 11034                           indf2	equ	0xFDF
 11035                           postinc2	equ	0xFDE
 11036                           fsr2h	equ	0xFDA
 11037                           fsr2l	equ	0xFD9
 11038                           status	equ	0xFD8
 11039                           
 11040 ;; *************** function _display_init *****************
 11041 ;; Defined at:
 11042 ;;		line 256 in file "display.c"
 11043 ;; Parameters:    Size  Location     Type
 11044 ;;		None
 11045 ;; Auto vars:     Size  Location     Type
 11046 ;;		None
 11047 ;; Return value:  Size  Location     Type
 11048 ;;                  1    wreg      void 
 11049 ;; Registers used:
 11050 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11051 ;; Tracked objects:
 11052 ;;		On entry : 0/0
 11053 ;;		On exit  : 0/0
 11054 ;;		Unchanged: 0/0
 11055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11060 ;;Total ram usage:        0 bytes
 11061 ;; Hardware stack levels used:    1
 11062 ;; Hardware stack levels required when called:   15
 11063 ;; This function calls:
 11064 ;;		__display_start
 11065 ;;		_i2c_display_init
 11066 ;;		_i2c_display_program_custom_character
 11067 ;; This function is called by:
 11068 ;;		_system_init
 11069 ;; This function uses a non-reentrant model
 11070 ;;
 11071                           
 11072                           	psect	text28
 11073  015144                     __ptext28:
 11074                           	opt stack 0
 11075  015144                     _display_init:
 11076                           	opt stack 14
 11077                           
 11078                           ;display.c: 258: i2c_display_init();
 11079                           
 11080                           ;incstack = 0
 11081  015144  ECFA  F0A5         	call	_i2c_display_init	;wreg free
 11082                           
 11083                           ;display.c: 259: i2c_display_program_custom_character(0x00, bit_pattern_verticalbar);
 11084  015148  0ED5               	movlw	low _bit_pattern_verticalbar
 11085  01514A  0100               	movlb	0	; () banked
 11086  01514C  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 11087  01514E  0EA2               	movlw	high _bit_pattern_verticalbar
 11088  015150  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 11089  015152  0E00               	movlw	0
 11090  015154  ECBC  F09D         	call	_i2c_display_program_custom_character
 11091                           
 11092                           ;display.c: 260: i2c_display_program_custom_character(0x01, bit_pattern_degree);
 11093  015158  0ECD               	movlw	low _bit_pattern_degree
 11094  01515A  0100               	movlb	0	; () banked
 11095  01515C  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 11096  01515E  0EA2               	movlw	high _bit_pattern_degree
 11097  015160  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 11098  015162  0E01               	movlw	1
 11099  015164  ECBC  F09D         	call	_i2c_display_program_custom_character
 11100                           
 11101                           ;display.c: 261: i2c_display_program_custom_character(0x02, bit_pattern_ae);
 11102  015168  0EC5               	movlw	low _bit_pattern_ae
 11103  01516A  0100               	movlb	0	; () banked
 11104  01516C  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 11105  01516E  0EA2               	movlw	high _bit_pattern_ae
 11106  015170  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 11107  015172  0E02               	movlw	2
 11108  015174  ECBC  F09D         	call	_i2c_display_program_custom_character
 11109                           
 11110                           ;display.c: 263: _display_start();
 11111  015178  EC82  F096         	call	__display_start	;wreg free
 11112  01517C  0012               	return		;funcret
 11113  01517E                     __end_of_display_init:
 11114                           	opt stack 0
 11115                           tblptru	equ	0xFF8
 11116                           tblptrh	equ	0xFF7
 11117                           tblptrl	equ	0xFF6
 11118                           tablat	equ	0xFF5
 11119                           prodh	equ	0xFF4
 11120                           prodl	equ	0xFF3
 11121                           postinc0	equ	0xFEE
 11122                           wreg	equ	0xFE8
 11123                           postdec1	equ	0xFE5
 11124                           fsr1h	equ	0xFE2
 11125                           fsr1l	equ	0xFE1
 11126                           indf2	equ	0xFDF
 11127                           postinc2	equ	0xFDE
 11128                           fsr2h	equ	0xFDA
 11129                           fsr2l	equ	0xFD9
 11130                           status	equ	0xFD8
 11131                           
 11132 ;; *************** function _i2c_display_program_custom_character *****************
 11133 ;; Defined at:
 11134 ;;		line 444 in file "i2c.c"
 11135 ;; Parameters:    Size  Location     Type
 11136 ;;  address         1    wreg     unsigned char 
 11137 ;;  bit_pattern     2   14[BANK0 ] PTR unsigned char 
 11138 ;;		 -> bit_pattern_ae(8), bit_pattern_degree(8), bit_pattern_verticalbar(8), 
 11139 ;; Auto vars:     Size  Location     Type
 11140 ;;  address         1   31[BANK0 ] unsigned char 
 11141 ;;  data_array     11   20[BANK0 ] unsigned char [11]
 11142 ;;  cntr            1   32[BANK0 ] unsigned char 
 11143 ;; Return value:  Size  Location     Type
 11144 ;;                  1    wreg      void 
 11145 ;; Registers used:
 11146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11147 ;; Tracked objects:
 11148 ;;		On entry : 0/0
 11149 ;;		On exit  : 0/0
 11150 ;;		Unchanged: 0/0
 11151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11152 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11153 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11154 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11155 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11156 ;;Total ram usage:       19 bytes
 11157 ;; Hardware stack levels used:    1
 11158 ;; Hardware stack levels required when called:   13
 11159 ;; This function calls:
 11160 ;;		__i2c_write
 11161 ;;		__ic2_display_set_cgram_address
 11162 ;; This function is called by:
 11163 ;;		_display_init
 11164 ;; This function uses a non-reentrant model
 11165 ;;
 11166                           
 11167                           	psect	text29
 11168  013B78                     __ptext29:
 11169                           	opt stack 0
 11170  013B78                     _i2c_display_program_custom_character:
 11171                           	opt stack 15
 11172                           
 11173                           ;incstack = 0
 11174                           ;i2c_display_program_custom_character@address stored from wreg
 11175  013B78  0100               	movlb	0	; () banked
 11176  013B7A  6F7F               	movwf	i2c_display_program_custom_character@address& (0+255),b
 11177                           
 11178                           ;i2c.c: 446: uint8_t cntr;;i2c.c: 447: uint8_t data_array[11];;i2c.c: 450: _ic2_display_
      +                          set_cgram_address(address<<3);
 11179  013B7C  0100               	movlb	0	; () banked
 11180  013B7E  397F               	swapf	i2c_display_program_custom_character@address& (0+255),w,b
 11181  013B80  42E8               	rrncf	wreg,f,c
 11182  013B82  0BF8               	andlw	248
 11183  013B84  ECB1  F0AA         	call	__ic2_display_set_cgram_address
 11184                           
 11185                           ;i2c.c: 453: data_array[0] = 0b01000000;
 11186  013B88  0E40               	movlw	64
 11187  013B8A  0100               	movlb	0	; () banked
 11188  013B8C  6F74               	movwf	i2c_display_program_custom_character@data_array& (0+255),b
 11189                           
 11190                           ; BSR set to: 0
 11191                           ;i2c.c: 454: for(cntr=0; cntr<8; ++cntr)
 11192  013B8E  0E00               	movlw	0
 11193  013B90  6F80               	movwf	i2c_display_program_custom_character@cntr& (0+255),b
 11194  013B92                     l15405:
 11195                           
 11196                           ; BSR set to: 0
 11197  013B92  0E07               	movlw	7
 11198  013B94  6580               	cpfsgt	i2c_display_program_custom_character@cntr& (0+255),b
 11199  013B96  D001               	goto	l1249
 11200  013B98  D023               	goto	u14180
 11201  013B9A                     l1249:
 11202                           
 11203                           ; BSR set to: 0
 11204                           ;i2c.c: 455: {;i2c.c: 456: data_array[cntr+1] = bit_pattern[cntr] & 0b00011111;
 11205                           
 11206                           ; BSR set to: 0
 11207  013B9A  5180               	movf	i2c_display_program_custom_character@cntr& (0+255),w,b
 11208  013B9C  6F70               	movwf	??_i2c_display_program_custom_character& (0+255),b
 11209  013B9E  6B71               	clrf	(??_i2c_display_program_custom_character+1)& (0+255),b
 11210  013BA0  0E01               	movlw	1
 11211  013BA2  2770               	addwf	??_i2c_display_program_custom_character& (0+255),f,b
 11212  013BA4  0E00               	movlw	0
 11213  013BA6  2371               	addwfc	(??_i2c_display_program_custom_character+1)& (0+255),f,b
 11214  013BA8  0E74               	movlw	low i2c_display_program_custom_character@data_array
 11215  013BAA  2570               	addwf	??_i2c_display_program_custom_character& (0+255),w,b
 11216  013BAC  6ED9               	movwf	fsr2l,c
 11217  013BAE  0E00               	movlw	high i2c_display_program_custom_character@data_array
 11218  013BB0  2171               	addwfc	(??_i2c_display_program_custom_character+1)& (0+255),w,b
 11219  013BB2  6EDA               	movwf	fsr2h,c
 11220  013BB4  5180               	movf	i2c_display_program_custom_character@cntr& (0+255),w,b
 11221  013BB6  0D01               	mullw	1
 11222  013BB8  C06E  F072         	movff	i2c_display_program_custom_character@bit_pattern,??_i2c_display_program_custom_ch
      +                          aracter+2
 11223  013BBC  C06F  F073         	movff	i2c_display_program_custom_character@bit_pattern+1,??_i2c_display_program_custom_
      +                          character+3
 11224  013BC0  50F3               	movf	prodl,w,c
 11225  013BC2  2772               	addwf	(??_i2c_display_program_custom_character+2)& (0+255),f,b
 11226  013BC4  50F4               	movf	prodh,w,c
 11227  013BC6  2373               	addwfc	(??_i2c_display_program_custom_character+3)& (0+255),f,b
 11228  013BC8  C072  FFF6         	movff	??_i2c_display_program_custom_character+2,tblptrl
 11229  013BCC  C073  FFF7         	movff	??_i2c_display_program_custom_character+3,tblptrh
 11230  013BD0                     	if	0	;tblptru may be non-zero
 11231  013BD0                     	endif
 11232  013BD0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11233  013BD0  0E00               	movlw	low (__mediumconst shr (0+16))
 11234  013BD2  6EF8               	movwf	tblptru,c
 11235  013BD4                     	endif
 11236  013BD4  0008               	tblrd		*
 11237  013BD6  50F5               	movf	tablat,w,c
 11238  013BD8  0B1F               	andlw	31
 11239  013BDA  6EDF               	movwf	indf2,c
 11240                           
 11241                           ; BSR set to: 0
 11242  013BDC  2B80               	incf	i2c_display_program_custom_character@cntr& (0+255),f,b
 11243  013BDE  D7D9               	goto	l15405
 11244  013BE0                     u14180:
 11245                           
 11246                           ; BSR set to: 0
 11247                           ;i2c.c: 457: };i2c.c: 458: _i2c_write(0b01111000, data_array, 9);
 11248                           
 11249                           ; BSR set to: 0
 11250  013BE0  0E74               	movlw	low i2c_display_program_custom_character@data_array
 11251  013BE2  6F65               	movwf	__i2c_write@data& (0+255),b
 11252  013BE4  0E00               	movlw	high i2c_display_program_custom_character@data_array
 11253  013BE6  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 11254  013BE8  0E09               	movlw	9
 11255  013BEA  6F67               	movwf	__i2c_write@length& (0+255),b
 11256  013BEC  0E78               	movlw	120
 11257  013BEE  EC22  F0A6         	call	__i2c_write
 11258  013BF2  0012               	return		;funcret
 11259  013BF4                     __end_of_i2c_display_program_custom_character:
 11260                           	opt stack 0
 11261                           tblptru	equ	0xFF8
 11262                           tblptrh	equ	0xFF7
 11263                           tblptrl	equ	0xFF6
 11264                           tablat	equ	0xFF5
 11265                           prodh	equ	0xFF4
 11266                           prodl	equ	0xFF3
 11267                           postinc0	equ	0xFEE
 11268                           wreg	equ	0xFE8
 11269                           postdec1	equ	0xFE5
 11270                           fsr1h	equ	0xFE2
 11271                           fsr1l	equ	0xFE1
 11272                           indf2	equ	0xFDF
 11273                           postinc2	equ	0xFDE
 11274                           fsr2h	equ	0xFDA
 11275                           fsr2l	equ	0xFD9
 11276                           status	equ	0xFD8
 11277                           
 11278 ;; *************** function __ic2_display_set_cgram_address *****************
 11279 ;; Defined at:
 11280 ;;		line 363 in file "i2c.c"
 11281 ;; Parameters:    Size  Location     Type
 11282 ;;  address         1    wreg     unsigned char 
 11283 ;; Auto vars:     Size  Location     Type
 11284 ;;  address         1   13[BANK0 ] unsigned char 
 11285 ;;  data_array      3   10[BANK0 ] unsigned char [3]
 11286 ;; Return value:  Size  Location     Type
 11287 ;;                  1    wreg      void 
 11288 ;; Registers used:
 11289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11290 ;; Tracked objects:
 11291 ;;		On entry : 0/0
 11292 ;;		On exit  : 0/0
 11293 ;;		Unchanged: 0/0
 11294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11296 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11298 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11299 ;;Total ram usage:        4 bytes
 11300 ;; Hardware stack levels used:    1
 11301 ;; Hardware stack levels required when called:   12
 11302 ;; This function calls:
 11303 ;;		__i2c_write
 11304 ;; This function is called by:
 11305 ;;		_i2c_display_program_custom_character
 11306 ;; This function uses a non-reentrant model
 11307 ;;
 11308                           
 11309                           	psect	text30
 11310  015562                     __ptext30:
 11311                           	opt stack 0
 11312  015562                     __ic2_display_set_cgram_address:
 11313                           	opt stack 15
 11314                           
 11315                           ;incstack = 0
 11316                           ;__ic2_display_set_cgram_address@address stored from wreg
 11317  015562  0100               	movlb	0	; () banked
 11318  015564  6F6D               	movwf	__ic2_display_set_cgram_address@address& (0+255),b
 11319                           
 11320                           ;i2c.c: 365: uint8_t data_array[3];;i2c.c: 370: address &= 0b001111111;
 11321  015566  0100               	movlb	0	; () banked
 11322  015568  9F6D               	bcf	__ic2_display_set_cgram_address@address& (0+255),7,b
 11323                           
 11324                           ; BSR set to: 0
 11325                           ;i2c.c: 371: data_array[0] = 0b00000000;
 11326  01556A  0E00               	movlw	0
 11327  01556C  6F6A               	movwf	__ic2_display_set_cgram_address@data_array& (0+255),b
 11328                           
 11329                           ; BSR set to: 0
 11330                           ;i2c.c: 372: data_array[1] = 0b00111000;
 11331  01556E  0E38               	movlw	56
 11332  015570  6F6B               	movwf	(__ic2_display_set_cgram_address@data_array+1)& (0+255),b
 11333                           
 11334                           ;i2c.c: 373: data_array[2] = 0b01000000 | address;
 11335  015572  516D               	movf	__ic2_display_set_cgram_address@address& (0+255),w,b
 11336  015574  0940               	iorlw	64
 11337  015576  6F6C               	movwf	(__ic2_display_set_cgram_address@data_array+2)& (0+255),b
 11338                           
 11339                           ; BSR set to: 0
 11340                           ;i2c.c: 376: _i2c_write(0b01111000, data_array, 3);
 11341  015578  0E6A               	movlw	low __ic2_display_set_cgram_address@data_array
 11342  01557A  6F65               	movwf	__i2c_write@data& (0+255),b
 11343  01557C  0E00               	movlw	high __ic2_display_set_cgram_address@data_array
 11344  01557E  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 11345  015580  0E03               	movlw	3
 11346  015582  6F67               	movwf	__i2c_write@length& (0+255),b
 11347  015584  0E78               	movlw	120
 11348  015586  EC22  F0A6         	call	__i2c_write
 11349  01558A  0012               	return		;funcret
 11350  01558C                     __end_of__ic2_display_set_cgram_address:
 11351                           	opt stack 0
 11352                           tblptru	equ	0xFF8
 11353                           tblptrh	equ	0xFF7
 11354                           tblptrl	equ	0xFF6
 11355                           tablat	equ	0xFF5
 11356                           prodh	equ	0xFF4
 11357                           prodl	equ	0xFF3
 11358                           postinc0	equ	0xFEE
 11359                           wreg	equ	0xFE8
 11360                           postdec1	equ	0xFE5
 11361                           fsr1h	equ	0xFE2
 11362                           fsr1l	equ	0xFE1
 11363                           indf2	equ	0xFDF
 11364                           postinc2	equ	0xFDE
 11365                           fsr2h	equ	0xFDA
 11366                           fsr2l	equ	0xFD9
 11367                           status	equ	0xFD8
 11368                           
 11369 ;; *************** function _i2c_display_init *****************
 11370 ;; Defined at:
 11371 ;;		line 321 in file "i2c.c"
 11372 ;; Parameters:    Size  Location     Type
 11373 ;;		None
 11374 ;; Auto vars:     Size  Location     Type
 11375 ;;  init_sequenc    9   11[BANK0 ] unsigned char [9]
 11376 ;; Return value:  Size  Location     Type
 11377 ;;                  1    wreg      void 
 11378 ;; Registers used:
 11379 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11380 ;; Tracked objects:
 11381 ;;		On entry : 0/0
 11382 ;;		On exit  : 0/0
 11383 ;;		Unchanged: 0/0
 11384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11386 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11387 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11388 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11389 ;;Total ram usage:       10 bytes
 11390 ;; Hardware stack levels used:    1
 11391 ;; Hardware stack levels required when called:   12
 11392 ;; This function calls:
 11393 ;;		__i2c_write
 11394 ;; This function is called by:
 11395 ;;		_display_init
 11396 ;; This function uses a non-reentrant model
 11397 ;;
 11398                           
 11399                           	psect	text31
 11400  014BF4                     __ptext31:
 11401                           	opt stack 0
 11402  014BF4                     _i2c_display_init:
 11403                           	opt stack 16
 11404                           
 11405                           ;i2c.c: 323: uint8_t init_sequence[9] = {;i2c.c: 324: 0x3A,;i2c.c: 326: 0b00011110,;i2c.
      +                          c: 327: 0x39,;i2c.c: 329: 0b00001100,;i2c.c: 330: 0x74,;i2c.c: 331: 0b1011100,;i2c.c: 33
      +                          2: 0x6d,;i2c.c: 333: 0x0c,;i2c.c: 334: 0x01;i2c.c: 335: };
 11406                           
 11407                           ;incstack = 0
 11408  014BF4  EE22  F0A6         	lfsr	2,i2c_display_init@F6942
 11409  014BF8  EE10  F06B         	lfsr	1,i2c_display_init@init_sequence
 11410  014BFC  0E08               	movlw	8
 11411  014BFE                     u14151:
 11412  014BFE  CFDB FFE3          	movff	plusw2,plusw1
 11413  014C02  06E8               	decf	wreg,f,c
 11414  014C04  E2FC               	bc	u14151
 11415                           
 11416                           ;i2c.c: 338: LATAbits.LA3 = 0;
 11417  014C06  9689               	bcf	3977,3,c	;volatile
 11418                           
 11419                           ;i2c.c: 339: _delay((unsigned long)((10)*(8000000/4000.0)));
 11420  014C08  0E1A               	movlw	26
 11421  014C0A  0100               	movlb	0	; () banked
 11422  014C0C  6F6A               	movwf	??_i2c_display_init& (0+255),b
 11423  014C0E  0EF8               	movlw	248
 11424  014C10                     u19137:
 11425  014C10  2EE8               	decfsz	wreg,f,c
 11426  014C12  D7FE               	bra	u19137
 11427  014C14  2F6A               	decfsz	??_i2c_display_init& (0+255),f,b
 11428  014C16  D7FC               	bra	u19137
 11429  014C18  F000               	nop	
 11430                           
 11431                           ;i2c.c: 340: LATAbits.LA3 = 1;
 11432  014C1A  8689               	bsf	3977,3,c	;volatile
 11433                           
 11434                           ;i2c.c: 341: _delay((unsigned long)((50)*(8000000/4000.0)));
 11435  014C1C  0E82               	movlw	130
 11436  014C1E  0100               	movlb	0	; () banked
 11437  014C20  6F6A               	movwf	??_i2c_display_init& (0+255),b
 11438  014C22  0EDD               	movlw	221
 11439  014C24                     u19147:
 11440  014C24  2EE8               	decfsz	wreg,f,c
 11441  014C26  D7FE               	bra	u19147
 11442  014C28  2F6A               	decfsz	??_i2c_display_init& (0+255),f,b
 11443  014C2A  D7FC               	bra	u19147
 11444  014C2C  D000               	nop2	
 11445                           
 11446                           ;i2c.c: 347: _i2c_write(0b01111000, &init_sequence[0], 9);
 11447  014C2E  0E6B               	movlw	low i2c_display_init@init_sequence
 11448  014C30  0100               	movlb	0	; () banked
 11449  014C32  6F65               	movwf	__i2c_write@data& (0+255),b
 11450  014C34  0E00               	movlw	high i2c_display_init@init_sequence
 11451  014C36  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 11452  014C38  0E09               	movlw	9
 11453  014C3A  6F67               	movwf	__i2c_write@length& (0+255),b
 11454  014C3C  0E78               	movlw	120
 11455  014C3E  EC22  F0A6         	call	__i2c_write
 11456  014C42  0012               	return		;funcret
 11457  014C44                     __end_of_i2c_display_init:
 11458                           	opt stack 0
 11459                           tblptru	equ	0xFF8
 11460                           tblptrh	equ	0xFF7
 11461                           tblptrl	equ	0xFF6
 11462                           tablat	equ	0xFF5
 11463                           prodh	equ	0xFF4
 11464                           prodl	equ	0xFF3
 11465                           postinc0	equ	0xFEE
 11466                           wreg	equ	0xFE8
 11467                           postdec1	equ	0xFE5
 11468                           plusw1	equ	0xFE3
 11469                           fsr1h	equ	0xFE2
 11470                           fsr1l	equ	0xFE1
 11471                           indf2	equ	0xFDF
 11472                           postinc2	equ	0xFDE
 11473                           plusw2	equ	0xFDB
 11474                           fsr2h	equ	0xFDA
 11475                           fsr2l	equ	0xFD9
 11476                           status	equ	0xFD8
 11477                           
 11478 ;; *************** function __i2c_write *****************
 11479 ;; Defined at:
 11480 ;;		line 84 in file "i2c.c"
 11481 ;; Parameters:    Size  Location     Type
 11482 ;;  slave_addres    1    wreg     unsigned char 
 11483 ;;  data            2    5[BANK0 ] PTR unsigned char 
 11484 ;;		 -> i2c_display_program_custom_character@data_array(11), _ic2_display_set_cgram_address@data_array(3), _ic2_display_
      +set_ddram_address@data_array(2), i2c_display_init@init_sequence(9), 
 11485 ;;		 -> _i2c_display_send_init_sequence@init_sequence(9), i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_
      +readByte@addr(1), 
 11486 ;;		 -> i2c_eeprom_writeByte@dat(2), i2c_adc_start@configuration_byte(1), 
 11487 ;;  length          1    7[BANK0 ] unsigned char 
 11488 ;; Auto vars:     Size  Location     Type
 11489 ;;  slave_addres    1    8[BANK0 ] unsigned char 
 11490 ;;  cntr            1    9[BANK0 ] unsigned char 
 11491 ;; Return value:  Size  Location     Type
 11492 ;;                  1    wreg      void 
 11493 ;; Registers used:
 11494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11495 ;; Tracked objects:
 11496 ;;		On entry : 0/0
 11497 ;;		On exit  : 0/0
 11498 ;;		Unchanged: 0/0
 11499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11500 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11501 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11503 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11504 ;;Total ram usage:        5 bytes
 11505 ;; Hardware stack levels used:    1
 11506 ;; Hardware stack levels required when called:   11
 11507 ;; This function calls:
 11508 ;;		__i2c_send
 11509 ;;		__i2c_start
 11510 ;;		__i2c_stop
 11511 ;;		__i2c_wait_idle
 11512 ;; This function is called by:
 11513 ;;		_i2c_eeprom_read
 11514 ;;		_i2c_display_init
 11515 ;;		__ic2_display_set_ddram_address
 11516 ;;		__ic2_display_set_cgram_address
 11517 ;;		_i2c_display_program_custom_character
 11518 ;;		_i2c_adc_start
 11519 ;;		_i2c_eeprom_writeByte
 11520 ;;		_i2c_eeprom_readByte
 11521 ;;		__i2c_display_send_init_sequence
 11522 ;; This function uses a non-reentrant model
 11523 ;;
 11524                           
 11525                           	psect	text32
 11526  014C44                     __ptext32:
 11527                           	opt stack 0
 11528  014C44                     __i2c_write:
 11529                           	opt stack 16
 11530                           
 11531                           ;incstack = 0
 11532                           ;__i2c_write@slave_address stored from wreg
 11533  014C44  0100               	movlb	0	; () banked
 11534  014C46  6F68               	movwf	__i2c_write@slave_address& (0+255),b
 11535                           
 11536                           ;i2c.c: 86: uint8_t cntr;;i2c.c: 88: _i2c_wait_idle();
 11537  014C48  ECDD  F0A0         	call	__i2c_wait_idle	;wreg free
 11538                           
 11539                           ;i2c.c: 89: _i2c_start();
 11540  014C4C  ECD1  F0AC         	call	__i2c_start	;wreg free
 11541                           
 11542                           ;i2c.c: 90: _i2c_wait_idle();
 11543  014C50  ECDD  F0A0         	call	__i2c_wait_idle	;wreg free
 11544                           
 11545                           ;i2c.c: 91: _i2c_send(slave_address);
 11546  014C54  0100               	movlb	0	; () banked
 11547  014C56  5168               	movf	__i2c_write@slave_address& (0+255),w,b
 11548  014C58  ECBE  F0AC         	call	__i2c_send
 11549                           
 11550                           ;i2c.c: 92: _i2c_wait_idle();
 11551  014C5C  ECDD  F0A0         	call	__i2c_wait_idle	;wreg free
 11552                           
 11553                           ;i2c.c: 94: for(cntr=0; cntr<length; ++cntr)
 11554  014C60  0E00               	movlw	0
 11555  014C62  0100               	movlb	0	; () banked
 11556  014C64  6F69               	movwf	__i2c_write@cntr& (0+255),b
 11557  014C66  D00F               	goto	l1158
 11558  014C68                     
 11559                           ; BSR set to: 0
 11560                           ;i2c.c: 95: {;i2c.c: 96: _i2c_send(data[cntr]);
 11561                           
 11562                           ; BSR set to: 0
 11563  014C68  5169               	movf	__i2c_write@cntr& (0+255),w,b
 11564  014C6A  0D01               	mullw	1
 11565  014C6C  50F3               	movf	prodl,w,c
 11566  014C6E  2565               	addwf	__i2c_write@data& (0+255),w,b
 11567  014C70  6ED9               	movwf	fsr2l,c
 11568  014C72  50F4               	movf	prodh,w,c
 11569  014C74  2166               	addwfc	(__i2c_write@data+1)& (0+255),w,b
 11570  014C76  6EDA               	movwf	fsr2h,c
 11571  014C78  50DF               	movf	indf2,w,c
 11572  014C7A  ECBE  F0AC         	call	__i2c_send
 11573                           
 11574                           ;i2c.c: 97: _i2c_wait_idle();
 11575  014C7E  ECDD  F0A0         	call	__i2c_wait_idle	;wreg free
 11576  014C82  0100               	movlb	0	; () banked
 11577  014C84  2B69               	incf	__i2c_write@cntr& (0+255),f,b
 11578  014C86                     l1158:
 11579                           
 11580                           ; BSR set to: 0
 11581                           
 11582                           ; BSR set to: 0
 11583  014C86  5167               	movf	__i2c_write@length& (0+255),w,b
 11584  014C88  5D69               	subwf	__i2c_write@cntr& (0+255),w,b
 11585  014C8A  A0D8               	btfss	status,0,c
 11586  014C8C  D7ED               	goto	l1159
 11587                           
 11588                           ; BSR set to: 0
 11589                           ;i2c.c: 98: };i2c.c: 100: _i2c_stop();
 11590                           
 11591                           ; BSR set to: 0
 11592  014C8E  ECCD  F0AC         	call	__i2c_stop	;wreg free
 11593  014C92  0012               	return		;funcret
 11594  014C94                     __end_of__i2c_write:
 11595                           	opt stack 0
 11596                           tblptru	equ	0xFF8
 11597                           tblptrh	equ	0xFF7
 11598                           tblptrl	equ	0xFF6
 11599                           tablat	equ	0xFF5
 11600                           prodh	equ	0xFF4
 11601                           prodl	equ	0xFF3
 11602                           postinc0	equ	0xFEE
 11603                           wreg	equ	0xFE8
 11604                           postdec1	equ	0xFE5
 11605                           plusw1	equ	0xFE3
 11606                           fsr1h	equ	0xFE2
 11607                           fsr1l	equ	0xFE1
 11608                           indf2	equ	0xFDF
 11609                           postinc2	equ	0xFDE
 11610                           plusw2	equ	0xFDB
 11611                           fsr2h	equ	0xFDA
 11612                           fsr2l	equ	0xFD9
 11613                           status	equ	0xFD8
 11614                           
 11615 ;; *************** function __i2c_wait_idle *****************
 11616 ;; Defined at:
 11617 ;;		line 40 in file "i2c.c"
 11618 ;; Parameters:    Size  Location     Type
 11619 ;;		None
 11620 ;; Auto vars:     Size  Location     Type
 11621 ;;		None
 11622 ;; Return value:  Size  Location     Type
 11623 ;;                  1    wreg      void 
 11624 ;; Registers used:
 11625 ;;		wreg, status,2, status,0
 11626 ;; Tracked objects:
 11627 ;;		On entry : 0/0
 11628 ;;		On exit  : 0/0
 11629 ;;		Unchanged: 0/0
 11630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11633 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11634 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11635 ;;Total ram usage:        5 bytes
 11636 ;; Hardware stack levels used:    1
 11637 ;; Hardware stack levels required when called:   10
 11638 ;; This function calls:
 11639 ;;		Nothing
 11640 ;; This function is called by:
 11641 ;;		__i2c_write
 11642 ;;		__i2c_read
 11643 ;;		__i2c_eeprom_busy
 11644 ;;		_i2c_display_write_fixed
 11645 ;;		_i2c_adc_read
 11646 ;;		_i2c_display_write
 11647 ;; This function uses a non-reentrant model
 11648 ;;
 11649                           
 11650                           	psect	text33
 11651  0141BA                     __ptext33:
 11652                           	opt stack 0
 11653  0141BA                     __i2c_wait_idle:
 11654                           	opt stack 16
 11655                           
 11656                           ;i2c.c: 42: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 11657                           
 11658                           ;incstack = 0
 11659  0141BA  A4C7               	btfss	4039,2,c	;volatile
 11660  0141BC  D004               	goto	u11480
 11661  0141BE  0100               	movlb	0	; () banked
 11662  0141C0  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 11663  0141C2  2B60               	incf	??__i2c_wait_idle& (0+255),f,b
 11664  0141C4  D002               	goto	u11488
 11665  0141C6                     u11480:
 11666  0141C6  0100               	movlb	0	; () banked
 11667  0141C8  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 11668  0141CA                     u11488:
 11669  0141CA  A0C5               	btfss	4037,0,c	;volatile
 11670  0141CC  D003               	goto	u11490
 11671  0141CE  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 11672  0141D0  2B61               	incf	(??__i2c_wait_idle+1)& (0+255),f,b
 11673  0141D2  D002               	goto	u11498
 11674  0141D4                     u11490:
 11675  0141D4  0100               	movlb	0	; () banked
 11676  0141D6  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 11677  0141D8                     u11498:
 11678  0141D8  A2C5               	btfss	4037,1,c	;volatile
 11679  0141DA  D003               	goto	u11500
 11680  0141DC  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 11681  0141DE  2B62               	incf	(??__i2c_wait_idle+2)& (0+255),f,b
 11682  0141E0  D002               	goto	u11508
 11683  0141E2                     u11500:
 11684  0141E2  0100               	movlb	0	; () banked
 11685  0141E4  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 11686  0141E6                     u11508:
 11687  0141E6  A4C5               	btfss	4037,2,c	;volatile
 11688  0141E8  D003               	goto	u11510
 11689  0141EA  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 11690  0141EC  2B63               	incf	(??__i2c_wait_idle+3)& (0+255),f,b
 11691  0141EE  D002               	goto	u11518
 11692  0141F0                     u11510:
 11693  0141F0  0100               	movlb	0	; () banked
 11694  0141F2  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 11695  0141F4                     u11518:
 11696  0141F4  A6C5               	btfss	4037,3,c	;volatile
 11697  0141F6  D003               	goto	u11520
 11698  0141F8  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 11699  0141FA  2B64               	incf	(??__i2c_wait_idle+4)& (0+255),f,b
 11700  0141FC  D002               	goto	u11528
 11701  0141FE                     u11520:
 11702  0141FE  0100               	movlb	0	; () banked
 11703  014200  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 11704  014202                     u11528:
 11705  014202  A8C5               	btfss	4037,4,c	;volatile
 11706  014204  D002               	goto	u11530
 11707  014206  0E01               	movlw	1
 11708  014208  D001               	goto	u11536
 11709  01420A                     u11530:
 11710  01420A  0E00               	movlw	0
 11711  01420C                     u11536:
 11712  01420C  1164               	iorwf	(??__i2c_wait_idle+4)& (0+255),w,b
 11713  01420E  1163               	iorwf	(??__i2c_wait_idle+3)& (0+255),w,b
 11714  014210  1162               	iorwf	(??__i2c_wait_idle+2)& (0+255),w,b
 11715  014212  1161               	iorwf	(??__i2c_wait_idle+1)& (0+255),w,b
 11716  014214  1160               	iorwf	??__i2c_wait_idle& (0+255),w,b
 11717  014216  0900               	iorlw	0
 11718  014218  B4D8               	btfsc	status,2,c
 11719  01421A  0012               	return	
 11720  01421C  D7CE               	goto	__i2c_wait_idle
 11721  01421E                     __end_of__i2c_wait_idle:
 11722                           	opt stack 0
 11723                           tblptru	equ	0xFF8
 11724                           tblptrh	equ	0xFF7
 11725                           tblptrl	equ	0xFF6
 11726                           tablat	equ	0xFF5
 11727                           prodh	equ	0xFF4
 11728                           prodl	equ	0xFF3
 11729                           postinc0	equ	0xFEE
 11730                           wreg	equ	0xFE8
 11731                           postdec1	equ	0xFE5
 11732                           plusw1	equ	0xFE3
 11733                           fsr1h	equ	0xFE2
 11734                           fsr1l	equ	0xFE1
 11735                           indf2	equ	0xFDF
 11736                           postinc2	equ	0xFDE
 11737                           plusw2	equ	0xFDB
 11738                           fsr2h	equ	0xFDA
 11739                           fsr2l	equ	0xFD9
 11740                           status	equ	0xFD8
 11741                           
 11742 ;; *************** function __i2c_stop *****************
 11743 ;; Defined at:
 11744 ;;		line 63 in file "i2c.c"
 11745 ;; Parameters:    Size  Location     Type
 11746 ;;		None
 11747 ;; Auto vars:     Size  Location     Type
 11748 ;;		None
 11749 ;; Return value:  Size  Location     Type
 11750 ;;                  1    wreg      void 
 11751 ;; Registers used:
 11752 ;;		None
 11753 ;; Tracked objects:
 11754 ;;		On entry : 0/0
 11755 ;;		On exit  : 0/0
 11756 ;;		Unchanged: 0/0
 11757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11762 ;;Total ram usage:        0 bytes
 11763 ;; Hardware stack levels used:    1
 11764 ;; Hardware stack levels required when called:   10
 11765 ;; This function calls:
 11766 ;;		Nothing
 11767 ;; This function is called by:
 11768 ;;		__i2c_write
 11769 ;;		__i2c_read
 11770 ;;		__i2c_eeprom_busy
 11771 ;;		_i2c_display_write_fixed
 11772 ;;		_i2c_adc_read
 11773 ;;		_i2c_display_write
 11774 ;; This function uses a non-reentrant model
 11775 ;;
 11776                           
 11777                           	psect	text34
 11778  01599A                     __ptext34:
 11779                           	opt stack 0
 11780  01599A                     __i2c_stop:
 11781                           	opt stack 16
 11782                           
 11783                           ;i2c.c: 65: SSP1CON2bits.PEN = 1;
 11784                           
 11785                           ; BSR set to: 0
 11786                           ;incstack = 0
 11787  01599A  84C5               	bsf	4037,2,c	;volatile
 11788  01599C  A4C5               	btfss	4037,2,c	;volatile
 11789  01599E  0012               	return	
 11790  0159A0  D7FD               	goto	l1141
 11791  0159A2                     __end_of__i2c_stop:
 11792                           	opt stack 0
 11793                           tblptru	equ	0xFF8
 11794                           tblptrh	equ	0xFF7
 11795                           tblptrl	equ	0xFF6
 11796                           tablat	equ	0xFF5
 11797                           prodh	equ	0xFF4
 11798                           prodl	equ	0xFF3
 11799                           postinc0	equ	0xFEE
 11800                           wreg	equ	0xFE8
 11801                           postdec1	equ	0xFE5
 11802                           plusw1	equ	0xFE3
 11803                           fsr1h	equ	0xFE2
 11804                           fsr1l	equ	0xFE1
 11805                           indf2	equ	0xFDF
 11806                           postinc2	equ	0xFDE
 11807                           plusw2	equ	0xFDB
 11808                           fsr2h	equ	0xFDA
 11809                           fsr2l	equ	0xFD9
 11810                           status	equ	0xFD8
 11811                           
 11812 ;; *************** function __i2c_start *****************
 11813 ;; Defined at:
 11814 ;;		line 45 in file "i2c.c"
 11815 ;; Parameters:    Size  Location     Type
 11816 ;;		None
 11817 ;; Auto vars:     Size  Location     Type
 11818 ;;		None
 11819 ;; Return value:  Size  Location     Type
 11820 ;;                  1    wreg      void 
 11821 ;; Registers used:
 11822 ;;		None
 11823 ;; Tracked objects:
 11824 ;;		On entry : 0/0
 11825 ;;		On exit  : 0/0
 11826 ;;		Unchanged: 0/0
 11827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11832 ;;Total ram usage:        0 bytes
 11833 ;; Hardware stack levels used:    1
 11834 ;; Hardware stack levels required when called:   10
 11835 ;; This function calls:
 11836 ;;		Nothing
 11837 ;; This function is called by:
 11838 ;;		__i2c_write
 11839 ;;		__i2c_read
 11840 ;;		__i2c_eeprom_busy
 11841 ;;		_i2c_display_write_fixed
 11842 ;;		_i2c_adc_read
 11843 ;;		_i2c_display_write
 11844 ;; This function uses a non-reentrant model
 11845 ;;
 11846                           
 11847                           	psect	text35
 11848  0159A2                     __ptext35:
 11849                           	opt stack 0
 11850  0159A2                     __i2c_start:
 11851                           	opt stack 16
 11852                           
 11853                           ;i2c.c: 47: SSP1CON2bits.SEN=1;
 11854                           
 11855                           ;incstack = 0
 11856  0159A2  80C5               	bsf	4037,0,c	;volatile
 11857  0159A4  A0C5               	btfss	4037,0,c	;volatile
 11858  0159A6  0012               	return	
 11859  0159A8  D7FD               	goto	l1126
 11860  0159AA                     __end_of__i2c_start:
 11861                           	opt stack 0
 11862                           tblptru	equ	0xFF8
 11863                           tblptrh	equ	0xFF7
 11864                           tblptrl	equ	0xFF6
 11865                           tablat	equ	0xFF5
 11866                           prodh	equ	0xFF4
 11867                           prodl	equ	0xFF3
 11868                           postinc0	equ	0xFEE
 11869                           wreg	equ	0xFE8
 11870                           postdec1	equ	0xFE5
 11871                           plusw1	equ	0xFE3
 11872                           fsr1h	equ	0xFE2
 11873                           fsr1l	equ	0xFE1
 11874                           indf2	equ	0xFDF
 11875                           postinc2	equ	0xFDE
 11876                           plusw2	equ	0xFDB
 11877                           fsr2h	equ	0xFDA
 11878                           fsr2l	equ	0xFD9
 11879                           status	equ	0xFD8
 11880                           
 11881 ;; *************** function __i2c_send *****************
 11882 ;; Defined at:
 11883 ;;		line 51 in file "i2c.c"
 11884 ;; Parameters:    Size  Location     Type
 11885 ;;  dat             1    wreg     unsigned char 
 11886 ;; Auto vars:     Size  Location     Type
 11887 ;;  dat             1    0[BANK0 ] unsigned char 
 11888 ;; Return value:  Size  Location     Type
 11889 ;;                  1    wreg      void 
 11890 ;; Registers used:
 11891 ;;		wreg
 11892 ;; Tracked objects:
 11893 ;;		On entry : 0/0
 11894 ;;		On exit  : 0/0
 11895 ;;		Unchanged: 0/0
 11896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11898 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11900 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11901 ;;Total ram usage:        1 bytes
 11902 ;; Hardware stack levels used:    1
 11903 ;; Hardware stack levels required when called:   10
 11904 ;; This function calls:
 11905 ;;		Nothing
 11906 ;; This function is called by:
 11907 ;;		__i2c_write
 11908 ;;		__i2c_read
 11909 ;;		__i2c_eeprom_busy
 11910 ;;		_i2c_display_write_fixed
 11911 ;;		_i2c_adc_read
 11912 ;;		_i2c_display_write
 11913 ;; This function uses a non-reentrant model
 11914 ;;
 11915                           
 11916                           	psect	text36
 11917  01597C                     __ptext36:
 11918                           	opt stack 0
 11919  01597C                     __i2c_send:
 11920                           	opt stack 16
 11921                           
 11922                           ;incstack = 0
 11923                           ;__i2c_send@dat stored from wreg
 11924  01597C  0100               	movlb	0	; () banked
 11925  01597E  6F60               	movwf	__i2c_send@dat& (0+255),b
 11926                           
 11927                           ;i2c.c: 53: SSP1BUF = dat;
 11928  015980  C060  FFC9         	movff	__i2c_send@dat,4041	;volatile
 11929  015984  0012               	return		;funcret
 11930  015986                     __end_of__i2c_send:
 11931                           	opt stack 0
 11932                           tblptru	equ	0xFF8
 11933                           tblptrh	equ	0xFF7
 11934                           tblptrl	equ	0xFF6
 11935                           tablat	equ	0xFF5
 11936                           prodh	equ	0xFF4
 11937                           prodl	equ	0xFF3
 11938                           postinc0	equ	0xFEE
 11939                           wreg	equ	0xFE8
 11940                           postdec1	equ	0xFE5
 11941                           plusw1	equ	0xFE3
 11942                           fsr1h	equ	0xFE2
 11943                           fsr1l	equ	0xFE1
 11944                           indf2	equ	0xFDF
 11945                           postinc2	equ	0xFDE
 11946                           plusw2	equ	0xFDB
 11947                           fsr2h	equ	0xFDA
 11948                           fsr2l	equ	0xFD9
 11949                           status	equ	0xFD8
 11950                           
 11951 ;; *************** function __display_start *****************
 11952 ;; Defined at:
 11953 ;;		line 266 in file "display.c"
 11954 ;; Parameters:    Size  Location     Type
 11955 ;;		None
 11956 ;; Auto vars:     Size  Location     Type
 11957 ;;  cntr            1   28[BANK0 ] unsigned char 
 11958 ;; Return value:  Size  Location     Type
 11959 ;;                  1    wreg      void 
 11960 ;; Registers used:
 11961 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11962 ;; Tracked objects:
 11963 ;;		On entry : 0/0
 11964 ;;		On exit  : 0/0
 11965 ;;		Unchanged: 0/0
 11966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11968 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11970 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11971 ;;Total ram usage:        1 bytes
 11972 ;; Hardware stack levels used:    1
 11973 ;; Hardware stack levels required when called:   14
 11974 ;; This function calls:
 11975 ;;		__display_itoa_u16
 11976 ;;		_memcpy
 11977 ;; This function is called by:
 11978 ;;		_display_init
 11979 ;; This function uses a non-reentrant model
 11980 ;;
 11981                           
 11982                           	psect	text37
 11983  012D04                     __ptext37:
 11984                           	opt stack 0
 11985  012D04                     __display_start:
 11986                           	opt stack 14
 11987                           
 11988                           ;display.c: 268: uint8_t cntr;;display.c: 269: memcpy(display_content, dc_startup, sizeo
      +                          f display_content);
 11989                           
 11990                           ;incstack = 0
 11991  012D04  0E34               	movlw	low _display_content
 11992  012D06  0100               	movlb	0	; () banked
 11993  012D08  6F60               	movwf	memcpy@d1& (0+255),b
 11994  012D0A  0E02               	movlw	high _display_content
 11995  012D0C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 11996  012D0E  0E00               	movlw	low _dc_startup
 11997  012D10  6F62               	movwf	memcpy@s1& (0+255),b
 11998  012D12  0E04               	movlw	high _dc_startup
 11999  012D14  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 12000  012D16  0E00               	movlw	0
 12001  012D18  6F65               	movwf	(memcpy@n+1)& (0+255),b
 12002  012D1A  0E50               	movlw	80
 12003  012D1C  6F64               	movwf	memcpy@n& (0+255),b
 12004  012D1E  EC05  F0A2         	call	_memcpy	;wreg free
 12005                           
 12006                           ;display.c: 270: cntr = 6;
 12007  012D22  0E06               	movlw	6
 12008  012D24  0100               	movlb	0	; () banked
 12009  012D26  6F7C               	movwf	__display_start@cntr& (0+255),b
 12010                           
 12011                           ; BSR set to: 0
 12012                           ;display.c: 271: cntr += _display_itoa_u16(0x00, &display_content[2][cntr]);
 12013  012D28  0E00               	movlw	0
 12014  012D2A  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 12015  012D2C  0E00               	movlw	0
 12016  012D2E  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 12017  012D30  517C               	movf	__display_start@cntr& (0+255),w,b
 12018  012D32  0D01               	mullw	1
 12019  012D34  0E5C               	movlw	low (_display_content+40)
 12020  012D36  24F3               	addwf	prodl,w,c
 12021  012D38  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 12022  012D3A  0E02               	movlw	high (_display_content+40)
 12023  012D3C  20F4               	addwfc	prodh,w,c
 12024  012D3E  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 12025  012D40  EC28  F096         	call	__display_itoa_u16	;wreg free
 12026  012D44  0100               	movlb	0	; () banked
 12027  012D46  277C               	addwf	__display_start@cntr& (0+255),f,b
 12028                           
 12029                           ; BSR set to: 0
 12030                           ;display.c: 272: display_content[2][cntr++] = '.';
 12031  012D48  517C               	movf	__display_start@cntr& (0+255),w,b
 12032  012D4A  0D01               	mullw	1
 12033  012D4C  0E5C               	movlw	low (_display_content+40)
 12034  012D4E  24F3               	addwf	prodl,w,c
 12035  012D50  6ED9               	movwf	fsr2l,c
 12036  012D52  0E02               	movlw	high (_display_content+40)
 12037  012D54  20F4               	addwfc	prodh,w,c
 12038  012D56  6EDA               	movwf	fsr2h,c
 12039  012D58  0E2E               	movlw	46
 12040  012D5A  6EDF               	movwf	indf2,c
 12041                           
 12042                           ; BSR set to: 0
 12043  012D5C  2B7C               	incf	__display_start@cntr& (0+255),f,b
 12044                           
 12045                           ; BSR set to: 0
 12046                           ;display.c: 273: cntr += _display_itoa_u16(0x05, &display_content[2][cntr]);
 12047  012D5E  0E00               	movlw	0
 12048  012D60  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 12049  012D62  0E05               	movlw	5
 12050  012D64  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 12051  012D66  517C               	movf	__display_start@cntr& (0+255),w,b
 12052  012D68  0D01               	mullw	1
 12053  012D6A  0E5C               	movlw	low (_display_content+40)
 12054  012D6C  24F3               	addwf	prodl,w,c
 12055  012D6E  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 12056  012D70  0E02               	movlw	high (_display_content+40)
 12057  012D72  20F4               	addwfc	prodh,w,c
 12058  012D74  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 12059  012D76  EC28  F096         	call	__display_itoa_u16	;wreg free
 12060  012D7A  0100               	movlb	0	; () banked
 12061  012D7C  277C               	addwf	__display_start@cntr& (0+255),f,b
 12062                           
 12063                           ; BSR set to: 0
 12064                           ;display.c: 274: display_content[2][cntr++] = '.';
 12065  012D7E  517C               	movf	__display_start@cntr& (0+255),w,b
 12066  012D80  0D01               	mullw	1
 12067  012D82  0E5C               	movlw	low (_display_content+40)
 12068  012D84  24F3               	addwf	prodl,w,c
 12069  012D86  6ED9               	movwf	fsr2l,c
 12070  012D88  0E02               	movlw	high (_display_content+40)
 12071  012D8A  20F4               	addwfc	prodh,w,c
 12072  012D8C  6EDA               	movwf	fsr2h,c
 12073  012D8E  0E2E               	movlw	46
 12074  012D90  6EDF               	movwf	indf2,c
 12075                           
 12076                           ; BSR set to: 0
 12077  012D92  2B7C               	incf	__display_start@cntr& (0+255),f,b
 12078                           
 12079                           ; BSR set to: 0
 12080                           ;display.c: 275: cntr += _display_itoa_u16(0x04, &display_content[2][cntr]);
 12081  012D94  0E00               	movlw	0
 12082  012D96  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 12083  012D98  0E04               	movlw	4
 12084  012D9A  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 12085  012D9C  517C               	movf	__display_start@cntr& (0+255),w,b
 12086  012D9E  0D01               	mullw	1
 12087  012DA0  0E5C               	movlw	low (_display_content+40)
 12088  012DA2  24F3               	addwf	prodl,w,c
 12089  012DA4  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 12090  012DA6  0E02               	movlw	high (_display_content+40)
 12091  012DA8  20F4               	addwfc	prodh,w,c
 12092  012DAA  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 12093  012DAC  EC28  F096         	call	__display_itoa_u16	;wreg free
 12094  012DB0  0100               	movlb	0	; () banked
 12095  012DB2  277C               	addwf	__display_start@cntr& (0+255),f,b
 12096                           
 12097                           ; BSR set to: 0
 12098  012DB4  0012               	return		;funcret
 12099  012DB6                     __end_of__display_start:
 12100                           	opt stack 0
 12101                           tblptru	equ	0xFF8
 12102                           tblptrh	equ	0xFF7
 12103                           tblptrl	equ	0xFF6
 12104                           tablat	equ	0xFF5
 12105                           prodh	equ	0xFF4
 12106                           prodl	equ	0xFF3
 12107                           postinc0	equ	0xFEE
 12108                           wreg	equ	0xFE8
 12109                           postdec1	equ	0xFE5
 12110                           plusw1	equ	0xFE3
 12111                           fsr1h	equ	0xFE2
 12112                           fsr1l	equ	0xFE1
 12113                           indf2	equ	0xFDF
 12114                           postinc2	equ	0xFDE
 12115                           plusw2	equ	0xFDB
 12116                           fsr2h	equ	0xFDA
 12117                           fsr2l	equ	0xFD9
 12118                           status	equ	0xFD8
 12119                           
 12120 ;; *************** function __display_itoa_u16 *****************
 12121 ;; Defined at:
 12122 ;;		line 226 in file "display.c"
 12123 ;; Parameters:    Size  Location     Type
 12124 ;;  value           2   24[BANK0 ] unsigned int 
 12125 ;;  text            2   26[BANK0 ] PTR unsigned char 
 12126 ;;		 -> display_content(80), 
 12127 ;; Auto vars:     Size  Location     Type
 12128 ;;		None
 12129 ;; Return value:  Size  Location     Type
 12130 ;;                  1    wreg      unsigned char 
 12131 ;; Registers used:
 12132 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12133 ;; Tracked objects:
 12134 ;;		On entry : 0/0
 12135 ;;		On exit  : 0/0
 12136 ;;		Unchanged: 0/0
 12137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12138 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12141 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12142 ;;Total ram usage:        4 bytes
 12143 ;; Hardware stack levels used:    1
 12144 ;; Hardware stack levels required when called:   13
 12145 ;; This function calls:
 12146 ;;		_itoa
 12147 ;; This function is called by:
 12148 ;;		__display_start
 12149 ;; This function uses a non-reentrant model
 12150 ;;
 12151                           
 12152                           	psect	text38
 12153  012C50                     __ptext38:
 12154                           	opt stack 0
 12155  012C50                     __display_itoa_u16:
 12156                           	opt stack 14
 12157                           
 12158                           ;display.c: 228: itoa(text, value, 10);
 12159                           
 12160                           ; BSR set to: 0
 12161                           ;incstack = 0
 12162  012C50  C07A  F070         	movff	__display_itoa_u16@text,itoa@buf
 12163  012C54  C07B  F071         	movff	__display_itoa_u16@text+1,itoa@buf+1
 12164  012C58  C078  F072         	movff	__display_itoa_u16@value,itoa@val
 12165  012C5C  C079  F073         	movff	__display_itoa_u16@value+1,itoa@val+1
 12166  012C60  0E00               	movlw	0
 12167  012C62  0100               	movlb	0	; () banked
 12168  012C64  6F75               	movwf	(itoa@base+1)& (0+255),b
 12169  012C66  0E0A               	movlw	10
 12170  012C68  6F74               	movwf	itoa@base& (0+255),b
 12171  012C6A  ECBF  F0A7         	call	_itoa	;wreg free
 12172                           
 12173                           ;display.c: 229: if(value>9999)
 12174  012C6E  0E10               	movlw	16
 12175  012C70  0100               	movlb	0	; () banked
 12176  012C72  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 12177  012C74  0E27               	movlw	39
 12178  012C76  5979               	subwfb	(__display_itoa_u16@value+1)& (0+255),w,b
 12179  012C78  A0D8               	btfss	status,0,c
 12180  012C7A  D00A               	goto	l1359
 12181                           
 12182                           ; BSR set to: 0
 12183                           ;display.c: 230: {;display.c: 231: *(text+5) = ' ';
 12184  012C7C  EE20 F005          	lfsr	2,5
 12185  012C80  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 12186  012C82  26D9               	addwf	fsr2l,f,c
 12187  012C84  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 12188  012C86  22DA               	addwfc	fsr2h,f,c
 12189  012C88  0E20               	movlw	32
 12190  012C8A  6EDF               	movwf	indf2,c
 12191                           
 12192                           ; BSR set to: 0
 12193                           ;display.c: 232: return 5;
 12194  012C8C  0E05               	movlw	5
 12195                           
 12196                           ; BSR set to: 0
 12197                           ;display.c: 233: }
 12198                           
 12199                           ; BSR set to: 0
 12200  012C8E  0012               	return	
 12201  012C90                     l1359:
 12202                           
 12203                           ; BSR set to: 0
 12204                           ;display.c: 234: else if (value>999)
 12205                           
 12206                           ; BSR set to: 0
 12207  012C90  0EE8               	movlw	232
 12208  012C92  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 12209  012C94  0E03               	movlw	3
 12210  012C96  5979               	subwfb	(__display_itoa_u16@value+1)& (0+255),w,b
 12211  012C98  A0D8               	btfss	status,0,c
 12212  012C9A  D00A               	goto	l1362
 12213                           
 12214                           ; BSR set to: 0
 12215                           ;display.c: 235: {;display.c: 236: *(text+4) = ' ';
 12216  012C9C  EE20 F004          	lfsr	2,4
 12217  012CA0  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 12218  012CA2  26D9               	addwf	fsr2l,f,c
 12219  012CA4  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 12220  012CA6  22DA               	addwfc	fsr2h,f,c
 12221  012CA8  0E20               	movlw	32
 12222  012CAA  6EDF               	movwf	indf2,c
 12223                           
 12224                           ; BSR set to: 0
 12225                           ;display.c: 237: return 4;
 12226  012CAC  0E04               	movlw	4
 12227                           
 12228                           ; BSR set to: 0
 12229                           ;display.c: 238: }
 12230                           
 12231                           ; BSR set to: 0
 12232  012CAE  0012               	return	
 12233  012CB0                     l1362:
 12234                           
 12235                           ; BSR set to: 0
 12236                           ;display.c: 239: else if (value>99)
 12237                           
 12238                           ; BSR set to: 0
 12239  012CB0  5179               	movf	(__display_itoa_u16@value+1)& (0+255),w,b
 12240  012CB2  E104               	bnz	u13130
 12241  012CB4  0E64               	movlw	100
 12242  012CB6  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 12243  012CB8  A0D8               	btfss	status,0,c
 12244  012CBA  D00A               	goto	l1364
 12245  012CBC                     u13130:
 12246                           
 12247                           ; BSR set to: 0
 12248                           ;display.c: 240: {;display.c: 241: *(text+3) = ' ';
 12249  012CBC  EE20 F003          	lfsr	2,3
 12250  012CC0  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 12251  012CC2  26D9               	addwf	fsr2l,f,c
 12252  012CC4  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 12253  012CC6  22DA               	addwfc	fsr2h,f,c
 12254  012CC8  0E20               	movlw	32
 12255  012CCA  6EDF               	movwf	indf2,c
 12256                           
 12257                           ; BSR set to: 0
 12258                           ;display.c: 242: return 3;
 12259  012CCC  0E03               	movlw	3
 12260                           
 12261                           ; BSR set to: 0
 12262                           ;display.c: 243: }
 12263                           
 12264                           ; BSR set to: 0
 12265  012CCE  0012               	return	
 12266  012CD0                     l1364:
 12267                           
 12268                           ; BSR set to: 0
 12269                           ;display.c: 244: else if (value>9)
 12270                           
 12271                           ; BSR set to: 0
 12272  012CD0  5179               	movf	(__display_itoa_u16@value+1)& (0+255),w,b
 12273  012CD2  E104               	bnz	u13140
 12274  012CD4  0E0A               	movlw	10
 12275  012CD6  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 12276  012CD8  A0D8               	btfss	status,0,c
 12277  012CDA  D00A               	goto	l1366
 12278  012CDC                     u13140:
 12279                           
 12280                           ; BSR set to: 0
 12281                           ;display.c: 245: {;display.c: 246: *(text+2) = ' ';
 12282  012CDC  EE20 F002          	lfsr	2,2
 12283  012CE0  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 12284  012CE2  26D9               	addwf	fsr2l,f,c
 12285  012CE4  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 12286  012CE6  22DA               	addwfc	fsr2h,f,c
 12287  012CE8  0E20               	movlw	32
 12288  012CEA  6EDF               	movwf	indf2,c
 12289                           
 12290                           ; BSR set to: 0
 12291                           ;display.c: 247: return 2;
 12292  012CEC  0E02               	movlw	2
 12293                           
 12294                           ; BSR set to: 0
 12295                           ;display.c: 248: }
 12296                           
 12297                           ; BSR set to: 0
 12298  012CEE  0012               	return	
 12299  012CF0                     l1366:
 12300                           
 12301                           ; BSR set to: 0
 12302                           ;display.c: 249: else;display.c: 250: {;display.c: 251: *(text+1) = ' ';
 12303                           
 12304                           ; BSR set to: 0
 12305  012CF0  EE20 F001          	lfsr	2,1
 12306  012CF4  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 12307  012CF6  26D9               	addwf	fsr2l,f,c
 12308  012CF8  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 12309  012CFA  22DA               	addwfc	fsr2h,f,c
 12310  012CFC  0E20               	movlw	32
 12311  012CFE  6EDF               	movwf	indf2,c
 12312                           
 12313                           ; BSR set to: 0
 12314                           ;display.c: 252: return 1;
 12315  012D00  0E01               	movlw	1
 12316                           
 12317                           ; BSR set to: 0
 12318                           
 12319                           ; BSR set to: 0
 12320                           
 12321                           ; BSR set to: 0
 12322                           
 12323                           ; BSR set to: 0
 12324  012D02  0012               	return	
 12325  012D04                     __end_of__display_itoa_u16:
 12326                           	opt stack 0
 12327                           tblptru	equ	0xFF8
 12328                           tblptrh	equ	0xFF7
 12329                           tblptrl	equ	0xFF6
 12330                           tablat	equ	0xFF5
 12331                           prodh	equ	0xFF4
 12332                           prodl	equ	0xFF3
 12333                           postinc0	equ	0xFEE
 12334                           wreg	equ	0xFE8
 12335                           postdec1	equ	0xFE5
 12336                           plusw1	equ	0xFE3
 12337                           fsr1h	equ	0xFE2
 12338                           fsr1l	equ	0xFE1
 12339                           indf2	equ	0xFDF
 12340                           postinc2	equ	0xFDE
 12341                           plusw2	equ	0xFDB
 12342                           fsr2h	equ	0xFDA
 12343                           fsr2l	equ	0xFD9
 12344                           status	equ	0xFD8
 12345                           
 12346 ;; *************** function _configFile_write *****************
 12347 ;; Defined at:
 12348 ;;		line 270 in file "config_file.c"
 12349 ;; Parameters:    Size  Location     Type
 12350 ;;		None
 12351 ;; Auto vars:     Size  Location     Type
 12352 ;;  file_size       4  133[BANK0 ] unsigned long 
 12353 ;;  file_number     1  132[BANK0 ] unsigned char 
 12354 ;; Return value:  Size  Location     Type
 12355 ;;                  1    wreg      void 
 12356 ;; Registers used:
 12357 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12358 ;; Tracked objects:
 12359 ;;		On entry : 0/0
 12360 ;;		On exit  : 0/0
 12361 ;;		Unchanged: 0/0
 12362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12364 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12365 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12366 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12367 ;;Total ram usage:        6 bytes
 12368 ;; Hardware stack levels used:    1
 12369 ;; Hardware stack levels required when called:   18
 12370 ;; This function calls:
 12371 ;;		__add_item
 12372 ;;		_fat_create_file
 12373 ;;		_fat_find_file
 12374 ;;		_fat_modify_file
 12375 ;;		_fat_resize_file
 12376 ;; This function is called by:
 12377 ;;		_system_init
 12378 ;; This function uses a non-reentrant model
 12379 ;;
 12380                           
 12381                           	psect	text39
 12382  00C194                     __ptext39:
 12383                           	opt stack 0
 12384  00C194                     _configFile_write:
 12385                           	opt stack 11
 12386                           
 12387                           ;config_file.c: 272: uint8_t file_number;;config_file.c: 273: uint32_t file_size;;config
      +                          _file.c: 275: file_size = 0;
 12388                           
 12389                           ; BSR set to: 0
 12390                           ;incstack = 0
 12391  00C194  0E00               	movlw	0
 12392  00C196  0100               	movlb	0	; () banked
 12393  00C198  6FE5               	movwf	configFile_write@file_size& (0+255),b
 12394  00C19A  0E00               	movlw	0
 12395  00C19C  6FE6               	movwf	(configFile_write@file_size+1)& (0+255),b
 12396  00C19E  0E00               	movlw	0
 12397  00C1A0  6FE7               	movwf	(configFile_write@file_size+2)& (0+255),b
 12398  00C1A2  0E00               	movlw	0
 12399  00C1A4  6FE8               	movwf	(configFile_write@file_size+3)& (0+255),b
 12400                           
 12401                           ; BSR set to: 0
 12402                           ;config_file.c: 276: file_size += _add_item(&full_circle_in_steps_string, (int32_t) conf
      +                          ig.full_circle_in_steps, &ConfigFile_buffer[file_size]);
 12403  00C1A6  0EFD               	movlw	low _full_circle_in_steps_string
 12404  00C1A8  6F84               	movwf	__add_item@item_string& (0+255),b
 12405  00C1AA  0EA1               	movlw	high _full_circle_in_steps_string
 12406  00C1AC  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12407  00C1AE  C1A1  F086         	movff	_config,__add_item@value
 12408  00C1B2  C1A2  F087         	movff	_config+1,__add_item@value+1
 12409  00C1B6  C1A3  F088         	movff	_config+2,__add_item@value+2
 12410  00C1BA  C1A4  F089         	movff	_config+3,__add_item@value+3
 12411  00C1BE  0E00               	movlw	low _ConfigFile_buffer
 12412  00C1C0  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12413  00C1C2  6F8A               	movwf	__add_item@buffer& (0+255),b
 12414  00C1C4  0E08               	movlw	high _ConfigFile_buffer
 12415  00C1C6  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12416  00C1C8  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12417  00C1CA  EC0A  F08B         	call	__add_item	;wreg free
 12418  00C1CE  0100               	movlb	0	; () banked
 12419  00C1D0  6FE3               	movwf	??_configFile_write& (0+255),b
 12420  00C1D2  51E3               	movf	??_configFile_write& (0+255),w,b
 12421  00C1D4  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12422  00C1D6  0E00               	movlw	0
 12423  00C1D8  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12424  00C1DA  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12425  00C1DC  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12426                           
 12427                           ; BSR set to: 0
 12428                           ;config_file.c: 277: file_size += _add_item(&inverse_direction_string, (int32_t) config.
      +                          inverse_direction, &ConfigFile_buffer[file_size]);
 12429  00C1DE  0E49               	movlw	low _inverse_direction_string
 12430  00C1E0  6F84               	movwf	__add_item@item_string& (0+255),b
 12431  00C1E2  0EA2               	movlw	high _inverse_direction_string
 12432  00C1E4  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12433  00C1E6  0101               	movlb	1	; () banked
 12434  00C1E8  51A5               	movf	(_config+4)& (0+255),w,b
 12435  00C1EA  0100               	movlb	0	; () banked
 12436  00C1EC  6F86               	movwf	__add_item@value& (0+255),b
 12437  00C1EE  6B87               	clrf	(__add_item@value+1)& (0+255),b
 12438  00C1F0  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12439  00C1F2  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12440  00C1F4  0E00               	movlw	low _ConfigFile_buffer
 12441  00C1F6  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12442  00C1F8  6F8A               	movwf	__add_item@buffer& (0+255),b
 12443  00C1FA  0E08               	movlw	high _ConfigFile_buffer
 12444  00C1FC  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12445  00C1FE  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12446  00C200  EC0A  F08B         	call	__add_item	;wreg free
 12447  00C204  0100               	movlb	0	; () banked
 12448  00C206  6FE3               	movwf	??_configFile_write& (0+255),b
 12449  00C208  51E3               	movf	??_configFile_write& (0+255),w,b
 12450  00C20A  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12451  00C20C  0E00               	movlw	0
 12452  00C20E  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12453  00C210  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12454  00C212  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12455                           
 12456                           ; BSR set to: 0
 12457                           ;config_file.c: 278: file_size += _add_item(&overshoot_in_steps_string, (int32_t) config
      +                          .overshoot_in_steps, &ConfigFile_buffer[file_size]);
 12458  00C214  0E12               	movlw	low _overshoot_in_steps_string
 12459  00C216  6F84               	movwf	__add_item@item_string& (0+255),b
 12460  00C218  0EA2               	movlw	high _overshoot_in_steps_string
 12461  00C21A  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12462  00C21C  C1A6  F086         	movff	_config+5,__add_item@value
 12463  00C220  C1A7  F087         	movff	_config+6,__add_item@value+1
 12464  00C224  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12465  00C226  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12466  00C228  0E00               	movlw	low _ConfigFile_buffer
 12467  00C22A  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12468  00C22C  6F8A               	movwf	__add_item@buffer& (0+255),b
 12469  00C22E  0E08               	movlw	high _ConfigFile_buffer
 12470  00C230  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12471  00C232  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12472  00C234  EC0A  F08B         	call	__add_item	;wreg free
 12473  00C238  0100               	movlb	0	; () banked
 12474  00C23A  6FE3               	movwf	??_configFile_write& (0+255),b
 12475  00C23C  51E3               	movf	??_configFile_write& (0+255),w,b
 12476  00C23E  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12477  00C240  0E00               	movlw	0
 12478  00C242  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12479  00C244  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12480  00C246  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12481                           
 12482                           ; BSR set to: 0
 12483                           ;config_file.c: 279: file_size += _add_item(&overshoot_cost_in_steps_string, (int32_t) c
      +                          onfig.overshoot_cost_in_steps, &ConfigFile_buffer[file_size]);
 12484  00C248  0EBB               	movlw	low _overshoot_cost_in_steps_string
 12485  00C24A  6F84               	movwf	__add_item@item_string& (0+255),b
 12486  00C24C  0EA1               	movlw	high _overshoot_cost_in_steps_string
 12487  00C24E  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12488  00C250  C1A8  F086         	movff	_config+7,__add_item@value
 12489  00C254  C1A9  F087         	movff	_config+8,__add_item@value+1
 12490  00C258  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12491  00C25A  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12492  00C25C  0E00               	movlw	low _ConfigFile_buffer
 12493  00C25E  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12494  00C260  6F8A               	movwf	__add_item@buffer& (0+255),b
 12495  00C262  0E08               	movlw	high _ConfigFile_buffer
 12496  00C264  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12497  00C266  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12498  00C268  EC0A  F08B         	call	__add_item	;wreg free
 12499  00C26C  0100               	movlb	0	; () banked
 12500  00C26E  6FE3               	movwf	??_configFile_write& (0+255),b
 12501  00C270  51E3               	movf	??_configFile_write& (0+255),w,b
 12502  00C272  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12503  00C274  0E00               	movlw	0
 12504  00C276  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12505  00C278  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12506  00C27A  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12507                           
 12508                           ; BSR set to: 0
 12509                           ;config_file.c: 280: file_size += _add_item(&minimum_speed_string, (int32_t) config.mini
      +                          mum_speed, &ConfigFile_buffer[file_size]);
 12510  00C27C  0E97               	movlw	low _minimum_speed_string
 12511  00C27E  6F84               	movwf	__add_item@item_string& (0+255),b
 12512  00C280  0EA2               	movlw	high _minimum_speed_string
 12513  00C282  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12514  00C284  C1AA  F086         	movff	_config+9,__add_item@value
 12515  00C288  C1AB  F087         	movff	_config+10,__add_item@value+1
 12516  00C28C  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12517  00C28E  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12518  00C290  0E00               	movlw	low _ConfigFile_buffer
 12519  00C292  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12520  00C294  6F8A               	movwf	__add_item@buffer& (0+255),b
 12521  00C296  0E08               	movlw	high _ConfigFile_buffer
 12522  00C298  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12523  00C29A  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12524  00C29C  EC0A  F08B         	call	__add_item	;wreg free
 12525  00C2A0  0100               	movlb	0	; () banked
 12526  00C2A2  6FE3               	movwf	??_configFile_write& (0+255),b
 12527  00C2A4  51E3               	movf	??_configFile_write& (0+255),w,b
 12528  00C2A6  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12529  00C2A8  0E00               	movlw	0
 12530  00C2AA  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12531  00C2AC  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12532  00C2AE  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12533                           
 12534                           ; BSR set to: 0
 12535                           ;config_file.c: 281: file_size += _add_item(&maximum_speed_string, (int32_t) config.maxi
      +                          mum_speed, &ConfigFile_buffer[file_size]);
 12536  00C2B0  0E89               	movlw	low _maximum_speed_string
 12537  00C2B2  6F84               	movwf	__add_item@item_string& (0+255),b
 12538  00C2B4  0EA2               	movlw	high _maximum_speed_string
 12539  00C2B6  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12540  00C2B8  C1AC  F086         	movff	_config+11,__add_item@value
 12541  00C2BC  C1AD  F087         	movff	_config+12,__add_item@value+1
 12542  00C2C0  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12543  00C2C2  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12544  00C2C4  0E00               	movlw	low _ConfigFile_buffer
 12545  00C2C6  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12546  00C2C8  6F8A               	movwf	__add_item@buffer& (0+255),b
 12547  00C2CA  0E08               	movlw	high _ConfigFile_buffer
 12548  00C2CC  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12549  00C2CE  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12550  00C2D0  EC0A  F08B         	call	__add_item	;wreg free
 12551  00C2D4  0100               	movlb	0	; () banked
 12552  00C2D6  6FE3               	movwf	??_configFile_write& (0+255),b
 12553  00C2D8  51E3               	movf	??_configFile_write& (0+255),w,b
 12554  00C2DA  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12555  00C2DC  0E00               	movlw	0
 12556  00C2DE  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12557  00C2E0  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12558  00C2E2  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12559                           
 12560                           ; BSR set to: 0
 12561                           ;config_file.c: 282: file_size += _add_item(&initial_speed_arc_string, (int32_t) config.
      +                          initial_speed_arc, &ConfigFile_buffer[file_size]);
 12562  00C2E4  0E37               	movlw	low _initial_speed_arc_string
 12563  00C2E6  6F84               	movwf	__add_item@item_string& (0+255),b
 12564  00C2E8  0EA2               	movlw	high _initial_speed_arc_string
 12565  00C2EA  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12566  00C2EC  C1AE  F086         	movff	_config+13,__add_item@value
 12567  00C2F0  C1AF  F087         	movff	_config+14,__add_item@value+1
 12568  00C2F4  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12569  00C2F6  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12570  00C2F8  0E00               	movlw	low _ConfigFile_buffer
 12571  00C2FA  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12572  00C2FC  6F8A               	movwf	__add_item@buffer& (0+255),b
 12573  00C2FE  0E08               	movlw	high _ConfigFile_buffer
 12574  00C300  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12575  00C302  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12576  00C304  EC0A  F08B         	call	__add_item	;wreg free
 12577  00C308  0100               	movlb	0	; () banked
 12578  00C30A  6FE3               	movwf	??_configFile_write& (0+255),b
 12579  00C30C  51E3               	movf	??_configFile_write& (0+255),w,b
 12580  00C30E  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12581  00C310  0E00               	movlw	0
 12582  00C312  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12583  00C314  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12584  00C316  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12585                           
 12586                           ; BSR set to: 0
 12587                           ;config_file.c: 283: file_size += _add_item(&maximum_speed_arc_string, (int32_t) config.
      +                          maximum_speed_arc, &ConfigFile_buffer[file_size]);
 12588  00C318  0E25               	movlw	low _maximum_speed_arc_string
 12589  00C31A  6F84               	movwf	__add_item@item_string& (0+255),b
 12590  00C31C  0EA2               	movlw	high _maximum_speed_arc_string
 12591  00C31E  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12592  00C320  C1B0  F086         	movff	_config+15,__add_item@value
 12593  00C324  C1B1  F087         	movff	_config+16,__add_item@value+1
 12594  00C328  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12595  00C32A  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12596  00C32C  0E00               	movlw	low _ConfigFile_buffer
 12597  00C32E  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12598  00C330  6F8A               	movwf	__add_item@buffer& (0+255),b
 12599  00C332  0E08               	movlw	high _ConfigFile_buffer
 12600  00C334  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12601  00C336  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12602  00C338  EC0A  F08B         	call	__add_item	;wreg free
 12603  00C33C  0100               	movlb	0	; () banked
 12604  00C33E  6FE3               	movwf	??_configFile_write& (0+255),b
 12605  00C340  51E3               	movf	??_configFile_write& (0+255),w,b
 12606  00C342  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12607  00C344  0E00               	movlw	0
 12608  00C346  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12609  00C348  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12610  00C34A  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12611                           
 12612                           ; BSR set to: 0
 12613                           ;config_file.c: 284: file_size += _add_item(&initial_speed_manual_string, (int32_t) conf
      +                          ig.initial_speed_manual, &ConfigFile_buffer[file_size]);
 12614  00C34C  0EE8               	movlw	low _initial_speed_manual_string
 12615  00C34E  6F84               	movwf	__add_item@item_string& (0+255),b
 12616  00C350  0EA1               	movlw	high _initial_speed_manual_string
 12617  00C352  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12618  00C354  C1B2  F086         	movff	_config+17,__add_item@value
 12619  00C358  C1B3  F087         	movff	_config+18,__add_item@value+1
 12620  00C35C  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12621  00C35E  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12622  00C360  0E00               	movlw	low _ConfigFile_buffer
 12623  00C362  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12624  00C364  6F8A               	movwf	__add_item@buffer& (0+255),b
 12625  00C366  0E08               	movlw	high _ConfigFile_buffer
 12626  00C368  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12627  00C36A  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12628  00C36C  EC0A  F08B         	call	__add_item	;wreg free
 12629  00C370  0100               	movlb	0	; () banked
 12630  00C372  6FE3               	movwf	??_configFile_write& (0+255),b
 12631  00C374  51E3               	movf	??_configFile_write& (0+255),w,b
 12632  00C376  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12633  00C378  0E00               	movlw	0
 12634  00C37A  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12635  00C37C  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12636  00C37E  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12637                           
 12638                           ; BSR set to: 0
 12639                           ;config_file.c: 285: file_size += _add_item(&maximum_speed_manual_string, (int32_t) conf
      +                          ig.maximum_speed_manual, &ConfigFile_buffer[file_size]);
 12640  00C380  0ED3               	movlw	low _maximum_speed_manual_string
 12641  00C382  6F84               	movwf	__add_item@item_string& (0+255),b
 12642  00C384  0EA1               	movlw	high _maximum_speed_manual_string
 12643  00C386  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12644  00C388  C1B4  F086         	movff	_config+19,__add_item@value
 12645  00C38C  C1B5  F087         	movff	_config+20,__add_item@value+1
 12646  00C390  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12647  00C392  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12648  00C394  0E00               	movlw	low _ConfigFile_buffer
 12649  00C396  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12650  00C398  6F8A               	movwf	__add_item@buffer& (0+255),b
 12651  00C39A  0E08               	movlw	high _ConfigFile_buffer
 12652  00C39C  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12653  00C39E  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12654  00C3A0  EC0A  F08B         	call	__add_item	;wreg free
 12655  00C3A4  0100               	movlb	0	; () banked
 12656  00C3A6  6FE3               	movwf	??_configFile_write& (0+255),b
 12657  00C3A8  51E3               	movf	??_configFile_write& (0+255),w,b
 12658  00C3AA  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12659  00C3AC  0E00               	movlw	0
 12660  00C3AE  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12661  00C3B0  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12662  00C3B2  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12663                           
 12664                           ; BSR set to: 0
 12665                           ;config_file.c: 286: file_size += _add_item(&use_ccw_limit_string, (int32_t) config.use_
      +                          ccw_limit, &ConfigFile_buffer[file_size]);
 12666  00C3B4  0E6D               	movlw	low _use_ccw_limit_string
 12667  00C3B6  6F84               	movwf	__add_item@item_string& (0+255),b
 12668  00C3B8  0EA2               	movlw	high _use_ccw_limit_string
 12669  00C3BA  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12670  00C3BC  0101               	movlb	1	; () banked
 12671  00C3BE  51BA               	movf	(_config+25)& (0+255),w,b
 12672  00C3C0  0100               	movlb	0	; () banked
 12673  00C3C2  6F86               	movwf	__add_item@value& (0+255),b
 12674  00C3C4  6B87               	clrf	(__add_item@value+1)& (0+255),b
 12675  00C3C6  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12676  00C3C8  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12677  00C3CA  0E00               	movlw	low _ConfigFile_buffer
 12678  00C3CC  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12679  00C3CE  6F8A               	movwf	__add_item@buffer& (0+255),b
 12680  00C3D0  0E08               	movlw	high _ConfigFile_buffer
 12681  00C3D2  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12682  00C3D4  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12683  00C3D6  EC0A  F08B         	call	__add_item	;wreg free
 12684  00C3DA  0100               	movlb	0	; () banked
 12685  00C3DC  6FE3               	movwf	??_configFile_write& (0+255),b
 12686  00C3DE  51E3               	movf	??_configFile_write& (0+255),w,b
 12687  00C3E0  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12688  00C3E2  0E00               	movlw	0
 12689  00C3E4  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12690  00C3E6  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12691  00C3E8  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12692                           
 12693                           ; BSR set to: 0
 12694                           ;config_file.c: 287: file_size += _add_item(&ccw_limit_string, (int32_t) config.ccw_limi
      +                          t, &ConfigFile_buffer[file_size]);
 12695  00C3EA  0EB2               	movlw	low _ccw_limit_string
 12696  00C3EC  6F84               	movwf	__add_item@item_string& (0+255),b
 12697  00C3EE  0EA2               	movlw	high _ccw_limit_string
 12698  00C3F0  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12699  00C3F2  C1BB  F086         	movff	_config+26,__add_item@value
 12700  00C3F6  C1BC  F087         	movff	_config+27,__add_item@value+1
 12701  00C3FA  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12702  00C3FC  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12703  00C3FE  0E00               	movlw	low _ConfigFile_buffer
 12704  00C400  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12705  00C402  6F8A               	movwf	__add_item@buffer& (0+255),b
 12706  00C404  0E08               	movlw	high _ConfigFile_buffer
 12707  00C406  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12708  00C408  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12709  00C40A  EC0A  F08B         	call	__add_item	;wreg free
 12710  00C40E  0100               	movlb	0	; () banked
 12711  00C410  6FE3               	movwf	??_configFile_write& (0+255),b
 12712  00C412  51E3               	movf	??_configFile_write& (0+255),w,b
 12713  00C414  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12714  00C416  0E00               	movlw	0
 12715  00C418  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12716  00C41A  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12717  00C41C  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12718                           
 12719                           ; BSR set to: 0
 12720                           ;config_file.c: 288: file_size += _add_item(&use_cw_limit_string, (int32_t) config.use_c
      +                          w_limit, &ConfigFile_buffer[file_size]);
 12721  00C41E  0EA5               	movlw	low _use_cw_limit_string
 12722  00C420  6F84               	movwf	__add_item@item_string& (0+255),b
 12723  00C422  0EA2               	movlw	high _use_cw_limit_string
 12724  00C424  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12725  00C426  0101               	movlb	1	; () banked
 12726  00C428  51B7               	movf	(_config+22)& (0+255),w,b
 12727  00C42A  0100               	movlb	0	; () banked
 12728  00C42C  6F86               	movwf	__add_item@value& (0+255),b
 12729  00C42E  6B87               	clrf	(__add_item@value+1)& (0+255),b
 12730  00C430  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12731  00C432  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12732  00C434  0E00               	movlw	low _ConfigFile_buffer
 12733  00C436  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12734  00C438  6F8A               	movwf	__add_item@buffer& (0+255),b
 12735  00C43A  0E08               	movlw	high _ConfigFile_buffer
 12736  00C43C  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12737  00C43E  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12738  00C440  EC0A  F08B         	call	__add_item	;wreg free
 12739  00C444  0100               	movlb	0	; () banked
 12740  00C446  6FE3               	movwf	??_configFile_write& (0+255),b
 12741  00C448  51E3               	movf	??_configFile_write& (0+255),w,b
 12742  00C44A  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12743  00C44C  0E00               	movlw	0
 12744  00C44E  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12745  00C450  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12746  00C452  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12747                           
 12748                           ; BSR set to: 0
 12749                           ;config_file.c: 289: file_size += _add_item(&cw_limit_string, (int32_t) config.cw_limit,
      +                           &ConfigFile_buffer[file_size]);
 12750  00C454  0EBC               	movlw	low _cw_limit_string
 12751  00C456  6F84               	movwf	__add_item@item_string& (0+255),b
 12752  00C458  0EA2               	movlw	high _cw_limit_string
 12753  00C45A  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12754  00C45C  C1B8  F086         	movff	_config+23,__add_item@value
 12755  00C460  C1B9  F087         	movff	_config+24,__add_item@value+1
 12756  00C464  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12757  00C466  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12758  00C468  0E00               	movlw	low _ConfigFile_buffer
 12759  00C46A  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12760  00C46C  6F8A               	movwf	__add_item@buffer& (0+255),b
 12761  00C46E  0E08               	movlw	high _ConfigFile_buffer
 12762  00C470  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12763  00C472  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12764  00C474  EC0A  F08B         	call	__add_item	;wreg free
 12765  00C478  0100               	movlb	0	; () banked
 12766  00C47A  6FE3               	movwf	??_configFile_write& (0+255),b
 12767  00C47C  51E3               	movf	??_configFile_write& (0+255),w,b
 12768  00C47E  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12769  00C480  0E00               	movlw	0
 12770  00C482  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12771  00C484  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12772  00C486  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12773                           
 12774                           ; BSR set to: 0
 12775                           ;config_file.c: 290: file_size += _add_item(&beep_duration_string, (int32_t) config.beep
      +                          _duration, &ConfigFile_buffer[file_size]);
 12776  00C488  0E7B               	movlw	low _beep_duration_string
 12777  00C48A  6F84               	movwf	__add_item@item_string& (0+255),b
 12778  00C48C  0EA2               	movlw	high _beep_duration_string
 12779  00C48E  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12780  00C490  0101               	movlb	1	; () banked
 12781  00C492  51B6               	movf	(_config+21)& (0+255),w,b
 12782  00C494  0100               	movlb	0	; () banked
 12783  00C496  6F86               	movwf	__add_item@value& (0+255),b
 12784  00C498  6B87               	clrf	(__add_item@value+1)& (0+255),b
 12785  00C49A  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12786  00C49C  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12787  00C49E  0E00               	movlw	low _ConfigFile_buffer
 12788  00C4A0  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12789  00C4A2  6F8A               	movwf	__add_item@buffer& (0+255),b
 12790  00C4A4  0E08               	movlw	high _ConfigFile_buffer
 12791  00C4A6  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12792  00C4A8  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12793  00C4AA  EC0A  F08B         	call	__add_item	;wreg free
 12794  00C4AE  0100               	movlb	0	; () banked
 12795  00C4B0  6FE3               	movwf	??_configFile_write& (0+255),b
 12796  00C4B2  51E3               	movf	??_configFile_write& (0+255),w,b
 12797  00C4B4  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12798  00C4B6  0E00               	movlw	0
 12799  00C4B8  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12800  00C4BA  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12801  00C4BC  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12802                           
 12803                           ; BSR set to: 0
 12804                           ;config_file.c: 293: file_number = fat_find_file(&configFile_used_name, &configFile_used
      +                          _extention);
 12805  00C4BE  0EC0               	movlw	low _configFile_used_name
 12806  00C4C0  6F8B               	movwf	fat_find_file@name& (0+255),b
 12807  00C4C2  0E02               	movlw	high _configFile_used_name
 12808  00C4C4  6F8C               	movwf	(fat_find_file@name+1)& (0+255),b
 12809  00C4C6  0ED0               	movlw	low _configFile_used_extention
 12810  00C4C8  6F8D               	movwf	fat_find_file@extension& (0+255),b
 12811  00C4CA  0E02               	movlw	high _configFile_used_extention
 12812  00C4CC  6F8E               	movwf	(fat_find_file@extension+1)& (0+255),b
 12813  00C4CE  ECE2  F08D         	call	_fat_find_file	;wreg free
 12814  00C4D2  0100               	movlb	0	; () banked
 12815  00C4D4  6FE4               	movwf	configFile_write@file_number& (0+255),b
 12816                           
 12817                           ; BSR set to: 0
 12818                           ;config_file.c: 294: if(file_number==0xFF)
 12819  00C4D6  29E4               	incf	configFile_write@file_number& (0+255),w,b
 12820  00C4D8  A4D8               	btfss	status,2,c
 12821  00C4DA  D015               	goto	l2966
 12822                           
 12823                           ; BSR set to: 0
 12824                           ;config_file.c: 295: {;config_file.c: 296: file_number = fat_create_file(&configFile_use
      +                          d_name, &configFile_used_extention, file_size);
 12825  00C4DC  0EC0               	movlw	low _configFile_used_name
 12826  00C4DE  6FAC               	movwf	fat_create_file@name& (0+255),b
 12827  00C4E0  0E02               	movlw	high _configFile_used_name
 12828  00C4E2  6FAD               	movwf	(fat_create_file@name+1)& (0+255),b
 12829  00C4E4  0ED0               	movlw	low _configFile_used_extention
 12830  00C4E6  6FAE               	movwf	fat_create_file@extension& (0+255),b
 12831  00C4E8  0E02               	movlw	high _configFile_used_extention
 12832  00C4EA  6FAF               	movwf	(fat_create_file@extension+1)& (0+255),b
 12833  00C4EC  C0E5  F0B0         	movff	configFile_write@file_size,fat_create_file@size
 12834  00C4F0  C0E6  F0B1         	movff	configFile_write@file_size+1,fat_create_file@size+1
 12835  00C4F4  C0E7  F0B2         	movff	configFile_write@file_size+2,fat_create_file@size+2
 12836  00C4F8  C0E8  F0B3         	movff	configFile_write@file_size+3,fat_create_file@size+3
 12837  00C4FC  ECD6  F081         	call	_fat_create_file	;wreg free
 12838  00C500  0100               	movlb	0	; () banked
 12839  00C502  6FE4               	movwf	configFile_write@file_number& (0+255),b
 12840                           
 12841                           ;config_file.c: 297: }
 12842  00C504  D00B               	goto	l2967
 12843  00C506                     l2966:
 12844                           
 12845                           ; BSR set to: 0
 12846                           ;config_file.c: 298: else;config_file.c: 299: {;config_file.c: 300: fat_resize_file(file
      +                          _number, file_size);
 12847                           
 12848                           ; BSR set to: 0
 12849  00C506  C0E5  F0AC         	movff	configFile_write@file_size,fat_resize_file@new_file_size
 12850  00C50A  C0E6  F0AD         	movff	configFile_write@file_size+1,fat_resize_file@new_file_size+1
 12851  00C50E  C0E7  F0AE         	movff	configFile_write@file_size+2,fat_resize_file@new_file_size+2
 12852  00C512  C0E8  F0AF         	movff	configFile_write@file_size+3,fat_resize_file@new_file_size+3
 12853  00C516  51E4               	movf	configFile_write@file_number& (0+255),w,b
 12854  00C518  EC8E  F089         	call	_fat_resize_file
 12855  00C51C                     l2967:
 12856                           
 12857                           ;config_file.c: 301: };config_file.c: 304: fat_modify_file(file_number, 0, file_size, &C
      +                          onfigFile_buffer[0]);
 12858  00C51C  0E00               	movlw	0
 12859  00C51E  0100               	movlb	0	; () banked
 12860  00C520  6FA1               	movwf	fat_modify_file@start_byte& (0+255),b
 12861  00C522  0E00               	movlw	0
 12862  00C524  6FA2               	movwf	(fat_modify_file@start_byte+1)& (0+255),b
 12863  00C526  0E00               	movlw	0
 12864  00C528  6FA3               	movwf	(fat_modify_file@start_byte+2)& (0+255),b
 12865  00C52A  0E00               	movlw	0
 12866  00C52C  6FA4               	movwf	(fat_modify_file@start_byte+3)& (0+255),b
 12867  00C52E  C0E5  F0A5         	movff	configFile_write@file_size,fat_modify_file@length
 12868  00C532  C0E6  F0A6         	movff	configFile_write@file_size+1,fat_modify_file@length+1
 12869  00C536  0E00               	movlw	low _ConfigFile_buffer
 12870  00C538  6FA7               	movwf	fat_modify_file@data& (0+255),b
 12871  00C53A  0E08               	movlw	high _ConfigFile_buffer
 12872  00C53C  6FA8               	movwf	(fat_modify_file@data+1)& (0+255),b
 12873  00C53E  51E4               	movf	configFile_write@file_number& (0+255),w,b
 12874  00C540  ECE0  F072         	call	_fat_modify_file
 12875  00C544  0012               	return		;funcret
 12876  00C546                     __end_of_configFile_write:
 12877                           	opt stack 0
 12878                           tblptru	equ	0xFF8
 12879                           tblptrh	equ	0xFF7
 12880                           tblptrl	equ	0xFF6
 12881                           tablat	equ	0xFF5
 12882                           prodh	equ	0xFF4
 12883                           prodl	equ	0xFF3
 12884                           postinc0	equ	0xFEE
 12885                           wreg	equ	0xFE8
 12886                           postdec1	equ	0xFE5
 12887                           plusw1	equ	0xFE3
 12888                           fsr1h	equ	0xFE2
 12889                           fsr1l	equ	0xFE1
 12890                           indf2	equ	0xFDF
 12891                           postinc2	equ	0xFDE
 12892                           plusw2	equ	0xFDB
 12893                           fsr2h	equ	0xFDA
 12894                           fsr2l	equ	0xFD9
 12895                           status	equ	0xFD8
 12896                           
 12897 ;; *************** function _fat_resize_file *****************
 12898 ;; Defined at:
 12899 ;;		line 910 in file "fat16.c"
 12900 ;; Parameters:    Size  Location     Type
 12901 ;;  file_number     1    wreg     unsigned char 
 12902 ;;  new_file_siz    4   76[BANK0 ] unsigned long 
 12903 ;; Auto vars:     Size  Location     Type
 12904 ;;  file_number     1   90[BANK0 ] unsigned char 
 12905 ;;  root           32   91[BANK0 ] struct .
 12906 ;;  first_cluste    2   88[BANK0 ] unsigned int 
 12907 ;;  new_number_o    2   86[BANK0 ] unsigned int 
 12908 ;;  old_number_o    2   84[BANK0 ] unsigned int 
 12909 ;; Return value:  Size  Location     Type
 12910 ;;                  1    wreg      unsigned char 
 12911 ;; Registers used:
 12912 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12913 ;; Tracked objects:
 12914 ;;		On entry : 0/0
 12915 ;;		On exit  : 0/0
 12916 ;;		Unchanged: 0/0
 12917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12918 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12919 ;;      Locals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12920 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12921 ;;      Totals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12922 ;;Total ram usage:       47 bytes
 12923 ;; Hardware stack levels used:    1
 12924 ;; Hardware stack levels required when called:   17
 12925 ;; This function calls:
 12926 ;;		__make_cluster_chain
 12927 ;;		__root_is_available
 12928 ;;		__write_root
 12929 ;;		_fat_get_file_information
 12930 ;; This function is called by:
 12931 ;;		_configFile_write
 12932 ;;		_fat_append_to_file
 12933 ;; This function uses a non-reentrant model
 12934 ;;
 12935                           
 12936                           	psect	text40
 12937  01131C                     __ptext40:
 12938                           	opt stack 0
 12939  01131C                     _fat_resize_file:
 12940                           	opt stack 11
 12941                           
 12942                           ;incstack = 0
 12943                           ;fat_resize_file@file_number stored from wreg
 12944  01131C  0100               	movlb	0	; () banked
 12945  01131E  6FBA               	movwf	fat_resize_file@file_number& (0+255),b
 12946                           
 12947                           ;fat16.c: 912: rootEntry_t root;;fat16.c: 913: uint16_t old_number_of_clusters;;fat16.c:
      +                           914: uint16_t new_number_of_clusters;;fat16.c: 915: uint16_t first_cluster;;fat16.c: 91
      +                          8: if(file_number>=64)
 12948  011320  0E3F               	movlw	63
 12949  011322  0100               	movlb	0	; () banked
 12950  011324  65BA               	cpfsgt	fat_resize_file@file_number& (0+255),b
 12951  011326  D002               	goto	l1900
 12952                           
 12953                           ; BSR set to: 0
 12954                           ;fat16.c: 919: {;fat16.c: 921: return 0xFF;
 12955  011328  0EFF               	movlw	255
 12956                           
 12957                           ; BSR set to: 0
 12958  01132A  0012               	return	
 12959  01132C                     l1900:
 12960                           
 12961                           ; BSR set to: 0
 12962                           ;fat16.c: 922: };fat16.c: 925: if(_root_is_available(file_number))
 12963                           
 12964                           ; BSR set to: 0
 12965  01132C  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 12966  01132E  EC3E  F0A0         	call	__root_is_available
 12967  011332  0900               	iorlw	0
 12968  011334  B4D8               	btfsc	status,2,c
 12969  011336  D002               	goto	l1902
 12970                           
 12971                           ;fat16.c: 926: {;fat16.c: 928: return 0xFE;
 12972  011338  0EFE               	movlw	254
 12973  01133A  0012               	return	
 12974  01133C                     l1902:
 12975                           
 12976                           ;fat16.c: 929: };fat16.c: 932: fat_get_file_information(file_number, &root);
 12977  01133C  0EBB               	movlw	low fat_resize_file@root
 12978  01133E  0100               	movlb	0	; () banked
 12979  011340  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 12980  011342  0E00               	movlw	high fat_resize_file@root
 12981  011344  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 12982  011346  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 12983  011348  EC38  F09E         	call	_fat_get_file_information
 12984                           
 12985                           ;fat16.c: 935: old_number_of_clusters = (root.fileSize+512-1)>>9;
 12986  01134C  EE20  F0D7         	lfsr	2,fat_resize_file@root+28
 12987  011350  0EFF               	movlw	255
 12988  011352  24DE               	addwf	postinc2,w,c
 12989  011354  0100               	movlb	0	; () banked
 12990  011356  6FB0               	movwf	??_fat_resize_file& (0+255),b
 12991  011358  0E01               	movlw	1
 12992  01135A  20DE               	addwfc	postinc2,w,c
 12993  01135C  6FB1               	movwf	(??_fat_resize_file+1)& (0+255),b
 12994  01135E  0E00               	movlw	0
 12995  011360  20DE               	addwfc	postinc2,w,c
 12996  011362  6FB2               	movwf	(??_fat_resize_file+2)& (0+255),b
 12997  011364  0E00               	movlw	0
 12998  011366  20DE               	addwfc	postinc2,w,c
 12999  011368  6FB3               	movwf	(??_fat_resize_file+3)& (0+255),b
 13000  01136A  0E0A               	movlw	10
 13001  01136C  D005               	goto	u14430
 13002  01136E                     u14435:
 13003  01136E  90D8               	bcf	status,0,c
 13004  011370  33B3               	rrcf	(??_fat_resize_file+3)& (0+255),f,b
 13005  011372  33B2               	rrcf	(??_fat_resize_file+2)& (0+255),f,b
 13006  011374  33B1               	rrcf	(??_fat_resize_file+1)& (0+255),f,b
 13007  011376  33B0               	rrcf	??_fat_resize_file& (0+255),f,b
 13008  011378                     u14430:
 13009  011378  2EE8               	decfsz	wreg,f,c
 13010  01137A  D7F9               	goto	u14435
 13011  01137C  C0B0  F0B4         	movff	??_fat_resize_file,fat_resize_file@old_number_of_clusters
 13012  011380  C0B1  F0B5         	movff	??_fat_resize_file+1,fat_resize_file@old_number_of_clusters+1
 13013                           
 13014                           ; BSR set to: 0
 13015                           ;fat16.c: 936: new_number_of_clusters = (new_file_size+512-1)>>9;
 13016  011384  0EFF               	movlw	255
 13017  011386  25AC               	addwf	fat_resize_file@new_file_size& (0+255),w,b
 13018  011388  6FB0               	movwf	??_fat_resize_file& (0+255),b
 13019  01138A  0E01               	movlw	1
 13020  01138C  21AD               	addwfc	(fat_resize_file@new_file_size+1)& (0+255),w,b
 13021  01138E  6FB1               	movwf	(??_fat_resize_file+1)& (0+255),b
 13022  011390  0E00               	movlw	0
 13023  011392  21AE               	addwfc	(fat_resize_file@new_file_size+2)& (0+255),w,b
 13024  011394  6FB2               	movwf	(??_fat_resize_file+2)& (0+255),b
 13025  011396  0E00               	movlw	0
 13026  011398  21AF               	addwfc	(fat_resize_file@new_file_size+3)& (0+255),w,b
 13027  01139A  6FB3               	movwf	(??_fat_resize_file+3)& (0+255),b
 13028  01139C  0E0A               	movlw	10
 13029  01139E  D005               	goto	u14440
 13030  0113A0                     u14445:
 13031  0113A0  90D8               	bcf	status,0,c
 13032  0113A2  33B3               	rrcf	(??_fat_resize_file+3)& (0+255),f,b
 13033  0113A4  33B2               	rrcf	(??_fat_resize_file+2)& (0+255),f,b
 13034  0113A6  33B1               	rrcf	(??_fat_resize_file+1)& (0+255),f,b
 13035  0113A8  33B0               	rrcf	??_fat_resize_file& (0+255),f,b
 13036  0113AA                     u14440:
 13037  0113AA  2EE8               	decfsz	wreg,f,c
 13038  0113AC  D7F9               	goto	u14445
 13039  0113AE  C0B0  F0B6         	movff	??_fat_resize_file,fat_resize_file@new_number_of_clusters
 13040  0113B2  C0B1  F0B7         	movff	??_fat_resize_file+1,fat_resize_file@new_number_of_clusters+1
 13041                           
 13042                           ; BSR set to: 0
 13043                           ;fat16.c: 939: if(old_number_of_clusters!=new_number_of_clusters)
 13044  0113B6  51B6               	movf	fat_resize_file@new_number_of_clusters& (0+255),w,b
 13045  0113B8  19B4               	xorwf	fat_resize_file@old_number_of_clusters& (0+255),w,b
 13046  0113BA  E104               	bnz	u14450
 13047  0113BC  51B7               	movf	(fat_resize_file@new_number_of_clusters+1)& (0+255),w,b
 13048  0113BE  19B5               	xorwf	(fat_resize_file@old_number_of_clusters+1)& (0+255),w,b
 13049  0113C0  B4D8               	btfsc	status,2,c
 13050  0113C2  D01A               	goto	l1903
 13051  0113C4                     u14450:
 13052                           
 13053                           ; BSR set to: 0
 13054                           ;fat16.c: 940: {;fat16.c: 941: first_cluster = _make_cluster_chain(root.firstCluster, ne
      +                          w_number_of_clusters);
 13055  0113C4  C0D5  F095         	movff	fat_resize_file@root+26,__make_cluster_chain@first_cluster
 13056  0113C8  C0D6  F096         	movff	fat_resize_file@root+27,__make_cluster_chain@first_cluster+1
 13057  0113CC  C0B6  F097         	movff	fat_resize_file@new_number_of_clusters,__make_cluster_chain@number_of_clusters
 13058  0113D0  C0B7  F098         	movff	fat_resize_file@new_number_of_clusters+1,__make_cluster_chain@number_of_clusters+
      +                          1
 13059  0113D4  EC6B  F06C         	call	__make_cluster_chain	;wreg free
 13060  0113D8  C095  F0B8         	movff	?__make_cluster_chain,fat_resize_file@first_cluster
 13061  0113DC  C096  F0B9         	movff	?__make_cluster_chain+1,fat_resize_file@first_cluster+1
 13062                           
 13063                           ;fat16.c: 942: if(first_cluster==0xFFFF)
 13064  0113E0  0100               	movlb	0	; () banked
 13065  0113E2  29B8               	incf	fat_resize_file@first_cluster& (0+255),w,b
 13066  0113E4  E105               	bnz	l1904
 13067  0113E6  29B9               	incf	(fat_resize_file@first_cluster+1)& (0+255),w,b
 13068  0113E8  A4D8               	btfss	status,2,c
 13069  0113EA  D002               	goto	l1904
 13070                           
 13071                           ; BSR set to: 0
 13072                           ;fat16.c: 943: {;fat16.c: 945: return 0xFD;
 13073  0113EC  0EFD               	movlw	253
 13074                           
 13075                           ; BSR set to: 0
 13076  0113EE  0012               	return	
 13077  0113F0                     l1904:
 13078                           
 13079                           ; BSR set to: 0
 13080                           ;fat16.c: 946: };fat16.c: 949: root.firstCluster = first_cluster;
 13081  0113F0  C0B8  F0D5         	movff	fat_resize_file@first_cluster,fat_resize_file@root+26
 13082  0113F4  C0B9  F0D6         	movff	fat_resize_file@first_cluster+1,fat_resize_file@root+27
 13083  0113F8                     l1903:
 13084                           
 13085                           ; BSR set to: 0
 13086                           ;fat16.c: 950: };fat16.c: 953: root.fileSize = new_file_size;
 13087  0113F8  C0AC  F0D7         	movff	fat_resize_file@new_file_size,fat_resize_file@root+28
 13088  0113FC  C0AD  F0D8         	movff	fat_resize_file@new_file_size+1,fat_resize_file@root+29
 13089  011400  C0AE  F0D9         	movff	fat_resize_file@new_file_size+2,fat_resize_file@root+30
 13090  011404  C0AF  F0DA         	movff	fat_resize_file@new_file_size+3,fat_resize_file@root+31
 13091                           
 13092                           ; BSR set to: 0
 13093                           ;fat16.c: 956: _write_root(file_number, &root);
 13094  011408  0EBB               	movlw	low fat_resize_file@root
 13095  01140A  6F88               	movwf	__write_root@data& (0+255),b
 13096  01140C  0E00               	movlw	high fat_resize_file@root
 13097  01140E  6F89               	movwf	(__write_root@data+1)& (0+255),b
 13098  011410  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 13099  011412  ECC1  F0A6         	call	__write_root
 13100                           
 13101                           ;fat16.c: 959: return 0x00;
 13102  011416  0E00               	movlw	0
 13103  011418  0012               	return	
 13104  01141A                     __end_of_fat_resize_file:
 13105                           	opt stack 0
 13106                           tblptru	equ	0xFF8
 13107                           tblptrh	equ	0xFF7
 13108                           tblptrl	equ	0xFF6
 13109                           tablat	equ	0xFF5
 13110                           prodh	equ	0xFF4
 13111                           prodl	equ	0xFF3
 13112                           postinc0	equ	0xFEE
 13113                           wreg	equ	0xFE8
 13114                           postdec1	equ	0xFE5
 13115                           plusw1	equ	0xFE3
 13116                           fsr1h	equ	0xFE2
 13117                           fsr1l	equ	0xFE1
 13118                           indf2	equ	0xFDF
 13119                           postinc2	equ	0xFDE
 13120                           plusw2	equ	0xFDB
 13121                           fsr2h	equ	0xFDA
 13122                           fsr2l	equ	0xFD9
 13123                           status	equ	0xFD8
 13124                           
 13125 ;; *************** function _fat_modify_file *****************
 13126 ;; Defined at:
 13127 ;;		line 962 in file "fat16.c"
 13128 ;; Parameters:    Size  Location     Type
 13129 ;;  file_number     1    wreg     unsigned char 
 13130 ;;  start_byte      4   65[BANK0 ] unsigned long 
 13131 ;;  length          2   69[BANK0 ] unsigned int 
 13132 ;;  data            2   71[BANK0 ] PTR unsigned char 
 13133 ;;		 -> ConfigFile_buffer(512), 
 13134 ;; Auto vars:     Size  Location     Type
 13135 ;;  file_number     1   87[BANK0 ] unsigned char 
 13136 ;;  root           32   99[BANK0 ] struct .
 13137 ;;  position        4   95[BANK0 ] unsigned long 
 13138 ;;  number_of_by    2   93[BANK0 ] unsigned int 
 13139 ;;  offset          2   91[BANK0 ] unsigned int 
 13140 ;;  cluster         2   89[BANK0 ] unsigned int 
 13141 ;;  sector          2   85[BANK0 ] unsigned int 
 13142 ;;  return_code     1   88[BANK0 ] unsigned char 
 13143 ;; Return value:  Size  Location     Type
 13144 ;;                  1    wreg      unsigned char 
 13145 ;; Registers used:
 13146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13147 ;; Tracked objects:
 13148 ;;		On entry : 0/0
 13149 ;;		On exit  : 0/0
 13150 ;;		Unchanged: 0/0
 13151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13152 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13153 ;;      Locals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13154 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13155 ;;      Totals:         0      66       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13156 ;;Total ram usage:       66 bytes
 13157 ;; Hardware stack levels used:    1
 13158 ;; Hardware stack levels required when called:   17
 13159 ;; This function calls:
 13160 ;;		__data_sector_from_cluster
 13161 ;;		__find_nth_cluster
 13162 ;;		__read_fat
 13163 ;;		_fat_get_file_information
 13164 ;;		_flash_partial_write
 13165 ;; This function is called by:
 13166 ;;		_configFile_write
 13167 ;;		_fat_append_to_file
 13168 ;; This function uses a non-reentrant model
 13169 ;;
 13170                           
 13171                           	psect	text41
 13172  00E5C0                     __ptext41:
 13173                           	opt stack 0
 13174  00E5C0                     _fat_modify_file:
 13175                           	opt stack 11
 13176                           
 13177                           ;incstack = 0
 13178                           ;fat_modify_file@file_number stored from wreg
 13179  00E5C0  0100               	movlb	0	; () banked
 13180  00E5C2  6FB7               	movwf	fat_modify_file@file_number& (0+255),b
 13181                           
 13182                           ;fat16.c: 964: rootEntry_t root;;fat16.c: 965: uint16_t cluster;;fat16.c: 966: uint32_t 
      +                          position;;fat16.c: 967: uint16_t offset;;fat16.c: 968: uint16_t sector;;fat16.c: 969: ui
      +                          nt16_t number_of_bytes;;fat16.c: 970: uint8_t return_code;;fat16.c: 973: return_code = f
      +                          at_get_file_information(file_number, &root);
 13183  00E5C4  0EC3               	movlw	low fat_modify_file@root
 13184  00E5C6  0100               	movlb	0	; () banked
 13185  00E5C8  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 13186  00E5CA  0E00               	movlw	high fat_modify_file@root
 13187  00E5CC  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 13188  00E5CE  51B7               	movf	fat_modify_file@file_number& (0+255),w,b
 13189  00E5D0  EC38  F09E         	call	_fat_get_file_information
 13190  00E5D4  0100               	movlb	0	; () banked
 13191  00E5D6  6FB8               	movwf	fat_modify_file@return_code& (0+255),b
 13192                           
 13193                           ; BSR set to: 0
 13194                           ;fat16.c: 974: if(return_code!=0x00)
 13195  00E5D8  51B8               	movf	fat_modify_file@return_code& (0+255),w,b
 13196  00E5DA  A4D8               	btfss	status,2,c
 13197  00E5DC  0012               	return	
 13198                           
 13199                           ; BSR set to: 0
 13200                           ;fat16.c: 978: };fat16.c: 981: if(start_byte>root.fileSize)
 13201                           
 13202                           ; BSR set to: 0
 13203                           
 13204                           ; BSR set to: 0
 13205                           ;fat16.c: 975: {;fat16.c: 977: return return_code;;	Return value of _fat_modify_file is 
      +                          never used
 13206  00E5DE  51A1               	movf	fat_modify_file@start_byte& (0+255),w,b
 13207  00E5E0  5DDF               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 13208  00E5E2  51A2               	movf	(fat_modify_file@start_byte+1)& (0+255),w,b
 13209  00E5E4  59E0               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 13210  00E5E6  51A3               	movf	(fat_modify_file@start_byte+2)& (0+255),w,b
 13211  00E5E8  59E1               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 13212  00E5EA  51A4               	movf	(fat_modify_file@start_byte+3)& (0+255),w,b
 13213  00E5EC  59E2               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 13214  00E5EE  A0D8               	btfss	status,0,c
 13215  00E5F0  0012               	return	
 13216                           
 13217                           ; BSR set to: 0
 13218                           ;fat16.c: 985: };fat16.c: 987: if((start_byte+length) > root.fileSize)
 13219                           
 13220                           ; BSR set to: 0
 13221                           
 13222                           ; BSR set to: 0
 13223                           ;fat16.c: 982: {;fat16.c: 984: return 0xF0;;	Return value of _fat_modify_file is never u
      +                          sed
 13224  00E5F2  51A5               	movf	fat_modify_file@length& (0+255),w,b
 13225  00E5F4  25A1               	addwf	fat_modify_file@start_byte& (0+255),w,b
 13226  00E5F6  6FA9               	movwf	??_fat_modify_file& (0+255),b
 13227  00E5F8  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 13228  00E5FA  21A2               	addwfc	(fat_modify_file@start_byte+1)& (0+255),w,b
 13229  00E5FC  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 13230  00E5FE  0E00               	movlw	0
 13231  00E600  21A3               	addwfc	(fat_modify_file@start_byte+2)& (0+255),w,b
 13232  00E602  6FAB               	movwf	(??_fat_modify_file+2)& (0+255),b
 13233  00E604  0E00               	movlw	0
 13234  00E606  21A4               	addwfc	(fat_modify_file@start_byte+3)& (0+255),w,b
 13235  00E608  6FAC               	movwf	(??_fat_modify_file+3)& (0+255),b
 13236  00E60A  51A9               	movf	??_fat_modify_file& (0+255),w,b
 13237  00E60C  5DDF               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 13238  00E60E  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 13239  00E610  59E0               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 13240  00E612  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 13241  00E614  59E1               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 13242  00E616  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 13243  00E618  59E2               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 13244  00E61A  B0D8               	btfsc	status,0,c
 13245  00E61C  D00E               	goto	l1910
 13246                           
 13247                           ; BSR set to: 0
 13248                           ;fat16.c: 988: {;fat16.c: 990: length = root.fileSize - start_byte;
 13249  00E61E  C0A1  F0A9         	movff	fat_modify_file@start_byte,??_fat_modify_file
 13250  00E622  C0A2  F0AA         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 13251  00E626  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 13252  00E628  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 13253  00E62A  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 13254  00E62C  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 13255  00E62E  51DF               	movf	(fat_modify_file@root+28)& (0+255),w,b
 13256  00E630  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 13257  00E632  6FA5               	movwf	fat_modify_file@length& (0+255),b
 13258  00E634  51E0               	movf	(fat_modify_file@root+29)& (0+255),w,b
 13259  00E636  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 13260  00E638  6FA6               	movwf	(fat_modify_file@length+1)& (0+255),b
 13261  00E63A                     l1910:
 13262                           
 13263                           ; BSR set to: 0
 13264                           ;fat16.c: 991: };fat16.c: 994: cluster = _find_nth_cluster(root.firstCluster, (start_byt
      +                          e>>9));
 13265                           
 13266                           ; BSR set to: 0
 13267  00E63A  C0DD  F097         	movff	fat_modify_file@root+26,__find_nth_cluster@cluster
 13268  00E63E  C0DE  F098         	movff	fat_modify_file@root+27,__find_nth_cluster@cluster+1
 13269  00E642  C0A1  F0A9         	movff	fat_modify_file@start_byte,??_fat_modify_file
 13270  00E646  C0A2  F0AA         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 13271  00E64A  C0A3  F0AB         	movff	fat_modify_file@start_byte+2,??_fat_modify_file+2
 13272  00E64E  C0A4  F0AC         	movff	fat_modify_file@start_byte+3,??_fat_modify_file+3
 13273  00E652  0E0A               	movlw	10
 13274  00E654  D005               	goto	u14500
 13275  00E656                     u14505:
 13276  00E656  90D8               	bcf	status,0,c
 13277  00E658  33AC               	rrcf	(??_fat_modify_file+3)& (0+255),f,b
 13278  00E65A  33AB               	rrcf	(??_fat_modify_file+2)& (0+255),f,b
 13279  00E65C  33AA               	rrcf	(??_fat_modify_file+1)& (0+255),f,b
 13280  00E65E  33A9               	rrcf	??_fat_modify_file& (0+255),f,b
 13281  00E660                     u14500:
 13282  00E660  2EE8               	decfsz	wreg,f,c
 13283  00E662  D7F9               	goto	u14505
 13284  00E664  C0A9  F099         	movff	??_fat_modify_file,__find_nth_cluster@n
 13285  00E668  C0AA  F09A         	movff	??_fat_modify_file+1,__find_nth_cluster@n+1
 13286  00E66C  EC32  F099         	call	__find_nth_cluster	;wreg free
 13287  00E670  C097  F0B9         	movff	?__find_nth_cluster,fat_modify_file@cluster
 13288  00E674  C098  F0BA         	movff	?__find_nth_cluster+1,fat_modify_file@cluster+1
 13289                           
 13290                           ;fat16.c: 997: position = start_byte & 0xFFFFFE00;
 13291  00E678  0E00               	movlw	0
 13292  00E67A  0100               	movlb	0	; () banked
 13293  00E67C  15A1               	andwf	fat_modify_file@start_byte& (0+255),w,b
 13294  00E67E  6FBF               	movwf	fat_modify_file@position& (0+255),b
 13295  00E680  0EFE               	movlw	254
 13296  00E682  15A2               	andwf	(fat_modify_file@start_byte+1)& (0+255),w,b
 13297  00E684  6FC0               	movwf	(fat_modify_file@position+1)& (0+255),b
 13298  00E686  0EFF               	movlw	255
 13299  00E688  15A3               	andwf	(fat_modify_file@start_byte+2)& (0+255),w,b
 13300  00E68A  6FC1               	movwf	(fat_modify_file@position+2)& (0+255),b
 13301  00E68C  0EFF               	movlw	255
 13302  00E68E  15A4               	andwf	(fat_modify_file@start_byte+3)& (0+255),w,b
 13303  00E690  6FC2               	movwf	(fat_modify_file@position+3)& (0+255),b
 13304                           
 13305                           ; BSR set to: 0
 13306                           ;fat16.c: 1000: offset = (uint16_t) (start_byte-position);
 13307  00E692  C0BF  F0A9         	movff	fat_modify_file@position,??_fat_modify_file
 13308  00E696  C0C0  F0AA         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 13309  00E69A  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 13310  00E69C  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 13311  00E69E  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 13312  00E6A0  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 13313  00E6A2  51A1               	movf	fat_modify_file@start_byte& (0+255),w,b
 13314  00E6A4  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 13315  00E6A6  6FBB               	movwf	fat_modify_file@offset& (0+255),b
 13316  00E6A8  51A2               	movf	(fat_modify_file@start_byte+1)& (0+255),w,b
 13317  00E6AA  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 13318  00E6AC  6FBC               	movwf	(fat_modify_file@offset+1)& (0+255),b
 13319                           
 13320                           ; BSR set to: 0
 13321                           ;fat16.c: 1003: position = 0;
 13322  00E6AE  0E00               	movlw	0
 13323  00E6B0  6FBF               	movwf	fat_modify_file@position& (0+255),b
 13324  00E6B2  0E00               	movlw	0
 13325  00E6B4  6FC0               	movwf	(fat_modify_file@position+1)& (0+255),b
 13326  00E6B6  0E00               	movlw	0
 13327  00E6B8  6FC1               	movwf	(fat_modify_file@position+2)& (0+255),b
 13328  00E6BA  0E00               	movlw	0
 13329  00E6BC  6FC2               	movwf	(fat_modify_file@position+3)& (0+255),b
 13330                           
 13331                           ;fat16.c: 1004: while(position < length)
 13332  00E6BE  D089               	goto	l1911
 13333  00E6C0                     
 13334                           ; BSR set to: 0
 13335                           ;fat16.c: 1005: {;fat16.c: 1007: if(offset==512)
 13336                           
 13337                           ; BSR set to: 0
 13338  00E6C0  0E02               	movlw	2
 13339  00E6C2  19BC               	xorwf	(fat_modify_file@offset+1)& (0+255),w,b
 13340  00E6C4  11BB               	iorwf	fat_modify_file@offset& (0+255),w,b
 13341  00E6C6  A4D8               	btfss	status,2,c
 13342  00E6C8  D00F               	goto	l1913
 13343                           
 13344                           ; BSR set to: 0
 13345                           ;fat16.c: 1008: {;fat16.c: 1010: cluster = _read_fat(cluster);
 13346  00E6CA  C0B9  F08F         	movff	fat_modify_file@cluster,__read_fat@cluster
 13347  00E6CE  C0BA  F090         	movff	fat_modify_file@cluster+1,__read_fat@cluster+1
 13348  00E6D2  ECCF  F0A3         	call	__read_fat	;wreg free
 13349  00E6D6  C08F  F0B9         	movff	?__read_fat,fat_modify_file@cluster
 13350  00E6DA  C090  F0BA         	movff	?__read_fat+1,fat_modify_file@cluster+1
 13351                           
 13352                           ;fat16.c: 1012: offset = 0;
 13353  00E6DE  0E00               	movlw	0
 13354  00E6E0  0100               	movlb	0	; () banked
 13355  00E6E2  6FBC               	movwf	(fat_modify_file@offset+1)& (0+255),b
 13356  00E6E4  0E00               	movlw	0
 13357  00E6E6  6FBB               	movwf	fat_modify_file@offset& (0+255),b
 13358  00E6E8                     l1913:
 13359                           
 13360                           ; BSR set to: 0
 13361                           ;fat16.c: 1013: };fat16.c: 1016: sector = _data_sector_from_cluster(cluster);
 13362                           
 13363                           ; BSR set to: 0
 13364  00E6E8  C0B9  F060         	movff	fat_modify_file@cluster,__data_sector_from_cluster@fat_cluster
 13365  00E6EC  C0BA  F061         	movff	fat_modify_file@cluster+1,__data_sector_from_cluster@fat_cluster+1
 13366  00E6F0  EC80  F0AC         	call	__data_sector_from_cluster	;wreg free
 13367  00E6F4  C060  F0B5         	movff	?__data_sector_from_cluster,fat_modify_file@sector
 13368  00E6F8  C061  F0B6         	movff	?__data_sector_from_cluster+1,fat_modify_file@sector+1
 13369                           
 13370                           ;fat16.c: 1019: number_of_bytes = 512 - offset;
 13371  00E6FC  C0BB  F0A9         	movff	fat_modify_file@offset,??_fat_modify_file
 13372  00E700  C0BC  F0AA         	movff	fat_modify_file@offset+1,??_fat_modify_file+1
 13373  00E704  0100               	movlb	0	; () banked
 13374  00E706  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 13375  00E708  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 13376  00E70A  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 13377  00E70C  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 13378  00E70E  0E00               	movlw	0
 13379  00E710  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 13380  00E712  6FBD               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 13381  00E714  0E02               	movlw	2
 13382  00E716  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 13383  00E718  6FBE               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 13384                           
 13385                           ; BSR set to: 0
 13386                           ;fat16.c: 1020: if(number_of_bytes > (length-position))
 13387  00E71A  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 13388  00E71C  6FA9               	movwf	??_fat_modify_file& (0+255),b
 13389  00E71E  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 13390  00E720  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 13391  00E722  6BAB               	clrf	(??_fat_modify_file+2)& (0+255),b
 13392  00E724  6BAC               	clrf	(??_fat_modify_file+3)& (0+255),b
 13393  00E726  C0BF  F0AD         	movff	fat_modify_file@position,??_fat_modify_file+4
 13394  00E72A  C0C0  F0AE         	movff	fat_modify_file@position+1,??_fat_modify_file+5
 13395  00E72E  C0C1  F0AF         	movff	fat_modify_file@position+2,??_fat_modify_file+6
 13396  00E732  C0C2  F0B0         	movff	fat_modify_file@position+3,??_fat_modify_file+7
 13397  00E736  1FAD               	comf	(??_fat_modify_file+4)& (0+255),f,b
 13398  00E738  1FAE               	comf	(??_fat_modify_file+5)& (0+255),f,b
 13399  00E73A  1FAF               	comf	(??_fat_modify_file+6)& (0+255),f,b
 13400  00E73C  1FB0               	comf	(??_fat_modify_file+7)& (0+255),f,b
 13401  00E73E  2BAD               	incf	(??_fat_modify_file+4)& (0+255),f,b
 13402  00E740  0E00               	movlw	0
 13403  00E742  23AE               	addwfc	(??_fat_modify_file+5)& (0+255),f,b
 13404  00E744  23AF               	addwfc	(??_fat_modify_file+6)& (0+255),f,b
 13405  00E746  23B0               	addwfc	(??_fat_modify_file+7)& (0+255),f,b
 13406  00E748  51A5               	movf	fat_modify_file@length& (0+255),w,b
 13407  00E74A  25AD               	addwf	(??_fat_modify_file+4)& (0+255),w,b
 13408  00E74C  6FB1               	movwf	(??_fat_modify_file+8)& (0+255),b
 13409  00E74E  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 13410  00E750  21AE               	addwfc	(??_fat_modify_file+5)& (0+255),w,b
 13411  00E752  6FB2               	movwf	(??_fat_modify_file+9)& (0+255),b
 13412  00E754  0E00               	movlw	0
 13413  00E756  21AF               	addwfc	(??_fat_modify_file+6)& (0+255),w,b
 13414  00E758  6FB3               	movwf	(??_fat_modify_file+10)& (0+255),b
 13415  00E75A  0E00               	movlw	0
 13416  00E75C  21B0               	addwfc	(??_fat_modify_file+7)& (0+255),w,b
 13417  00E75E  6FB4               	movwf	(??_fat_modify_file+11)& (0+255),b
 13418  00E760  51A9               	movf	??_fat_modify_file& (0+255),w,b
 13419  00E762  5DB1               	subwf	(??_fat_modify_file+8)& (0+255),w,b
 13420  00E764  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 13421  00E766  59B2               	subwfb	(??_fat_modify_file+9)& (0+255),w,b
 13422  00E768  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 13423  00E76A  59B3               	subwfb	(??_fat_modify_file+10)& (0+255),w,b
 13424  00E76C  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 13425  00E76E  59B4               	subwfb	(??_fat_modify_file+11)& (0+255),w,b
 13426  00E770  B0D8               	btfsc	status,0,c
 13427  00E772  D00E               	goto	l1914
 13428                           
 13429                           ; BSR set to: 0
 13430                           ;fat16.c: 1021: {;fat16.c: 1022: number_of_bytes = length - position;
 13431  00E774  C0BF  F0A9         	movff	fat_modify_file@position,??_fat_modify_file
 13432  00E778  C0C0  F0AA         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 13433  00E77C  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 13434  00E77E  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 13435  00E780  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 13436  00E782  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 13437  00E784  51A5               	movf	fat_modify_file@length& (0+255),w,b
 13438  00E786  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 13439  00E788  6FBD               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 13440  00E78A  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 13441  00E78C  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 13442  00E78E  6FBE               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 13443  00E790                     l1914:
 13444                           
 13445                           ; BSR set to: 0
 13446                           ;fat16.c: 1023: };fat16.c: 1026: flash_partial_write(sector, offset, number_of_bytes, &d
      +                          ata[position]);
 13447                           
 13448                           ; BSR set to: 0
 13449  00E790  C0B5  F07F         	movff	fat_modify_file@sector,flash_partial_write@page
 13450  00E794  C0B6  F080         	movff	fat_modify_file@sector+1,flash_partial_write@page+1
 13451  00E798  C0BB  F081         	movff	fat_modify_file@offset,flash_partial_write@start
 13452  00E79C  C0BC  F082         	movff	fat_modify_file@offset+1,flash_partial_write@start+1
 13453  00E7A0  C0BD  F083         	movff	fat_modify_file@number_of_bytes,flash_partial_write@length
 13454  00E7A4  C0BE  F084         	movff	fat_modify_file@number_of_bytes+1,flash_partial_write@length+1
 13455  00E7A8  51BF               	movf	fat_modify_file@position& (0+255),w,b
 13456  00E7AA  25A7               	addwf	fat_modify_file@data& (0+255),w,b
 13457  00E7AC  6F85               	movwf	flash_partial_write@data& (0+255),b
 13458  00E7AE  51C0               	movf	(fat_modify_file@position+1)& (0+255),w,b
 13459  00E7B0  21A8               	addwfc	(fat_modify_file@data+1)& (0+255),w,b
 13460  00E7B2  6F86               	movwf	(flash_partial_write@data+1)& (0+255),b
 13461  00E7B4  EC08  F0A0         	call	_flash_partial_write	;wreg free
 13462                           
 13463                           ;fat16.c: 1029: position += number_of_bytes;
 13464  00E7B8  0100               	movlb	0	; () banked
 13465  00E7BA  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 13466  00E7BC  27BF               	addwf	fat_modify_file@position& (0+255),f,b
 13467  00E7BE  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 13468  00E7C0  23C0               	addwfc	(fat_modify_file@position+1)& (0+255),f,b
 13469  00E7C2  0E00               	movlw	0
 13470  00E7C4  23C1               	addwfc	(fat_modify_file@position+2)& (0+255),f,b
 13471  00E7C6  0E00               	movlw	0
 13472  00E7C8  23C2               	addwfc	(fat_modify_file@position+3)& (0+255),f,b
 13473                           
 13474                           ; BSR set to: 0
 13475                           ;fat16.c: 1030: offset += number_of_bytes;
 13476  00E7CA  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 13477  00E7CC  27BB               	addwf	fat_modify_file@offset& (0+255),f,b
 13478  00E7CE  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 13479  00E7D0  23BC               	addwfc	(fat_modify_file@offset+1)& (0+255),f,b
 13480  00E7D2                     l1911:
 13481                           
 13482                           ; BSR set to: 0
 13483                           
 13484                           ; BSR set to: 0
 13485  00E7D2  51A5               	movf	fat_modify_file@length& (0+255),w,b
 13486  00E7D4  6FA9               	movwf	??_fat_modify_file& (0+255),b
 13487  00E7D6  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 13488  00E7D8  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 13489  00E7DA  6BAB               	clrf	(??_fat_modify_file+2)& (0+255),b
 13490  00E7DC  6BAC               	clrf	(??_fat_modify_file+3)& (0+255),b
 13491  00E7DE  51A9               	movf	??_fat_modify_file& (0+255),w,b
 13492  00E7E0  5DBF               	subwf	fat_modify_file@position& (0+255),w,b
 13493  00E7E2  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 13494  00E7E4  59C0               	subwfb	(fat_modify_file@position+1)& (0+255),w,b
 13495  00E7E6  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 13496  00E7E8  59C1               	subwfb	(fat_modify_file@position+2)& (0+255),w,b
 13497  00E7EA  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 13498  00E7EC  59C2               	subwfb	(fat_modify_file@position+3)& (0+255),w,b
 13499  00E7EE  B0D8               	btfsc	status,0,c
 13500  00E7F0  0012               	return	
 13501  00E7F2  D766               	goto	l1912
 13502  00E7F4                     __end_of_fat_modify_file:
 13503                           	opt stack 0
 13504                           tblptru	equ	0xFF8
 13505                           tblptrh	equ	0xFF7
 13506                           tblptrl	equ	0xFF6
 13507                           tablat	equ	0xFF5
 13508                           prodh	equ	0xFF4
 13509                           prodl	equ	0xFF3
 13510                           postinc0	equ	0xFEE
 13511                           wreg	equ	0xFE8
 13512                           postdec1	equ	0xFE5
 13513                           plusw1	equ	0xFE3
 13514                           fsr1h	equ	0xFE2
 13515                           fsr1l	equ	0xFE1
 13516                           indf2	equ	0xFDF
 13517                           postinc2	equ	0xFDE
 13518                           plusw2	equ	0xFDB
 13519                           fsr2h	equ	0xFDA
 13520                           fsr2l	equ	0xFD9
 13521                           status	equ	0xFD8
 13522                           
 13523 ;; *************** function _fat_create_file *****************
 13524 ;; Defined at:
 13525 ;;		line 586 in file "fat16.c"
 13526 ;; Parameters:    Size  Location     Type
 13527 ;;  name            2   76[BANK0 ] PTR unsigned char 
 13528 ;;		 -> configFile_used_name(8), 
 13529 ;;  extension       2   78[BANK0 ] PTR unsigned char 
 13530 ;;		 -> configFile_used_extention(3), 
 13531 ;;  size            4   80[BANK0 ] unsigned long 
 13532 ;; Auto vars:     Size  Location     Type
 13533 ;;  root_entry     32   93[BANK0 ] struct .
 13534 ;;  first_cluste    2   90[BANK0 ] unsigned int 
 13535 ;;  number_of_cl    2   88[BANK0 ] unsigned int 
 13536 ;;  file_number     1   92[BANK0 ] unsigned char 
 13537 ;; Return value:  Size  Location     Type
 13538 ;;                  1    wreg      unsigned char 
 13539 ;; Registers used:
 13540 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13541 ;; Tracked objects:
 13542 ;;		On entry : 0/0
 13543 ;;		On exit  : 0/0
 13544 ;;		Unchanged: 0/0
 13545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13546 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13547 ;;      Locals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13548 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13549 ;;      Totals:         0      49       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13550 ;;Total ram usage:       49 bytes
 13551 ;; Hardware stack levels used:    1
 13552 ;; Hardware stack levels required when called:   17
 13553 ;; This function calls:
 13554 ;;		__get_available_root_entry
 13555 ;;		__get_date
 13556 ;;		__get_time
 13557 ;;		__make_cluster_chain
 13558 ;;		__write_root
 13559 ;;		_fat_find_file
 13560 ;;		_memcpy
 13561 ;; This function is called by:
 13562 ;;		_configFile_write
 13563 ;;		_fat_copy_file
 13564 ;; This function uses a non-reentrant model
 13565 ;;
 13566                           
 13567                           	psect	text42
 13568  0103AC                     __ptext42:
 13569                           	opt stack 0
 13570  0103AC                     _fat_create_file:
 13571                           	opt stack 11
 13572                           
 13573                           ;fat16.c: 588: rootEntry_t root_entry;;fat16.c: 589: uint8_t file_number;;fat16.c: 590: 
      +                          uint16_t number_of_clusters;;fat16.c: 591: uint16_t first_cluster;;fat16.c: 595: if(fat_
      +                          find_file(name, extension) != 0xFF)
 13574                           
 13575                           ; BSR set to: 0
 13576                           ;incstack = 0
 13577  0103AC  C0AC  F08B         	movff	fat_create_file@name,fat_find_file@name
 13578  0103B0  C0AD  F08C         	movff	fat_create_file@name+1,fat_find_file@name+1
 13579  0103B4  C0AE  F08D         	movff	fat_create_file@extension,fat_find_file@extension
 13580  0103B8  C0AF  F08E         	movff	fat_create_file@extension+1,fat_find_file@extension+1
 13581  0103BC  ECE2  F08D         	call	_fat_find_file	;wreg free
 13582  0103C0  0AFF               	xorlw	255
 13583  0103C2  B4D8               	btfsc	status,2,c
 13584  0103C4  D002               	goto	l1849
 13585                           
 13586                           ;fat16.c: 596: {;fat16.c: 599: return 0xFF;
 13587  0103C6  0EFF               	movlw	255
 13588  0103C8  0012               	return	
 13589  0103CA                     l1849:
 13590                           
 13591                           ;fat16.c: 600: };fat16.c: 604: file_number = _get_available_root_entry();
 13592  0103CA  ECC6  F0AA         	call	__get_available_root_entry	;wreg free
 13593  0103CE  0100               	movlb	0	; () banked
 13594  0103D0  6FBC               	movwf	fat_create_file@file_number& (0+255),b
 13595                           
 13596                           ; BSR set to: 0
 13597                           ;fat16.c: 605: if(file_number == 0xFF)
 13598  0103D2  29BC               	incf	fat_create_file@file_number& (0+255),w,b
 13599  0103D4  A4D8               	btfss	status,2,c
 13600  0103D6  D002               	goto	l1851
 13601                           
 13602                           ; BSR set to: 0
 13603                           ;fat16.c: 606: {;fat16.c: 609: return 0xFE;
 13604  0103D8  0EFE               	movlw	254
 13605                           
 13606                           ; BSR set to: 0
 13607  0103DA  0012               	return	
 13608  0103DC                     l1851:
 13609                           
 13610                           ; BSR set to: 0
 13611                           ;fat16.c: 610: };fat16.c: 613: number_of_clusters = (size + 512 - 1) >> 9;
 13612                           
 13613                           ; BSR set to: 0
 13614  0103DC  0EFF               	movlw	255
 13615  0103DE  25B0               	addwf	fat_create_file@size& (0+255),w,b
 13616  0103E0  6FB4               	movwf	??_fat_create_file& (0+255),b
 13617  0103E2  0E01               	movlw	1
 13618  0103E4  21B1               	addwfc	(fat_create_file@size+1)& (0+255),w,b
 13619  0103E6  6FB5               	movwf	(??_fat_create_file+1)& (0+255),b
 13620  0103E8  0E00               	movlw	0
 13621  0103EA  21B2               	addwfc	(fat_create_file@size+2)& (0+255),w,b
 13622  0103EC  6FB6               	movwf	(??_fat_create_file+2)& (0+255),b
 13623  0103EE  0E00               	movlw	0
 13624  0103F0  21B3               	addwfc	(fat_create_file@size+3)& (0+255),w,b
 13625  0103F2  6FB7               	movwf	(??_fat_create_file+3)& (0+255),b
 13626  0103F4  0E0A               	movlw	10
 13627  0103F6  D005               	goto	u14390
 13628  0103F8                     u14395:
 13629  0103F8  90D8               	bcf	status,0,c
 13630  0103FA  33B7               	rrcf	(??_fat_create_file+3)& (0+255),f,b
 13631  0103FC  33B6               	rrcf	(??_fat_create_file+2)& (0+255),f,b
 13632  0103FE  33B5               	rrcf	(??_fat_create_file+1)& (0+255),f,b
 13633  010400  33B4               	rrcf	??_fat_create_file& (0+255),f,b
 13634  010402                     u14390:
 13635  010402  2EE8               	decfsz	wreg,f,c
 13636  010404  D7F9               	goto	u14395
 13637  010406  C0B4  F0B8         	movff	??_fat_create_file,fat_create_file@number_of_clusters
 13638  01040A  C0B5  F0B9         	movff	??_fat_create_file+1,fat_create_file@number_of_clusters+1
 13639                           
 13640                           ; BSR set to: 0
 13641                           ;fat16.c: 616: first_cluster = _make_cluster_chain(0x0000, number_of_clusters);
 13642  01040E  0E00               	movlw	0
 13643  010410  6F96               	movwf	(__make_cluster_chain@first_cluster+1)& (0+255),b
 13644  010412  0E00               	movlw	0
 13645  010414  6F95               	movwf	__make_cluster_chain@first_cluster& (0+255),b
 13646  010416  C0B8  F097         	movff	fat_create_file@number_of_clusters,__make_cluster_chain@number_of_clusters
 13647  01041A  C0B9  F098         	movff	fat_create_file@number_of_clusters+1,__make_cluster_chain@number_of_clusters+1
 13648  01041E  EC6B  F06C         	call	__make_cluster_chain	;wreg free
 13649  010422  C095  F0BA         	movff	?__make_cluster_chain,fat_create_file@first_cluster
 13650  010426  C096  F0BB         	movff	?__make_cluster_chain+1,fat_create_file@first_cluster+1
 13651                           
 13652                           ;fat16.c: 619: if(first_cluster == 0xFFFF)
 13653  01042A  0100               	movlb	0	; () banked
 13654  01042C  29BA               	incf	fat_create_file@first_cluster& (0+255),w,b
 13655  01042E  E105               	bnz	l15579
 13656  010430  29BB               	incf	(fat_create_file@first_cluster+1)& (0+255),w,b
 13657  010432  A4D8               	btfss	status,2,c
 13658  010434  D002               	goto	l1852
 13659                           
 13660                           ; BSR set to: 0
 13661                           ;fat16.c: 620: {;fat16.c: 623: return 0xFD;
 13662  010436  0EFD               	movlw	253
 13663                           
 13664                           ; BSR set to: 0
 13665  010438  0012               	return	
 13666  01043A                     l1852:
 13667  01043A                     l15579:
 13668                           
 13669                           ; BSR set to: 0
 13670                           ;fat16.c: 624: };fat16.c: 627: memcpy(root_entry.fileName, name, 8);
 13671  01043A  0EBD               	movlw	low fat_create_file@root_entry
 13672  01043C  6F60               	movwf	memcpy@d1& (0+255),b
 13673  01043E  0E00               	movlw	high fat_create_file@root_entry
 13674  010440  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13675  010442  C0AC  F062         	movff	fat_create_file@name,memcpy@s1
 13676  010446  C0AD  F063         	movff	fat_create_file@name+1,memcpy@s1+1
 13677  01044A  0E00               	movlw	0
 13678  01044C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13679  01044E  0E08               	movlw	8
 13680  010450  6F64               	movwf	memcpy@n& (0+255),b
 13681  010452  EC05  F0A2         	call	_memcpy	;wreg free
 13682                           
 13683                           ;fat16.c: 628: memcpy(root_entry.fileExtension, extension, 3);
 13684  010456  0EC5               	movlw	low (fat_create_file@root_entry+8)
 13685  010458  0100               	movlb	0	; () banked
 13686  01045A  6F60               	movwf	memcpy@d1& (0+255),b
 13687  01045C  0E00               	movlw	high (fat_create_file@root_entry+8)
 13688  01045E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13689  010460  C0AE  F062         	movff	fat_create_file@extension,memcpy@s1
 13690  010464  C0AF  F063         	movff	fat_create_file@extension+1,memcpy@s1+1
 13691  010468  0E00               	movlw	0
 13692  01046A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13693  01046C  0E03               	movlw	3
 13694  01046E  6F64               	movwf	memcpy@n& (0+255),b
 13695  010470  EC05  F0A2         	call	_memcpy	;wreg free
 13696                           
 13697                           ;fat16.c: 629: root_entry.attributes = 0x00;
 13698  010474  0E00               	movlw	0
 13699  010476  0100               	movlb	0	; () banked
 13700  010478  6FC8               	movwf	(fat_create_file@root_entry+11)& (0+255),b
 13701                           
 13702                           ; BSR set to: 0
 13703                           ;fat16.c: 630: root_entry.reserved1 = 0x00;
 13704  01047A  0E00               	movlw	0
 13705  01047C  6FC9               	movwf	(fat_create_file@root_entry+12)& (0+255),b
 13706                           
 13707                           ; BSR set to: 0
 13708                           ;fat16.c: 631: root_entry.secondFractions = 0x00;
 13709  01047E  0E00               	movlw	0
 13710  010480  6FCA               	movwf	(fat_create_file@root_entry+13)& (0+255),b
 13711                           
 13712                           ; BSR set to: 0
 13713                           ;fat16.c: 632: root_entry.createdTime = _get_time();
 13714  010482  EC97  F0AC         	call	__get_time	;wreg free
 13715  010486  C060  F0CB         	movff	?__get_time,fat_create_file@root_entry+14
 13716  01048A  C061  F0CC         	movff	?__get_time+1,fat_create_file@root_entry+15
 13717                           
 13718                           ;fat16.c: 633: root_entry.createdDate = _get_date();
 13719  01048E  EC9D  F0AC         	call	__get_date	;wreg free
 13720  010492  C060  F0CD         	movff	?__get_date,fat_create_file@root_entry+16
 13721  010496  C061  F0CE         	movff	?__get_date+1,fat_create_file@root_entry+17
 13722                           
 13723                           ;fat16.c: 634: root_entry.lastAccessDate = root_entry.createdDate;
 13724  01049A  C0CD  F0CF         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+18
 13725  01049E  C0CE  F0D0         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+19
 13726                           
 13727                           ;fat16.c: 635: root_entry.reserved2 = 0x00;
 13728  0104A2  0E00               	movlw	0
 13729  0104A4  0100               	movlb	0	; () banked
 13730  0104A6  6FD2               	movwf	(fat_create_file@root_entry+21)& (0+255),b
 13731  0104A8  0E00               	movlw	0
 13732  0104AA  6FD1               	movwf	(fat_create_file@root_entry+20)& (0+255),b
 13733                           
 13734                           ; BSR set to: 0
 13735                           ;fat16.c: 636: root_entry.modifiedTime = root_entry.createdTime;
 13736  0104AC  C0CB  F0D3         	movff	fat_create_file@root_entry+14,fat_create_file@root_entry+22
 13737  0104B0  C0CC  F0D4         	movff	fat_create_file@root_entry+15,fat_create_file@root_entry+23
 13738                           
 13739                           ; BSR set to: 0
 13740                           ;fat16.c: 637: root_entry.modifiedDate = root_entry.createdDate;
 13741  0104B4  C0CD  F0D5         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+24
 13742  0104B8  C0CE  F0D6         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+25
 13743                           
 13744                           ; BSR set to: 0
 13745                           ;fat16.c: 638: root_entry.firstCluster = first_cluster;
 13746  0104BC  C0BA  F0D7         	movff	fat_create_file@first_cluster,fat_create_file@root_entry+26
 13747  0104C0  C0BB  F0D8         	movff	fat_create_file@first_cluster+1,fat_create_file@root_entry+27
 13748                           
 13749                           ; BSR set to: 0
 13750                           ;fat16.c: 639: root_entry.fileSize = size;
 13751  0104C4  C0B0  F0D9         	movff	fat_create_file@size,fat_create_file@root_entry+28
 13752  0104C8  C0B1  F0DA         	movff	fat_create_file@size+1,fat_create_file@root_entry+29
 13753  0104CC  C0B2  F0DB         	movff	fat_create_file@size+2,fat_create_file@root_entry+30
 13754  0104D0  C0B3  F0DC         	movff	fat_create_file@size+3,fat_create_file@root_entry+31
 13755                           
 13756                           ; BSR set to: 0
 13757                           ;fat16.c: 642: _write_root(file_number, &root_entry);
 13758  0104D4  0EBD               	movlw	low fat_create_file@root_entry
 13759  0104D6  6F88               	movwf	__write_root@data& (0+255),b
 13760  0104D8  0E00               	movlw	high fat_create_file@root_entry
 13761  0104DA  6F89               	movwf	(__write_root@data+1)& (0+255),b
 13762  0104DC  51BC               	movf	fat_create_file@file_number& (0+255),w,b
 13763  0104DE  ECC1  F0A6         	call	__write_root
 13764                           
 13765                           ;fat16.c: 644: return file_number;
 13766  0104E2  0100               	movlb	0	; () banked
 13767  0104E4  51BC               	movf	fat_create_file@file_number& (0+255),w,b
 13768  0104E6  0012               	return	
 13769  0104E8                     __end_of_fat_create_file:
 13770                           	opt stack 0
 13771                           tblptru	equ	0xFF8
 13772                           tblptrh	equ	0xFF7
 13773                           tblptrl	equ	0xFF6
 13774                           tablat	equ	0xFF5
 13775                           prodh	equ	0xFF4
 13776                           prodl	equ	0xFF3
 13777                           postinc0	equ	0xFEE
 13778                           wreg	equ	0xFE8
 13779                           postdec1	equ	0xFE5
 13780                           plusw1	equ	0xFE3
 13781                           fsr1h	equ	0xFE2
 13782                           fsr1l	equ	0xFE1
 13783                           indf2	equ	0xFDF
 13784                           postinc2	equ	0xFDE
 13785                           plusw2	equ	0xFDB
 13786                           fsr2h	equ	0xFDA
 13787                           fsr2l	equ	0xFD9
 13788                           status	equ	0xFD8
 13789                           
 13790 ;; *************** function __write_root *****************
 13791 ;; Defined at:
 13792 ;;		line 473 in file "fat16.c"
 13793 ;; Parameters:    Size  Location     Type
 13794 ;;  file_number     1    wreg     unsigned char 
 13795 ;;  data            2   40[BANK0 ] PTR struct .
 13796 ;;		 -> fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 13797 ;; Auto vars:     Size  Location     Type
 13798 ;;  file_number     1   46[BANK0 ] unsigned char 
 13799 ;;  offset          2   44[BANK0 ] unsigned int 
 13800 ;;  sector          2   42[BANK0 ] unsigned int 
 13801 ;; Return value:  Size  Location     Type
 13802 ;;                  1    wreg      void 
 13803 ;; Registers used:
 13804 ;;		wreg, status,2, status,0, cstack
 13805 ;; Tracked objects:
 13806 ;;		On entry : 0/0
 13807 ;;		On exit  : 0/0
 13808 ;;		Unchanged: 0/0
 13809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13810 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13811 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13813 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13814 ;;Total ram usage:        7 bytes
 13815 ;; Hardware stack levels used:    1
 13816 ;; Hardware stack levels required when called:   15
 13817 ;; This function calls:
 13818 ;;		__offset_from_file_number
 13819 ;;		__sector_from_file_number
 13820 ;;		_flash_partial_write
 13821 ;; This function is called by:
 13822 ;;		_fat_create_file
 13823 ;;		_fat_resize_file
 13824 ;;		_fat_rename_file
 13825 ;; This function uses a non-reentrant model
 13826 ;;
 13827                           
 13828                           	psect	text43
 13829  014D82                     __ptext43:
 13830                           	opt stack 0
 13831  014D82                     __write_root:
 13832                           	opt stack 12
 13833                           
 13834                           ;incstack = 0
 13835                           ;__write_root@file_number stored from wreg
 13836  014D82  0100               	movlb	0	; () banked
 13837  014D84  6F8E               	movwf	__write_root@file_number& (0+255),b
 13838                           
 13839                           ;fat16.c: 475: uint16_t sector;;fat16.c: 476: uint16_t offset;;fat16.c: 479: sector = _s
      +                          ector_from_file_number(file_number);
 13840  014D86  0100               	movlb	0	; () banked
 13841  014D88  518E               	movf	__write_root@file_number& (0+255),w,b
 13842  014D8A  ECCC  F0A9         	call	__sector_from_file_number
 13843  014D8E  C060  F08A         	movff	?__sector_from_file_number,__write_root@sector
 13844  014D92  C061  F08B         	movff	?__sector_from_file_number+1,__write_root@sector+1
 13845                           
 13846                           ;fat16.c: 480: offset = _offset_from_file_number(file_number);
 13847  014D96  0100               	movlb	0	; () banked
 13848  014D98  518E               	movf	__write_root@file_number& (0+255),w,b
 13849  014D9A  ECDB  F0AA         	call	__offset_from_file_number
 13850  014D9E  C060  F08C         	movff	?__offset_from_file_number,__write_root@offset
 13851  014DA2  C061  F08D         	movff	?__offset_from_file_number+1,__write_root@offset+1
 13852                           
 13853                           ;fat16.c: 483: flash_partial_write(sector, offset, 32, data);
 13854  014DA6  C08A  F07F         	movff	__write_root@sector,flash_partial_write@page
 13855  014DAA  C08B  F080         	movff	__write_root@sector+1,flash_partial_write@page+1
 13856  014DAE  C08C  F081         	movff	__write_root@offset,flash_partial_write@start
 13857  014DB2  C08D  F082         	movff	__write_root@offset+1,flash_partial_write@start+1
 13858  014DB6  0E00               	movlw	0
 13859  014DB8  0100               	movlb	0	; () banked
 13860  014DBA  6F84               	movwf	(flash_partial_write@length+1)& (0+255),b
 13861  014DBC  0E20               	movlw	32
 13862  014DBE  6F83               	movwf	flash_partial_write@length& (0+255),b
 13863  014DC0  C088  F085         	movff	__write_root@data,flash_partial_write@data
 13864  014DC4  C089  F086         	movff	__write_root@data+1,flash_partial_write@data+1
 13865  014DC8  EC08  F0A0         	call	_flash_partial_write	;wreg free
 13866  014DCC  0012               	return		;funcret
 13867  014DCE                     __end_of__write_root:
 13868                           	opt stack 0
 13869                           tblptru	equ	0xFF8
 13870                           tblptrh	equ	0xFF7
 13871                           tblptrl	equ	0xFF6
 13872                           tablat	equ	0xFF5
 13873                           prodh	equ	0xFF4
 13874                           prodl	equ	0xFF3
 13875                           postinc0	equ	0xFEE
 13876                           wreg	equ	0xFE8
 13877                           postdec1	equ	0xFE5
 13878                           plusw1	equ	0xFE3
 13879                           fsr1h	equ	0xFE2
 13880                           fsr1l	equ	0xFE1
 13881                           indf2	equ	0xFDF
 13882                           postinc2	equ	0xFDE
 13883                           plusw2	equ	0xFDB
 13884                           fsr2h	equ	0xFDA
 13885                           fsr2l	equ	0xFD9
 13886                           status	equ	0xFD8
 13887                           
 13888 ;; *************** function _flash_partial_write *****************
 13889 ;; Defined at:
 13890 ;;		line 460 in file "flash.c"
 13891 ;; Parameters:    Size  Location     Type
 13892 ;;  page            2   31[BANK0 ] unsigned int 
 13893 ;;  start           2   33[BANK0 ] unsigned int 
 13894 ;;  length          2   35[BANK0 ] unsigned int 
 13895 ;;  data            2   37[BANK0 ] PTR unsigned char 
 13896 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 13897 ;;		 -> _delete_root@deleted_value(1), 
 13898 ;; Auto vars:     Size  Location     Type
 13899 ;;  match           1   39[BANK0 ] enum E7004
 13900 ;; Return value:  Size  Location     Type
 13901 ;;                  1    wreg      void 
 13902 ;; Registers used:
 13903 ;;		wreg, status,2, status,0, cstack
 13904 ;; Tracked objects:
 13905 ;;		On entry : 0/0
 13906 ;;		On exit  : 0/0
 13907 ;;		Unchanged: 0/0
 13908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13909 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13910 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13912 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13913 ;;Total ram usage:        9 bytes
 13914 ;; Hardware stack levels used:    1
 13915 ;; Hardware stack levels required when called:   14
 13916 ;; This function calls:
 13917 ;;		__flash_compare_page_to_buffer
 13918 ;;		__flash_copy_page_to_buffer
 13919 ;;		__flash_is_busy
 13920 ;;		__flash_write_page_from_buffer
 13921 ;;		__flash_write_to_buffer
 13922 ;; This function is called by:
 13923 ;;		__write_root
 13924 ;;		_fat_modify_file
 13925 ;;		__delete_root
 13926 ;; This function uses a non-reentrant model
 13927 ;;
 13928                           
 13929                           	psect	text44
 13930  014010                     __ptext44:
 13931                           	opt stack 0
 13932  014010                     _flash_partial_write:
 13933                           	opt stack 12
 13934                           
 13935                           ;flash.c: 462: flashMatchResult_t match;;flash.c: 465: while(_flash_is_busy());
 13936                           
 13937                           ;incstack = 0
 13938  014010  EC8A  F0AB         	call	__flash_is_busy	;wreg free
 13939  014014  0900               	iorlw	0
 13940  014016  A4D8               	btfss	status,2,c
 13941  014018  D7FB               	goto	_flash_partial_write
 13942                           
 13943                           ;flash.c: 468: _flash_copy_page_to_buffer(page, FLASH_BUFFER_1);
 13944  01401A  C07F  F073         	movff	flash_partial_write@page,__flash_copy_page_to_buffer@page
 13945  01401E  C080  F074         	movff	flash_partial_write@page+1,__flash_copy_page_to_buffer@page+1
 13946  014022  0E00               	movlw	0
 13947  014024  0100               	movlb	0	; () banked
 13948  014026  6F75               	movwf	__flash_copy_page_to_buffer@buffer& (0+255),b
 13949  014028  ECC2  F0A2         	call	__flash_copy_page_to_buffer	;wreg free
 13950                           
 13951                           ;flash.c: 471: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_1);
 13952  01402C  C081  F073         	movff	flash_partial_write@start,__flash_write_to_buffer@start
 13953  014030  C082  F074         	movff	flash_partial_write@start+1,__flash_write_to_buffer@start+1
 13954  014034  C085  F075         	movff	flash_partial_write@data,__flash_write_to_buffer@data
 13955  014038  C086  F076         	movff	flash_partial_write@data+1,__flash_write_to_buffer@data+1
 13956  01403C  C083  F077         	movff	flash_partial_write@length,__flash_write_to_buffer@data_length
 13957  014040  C084  F078         	movff	flash_partial_write@length+1,__flash_write_to_buffer@data_length+1
 13958  014044  0E00               	movlw	0
 13959  014046  0100               	movlb	0	; () banked
 13960  014048  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 13961  01404A  ECA9  F0A5         	call	__flash_write_to_buffer	;wreg free
 13962                           
 13963                           ;flash.c: 474: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 13964  01404E  C07F  F073         	movff	flash_partial_write@page,__flash_compare_page_to_buffer@page
 13965  014052  C080  F074         	movff	flash_partial_write@page+1,__flash_compare_page_to_buffer@page+1
 13966  014056  0E00               	movlw	0
 13967  014058  0100               	movlb	0	; () banked
 13968  01405A  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 13969  01405C  ECFA  F09D         	call	__flash_compare_page_to_buffer	;wreg free
 13970  014060  0100               	movlb	0	; () banked
 13971  014062  6F87               	movwf	flash_partial_write@match& (0+255),b
 13972                           
 13973                           ; BSR set to: 0
 13974                           ;flash.c: 477: if(match==DATA_DOES_NOT_MATCH)
 13975  014064  0587               	decf	flash_partial_write@match& (0+255),w,b
 13976  014066  A4D8               	btfss	status,2,c
 13977  014068  0012               	return	
 13978                           
 13979                           ; BSR set to: 0
 13980                           ;flash.c: 478: {;flash.c: 479: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 13981  01406A  C07F  F073         	movff	flash_partial_write@page,__flash_write_page_from_buffer@page
 13982  01406E  C080  F074         	movff	flash_partial_write@page+1,__flash_write_page_from_buffer@page+1
 13983  014072  0E00               	movlw	0
 13984  014074  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 13985  014076  EC49  F0A3         	call	__flash_write_page_from_buffer	;wreg free
 13986  01407A  0012               	return	
 13987  01407C                     __end_of_flash_partial_write:
 13988                           	opt stack 0
 13989                           tblptru	equ	0xFF8
 13990                           tblptrh	equ	0xFF7
 13991                           tblptrl	equ	0xFF6
 13992                           tablat	equ	0xFF5
 13993                           prodh	equ	0xFF4
 13994                           prodl	equ	0xFF3
 13995                           postinc0	equ	0xFEE
 13996                           wreg	equ	0xFE8
 13997                           postdec1	equ	0xFE5
 13998                           plusw1	equ	0xFE3
 13999                           fsr1h	equ	0xFE2
 14000                           fsr1l	equ	0xFE1
 14001                           indf2	equ	0xFDF
 14002                           postinc2	equ	0xFDE
 14003                           plusw2	equ	0xFDB
 14004                           fsr2h	equ	0xFDA
 14005                           fsr2l	equ	0xFD9
 14006                           status	equ	0xFD8
 14007                           
 14008 ;; *************** function __flash_copy_page_to_buffer *****************
 14009 ;; Defined at:
 14010 ;;		line 154 in file "flash.c"
 14011 ;; Parameters:    Size  Location     Type
 14012 ;;  page            2   19[BANK0 ] unsigned int 
 14013 ;;  buffer          1   21[BANK0 ] enum E7000
 14014 ;; Auto vars:     Size  Location     Type
 14015 ;;  command         4   25[BANK0 ] unsigned char [4]
 14016 ;; Return value:  Size  Location     Type
 14017 ;;                  1    wreg      void 
 14018 ;; Registers used:
 14019 ;;		wreg, status,2, status,0, cstack
 14020 ;; Tracked objects:
 14021 ;;		On entry : 0/0
 14022 ;;		On exit  : 0/0
 14023 ;;		Unchanged: 0/0
 14024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14025 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14026 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14027 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14028 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14029 ;;Total ram usage:       10 bytes
 14030 ;; Hardware stack levels used:    1
 14031 ;; Hardware stack levels required when called:   13
 14032 ;; This function calls:
 14033 ;;		__flash_is_busy
 14034 ;;		_spi_tx
 14035 ;; This function is called by:
 14036 ;;		_flash_partial_write
 14037 ;;		_flash_copy_page_to_buffer
 14038 ;; This function uses a non-reentrant model
 14039 ;;
 14040                           
 14041                           	psect	text45
 14042  014584                     __ptext45:
 14043                           	opt stack 0
 14044  014584                     __flash_copy_page_to_buffer:
 14045                           	opt stack 12
 14046                           
 14047                           ;flash.c: 156: uint8_t command[4];;flash.c: 159: while(_flash_is_busy());
 14048                           
 14049                           ;incstack = 0
 14050  014584  EC8A  F0AB         	call	__flash_is_busy	;wreg free
 14051  014588  0900               	iorlw	0
 14052  01458A  A4D8               	btfss	status,2,c
 14053  01458C  D7FB               	goto	__flash_copy_page_to_buffer
 14054                           
 14055                           ;flash.c: 162: if(buffer==FLASH_BUFFER_1)
 14056  01458E  0100               	movlb	0	; () banked
 14057  014590  5175               	movf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 14058  014592  A4D8               	btfss	status,2,c
 14059  014594  D002               	goto	l1540
 14060                           
 14061                           ; BSR set to: 0
 14062                           ;flash.c: 163: command[0] = 0x53;
 14063  014596  0E53               	movlw	83
 14064  014598  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 14065  01459A                     l1540:
 14066                           
 14067                           ; BSR set to: 0
 14068                           ;flash.c: 164: if(buffer==FLASH_BUFFER_2)
 14069                           
 14070                           ; BSR set to: 0
 14071  01459A  0575               	decf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 14072  01459C  A4D8               	btfss	status,2,c
 14073  01459E  D002               	goto	l1541
 14074                           
 14075                           ; BSR set to: 0
 14076                           ;flash.c: 165: command[0] = 0x55;
 14077  0145A0  0E55               	movlw	85
 14078  0145A2  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 14079  0145A4                     l1541:
 14080                           
 14081                           ; BSR set to: 0
 14082                           ;flash.c: 167: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 14083                           
 14084                           ; BSR set to: 0
 14085  0145A4  C073  F076         	movff	__flash_copy_page_to_buffer@page,??__flash_copy_page_to_buffer
 14086  0145A8  C074  F077         	movff	__flash_copy_page_to_buffer@page+1,??__flash_copy_page_to_buffer+1
 14087  0145AC  0E07               	movlw	7
 14088  0145AE  6F78               	movwf	(??__flash_copy_page_to_buffer+2)& (0+255),b
 14089  0145B0                     u11605:
 14090  0145B0  90D8               	bcf	status,0,c
 14091  0145B2  3377               	rrcf	(??__flash_copy_page_to_buffer+1)& (0+255),f,b
 14092  0145B4  3376               	rrcf	??__flash_copy_page_to_buffer& (0+255),f,b
 14093  0145B6  2F78               	decfsz	(??__flash_copy_page_to_buffer+2)& (0+255),f,b
 14094  0145B8  D7FB               	goto	u11605
 14095  0145BA  5176               	movf	??__flash_copy_page_to_buffer& (0+255),w,b
 14096  0145BC  6F7A               	movwf	(__flash_copy_page_to_buffer@command+1)& (0+255),b
 14097                           
 14098                           ; BSR set to: 0
 14099                           ;flash.c: 168: command[2] = ((unsigned char)((page<<1)&0xFF));
 14100  0145BE  5173               	movf	__flash_copy_page_to_buffer@page& (0+255),w,b
 14101  0145C0  2573               	addwf	__flash_copy_page_to_buffer@page& (0+255),w,b
 14102  0145C2  6F7B               	movwf	(__flash_copy_page_to_buffer@command+2)& (0+255),b
 14103                           
 14104                           ;flash.c: 169: command[3] = 0x00;
 14105  0145C4  0E00               	movlw	0
 14106  0145C6  6F7C               	movwf	(__flash_copy_page_to_buffer@command+3)& (0+255),b
 14107                           
 14108                           ; BSR set to: 0
 14109                           ;flash.c: 172: spi_tx(command, 4);
 14110  0145C8  0E79               	movlw	low __flash_copy_page_to_buffer@command
 14111  0145CA  6F60               	movwf	spi_tx@data& (0+255),b
 14112  0145CC  0E00               	movlw	high __flash_copy_page_to_buffer@command
 14113  0145CE  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 14114  0145D0  0E00               	movlw	0
 14115  0145D2  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 14116  0145D4  0E04               	movlw	4
 14117  0145D6  6F62               	movwf	spi_tx@length& (0+255),b
 14118  0145D8  EC76  F0A3         	call	_spi_tx	;wreg free
 14119  0145DC  0012               	return		;funcret
 14120  0145DE                     __end_of__flash_copy_page_to_buffer:
 14121                           	opt stack 0
 14122                           tblptru	equ	0xFF8
 14123                           tblptrh	equ	0xFF7
 14124                           tblptrl	equ	0xFF6
 14125                           tablat	equ	0xFF5
 14126                           prodh	equ	0xFF4
 14127                           prodl	equ	0xFF3
 14128                           postinc0	equ	0xFEE
 14129                           wreg	equ	0xFE8
 14130                           postdec1	equ	0xFE5
 14131                           plusw1	equ	0xFE3
 14132                           fsr1h	equ	0xFE2
 14133                           fsr1l	equ	0xFE1
 14134                           indf2	equ	0xFDF
 14135                           postinc2	equ	0xFDE
 14136                           plusw2	equ	0xFDB
 14137                           fsr2h	equ	0xFDA
 14138                           fsr2l	equ	0xFD9
 14139                           status	equ	0xFD8
 14140                           
 14141 ;; *************** function __make_cluster_chain *****************
 14142 ;; Defined at:
 14143 ;;		line 213 in file "fat16.c"
 14144 ;; Parameters:    Size  Location     Type
 14145 ;;  first_cluste    2   53[BANK0 ] unsigned int 
 14146 ;;  number_of_cl    2   55[BANK0 ] unsigned int 
 14147 ;; Auto vars:     Size  Location     Type
 14148 ;;  next_cluster    2   74[BANK0 ] unsigned int 
 14149 ;;  offset          2   72[BANK0 ] unsigned int 
 14150 ;;  sector_in_bu    2   70[BANK0 ] unsigned int 
 14151 ;;  sector          2   68[BANK0 ] unsigned int 
 14152 ;;  remaining_cl    2   66[BANK0 ] unsigned int 
 14153 ;;  different_se    2   63[BANK0 ] unsigned int 
 14154 ;;  minimum_sect    2   61[BANK0 ] unsigned int 
 14155 ;;  next_offset     2   59[BANK0 ] unsigned int 
 14156 ;;  data_changed    1   65[BANK0 ] unsigned char 
 14157 ;; Return value:  Size  Location     Type
 14158 ;;                  2   53[BANK0 ] unsigned int 
 14159 ;; Registers used:
 14160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14161 ;; Tracked objects:
 14162 ;;		On entry : 0/0
 14163 ;;		On exit  : 0/0
 14164 ;;		Unchanged: 0/0
 14165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14166 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14167 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14168 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14169 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14170 ;;Total ram usage:       23 bytes
 14171 ;; Hardware stack levels used:    1
 14172 ;; Hardware stack levels required when called:   16
 14173 ;; This function calls:
 14174 ;;		__fat_offset_from_cluster
 14175 ;;		__fat_sector_from_cluster
 14176 ;;		__get_available_cluster
 14177 ;;		__get_available_offset_from_buffer
 14178 ;;		__read_value_from_offset
 14179 ;;		__write_value_to_offset
 14180 ;;		_flash_sector_read
 14181 ;;		_flash_sector_write
 14182 ;; This function is called by:
 14183 ;;		_fat_create_file
 14184 ;;		_fat_resize_file
 14185 ;;		_fat_delete_file
 14186 ;; This function uses a non-reentrant model
 14187 ;;
 14188                           
 14189                           	psect	text46
 14190  00D8D6                     __ptext46:
 14191                           	opt stack 0
 14192  00D8D6                     __make_cluster_chain:
 14193                           	opt stack 11
 14194                           
 14195                           ;fat16.c: 215: uint16_t remaining_clusters;;fat16.c: 216: uint16_t minimum_sector;;fat16
      +                          .c: 217: uint16_t sector;;fat16.c: 218: uint16_t offset;;fat16.c: 219: uint16_t next_off
      +                          set;;fat16.c: 220: uint16_t sector_in_buffer;;fat16.c: 221: uint16_t next_cluster;;fat16
      +                          .c: 222: uint16_t different_sector_cluster;;fat16.c: 223: uint8_t data_changed;;fat16.c:
      +                           226: sector_in_buffer = 0;
 14196                           
 14197                           ;incstack = 0
 14198  00D8D6  0E00               	movlw	0
 14199  00D8D8  0100               	movlb	0	; () banked
 14200  00D8DA  6FA7               	movwf	(__make_cluster_chain@sector_in_buffer+1)& (0+255),b
 14201  00D8DC  0E00               	movlw	0
 14202  00D8DE  6FA6               	movwf	__make_cluster_chain@sector_in_buffer& (0+255),b
 14203                           
 14204                           ; BSR set to: 0
 14205                           ;fat16.c: 227: remaining_clusters = number_of_clusters;
 14206  00D8E0  C097  F0A2         	movff	__make_cluster_chain@number_of_clusters,__make_cluster_chain@remaining_clusters
 14207  00D8E4  C098  F0A3         	movff	__make_cluster_chain@number_of_clusters+1,__make_cluster_chain@remaining_clusters
      +                          +1
 14208                           
 14209                           ;fat16.c: 228: minimum_sector = 2;
 14210  00D8E8  0E00               	movlw	0
 14211  00D8EA  6F9E               	movwf	(__make_cluster_chain@minimum_sector+1)& (0+255),b
 14212  00D8EC  0E02               	movlw	2
 14213  00D8EE  6F9D               	movwf	__make_cluster_chain@minimum_sector& (0+255),b
 14214                           
 14215                           ;fat16.c: 229: data_changed = 0;
 14216  00D8F0  0E00               	movlw	0
 14217  00D8F2  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 14218                           
 14219                           ; BSR set to: 0
 14220                           ;fat16.c: 232: if((first_cluster==0) && (number_of_clusters>0))
 14221  00D8F4  5195               	movf	__make_cluster_chain@first_cluster& (0+255),w,b
 14222  00D8F6  1196               	iorwf	(__make_cluster_chain@first_cluster+1)& (0+255),w,b
 14223  00D8F8  A4D8               	btfss	status,2,c
 14224  00D8FA  D024               	goto	l1774
 14225                           
 14226                           ; BSR set to: 0
 14227  00D8FC  5197               	movf	__make_cluster_chain@number_of_clusters& (0+255),w,b
 14228  00D8FE  1198               	iorwf	(__make_cluster_chain@number_of_clusters+1)& (0+255),w,b
 14229  00D900  B4D8               	btfsc	status,2,c
 14230  00D902  D020               	goto	l1774
 14231                           
 14232                           ; BSR set to: 0
 14233                           ;fat16.c: 233: {;fat16.c: 234: first_cluster = _get_available_cluster(minimum_sector, 0)
      +                          ;
 14234  00D904  C09D  F08B         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 14235  00D908  C09E  F08C         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 14236  00D90C  0E00               	movlw	0
 14237  00D90E  6F8E               	movwf	(__get_available_cluster@skip_sector+1)& (0+255),b
 14238  00D910  0E00               	movlw	0
 14239  00D912  6F8D               	movwf	__get_available_cluster@skip_sector& (0+255),b
 14240  00D914  EC7C  F093         	call	__get_available_cluster	;wreg free
 14241  00D918  C08B  F095         	movff	?__get_available_cluster,__make_cluster_chain@first_cluster
 14242  00D91C  C08C  F096         	movff	?__get_available_cluster+1,__make_cluster_chain@first_cluster+1
 14243                           
 14244                           ;fat16.c: 236: minimum_sector = _fat_sector_from_cluster(first_cluster);
 14245  00D920  C095  F060         	movff	__make_cluster_chain@first_cluster,__fat_sector_from_cluster@cluster
 14246  00D924  C096  F061         	movff	__make_cluster_chain@first_cluster+1,__fat_sector_from_cluster@cluster+1
 14247  00D928  EC0D  F0AC         	call	__fat_sector_from_cluster	;wreg free
 14248  00D92C  C060  F09D         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 14249  00D930  C061  F09E         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 14250                           
 14251                           ;fat16.c: 237: if(first_cluster == 0)
 14252  00D934  0100               	movlb	0	; () banked
 14253  00D936  5195               	movf	__make_cluster_chain@first_cluster& (0+255),w,b
 14254  00D938  1196               	iorwf	(__make_cluster_chain@first_cluster+1)& (0+255),w,b
 14255  00D93A  A4D8               	btfss	status,2,c
 14256  00D93C  D003               	goto	l1774
 14257                           
 14258                           ; BSR set to: 0
 14259                           ;fat16.c: 238: {;fat16.c: 239: return 0xFFFF;
 14260  00D93E  6995               	setf	?__make_cluster_chain& (0+255),b
 14261  00D940  6996               	setf	(?__make_cluster_chain+1)& (0+255),b
 14262  00D942  0012               	return	
 14263  00D944                     l1774:
 14264                           
 14265                           ; BSR set to: 0
 14266                           ;fat16.c: 240: };fat16.c: 241: };fat16.c: 242: next_cluster = first_cluster;
 14267                           
 14268                           ; BSR set to: 0
 14269  00D944  C095  F0AA         	movff	__make_cluster_chain@first_cluster,__make_cluster_chain@next_cluster
 14270  00D948  C096  F0AB         	movff	__make_cluster_chain@first_cluster+1,__make_cluster_chain@next_cluster+1
 14271                           
 14272                           ;fat16.c: 245: while ((remaining_clusters > 0) || ((next_cluster>=2) && (next_cluster<=8
      +                          153)))
 14273  00D94C  D103               	goto	l1791
 14274  00D94E                     
 14275                           ; BSR set to: 0
 14276                           ;fat16.c: 246: {;fat16.c: 259: sector = _fat_sector_from_cluster(next_cluster);
 14277                           
 14278                           ; BSR set to: 0
 14279  00D94E  C0AA  F060         	movff	__make_cluster_chain@next_cluster,__fat_sector_from_cluster@cluster
 14280  00D952  C0AB  F061         	movff	__make_cluster_chain@next_cluster+1,__fat_sector_from_cluster@cluster+1
 14281  00D956  EC0D  F0AC         	call	__fat_sector_from_cluster	;wreg free
 14282  00D95A  C060  F0A4         	movff	?__fat_sector_from_cluster,__make_cluster_chain@sector
 14283  00D95E  C061  F0A5         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@sector+1
 14284                           
 14285                           ;fat16.c: 260: offset = _fat_offset_from_cluster(next_cluster);
 14286  00D962  C0AA  F060         	movff	__make_cluster_chain@next_cluster,__fat_offset_from_cluster@cluster
 14287  00D966  C0AB  F061         	movff	__make_cluster_chain@next_cluster+1,__fat_offset_from_cluster@cluster+1
 14288  00D96A  EC1A  F0AC         	call	__fat_offset_from_cluster	;wreg free
 14289  00D96E  C060  F0A8         	movff	?__fat_offset_from_cluster,__make_cluster_chain@offset
 14290  00D972  C061  F0A9         	movff	?__fat_offset_from_cluster+1,__make_cluster_chain@offset+1
 14291                           
 14292                           ;fat16.c: 263: if(sector != sector_in_buffer)
 14293  00D976  0100               	movlb	0	; () banked
 14294  00D978  51A6               	movf	__make_cluster_chain@sector_in_buffer& (0+255),w,b
 14295  00D97A  19A4               	xorwf	__make_cluster_chain@sector& (0+255),w,b
 14296  00D97C  E104               	bnz	u13180
 14297  00D97E  51A7               	movf	(__make_cluster_chain@sector_in_buffer+1)& (0+255),w,b
 14298  00D980  19A5               	xorwf	(__make_cluster_chain@sector+1)& (0+255),w,b
 14299  00D982  B4D8               	btfsc	status,2,c
 14300  00D984  D037               	goto	l1778
 14301  00D986                     u13180:
 14302                           
 14303                           ; BSR set to: 0
 14304                           ;fat16.c: 264: {;fat16.c: 266: if(data_changed)
 14305  00D986  51A1               	movf	__make_cluster_chain@data_changed& (0+255),w,b
 14306  00D988  B4D8               	btfsc	status,2,c
 14307  00D98A  D00A               	goto	l1779
 14308                           
 14309                           ; BSR set to: 0
 14310                           ;fat16.c: 267: {;fat16.c: 268: flash_sector_write(sector_in_buffer, buffer);
 14311  00D98C  C0A6  F07F         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 14312  00D990  C0A7  F080         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 14313  00D994  0E00               	movlw	low _buffer
 14314  00D996  6F81               	movwf	flash_sector_write@data& (0+255),b
 14315  00D998  0E0A               	movlw	high _buffer
 14316  00D99A  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 14317  00D99C  EC4A  F0A6         	call	_flash_sector_write	;wreg free
 14318  00D9A0                     l1779:
 14319                           
 14320                           ;fat16.c: 269: };fat16.c: 272: different_sector_cluster = _get_available_cluster(minimum
      +                          _sector, sector);
 14321  00D9A0  C09D  F08B         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 14322  00D9A4  C09E  F08C         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 14323  00D9A8  C0A4  F08D         	movff	__make_cluster_chain@sector,__get_available_cluster@skip_sector
 14324  00D9AC  C0A5  F08E         	movff	__make_cluster_chain@sector+1,__get_available_cluster@skip_sector+1
 14325  00D9B0  EC7C  F093         	call	__get_available_cluster	;wreg free
 14326  00D9B4  C08B  F09F         	movff	?__get_available_cluster,__make_cluster_chain@different_sector_cluster
 14327  00D9B8  C08C  F0A0         	movff	?__get_available_cluster+1,__make_cluster_chain@different_sector_cluster+1
 14328                           
 14329                           ;fat16.c: 275: minimum_sector = _fat_sector_from_cluster(different_sector_cluster);
 14330  00D9BC  C09F  F060         	movff	__make_cluster_chain@different_sector_cluster,__fat_sector_from_cluster@cluster
 14331  00D9C0  C0A0  F061         	movff	__make_cluster_chain@different_sector_cluster+1,__fat_sector_from_cluster@cluster
      +                          +1
 14332  00D9C4  EC0D  F0AC         	call	__fat_sector_from_cluster	;wreg free
 14333  00D9C8  C060  F09D         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 14334  00D9CC  C061  F09E         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 14335                           
 14336                           ;fat16.c: 278: flash_sector_read(sector, buffer);
 14337  00D9D0  C0A4  F087         	movff	__make_cluster_chain@sector,flash_sector_read@page
 14338  00D9D4  C0A5  F088         	movff	__make_cluster_chain@sector+1,flash_sector_read@page+1
 14339  00D9D8  0E00               	movlw	low _buffer
 14340  00D9DA  0100               	movlb	0	; () banked
 14341  00D9DC  6F89               	movwf	flash_sector_read@data& (0+255),b
 14342  00D9DE  0E0A               	movlw	high _buffer
 14343  00D9E0  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 14344  00D9E2  EC2C  F0AB         	call	_flash_sector_read	;wreg free
 14345                           
 14346                           ;fat16.c: 279: sector_in_buffer = sector;
 14347  00D9E6  C0A4  F0A6         	movff	__make_cluster_chain@sector,__make_cluster_chain@sector_in_buffer
 14348  00D9EA  C0A5  F0A7         	movff	__make_cluster_chain@sector+1,__make_cluster_chain@sector_in_buffer+1
 14349                           
 14350                           ;fat16.c: 280: data_changed = 0;
 14351  00D9EE  0E00               	movlw	0
 14352  00D9F0  0100               	movlb	0	; () banked
 14353  00D9F2  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 14354  00D9F4                     l1778:
 14355                           
 14356                           ; BSR set to: 0
 14357                           ;fat16.c: 281: };fat16.c: 284: if(remaining_clusters > 1)
 14358                           
 14359                           ; BSR set to: 0
 14360  00D9F4  51A3               	movf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 14361  00D9F6  E104               	bnz	u13200
 14362  00D9F8  0E02               	movlw	2
 14363  00D9FA  5DA2               	subwf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 14364  00D9FC  A0D8               	btfss	status,0,c
 14365  00D9FE  D05E               	goto	l1780
 14366  00DA00                     u13200:
 14367                           
 14368                           ; BSR set to: 0
 14369                           ;fat16.c: 285: {;fat16.c: 287: next_cluster = _read_value_from_offset(offset, buffer);
 14370  00DA00  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 14371  00DA04  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 14372  00DA08  0E00               	movlw	low _buffer
 14373  00DA0A  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 14374  00DA0C  0E0A               	movlw	high _buffer
 14375  00DA0E  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 14376  00DA10  EC32  F0A7         	call	__read_value_from_offset	;wreg free
 14377  00DA14  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 14378  00DA18  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 14379                           
 14380                           ;fat16.c: 290: if((next_cluster < 2) || (next_cluster > 8153))
 14381  00DA1C  0100               	movlb	0	; () banked
 14382  00DA1E  51AB               	movf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 14383  00DA20  E104               	bnz	u13210
 14384  00DA22  0E02               	movlw	2
 14385  00DA24  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 14386  00DA26  A0D8               	btfss	status,0,c
 14387  00DA28  D006               	goto	u13220
 14388  00DA2A                     u13210:
 14389                           
 14390                           ; BSR set to: 0
 14391  00DA2A  0EDA               	movlw	218
 14392  00DA2C  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 14393  00DA2E  0E1F               	movlw	31
 14394  00DA30  59AB               	subwfb	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 14395  00DA32  A0D8               	btfss	status,0,c
 14396  00DA34  D06B               	goto	l1790
 14397  00DA36                     u13220:
 14398                           
 14399                           ; BSR set to: 0
 14400                           ;fat16.c: 291: {;fat16.c: 293: next_offset = _get_available_offset_from_buffer(offset+2,
      +                           buffer);
 14401                           
 14402                           ; BSR set to: 0
 14403  00DA36  0E02               	movlw	2
 14404  00DA38  25A8               	addwf	__make_cluster_chain@offset& (0+255),w,b
 14405  00DA3A  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 14406  00DA3C  0E00               	movlw	0
 14407  00DA3E  21A9               	addwfc	(__make_cluster_chain@offset+1)& (0+255),w,b
 14408  00DA40  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 14409  00DA42  0E00               	movlw	low _buffer
 14410  00DA44  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 14411  00DA46  0E0A               	movlw	high _buffer
 14412  00DA48  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 14413  00DA4A  EC65  F0A2         	call	__get_available_offset_from_buffer	;wreg free
 14414  00DA4E  C060  F09B         	movff	?__get_available_offset_from_buffer,__make_cluster_chain@next_offset
 14415  00DA52  C061  F09C         	movff	?__get_available_offset_from_buffer+1,__make_cluster_chain@next_offset+1
 14416                           
 14417                           ;fat16.c: 295: if(next_offset != 0xFFFF)
 14418  00DA56  0100               	movlb	0	; () banked
 14419  00DA58  299B               	incf	__make_cluster_chain@next_offset& (0+255),w,b
 14420  00DA5A  E103               	bnz	u13230
 14421  00DA5C  299C               	incf	(__make_cluster_chain@next_offset+1)& (0+255),w,b
 14422  00DA5E  B4D8               	btfsc	status,2,c
 14423  00DA60  D013               	goto	l1784
 14424  00DA62                     u13230:
 14425                           
 14426                           ; BSR set to: 0
 14427                           ;fat16.c: 296: {;fat16.c: 298: next_cluster = sector_in_buffer - 2;
 14428  00DA62  0EFE               	movlw	254
 14429  00DA64  25A6               	addwf	__make_cluster_chain@sector_in_buffer& (0+255),w,b
 14430  00DA66  6FAA               	movwf	__make_cluster_chain@next_cluster& (0+255),b
 14431  00DA68  0EFF               	movlw	255
 14432  00DA6A  21A7               	addwfc	(__make_cluster_chain@sector_in_buffer+1)& (0+255),w,b
 14433  00DA6C  6FAB               	movwf	(__make_cluster_chain@next_cluster+1)& (0+255),b
 14434                           
 14435                           ; BSR set to: 0
 14436                           ;fat16.c: 299: next_cluster <<= 8;
 14437  00DA6E  51AA               	movf	__make_cluster_chain@next_cluster& (0+255),w,b
 14438  00DA70  6FAB               	movwf	(__make_cluster_chain@next_cluster+1)& (0+255),b
 14439  00DA72  6BAA               	clrf	__make_cluster_chain@next_cluster& (0+255),b
 14440                           
 14441                           ; BSR set to: 0
 14442                           ;fat16.c: 300: next_cluster |= (next_offset>>1);
 14443  00DA74  90D8               	bcf	status,0,c
 14444  00DA76  319C               	rrcf	(__make_cluster_chain@next_offset+1)& (0+255),w,b
 14445  00DA78  6F9A               	movwf	(??__make_cluster_chain+1)& (0+255),b
 14446  00DA7A  319B               	rrcf	__make_cluster_chain@next_offset& (0+255),w,b
 14447  00DA7C  6F99               	movwf	??__make_cluster_chain& (0+255),b
 14448  00DA7E  5199               	movf	??__make_cluster_chain& (0+255),w,b
 14449  00DA80  13AA               	iorwf	__make_cluster_chain@next_cluster& (0+255),f,b
 14450  00DA82  519A               	movf	(??__make_cluster_chain+1)& (0+255),w,b
 14451  00DA84  13AB               	iorwf	(__make_cluster_chain@next_cluster+1)& (0+255),f,b
 14452                           
 14453                           ;fat16.c: 301: }
 14454  00DA86  D00B               	goto	l1787
 14455  00DA88                     l1784:
 14456                           
 14457                           ; BSR set to: 0
 14458                           ;fat16.c: 302: else;fat16.c: 303: {;fat16.c: 304: if(different_sector_cluster == 0x0000)
 14459                           
 14460                           ; BSR set to: 0
 14461  00DA88  519F               	movf	__make_cluster_chain@different_sector_cluster& (0+255),w,b
 14462  00DA8A  11A0               	iorwf	(__make_cluster_chain@different_sector_cluster+1)& (0+255),w,b
 14463  00DA8C  A4D8               	btfss	status,2,c
 14464  00DA8E  D003               	goto	l1786
 14465                           
 14466                           ; BSR set to: 0
 14467                           ;fat16.c: 305: {;fat16.c: 307: return 0xFFFF;
 14468  00DA90  6995               	setf	?__make_cluster_chain& (0+255),b
 14469  00DA92  6996               	setf	(?__make_cluster_chain+1)& (0+255),b
 14470  00DA94  0012               	return	
 14471  00DA96                     l1786:
 14472                           
 14473                           ; BSR set to: 0
 14474                           ;fat16.c: 309: else;fat16.c: 310: {;fat16.c: 312: next_cluster = different_sector_cluste
      +                          r;
 14475  00DA96  C09F  F0AA         	movff	__make_cluster_chain@different_sector_cluster,__make_cluster_chain@next_cluster
 14476  00DA9A  C0A0  F0AB         	movff	__make_cluster_chain@different_sector_cluster+1,__make_cluster_chain@next_cluster
      +                          +1
 14477  00DA9E                     l1787:
 14478                           
 14479                           ; BSR set to: 0
 14480                           ;fat16.c: 313: };fat16.c: 314: };fat16.c: 316: _write_value_to_offset(offset, buffer, ne
      +                          xt_cluster);
 14481                           
 14482                           ; BSR set to: 0
 14483                           
 14484                           ; BSR set to: 0
 14485  00DA9E  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 14486  00DAA2  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 14487  00DAA6  0E00               	movlw	low _buffer
 14488  00DAA8  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 14489  00DAAA  0E0A               	movlw	high _buffer
 14490  00DAAC  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 14491  00DAAE  C0AA  F064         	movff	__make_cluster_chain@next_cluster,__write_value_to_offset@value
 14492  00DAB2  C0AB  F065         	movff	__make_cluster_chain@next_cluster+1,__write_value_to_offset@value+1
 14493  00DAB6  EC30  F0A9         	call	__write_value_to_offset	;wreg free
 14494  00DABA  D025               	goto	L90
 14495  00DABC                     l1780:
 14496                           
 14497                           ; BSR set to: 0
 14498                           ;fat16.c: 326: else if(remaining_clusters == 1)
 14499                           
 14500                           ; BSR set to: 0
 14501  00DABC  05A2               	decf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 14502  00DABE  11A3               	iorwf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 14503  00DAC0  A4D8               	btfss	status,2,c
 14504  00DAC2  D028               	goto	l1789
 14505                           
 14506                           ; BSR set to: 0
 14507                           ;fat16.c: 327: {;fat16.c: 329: next_cluster = _read_value_from_offset(offset, buffer);
 14508  00DAC4  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 14509  00DAC8  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 14510  00DACC  0E00               	movlw	low _buffer
 14511  00DACE  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 14512  00DAD0  0E0A               	movlw	high _buffer
 14513  00DAD2  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 14514  00DAD4  EC32  F0A7         	call	__read_value_from_offset	;wreg free
 14515  00DAD8  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 14516  00DADC  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 14517                           
 14518                           ;fat16.c: 331: if(next_cluster != 0xFFFF)
 14519  00DAE0  0100               	movlb	0	; () banked
 14520  00DAE2  29AA               	incf	__make_cluster_chain@next_cluster& (0+255),w,b
 14521  00DAE4  E103               	bnz	u13260
 14522  00DAE6  29AB               	incf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 14523  00DAE8  B4D8               	btfsc	status,2,c
 14524  00DAEA  D010               	goto	l1790
 14525  00DAEC                     u13260:
 14526                           
 14527                           ; BSR set to: 0
 14528                           ;fat16.c: 332: {;fat16.c: 334: _write_value_to_offset(offset, buffer, 0xFFFF);
 14529  00DAEC  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 14530  00DAF0  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 14531  00DAF4  0E00               	movlw	low _buffer
 14532  00DAF6  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 14533  00DAF8  0E0A               	movlw	high _buffer
 14534  00DAFA  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 14535  00DAFC  0EFF               	movlw	255
 14536  00DAFE  6F65               	movwf	(__write_value_to_offset@value+1)& (0+255),b
 14537  00DB00  6964               	setf	__write_value_to_offset@value& (0+255),b
 14538  00DB02  EC30  F0A9         	call	__write_value_to_offset	;wreg free
 14539  00DB06                     L90:
 14540                           
 14541                           ;fat16.c: 336: data_changed = 1;
 14542  00DB06  0E01               	movlw	1
 14543  00DB08  0100               	movlb	0	; () banked
 14544  00DB0A  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 14545  00DB0C                     l1790:
 14546                           
 14547                           ; BSR set to: 0
 14548                           ;fat16.c: 337: };fat16.c: 340: --remaining_clusters;
 14549                           
 14550                           ; BSR set to: 0
 14551  00DB0C  07A2               	decf	__make_cluster_chain@remaining_clusters& (0+255),f,b
 14552  00DB0E  A0D8               	btfss	status,0,c
 14553  00DB10  07A3               	decf	(__make_cluster_chain@remaining_clusters+1)& (0+255),f,b
 14554                           
 14555                           ;fat16.c: 341: }
 14556  00DB12  D020               	goto	l1791
 14557  00DB14                     l1789:
 14558                           
 14559                           ; BSR set to: 0
 14560                           ;fat16.c: 344: else;fat16.c: 345: {;fat16.c: 347: next_cluster = _read_value_from_offset
      +                          (offset, buffer);
 14561                           
 14562                           ; BSR set to: 0
 14563  00DB14  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 14564  00DB18  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 14565  00DB1C  0E00               	movlw	low _buffer
 14566  00DB1E  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 14567  00DB20  0E0A               	movlw	high _buffer
 14568  00DB22  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 14569  00DB24  EC32  F0A7         	call	__read_value_from_offset	;wreg free
 14570  00DB28  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 14571  00DB2C  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 14572                           
 14573                           ;fat16.c: 350: _write_value_to_offset(offset, buffer, 0x0000);
 14574  00DB30  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 14575  00DB34  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 14576  00DB38  0E00               	movlw	low _buffer
 14577  00DB3A  0100               	movlb	0	; () banked
 14578  00DB3C  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 14579  00DB3E  0E0A               	movlw	high _buffer
 14580  00DB40  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 14581  00DB42  0E00               	movlw	0
 14582  00DB44  6F65               	movwf	(__write_value_to_offset@value+1)& (0+255),b
 14583  00DB46  0E00               	movlw	0
 14584  00DB48  6F64               	movwf	__write_value_to_offset@value& (0+255),b
 14585  00DB4A  EC30  F0A9         	call	__write_value_to_offset	;wreg free
 14586                           
 14587                           ;fat16.c: 352: data_changed = 1;
 14588  00DB4E  0E01               	movlw	1
 14589  00DB50  0100               	movlb	0	; () banked
 14590  00DB52  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 14591  00DB54                     l1791:
 14592                           
 14593                           ; BSR set to: 0
 14594                           
 14595                           ; BSR set to: 0
 14596                           
 14597                           ; BSR set to: 0
 14598                           
 14599                           ; BSR set to: 0
 14600  00DB54  51A2               	movf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 14601  00DB56  11A3               	iorwf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 14602  00DB58  A4D8               	btfss	status,2,c
 14603  00DB5A  D6F9               	goto	l1777
 14604                           
 14605                           ; BSR set to: 0
 14606  00DB5C  51AB               	movf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 14607  00DB5E  E104               	bnz	u13280
 14608  00DB60  0E02               	movlw	2
 14609  00DB62  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 14610  00DB64  A0D8               	btfss	status,0,c
 14611  00DB66  D006               	goto	u13290
 14612  00DB68                     u13280:
 14613                           
 14614                           ; BSR set to: 0
 14615  00DB68  0EDA               	movlw	218
 14616  00DB6A  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 14617  00DB6C  0E1F               	movlw	31
 14618  00DB6E  59AB               	subwfb	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 14619  00DB70  A0D8               	btfss	status,0,c
 14620  00DB72  D6ED               	goto	l1777
 14621  00DB74                     u13290:
 14622                           
 14623                           ; BSR set to: 0
 14624                           ;fat16.c: 353: };fat16.c: 355: };fat16.c: 358: if(data_changed)
 14625                           
 14626                           ; BSR set to: 0
 14627                           
 14628                           ; BSR set to: 0
 14629  00DB74  51A1               	movf	__make_cluster_chain@data_changed& (0+255),w,b
 14630  00DB76  B4D8               	btfsc	status,2,c
 14631  00DB78  D00A               	goto	l1795
 14632                           
 14633                           ; BSR set to: 0
 14634                           ;fat16.c: 359: {;fat16.c: 360: flash_sector_write(sector_in_buffer, buffer);
 14635  00DB7A  C0A6  F07F         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 14636  00DB7E  C0A7  F080         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 14637  00DB82  0E00               	movlw	low _buffer
 14638  00DB84  6F81               	movwf	flash_sector_write@data& (0+255),b
 14639  00DB86  0E0A               	movlw	high _buffer
 14640  00DB88  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 14641  00DB8A  EC4A  F0A6         	call	_flash_sector_write	;wreg free
 14642  00DB8E                     l1795:
 14643                           
 14644                           ;fat16.c: 361: };fat16.c: 364: if(number_of_clusters>0)
 14645  00DB8E  0100               	movlb	0	; () banked
 14646  00DB90  5197               	movf	__make_cluster_chain@number_of_clusters& (0+255),w,b
 14647  00DB92  1198               	iorwf	(__make_cluster_chain@number_of_clusters+1)& (0+255),w,b
 14648  00DB94  B4D8               	btfsc	status,2,c
 14649  00DB96  D005               	goto	l1796
 14650                           
 14651                           ; BSR set to: 0
 14652                           ;fat16.c: 365: {;fat16.c: 366: return first_cluster;
 14653  00DB98  C095  F095         	movff	__make_cluster_chain@first_cluster,?__make_cluster_chain
 14654  00DB9C  C096  F096         	movff	__make_cluster_chain@first_cluster+1,?__make_cluster_chain+1
 14655                           
 14656                           ; BSR set to: 0
 14657                           ;fat16.c: 367: }
 14658  00DBA0  0012               	return	
 14659  00DBA2                     l1796:
 14660                           
 14661                           ; BSR set to: 0
 14662                           ;fat16.c: 368: else;fat16.c: 369: {;fat16.c: 370: return 0x0000;
 14663                           
 14664                           ; BSR set to: 0
 14665  00DBA2  0E00               	movlw	0
 14666  00DBA4  6F96               	movwf	(?__make_cluster_chain+1)& (0+255),b
 14667  00DBA6  0E00               	movlw	0
 14668  00DBA8  6F95               	movwf	?__make_cluster_chain& (0+255),b
 14669                           
 14670                           ; BSR set to: 0
 14671  00DBAA  0012               	return	
 14672  00DBAC                     __end_of__make_cluster_chain:
 14673                           	opt stack 0
 14674                           tblptru	equ	0xFF8
 14675                           tblptrh	equ	0xFF7
 14676                           tblptrl	equ	0xFF6
 14677                           tablat	equ	0xFF5
 14678                           prodh	equ	0xFF4
 14679                           prodl	equ	0xFF3
 14680                           postinc0	equ	0xFEE
 14681                           wreg	equ	0xFE8
 14682                           postdec1	equ	0xFE5
 14683                           plusw1	equ	0xFE3
 14684                           fsr1h	equ	0xFE2
 14685                           fsr1l	equ	0xFE1
 14686                           indf2	equ	0xFDF
 14687                           postinc2	equ	0xFDE
 14688                           plusw2	equ	0xFDB
 14689                           fsr2h	equ	0xFDA
 14690                           fsr2l	equ	0xFD9
 14691                           status	equ	0xFD8
 14692                           
 14693 ;; *************** function __write_value_to_offset *****************
 14694 ;; Defined at:
 14695 ;;		line 123 in file "fat16.c"
 14696 ;; Parameters:    Size  Location     Type
 14697 ;;  offset          2    0[BANK0 ] unsigned int 
 14698 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 14699 ;;		 -> buffer(512), 
 14700 ;;  value           2    4[BANK0 ] unsigned int 
 14701 ;; Auto vars:     Size  Location     Type
 14702 ;;		None
 14703 ;; Return value:  Size  Location     Type
 14704 ;;                  1    wreg      void 
 14705 ;; Registers used:
 14706 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14707 ;; Tracked objects:
 14708 ;;		On entry : 0/0
 14709 ;;		On exit  : 0/0
 14710 ;;		Unchanged: 0/0
 14711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14712 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14714 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14715 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14716 ;;Total ram usage:        8 bytes
 14717 ;; Hardware stack levels used:    1
 14718 ;; Hardware stack levels required when called:   10
 14719 ;; This function calls:
 14720 ;;		Nothing
 14721 ;; This function is called by:
 14722 ;;		__make_cluster_chain
 14723 ;; This function uses a non-reentrant model
 14724 ;;
 14725                           
 14726                           	psect	text47
 14727  015260                     __ptext47:
 14728                           	opt stack 0
 14729  015260                     __write_value_to_offset:
 14730                           	opt stack 16
 14731                           
 14732                           ;fat16.c: 125: buffer[offset] = (uint8_t) (value & 0xFF);
 14733                           
 14734                           ; BSR set to: 0
 14735                           ;incstack = 0
 14736  015260  0100               	movlb	0	; () banked
 14737  015262  5160               	movf	__write_value_to_offset@offset& (0+255),w,b
 14738  015264  2562               	addwf	__write_value_to_offset@buffer& (0+255),w,b
 14739  015266  6ED9               	movwf	fsr2l,c
 14740  015268  5161               	movf	(__write_value_to_offset@offset+1)& (0+255),w,b
 14741  01526A  2163               	addwfc	(__write_value_to_offset@buffer+1)& (0+255),w,b
 14742  01526C  6EDA               	movwf	fsr2h,c
 14743  01526E  C064  FFDF         	movff	__write_value_to_offset@value,indf2
 14744                           
 14745                           ; BSR set to: 0
 14746                           ;fat16.c: 126: value >>= 8;
 14747  015272  5165               	movf	(__write_value_to_offset@value+1)& (0+255),w,b
 14748  015274  6F64               	movwf	__write_value_to_offset@value& (0+255),b
 14749  015276  6B65               	clrf	(__write_value_to_offset@value+1)& (0+255),b
 14750                           
 14751                           ; BSR set to: 0
 14752                           ;fat16.c: 127: buffer[offset+1] = (uint8_t) (value & 0xFF);
 14753  015278  0E01               	movlw	1
 14754  01527A  2560               	addwf	__write_value_to_offset@offset& (0+255),w,b
 14755  01527C  6F66               	movwf	??__write_value_to_offset& (0+255),b
 14756  01527E  0E00               	movlw	0
 14757  015280  2161               	addwfc	(__write_value_to_offset@offset+1)& (0+255),w,b
 14758  015282  6F67               	movwf	(??__write_value_to_offset+1)& (0+255),b
 14759  015284  5166               	movf	??__write_value_to_offset& (0+255),w,b
 14760  015286  2562               	addwf	__write_value_to_offset@buffer& (0+255),w,b
 14761  015288  6ED9               	movwf	fsr2l,c
 14762  01528A  5167               	movf	(??__write_value_to_offset+1)& (0+255),w,b
 14763  01528C  2163               	addwfc	(__write_value_to_offset@buffer+1)& (0+255),w,b
 14764  01528E  6EDA               	movwf	fsr2h,c
 14765  015290  C064  FFDF         	movff	__write_value_to_offset@value,indf2
 14766                           
 14767                           ; BSR set to: 0
 14768  015294  0012               	return		;funcret
 14769  015296                     __end_of__write_value_to_offset:
 14770                           	opt stack 0
 14771                           tblptru	equ	0xFF8
 14772                           tblptrh	equ	0xFF7
 14773                           tblptrl	equ	0xFF6
 14774                           tablat	equ	0xFF5
 14775                           prodh	equ	0xFF4
 14776                           prodl	equ	0xFF3
 14777                           postinc0	equ	0xFEE
 14778                           wreg	equ	0xFE8
 14779                           postdec1	equ	0xFE5
 14780                           plusw1	equ	0xFE3
 14781                           fsr1h	equ	0xFE2
 14782                           fsr1l	equ	0xFE1
 14783                           indf2	equ	0xFDF
 14784                           postinc2	equ	0xFDE
 14785                           plusw2	equ	0xFDB
 14786                           fsr2h	equ	0xFDA
 14787                           fsr2l	equ	0xFD9
 14788                           status	equ	0xFD8
 14789                           
 14790 ;; *************** function __get_available_cluster *****************
 14791 ;; Defined at:
 14792 ;;		line 130 in file "fat16.c"
 14793 ;; Parameters:    Size  Location     Type
 14794 ;;  first_sector    2   43[BANK0 ] unsigned int 
 14795 ;;  skip_sector     2   45[BANK0 ] unsigned int 
 14796 ;; Auto vars:     Size  Location     Type
 14797 ;;  sector          2   51[BANK0 ] unsigned int 
 14798 ;;  offset          2   49[BANK0 ] unsigned int 
 14799 ;;  cluster         2   47[BANK0 ] unsigned int 
 14800 ;; Return value:  Size  Location     Type
 14801 ;;                  2   43[BANK0 ] unsigned int 
 14802 ;; Registers used:
 14803 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14804 ;; Tracked objects:
 14805 ;;		On entry : 0/0
 14806 ;;		On exit  : 0/0
 14807 ;;		Unchanged: 0/0
 14808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14809 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14810 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14812 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14813 ;;Total ram usage:       10 bytes
 14814 ;; Hardware stack levels used:    1
 14815 ;; Hardware stack levels required when called:   15
 14816 ;; This function calls:
 14817 ;;		__cluster_from_sector_and_offset
 14818 ;;		__get_available_offset_from_buffer
 14819 ;;		_flash_sector_read
 14820 ;; This function is called by:
 14821 ;;		__make_cluster_chain
 14822 ;; This function uses a non-reentrant model
 14823 ;;
 14824                           
 14825                           	psect	text48
 14826  0126F8                     __ptext48:
 14827                           	opt stack 0
 14828  0126F8                     __get_available_cluster:
 14829                           	opt stack 11
 14830                           
 14831                           ;fat16.c: 132: uint16_t cluster;;fat16.c: 133: uint16_t sector;;fat16.c: 134: uint16_t o
      +                          ffset;;fat16.c: 137: for (sector=first_sector; sector<=33; ++sector)
 14832                           
 14833                           ; BSR set to: 0
 14834                           ;incstack = 0
 14835  0126F8  C08B  F093         	movff	__get_available_cluster@first_sector,__get_available_cluster@sector
 14836  0126FC  C08C  F094         	movff	__get_available_cluster@first_sector+1,__get_available_cluster@sector+1
 14837  012700  0100               	movlb	0	; () banked
 14838  012702  5194               	movf	(__get_available_cluster@sector+1)& (0+255),w,b
 14839  012704  E15B               	bnz	l13787
 14840  012706  0E22               	movlw	34
 14841  012708  5D93               	subwf	__get_available_cluster@sector& (0+255),w,b
 14842  01270A  B0D8               	btfsc	status,0,c
 14843  01270C  D057               	goto	u12630
 14844                           
 14845                           ; BSR set to: 0
 14846                           ;fat16.c: 138: {;fat16.c: 140: if(sector == skip_sector)
 14847                           
 14848                           ; BSR set to: 0
 14849                           
 14850                           ; BSR set to: 0
 14851  01270E  518D               	movf	__get_available_cluster@skip_sector& (0+255),w,b
 14852  012710  1993               	xorwf	__get_available_cluster@sector& (0+255),w,b
 14853  012712  E104               	bnz	l13763
 14854  012714  518E               	movf	(__get_available_cluster@skip_sector+1)& (0+255),w,b
 14855  012716  1994               	xorwf	(__get_available_cluster@sector+1)& (0+255),w,b
 14856  012718  B4D8               	btfsc	status,2,c
 14857  01271A  D04D               	goto	l1762
 14858  01271C                     l13763:
 14859                           
 14860                           ; BSR set to: 0
 14861                           ;fat16.c: 143: };fat16.c: 146: flash_sector_read(sector, buffer);
 14862  01271C  C093  F087         	movff	__get_available_cluster@sector,flash_sector_read@page
 14863  012720  C094  F088         	movff	__get_available_cluster@sector+1,flash_sector_read@page+1
 14864  012724  0E00               	movlw	low _buffer
 14865  012726  6F89               	movwf	flash_sector_read@data& (0+255),b
 14866  012728  0E0A               	movlw	high _buffer
 14867  01272A  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 14868  01272C  EC2C  F0AB         	call	_flash_sector_read	;wreg free
 14869                           
 14870                           ;fat16.c: 149: if(sector == 2)
 14871  012730  0E02               	movlw	2
 14872  012732  0100               	movlb	0	; () banked
 14873  012734  1993               	xorwf	__get_available_cluster@sector& (0+255),w,b
 14874  012736  1194               	iorwf	(__get_available_cluster@sector+1)& (0+255),w,b
 14875  012738  A4D8               	btfss	status,2,c
 14876  01273A  D00B               	goto	l1757
 14877                           
 14878                           ; BSR set to: 0
 14879                           ;fat16.c: 150: {;fat16.c: 152: offset = _get_available_offset_from_buffer(4, buffer);
 14880  01273C  0E00               	movlw	0
 14881  01273E  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 14882  012740  0E04               	movlw	4
 14883  012742  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 14884  012744  0E00               	movlw	low _buffer
 14885  012746  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 14886  012748  0E0A               	movlw	high _buffer
 14887  01274A  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 14888  01274C  EC65  F0A2         	call	__get_available_offset_from_buffer	;wreg free
 14889  012750  D00B               	goto	L1
 14890  012752                     l1757:
 14891                           
 14892                           ;fat16.c: 154: else;fat16.c: 155: {;fat16.c: 156: offset = _get_available_offset_from_bu
      +                          ffer(0, buffer);
 14893  012752  0E00               	movlw	0
 14894  012754  0100               	movlb	0	; () banked
 14895  012756  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 14896  012758  0E00               	movlw	0
 14897  01275A  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 14898  01275C  0E00               	movlw	low _buffer
 14899  01275E  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 14900  012760  0E0A               	movlw	high _buffer
 14901  012762  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 14902  012764  EC65  F0A2         	call	__get_available_offset_from_buffer	;wreg free
 14903  012768                     L1:
 14904  012768  C060  F091         	movff	?__get_available_offset_from_buffer,__get_available_cluster@offset
 14905  01276C  C061  F092         	movff	?__get_available_offset_from_buffer+1,__get_available_cluster@offset+1
 14906                           
 14907                           ;fat16.c: 157: };fat16.c: 160: if(offset != 0xFFFF)
 14908  012770  0100               	movlb	0	; () banked
 14909  012772  2991               	incf	__get_available_cluster@offset& (0+255),w,b
 14910  012774  E103               	bnz	u12610
 14911  012776  2992               	incf	(__get_available_cluster@offset+1)& (0+255),w,b
 14912  012778  B4D8               	btfsc	status,2,c
 14913  01277A  D01D               	goto	l1762
 14914  01277C                     u12610:
 14915                           
 14916                           ; BSR set to: 0
 14917                           ;fat16.c: 161: {;fat16.c: 163: cluster = _cluster_from_sector_and_offset(sector, offset)
      +                          ;
 14918  01277C  C093  F060         	movff	__get_available_cluster@sector,__cluster_from_sector_and_offset@sector
 14919  012780  C094  F061         	movff	__get_available_cluster@sector+1,__cluster_from_sector_and_offset@sector+1
 14920  012784  C091  F062         	movff	__get_available_cluster@offset,__cluster_from_sector_and_offset@offset
 14921  012788  C092  F063         	movff	__get_available_cluster@offset+1,__cluster_from_sector_and_offset@offset+1
 14922  01278C  EC04  F0AB         	call	__cluster_from_sector_and_offset	;wreg free
 14923  012790  C060  F08F         	movff	?__cluster_from_sector_and_offset,__get_available_cluster@cluster
 14924  012794  C061  F090         	movff	?__cluster_from_sector_and_offset+1,__get_available_cluster@cluster+1
 14925                           
 14926                           ;fat16.c: 165: if(cluster > 8191)
 14927  012798  0E20               	movlw	32
 14928  01279A  0100               	movlb	0	; () banked
 14929  01279C  5D90               	subwf	(__get_available_cluster@cluster+1)& (0+255),w,b
 14930  01279E  A0D8               	btfss	status,0,c
 14931  0127A0  D005               	goto	l1760
 14932                           
 14933                           ; BSR set to: 0
 14934                           ;fat16.c: 166: {;fat16.c: 168: return 0x0000;
 14935  0127A2  0E00               	movlw	0
 14936  0127A4  6F8C               	movwf	(?__get_available_cluster+1)& (0+255),b
 14937  0127A6  0E00               	movlw	0
 14938  0127A8  6F8B               	movwf	?__get_available_cluster& (0+255),b
 14939                           
 14940                           ; BSR set to: 0
 14941  0127AA  0012               	return	
 14942  0127AC                     l1760:
 14943                           
 14944                           ; BSR set to: 0
 14945                           ;fat16.c: 170: else;fat16.c: 171: {;fat16.c: 173: return cluster;
 14946  0127AC  C08F  F08B         	movff	__get_available_cluster@cluster,?__get_available_cluster
 14947  0127B0  C090  F08C         	movff	__get_available_cluster@cluster+1,?__get_available_cluster+1
 14948  0127B4  0012               	return	
 14949  0127B6                     l1762:
 14950                           
 14951                           ; BSR set to: 0
 14952                           
 14953                           ; BSR set to: 0
 14954                           
 14955                           ; BSR set to: 0
 14956                           
 14957                           ; BSR set to: 0
 14958  0127B6  4B93               	infsnz	__get_available_cluster@sector& (0+255),f,b
 14959  0127B8  2B94               	incf	(__get_available_cluster@sector+1)& (0+255),f,b
 14960  0127BA  D7A3               	goto	L2
 14961  0127BC                     u12630:
 14962  0127BC                     l13787:
 14963                           
 14964                           ; BSR set to: 0
 14965                           ;fat16.c: 174: };fat16.c: 175: };fat16.c: 176: };fat16.c: 179: return 0x0000;
 14966  0127BC  0E00               	movlw	0
 14967  0127BE  6F8C               	movwf	(?__get_available_cluster+1)& (0+255),b
 14968  0127C0  0E00               	movlw	0
 14969  0127C2  6F8B               	movwf	?__get_available_cluster& (0+255),b
 14970  0127C4  0012               	return	
 14971  0127C6                     __end_of__get_available_cluster:
 14972                           	opt stack 0
 14973                           tblptru	equ	0xFF8
 14974                           tblptrh	equ	0xFF7
 14975                           tblptrl	equ	0xFF6
 14976                           tablat	equ	0xFF5
 14977                           prodh	equ	0xFF4
 14978                           prodl	equ	0xFF3
 14979                           postinc0	equ	0xFEE
 14980                           wreg	equ	0xFE8
 14981                           postdec1	equ	0xFE5
 14982                           plusw1	equ	0xFE3
 14983                           fsr1h	equ	0xFE2
 14984                           fsr1l	equ	0xFE1
 14985                           indf2	equ	0xFDF
 14986                           postinc2	equ	0xFDE
 14987                           plusw2	equ	0xFDB
 14988                           fsr2h	equ	0xFDA
 14989                           fsr2l	equ	0xFD9
 14990                           status	equ	0xFD8
 14991                           
 14992 ;; *************** function __get_available_offset_from_buffer *****************
 14993 ;; Defined at:
 14994 ;;		line 98 in file "fat16.c"
 14995 ;; Parameters:    Size  Location     Type
 14996 ;;  minimum_offs    2    0[BANK0 ] unsigned int 
 14997 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 14998 ;;		 -> buffer(512), 
 14999 ;; Auto vars:     Size  Location     Type
 15000 ;;  offset          2    6[BANK0 ] unsigned int 
 15001 ;; Return value:  Size  Location     Type
 15002 ;;                  2    0[BANK0 ] unsigned int 
 15003 ;; Registers used:
 15004 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15005 ;; Tracked objects:
 15006 ;;		On entry : 0/0
 15007 ;;		On exit  : 0/0
 15008 ;;		Unchanged: 0/0
 15009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15010 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15011 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15012 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15013 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15014 ;;Total ram usage:        8 bytes
 15015 ;; Hardware stack levels used:    1
 15016 ;; Hardware stack levels required when called:   10
 15017 ;; This function calls:
 15018 ;;		Nothing
 15019 ;; This function is called by:
 15020 ;;		__get_available_cluster
 15021 ;;		__make_cluster_chain
 15022 ;; This function uses a non-reentrant model
 15023 ;;
 15024                           
 15025                           	psect	text49
 15026  0144CA                     __ptext49:
 15027                           	opt stack 0
 15028  0144CA                     __get_available_offset_from_buffer:
 15029                           	opt stack 16
 15030                           
 15031                           ;fat16.c: 100: uint16_t offset;;fat16.c: 102: for(offset = minimum_offset; offset<512; o
      +                          ffset += 2)
 15032                           
 15033                           ; BSR set to: 0
 15034                           ;incstack = 0
 15035  0144CA  C060  F066         	movff	__get_available_offset_from_buffer@minimum_offset,__get_available_offset_from_buf
      +                          fer@offset
 15036  0144CE  C061  F067         	movff	__get_available_offset_from_buffer@minimum_offset+1,__get_available_offset_from_b
      +                          uffer@offset+1
 15037  0144D2  0E02               	movlw	2
 15038  0144D4  0100               	movlb	0	; () banked
 15039  0144D6  D022               	goto	L3
 15040  0144D8                     
 15041                           ; BSR set to: 0
 15042                           ;fat16.c: 103: {;fat16.c: 104: if((buffer[offset] == 0x00) && (buffer[offset + 1] == 0x0
      +                          0))
 15043                           
 15044                           ; BSR set to: 0
 15045  0144D8  5166               	movf	__get_available_offset_from_buffer@offset& (0+255),w,b
 15046  0144DA  2562               	addwf	__get_available_offset_from_buffer@buffer& (0+255),w,b
 15047  0144DC  6ED9               	movwf	fsr2l,c
 15048  0144DE  5167               	movf	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 15049  0144E0  2163               	addwfc	(__get_available_offset_from_buffer@buffer+1)& (0+255),w,b
 15050  0144E2  6EDA               	movwf	fsr2h,c
 15051  0144E4  50DF               	movf	indf2,w,c
 15052  0144E6  A4D8               	btfss	status,2,c
 15053  0144E8  D014               	goto	l1743
 15054                           
 15055                           ; BSR set to: 0
 15056  0144EA  0E01               	movlw	1
 15057  0144EC  2566               	addwf	__get_available_offset_from_buffer@offset& (0+255),w,b
 15058  0144EE  6F64               	movwf	??__get_available_offset_from_buffer& (0+255),b
 15059  0144F0  0E00               	movlw	0
 15060  0144F2  2167               	addwfc	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 15061  0144F4  6F65               	movwf	(??__get_available_offset_from_buffer+1)& (0+255),b
 15062  0144F6  5164               	movf	??__get_available_offset_from_buffer& (0+255),w,b
 15063  0144F8  2562               	addwf	__get_available_offset_from_buffer@buffer& (0+255),w,b
 15064  0144FA  6ED9               	movwf	fsr2l,c
 15065  0144FC  5165               	movf	(??__get_available_offset_from_buffer+1)& (0+255),w,b
 15066  0144FE  2163               	addwfc	(__get_available_offset_from_buffer@buffer+1)& (0+255),w,b
 15067  014500  6EDA               	movwf	fsr2h,c
 15068  014502  50DF               	movf	indf2,w,c
 15069  014504  A4D8               	btfss	status,2,c
 15070  014506  D005               	goto	l1743
 15071                           
 15072                           ; BSR set to: 0
 15073                           ;fat16.c: 105: {;fat16.c: 106: return offset;
 15074  014508  C066  F060         	movff	__get_available_offset_from_buffer@offset,?__get_available_offset_from_buffer
 15075  01450C  C067  F061         	movff	__get_available_offset_from_buffer@offset+1,?__get_available_offset_from_buffer+1
 15076  014510  0012               	return	
 15077  014512                     l1743:
 15078                           
 15079                           ; BSR set to: 0
 15080                           
 15081                           ; BSR set to: 0
 15082  014512  0E02               	movlw	2
 15083  014514  2766               	addwf	__get_available_offset_from_buffer@offset& (0+255),f,b
 15084  014516  0E00               	movlw	0
 15085  014518  2367               	addwfc	(__get_available_offset_from_buffer@offset+1)& (0+255),f,b
 15086  01451A  0E02               	movlw	2
 15087  01451C                     L3:
 15088  01451C  5D67               	subwf	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 15089  01451E  A0D8               	btfss	status,0,c
 15090  014520  D7DB               	goto	l1741
 15091                           
 15092                           ; BSR set to: 0
 15093                           ;fat16.c: 107: };fat16.c: 108: };fat16.c: 111: return 0xFFFF;
 15094  014522  6960               	setf	?__get_available_offset_from_buffer& (0+255),b
 15095  014524  6961               	setf	(?__get_available_offset_from_buffer+1)& (0+255),b
 15096                           
 15097                           ; BSR set to: 0
 15098  014526  0012               	return		;funcret
 15099  014528                     __end_of__get_available_offset_from_buffer:
 15100                           	opt stack 0
 15101                           tblptru	equ	0xFF8
 15102                           tblptrh	equ	0xFF7
 15103                           tblptrl	equ	0xFF6
 15104                           tablat	equ	0xFF5
 15105                           prodh	equ	0xFF4
 15106                           prodl	equ	0xFF3
 15107                           postinc0	equ	0xFEE
 15108                           wreg	equ	0xFE8
 15109                           postdec1	equ	0xFE5
 15110                           plusw1	equ	0xFE3
 15111                           fsr1h	equ	0xFE2
 15112                           fsr1l	equ	0xFE1
 15113                           indf2	equ	0xFDF
 15114                           postinc2	equ	0xFDE
 15115                           plusw2	equ	0xFDB
 15116                           fsr2h	equ	0xFDA
 15117                           fsr2l	equ	0xFD9
 15118                           status	equ	0xFD8
 15119                           
 15120 ;; *************** function __cluster_from_sector_and_offset *****************
 15121 ;; Defined at:
 15122 ;;		line 89 in file "fat16.c"
 15123 ;; Parameters:    Size  Location     Type
 15124 ;;  sector          2    0[BANK0 ] unsigned int 
 15125 ;;  offset          2    2[BANK0 ] unsigned int 
 15126 ;; Auto vars:     Size  Location     Type
 15127 ;;		None
 15128 ;; Return value:  Size  Location     Type
 15129 ;;                  2    0[BANK0 ] unsigned int 
 15130 ;; Registers used:
 15131 ;;		wreg, status,2, status,0
 15132 ;; Tracked objects:
 15133 ;;		On entry : 0/0
 15134 ;;		On exit  : 0/0
 15135 ;;		Unchanged: 0/0
 15136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15137 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15140 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15141 ;;Total ram usage:        4 bytes
 15142 ;; Hardware stack levels used:    1
 15143 ;; Hardware stack levels required when called:   10
 15144 ;; This function calls:
 15145 ;;		Nothing
 15146 ;; This function is called by:
 15147 ;;		__get_available_cluster
 15148 ;; This function uses a non-reentrant model
 15149 ;;
 15150                           
 15151                           	psect	text50
 15152  015608                     __ptext50:
 15153                           	opt stack 0
 15154  015608                     __cluster_from_sector_and_offset:
 15155                           	opt stack 15
 15156                           
 15157                           ;fat16.c: 91: offset >>= 1;
 15158                           
 15159                           ; BSR set to: 0
 15160                           ;incstack = 0
 15161  015608  0100               	movlb	0	; () banked
 15162  01560A  90D8               	bcf	status,0,c
 15163  01560C  3363               	rrcf	(__cluster_from_sector_and_offset@offset+1)& (0+255),f,b
 15164  01560E  3362               	rrcf	__cluster_from_sector_and_offset@offset& (0+255),f,b
 15165                           
 15166                           ; BSR set to: 0
 15167                           ;fat16.c: 92: sector -= 2;
 15168  015610  0E02               	movlw	2
 15169  015612  5F60               	subwf	__cluster_from_sector_and_offset@sector& (0+255),f,b
 15170  015614  0E00               	movlw	0
 15171  015616  5B61               	subwfb	(__cluster_from_sector_and_offset@sector+1)& (0+255),f,b
 15172                           
 15173                           ; BSR set to: 0
 15174                           ;fat16.c: 93: sector <<= 8;
 15175  015618  5160               	movf	__cluster_from_sector_and_offset@sector& (0+255),w,b
 15176  01561A  6F61               	movwf	(__cluster_from_sector_and_offset@sector+1)& (0+255),b
 15177  01561C  6B60               	clrf	__cluster_from_sector_and_offset@sector& (0+255),b
 15178                           
 15179                           ; BSR set to: 0
 15180                           ;fat16.c: 94: sector |= offset;
 15181  01561E  5162               	movf	__cluster_from_sector_and_offset@offset& (0+255),w,b
 15182  015620  1360               	iorwf	__cluster_from_sector_and_offset@sector& (0+255),f,b
 15183  015622  5163               	movf	(__cluster_from_sector_and_offset@offset+1)& (0+255),w,b
 15184  015624  1361               	iorwf	(__cluster_from_sector_and_offset@sector+1)& (0+255),f,b
 15185                           
 15186                           ; BSR set to: 0
 15187                           ;fat16.c: 95: return sector;
 15188  015626  C060  F060         	movff	__cluster_from_sector_and_offset@sector,?__cluster_from_sector_and_offset
 15189  01562A  C061  F061         	movff	__cluster_from_sector_and_offset@sector+1,?__cluster_from_sector_and_offset+1
 15190  01562E  0012               	return	
 15191  015630                     __end_of__cluster_from_sector_and_offset:
 15192                           	opt stack 0
 15193                           tblptru	equ	0xFF8
 15194                           tblptrh	equ	0xFF7
 15195                           tblptrl	equ	0xFF6
 15196                           tablat	equ	0xFF5
 15197                           prodh	equ	0xFF4
 15198                           prodl	equ	0xFF3
 15199                           postinc0	equ	0xFEE
 15200                           wreg	equ	0xFE8
 15201                           postdec1	equ	0xFE5
 15202                           plusw1	equ	0xFE3
 15203                           fsr1h	equ	0xFE2
 15204                           fsr1l	equ	0xFE1
 15205                           indf2	equ	0xFDF
 15206                           postinc2	equ	0xFDE
 15207                           plusw2	equ	0xFDB
 15208                           fsr2h	equ	0xFDA
 15209                           fsr2l	equ	0xFD9
 15210                           status	equ	0xFD8
 15211                           
 15212 ;; *************** function __get_time *****************
 15213 ;; Defined at:
 15214 ;;		line 376 in file "fat16.c"
 15215 ;; Parameters:    Size  Location     Type
 15216 ;;		None
 15217 ;; Auto vars:     Size  Location     Type
 15218 ;;		None
 15219 ;; Return value:  Size  Location     Type
 15220 ;;                  2    0[BANK0 ] unsigned int 
 15221 ;; Registers used:
 15222 ;;		wreg, status,2
 15223 ;; Tracked objects:
 15224 ;;		On entry : 0/0
 15225 ;;		On exit  : 0/0
 15226 ;;		Unchanged: 0/0
 15227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15228 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15231 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15232 ;;Total ram usage:        2 bytes
 15233 ;; Hardware stack levels used:    1
 15234 ;; Hardware stack levels required when called:   10
 15235 ;; This function calls:
 15236 ;;		Nothing
 15237 ;; This function is called by:
 15238 ;;		_fat_create_file
 15239 ;; This function uses a non-reentrant model
 15240 ;;
 15241                           
 15242                           	psect	text51
 15243  01592E                     __ptext51:
 15244                           	opt stack 0
 15245  01592E                     __get_time:
 15246                           	opt stack 17
 15247                           
 15248                           ;fat16.c: 388: return 0x0000;
 15249                           
 15250                           ; BSR set to: 0
 15251                           ;incstack = 0
 15252  01592E  0E00               	movlw	0
 15253  015930  0100               	movlb	0	; () banked
 15254  015932  6F61               	movwf	(?__get_time+1)& (0+255),b
 15255  015934  0E00               	movlw	0
 15256  015936  6F60               	movwf	?__get_time& (0+255),b
 15257  015938  0012               	return	
 15258  01593A                     __end_of__get_time:
 15259                           	opt stack 0
 15260                           tblptru	equ	0xFF8
 15261                           tblptrh	equ	0xFF7
 15262                           tblptrl	equ	0xFF6
 15263                           tablat	equ	0xFF5
 15264                           prodh	equ	0xFF4
 15265                           prodl	equ	0xFF3
 15266                           postinc0	equ	0xFEE
 15267                           wreg	equ	0xFE8
 15268                           postdec1	equ	0xFE5
 15269                           plusw1	equ	0xFE3
 15270                           fsr1h	equ	0xFE2
 15271                           fsr1l	equ	0xFE1
 15272                           indf2	equ	0xFDF
 15273                           postinc2	equ	0xFDE
 15274                           plusw2	equ	0xFDB
 15275                           fsr2h	equ	0xFDA
 15276                           fsr2l	equ	0xFD9
 15277                           status	equ	0xFD8
 15278                           
 15279 ;; *************** function __get_date *****************
 15280 ;; Defined at:
 15281 ;;		line 392 in file "fat16.c"
 15282 ;; Parameters:    Size  Location     Type
 15283 ;;		None
 15284 ;; Auto vars:     Size  Location     Type
 15285 ;;		None
 15286 ;; Return value:  Size  Location     Type
 15287 ;;                  2    0[BANK0 ] unsigned int 
 15288 ;; Registers used:
 15289 ;;		wreg, status,2
 15290 ;; Tracked objects:
 15291 ;;		On entry : 0/0
 15292 ;;		On exit  : 0/0
 15293 ;;		Unchanged: 0/0
 15294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15295 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15298 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15299 ;;Total ram usage:        2 bytes
 15300 ;; Hardware stack levels used:    1
 15301 ;; Hardware stack levels required when called:   10
 15302 ;; This function calls:
 15303 ;;		Nothing
 15304 ;; This function is called by:
 15305 ;;		_fat_create_file
 15306 ;; This function uses a non-reentrant model
 15307 ;;
 15308                           
 15309                           	psect	text52
 15310  01593A                     __ptext52:
 15311                           	opt stack 0
 15312  01593A                     __get_date:
 15313                           	opt stack 17
 15314                           
 15315                           ;fat16.c: 404: return 0x0000;
 15316                           
 15317                           ; BSR set to: 0
 15318                           ;incstack = 0
 15319  01593A  0E00               	movlw	0
 15320  01593C  0100               	movlb	0	; () banked
 15321  01593E  6F61               	movwf	(?__get_date+1)& (0+255),b
 15322  015940  0E00               	movlw	0
 15323  015942  6F60               	movwf	?__get_date& (0+255),b
 15324  015944  0012               	return	
 15325  015946                     __end_of__get_date:
 15326                           	opt stack 0
 15327                           tblptru	equ	0xFF8
 15328                           tblptrh	equ	0xFF7
 15329                           tblptrl	equ	0xFF6
 15330                           tablat	equ	0xFF5
 15331                           prodh	equ	0xFF4
 15332                           prodl	equ	0xFF3
 15333                           postinc0	equ	0xFEE
 15334                           wreg	equ	0xFE8
 15335                           postdec1	equ	0xFE5
 15336                           plusw1	equ	0xFE3
 15337                           fsr1h	equ	0xFE2
 15338                           fsr1l	equ	0xFE1
 15339                           indf2	equ	0xFDF
 15340                           postinc2	equ	0xFDE
 15341                           plusw2	equ	0xFDB
 15342                           fsr2h	equ	0xFDA
 15343                           fsr2l	equ	0xFD9
 15344                           status	equ	0xFD8
 15345                           
 15346 ;; *************** function __get_available_root_entry *****************
 15347 ;; Defined at:
 15348 ;;		line 442 in file "fat16.c"
 15349 ;; Parameters:    Size  Location     Type
 15350 ;;		None
 15351 ;; Auto vars:     Size  Location     Type
 15352 ;;  file_number     1   53[BANK0 ] unsigned char 
 15353 ;; Return value:  Size  Location     Type
 15354 ;;                  1    wreg      unsigned char 
 15355 ;; Registers used:
 15356 ;;		wreg, status,2, status,0, cstack
 15357 ;; Tracked objects:
 15358 ;;		On entry : 0/0
 15359 ;;		On exit  : 0/0
 15360 ;;		Unchanged: 0/0
 15361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15363 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15365 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15366 ;;Total ram usage:        1 bytes
 15367 ;; Hardware stack levels used:    1
 15368 ;; Hardware stack levels required when called:   16
 15369 ;; This function calls:
 15370 ;;		__root_is_available
 15371 ;; This function is called by:
 15372 ;;		_fat_create_file
 15373 ;; This function uses a non-reentrant model
 15374 ;;
 15375                           
 15376                           	psect	text53
 15377  01558C                     __ptext53:
 15378                           	opt stack 0
 15379  01558C                     __get_available_root_entry:
 15380                           	opt stack 11
 15381                           
 15382                           ;fat16.c: 444: uint8_t file_number;;fat16.c: 446: for(file_number=0; file_number<64; ++f
      +                          ile_number)
 15383                           
 15384                           ; BSR set to: 0
 15385                           ;incstack = 0
 15386  01558C  0E00               	movlw	0
 15387  01558E  0100               	movlb	0	; () banked
 15388  015590  6F95               	movwf	__get_available_root_entry@file_number& (0+255),b
 15389  015592                     l14359:
 15390                           
 15391                           ; BSR set to: 0
 15392  015592  0E3F               	movlw	63
 15393  015594  6595               	cpfsgt	__get_available_root_entry@file_number& (0+255),b
 15394  015596  D001               	goto	l1814
 15395  015598  D00C               	goto	u13340
 15396  01559A                     l1814:
 15397                           
 15398                           ; BSR set to: 0
 15399                           ;fat16.c: 447: {;fat16.c: 448: if(_root_is_available(file_number))
 15400                           
 15401                           ; BSR set to: 0
 15402  01559A  5195               	movf	__get_available_root_entry@file_number& (0+255),w,b
 15403  01559C  EC3E  F0A0         	call	__root_is_available
 15404  0155A0  0900               	iorlw	0
 15405  0155A2  B4D8               	btfsc	status,2,c
 15406  0155A4  D003               	goto	l1816
 15407                           
 15408                           ;fat16.c: 449: {;fat16.c: 450: return file_number;
 15409  0155A6  0100               	movlb	0	; () banked
 15410  0155A8  5195               	movf	__get_available_root_entry@file_number& (0+255),w,b
 15411                           
 15412                           ; BSR set to: 0
 15413  0155AA  0012               	return	
 15414  0155AC                     l1816:
 15415                           
 15416                           ; BSR set to: 0
 15417  0155AC  0100               	movlb	0	; () banked
 15418  0155AE  2B95               	incf	__get_available_root_entry@file_number& (0+255),f,b
 15419  0155B0  D7F0               	goto	l14359
 15420  0155B2                     u13340:
 15421                           
 15422                           ; BSR set to: 0
 15423                           ;fat16.c: 451: };fat16.c: 452: };fat16.c: 453: return 0xFF;
 15424                           
 15425                           ; BSR set to: 0
 15426  0155B2  0EFF               	movlw	255
 15427  0155B4  0012               	return	
 15428  0155B6                     __end_of__get_available_root_entry:
 15429                           	opt stack 0
 15430                           tblptru	equ	0xFF8
 15431                           tblptrh	equ	0xFF7
 15432                           tblptrl	equ	0xFF6
 15433                           tablat	equ	0xFF5
 15434                           prodh	equ	0xFF4
 15435                           prodl	equ	0xFF3
 15436                           postinc0	equ	0xFEE
 15437                           wreg	equ	0xFE8
 15438                           postdec1	equ	0xFE5
 15439                           plusw1	equ	0xFE3
 15440                           fsr1h	equ	0xFE2
 15441                           fsr1l	equ	0xFE1
 15442                           indf2	equ	0xFDF
 15443                           postinc2	equ	0xFDE
 15444                           plusw2	equ	0xFDB
 15445                           fsr2h	equ	0xFDA
 15446                           fsr2l	equ	0xFD9
 15447                           status	equ	0xFD8
 15448                           
 15449 ;; *************** function __add_item *****************
 15450 ;; Defined at:
 15451 ;;		line 39 in file "config_file.c"
 15452 ;; Parameters:    Size  Location     Type
 15453 ;;  item_string     2   36[BANK0 ] PTR unsigned char 
 15454 ;;		 -> ccw_limit_string(10), use_ccw_limit_string(14), cw_limit_string(9), use_cw_limit_string(13), 
 15455 ;;		 -> beep_duration_string(14), maximum_speed_manual_string(21), initial_speed_manual_string(21), maximum_speed_arc_st
      +ring(18), 
 15456 ;;		 -> initial_speed_arc_string(18), maximum_speed_string(14), minimum_speed_string(14), overshoot_cost_in_steps_string
      +(24), 
 15457 ;;		 -> inverse_direction_string(18), overshoot_in_steps_string(19), full_circle_in_steps_string(21), 
 15458 ;;  value           4   38[BANK0 ] long 
 15459 ;;  buffer          2   42[BANK0 ] PTR unsigned char 
 15460 ;;		 -> ConfigFile_buffer(512), 
 15461 ;; Auto vars:     Size  Location     Type
 15462 ;;  length          1   46[BANK0 ] unsigned char 
 15463 ;; Return value:  Size  Location     Type
 15464 ;;                  1    wreg      unsigned char 
 15465 ;; Registers used:
 15466 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15467 ;; Tracked objects:
 15468 ;;		On entry : 0/0
 15469 ;;		On exit  : 0/0
 15470 ;;		Unchanged: 0/0
 15471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15472 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15473 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15474 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15475 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15476 ;;Total ram usage:       11 bytes
 15477 ;; Hardware stack levels used:    1
 15478 ;; Hardware stack levels required when called:   13
 15479 ;; This function calls:
 15480 ;;		_ltoa
 15481 ;; This function is called by:
 15482 ;;		_configFile_write
 15483 ;; This function uses a non-reentrant model
 15484 ;;
 15485                           
 15486                           	psect	text54
 15487  011614                     __ptext54:
 15488                           	opt stack 0
 15489  011614                     __add_item:
 15490                           	opt stack 15
 15491                           
 15492                           ;config_file.c: 41: uint8_t length = 0;
 15493                           
 15494                           ; BSR set to: 0
 15495                           ;incstack = 0
 15496  011614  0E00               	movlw	0
 15497  011616  0100               	movlb	0	; () banked
 15498  011618  6F8E               	movwf	__add_item@length& (0+255),b
 15499                           
 15500                           ;config_file.c: 44: while(item_string[length])
 15501  01161A  D01C               	goto	l2912
 15502  01161C                     
 15503                           ; BSR set to: 0
 15504                           ;config_file.c: 45: {;config_file.c: 46: buffer[length] = item_string[length];
 15505                           
 15506                           ; BSR set to: 0
 15507  01161C  518E               	movf	__add_item@length& (0+255),w,b
 15508  01161E  0D01               	mullw	1
 15509  011620  C084  F08C         	movff	__add_item@item_string,??__add_item
 15510  011624  C085  F08D         	movff	__add_item@item_string+1,??__add_item+1
 15511  011628  50F3               	movf	prodl,w,c
 15512  01162A  278C               	addwf	??__add_item& (0+255),f,b
 15513  01162C  50F4               	movf	prodh,w,c
 15514  01162E  238D               	addwfc	(??__add_item+1)& (0+255),f,b
 15515  011630  C08C  FFF6         	movff	??__add_item,tblptrl
 15516  011634  C08D  FFF7         	movff	??__add_item+1,tblptrh
 15517  011638                     	if	0	;tblptru may be non-zero
 15518  011638                     	endif
 15519  011638                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15520  011638  0E00               	movlw	low (__mediumconst shr (0+16))
 15521  01163A  6EF8               	movwf	tblptru,c
 15522  01163C                     	endif
 15523  01163C  518E               	movf	__add_item@length& (0+255),w,b
 15524  01163E  0D01               	mullw	1
 15525  011640  50F3               	movf	prodl,w,c
 15526  011642  258A               	addwf	__add_item@buffer& (0+255),w,b
 15527  011644  6ED9               	movwf	fsr2l,c
 15528  011646  50F4               	movf	prodh,w,c
 15529  011648  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 15530  01164A  6EDA               	movwf	fsr2h,c
 15531  01164C  0008               	tblrd		*
 15532  01164E  CFF5 FFDF          	movff	tablat,indf2
 15533                           
 15534                           ; BSR set to: 0
 15535                           ;config_file.c: 47: ++length;
 15536  011652  2B8E               	incf	__add_item@length& (0+255),f,b
 15537  011654                     l2912:
 15538                           
 15539                           ; BSR set to: 0
 15540                           
 15541                           ; BSR set to: 0
 15542  011654  518E               	movf	__add_item@length& (0+255),w,b
 15543  011656  0D01               	mullw	1
 15544  011658  C084  F08C         	movff	__add_item@item_string,??__add_item
 15545  01165C  C085  F08D         	movff	__add_item@item_string+1,??__add_item+1
 15546  011660  50F3               	movf	prodl,w,c
 15547  011662  278C               	addwf	??__add_item& (0+255),f,b
 15548  011664  50F4               	movf	prodh,w,c
 15549  011666  238D               	addwfc	(??__add_item+1)& (0+255),f,b
 15550  011668  C08C  FFF6         	movff	??__add_item,tblptrl
 15551  01166C  C08D  FFF7         	movff	??__add_item+1,tblptrh
 15552  011670                     	if	0	;tblptru may be non-zero
 15553  011670                     	endif
 15554  011670                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15555  011670  0E00               	movlw	low (__mediumconst shr (0+16))
 15556  011672  6EF8               	movwf	tblptru,c
 15557  011674                     	endif
 15558  011674  0008               	tblrd		*
 15559  011676  50F5               	movf	tablat,w,c
 15560  011678  0900               	iorlw	0
 15561  01167A  A4D8               	btfss	status,2,c
 15562  01167C  D7CF               	goto	l2913
 15563                           
 15564                           ; BSR set to: 0
 15565                           ;config_file.c: 48: };config_file.c: 51: buffer[length++] = '=';
 15566                           
 15567                           ; BSR set to: 0
 15568  01167E  518E               	movf	__add_item@length& (0+255),w,b
 15569  011680  0D01               	mullw	1
 15570  011682  50F3               	movf	prodl,w,c
 15571  011684  258A               	addwf	__add_item@buffer& (0+255),w,b
 15572  011686  6ED9               	movwf	fsr2l,c
 15573  011688  50F4               	movf	prodh,w,c
 15574  01168A  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 15575  01168C  6EDA               	movwf	fsr2h,c
 15576  01168E  0E3D               	movlw	61
 15577  011690  6EDF               	movwf	indf2,c
 15578                           
 15579                           ; BSR set to: 0
 15580  011692  2B8E               	incf	__add_item@length& (0+255),f,b
 15581                           
 15582                           ; BSR set to: 0
 15583                           ;config_file.c: 54: ltoa(&buffer[length], value, 10);
 15584  011694  518E               	movf	__add_item@length& (0+255),w,b
 15585  011696  0D01               	mullw	1
 15586  011698  50F3               	movf	prodl,w,c
 15587  01169A  258A               	addwf	__add_item@buffer& (0+255),w,b
 15588  01169C  6F7A               	movwf	ltoa@buf& (0+255),b
 15589  01169E  50F4               	movf	prodh,w,c
 15590  0116A0  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 15591  0116A2  6F7B               	movwf	(ltoa@buf+1)& (0+255),b
 15592  0116A4  C086  F07C         	movff	__add_item@value,ltoa@val
 15593  0116A8  C087  F07D         	movff	__add_item@value+1,ltoa@val+1
 15594  0116AC  C088  F07E         	movff	__add_item@value+2,ltoa@val+2
 15595  0116B0  C089  F07F         	movff	__add_item@value+3,ltoa@val+3
 15596  0116B4  0E00               	movlw	0
 15597  0116B6  6F81               	movwf	(ltoa@base+1)& (0+255),b
 15598  0116B8  0E0A               	movlw	10
 15599  0116BA  6F80               	movwf	ltoa@base& (0+255),b
 15600  0116BC  EC2B  F0A5         	call	_ltoa	;wreg free
 15601                           
 15602                           ;config_file.c: 55: while(buffer[length])
 15603  0116C0  D002               	goto	l2915
 15604  0116C2                     
 15605                           ;config_file.c: 56: {;config_file.c: 57: ++length;
 15606  0116C2  0100               	movlb	0	; () banked
 15607  0116C4  2B8E               	incf	__add_item@length& (0+255),f,b
 15608  0116C6                     l2915:
 15609                           
 15610                           ; BSR set to: 0
 15611  0116C6  0100               	movlb	0	; () banked
 15612  0116C8  518E               	movf	__add_item@length& (0+255),w,b
 15613  0116CA  0D01               	mullw	1
 15614  0116CC  50F3               	movf	prodl,w,c
 15615  0116CE  258A               	addwf	__add_item@buffer& (0+255),w,b
 15616  0116D0  6ED9               	movwf	fsr2l,c
 15617  0116D2  50F4               	movf	prodh,w,c
 15618  0116D4  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 15619  0116D6  6EDA               	movwf	fsr2h,c
 15620  0116D8  50DF               	movf	indf2,w,c
 15621  0116DA  A4D8               	btfss	status,2,c
 15622  0116DC  D7F2               	goto	l2916
 15623                           
 15624                           ; BSR set to: 0
 15625                           ;config_file.c: 58: };config_file.c: 61: buffer[length++] = '\r';
 15626                           
 15627                           ; BSR set to: 0
 15628  0116DE  518E               	movf	__add_item@length& (0+255),w,b
 15629  0116E0  0D01               	mullw	1
 15630  0116E2  50F3               	movf	prodl,w,c
 15631  0116E4  258A               	addwf	__add_item@buffer& (0+255),w,b
 15632  0116E6  6ED9               	movwf	fsr2l,c
 15633  0116E8  50F4               	movf	prodh,w,c
 15634  0116EA  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 15635  0116EC  6EDA               	movwf	fsr2h,c
 15636  0116EE  0E0D               	movlw	13
 15637  0116F0  6EDF               	movwf	indf2,c
 15638                           
 15639                           ; BSR set to: 0
 15640  0116F2  2B8E               	incf	__add_item@length& (0+255),f,b
 15641                           
 15642                           ; BSR set to: 0
 15643                           ;config_file.c: 62: buffer[length++] = '\n';
 15644  0116F4  518E               	movf	__add_item@length& (0+255),w,b
 15645  0116F6  0D01               	mullw	1
 15646  0116F8  50F3               	movf	prodl,w,c
 15647  0116FA  258A               	addwf	__add_item@buffer& (0+255),w,b
 15648  0116FC  6ED9               	movwf	fsr2l,c
 15649  0116FE  50F4               	movf	prodh,w,c
 15650  011700  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 15651  011702  6EDA               	movwf	fsr2h,c
 15652  011704  0E0A               	movlw	10
 15653  011706  6EDF               	movwf	indf2,c
 15654  011708  2B8E               	incf	__add_item@length& (0+255),f,b
 15655                           
 15656                           ; BSR set to: 0
 15657                           ;config_file.c: 65: return length;
 15658  01170A  518E               	movf	__add_item@length& (0+255),w,b
 15659  01170C  0012               	return	
 15660  01170E                     __end_of__add_item:
 15661                           	opt stack 0
 15662                           tblptru	equ	0xFF8
 15663                           tblptrh	equ	0xFF7
 15664                           tblptrl	equ	0xFF6
 15665                           tablat	equ	0xFF5
 15666                           prodh	equ	0xFF4
 15667                           prodl	equ	0xFF3
 15668                           postinc0	equ	0xFEE
 15669                           wreg	equ	0xFE8
 15670                           postdec1	equ	0xFE5
 15671                           plusw1	equ	0xFE3
 15672                           fsr1h	equ	0xFE2
 15673                           fsr1l	equ	0xFE1
 15674                           indf2	equ	0xFDF
 15675                           postinc2	equ	0xFDE
 15676                           plusw2	equ	0xFDB
 15677                           fsr2h	equ	0xFDA
 15678                           fsr2l	equ	0xFD9
 15679                           status	equ	0xFD8
 15680                           
 15681 ;; *************** function _ltoa *****************
 15682 ;; Defined at:
 15683 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\ltoa.c"
 15684 ;; Parameters:    Size  Location     Type
 15685 ;;  buf             2   26[BANK0 ] PTR unsigned char 
 15686 ;;		 -> ConfigFile_buffer(512), 
 15687 ;;  val             4   28[BANK0 ] long 
 15688 ;;  base            2   32[BANK0 ] int 
 15689 ;; Auto vars:     Size  Location     Type
 15690 ;;  cp              2   34[BANK0 ] PTR unsigned char 
 15691 ;;		 -> ConfigFile_buffer(512), 
 15692 ;; Return value:  Size  Location     Type
 15693 ;;                  2   26[BANK0 ] PTR unsigned char 
 15694 ;; Registers used:
 15695 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15696 ;; Tracked objects:
 15697 ;;		On entry : 0/0
 15698 ;;		On exit  : 0/0
 15699 ;;		Unchanged: 0/0
 15700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15701 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15702 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15704 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15705 ;;Total ram usage:       10 bytes
 15706 ;; Hardware stack levels used:    1
 15707 ;; Hardware stack levels required when called:   12
 15708 ;; This function calls:
 15709 ;;		_ultoa
 15710 ;; This function is called by:
 15711 ;;		__add_item
 15712 ;; This function uses a non-reentrant model
 15713 ;;
 15714                           
 15715                           	psect	text55
 15716  014A56                     __ptext55:
 15717                           	opt stack 0
 15718  014A56                     _ltoa:
 15719                           	opt stack 15
 15720                           
 15721                           ; BSR set to: 0
 15722                           ;incstack = 0
 15723  014A56  C07A  F082         	movff	ltoa@buf,ltoa@cp
 15724  014A5A  C07B  F083         	movff	ltoa@buf+1,ltoa@cp+1
 15725  014A5E  0100               	movlb	0	; () banked
 15726  014A60  AF7F               	btfss	(ltoa@val+3)& (0+255),7,b
 15727  014A62  D010               	goto	l3683
 15728                           
 15729                           ; BSR set to: 0
 15730  014A64  C07A  FFD9         	movff	ltoa@buf,fsr2l
 15731  014A68  C07B  FFDA         	movff	ltoa@buf+1,fsr2h
 15732  014A6C  0E2D               	movlw	45
 15733  014A6E  6EDF               	movwf	indf2,c
 15734                           
 15735                           ; BSR set to: 0
 15736  014A70  4B7A               	infsnz	ltoa@buf& (0+255),f,b
 15737  014A72  2B7B               	incf	(ltoa@buf+1)& (0+255),f,b
 15738                           
 15739                           ; BSR set to: 0
 15740  014A74  1F7F               	comf	(ltoa@val+3)& (0+255),f,b
 15741  014A76  1F7E               	comf	(ltoa@val+2)& (0+255),f,b
 15742  014A78  1F7D               	comf	(ltoa@val+1)& (0+255),f,b
 15743  014A7A  6D7C               	negf	ltoa@val& (0+255),b
 15744  014A7C  0E00               	movlw	0
 15745  014A7E  237D               	addwfc	(ltoa@val+1)& (0+255),f,b
 15746  014A80  237E               	addwfc	(ltoa@val+2)& (0+255),f,b
 15747  014A82  237F               	addwfc	(ltoa@val+3)& (0+255),f,b
 15748  014A84                     l3683:
 15749                           
 15750                           ; BSR set to: 0
 15751                           
 15752                           ; BSR set to: 0
 15753  014A84  C07A  F06D         	movff	ltoa@buf,ultoa@buf
 15754  014A88  C07B  F06E         	movff	ltoa@buf+1,ultoa@buf+1
 15755  014A8C  C07C  F06F         	movff	ltoa@val,ultoa@val
 15756  014A90  C07D  F070         	movff	ltoa@val+1,ultoa@val+1
 15757  014A94  C07E  F071         	movff	ltoa@val+2,ultoa@val+2
 15758  014A98  C07F  F072         	movff	ltoa@val+3,ultoa@val+3
 15759  014A9C  C080  F073         	movff	ltoa@base,ultoa@base
 15760  014AA0  C081  F074         	movff	ltoa@base+1,ultoa@base+1
 15761  014AA4  EC0D  F08A         	call	_ultoa	;wreg free
 15762  014AA8  0012               	return	
 15763  014AAA                     __end_of_ltoa:
 15764                           	opt stack 0
 15765                           tblptru	equ	0xFF8
 15766                           tblptrh	equ	0xFF7
 15767                           tblptrl	equ	0xFF6
 15768                           tablat	equ	0xFF5
 15769                           prodh	equ	0xFF4
 15770                           prodl	equ	0xFF3
 15771                           postinc0	equ	0xFEE
 15772                           wreg	equ	0xFE8
 15773                           postdec1	equ	0xFE5
 15774                           plusw1	equ	0xFE3
 15775                           fsr1h	equ	0xFE2
 15776                           fsr1l	equ	0xFE1
 15777                           indf2	equ	0xFDF
 15778                           postinc2	equ	0xFDE
 15779                           plusw2	equ	0xFDB
 15780                           fsr2h	equ	0xFDA
 15781                           fsr2l	equ	0xFD9
 15782                           status	equ	0xFD8
 15783                           
 15784 ;; *************** function _ultoa *****************
 15785 ;; Defined at:
 15786 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\ltoa.c"
 15787 ;; Parameters:    Size  Location     Type
 15788 ;;  buf             2   13[BANK0 ] PTR unsigned char 
 15789 ;;		 -> ConfigFile_buffer(512), 
 15790 ;;  val             4   15[BANK0 ] unsigned long 
 15791 ;;  base            2   19[BANK0 ] int 
 15792 ;; Auto vars:     Size  Location     Type
 15793 ;;  v               4   21[BANK0 ] unsigned long 
 15794 ;;  c               1   25[BANK0 ] unsigned char 
 15795 ;; Return value:  Size  Location     Type
 15796 ;;                  2   13[BANK0 ] PTR unsigned char 
 15797 ;; Registers used:
 15798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15799 ;; Tracked objects:
 15800 ;;		On entry : 0/0
 15801 ;;		On exit  : 0/0
 15802 ;;		Unchanged: 0/0
 15803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15804 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15805 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15807 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15808 ;;Total ram usage:       13 bytes
 15809 ;; Hardware stack levels used:    1
 15810 ;; Hardware stack levels required when called:   11
 15811 ;; This function calls:
 15812 ;;		___lldiv
 15813 ;;		___llmod
 15814 ;; This function is called by:
 15815 ;;		_ltoa
 15816 ;; This function uses a non-reentrant model
 15817 ;;
 15818                           
 15819                           	psect	text56
 15820  01141A                     __ptext56:
 15821                           	opt stack 0
 15822  01141A                     _ultoa:
 15823                           	opt stack 15
 15824                           
 15825                           ;incstack = 0
 15826  01141A  C06F  F075         	movff	ultoa@val,ultoa@v
 15827  01141E  C070  F076         	movff	ultoa@val+1,ultoa@v+1
 15828  011422  C071  F077         	movff	ultoa@val+2,ultoa@v+2
 15829  011426  C072  F078         	movff	ultoa@val+3,ultoa@v+3
 15830  01142A  C075  F060         	movff	ultoa@v,___lldiv@dividend
 15831  01142E  C076  F061         	movff	ultoa@v+1,___lldiv@dividend+1
 15832  011432  C077  F062         	movff	ultoa@v+2,___lldiv@dividend+2
 15833  011436  C078  F063         	movff	ultoa@v+3,___lldiv@dividend+3
 15834  01143A  C073  F064         	movff	ultoa@base,___lldiv@divisor
 15835  01143E  C074  F065         	movff	ultoa@base+1,___lldiv@divisor+1
 15836  011442  0100               	movlb	0	; () banked
 15837  011444  0E00               	movlw	0
 15838  011446  BF65               	btfsc	(___lldiv@divisor+1)& (0+255),7,b
 15839  011448  0EFF               	movlw	-1
 15840  01144A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 15841  01144C  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 15842  01144E  ECB7  F09C         	call	___lldiv	;wreg free
 15843  011452  C060  F075         	movff	?___lldiv,ultoa@v
 15844  011456  C061  F076         	movff	?___lldiv+1,ultoa@v+1
 15845  01145A  C062  F077         	movff	?___lldiv+2,ultoa@v+2
 15846  01145E  C063  F078         	movff	?___lldiv+3,ultoa@v+3
 15847  011462  0100               	movlb	0	; () banked
 15848  011464  4B6D               	infsnz	ultoa@buf& (0+255),f,b
 15849  011466  2B6E               	incf	(ultoa@buf+1)& (0+255),f,b
 15850                           
 15851                           ; BSR set to: 0
 15852  011468  5175               	movf	ultoa@v& (0+255),w,b
 15853  01146A  1176               	iorwf	(ultoa@v+1)& (0+255),w,b
 15854  01146C  1177               	iorwf	(ultoa@v+2)& (0+255),w,b
 15855  01146E  1178               	iorwf	(ultoa@v+3)& (0+255),w,b
 15856  011470  A4D8               	btfss	status,2,c
 15857  011472  D7DB               	goto	l3687
 15858                           
 15859                           ; BSR set to: 0
 15860                           
 15861                           ; BSR set to: 0
 15862  011474  C06D  FFD9         	movff	ultoa@buf,fsr2l
 15863  011478  C06E  FFDA         	movff	ultoa@buf+1,fsr2h
 15864  01147C  0E00               	movlw	0
 15865  01147E  6EDF               	movwf	indf2,c
 15866                           
 15867                           ; BSR set to: 0
 15868  011480  076D               	decf	ultoa@buf& (0+255),f,b
 15869  011482  A0D8               	btfss	status,0,c
 15870  011484  076E               	decf	(ultoa@buf+1)& (0+255),f,b
 15871  011486                     
 15872                           ; BSR set to: 0
 15873                           
 15874                           ; BSR set to: 0
 15875  011486  C06F  F060         	movff	ultoa@val,___llmod@dividend
 15876  01148A  C070  F061         	movff	ultoa@val+1,___llmod@dividend+1
 15877  01148E  C071  F062         	movff	ultoa@val+2,___llmod@dividend+2
 15878  011492  C072  F063         	movff	ultoa@val+3,___llmod@dividend+3
 15879  011496  C073  F064         	movff	ultoa@base,___llmod@divisor
 15880  01149A  C074  F065         	movff	ultoa@base+1,___llmod@divisor+1
 15881  01149E  0E00               	movlw	0
 15882  0114A0  BF65               	btfsc	(___llmod@divisor+1)& (0+255),7,b
 15883  0114A2  0EFF               	movlw	-1
 15884  0114A4  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
 15885  0114A6  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
 15886  0114A8  ECA9  F0A0         	call	___llmod	;wreg free
 15887  0114AC  0100               	movlb	0	; () banked
 15888  0114AE  5160               	movf	?___llmod& (0+255),w,b
 15889  0114B0  6F79               	movwf	ultoa@c& (0+255),b
 15890                           
 15891                           ; BSR set to: 0
 15892  0114B2  C06F  F060         	movff	ultoa@val,___lldiv@dividend
 15893  0114B6  C070  F061         	movff	ultoa@val+1,___lldiv@dividend+1
 15894  0114BA  C071  F062         	movff	ultoa@val+2,___lldiv@dividend+2
 15895  0114BE  C072  F063         	movff	ultoa@val+3,___lldiv@dividend+3
 15896  0114C2  C073  F064         	movff	ultoa@base,___lldiv@divisor
 15897  0114C6  C074  F065         	movff	ultoa@base+1,___lldiv@divisor+1
 15898  0114CA  0E00               	movlw	0
 15899  0114CC  BF65               	btfsc	(___lldiv@divisor+1)& (0+255),7,b
 15900  0114CE  0EFF               	movlw	-1
 15901  0114D0  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 15902  0114D2  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 15903  0114D4  ECB7  F09C         	call	___lldiv	;wreg free
 15904  0114D8  C060  F06F         	movff	?___lldiv,ultoa@val
 15905  0114DC  C061  F070         	movff	?___lldiv+1,ultoa@val+1
 15906  0114E0  C062  F071         	movff	?___lldiv+2,ultoa@val+2
 15907  0114E4  C063  F072         	movff	?___lldiv+3,ultoa@val+3
 15908  0114E8  0E09               	movlw	9
 15909  0114EA  0100               	movlb	0	; () banked
 15910  0114EC  6579               	cpfsgt	ultoa@c& (0+255),b
 15911  0114EE  D002               	goto	l3690
 15912                           
 15913                           ; BSR set to: 0
 15914  0114F0  0E07               	movlw	7
 15915  0114F2  2779               	addwf	ultoa@c& (0+255),f,b
 15916  0114F4                     l3690:
 15917                           
 15918                           ; BSR set to: 0
 15919  0114F4  0E30               	movlw	48
 15920  0114F6  2779               	addwf	ultoa@c& (0+255),f,b
 15921                           
 15922                           ; BSR set to: 0
 15923  0114F8  C06D  FFD9         	movff	ultoa@buf,fsr2l
 15924  0114FC  C06E  FFDA         	movff	ultoa@buf+1,fsr2h
 15925  011500  C079  FFDF         	movff	ultoa@c,indf2
 15926                           
 15927                           ; BSR set to: 0
 15928  011504  076D               	decf	ultoa@buf& (0+255),f,b
 15929  011506  A0D8               	btfss	status,0,c
 15930  011508  076E               	decf	(ultoa@buf+1)& (0+255),f,b
 15931                           
 15932                           ; BSR set to: 0
 15933  01150A  516F               	movf	ultoa@val& (0+255),w,b
 15934  01150C  1170               	iorwf	(ultoa@val+1)& (0+255),w,b
 15935  01150E  1171               	iorwf	(ultoa@val+2)& (0+255),w,b
 15936  011510  1172               	iorwf	(ultoa@val+3)& (0+255),w,b
 15937  011512  B4D8               	btfsc	status,2,c
 15938  011514  0012               	return	
 15939  011516  D7B7               	goto	l3689
 15940  011518                     __end_of_ultoa:
 15941                           	opt stack 0
 15942                           tblptru	equ	0xFF8
 15943                           tblptrh	equ	0xFF7
 15944                           tblptrl	equ	0xFF6
 15945                           tablat	equ	0xFF5
 15946                           prodh	equ	0xFF4
 15947                           prodl	equ	0xFF3
 15948                           postinc0	equ	0xFEE
 15949                           wreg	equ	0xFE8
 15950                           postdec1	equ	0xFE5
 15951                           plusw1	equ	0xFE3
 15952                           fsr1h	equ	0xFE2
 15953                           fsr1l	equ	0xFE1
 15954                           indf2	equ	0xFDF
 15955                           postinc2	equ	0xFDE
 15956                           plusw2	equ	0xFDB
 15957                           fsr2h	equ	0xFDA
 15958                           fsr2l	equ	0xFD9
 15959                           status	equ	0xFD8
 15960                           
 15961 ;; *************** function ___llmod *****************
 15962 ;; Defined at:
 15963 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\llmod.c"
 15964 ;; Parameters:    Size  Location     Type
 15965 ;;  dividend        4    0[BANK0 ] unsigned long 
 15966 ;;  divisor         4    4[BANK0 ] unsigned long 
 15967 ;; Auto vars:     Size  Location     Type
 15968 ;;  counter         1    8[BANK0 ] unsigned char 
 15969 ;; Return value:  Size  Location     Type
 15970 ;;                  4    0[BANK0 ] unsigned long 
 15971 ;; Registers used:
 15972 ;;		wreg, status,2, status,0
 15973 ;; Tracked objects:
 15974 ;;		On entry : 0/0
 15975 ;;		On exit  : 0/0
 15976 ;;		Unchanged: 0/0
 15977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15978 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15979 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15981 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15982 ;;Total ram usage:        9 bytes
 15983 ;; Hardware stack levels used:    1
 15984 ;; Hardware stack levels required when called:   10
 15985 ;; This function calls:
 15986 ;;		Nothing
 15987 ;; This function is called by:
 15988 ;;		_ultoa
 15989 ;; This function uses a non-reentrant model
 15990 ;;
 15991                           
 15992                           	psect	text57
 15993  014152                     __ptext57:
 15994                           	opt stack 0
 15995  014152                     ___llmod:
 15996                           	opt stack 15
 15997                           
 15998                           ; BSR set to: 0
 15999                           ;incstack = 0
 16000  014152  0100               	movlb	0	; () banked
 16001  014154  5164               	movf	___llmod@divisor& (0+255),w,b
 16002  014156  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 16003  014158  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 16004  01415A  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 16005  01415C  B4D8               	btfsc	status,2,c
 16006  01415E  D024               	goto	l3385
 16007                           
 16008                           ; BSR set to: 0
 16009  014160  0E01               	movlw	1
 16010  014162  6F68               	movwf	___llmod@counter& (0+255),b
 16011  014164  D006               	goto	l3380
 16012  014166                     
 16013                           ; BSR set to: 0
 16014                           
 16015                           ; BSR set to: 0
 16016  014166  90D8               	bcf	status,0,c
 16017  014168  3764               	rlcf	___llmod@divisor& (0+255),f,b
 16018  01416A  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 16019  01416C  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 16020  01416E  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 16021  014170  2B68               	incf	___llmod@counter& (0+255),f,b
 16022  014172                     l3380:
 16023                           
 16024                           ; BSR set to: 0
 16025                           
 16026                           ; BSR set to: 0
 16027  014172  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
 16028  014174  D7F8               	goto	l3381
 16029  014176                     u11860:
 16030                           
 16031                           ; BSR set to: 0
 16032                           
 16033                           ; BSR set to: 0
 16034                           
 16035                           ; BSR set to: 0
 16036  014176  5164               	movf	___llmod@divisor& (0+255),w,b
 16037  014178  5D60               	subwf	___llmod@dividend& (0+255),w,b
 16038  01417A  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 16039  01417C  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 16040  01417E  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 16041  014180  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 16042  014182  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 16043  014184  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 16044  014186  A0D8               	btfss	status,0,c
 16045  014188  D008               	goto	l3384
 16046                           
 16047                           ; BSR set to: 0
 16048  01418A  5164               	movf	___llmod@divisor& (0+255),w,b
 16049  01418C  5F60               	subwf	___llmod@dividend& (0+255),f,b
 16050  01418E  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 16051  014190  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 16052  014192  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 16053  014194  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 16054  014196  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 16055  014198  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 16056  01419A                     l3384:
 16057                           
 16058                           ; BSR set to: 0
 16059                           
 16060                           ; BSR set to: 0
 16061  01419A  90D8               	bcf	status,0,c
 16062  01419C  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 16063  01419E  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 16064  0141A0  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 16065  0141A2  3364               	rrcf	___llmod@divisor& (0+255),f,b
 16066                           
 16067                           ; BSR set to: 0
 16068  0141A4  2F68               	decfsz	___llmod@counter& (0+255),f,b
 16069  0141A6  D7E7               	goto	u11860
 16070  0141A8                     l3385:
 16071                           
 16072                           ; BSR set to: 0
 16073                           
 16074                           ; BSR set to: 0
 16075  0141A8  C060  F060         	movff	___llmod@dividend,?___llmod
 16076  0141AC  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
 16077  0141B0  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
 16078  0141B4  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
 16079                           
 16080                           ; BSR set to: 0
 16081  0141B8  0012               	return		;funcret
 16082  0141BA                     __end_of___llmod:
 16083                           	opt stack 0
 16084                           tblptru	equ	0xFF8
 16085                           tblptrh	equ	0xFF7
 16086                           tblptrl	equ	0xFF6
 16087                           tablat	equ	0xFF5
 16088                           prodh	equ	0xFF4
 16089                           prodl	equ	0xFF3
 16090                           postinc0	equ	0xFEE
 16091                           wreg	equ	0xFE8
 16092                           postdec1	equ	0xFE5
 16093                           plusw1	equ	0xFE3
 16094                           fsr1h	equ	0xFE2
 16095                           fsr1l	equ	0xFE1
 16096                           indf2	equ	0xFDF
 16097                           postinc2	equ	0xFDE
 16098                           plusw2	equ	0xFDB
 16099                           fsr2h	equ	0xFDA
 16100                           fsr2l	equ	0xFD9
 16101                           status	equ	0xFD8
 16102                           
 16103 ;; *************** function ___lldiv *****************
 16104 ;; Defined at:
 16105 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
 16106 ;; Parameters:    Size  Location     Type
 16107 ;;  dividend        4    0[BANK0 ] unsigned long 
 16108 ;;  divisor         4    4[BANK0 ] unsigned long 
 16109 ;; Auto vars:     Size  Location     Type
 16110 ;;  quotient        4    8[BANK0 ] unsigned long 
 16111 ;;  counter         1   12[BANK0 ] unsigned char 
 16112 ;; Return value:  Size  Location     Type
 16113 ;;                  4    0[BANK0 ] unsigned long 
 16114 ;; Registers used:
 16115 ;;		wreg, status,2, status,0
 16116 ;; Tracked objects:
 16117 ;;		On entry : 0/0
 16118 ;;		On exit  : 0/0
 16119 ;;		Unchanged: 0/0
 16120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16121 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16122 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16124 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16125 ;;Total ram usage:       13 bytes
 16126 ;; Hardware stack levels used:    1
 16127 ;; Hardware stack levels required when called:   10
 16128 ;; This function calls:
 16129 ;;		Nothing
 16130 ;; This function is called by:
 16131 ;;		_ultoa
 16132 ;; This function uses a non-reentrant model
 16133 ;;
 16134                           
 16135                           	psect	text58
 16136  01396E                     __ptext58:
 16137                           	opt stack 0
 16138  01396E                     ___lldiv:
 16139                           	opt stack 15
 16140                           
 16141                           ; BSR set to: 0
 16142                           ;incstack = 0
 16143  01396E  0E00               	movlw	0
 16144  013970  0100               	movlb	0	; () banked
 16145  013972  6F68               	movwf	___lldiv@quotient& (0+255),b
 16146  013974  0E00               	movlw	0
 16147  013976  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 16148  013978  0E00               	movlw	0
 16149  01397A  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 16150  01397C  0E00               	movlw	0
 16151  01397E  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 16152                           
 16153                           ; BSR set to: 0
 16154  013980  5164               	movf	___lldiv@divisor& (0+255),w,b
 16155  013982  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 16156  013984  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 16157  013986  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 16158  013988  B4D8               	btfsc	status,2,c
 16159  01398A  D02A               	goto	l3004
 16160                           
 16161                           ; BSR set to: 0
 16162  01398C  0E01               	movlw	1
 16163  01398E  6F6C               	movwf	___lldiv@counter& (0+255),b
 16164  013990  D006               	goto	l2999
 16165  013992                     
 16166                           ; BSR set to: 0
 16167                           
 16168                           ; BSR set to: 0
 16169  013992  90D8               	bcf	status,0,c
 16170  013994  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 16171  013996  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 16172  013998  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 16173  01399A  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 16174  01399C  2B6C               	incf	___lldiv@counter& (0+255),f,b
 16175  01399E                     l2999:
 16176                           
 16177                           ; BSR set to: 0
 16178                           
 16179                           ; BSR set to: 0
 16180  01399E  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 16181  0139A0  D7F8               	goto	l3000
 16182  0139A2                     u11830:
 16183                           
 16184                           ; BSR set to: 0
 16185                           
 16186                           ; BSR set to: 0
 16187                           
 16188                           ; BSR set to: 0
 16189  0139A2  90D8               	bcf	status,0,c
 16190  0139A4  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 16191  0139A6  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 16192  0139A8  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 16193  0139AA  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 16194                           
 16195                           ; BSR set to: 0
 16196  0139AC  5164               	movf	___lldiv@divisor& (0+255),w,b
 16197  0139AE  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 16198  0139B0  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 16199  0139B2  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 16200  0139B4  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 16201  0139B6  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 16202  0139B8  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 16203  0139BA  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 16204  0139BC  A0D8               	btfss	status,0,c
 16205  0139BE  D009               	goto	l3003
 16206                           
 16207                           ; BSR set to: 0
 16208  0139C0  5164               	movf	___lldiv@divisor& (0+255),w,b
 16209  0139C2  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 16210  0139C4  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 16211  0139C6  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 16212  0139C8  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 16213  0139CA  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 16214  0139CC  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 16215  0139CE  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 16216                           
 16217                           ; BSR set to: 0
 16218  0139D0  8168               	bsf	___lldiv@quotient& (0+255),0,b
 16219  0139D2                     l3003:
 16220                           
 16221                           ; BSR set to: 0
 16222                           
 16223                           ; BSR set to: 0
 16224  0139D2  90D8               	bcf	status,0,c
 16225  0139D4  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 16226  0139D6  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 16227  0139D8  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 16228  0139DA  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 16229                           
 16230                           ; BSR set to: 0
 16231  0139DC  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 16232  0139DE  D7E1               	goto	u11830
 16233  0139E0                     l3004:
 16234                           
 16235                           ; BSR set to: 0
 16236                           
 16237                           ; BSR set to: 0
 16238  0139E0  C068  F060         	movff	___lldiv@quotient,?___lldiv
 16239  0139E4  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 16240  0139E8  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 16241  0139EC  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 16242                           
 16243                           ; BSR set to: 0
 16244  0139F0  0012               	return		;funcret
 16245  0139F2                     __end_of___lldiv:
 16246                           	opt stack 0
 16247                           tblptru	equ	0xFF8
 16248                           tblptrh	equ	0xFF7
 16249                           tblptrl	equ	0xFF6
 16250                           tablat	equ	0xFF5
 16251                           prodh	equ	0xFF4
 16252                           prodl	equ	0xFF3
 16253                           postinc0	equ	0xFEE
 16254                           wreg	equ	0xFE8
 16255                           postdec1	equ	0xFE5
 16256                           plusw1	equ	0xFE3
 16257                           fsr1h	equ	0xFE2
 16258                           fsr1l	equ	0xFE1
 16259                           indf2	equ	0xFDF
 16260                           postinc2	equ	0xFDE
 16261                           plusw2	equ	0xFDB
 16262                           fsr2h	equ	0xFDA
 16263                           fsr2l	equ	0xFD9
 16264                           status	equ	0xFD8
 16265                           
 16266 ;; *************** function _configFile_readDefault *****************
 16267 ;; Defined at:
 16268 ;;		line 209 in file "config_file.c"
 16269 ;; Parameters:    Size  Location     Type
 16270 ;;		None
 16271 ;; Auto vars:     Size  Location     Type
 16272 ;;		None
 16273 ;; Return value:  Size  Location     Type
 16274 ;;                  1    wreg      void 
 16275 ;; Registers used:
 16276 ;;		wreg, status,2
 16277 ;; Tracked objects:
 16278 ;;		On entry : 0/0
 16279 ;;		On exit  : 0/0
 16280 ;;		Unchanged: 0/0
 16281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16286 ;;Total ram usage:        0 bytes
 16287 ;; Hardware stack levels used:    1
 16288 ;; Hardware stack levels required when called:   10
 16289 ;; This function calls:
 16290 ;;		Nothing
 16291 ;; This function is called by:
 16292 ;;		_system_init
 16293 ;; This function uses a non-reentrant model
 16294 ;;
 16295                           
 16296                           	psect	text59
 16297  01421E                     __ptext59:
 16298                           	opt stack 0
 16299  01421E                     _configFile_readDefault:
 16300                           	opt stack 19
 16301                           
 16302                           ;config_file.c: 211: config.full_circle_in_steps = 576000;
 16303                           
 16304                           ; BSR set to: 0
 16305                           ;incstack = 0
 16306  01421E  0E00               	movlw	0
 16307  014220  0101               	movlb	1	; () banked
 16308  014222  6FA1               	movwf	_config& (0+255),b
 16309  014224  0ECA               	movlw	202
 16310  014226  6FA2               	movwf	(_config+1)& (0+255),b
 16311  014228  0E08               	movlw	8
 16312  01422A  6FA3               	movwf	(_config+2)& (0+255),b
 16313  01422C  0E00               	movlw	0
 16314  01422E  6FA4               	movwf	(_config+3)& (0+255),b
 16315                           
 16316                           ;config_file.c: 212: config.inverse_direction = 1;
 16317  014230  0E01               	movlw	1
 16318  014232  6FA5               	movwf	(_config+4)& (0+255),b
 16319                           
 16320                           ;config_file.c: 213: config.overshoot_in_steps = 6400;
 16321  014234  0E19               	movlw	25
 16322  014236  6FA7               	movwf	(_config+6)& (0+255),b
 16323  014238  0E00               	movlw	0
 16324  01423A  6FA6               	movwf	(_config+5)& (0+255),b
 16325                           
 16326                           ;config_file.c: 214: config.overshoot_cost_in_steps = 3000;
 16327  01423C  0E0B               	movlw	11
 16328  01423E  6FA9               	movwf	(_config+8)& (0+255),b
 16329  014240  0EB8               	movlw	184
 16330  014242  6FA8               	movwf	(_config+7)& (0+255),b
 16331                           
 16332                           ;config_file.c: 215: config.minimum_speed = 1;
 16333  014244  0E00               	movlw	0
 16334  014246  6FAB               	movwf	(_config+10)& (0+255),b
 16335  014248  0E01               	movlw	1
 16336  01424A  6FAA               	movwf	(_config+9)& (0+255),b
 16337                           
 16338                           ;config_file.c: 216: config.maximum_speed = 380;
 16339  01424C  0E01               	movlw	1
 16340  01424E  6FAD               	movwf	(_config+12)& (0+255),b
 16341  014250  0E7C               	movlw	124
 16342  014252  6FAC               	movwf	(_config+11)& (0+255),b
 16343                           
 16344                           ;config_file.c: 217: config.maximum_speed_arc = 305;
 16345  014254  0E01               	movlw	1
 16346  014256  6FB1               	movwf	(_config+16)& (0+255),b
 16347  014258  0E31               	movlw	49
 16348  01425A  6FB0               	movwf	(_config+15)& (0+255),b
 16349                           
 16350                           ;config_file.c: 218: config.maximum_speed_manual = 305;
 16351  01425C  0E01               	movlw	1
 16352  01425E  6FB5               	movwf	(_config+20)& (0+255),b
 16353  014260  0E31               	movlw	49
 16354  014262  6FB4               	movwf	(_config+19)& (0+255),b
 16355                           
 16356                           ;config_file.c: 219: config.use_ccw_limit = 0;
 16357  014264  0E00               	movlw	0
 16358  014266  6FBA               	movwf	(_config+25)& (0+255),b
 16359                           
 16360                           ;config_file.c: 220: config.ccw_limit = 35500;
 16361  014268  0E8A               	movlw	138
 16362  01426A  6FBC               	movwf	(_config+27)& (0+255),b
 16363  01426C  0EAC               	movlw	172
 16364  01426E  6FBB               	movwf	(_config+26)& (0+255),b
 16365                           
 16366                           ;config_file.c: 221: config.use_cw_limit = 0;
 16367  014270  0E00               	movlw	0
 16368  014272  6FB7               	movwf	(_config+22)& (0+255),b
 16369                           
 16370                           ;config_file.c: 222: config.cw_limit = 500;
 16371  014274  0E01               	movlw	1
 16372  014276  6FB9               	movwf	(_config+24)& (0+255),b
 16373  014278  0EF4               	movlw	244
 16374  01427A  6FB8               	movwf	(_config+23)& (0+255),b
 16375                           
 16376                           ;config_file.c: 223: config.beep_duration = 10;
 16377  01427C  0E0A               	movlw	10
 16378  01427E  6FB6               	movwf	(_config+21)& (0+255),b
 16379                           
 16380                           ; BSR set to: 1
 16381  014280  0012               	return		;funcret
 16382  014282                     __end_of_configFile_readDefault:
 16383                           	opt stack 0
 16384                           tblptru	equ	0xFF8
 16385                           tblptrh	equ	0xFF7
 16386                           tblptrl	equ	0xFF6
 16387                           tablat	equ	0xFF5
 16388                           prodh	equ	0xFF4
 16389                           prodl	equ	0xFF3
 16390                           postinc0	equ	0xFEE
 16391                           wreg	equ	0xFE8
 16392                           postdec1	equ	0xFE5
 16393                           plusw1	equ	0xFE3
 16394                           fsr1h	equ	0xFE2
 16395                           fsr1l	equ	0xFE1
 16396                           indf2	equ	0xFDF
 16397                           postinc2	equ	0xFDE
 16398                           plusw2	equ	0xFDB
 16399                           fsr2h	equ	0xFDA
 16400                           fsr2l	equ	0xFD9
 16401                           status	equ	0xFD8
 16402                           
 16403 ;; *************** function _configFile_read *****************
 16404 ;; Defined at:
 16405 ;;		line 227 in file "config_file.c"
 16406 ;; Parameters:    Size  Location     Type
 16407 ;;		None
 16408 ;; Auto vars:     Size  Location     Type
 16409 ;;  item_string    31    8[BANK1 ] unsigned char [31]
 16410 ;;  value_string   12   39[BANK1 ] unsigned char [12]
 16411 ;;  position        4   56[BANK1 ] unsigned long 
 16412 ;;  file_size       4   51[BANK1 ] unsigned long 
 16413 ;;  file_number     1   55[BANK1 ] unsigned char 
 16414 ;; Return value:  Size  Location     Type
 16415 ;;                  1    wreg      void 
 16416 ;; Registers used:
 16417 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16418 ;; Tracked objects:
 16419 ;;		On entry : 0/0
 16420 ;;		On exit  : 0/0
 16421 ;;		Unchanged: 0/0
 16422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16424 ;;      Locals:         0       0      52       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16425 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16426 ;;      Totals:         0       0      60       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16427 ;;Total ram usage:       60 bytes
 16428 ;; Hardware stack levels used:    1
 16429 ;; Hardware stack levels required when called:   19
 16430 ;; This function calls:
 16431 ;;		__get_item
 16432 ;;		__parse_item
 16433 ;;		_fat_find_file
 16434 ;;		_fat_get_file_size
 16435 ;;		_fat_read_from_file
 16436 ;; This function is called by:
 16437 ;;		_system_init
 16438 ;; This function uses a non-reentrant model
 16439 ;;
 16440                           
 16441                           	psect	text60
 16442  00F5BA                     __ptext60:
 16443                           	opt stack 0
 16444  00F5BA                     _configFile_read:
 16445                           	opt stack 10
 16446                           
 16447                           ;config_file.c: 229: uint8_t file_number;;config_file.c: 230: uint32_t file_size;;config
      +                          _file.c: 231: uint32_t position;;config_file.c: 232: char item_string[31];;config_file.c
      +                          : 233: char value_string[12];;config_file.c: 236: file_number = fat_find_file(&configFil
      +                          e_name, &configFile_extention);
 16448                           
 16449                           ; BSR set to: 1
 16450                           ;incstack = 0
 16451  00F5BA  0EC8               	movlw	low _configFile_name
 16452  00F5BC  0100               	movlb	0	; () banked
 16453  00F5BE  6F8B               	movwf	fat_find_file@name& (0+255),b
 16454  00F5C0  0E02               	movlw	high _configFile_name
 16455  00F5C2  6F8C               	movwf	(fat_find_file@name+1)& (0+255),b
 16456  00F5C4  0ED3               	movlw	low _configFile_extention
 16457  00F5C6  6F8D               	movwf	fat_find_file@extension& (0+255),b
 16458  00F5C8  0E02               	movlw	high _configFile_extention
 16459  00F5CA  6F8E               	movwf	(fat_find_file@extension+1)& (0+255),b
 16460  00F5CC  ECE2  F08D         	call	_fat_find_file	;wreg free
 16461  00F5D0  0101               	movlb	1	; () banked
 16462  00F5D2  6FFA               	movwf	configFile_read@file_number& (0+255),b
 16463                           
 16464                           ; BSR set to: 1
 16465                           ;config_file.c: 237: if(file_number==0xFF)
 16466  00F5D4  29FA               	incf	configFile_read@file_number& (0+255),w,b
 16467  00F5D6  B4D8               	btfsc	status,2,c
 16468  00F5D8  0012               	return	
 16469                           
 16470                           ; BSR set to: 1
 16471                           ;config_file.c: 241: };config_file.c: 244: file_size = fat_get_file_size(file_number);
 16472                           
 16473                           ; BSR set to: 1
 16474                           
 16475                           ; BSR set to: 1
 16476                           ;config_file.c: 238: {;config_file.c: 240: return;
 16477  00F5DA  51FA               	movf	configFile_read@file_number& (0+255),w,b
 16478  00F5DC  EC75  F09E         	call	_fat_get_file_size
 16479  00F5E0  C095  F1F6         	movff	?_fat_get_file_size,configFile_read@file_size
 16480  00F5E4  C096  F1F7         	movff	?_fat_get_file_size+1,configFile_read@file_size+1
 16481  00F5E8  C097  F1F8         	movff	?_fat_get_file_size+2,configFile_read@file_size+2
 16482  00F5EC  C098  F1F9         	movff	?_fat_get_file_size+3,configFile_read@file_size+3
 16483                           
 16484                           ;config_file.c: 247: position = 0;
 16485  00F5F0  0E00               	movlw	0
 16486  00F5F2  0101               	movlb	1	; () banked
 16487  00F5F4  6FFB               	movwf	configFile_read@position& (0+255),b
 16488  00F5F6  0E00               	movlw	0
 16489  00F5F8  6FFC               	movwf	(configFile_read@position+1)& (0+255),b
 16490  00F5FA  0E00               	movlw	0
 16491  00F5FC  6FFD               	movwf	(configFile_read@position+2)& (0+255),b
 16492  00F5FE  0E00               	movlw	0
 16493  00F600  6FFE               	movwf	(configFile_read@position+3)& (0+255),b
 16494                           
 16495                           ;config_file.c: 248: while((file_size-position)>3)
 16496  00F602  D086               	goto	l2959
 16497  00F604                     
 16498                           ; BSR set to: 1
 16499                           ;config_file.c: 249: {;config_file.c: 250: if((position+45) > file_size)
 16500                           
 16501                           ; BSR set to: 1
 16502  00F604  0E2D               	movlw	45
 16503  00F606  25FB               	addwf	configFile_read@position& (0+255),w,b
 16504  00F608  6FC3               	movwf	??_configFile_read& (0+255),b
 16505  00F60A  0E00               	movlw	0
 16506  00F60C  21FC               	addwfc	(configFile_read@position+1)& (0+255),w,b
 16507  00F60E  6FC4               	movwf	(??_configFile_read+1)& (0+255),b
 16508  00F610  0E00               	movlw	0
 16509  00F612  21FD               	addwfc	(configFile_read@position+2)& (0+255),w,b
 16510  00F614  6FC5               	movwf	(??_configFile_read+2)& (0+255),b
 16511  00F616  0E00               	movlw	0
 16512  00F618  21FE               	addwfc	(configFile_read@position+3)& (0+255),w,b
 16513  00F61A  6FC6               	movwf	(??_configFile_read+3)& (0+255),b
 16514  00F61C  51C3               	movf	??_configFile_read& (0+255),w,b
 16515  00F61E  5DF6               	subwf	configFile_read@file_size& (0+255),w,b
 16516  00F620  51C4               	movf	(??_configFile_read+1)& (0+255),w,b
 16517  00F622  59F7               	subwfb	(configFile_read@file_size+1)& (0+255),w,b
 16518  00F624  51C5               	movf	(??_configFile_read+2)& (0+255),w,b
 16519  00F626  59F8               	subwfb	(configFile_read@file_size+2)& (0+255),w,b
 16520  00F628  51C6               	movf	(??_configFile_read+3)& (0+255),w,b
 16521  00F62A  59F9               	subwfb	(configFile_read@file_size+3)& (0+255),w,b
 16522  00F62C  B0D8               	btfsc	status,0,c
 16523  00F62E  D035               	goto	l2961
 16524                           
 16525                           ; BSR set to: 1
 16526                           ;config_file.c: 251: {;config_file.c: 253: fat_read_from_file(file_number, position, fil
      +                          e_size-position, &ConfigFile_buffer[0]);
 16527  00F630  C1FB  F0C9         	movff	configFile_read@position,fat_read_from_file@start_byte
 16528  00F634  C1FC  F0CA         	movff	configFile_read@position+1,fat_read_from_file@start_byte+1
 16529  00F638  C1FD  F0CB         	movff	configFile_read@position+2,fat_read_from_file@start_byte+2
 16530  00F63C  C1FE  F0CC         	movff	configFile_read@position+3,fat_read_from_file@start_byte+3
 16531  00F640  C1FB  F1C3         	movff	configFile_read@position,??_configFile_read
 16532  00F644  C1FC  F1C4         	movff	configFile_read@position+1,??_configFile_read+1
 16533  00F648  C1FD  F1C5         	movff	configFile_read@position+2,??_configFile_read+2
 16534  00F64C  C1FE  F1C6         	movff	configFile_read@position+3,??_configFile_read+3
 16535  00F650  1FC3               	comf	??_configFile_read& (0+255),f,b
 16536  00F652  1FC4               	comf	(??_configFile_read+1)& (0+255),f,b
 16537  00F654  1FC5               	comf	(??_configFile_read+2)& (0+255),f,b
 16538  00F656  1FC6               	comf	(??_configFile_read+3)& (0+255),f,b
 16539  00F658  2BC3               	incf	??_configFile_read& (0+255),f,b
 16540  00F65A  0E00               	movlw	0
 16541  00F65C  23C4               	addwfc	(??_configFile_read+1)& (0+255),f,b
 16542  00F65E  23C5               	addwfc	(??_configFile_read+2)& (0+255),f,b
 16543  00F660  23C6               	addwfc	(??_configFile_read+3)& (0+255),f,b
 16544  00F662  51F6               	movf	configFile_read@file_size& (0+255),w,b
 16545  00F664  25C3               	addwf	??_configFile_read& (0+255),w,b
 16546  00F666  0100               	movlb	0	; () banked
 16547  00F668  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 16548  00F66A  0101               	movlb	1	; () banked
 16549  00F66C  51F7               	movf	(configFile_read@file_size+1)& (0+255),w,b
 16550  00F66E  21C4               	addwfc	(??_configFile_read+1)& (0+255),w,b
 16551  00F670  0100               	movlb	0	; () banked
 16552  00F672  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 16553  00F674  0101               	movlb	1	; () banked
 16554  00F676  51F8               	movf	(configFile_read@file_size+2)& (0+255),w,b
 16555  00F678  21C5               	addwfc	(??_configFile_read+2)& (0+255),w,b
 16556  00F67A  0100               	movlb	0	; () banked
 16557  00F67C  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 16558  00F67E  0101               	movlb	1	; () banked
 16559  00F680  51F9               	movf	(configFile_read@file_size+3)& (0+255),w,b
 16560  00F682  21C6               	addwfc	(??_configFile_read+3)& (0+255),w,b
 16561  00F684  0100               	movlb	0	; () banked
 16562  00F686  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 16563  00F688  0E00               	movlw	low _ConfigFile_buffer
 16564  00F68A  6FD1               	movwf	fat_read_from_file@data& (0+255),b
 16565  00F68C  0E08               	movlw	high _ConfigFile_buffer
 16566  00F68E  6FD2               	movwf	(fat_read_from_file@data+1)& (0+255),b
 16567  00F690  0101               	movlb	1	; () banked
 16568  00F692  51FA               	movf	configFile_read@file_number& (0+255),w,b
 16569  00F694  EC56  F08E         	call	_fat_read_from_file
 16570                           
 16571                           ;config_file.c: 254: }
 16572  00F698  D019               	goto	l2962
 16573  00F69A                     l2961:
 16574                           
 16575                           ;config_file.c: 255: else;config_file.c: 256: {;config_file.c: 258: fat_read_from_file(f
      +                          ile_number, position, 45, &ConfigFile_buffer[0]);
 16576  00F69A  C1FB  F0C9         	movff	configFile_read@position,fat_read_from_file@start_byte
 16577  00F69E  C1FC  F0CA         	movff	configFile_read@position+1,fat_read_from_file@start_byte+1
 16578  00F6A2  C1FD  F0CB         	movff	configFile_read@position+2,fat_read_from_file@start_byte+2
 16579  00F6A6  C1FE  F0CC         	movff	configFile_read@position+3,fat_read_from_file@start_byte+3
 16580  00F6AA  0E2D               	movlw	45
 16581  00F6AC  0100               	movlb	0	; () banked
 16582  00F6AE  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 16583  00F6B0  0E00               	movlw	0
 16584  00F6B2  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 16585  00F6B4  0E00               	movlw	0
 16586  00F6B6  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 16587  00F6B8  0E00               	movlw	0
 16588  00F6BA  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 16589  00F6BC  0E00               	movlw	low _ConfigFile_buffer
 16590  00F6BE  6FD1               	movwf	fat_read_from_file@data& (0+255),b
 16591  00F6C0  0E08               	movlw	high _ConfigFile_buffer
 16592  00F6C2  6FD2               	movwf	(fat_read_from_file@data+1)& (0+255),b
 16593  00F6C4  0101               	movlb	1	; () banked
 16594  00F6C6  51FA               	movf	configFile_read@file_number& (0+255),w,b
 16595  00F6C8  EC56  F08E         	call	_fat_read_from_file
 16596  00F6CC                     l2962:
 16597                           
 16598                           ;config_file.c: 259: };config_file.c: 262: position += _get_item(&item_string[0], &value
      +                          _string[0], &ConfigFile_buffer[0]);
 16599  00F6CC  0ECB               	movlw	low configFile_read@item_string
 16600  00F6CE  0100               	movlb	0	; () banked
 16601  00F6D0  6F60               	movwf	__get_item@item_string& (0+255),b
 16602  00F6D2  0E01               	movlw	high configFile_read@item_string
 16603  00F6D4  6F61               	movwf	(__get_item@item_string+1)& (0+255),b
 16604  00F6D6  0EEA               	movlw	low configFile_read@value_string
 16605  00F6D8  6F62               	movwf	__get_item@value_string& (0+255),b
 16606  00F6DA  0E01               	movlw	high configFile_read@value_string
 16607  00F6DC  6F63               	movwf	(__get_item@value_string+1)& (0+255),b
 16608  00F6DE  0E00               	movlw	low _ConfigFile_buffer
 16609  00F6E0  6F64               	movwf	__get_item@buffer& (0+255),b
 16610  00F6E2  0E08               	movlw	high _ConfigFile_buffer
 16611  00F6E4  6F65               	movwf	(__get_item@buffer+1)& (0+255),b
 16612  00F6E6  EC7B  F07C         	call	__get_item	;wreg free
 16613  00F6EA  0101               	movlb	1	; () banked
 16614  00F6EC  6FC3               	movwf	??_configFile_read& (0+255),b
 16615  00F6EE  51C3               	movf	??_configFile_read& (0+255),w,b
 16616  00F6F0  27FB               	addwf	configFile_read@position& (0+255),f,b
 16617  00F6F2  0E00               	movlw	0
 16618  00F6F4  23FC               	addwfc	(configFile_read@position+1)& (0+255),f,b
 16619  00F6F6  23FD               	addwfc	(configFile_read@position+2)& (0+255),f,b
 16620  00F6F8  23FE               	addwfc	(configFile_read@position+3)& (0+255),f,b
 16621                           
 16622                           ; BSR set to: 1
 16623                           ;config_file.c: 265: _parse_item(&item_string[0], &value_string[0]);
 16624  00F6FA  0ECB               	movlw	low configFile_read@item_string
 16625  00F6FC  0100               	movlb	0	; () banked
 16626  00F6FE  6F7A               	movwf	__parse_item@item_string& (0+255),b
 16627  00F700  0E01               	movlw	high configFile_read@item_string
 16628  00F702  6F7B               	movwf	(__parse_item@item_string+1)& (0+255),b
 16629  00F704  0EEA               	movlw	low configFile_read@value_string
 16630  00F706  6F7C               	movwf	__parse_item@value_string& (0+255),b
 16631  00F708  0E01               	movlw	high configFile_read@value_string
 16632  00F70A  6F7D               	movwf	(__parse_item@value_string+1)& (0+255),b
 16633  00F70C  EC6A  F064         	call	__parse_item	;wreg free
 16634  00F710                     l2959:
 16635  00F710  C1FB  F1C3         	movff	configFile_read@position,??_configFile_read
 16636  00F714  C1FC  F1C4         	movff	configFile_read@position+1,??_configFile_read+1
 16637  00F718  C1FD  F1C5         	movff	configFile_read@position+2,??_configFile_read+2
 16638  00F71C  C1FE  F1C6         	movff	configFile_read@position+3,??_configFile_read+3
 16639  00F720  0101               	movlb	1	; () banked
 16640  00F722  1FC3               	comf	??_configFile_read& (0+255),f,b
 16641  00F724  1FC4               	comf	(??_configFile_read+1)& (0+255),f,b
 16642  00F726  1FC5               	comf	(??_configFile_read+2)& (0+255),f,b
 16643  00F728  1FC6               	comf	(??_configFile_read+3)& (0+255),f,b
 16644  00F72A  2BC3               	incf	??_configFile_read& (0+255),f,b
 16645  00F72C  0E00               	movlw	0
 16646  00F72E  23C4               	addwfc	(??_configFile_read+1)& (0+255),f,b
 16647  00F730  23C5               	addwfc	(??_configFile_read+2)& (0+255),f,b
 16648  00F732  23C6               	addwfc	(??_configFile_read+3)& (0+255),f,b
 16649  00F734  51F6               	movf	configFile_read@file_size& (0+255),w,b
 16650  00F736  25C3               	addwf	??_configFile_read& (0+255),w,b
 16651  00F738  6FC7               	movwf	(??_configFile_read+4)& (0+255),b
 16652  00F73A  51F7               	movf	(configFile_read@file_size+1)& (0+255),w,b
 16653  00F73C  21C4               	addwfc	(??_configFile_read+1)& (0+255),w,b
 16654  00F73E  6FC8               	movwf	(??_configFile_read+5)& (0+255),b
 16655  00F740  51F8               	movf	(configFile_read@file_size+2)& (0+255),w,b
 16656  00F742  21C5               	addwfc	(??_configFile_read+2)& (0+255),w,b
 16657  00F744  6FC9               	movwf	(??_configFile_read+6)& (0+255),b
 16658  00F746  51F9               	movf	(configFile_read@file_size+3)& (0+255),w,b
 16659  00F748  21C6               	addwfc	(??_configFile_read+3)& (0+255),w,b
 16660  00F74A  6FCA               	movwf	(??_configFile_read+7)& (0+255),b
 16661  00F74C  51CA               	movf	(??_configFile_read+7)& (0+255),w,b
 16662  00F74E  11C9               	iorwf	(??_configFile_read+6)& (0+255),w,b
 16663  00F750  11C8               	iorwf	(??_configFile_read+5)& (0+255),w,b
 16664  00F752  E104               	bnz	u16491
 16665  00F754  0E04               	movlw	4
 16666  00F756  5DC7               	subwf	(??_configFile_read+4)& (0+255),w,b
 16667  00F758  A0D8               	btfss	status,0,c
 16668  00F75A  0012               	return	
 16669  00F75C                     u16491:
 16670  00F75C  D753               	goto	l2960
 16671  00F75E                     __end_of_configFile_read:
 16672                           	opt stack 0
 16673                           tblptru	equ	0xFF8
 16674                           tblptrh	equ	0xFF7
 16675                           tblptrl	equ	0xFF6
 16676                           tablat	equ	0xFF5
 16677                           prodh	equ	0xFF4
 16678                           prodl	equ	0xFF3
 16679                           postinc0	equ	0xFEE
 16680                           wreg	equ	0xFE8
 16681                           postdec1	equ	0xFE5
 16682                           plusw1	equ	0xFE3
 16683                           fsr1h	equ	0xFE2
 16684                           fsr1l	equ	0xFE1
 16685                           indf2	equ	0xFDF
 16686                           postinc2	equ	0xFDE
 16687                           plusw2	equ	0xFDB
 16688                           fsr2h	equ	0xFDA
 16689                           fsr2l	equ	0xFD9
 16690                           status	equ	0xFD8
 16691                           
 16692 ;; *************** function _fat_read_from_file *****************
 16693 ;; Defined at:
 16694 ;;		line 751 in file "fat16.c"
 16695 ;; Parameters:    Size  Location     Type
 16696 ;;  file_number     1    wreg     unsigned char 
 16697 ;;  start_byte      4  105[BANK0 ] unsigned long 
 16698 ;;  length          4  109[BANK0 ] unsigned long 
 16699 ;;  data            2  113[BANK0 ] PTR unsigned char 
 16700 ;;		 -> ConfigFile_buffer(512), 
 16701 ;; Auto vars:     Size  Location     Type
 16702 ;;  file_number     1  119[BANK0 ] unsigned char 
 16703 ;;  root           32  125[BANK0 ] struct .
 16704 ;;  cluster_numb    2  123[BANK0 ] unsigned int 
 16705 ;;  cluster         2  121[BANK0 ] unsigned int 
 16706 ;;  return_code     1  120[BANK0 ] unsigned char 
 16707 ;; Return value:  Size  Location     Type
 16708 ;;                  1    wreg      unsigned char 
 16709 ;; Registers used:
 16710 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16711 ;; Tracked objects:
 16712 ;;		On entry : 0/0
 16713 ;;		On exit  : 0/0
 16714 ;;		Unchanged: 0/0
 16715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16716 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16717 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16718 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16719 ;;      Totals:         0      52       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16720 ;;Total ram usage:       52 bytes
 16721 ;; Hardware stack levels used:    1
 16722 ;; Hardware stack levels required when called:   18
 16723 ;; This function calls:
 16724 ;;		_fat_get_file_information
 16725 ;;		_fat_read_from_file_fast
 16726 ;; This function is called by:
 16727 ;;		_configFile_read
 16728 ;; This function uses a non-reentrant model
 16729 ;;
 16730                           
 16731                           	psect	text61
 16732  011CAC                     __ptext61:
 16733                           	opt stack 0
 16734  011CAC                     _fat_read_from_file:
 16735                           	opt stack 10
 16736                           
 16737                           ; BSR set to: 1
 16738                           ;incstack = 0
 16739                           ;fat_read_from_file@file_number stored from wreg
 16740  011CAC  0100               	movlb	0	; () banked
 16741  011CAE  6FD7               	movwf	fat_read_from_file@file_number& (0+255),b
 16742                           
 16743                           ;fat16.c: 753: rootEntry_t root;;fat16.c: 754: uint16_t cluster;;fat16.c: 755: uint16_t 
      +                          cluster_number;;fat16.c: 756: uint8_t return_code;;fat16.c: 759: return_code = fat_get_f
      +                          ile_information(file_number, &root);
 16744  011CB0  0EDD               	movlw	low fat_read_from_file@root
 16745  011CB2  0100               	movlb	0	; () banked
 16746  011CB4  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 16747  011CB6  0E00               	movlw	high fat_read_from_file@root
 16748  011CB8  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 16749  011CBA  51D7               	movf	fat_read_from_file@file_number& (0+255),w,b
 16750  011CBC  EC38  F09E         	call	_fat_get_file_information
 16751  011CC0  0100               	movlb	0	; () banked
 16752  011CC2  6FD8               	movwf	fat_read_from_file@return_code& (0+255),b
 16753                           
 16754                           ; BSR set to: 0
 16755                           ;fat16.c: 760: if(return_code!=0x00)
 16756  011CC4  51D8               	movf	fat_read_from_file@return_code& (0+255),w,b
 16757  011CC6  A4D8               	btfss	status,2,c
 16758  011CC8  0012               	return	
 16759                           
 16760                           ; BSR set to: 0
 16761                           ;fat16.c: 764: };fat16.c: 767: if(start_byte > root.fileSize)
 16762                           
 16763                           ; BSR set to: 0
 16764                           
 16765                           ; BSR set to: 0
 16766                           ;fat16.c: 761: {;fat16.c: 763: return return_code;;	Return value of _fat_read_from_file 
      +                          is never used
 16767  011CCA  51C9               	movf	fat_read_from_file@start_byte& (0+255),w,b
 16768  011CCC  5DF9               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 16769  011CCE  51CA               	movf	(fat_read_from_file@start_byte+1)& (0+255),w,b
 16770  011CD0  59FA               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 16771  011CD2  51CB               	movf	(fat_read_from_file@start_byte+2)& (0+255),w,b
 16772  011CD4  59FB               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 16773  011CD6  51CC               	movf	(fat_read_from_file@start_byte+3)& (0+255),w,b
 16774  011CD8  59FC               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 16775  011CDA  A0D8               	btfss	status,0,c
 16776  011CDC  0012               	return	
 16777                           
 16778                           ; BSR set to: 0
 16779                           ;fat16.c: 771: };fat16.c: 773: if(start_byte+length > root.fileSize)
 16780                           
 16781                           ; BSR set to: 0
 16782                           
 16783                           ; BSR set to: 0
 16784                           ;fat16.c: 768: {;fat16.c: 770: return 0xFF;;	Return value of _fat_read_from_file is neve
      +                          r used
 16785  011CDE  51CD               	movf	fat_read_from_file@length& (0+255),w,b
 16786  011CE0  25C9               	addwf	fat_read_from_file@start_byte& (0+255),w,b
 16787  011CE2  6FD3               	movwf	??_fat_read_from_file& (0+255),b
 16788  011CE4  51CE               	movf	(fat_read_from_file@length+1)& (0+255),w,b
 16789  011CE6  21CA               	addwfc	(fat_read_from_file@start_byte+1)& (0+255),w,b
 16790  011CE8  6FD4               	movwf	(??_fat_read_from_file+1)& (0+255),b
 16791  011CEA  51CF               	movf	(fat_read_from_file@length+2)& (0+255),w,b
 16792  011CEC  21CB               	addwfc	(fat_read_from_file@start_byte+2)& (0+255),w,b
 16793  011CEE  6FD5               	movwf	(??_fat_read_from_file+2)& (0+255),b
 16794  011CF0  51D0               	movf	(fat_read_from_file@length+3)& (0+255),w,b
 16795  011CF2  21CC               	addwfc	(fat_read_from_file@start_byte+3)& (0+255),w,b
 16796  011CF4  6FD6               	movwf	(??_fat_read_from_file+3)& (0+255),b
 16797  011CF6  51D3               	movf	??_fat_read_from_file& (0+255),w,b
 16798  011CF8  5DF9               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 16799  011CFA  51D4               	movf	(??_fat_read_from_file+1)& (0+255),w,b
 16800  011CFC  59FA               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 16801  011CFE  51D5               	movf	(??_fat_read_from_file+2)& (0+255),w,b
 16802  011D00  59FB               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 16803  011D02  51D6               	movf	(??_fat_read_from_file+3)& (0+255),w,b
 16804  011D04  59FC               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 16805  011D06  B0D8               	btfsc	status,0,c
 16806  011D08  D01D               	goto	l1877
 16807                           
 16808                           ; BSR set to: 0
 16809                           ;fat16.c: 774: {;fat16.c: 776: length = root.fileSize - start_byte;
 16810  011D0A  C0C9  F0D3         	movff	fat_read_from_file@start_byte,??_fat_read_from_file
 16811  011D0E  C0CA  F0D4         	movff	fat_read_from_file@start_byte+1,??_fat_read_from_file+1
 16812  011D12  C0CB  F0D5         	movff	fat_read_from_file@start_byte+2,??_fat_read_from_file+2
 16813  011D16  C0CC  F0D6         	movff	fat_read_from_file@start_byte+3,??_fat_read_from_file+3
 16814  011D1A  1FD3               	comf	??_fat_read_from_file& (0+255),f,b
 16815  011D1C  1FD4               	comf	(??_fat_read_from_file+1)& (0+255),f,b
 16816  011D1E  1FD5               	comf	(??_fat_read_from_file+2)& (0+255),f,b
 16817  011D20  1FD6               	comf	(??_fat_read_from_file+3)& (0+255),f,b
 16818  011D22  2BD3               	incf	??_fat_read_from_file& (0+255),f,b
 16819  011D24  0E00               	movlw	0
 16820  011D26  23D4               	addwfc	(??_fat_read_from_file+1)& (0+255),f,b
 16821  011D28  23D5               	addwfc	(??_fat_read_from_file+2)& (0+255),f,b
 16822  011D2A  23D6               	addwfc	(??_fat_read_from_file+3)& (0+255),f,b
 16823  011D2C  51F9               	movf	(fat_read_from_file@root+28)& (0+255),w,b
 16824  011D2E  25D3               	addwf	??_fat_read_from_file& (0+255),w,b
 16825  011D30  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 16826  011D32  51FA               	movf	(fat_read_from_file@root+29)& (0+255),w,b
 16827  011D34  21D4               	addwfc	(??_fat_read_from_file+1)& (0+255),w,b
 16828  011D36  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 16829  011D38  51FB               	movf	(fat_read_from_file@root+30)& (0+255),w,b
 16830  011D3A  21D5               	addwfc	(??_fat_read_from_file+2)& (0+255),w,b
 16831  011D3C  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 16832  011D3E  51FC               	movf	(fat_read_from_file@root+31)& (0+255),w,b
 16833  011D40  21D6               	addwfc	(??_fat_read_from_file+3)& (0+255),w,b
 16834  011D42  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 16835  011D44                     l1877:
 16836                           
 16837                           ; BSR set to: 0
 16838                           ;fat16.c: 777: };fat16.c: 780: cluster = root.firstCluster;
 16839                           
 16840                           ; BSR set to: 0
 16841  011D44  C0F7  F0D9         	movff	fat_read_from_file@root+26,fat_read_from_file@cluster
 16842  011D48  C0F8  F0DA         	movff	fat_read_from_file@root+27,fat_read_from_file@cluster+1
 16843                           
 16844                           ; BSR set to: 0
 16845                           ;fat16.c: 781: cluster_number = 0;
 16846  011D4C  0E00               	movlw	0
 16847  011D4E  6FDC               	movwf	(fat_read_from_file@cluster_number+1)& (0+255),b
 16848  011D50  0E00               	movlw	0
 16849  011D52  6FDB               	movwf	fat_read_from_file@cluster_number& (0+255),b
 16850                           
 16851                           ; BSR set to: 0
 16852                           ;fat16.c: 784: return fat_read_from_file_fast(start_byte, length, data, &cluster, &clust
      +                          er_number);;	Return value of _fat_read_from_file is never used
 16853  011D54  C0C9  F0A1         	movff	fat_read_from_file@start_byte,fat_read_from_file_fast@start_byte
 16854  011D58  C0CA  F0A2         	movff	fat_read_from_file@start_byte+1,fat_read_from_file_fast@start_byte+1
 16855  011D5C  C0CB  F0A3         	movff	fat_read_from_file@start_byte+2,fat_read_from_file_fast@start_byte+2
 16856  011D60  C0CC  F0A4         	movff	fat_read_from_file@start_byte+3,fat_read_from_file_fast@start_byte+3
 16857  011D64  C0CD  F0A5         	movff	fat_read_from_file@length,fat_read_from_file_fast@length
 16858  011D68  C0CE  F0A6         	movff	fat_read_from_file@length+1,fat_read_from_file_fast@length+1
 16859  011D6C  C0CF  F0A7         	movff	fat_read_from_file@length+2,fat_read_from_file_fast@length+2
 16860  011D70  C0D0  F0A8         	movff	fat_read_from_file@length+3,fat_read_from_file_fast@length+3
 16861  011D74  C0D1  F0A9         	movff	fat_read_from_file@data,fat_read_from_file_fast@data
 16862  011D78  C0D2  F0AA         	movff	fat_read_from_file@data+1,fat_read_from_file_fast@data+1
 16863  011D7C  0ED9               	movlw	low fat_read_from_file@cluster
 16864  011D7E  6FAB               	movwf	fat_read_from_file_fast@cluster& (0+255),b
 16865  011D80  0E00               	movlw	high fat_read_from_file@cluster
 16866  011D82  6FAC               	movwf	(fat_read_from_file_fast@cluster+1)& (0+255),b
 16867  011D84  0EDB               	movlw	low fat_read_from_file@cluster_number
 16868  011D86  6FAD               	movwf	fat_read_from_file_fast@cluster_number& (0+255),b
 16869  011D88  0E00               	movlw	high fat_read_from_file@cluster_number
 16870  011D8A  6FAE               	movwf	(fat_read_from_file_fast@cluster_number+1)& (0+255),b
 16871  011D8C  ECFA  F073         	call	_fat_read_from_file_fast	;wreg free
 16872  011D90  0012               	return	
 16873  011D92                     __end_of_fat_read_from_file:
 16874                           	opt stack 0
 16875                           tblptru	equ	0xFF8
 16876                           tblptrh	equ	0xFF7
 16877                           tblptrl	equ	0xFF6
 16878                           tablat	equ	0xFF5
 16879                           prodh	equ	0xFF4
 16880                           prodl	equ	0xFF3
 16881                           postinc0	equ	0xFEE
 16882                           wreg	equ	0xFE8
 16883                           postdec1	equ	0xFE5
 16884                           plusw1	equ	0xFE3
 16885                           fsr1h	equ	0xFE2
 16886                           fsr1l	equ	0xFE1
 16887                           indf2	equ	0xFDF
 16888                           postinc2	equ	0xFDE
 16889                           plusw2	equ	0xFDB
 16890                           fsr2h	equ	0xFDA
 16891                           fsr2l	equ	0xFD9
 16892                           status	equ	0xFD8
 16893                           
 16894 ;; *************** function _fat_read_from_file_fast *****************
 16895 ;; Defined at:
 16896 ;;		line 787 in file "fat16.c"
 16897 ;; Parameters:    Size  Location     Type
 16898 ;;  start_byte      4   65[BANK0 ] unsigned long 
 16899 ;;  length          4   69[BANK0 ] unsigned long 
 16900 ;;  data            2   73[BANK0 ] PTR unsigned char 
 16901 ;;		 -> ConfigFile_buffer(512), 
 16902 ;;  cluster         2   75[BANK0 ] PTR unsigned int 
 16903 ;;		 -> fat_read_from_file@cluster(2), 
 16904 ;;  cluster_numb    2   77[BANK0 ] PTR unsigned int 
 16905 ;;		 -> fat_read_from_file@cluster_number(2), 
 16906 ;; Auto vars:     Size  Location     Type
 16907 ;;  position        4  101[BANK0 ] unsigned long 
 16908 ;;  read_length     2   99[BANK0 ] unsigned int 
 16909 ;;  needed_clust    2   97[BANK0 ] unsigned int 
 16910 ;;  offset          2   95[BANK0 ] unsigned int 
 16911 ;;  working_clus    2   93[BANK0 ] unsigned int 
 16912 ;;  sector          2   91[BANK0 ] unsigned int 
 16913 ;; Return value:  Size  Location     Type
 16914 ;;                  1    wreg      unsigned char 
 16915 ;; Registers used:
 16916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16917 ;; Tracked objects:
 16918 ;;		On entry : 0/0
 16919 ;;		On exit  : 0/0
 16920 ;;		Unchanged: 0/0
 16921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16922 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16923 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16924 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16925 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16926 ;;Total ram usage:       40 bytes
 16927 ;; Hardware stack levels used:    1
 16928 ;; Hardware stack levels required when called:   17
 16929 ;; This function calls:
 16930 ;;		__data_sector_from_cluster
 16931 ;;		__find_nth_cluster
 16932 ;;		__read_fat
 16933 ;;		_flash_partial_read
 16934 ;; This function is called by:
 16935 ;;		_fat_read_from_file
 16936 ;; This function uses a non-reentrant model
 16937 ;;
 16938                           
 16939                           	psect	text62
 16940  00E7F4                     __ptext62:
 16941                           	opt stack 0
 16942  00E7F4                     _fat_read_from_file_fast:
 16943                           	opt stack 10
 16944                           
 16945                           ;fat16.c: 789: uint32_t position;;fat16.c: 790: uint16_t offset;;fat16.c: 791: uint16_t 
      +                          sector;;fat16.c: 792: uint16_t read_length;;fat16.c: 793: uint16_t working_cluster;;fat1
      +                          6.c: 794: uint16_t needed_cluster;;fat16.c: 797: needed_cluster = (uint16_t) (start_byte
      +                          >>9);
 16946                           
 16947                           ;incstack = 0
 16948  00E7F4  C0A1  F0AF         	movff	fat_read_from_file_fast@start_byte,??_fat_read_from_file_fast
 16949  00E7F8  C0A2  F0B0         	movff	fat_read_from_file_fast@start_byte+1,??_fat_read_from_file_fast+1
 16950  00E7FC  C0A3  F0B1         	movff	fat_read_from_file_fast@start_byte+2,??_fat_read_from_file_fast+2
 16951  00E800  C0A4  F0B2         	movff	fat_read_from_file_fast@start_byte+3,??_fat_read_from_file_fast+3
 16952  00E804  0E0A               	movlw	10
 16953  00E806  D006               	goto	u13460
 16954  00E808                     u13465:
 16955  00E808  0100               	movlb	0	; () banked
 16956  00E80A  90D8               	bcf	status,0,c
 16957  00E80C  33B2               	rrcf	(??_fat_read_from_file_fast+3)& (0+255),f,b
 16958  00E80E  33B1               	rrcf	(??_fat_read_from_file_fast+2)& (0+255),f,b
 16959  00E810  33B0               	rrcf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16960  00E812  33AF               	rrcf	??_fat_read_from_file_fast& (0+255),f,b
 16961  00E814                     u13460:
 16962  00E814  2EE8               	decfsz	wreg,f,c
 16963  00E816  D7F8               	goto	u13465
 16964  00E818  C0AF  F0C1         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@needed_cluster
 16965  00E81C  C0B0  F0C2         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@needed_cluster+1
 16966                           
 16967                           ; BSR set to: 0
 16968                           ;fat16.c: 800: if((*cluster_number) > needed_cluster)
 16969  00E820  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 16970  00E824  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 16971  00E828  50DE               	movf	postinc2,w,c
 16972  00E82A  5DC1               	subwf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 16973  00E82C  50DE               	movf	postinc2,w,c
 16974  00E82E  59C2               	subwfb	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 16975  00E830  B0D8               	btfsc	status,0,c
 16976  00E832  D002               	goto	l1880
 16977                           
 16978                           ; BSR set to: 0
 16979                           ;fat16.c: 801: {;fat16.c: 802: return 0xFF;
 16980  00E834  0EFF               	movlw	255
 16981                           
 16982                           ; BSR set to: 0
 16983  00E836  0012               	return	
 16984  00E838                     l1880:
 16985                           
 16986                           ; BSR set to: 0
 16987                           ;fat16.c: 803: };fat16.c: 806: (*cluster) = _find_nth_cluster((*cluster), (needed_cluste
      +                          r-(*cluster_number)));
 16988                           
 16989                           ; BSR set to: 0
 16990  00E838  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 16991  00E83C  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 16992  00E840  CFDE F097          	movff	postinc2,__find_nth_cluster@cluster
 16993  00E844  CFDD F098          	movff	postdec2,__find_nth_cluster@cluster+1
 16994  00E848  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 16995  00E84C  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 16996  00E850  CFDE F0AF          	movff	postinc2,??_fat_read_from_file_fast
 16997  00E854  CFDD F0B0          	movff	postdec2,??_fat_read_from_file_fast+1
 16998  00E858  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 16999  00E85A  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 17000  00E85C  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 17001  00E85E  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 17002  00E860  51C1               	movf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 17003  00E862  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 17004  00E864  6F99               	movwf	__find_nth_cluster@n& (0+255),b
 17005  00E866  51C2               	movf	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 17006  00E868  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 17007  00E86A  6F9A               	movwf	(__find_nth_cluster@n+1)& (0+255),b
 17008  00E86C  EC32  F099         	call	__find_nth_cluster	;wreg free
 17009  00E870  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 17010  00E874  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 17011  00E878  0100               	movlb	0	; () banked
 17012  00E87A  C097  FFDE         	movff	?__find_nth_cluster,postinc2
 17013  00E87E  C098  FFDD         	movff	?__find_nth_cluster+1,postdec2
 17014                           
 17015                           ; BSR set to: 0
 17016                           ;fat16.c: 809: (*cluster_number) = needed_cluster;
 17017  00E882  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 17018  00E886  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 17019  00E88A  C0C1  FFDE         	movff	fat_read_from_file_fast@needed_cluster,postinc2
 17020  00E88E  C0C2  FFDD         	movff	fat_read_from_file_fast@needed_cluster+1,postdec2
 17021                           
 17022                           ; BSR set to: 0
 17023                           ;fat16.c: 813: working_cluster = (*cluster);
 17024  00E892  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 17025  00E896  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 17026  00E89A  CFDE F0BD          	movff	postinc2,fat_read_from_file_fast@working_cluster
 17027  00E89E  CFDD F0BE          	movff	postdec2,fat_read_from_file_fast@working_cluster+1
 17028                           
 17029                           ; BSR set to: 0
 17030                           ;fat16.c: 816: position = (needed_cluster << 9);
 17031  00E8A2  C0C1  F0AF         	movff	fat_read_from_file_fast@needed_cluster,??_fat_read_from_file_fast
 17032  00E8A6  C0C2  F0B0         	movff	fat_read_from_file_fast@needed_cluster+1,??_fat_read_from_file_fast+1
 17033  00E8AA  0E09               	movlw	9
 17034  00E8AC                     u13485:
 17035  00E8AC  90D8               	bcf	status,0,c
 17036  00E8AE  37AF               	rlcf	??_fat_read_from_file_fast& (0+255),f,b
 17037  00E8B0  37B0               	rlcf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 17038  00E8B2  2EE8               	decfsz	wreg,f,c
 17039  00E8B4  D7FB               	goto	u13485
 17040  00E8B6  C0AF  F0C5         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@position
 17041  00E8BA  C0B0  F0C6         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@position+1
 17042  00E8BE  6BC7               	clrf	(fat_read_from_file_fast@position+2)& (0+255),b
 17043  00E8C0  6BC8               	clrf	(fat_read_from_file_fast@position+3)& (0+255),b
 17044                           
 17045                           ; BSR set to: 0
 17046                           ;fat16.c: 817: offset = start_byte - position;
 17047  00E8C2  C0C5  F0AF         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 17048  00E8C6  C0C6  F0B0         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 17049  00E8CA  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 17050  00E8CC  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 17051  00E8CE  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 17052  00E8D0  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 17053  00E8D2  51A1               	movf	fat_read_from_file_fast@start_byte& (0+255),w,b
 17054  00E8D4  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 17055  00E8D6  6FBF               	movwf	fat_read_from_file_fast@offset& (0+255),b
 17056  00E8D8  51A2               	movf	(fat_read_from_file_fast@start_byte+1)& (0+255),w,b
 17057  00E8DA  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 17058  00E8DC  6FC0               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 17059                           
 17060                           ; BSR set to: 0
 17061                           ;fat16.c: 820: position = 0;
 17062  00E8DE  0E00               	movlw	0
 17063  00E8E0  6FC5               	movwf	fat_read_from_file_fast@position& (0+255),b
 17064  00E8E2  0E00               	movlw	0
 17065  00E8E4  6FC6               	movwf	(fat_read_from_file_fast@position+1)& (0+255),b
 17066  00E8E6  0E00               	movlw	0
 17067  00E8E8  6FC7               	movwf	(fat_read_from_file_fast@position+2)& (0+255),b
 17068  00E8EA  0E00               	movlw	0
 17069  00E8EC  6FC8               	movwf	(fat_read_from_file_fast@position+3)& (0+255),b
 17070                           
 17071                           ;fat16.c: 821: while(position < length)
 17072  00E8EE  D089               	goto	l1882
 17073  00E8F0                     
 17074                           ; BSR set to: 0
 17075                           ;fat16.c: 822: {;fat16.c: 824: if(offset==512)
 17076                           
 17077                           ; BSR set to: 0
 17078  00E8F0  0E02               	movlw	2
 17079  00E8F2  19C0               	xorwf	(fat_read_from_file_fast@offset+1)& (0+255),w,b
 17080  00E8F4  11BF               	iorwf	fat_read_from_file_fast@offset& (0+255),w,b
 17081  00E8F6  A4D8               	btfss	status,2,c
 17082  00E8F8  D00F               	goto	l1884
 17083                           
 17084                           ; BSR set to: 0
 17085                           ;fat16.c: 825: {;fat16.c: 827: working_cluster = _read_fat(working_cluster);
 17086  00E8FA  C0BD  F08F         	movff	fat_read_from_file_fast@working_cluster,__read_fat@cluster
 17087  00E8FE  C0BE  F090         	movff	fat_read_from_file_fast@working_cluster+1,__read_fat@cluster+1
 17088  00E902  ECCF  F0A3         	call	__read_fat	;wreg free
 17089  00E906  C08F  F0BD         	movff	?__read_fat,fat_read_from_file_fast@working_cluster
 17090  00E90A  C090  F0BE         	movff	?__read_fat+1,fat_read_from_file_fast@working_cluster+1
 17091                           
 17092                           ;fat16.c: 828: offset = 0;
 17093  00E90E  0E00               	movlw	0
 17094  00E910  0100               	movlb	0	; () banked
 17095  00E912  6FC0               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 17096  00E914  0E00               	movlw	0
 17097  00E916  6FBF               	movwf	fat_read_from_file_fast@offset& (0+255),b
 17098  00E918                     l1884:
 17099                           
 17100                           ; BSR set to: 0
 17101                           ;fat16.c: 829: };fat16.c: 832: sector = _data_sector_from_cluster(working_cluster);
 17102                           
 17103                           ; BSR set to: 0
 17104  00E918  C0BD  F060         	movff	fat_read_from_file_fast@working_cluster,__data_sector_from_cluster@fat_cluster
 17105  00E91C  C0BE  F061         	movff	fat_read_from_file_fast@working_cluster+1,__data_sector_from_cluster@fat_cluster+
      +                          1
 17106  00E920  EC80  F0AC         	call	__data_sector_from_cluster	;wreg free
 17107  00E924  C060  F0BB         	movff	?__data_sector_from_cluster,fat_read_from_file_fast@sector
 17108  00E928  C061  F0BC         	movff	?__data_sector_from_cluster+1,fat_read_from_file_fast@sector+1
 17109                           
 17110                           ;fat16.c: 835: read_length = 512 - offset;
 17111  00E92C  C0BF  F0AF         	movff	fat_read_from_file_fast@offset,??_fat_read_from_file_fast
 17112  00E930  C0C0  F0B0         	movff	fat_read_from_file_fast@offset+1,??_fat_read_from_file_fast+1
 17113  00E934  0100               	movlb	0	; () banked
 17114  00E936  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 17115  00E938  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 17116  00E93A  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 17117  00E93C  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 17118  00E93E  0E00               	movlw	0
 17119  00E940  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 17120  00E942  6FC3               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 17121  00E944  0E02               	movlw	2
 17122  00E946  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 17123  00E948  6FC4               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 17124                           
 17125                           ; BSR set to: 0
 17126                           ;fat16.c: 836: if(read_length > (length-position))
 17127  00E94A  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 17128  00E94C  6FAF               	movwf	??_fat_read_from_file_fast& (0+255),b
 17129  00E94E  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 17130  00E950  6FB0               	movwf	(??_fat_read_from_file_fast+1)& (0+255),b
 17131  00E952  6BB1               	clrf	(??_fat_read_from_file_fast+2)& (0+255),b
 17132  00E954  6BB2               	clrf	(??_fat_read_from_file_fast+3)& (0+255),b
 17133  00E956  C0C5  F0B3         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast+4
 17134  00E95A  C0C6  F0B4         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+5
 17135  00E95E  C0C7  F0B5         	movff	fat_read_from_file_fast@position+2,??_fat_read_from_file_fast+6
 17136  00E962  C0C8  F0B6         	movff	fat_read_from_file_fast@position+3,??_fat_read_from_file_fast+7
 17137  00E966  1FB3               	comf	(??_fat_read_from_file_fast+4)& (0+255),f,b
 17138  00E968  1FB4               	comf	(??_fat_read_from_file_fast+5)& (0+255),f,b
 17139  00E96A  1FB5               	comf	(??_fat_read_from_file_fast+6)& (0+255),f,b
 17140  00E96C  1FB6               	comf	(??_fat_read_from_file_fast+7)& (0+255),f,b
 17141  00E96E  2BB3               	incf	(??_fat_read_from_file_fast+4)& (0+255),f,b
 17142  00E970  0E00               	movlw	0
 17143  00E972  23B4               	addwfc	(??_fat_read_from_file_fast+5)& (0+255),f,b
 17144  00E974  23B5               	addwfc	(??_fat_read_from_file_fast+6)& (0+255),f,b
 17145  00E976  23B6               	addwfc	(??_fat_read_from_file_fast+7)& (0+255),f,b
 17146  00E978  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 17147  00E97A  25B3               	addwf	(??_fat_read_from_file_fast+4)& (0+255),w,b
 17148  00E97C  6FB7               	movwf	(??_fat_read_from_file_fast+8)& (0+255),b
 17149  00E97E  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 17150  00E980  21B4               	addwfc	(??_fat_read_from_file_fast+5)& (0+255),w,b
 17151  00E982  6FB8               	movwf	(??_fat_read_from_file_fast+9)& (0+255),b
 17152  00E984  51A7               	movf	(fat_read_from_file_fast@length+2)& (0+255),w,b
 17153  00E986  21B5               	addwfc	(??_fat_read_from_file_fast+6)& (0+255),w,b
 17154  00E988  6FB9               	movwf	(??_fat_read_from_file_fast+10)& (0+255),b
 17155  00E98A  51A8               	movf	(fat_read_from_file_fast@length+3)& (0+255),w,b
 17156  00E98C  21B6               	addwfc	(??_fat_read_from_file_fast+7)& (0+255),w,b
 17157  00E98E  6FBA               	movwf	(??_fat_read_from_file_fast+11)& (0+255),b
 17158  00E990  51AF               	movf	??_fat_read_from_file_fast& (0+255),w,b
 17159  00E992  5DB7               	subwf	(??_fat_read_from_file_fast+8)& (0+255),w,b
 17160  00E994  51B0               	movf	(??_fat_read_from_file_fast+1)& (0+255),w,b
 17161  00E996  59B8               	subwfb	(??_fat_read_from_file_fast+9)& (0+255),w,b
 17162  00E998  51B1               	movf	(??_fat_read_from_file_fast+2)& (0+255),w,b
 17163  00E99A  59B9               	subwfb	(??_fat_read_from_file_fast+10)& (0+255),w,b
 17164  00E99C  51B2               	movf	(??_fat_read_from_file_fast+3)& (0+255),w,b
 17165  00E99E  59BA               	subwfb	(??_fat_read_from_file_fast+11)& (0+255),w,b
 17166  00E9A0  B0D8               	btfsc	status,0,c
 17167  00E9A2  D00E               	goto	l1885
 17168                           
 17169                           ; BSR set to: 0
 17170                           ;fat16.c: 837: {;fat16.c: 839: read_length = length - position;
 17171  00E9A4  C0C5  F0AF         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 17172  00E9A8  C0C6  F0B0         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 17173  00E9AC  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 17174  00E9AE  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 17175  00E9B0  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 17176  00E9B2  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 17177  00E9B4  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 17178  00E9B6  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 17179  00E9B8  6FC3               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 17180  00E9BA  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 17181  00E9BC  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 17182  00E9BE  6FC4               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 17183  00E9C0                     l1885:
 17184                           
 17185                           ; BSR set to: 0
 17186                           ;fat16.c: 840: };fat16.c: 843: flash_partial_read(sector, offset, read_length, &data[pos
      +                          ition]);
 17187                           
 17188                           ; BSR set to: 0
 17189  00E9C0  C0BB  F087         	movff	fat_read_from_file_fast@sector,flash_partial_read@page
 17190  00E9C4  C0BC  F088         	movff	fat_read_from_file_fast@sector+1,flash_partial_read@page+1
 17191  00E9C8  C0BF  F089         	movff	fat_read_from_file_fast@offset,flash_partial_read@start
 17192  00E9CC  C0C0  F08A         	movff	fat_read_from_file_fast@offset+1,flash_partial_read@start+1
 17193  00E9D0  C0C3  F08B         	movff	fat_read_from_file_fast@read_length,flash_partial_read@length
 17194  00E9D4  C0C4  F08C         	movff	fat_read_from_file_fast@read_length+1,flash_partial_read@length+1
 17195  00E9D8  51C5               	movf	fat_read_from_file_fast@position& (0+255),w,b
 17196  00E9DA  25A9               	addwf	fat_read_from_file_fast@data& (0+255),w,b
 17197  00E9DC  6F8D               	movwf	flash_partial_read@data& (0+255),b
 17198  00E9DE  51C6               	movf	(fat_read_from_file_fast@position+1)& (0+255),w,b
 17199  00E9E0  21AA               	addwfc	(fat_read_from_file_fast@data+1)& (0+255),w,b
 17200  00E9E2  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 17201  00E9E4  EC40  F0AB         	call	_flash_partial_read	;wreg free
 17202                           
 17203                           ;fat16.c: 846: position += read_length;
 17204  00E9E8  0100               	movlb	0	; () banked
 17205  00E9EA  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 17206  00E9EC  27C5               	addwf	fat_read_from_file_fast@position& (0+255),f,b
 17207  00E9EE  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 17208  00E9F0  23C6               	addwfc	(fat_read_from_file_fast@position+1)& (0+255),f,b
 17209  00E9F2  0E00               	movlw	0
 17210  00E9F4  23C7               	addwfc	(fat_read_from_file_fast@position+2)& (0+255),f,b
 17211  00E9F6  0E00               	movlw	0
 17212  00E9F8  23C8               	addwfc	(fat_read_from_file_fast@position+3)& (0+255),f,b
 17213                           
 17214                           ; BSR set to: 0
 17215                           ;fat16.c: 847: offset += read_length;
 17216  00E9FA  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 17217  00E9FC  27BF               	addwf	fat_read_from_file_fast@offset& (0+255),f,b
 17218  00E9FE  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 17219  00EA00  23C0               	addwfc	(fat_read_from_file_fast@offset+1)& (0+255),f,b
 17220  00EA02                     l1882:
 17221                           
 17222                           ; BSR set to: 0
 17223                           
 17224                           ; BSR set to: 0
 17225  00EA02  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 17226  00EA04  5DC5               	subwf	fat_read_from_file_fast@position& (0+255),w,b
 17227  00EA06  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 17228  00EA08  59C6               	subwfb	(fat_read_from_file_fast@position+1)& (0+255),w,b
 17229  00EA0A  51A7               	movf	(fat_read_from_file_fast@length+2)& (0+255),w,b
 17230  00EA0C  59C7               	subwfb	(fat_read_from_file_fast@position+2)& (0+255),w,b
 17231  00EA0E  51A8               	movf	(fat_read_from_file_fast@length+3)& (0+255),w,b
 17232  00EA10  59C8               	subwfb	(fat_read_from_file_fast@position+3)& (0+255),w,b
 17233  00EA12  A0D8               	btfss	status,0,c
 17234  00EA14  D76D               	goto	l1883
 17235                           
 17236                           ; BSR set to: 0
 17237                           ;fat16.c: 848: };fat16.c: 851: return 0x00;
 17238                           
 17239                           ; BSR set to: 0
 17240  00EA16  0E00               	movlw	0
 17241  00EA18  0012               	return	
 17242  00EA1A                     __end_of_fat_read_from_file_fast:
 17243                           	opt stack 0
 17244                           tblptru	equ	0xFF8
 17245                           tblptrh	equ	0xFF7
 17246                           tblptrl	equ	0xFF6
 17247                           tablat	equ	0xFF5
 17248                           prodh	equ	0xFF4
 17249                           prodl	equ	0xFF3
 17250                           postinc0	equ	0xFEE
 17251                           wreg	equ	0xFE8
 17252                           postdec1	equ	0xFE5
 17253                           plusw1	equ	0xFE3
 17254                           fsr1h	equ	0xFE2
 17255                           fsr1l	equ	0xFE1
 17256                           indf2	equ	0xFDF
 17257                           postinc2	equ	0xFDE
 17258                           postdec2	equ	0xFDD
 17259                           plusw2	equ	0xFDB
 17260                           fsr2h	equ	0xFDA
 17261                           fsr2l	equ	0xFD9
 17262                           status	equ	0xFD8
 17263                           
 17264 ;; *************** function __find_nth_cluster *****************
 17265 ;; Defined at:
 17266 ;;		line 182 in file "fat16.c"
 17267 ;; Parameters:    Size  Location     Type
 17268 ;;  cluster         2   55[BANK0 ] unsigned int 
 17269 ;;  n               2   57[BANK0 ] unsigned int 
 17270 ;; Auto vars:     Size  Location     Type
 17271 ;;  sector          2   63[BANK0 ] unsigned int 
 17272 ;;  sector_in_bu    2   61[BANK0 ] unsigned int 
 17273 ;;  offset          2   59[BANK0 ] unsigned int 
 17274 ;; Return value:  Size  Location     Type
 17275 ;;                  2   55[BANK0 ] unsigned int 
 17276 ;; Registers used:
 17277 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17278 ;; Tracked objects:
 17279 ;;		On entry : 0/0
 17280 ;;		On exit  : 0/0
 17281 ;;		Unchanged: 0/0
 17282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17283 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17284 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17286 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17287 ;;Total ram usage:       10 bytes
 17288 ;; Hardware stack levels used:    1
 17289 ;; Hardware stack levels required when called:   16
 17290 ;; This function calls:
 17291 ;;		__fat_offset_from_cluster
 17292 ;;		__fat_sector_from_cluster
 17293 ;;		__read_fat
 17294 ;;		__read_value_from_offset
 17295 ;;		_flash_sector_read
 17296 ;; This function is called by:
 17297 ;;		_fat_read_from_file_fast
 17298 ;;		_fat_modify_file
 17299 ;;		_fat_copy_sector_to_buffer
 17300 ;; This function uses a non-reentrant model
 17301 ;;
 17302                           
 17303                           	psect	text63
 17304  013264                     __ptext63:
 17305                           	opt stack 0
 17306  013264                     __find_nth_cluster:
 17307                           	opt stack 11
 17308                           
 17309                           ;fat16.c: 184: uint16_t sector;;fat16.c: 185: uint16_t offset;;fat16.c: 186: uint16_t se
      +                          ctor_in_buffer = 0;
 17310                           
 17311                           ; BSR set to: 0
 17312                           ;incstack = 0
 17313  013264  0E00               	movlw	0
 17314  013266  0100               	movlb	0	; () banked
 17315  013268  6F9E               	movwf	(__find_nth_cluster@sector_in_buffer+1)& (0+255),b
 17316  01326A  0E00               	movlw	0
 17317  01326C  6F9D               	movwf	__find_nth_cluster@sector_in_buffer& (0+255),b
 17318                           
 17319                           ; BSR set to: 0
 17320                           ;fat16.c: 189: if(n==1)
 17321  01326E  0599               	decf	__find_nth_cluster@n& (0+255),w,b
 17322  013270  119A               	iorwf	(__find_nth_cluster@n+1)& (0+255),w,b
 17323  013272  A4D8               	btfss	status,2,c
 17324  013274  D040               	goto	l1767
 17325                           
 17326                           ; BSR set to: 0
 17327                           ;fat16.c: 190: {;fat16.c: 191: return _read_fat(cluster);
 17328  013276  C097  F08F         	movff	__find_nth_cluster@cluster,__read_fat@cluster
 17329  01327A  C098  F090         	movff	__find_nth_cluster@cluster+1,__read_fat@cluster+1
 17330  01327E  ECCF  F0A3         	call	__read_fat	;wreg free
 17331  013282  C08F  F097         	movff	?__read_fat,?__find_nth_cluster
 17332  013286  C090  F098         	movff	?__read_fat+1,?__find_nth_cluster+1
 17333  01328A  0012               	return	
 17334  01328C                     
 17335                           ;fat16.c: 195: {;fat16.c: 197: sector = _fat_sector_from_cluster(cluster);
 17336  01328C  C097  F060         	movff	__find_nth_cluster@cluster,__fat_sector_from_cluster@cluster
 17337  013290  C098  F061         	movff	__find_nth_cluster@cluster+1,__fat_sector_from_cluster@cluster+1
 17338  013294  EC0D  F0AC         	call	__fat_sector_from_cluster	;wreg free
 17339  013298  C060  F09F         	movff	?__fat_sector_from_cluster,__find_nth_cluster@sector
 17340  01329C  C061  F0A0         	movff	?__fat_sector_from_cluster+1,__find_nth_cluster@sector+1
 17341                           
 17342                           ;fat16.c: 198: offset = _fat_offset_from_cluster(cluster);
 17343  0132A0  C097  F060         	movff	__find_nth_cluster@cluster,__fat_offset_from_cluster@cluster
 17344  0132A4  C098  F061         	movff	__find_nth_cluster@cluster+1,__fat_offset_from_cluster@cluster+1
 17345  0132A8  EC1A  F0AC         	call	__fat_offset_from_cluster	;wreg free
 17346  0132AC  C060  F09B         	movff	?__fat_offset_from_cluster,__find_nth_cluster@offset
 17347  0132B0  C061  F09C         	movff	?__fat_offset_from_cluster+1,__find_nth_cluster@offset+1
 17348                           
 17349                           ;fat16.c: 201: if(sector != sector_in_buffer)
 17350  0132B4  0100               	movlb	0	; () banked
 17351  0132B6  519D               	movf	__find_nth_cluster@sector_in_buffer& (0+255),w,b
 17352  0132B8  199F               	xorwf	__find_nth_cluster@sector& (0+255),w,b
 17353  0132BA  E104               	bnz	u12650
 17354  0132BC  519E               	movf	(__find_nth_cluster@sector_in_buffer+1)& (0+255),w,b
 17355  0132BE  19A0               	xorwf	(__find_nth_cluster@sector+1)& (0+255),w,b
 17356  0132C0  B4D8               	btfsc	status,2,c
 17357  0132C2  D00A               	goto	l1769
 17358  0132C4                     u12650:
 17359                           
 17360                           ; BSR set to: 0
 17361                           ;fat16.c: 202: {;fat16.c: 203: flash_sector_read(sector, buffer);
 17362  0132C4  C09F  F087         	movff	__find_nth_cluster@sector,flash_sector_read@page
 17363  0132C8  C0A0  F088         	movff	__find_nth_cluster@sector+1,flash_sector_read@page+1
 17364  0132CC  0E00               	movlw	low _buffer
 17365  0132CE  6F89               	movwf	flash_sector_read@data& (0+255),b
 17366  0132D0  0E0A               	movlw	high _buffer
 17367  0132D2  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 17368  0132D4  EC2C  F0AB         	call	_flash_sector_read	;wreg free
 17369  0132D8                     l1769:
 17370                           
 17371                           ;fat16.c: 204: };fat16.c: 207: cluster = _read_value_from_offset(offset, buffer);
 17372  0132D8  C09B  F060         	movff	__find_nth_cluster@offset,__read_value_from_offset@offset
 17373  0132DC  C09C  F061         	movff	__find_nth_cluster@offset+1,__read_value_from_offset@offset+1
 17374  0132E0  0E00               	movlw	low _buffer
 17375  0132E2  0100               	movlb	0	; () banked
 17376  0132E4  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 17377  0132E6  0E0A               	movlw	high _buffer
 17378  0132E8  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 17379  0132EA  EC32  F0A7         	call	__read_value_from_offset	;wreg free
 17380  0132EE  C060  F097         	movff	?__read_value_from_offset,__find_nth_cluster@cluster
 17381  0132F2  C061  F098         	movff	?__read_value_from_offset+1,__find_nth_cluster@cluster+1
 17382  0132F6                     l1767:
 17383  0132F6  0100               	movlb	0	; () banked
 17384  0132F8  5199               	movf	__find_nth_cluster@n& (0+255),w,b
 17385  0132FA  119A               	iorwf	(__find_nth_cluster@n+1)& (0+255),w,b
 17386  0132FC  A4D8               	btfss	status,2,c
 17387  0132FE  D7C6               	goto	l1768
 17388                           
 17389                           ; BSR set to: 0
 17390                           ;fat16.c: 208: };fat16.c: 210: return cluster;
 17391  013300  C097  F097         	movff	__find_nth_cluster@cluster,?__find_nth_cluster
 17392  013304  C098  F098         	movff	__find_nth_cluster@cluster+1,?__find_nth_cluster+1
 17393  013308  0012               	return		;funcret
 17394  01330A                     __end_of__find_nth_cluster:
 17395                           	opt stack 0
 17396                           tblptru	equ	0xFF8
 17397                           tblptrh	equ	0xFF7
 17398                           tblptrl	equ	0xFF6
 17399                           tablat	equ	0xFF5
 17400                           prodh	equ	0xFF4
 17401                           prodl	equ	0xFF3
 17402                           postinc0	equ	0xFEE
 17403                           wreg	equ	0xFE8
 17404                           postdec1	equ	0xFE5
 17405                           plusw1	equ	0xFE3
 17406                           fsr1h	equ	0xFE2
 17407                           fsr1l	equ	0xFE1
 17408                           indf2	equ	0xFDF
 17409                           postinc2	equ	0xFDE
 17410                           postdec2	equ	0xFDD
 17411                           plusw2	equ	0xFDB
 17412                           fsr2h	equ	0xFDA
 17413                           fsr2l	equ	0xFD9
 17414                           status	equ	0xFD8
 17415                           
 17416 ;; *************** function __read_value_from_offset *****************
 17417 ;; Defined at:
 17418 ;;		line 114 in file "fat16.c"
 17419 ;; Parameters:    Size  Location     Type
 17420 ;;  offset          2    0[BANK0 ] unsigned int 
 17421 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 17422 ;;		 -> buffer(512), 
 17423 ;; Auto vars:     Size  Location     Type
 17424 ;;  value           2    7[BANK0 ] unsigned int 
 17425 ;; Return value:  Size  Location     Type
 17426 ;;                  2    0[BANK0 ] unsigned int 
 17427 ;; Registers used:
 17428 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17429 ;; Tracked objects:
 17430 ;;		On entry : 0/0
 17431 ;;		On exit  : 0/0
 17432 ;;		Unchanged: 0/0
 17433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17434 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17435 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17436 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17437 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17438 ;;Total ram usage:        9 bytes
 17439 ;; Hardware stack levels used:    1
 17440 ;; Hardware stack levels required when called:   10
 17441 ;; This function calls:
 17442 ;;		Nothing
 17443 ;; This function is called by:
 17444 ;;		__find_nth_cluster
 17445 ;;		__make_cluster_chain
 17446 ;; This function uses a non-reentrant model
 17447 ;;
 17448                           
 17449                           	psect	text64
 17450  014E64                     __ptext64:
 17451                           	opt stack 0
 17452  014E64                     __read_value_from_offset:
 17453                           	opt stack 16
 17454                           
 17455                           ;fat16.c: 116: uint16_t value;;fat16.c: 117: value = buffer[offset+1];
 17456                           
 17457                           ;incstack = 0
 17458  014E64  0E01               	movlw	1
 17459  014E66  0100               	movlb	0	; () banked
 17460  014E68  2560               	addwf	__read_value_from_offset@offset& (0+255),w,b
 17461  014E6A  6F64               	movwf	??__read_value_from_offset& (0+255),b
 17462  014E6C  0E00               	movlw	0
 17463  014E6E  2161               	addwfc	(__read_value_from_offset@offset+1)& (0+255),w,b
 17464  014E70  6F65               	movwf	(??__read_value_from_offset+1)& (0+255),b
 17465  014E72  5164               	movf	??__read_value_from_offset& (0+255),w,b
 17466  014E74  2562               	addwf	__read_value_from_offset@buffer& (0+255),w,b
 17467  014E76  6ED9               	movwf	fsr2l,c
 17468  014E78  5165               	movf	(??__read_value_from_offset+1)& (0+255),w,b
 17469  014E7A  2163               	addwfc	(__read_value_from_offset@buffer+1)& (0+255),w,b
 17470  014E7C  6EDA               	movwf	fsr2h,c
 17471  014E7E  50DF               	movf	indf2,w,c
 17472  014E80  6F66               	movwf	(??__read_value_from_offset+2)& (0+255),b
 17473  014E82  5166               	movf	(??__read_value_from_offset+2)& (0+255),w,b
 17474  014E84  6F67               	movwf	__read_value_from_offset@value& (0+255),b
 17475  014E86  6B68               	clrf	(__read_value_from_offset@value+1)& (0+255),b
 17476                           
 17477                           ; BSR set to: 0
 17478                           ;fat16.c: 118: value <<= 8;
 17479  014E88  5167               	movf	__read_value_from_offset@value& (0+255),w,b
 17480  014E8A  6F68               	movwf	(__read_value_from_offset@value+1)& (0+255),b
 17481  014E8C  6B67               	clrf	__read_value_from_offset@value& (0+255),b
 17482                           
 17483                           ; BSR set to: 0
 17484                           ;fat16.c: 119: value |= buffer[offset];
 17485  014E8E  5160               	movf	__read_value_from_offset@offset& (0+255),w,b
 17486  014E90  2562               	addwf	__read_value_from_offset@buffer& (0+255),w,b
 17487  014E92  6ED9               	movwf	fsr2l,c
 17488  014E94  5161               	movf	(__read_value_from_offset@offset+1)& (0+255),w,b
 17489  014E96  2163               	addwfc	(__read_value_from_offset@buffer+1)& (0+255),w,b
 17490  014E98  6EDA               	movwf	fsr2h,c
 17491  014E9A  50DF               	movf	indf2,w,c
 17492  014E9C  6F64               	movwf	??__read_value_from_offset& (0+255),b
 17493  014E9E  5164               	movf	??__read_value_from_offset& (0+255),w,b
 17494  014EA0  1367               	iorwf	__read_value_from_offset@value& (0+255),f,b
 17495                           
 17496                           ; BSR set to: 0
 17497                           ;fat16.c: 120: return value;
 17498  014EA2  C067  F060         	movff	__read_value_from_offset@value,?__read_value_from_offset
 17499  014EA6  C068  F061         	movff	__read_value_from_offset@value+1,?__read_value_from_offset+1
 17500  014EAA  0012               	return	
 17501  014EAC                     __end_of__read_value_from_offset:
 17502                           	opt stack 0
 17503                           tblptru	equ	0xFF8
 17504                           tblptrh	equ	0xFF7
 17505                           tblptrl	equ	0xFF6
 17506                           tablat	equ	0xFF5
 17507                           prodh	equ	0xFF4
 17508                           prodl	equ	0xFF3
 17509                           postinc0	equ	0xFEE
 17510                           wreg	equ	0xFE8
 17511                           postdec1	equ	0xFE5
 17512                           plusw1	equ	0xFE3
 17513                           fsr1h	equ	0xFE2
 17514                           fsr1l	equ	0xFE1
 17515                           indf2	equ	0xFDF
 17516                           postinc2	equ	0xFDE
 17517                           postdec2	equ	0xFDD
 17518                           plusw2	equ	0xFDB
 17519                           fsr2h	equ	0xFDA
 17520                           fsr2l	equ	0xFD9
 17521                           status	equ	0xFD8
 17522                           
 17523 ;; *************** function __read_fat *****************
 17524 ;; Defined at:
 17525 ;;		line 456 in file "fat16.c"
 17526 ;; Parameters:    Size  Location     Type
 17527 ;;  cluster         2   47[BANK0 ] unsigned int 
 17528 ;; Auto vars:     Size  Location     Type
 17529 ;;  value           2   53[BANK0 ] unsigned int 
 17530 ;;  offset          2   51[BANK0 ] unsigned int 
 17531 ;;  sector          2   49[BANK0 ] unsigned int 
 17532 ;; Return value:  Size  Location     Type
 17533 ;;                  2   47[BANK0 ] unsigned int 
 17534 ;; Registers used:
 17535 ;;		wreg, status,2, status,0, cstack
 17536 ;; Tracked objects:
 17537 ;;		On entry : 0/0
 17538 ;;		On exit  : 0/0
 17539 ;;		Unchanged: 0/0
 17540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17541 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17542 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17544 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17545 ;;Total ram usage:        8 bytes
 17546 ;; Hardware stack levels used:    1
 17547 ;; Hardware stack levels required when called:   15
 17548 ;; This function calls:
 17549 ;;		__fat_offset_from_cluster
 17550 ;;		__fat_sector_from_cluster
 17551 ;;		_flash_partial_read
 17552 ;; This function is called by:
 17553 ;;		__find_nth_cluster
 17554 ;;		_fat_read_from_file_fast
 17555 ;;		_fat_modify_file
 17556 ;; This function uses a non-reentrant model
 17557 ;;
 17558                           
 17559                           	psect	text65
 17560  01479E                     __ptext65:
 17561                           	opt stack 0
 17562  01479E                     __read_fat:
 17563                           	opt stack 12
 17564                           
 17565                           ;fat16.c: 458: uint16_t sector;;fat16.c: 459: uint16_t offset;;fat16.c: 460: uint16_t va
      +                          lue;;fat16.c: 463: sector = _fat_sector_from_cluster(cluster);
 17566                           
 17567                           ; BSR set to: 0
 17568                           ;incstack = 0
 17569  01479E  C08F  F060         	movff	__read_fat@cluster,__fat_sector_from_cluster@cluster
 17570  0147A2  C090  F061         	movff	__read_fat@cluster+1,__fat_sector_from_cluster@cluster+1
 17571  0147A6  EC0D  F0AC         	call	__fat_sector_from_cluster	;wreg free
 17572  0147AA  C060  F091         	movff	?__fat_sector_from_cluster,__read_fat@sector
 17573  0147AE  C061  F092         	movff	?__fat_sector_from_cluster+1,__read_fat@sector+1
 17574                           
 17575                           ;fat16.c: 464: offset = _fat_offset_from_cluster(cluster);
 17576  0147B2  C08F  F060         	movff	__read_fat@cluster,__fat_offset_from_cluster@cluster
 17577  0147B6  C090  F061         	movff	__read_fat@cluster+1,__fat_offset_from_cluster@cluster+1
 17578  0147BA  EC1A  F0AC         	call	__fat_offset_from_cluster	;wreg free
 17579  0147BE  C060  F093         	movff	?__fat_offset_from_cluster,__read_fat@offset
 17580  0147C2  C061  F094         	movff	?__fat_offset_from_cluster+1,__read_fat@offset+1
 17581                           
 17582                           ;fat16.c: 467: flash_partial_read(sector, offset, 2, &value);
 17583  0147C6  C091  F087         	movff	__read_fat@sector,flash_partial_read@page
 17584  0147CA  C092  F088         	movff	__read_fat@sector+1,flash_partial_read@page+1
 17585  0147CE  C093  F089         	movff	__read_fat@offset,flash_partial_read@start
 17586  0147D2  C094  F08A         	movff	__read_fat@offset+1,flash_partial_read@start+1
 17587  0147D6  0E00               	movlw	0
 17588  0147D8  0100               	movlb	0	; () banked
 17589  0147DA  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 17590  0147DC  0E02               	movlw	2
 17591  0147DE  6F8B               	movwf	flash_partial_read@length& (0+255),b
 17592  0147E0  0E95               	movlw	low __read_fat@value
 17593  0147E2  6F8D               	movwf	flash_partial_read@data& (0+255),b
 17594  0147E4  0E00               	movlw	high __read_fat@value
 17595  0147E6  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 17596  0147E8  EC40  F0AB         	call	_flash_partial_read	;wreg free
 17597                           
 17598                           ;fat16.c: 470: return value;
 17599  0147EC  C095  F08F         	movff	__read_fat@value,?__read_fat
 17600  0147F0  C096  F090         	movff	__read_fat@value+1,?__read_fat+1
 17601  0147F4  0012               	return	
 17602  0147F6                     __end_of__read_fat:
 17603                           	opt stack 0
 17604                           tblptru	equ	0xFF8
 17605                           tblptrh	equ	0xFF7
 17606                           tblptrl	equ	0xFF6
 17607                           tablat	equ	0xFF5
 17608                           prodh	equ	0xFF4
 17609                           prodl	equ	0xFF3
 17610                           postinc0	equ	0xFEE
 17611                           wreg	equ	0xFE8
 17612                           postdec1	equ	0xFE5
 17613                           plusw1	equ	0xFE3
 17614                           fsr1h	equ	0xFE2
 17615                           fsr1l	equ	0xFE1
 17616                           indf2	equ	0xFDF
 17617                           postinc2	equ	0xFDE
 17618                           postdec2	equ	0xFDD
 17619                           plusw2	equ	0xFDB
 17620                           fsr2h	equ	0xFDA
 17621                           fsr2l	equ	0xFD9
 17622                           status	equ	0xFD8
 17623                           
 17624 ;; *************** function __fat_sector_from_cluster *****************
 17625 ;; Defined at:
 17626 ;;		line 75 in file "fat16.c"
 17627 ;; Parameters:    Size  Location     Type
 17628 ;;  cluster         2    0[BANK0 ] unsigned int 
 17629 ;; Auto vars:     Size  Location     Type
 17630 ;;		None
 17631 ;; Return value:  Size  Location     Type
 17632 ;;                  2    0[BANK0 ] unsigned int 
 17633 ;; Registers used:
 17634 ;;		wreg, status,2, status,0
 17635 ;; Tracked objects:
 17636 ;;		On entry : 0/0
 17637 ;;		On exit  : 0/0
 17638 ;;		Unchanged: 0/0
 17639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17640 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17643 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17644 ;;Total ram usage:        2 bytes
 17645 ;; Hardware stack levels used:    1
 17646 ;; Hardware stack levels required when called:   10
 17647 ;; This function calls:
 17648 ;;		Nothing
 17649 ;; This function is called by:
 17650 ;;		__find_nth_cluster
 17651 ;;		__make_cluster_chain
 17652 ;;		__read_fat
 17653 ;; This function uses a non-reentrant model
 17654 ;;
 17655                           
 17656                           	psect	text66
 17657  01581A                     __ptext66:
 17658                           	opt stack 0
 17659  01581A                     __fat_sector_from_cluster:
 17660                           	opt stack 16
 17661                           
 17662                           ;fat16.c: 77: cluster >>= 8;
 17663                           
 17664                           ;incstack = 0
 17665  01581A  0100               	movlb	0	; () banked
 17666  01581C  5161               	movf	(__fat_sector_from_cluster@cluster+1)& (0+255),w,b
 17667  01581E  6F60               	movwf	__fat_sector_from_cluster@cluster& (0+255),b
 17668  015820  6B61               	clrf	(__fat_sector_from_cluster@cluster+1)& (0+255),b
 17669                           
 17670                           ; BSR set to: 0
 17671                           ;fat16.c: 78: cluster += 2;
 17672  015822  0E02               	movlw	2
 17673  015824  2760               	addwf	__fat_sector_from_cluster@cluster& (0+255),f,b
 17674  015826  0E00               	movlw	0
 17675  015828  2361               	addwfc	(__fat_sector_from_cluster@cluster+1)& (0+255),f,b
 17676                           
 17677                           ; BSR set to: 0
 17678                           ;fat16.c: 79: return cluster;
 17679  01582A  C060  F060         	movff	__fat_sector_from_cluster@cluster,?__fat_sector_from_cluster
 17680  01582E  C061  F061         	movff	__fat_sector_from_cluster@cluster+1,?__fat_sector_from_cluster+1
 17681  015832  0012               	return	
 17682  015834                     __end_of__fat_sector_from_cluster:
 17683                           	opt stack 0
 17684                           tblptru	equ	0xFF8
 17685                           tblptrh	equ	0xFF7
 17686                           tblptrl	equ	0xFF6
 17687                           tablat	equ	0xFF5
 17688                           prodh	equ	0xFF4
 17689                           prodl	equ	0xFF3
 17690                           postinc0	equ	0xFEE
 17691                           wreg	equ	0xFE8
 17692                           postdec1	equ	0xFE5
 17693                           plusw1	equ	0xFE3
 17694                           fsr1h	equ	0xFE2
 17695                           fsr1l	equ	0xFE1
 17696                           indf2	equ	0xFDF
 17697                           postinc2	equ	0xFDE
 17698                           postdec2	equ	0xFDD
 17699                           plusw2	equ	0xFDB
 17700                           fsr2h	equ	0xFDA
 17701                           fsr2l	equ	0xFD9
 17702                           status	equ	0xFD8
 17703                           
 17704 ;; *************** function __fat_offset_from_cluster *****************
 17705 ;; Defined at:
 17706 ;;		line 82 in file "fat16.c"
 17707 ;; Parameters:    Size  Location     Type
 17708 ;;  cluster         2    0[BANK0 ] unsigned int 
 17709 ;; Auto vars:     Size  Location     Type
 17710 ;;		None
 17711 ;; Return value:  Size  Location     Type
 17712 ;;                  2    0[BANK0 ] unsigned int 
 17713 ;; Registers used:
 17714 ;;		wreg, status,2, status,0
 17715 ;; Tracked objects:
 17716 ;;		On entry : 0/0
 17717 ;;		On exit  : 0/0
 17718 ;;		Unchanged: 0/0
 17719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17720 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17723 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17724 ;;Total ram usage:        2 bytes
 17725 ;; Hardware stack levels used:    1
 17726 ;; Hardware stack levels required when called:   10
 17727 ;; This function calls:
 17728 ;;		Nothing
 17729 ;; This function is called by:
 17730 ;;		__find_nth_cluster
 17731 ;;		__make_cluster_chain
 17732 ;;		__read_fat
 17733 ;; This function uses a non-reentrant model
 17734 ;;
 17735                           
 17736                           	psect	text67
 17737  015834                     __ptext67:
 17738                           	opt stack 0
 17739  015834                     __fat_offset_from_cluster:
 17740                           	opt stack 16
 17741                           
 17742                           ;fat16.c: 84: cluster &= 0xFF;
 17743                           
 17744                           ; BSR set to: 0
 17745                           ;incstack = 0
 17746  015834  0EFF               	movlw	255
 17747  015836  0100               	movlb	0	; () banked
 17748  015838  1760               	andwf	__fat_offset_from_cluster@cluster& (0+255),f,b
 17749  01583A  0E00               	movlw	0
 17750  01583C  1761               	andwf	(__fat_offset_from_cluster@cluster+1)& (0+255),f,b
 17751                           
 17752                           ; BSR set to: 0
 17753                           ;fat16.c: 85: cluster <<= 1;
 17754  01583E  90D8               	bcf	status,0,c
 17755  015840  3760               	rlcf	__fat_offset_from_cluster@cluster& (0+255),f,b
 17756  015842  3761               	rlcf	(__fat_offset_from_cluster@cluster+1)& (0+255),f,b
 17757                           
 17758                           ; BSR set to: 0
 17759                           ;fat16.c: 86: return cluster;
 17760  015844  C060  F060         	movff	__fat_offset_from_cluster@cluster,?__fat_offset_from_cluster
 17761  015848  C061  F061         	movff	__fat_offset_from_cluster@cluster+1,?__fat_offset_from_cluster+1
 17762  01584C  0012               	return	
 17763  01584E                     __end_of__fat_offset_from_cluster:
 17764                           	opt stack 0
 17765                           tblptru	equ	0xFF8
 17766                           tblptrh	equ	0xFF7
 17767                           tblptrl	equ	0xFF6
 17768                           tablat	equ	0xFF5
 17769                           prodh	equ	0xFF4
 17770                           prodl	equ	0xFF3
 17771                           postinc0	equ	0xFEE
 17772                           wreg	equ	0xFE8
 17773                           postdec1	equ	0xFE5
 17774                           plusw1	equ	0xFE3
 17775                           fsr1h	equ	0xFE2
 17776                           fsr1l	equ	0xFE1
 17777                           indf2	equ	0xFDF
 17778                           postinc2	equ	0xFDE
 17779                           postdec2	equ	0xFDD
 17780                           plusw2	equ	0xFDB
 17781                           fsr2h	equ	0xFDA
 17782                           fsr2l	equ	0xFD9
 17783                           status	equ	0xFD8
 17784                           
 17785 ;; *************** function __data_sector_from_cluster *****************
 17786 ;; Defined at:
 17787 ;;		line 70 in file "fat16.c"
 17788 ;; Parameters:    Size  Location     Type
 17789 ;;  fat_cluster     2    0[BANK0 ] unsigned int 
 17790 ;; Auto vars:     Size  Location     Type
 17791 ;;		None
 17792 ;; Return value:  Size  Location     Type
 17793 ;;                  2    0[BANK0 ] unsigned int 
 17794 ;; Registers used:
 17795 ;;		wreg, status,2, status,0
 17796 ;; Tracked objects:
 17797 ;;		On entry : 0/0
 17798 ;;		On exit  : 0/0
 17799 ;;		Unchanged: 0/0
 17800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17801 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17804 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17805 ;;Total ram usage:        2 bytes
 17806 ;; Hardware stack levels used:    1
 17807 ;; Hardware stack levels required when called:   10
 17808 ;; This function calls:
 17809 ;;		Nothing
 17810 ;; This function is called by:
 17811 ;;		_fat_read_from_file_fast
 17812 ;;		_fat_modify_file
 17813 ;;		_fat_copy_sector_to_buffer
 17814 ;; This function uses a non-reentrant model
 17815 ;;
 17816                           
 17817                           	psect	text68
 17818  015900                     __ptext68:
 17819                           	opt stack 0
 17820  015900                     __data_sector_from_cluster:
 17821                           	opt stack 17
 17822                           
 17823                           ;fat16.c: 72: return fat_cluster + 38 - 2;
 17824                           
 17825                           ; BSR set to: 0
 17826                           ;incstack = 0
 17827  015900  0E24               	movlw	36
 17828  015902  0100               	movlb	0	; () banked
 17829  015904  2560               	addwf	__data_sector_from_cluster@fat_cluster& (0+255),w,b
 17830  015906  6F60               	movwf	?__data_sector_from_cluster& (0+255),b
 17831  015908  0E00               	movlw	0
 17832  01590A  2161               	addwfc	(__data_sector_from_cluster@fat_cluster+1)& (0+255),w,b
 17833  01590C  6F61               	movwf	(?__data_sector_from_cluster+1)& (0+255),b
 17834  01590E  0012               	return	
 17835  015910                     __end_of__data_sector_from_cluster:
 17836                           	opt stack 0
 17837                           tblptru	equ	0xFF8
 17838                           tblptrh	equ	0xFF7
 17839                           tblptrl	equ	0xFF6
 17840                           tablat	equ	0xFF5
 17841                           prodh	equ	0xFF4
 17842                           prodl	equ	0xFF3
 17843                           postinc0	equ	0xFEE
 17844                           wreg	equ	0xFE8
 17845                           postdec1	equ	0xFE5
 17846                           plusw1	equ	0xFE3
 17847                           fsr1h	equ	0xFE2
 17848                           fsr1l	equ	0xFE1
 17849                           indf2	equ	0xFDF
 17850                           postinc2	equ	0xFDE
 17851                           postdec2	equ	0xFDD
 17852                           plusw2	equ	0xFDB
 17853                           fsr2h	equ	0xFDA
 17854                           fsr2l	equ	0xFD9
 17855                           status	equ	0xFD8
 17856                           
 17857 ;; *************** function _fat_get_file_information *****************
 17858 ;; Defined at:
 17859 ;;		line 1391 in file "fat16.c"
 17860 ;; Parameters:    Size  Location     Type
 17861 ;;  file_number     1    wreg     unsigned char 
 17862 ;;  data            2   47[BANK0 ] PTR struct .
 17863 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 17864 ;; Auto vars:     Size  Location     Type
 17865 ;;  file_number     1   54[BANK0 ] unsigned char 
 17866 ;;  offset          2   52[BANK0 ] unsigned int 
 17867 ;;  root_sector     2   50[BANK0 ] unsigned int 
 17868 ;; Return value:  Size  Location     Type
 17869 ;;                  1    wreg      unsigned char 
 17870 ;; Registers used:
 17871 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17872 ;; Tracked objects:
 17873 ;;		On entry : 0/0
 17874 ;;		On exit  : 0/0
 17875 ;;		Unchanged: 0/0
 17876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17877 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17878 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17879 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17880 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17881 ;;Total ram usage:        8 bytes
 17882 ;; Hardware stack levels used:    1
 17883 ;; Hardware stack levels required when called:   15
 17884 ;; This function calls:
 17885 ;;		__offset_from_file_number
 17886 ;;		__sector_from_file_number
 17887 ;;		_flash_partial_read
 17888 ;; This function is called by:
 17889 ;;		_fat_read_from_file
 17890 ;;		_fat_resize_file
 17891 ;;		_fat_modify_file
 17892 ;;		_fat_rename_file
 17893 ;; This function uses a non-reentrant model
 17894 ;;
 17895                           
 17896                           	psect	text69
 17897  013C70                     __ptext69:
 17898                           	opt stack 0
 17899  013C70                     _fat_get_file_information:
 17900                           	opt stack 12
 17901                           
 17902                           ; BSR set to: 0
 17903                           ;incstack = 0
 17904                           ;fat_get_file_information@file_number stored from wreg
 17905  013C70  0100               	movlb	0	; () banked
 17906  013C72  6F96               	movwf	fat_get_file_information@file_number& (0+255),b
 17907                           
 17908                           ;fat16.c: 1393: uint16_t root_sector;;fat16.c: 1394: uint16_t offset;;fat16.c: 1396: if(
      +                          file_number>=64)
 17909  013C74  0E3F               	movlw	63
 17910  013C76  0100               	movlb	0	; () banked
 17911  013C78  6596               	cpfsgt	fat_get_file_information@file_number& (0+255),b
 17912  013C7A  D002               	goto	l2078
 17913                           
 17914                           ; BSR set to: 0
 17915                           ;fat16.c: 1397: {;fat16.c: 1399: return 0x01;
 17916  013C7C  0E01               	movlw	1
 17917                           
 17918                           ; BSR set to: 0
 17919  013C7E  0012               	return	
 17920  013C80                     l2078:
 17921                           
 17922                           ; BSR set to: 0
 17923                           ;fat16.c: 1400: };fat16.c: 1403: root_sector = _sector_from_file_number(file_number);
 17924                           
 17925                           ; BSR set to: 0
 17926  013C80  5196               	movf	fat_get_file_information@file_number& (0+255),w,b
 17927  013C82  ECCC  F0A9         	call	__sector_from_file_number
 17928  013C86  C060  F092         	movff	?__sector_from_file_number,fat_get_file_information@root_sector
 17929  013C8A  C061  F093         	movff	?__sector_from_file_number+1,fat_get_file_information@root_sector+1
 17930                           
 17931                           ;fat16.c: 1404: offset = _offset_from_file_number(file_number);
 17932  013C8E  0100               	movlb	0	; () banked
 17933  013C90  5196               	movf	fat_get_file_information@file_number& (0+255),w,b
 17934  013C92  ECDB  F0AA         	call	__offset_from_file_number
 17935  013C96  C060  F094         	movff	?__offset_from_file_number,fat_get_file_information@offset
 17936  013C9A  C061  F095         	movff	?__offset_from_file_number+1,fat_get_file_information@offset+1
 17937                           
 17938                           ;fat16.c: 1407: flash_partial_read(root_sector, offset, 32, (uint8_t*) data);
 17939  013C9E  C092  F087         	movff	fat_get_file_information@root_sector,flash_partial_read@page
 17940  013CA2  C093  F088         	movff	fat_get_file_information@root_sector+1,flash_partial_read@page+1
 17941  013CA6  C094  F089         	movff	fat_get_file_information@offset,flash_partial_read@start
 17942  013CAA  C095  F08A         	movff	fat_get_file_information@offset+1,flash_partial_read@start+1
 17943  013CAE  0E00               	movlw	0
 17944  013CB0  0100               	movlb	0	; () banked
 17945  013CB2  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 17946  013CB4  0E20               	movlw	32
 17947  013CB6  6F8B               	movwf	flash_partial_read@length& (0+255),b
 17948  013CB8  C08F  F08D         	movff	fat_get_file_information@data,flash_partial_read@data
 17949  013CBC  C090  F08E         	movff	fat_get_file_information@data+1,flash_partial_read@data+1
 17950  013CC0  EC40  F0AB         	call	_flash_partial_read	;wreg free
 17951                           
 17952                           ;fat16.c: 1410: if((data->fileName[0]==0x00) || (data->fileName[0]==0xE5))
 17953  013CC4  C08F  FFD9         	movff	fat_get_file_information@data,fsr2l
 17954  013CC8  C090  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 17955  013CCC  50DF               	movf	indf2,w,c
 17956  013CCE  B4D8               	btfsc	status,2,c
 17957  013CD0  D008               	goto	u13450
 17958  013CD2  C08F  FFD9         	movff	fat_get_file_information@data,fsr2l
 17959  013CD6  C090  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 17960  013CDA  0EE5               	movlw	229
 17961  013CDC  18DE               	xorwf	postinc2,w,c
 17962  013CDE  A4D8               	btfss	status,2,c
 17963  013CE0  D002               	goto	l2080
 17964  013CE2                     u13450:
 17965                           
 17966                           ;fat16.c: 1411: {;fat16.c: 1413: return 0x02;
 17967  013CE2  0E02               	movlw	2
 17968  013CE4  0012               	return	
 17969  013CE6                     l2080:
 17970                           
 17971                           ;fat16.c: 1414: };fat16.c: 1417: return 0x00;
 17972  013CE6  0E00               	movlw	0
 17973  013CE8  0012               	return	
 17974  013CEA                     __end_of_fat_get_file_information:
 17975                           	opt stack 0
 17976                           tblptru	equ	0xFF8
 17977                           tblptrh	equ	0xFF7
 17978                           tblptrl	equ	0xFF6
 17979                           tablat	equ	0xFF5
 17980                           prodh	equ	0xFF4
 17981                           prodl	equ	0xFF3
 17982                           postinc0	equ	0xFEE
 17983                           wreg	equ	0xFE8
 17984                           postdec1	equ	0xFE5
 17985                           plusw1	equ	0xFE3
 17986                           fsr1h	equ	0xFE2
 17987                           fsr1l	equ	0xFE1
 17988                           indf2	equ	0xFDF
 17989                           postinc2	equ	0xFDE
 17990                           postdec2	equ	0xFDD
 17991                           plusw2	equ	0xFDB
 17992                           fsr2h	equ	0xFDA
 17993                           fsr2l	equ	0xFD9
 17994                           status	equ	0xFD8
 17995                           
 17996 ;; *************** function _fat_get_file_size *****************
 17997 ;; Defined at:
 17998 ;;		line 562 in file "fat16.c"
 17999 ;; Parameters:    Size  Location     Type
 18000 ;;  file_number     1    wreg     unsigned char 
 18001 ;; Auto vars:     Size  Location     Type
 18002 ;;  file_number     1   65[BANK0 ] unsigned char 
 18003 ;;  file_size       4   61[BANK0 ] unsigned long 
 18004 ;;  offset          2   59[BANK0 ] unsigned int 
 18005 ;;  sector          2   57[BANK0 ] unsigned int 
 18006 ;; Return value:  Size  Location     Type
 18007 ;;                  4   53[BANK0 ] unsigned long 
 18008 ;; Registers used:
 18009 ;;		wreg, status,2, status,0, cstack
 18010 ;; Tracked objects:
 18011 ;;		On entry : 0/0
 18012 ;;		On exit  : 0/0
 18013 ;;		Unchanged: 0/0
 18014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18015 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18016 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18018 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18019 ;;Total ram usage:       13 bytes
 18020 ;; Hardware stack levels used:    1
 18021 ;; Hardware stack levels required when called:   16
 18022 ;; This function calls:
 18023 ;;		__offset_from_file_number
 18024 ;;		__root_is_available
 18025 ;;		__sector_from_file_number
 18026 ;;		_flash_partial_read
 18027 ;; This function is called by:
 18028 ;;		_configFile_read
 18029 ;;		_fat_append_to_file
 18030 ;;		_fat_copy_file
 18031 ;;		_fat_copy_sector_to_buffer
 18032 ;;		_fat_write_sector_from_buffer
 18033 ;; This function uses a non-reentrant model
 18034 ;;
 18035                           
 18036                           	psect	text70
 18037  013CEA                     __ptext70:
 18038                           	opt stack 0
 18039  013CEA                     _fat_get_file_size:
 18040                           	opt stack 12
 18041                           
 18042                           ;incstack = 0
 18043                           ;fat_get_file_size@file_number stored from wreg
 18044  013CEA  0100               	movlb	0	; () banked
 18045  013CEC  6FA1               	movwf	fat_get_file_size@file_number& (0+255),b
 18046                           
 18047                           ;fat16.c: 564: uint32_t file_size;;fat16.c: 565: uint16_t sector;;fat16.c: 566: uint16_t
      +                           offset;;fat16.c: 569: if(_root_is_available(file_number))
 18048  013CEE  0100               	movlb	0	; () banked
 18049  013CF0  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 18050  013CF2  EC3E  F0A0         	call	__root_is_available
 18051  013CF6  0900               	iorlw	0
 18052  013CF8  B4D8               	btfsc	status,2,c
 18053  013CFA  D006               	goto	l1845
 18054                           
 18055                           ;fat16.c: 570: {;fat16.c: 572: return 0xFFFFFFFF;
 18056  013CFC  0100               	movlb	0	; () banked
 18057  013CFE  6995               	setf	?_fat_get_file_size& (0+255),b
 18058  013D00  6996               	setf	(?_fat_get_file_size+1)& (0+255),b
 18059  013D02  6997               	setf	(?_fat_get_file_size+2)& (0+255),b
 18060  013D04  6998               	setf	(?_fat_get_file_size+3)& (0+255),b
 18061  013D06  0012               	return	
 18062  013D08                     l1845:
 18063                           
 18064                           ;fat16.c: 573: };fat16.c: 576: sector = _sector_from_file_number(file_number);
 18065                           
 18066                           ; BSR set to: 0
 18067  013D08  0100               	movlb	0	; () banked
 18068  013D0A  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 18069  013D0C  ECCC  F0A9         	call	__sector_from_file_number
 18070  013D10  C060  F099         	movff	?__sector_from_file_number,fat_get_file_size@sector
 18071  013D14  C061  F09A         	movff	?__sector_from_file_number+1,fat_get_file_size@sector+1
 18072                           
 18073                           ;fat16.c: 577: offset = _offset_from_file_number(file_number);
 18074  013D18  0100               	movlb	0	; () banked
 18075  013D1A  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 18076  013D1C  ECDB  F0AA         	call	__offset_from_file_number
 18077  013D20  C060  F09B         	movff	?__offset_from_file_number,fat_get_file_size@offset
 18078  013D24  C061  F09C         	movff	?__offset_from_file_number+1,fat_get_file_size@offset+1
 18079                           
 18080                           ;fat16.c: 580: flash_partial_read(sector, offset+28, 4, &file_size);
 18081  013D28  C099  F087         	movff	fat_get_file_size@sector,flash_partial_read@page
 18082  013D2C  C09A  F088         	movff	fat_get_file_size@sector+1,flash_partial_read@page+1
 18083  013D30  0E1C               	movlw	28
 18084  013D32  0100               	movlb	0	; () banked
 18085  013D34  259B               	addwf	fat_get_file_size@offset& (0+255),w,b
 18086  013D36  6F89               	movwf	flash_partial_read@start& (0+255),b
 18087  013D38  0E00               	movlw	0
 18088  013D3A  219C               	addwfc	(fat_get_file_size@offset+1)& (0+255),w,b
 18089  013D3C  6F8A               	movwf	(flash_partial_read@start+1)& (0+255),b
 18090  013D3E  0E00               	movlw	0
 18091  013D40  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 18092  013D42  0E04               	movlw	4
 18093  013D44  6F8B               	movwf	flash_partial_read@length& (0+255),b
 18094  013D46  0E9D               	movlw	low fat_get_file_size@file_size
 18095  013D48  6F8D               	movwf	flash_partial_read@data& (0+255),b
 18096  013D4A  0E00               	movlw	high fat_get_file_size@file_size
 18097  013D4C  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 18098  013D4E  EC40  F0AB         	call	_flash_partial_read	;wreg free
 18099                           
 18100                           ;fat16.c: 583: return file_size;
 18101  013D52  C09D  F095         	movff	fat_get_file_size@file_size,?_fat_get_file_size
 18102  013D56  C09E  F096         	movff	fat_get_file_size@file_size+1,?_fat_get_file_size+1
 18103  013D5A  C09F  F097         	movff	fat_get_file_size@file_size+2,?_fat_get_file_size+2
 18104  013D5E  C0A0  F098         	movff	fat_get_file_size@file_size+3,?_fat_get_file_size+3
 18105  013D62  0012               	return	
 18106  013D64                     __end_of_fat_get_file_size:
 18107                           	opt stack 0
 18108                           tblptru	equ	0xFF8
 18109                           tblptrh	equ	0xFF7
 18110                           tblptrl	equ	0xFF6
 18111                           tablat	equ	0xFF5
 18112                           prodh	equ	0xFF4
 18113                           prodl	equ	0xFF3
 18114                           postinc0	equ	0xFEE
 18115                           wreg	equ	0xFE8
 18116                           postdec1	equ	0xFE5
 18117                           plusw1	equ	0xFE3
 18118                           fsr1h	equ	0xFE2
 18119                           fsr1l	equ	0xFE1
 18120                           indf2	equ	0xFDF
 18121                           postinc2	equ	0xFDE
 18122                           postdec2	equ	0xFDD
 18123                           plusw2	equ	0xFDB
 18124                           fsr2h	equ	0xFDA
 18125                           fsr2l	equ	0xFD9
 18126                           status	equ	0xFD8
 18127                           
 18128 ;; *************** function __root_is_available *****************
 18129 ;; Defined at:
 18130 ;;		line 408 in file "fat16.c"
 18131 ;; Parameters:    Size  Location     Type
 18132 ;;  file_number     1    wreg     unsigned char 
 18133 ;; Auto vars:     Size  Location     Type
 18134 ;;  file_number     1   51[BANK0 ] unsigned char 
 18135 ;;  offset          2   49[BANK0 ] unsigned int 
 18136 ;;  root_sector     2   47[BANK0 ] unsigned int 
 18137 ;;  first_byte      1   52[BANK0 ] unsigned char 
 18138 ;; Return value:  Size  Location     Type
 18139 ;;                  1    wreg      unsigned char 
 18140 ;; Registers used:
 18141 ;;		wreg, status,2, status,0, cstack
 18142 ;; Tracked objects:
 18143 ;;		On entry : 0/0
 18144 ;;		On exit  : 0/0
 18145 ;;		Unchanged: 0/0
 18146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18148 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18150 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18151 ;;Total ram usage:        6 bytes
 18152 ;; Hardware stack levels used:    1
 18153 ;; Hardware stack levels required when called:   15
 18154 ;; This function calls:
 18155 ;;		__offset_from_file_number
 18156 ;;		__sector_from_file_number
 18157 ;;		_flash_partial_read
 18158 ;; This function is called by:
 18159 ;;		__get_available_root_entry
 18160 ;;		_fat_get_file_size
 18161 ;;		_fat_resize_file
 18162 ;;		_fat_delete_file
 18163 ;;		_fat_append_to_file
 18164 ;;		_fat_copy_file
 18165 ;;		_fat_copy_sector_to_buffer
 18166 ;;		_fat_write_sector_from_buffer
 18167 ;; This function uses a non-reentrant model
 18168 ;;
 18169                           
 18170                           	psect	text71
 18171  01407C                     __ptext71:
 18172                           	opt stack 0
 18173  01407C                     __root_is_available:
 18174                           	opt stack 12
 18175                           
 18176                           ;incstack = 0
 18177                           ;__root_is_available@file_number stored from wreg
 18178  01407C  0100               	movlb	0	; () banked
 18179  01407E  6F93               	movwf	__root_is_available@file_number& (0+255),b
 18180                           
 18181                           ;fat16.c: 410: uint16_t root_sector;;fat16.c: 411: uint16_t offset;;fat16.c: 412: uint8_
      +                          t first_byte;;fat16.c: 416: if(file_number>=64)
 18182  014080  0E3F               	movlw	63
 18183  014082  0100               	movlb	0	; () banked
 18184  014084  6593               	cpfsgt	__root_is_available@file_number& (0+255),b
 18185  014086  D002               	goto	l1806
 18186                           
 18187                           ; BSR set to: 0
 18188                           ;fat16.c: 417: {;fat16.c: 419: return 0;
 18189  014088  0E00               	movlw	0
 18190                           
 18191                           ; BSR set to: 0
 18192  01408A  0012               	return	
 18193  01408C                     l1806:
 18194                           
 18195                           ; BSR set to: 0
 18196                           ;fat16.c: 420: };fat16.c: 423: root_sector = _sector_from_file_number(file_number);
 18197                           
 18198                           ; BSR set to: 0
 18199  01408C  5193               	movf	__root_is_available@file_number& (0+255),w,b
 18200  01408E  ECCC  F0A9         	call	__sector_from_file_number
 18201  014092  C060  F08F         	movff	?__sector_from_file_number,__root_is_available@root_sector
 18202  014096  C061  F090         	movff	?__sector_from_file_number+1,__root_is_available@root_sector+1
 18203                           
 18204                           ;fat16.c: 424: offset = _offset_from_file_number(file_number);
 18205  01409A  0100               	movlb	0	; () banked
 18206  01409C  5193               	movf	__root_is_available@file_number& (0+255),w,b
 18207  01409E  ECDB  F0AA         	call	__offset_from_file_number
 18208  0140A2  C060  F091         	movff	?__offset_from_file_number,__root_is_available@offset
 18209  0140A6  C061  F092         	movff	?__offset_from_file_number+1,__root_is_available@offset+1
 18210                           
 18211                           ;fat16.c: 427: flash_partial_read(root_sector, offset, 1, &first_byte);
 18212  0140AA  C08F  F087         	movff	__root_is_available@root_sector,flash_partial_read@page
 18213  0140AE  C090  F088         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 18214  0140B2  C091  F089         	movff	__root_is_available@offset,flash_partial_read@start
 18215  0140B6  C092  F08A         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 18216  0140BA  0E00               	movlw	0
 18217  0140BC  0100               	movlb	0	; () banked
 18218  0140BE  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 18219  0140C0  0E01               	movlw	1
 18220  0140C2  6F8B               	movwf	flash_partial_read@length& (0+255),b
 18221  0140C4  0E94               	movlw	low __root_is_available@first_byte
 18222  0140C6  6F8D               	movwf	flash_partial_read@data& (0+255),b
 18223  0140C8  0E00               	movlw	high __root_is_available@first_byte
 18224  0140CA  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 18225  0140CC  EC40  F0AB         	call	_flash_partial_read	;wreg free
 18226                           
 18227                           ;fat16.c: 430: if((first_byte==0x00) || (first_byte==0xE5))
 18228  0140D0  0100               	movlb	0	; () banked
 18229  0140D2  5194               	movf	__root_is_available@first_byte& (0+255),w,b
 18230  0140D4  B4D8               	btfsc	status,2,c
 18231  0140D6  D004               	goto	u12690
 18232                           
 18233                           ; BSR set to: 0
 18234  0140D8  0EE5               	movlw	229
 18235  0140DA  1994               	xorwf	__root_is_available@first_byte& (0+255),w,b
 18236  0140DC  A4D8               	btfss	status,2,c
 18237  0140DE  D002               	goto	l1808
 18238  0140E0                     u12690:
 18239                           
 18240                           ; BSR set to: 0
 18241                           ;fat16.c: 431: {;fat16.c: 433: return 1;
 18242                           
 18243                           ; BSR set to: 0
 18244  0140E0  0E01               	movlw	1
 18245                           
 18246                           ; BSR set to: 0
 18247                           ;fat16.c: 434: }
 18248                           
 18249                           ; BSR set to: 0
 18250  0140E2  0012               	return	
 18251  0140E4                     l1808:
 18252                           
 18253                           ; BSR set to: 0
 18254                           ;fat16.c: 435: else;fat16.c: 436: {;fat16.c: 438: return 0;
 18255                           
 18256                           ; BSR set to: 0
 18257  0140E4  0E00               	movlw	0
 18258                           
 18259                           ; BSR set to: 0
 18260  0140E6  0012               	return	
 18261  0140E8                     __end_of__root_is_available:
 18262                           	opt stack 0
 18263                           tblptru	equ	0xFF8
 18264                           tblptrh	equ	0xFF7
 18265                           tblptrl	equ	0xFF6
 18266                           tablat	equ	0xFF5
 18267                           prodh	equ	0xFF4
 18268                           prodl	equ	0xFF3
 18269                           postinc0	equ	0xFEE
 18270                           wreg	equ	0xFE8
 18271                           postdec1	equ	0xFE5
 18272                           plusw1	equ	0xFE3
 18273                           fsr1h	equ	0xFE2
 18274                           fsr1l	equ	0xFE1
 18275                           indf2	equ	0xFDF
 18276                           postinc2	equ	0xFDE
 18277                           postdec2	equ	0xFDD
 18278                           plusw2	equ	0xFDB
 18279                           fsr2h	equ	0xFDA
 18280                           fsr2l	equ	0xFD9
 18281                           status	equ	0xFD8
 18282                           
 18283 ;; *************** function _flash_partial_read *****************
 18284 ;; Defined at:
 18285 ;;		line 452 in file "flash.c"
 18286 ;; Parameters:    Size  Location     Type
 18287 ;;  page            2   39[BANK0 ] unsigned int 
 18288 ;;  start           2   41[BANK0 ] unsigned int 
 18289 ;;  length          2   43[BANK0 ] unsigned int 
 18290 ;;  data            2   45[BANK0 ] PTR unsigned char 
 18291 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 18292 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 18293 ;;		 -> _root_is_available@first_byte(1), 
 18294 ;; Auto vars:     Size  Location     Type
 18295 ;;		None
 18296 ;; Return value:  Size  Location     Type
 18297 ;;                  1    wreg      void 
 18298 ;; Registers used:
 18299 ;;		wreg, status,2, status,0, cstack
 18300 ;; Tracked objects:
 18301 ;;		On entry : 0/0
 18302 ;;		On exit  : 0/0
 18303 ;;		Unchanged: 0/0
 18304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18305 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18308 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18309 ;;Total ram usage:        8 bytes
 18310 ;; Hardware stack levels used:    1
 18311 ;; Hardware stack levels required when called:   14
 18312 ;; This function calls:
 18313 ;;		__flash_partial_read
 18314 ;; This function is called by:
 18315 ;;		__root_is_available
 18316 ;;		__read_fat
 18317 ;;		_fat_get_file_size
 18318 ;;		_fat_read_from_file_fast
 18319 ;;		_fat_get_file_information
 18320 ;;		__get_first_cluster
 18321 ;; This function uses a non-reentrant model
 18322 ;;
 18323                           
 18324                           	psect	text72
 18325  015680                     __ptext72:
 18326                           	opt stack 0
 18327  015680                     _flash_partial_read:
 18328                           	opt stack 12
 18329                           
 18330                           ;flash.c: 455: _flash_partial_read(page, start, length, data);
 18331                           
 18332                           ; BSR set to: 0
 18333                           ;incstack = 0
 18334  015680  C087  F073         	movff	flash_partial_read@page,__flash_partial_read@page
 18335  015684  C088  F074         	movff	flash_partial_read@page+1,__flash_partial_read@page+1
 18336  015688  C089  F075         	movff	flash_partial_read@start,__flash_partial_read@start
 18337  01568C  C08A  F076         	movff	flash_partial_read@start+1,__flash_partial_read@start+1
 18338  015690  C08B  F077         	movff	flash_partial_read@length,__flash_partial_read@length
 18339  015694  C08C  F078         	movff	flash_partial_read@length+1,__flash_partial_read@length+1
 18340  015698  C08D  F079         	movff	flash_partial_read@data,__flash_partial_read@data
 18341  01569C  C08E  F07A         	movff	flash_partial_read@data+1,__flash_partial_read@data+1
 18342  0156A0  ECB2  F09E         	call	__flash_partial_read	;wreg free
 18343  0156A4  0012               	return		;funcret
 18344  0156A6                     __end_of_flash_partial_read:
 18345                           	opt stack 0
 18346                           tblptru	equ	0xFF8
 18347                           tblptrh	equ	0xFF7
 18348                           tblptrl	equ	0xFF6
 18349                           tablat	equ	0xFF5
 18350                           prodh	equ	0xFF4
 18351                           prodl	equ	0xFF3
 18352                           postinc0	equ	0xFEE
 18353                           wreg	equ	0xFE8
 18354                           postdec1	equ	0xFE5
 18355                           plusw1	equ	0xFE3
 18356                           fsr1h	equ	0xFE2
 18357                           fsr1l	equ	0xFE1
 18358                           indf2	equ	0xFDF
 18359                           postinc2	equ	0xFDE
 18360                           postdec2	equ	0xFDD
 18361                           plusw2	equ	0xFDB
 18362                           fsr2h	equ	0xFDA
 18363                           fsr2l	equ	0xFD9
 18364                           status	equ	0xFD8
 18365                           
 18366 ;; *************** function __sector_from_file_number *****************
 18367 ;; Defined at:
 18368 ;;		line 52 in file "fat16.c"
 18369 ;; Parameters:    Size  Location     Type
 18370 ;;  file_number     1    wreg     unsigned char 
 18371 ;; Auto vars:     Size  Location     Type
 18372 ;;  file_number     1    2[BANK0 ] unsigned char 
 18373 ;;  sector          2    3[BANK0 ] unsigned int 
 18374 ;; Return value:  Size  Location     Type
 18375 ;;                  2    0[BANK0 ] unsigned int 
 18376 ;; Registers used:
 18377 ;;		wreg, status,2, status,0
 18378 ;; Tracked objects:
 18379 ;;		On entry : 0/0
 18380 ;;		On exit  : 0/0
 18381 ;;		Unchanged: 0/0
 18382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18383 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18384 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18386 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18387 ;;Total ram usage:        5 bytes
 18388 ;; Hardware stack levels used:    1
 18389 ;; Hardware stack levels required when called:   10
 18390 ;; This function calls:
 18391 ;;		Nothing
 18392 ;; This function is called by:
 18393 ;;		__root_is_available
 18394 ;;		__write_root
 18395 ;;		_fat_get_file_size
 18396 ;;		_fat_get_file_information
 18397 ;;		__delete_root
 18398 ;;		__get_first_cluster
 18399 ;; This function uses a non-reentrant model
 18400 ;;
 18401                           
 18402                           	psect	text73
 18403  015398                     __ptext73:
 18404                           	opt stack 0
 18405  015398                     __sector_from_file_number:
 18406                           	opt stack 16
 18407                           
 18408                           ;incstack = 0
 18409                           ;__sector_from_file_number@file_number stored from wreg
 18410  015398  0100               	movlb	0	; () banked
 18411  01539A  6F62               	movwf	__sector_from_file_number@file_number& (0+255),b
 18412                           
 18413                           ;fat16.c: 54: uint16_t sector;;fat16.c: 55: sector = (uint16_t) file_number;
 18414  01539C  C062  F063         	movff	__sector_from_file_number@file_number,__sector_from_file_number@sector
 18415  0153A0  0100               	movlb	0	; () banked
 18416  0153A2  6B64               	clrf	(__sector_from_file_number@sector+1)& (0+255),b
 18417                           
 18418                           ; BSR set to: 0
 18419                           ;fat16.c: 56: sector >>= 4;
 18420  0153A4  3B63               	swapf	__sector_from_file_number@sector& (0+255),f,b
 18421  0153A6  3B64               	swapf	(__sector_from_file_number@sector+1)& (0+255),f,b
 18422  0153A8  0E0F               	movlw	15
 18423  0153AA  1763               	andwf	__sector_from_file_number@sector& (0+255),f,b
 18424  0153AC  5164               	movf	(__sector_from_file_number@sector+1)& (0+255),w,b
 18425  0153AE  0BF0               	andlw	240
 18426  0153B0  1363               	iorwf	__sector_from_file_number@sector& (0+255),f,b
 18427  0153B2  0E0F               	movlw	15
 18428  0153B4  1764               	andwf	(__sector_from_file_number@sector+1)& (0+255),f,b
 18429                           
 18430                           ; BSR set to: 0
 18431                           ;fat16.c: 57: sector += 34;
 18432  0153B6  0E22               	movlw	34
 18433  0153B8  2763               	addwf	__sector_from_file_number@sector& (0+255),f,b
 18434  0153BA  0E00               	movlw	0
 18435  0153BC  2364               	addwfc	(__sector_from_file_number@sector+1)& (0+255),f,b
 18436                           
 18437                           ; BSR set to: 0
 18438                           ;fat16.c: 58: return sector;
 18439  0153BE  C063  F060         	movff	__sector_from_file_number@sector,?__sector_from_file_number
 18440  0153C2  C064  F061         	movff	__sector_from_file_number@sector+1,?__sector_from_file_number+1
 18441  0153C6  0012               	return	
 18442  0153C8                     __end_of__sector_from_file_number:
 18443                           	opt stack 0
 18444                           tblptru	equ	0xFF8
 18445                           tblptrh	equ	0xFF7
 18446                           tblptrl	equ	0xFF6
 18447                           tablat	equ	0xFF5
 18448                           prodh	equ	0xFF4
 18449                           prodl	equ	0xFF3
 18450                           postinc0	equ	0xFEE
 18451                           wreg	equ	0xFE8
 18452                           postdec1	equ	0xFE5
 18453                           plusw1	equ	0xFE3
 18454                           fsr1h	equ	0xFE2
 18455                           fsr1l	equ	0xFE1
 18456                           indf2	equ	0xFDF
 18457                           postinc2	equ	0xFDE
 18458                           postdec2	equ	0xFDD
 18459                           plusw2	equ	0xFDB
 18460                           fsr2h	equ	0xFDA
 18461                           fsr2l	equ	0xFD9
 18462                           status	equ	0xFD8
 18463                           
 18464 ;; *************** function __offset_from_file_number *****************
 18465 ;; Defined at:
 18466 ;;		line 61 in file "fat16.c"
 18467 ;; Parameters:    Size  Location     Type
 18468 ;;  file_number     1    wreg     unsigned char 
 18469 ;; Auto vars:     Size  Location     Type
 18470 ;;  file_number     1    2[BANK0 ] unsigned char 
 18471 ;;  offset          2    3[BANK0 ] unsigned int 
 18472 ;; Return value:  Size  Location     Type
 18473 ;;                  2    0[BANK0 ] unsigned int 
 18474 ;; Registers used:
 18475 ;;		wreg, status,2, status,0
 18476 ;; Tracked objects:
 18477 ;;		On entry : 0/0
 18478 ;;		On exit  : 0/0
 18479 ;;		Unchanged: 0/0
 18480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18481 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18482 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18484 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18485 ;;Total ram usage:        5 bytes
 18486 ;; Hardware stack levels used:    1
 18487 ;; Hardware stack levels required when called:   10
 18488 ;; This function calls:
 18489 ;;		Nothing
 18490 ;; This function is called by:
 18491 ;;		__root_is_available
 18492 ;;		__write_root
 18493 ;;		_fat_get_file_size
 18494 ;;		_fat_get_file_information
 18495 ;;		__delete_root
 18496 ;;		__get_first_cluster
 18497 ;; This function uses a non-reentrant model
 18498 ;;
 18499                           
 18500                           	psect	text74
 18501  0155B6                     __ptext74:
 18502                           	opt stack 0
 18503  0155B6                     __offset_from_file_number:
 18504                           	opt stack 16
 18505                           
 18506                           ; BSR set to: 0
 18507                           ;incstack = 0
 18508                           ;__offset_from_file_number@file_number stored from wreg
 18509  0155B6  0100               	movlb	0	; () banked
 18510  0155B8  6F62               	movwf	__offset_from_file_number@file_number& (0+255),b
 18511                           
 18512                           ;fat16.c: 63: uint16_t offset;;fat16.c: 64: offset = file_number;
 18513  0155BA  C062  F063         	movff	__offset_from_file_number@file_number,__offset_from_file_number@offset
 18514  0155BE  0100               	movlb	0	; () banked
 18515  0155C0  6B64               	clrf	(__offset_from_file_number@offset+1)& (0+255),b
 18516                           
 18517                           ; BSR set to: 0
 18518                           ;fat16.c: 65: offset &= 0b1111;
 18519  0155C2  0E0F               	movlw	15
 18520  0155C4  1763               	andwf	__offset_from_file_number@offset& (0+255),f,b
 18521  0155C6  0E00               	movlw	0
 18522  0155C8  1764               	andwf	(__offset_from_file_number@offset+1)& (0+255),f,b
 18523                           
 18524                           ; BSR set to: 0
 18525                           ;fat16.c: 66: offset <<= 5;
 18526  0155CA  0E05               	movlw	5
 18527  0155CC                     u11615:
 18528  0155CC  90D8               	bcf	status,0,c
 18529  0155CE  3763               	rlcf	__offset_from_file_number@offset& (0+255),f,b
 18530  0155D0  3764               	rlcf	(__offset_from_file_number@offset+1)& (0+255),f,b
 18531  0155D2  2EE8               	decfsz	wreg,f,c
 18532  0155D4  D7FB               	goto	u11615
 18533                           
 18534                           ; BSR set to: 0
 18535                           ;fat16.c: 67: return offset;
 18536  0155D6  C063  F060         	movff	__offset_from_file_number@offset,?__offset_from_file_number
 18537  0155DA  C064  F061         	movff	__offset_from_file_number@offset+1,?__offset_from_file_number+1
 18538  0155DE  0012               	return	
 18539  0155E0                     __end_of__offset_from_file_number:
 18540                           	opt stack 0
 18541                           tblptru	equ	0xFF8
 18542                           tblptrh	equ	0xFF7
 18543                           tblptrl	equ	0xFF6
 18544                           tablat	equ	0xFF5
 18545                           prodh	equ	0xFF4
 18546                           prodl	equ	0xFF3
 18547                           postinc0	equ	0xFEE
 18548                           wreg	equ	0xFE8
 18549                           postdec1	equ	0xFE5
 18550                           plusw1	equ	0xFE3
 18551                           fsr1h	equ	0xFE2
 18552                           fsr1l	equ	0xFE1
 18553                           indf2	equ	0xFDF
 18554                           postinc2	equ	0xFDE
 18555                           postdec2	equ	0xFDD
 18556                           plusw2	equ	0xFDB
 18557                           fsr2h	equ	0xFDA
 18558                           fsr2l	equ	0xFD9
 18559                           status	equ	0xFD8
 18560                           
 18561 ;; *************** function _fat_find_file *****************
 18562 ;; Defined at:
 18563 ;;		line 517 in file "fat16.c"
 18564 ;; Parameters:    Size  Location     Type
 18565 ;;  name            2   43[BANK0 ] PTR unsigned char 
 18566 ;;		 -> configFile_used_name(8), configFile_name(8), 
 18567 ;;  extension       2   45[BANK0 ] PTR unsigned char 
 18568 ;;		 -> configFile_used_extention(3), configFile_extention(3), 
 18569 ;; Auto vars:     Size  Location     Type
 18570 ;;  offset          2   52[BANK0 ] unsigned int 
 18571 ;;  sector          2   50[BANK0 ] unsigned int 
 18572 ;;  file_number     1   49[BANK0 ] unsigned char 
 18573 ;; Return value:  Size  Location     Type
 18574 ;;                  1    wreg      unsigned char 
 18575 ;; Registers used:
 18576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18577 ;; Tracked objects:
 18578 ;;		On entry : 0/0
 18579 ;;		On exit  : 0/0
 18580 ;;		Unchanged: 0/0
 18581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18582 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18583 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18584 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18585 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18586 ;;Total ram usage:       11 bytes
 18587 ;; Hardware stack levels used:    1
 18588 ;; Hardware stack levels required when called:   15
 18589 ;; This function calls:
 18590 ;;		_flash_sector_read
 18591 ;;		_strncmp
 18592 ;; This function is called by:
 18593 ;;		_fat_create_file
 18594 ;;		_configFile_read
 18595 ;;		_configFile_write
 18596 ;; This function uses a non-reentrant model
 18597 ;;
 18598                           
 18599                           	psect	text75
 18600  011BC4                     __ptext75:
 18601                           	opt stack 0
 18602  011BC4                     _fat_find_file:
 18603                           	opt stack 13
 18604                           
 18605                           ;fat16.c: 519: uint8_t file_number = 0;
 18606                           
 18607                           ; BSR set to: 0
 18608                           ;incstack = 0
 18609  011BC4  0E00               	movlw	0
 18610  011BC6  0100               	movlb	0	; () banked
 18611  011BC8  6F91               	movwf	fat_find_file@file_number& (0+255),b
 18612                           
 18613                           ;fat16.c: 520: uint16_t sector;;fat16.c: 521: uint16_t offset;;fat16.c: 523: for(sector 
      +                          = 34; sector <= 37; ++sector)
 18614  011BCA  0E00               	movlw	0
 18615  011BCC  6F93               	movwf	(fat_find_file@sector+1)& (0+255),b
 18616  011BCE  0E22               	movlw	34
 18617  011BD0  6F92               	movwf	fat_find_file@sector& (0+255),b
 18618                           
 18619                           ; BSR set to: 0
 18620  011BD2  5193               	movf	(fat_find_file@sector+1)& (0+255),w,b
 18621  011BD4  E169               	bnz	l1833
 18622  011BD6  0E26               	movlw	38
 18623  011BD8  5D92               	subwf	fat_find_file@sector& (0+255),w,b
 18624  011BDA  B0D8               	btfsc	status,0,c
 18625  011BDC  D065               	goto	u13420
 18626                           
 18627                           ; BSR set to: 0
 18628                           ;fat16.c: 524: {;fat16.c: 526: flash_sector_read(sector, buffer);
 18629                           
 18630                           ; BSR set to: 0
 18631                           
 18632                           ; BSR set to: 0
 18633  011BDE  C092  F087         	movff	fat_find_file@sector,flash_sector_read@page
 18634  011BE2  C093  F088         	movff	fat_find_file@sector+1,flash_sector_read@page+1
 18635  011BE6  0E00               	movlw	low _buffer
 18636  011BE8  6F89               	movwf	flash_sector_read@data& (0+255),b
 18637  011BEA  0E0A               	movlw	high _buffer
 18638  011BEC  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 18639  011BEE  EC2C  F0AB         	call	_flash_sector_read	;wreg free
 18640                           
 18641                           ;fat16.c: 528: for(offset = 0; offset<512; offset += 32)
 18642  011BF2  0E00               	movlw	0
 18643  011BF4  0100               	movlb	0	; () banked
 18644  011BF6  6F95               	movwf	(fat_find_file@offset+1)& (0+255),b
 18645  011BF8  0E00               	movlw	0
 18646  011BFA  6F94               	movwf	fat_find_file@offset& (0+255),b
 18647  011BFC                     l14389:
 18648                           
 18649                           ; BSR set to: 0
 18650  011BFC  0E02               	movlw	2
 18651  011BFE  5D95               	subwf	(fat_find_file@offset+1)& (0+255),w,b
 18652  011C00  B0D8               	btfsc	status,0,c
 18653  011C02  D04D               	goto	u13410
 18654                           
 18655                           ; BSR set to: 0
 18656                           ;fat16.c: 529: {;fat16.c: 530: if(buffer[offset]==0x00)
 18657                           
 18658                           ; BSR set to: 0
 18659                           
 18660                           ; BSR set to: 0
 18661  011C04  0E00               	movlw	low _buffer
 18662  011C06  2594               	addwf	fat_find_file@offset& (0+255),w,b
 18663  011C08  6ED9               	movwf	fsr2l,c
 18664  011C0A  0E0A               	movlw	high _buffer
 18665  011C0C  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 18666  011C0E  6EDA               	movwf	fsr2h,c
 18667  011C10  50DF               	movf	indf2,w,c
 18668  011C12  A4D8               	btfss	status,2,c
 18669  011C14  D002               	goto	l1836
 18670                           
 18671                           ; BSR set to: 0
 18672                           ;fat16.c: 531: {;fat16.c: 534: return 0xFF;
 18673  011C16  0EFF               	movlw	255
 18674                           
 18675                           ; BSR set to: 0
 18676  011C18  0012               	return	
 18677  011C1A                     l1836:
 18678                           
 18679                           ; BSR set to: 0
 18680                           ;fat16.c: 536: else if(buffer[offset]==0xE5)
 18681                           
 18682                           ; BSR set to: 0
 18683  011C1A  0E00               	movlw	low _buffer
 18684  011C1C  2594               	addwf	fat_find_file@offset& (0+255),w,b
 18685  011C1E  6ED9               	movwf	fsr2l,c
 18686  011C20  0E0A               	movlw	high _buffer
 18687  011C22  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 18688  011C24  6EDA               	movwf	fsr2h,c
 18689  011C26  0EE5               	movlw	229
 18690  011C28  18DE               	xorwf	postinc2,w,c
 18691  011C2A  B4D8               	btfsc	status,2,c
 18692  011C2C  D032               	goto	l1842
 18693                           
 18694                           ; BSR set to: 0
 18695                           ;fat16.c: 542: else;fat16.c: 543: {;fat16.c: 545: if(strncmp(name, &buffer[offset], 8) =
      +                          = 0)
 18696                           
 18697                           ; BSR set to: 0
 18698                           
 18699                           ; BSR set to: 0
 18700                           ;fat16.c: 537: {;fat16.c: 541: }
 18701  011C2E  C08B  F060         	movff	fat_find_file@name,strncmp@s1
 18702  011C32  C08C  F061         	movff	fat_find_file@name+1,strncmp@s1+1
 18703  011C36  0E00               	movlw	low _buffer
 18704  011C38  2594               	addwf	fat_find_file@offset& (0+255),w,b
 18705  011C3A  6F62               	movwf	strncmp@s2& (0+255),b
 18706  011C3C  0E0A               	movlw	high _buffer
 18707  011C3E  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 18708  011C40  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 18709  011C42  0E00               	movlw	0
 18710  011C44  6F65               	movwf	(strncmp@len+1)& (0+255),b
 18711  011C46  0E08               	movlw	8
 18712  011C48  6F64               	movwf	strncmp@len& (0+255),b
 18713  011C4A  EC7C  F09D         	call	_strncmp	;wreg free
 18714  011C4E  0100               	movlb	0	; () banked
 18715  011C50  5160               	movf	?_strncmp& (0+255),w,b
 18716  011C52  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 18717  011C54  A4D8               	btfss	status,2,c
 18718  011C56  D01D               	goto	l1842
 18719                           
 18720                           ; BSR set to: 0
 18721                           ;fat16.c: 546: {;fat16.c: 548: if(strncmp(extension, &buffer[offset+8], 3) == 0)
 18722  011C58  C08D  F060         	movff	fat_find_file@extension,strncmp@s1
 18723  011C5C  C08E  F061         	movff	fat_find_file@extension+1,strncmp@s1+1
 18724  011C60  0E08               	movlw	8
 18725  011C62  2594               	addwf	fat_find_file@offset& (0+255),w,b
 18726  011C64  6F8F               	movwf	??_fat_find_file& (0+255),b
 18727  011C66  0E00               	movlw	0
 18728  011C68  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 18729  011C6A  6F90               	movwf	(??_fat_find_file+1)& (0+255),b
 18730  011C6C  0E00               	movlw	low _buffer
 18731  011C6E  258F               	addwf	??_fat_find_file& (0+255),w,b
 18732  011C70  6F62               	movwf	strncmp@s2& (0+255),b
 18733  011C72  0E0A               	movlw	high _buffer
 18734  011C74  2190               	addwfc	(??_fat_find_file+1)& (0+255),w,b
 18735  011C76  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 18736  011C78  0E00               	movlw	0
 18737  011C7A  6F65               	movwf	(strncmp@len+1)& (0+255),b
 18738  011C7C  0E03               	movlw	3
 18739  011C7E  6F64               	movwf	strncmp@len& (0+255),b
 18740  011C80  EC7C  F09D         	call	_strncmp	;wreg free
 18741  011C84  0100               	movlb	0	; () banked
 18742  011C86  5160               	movf	?_strncmp& (0+255),w,b
 18743  011C88  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 18744  011C8A  A4D8               	btfss	status,2,c
 18745  011C8C  D002               	goto	l1842
 18746                           
 18747                           ; BSR set to: 0
 18748                           ;fat16.c: 549: {;fat16.c: 552: return file_number;
 18749  011C8E  5191               	movf	fat_find_file@file_number& (0+255),w,b
 18750                           
 18751                           ; BSR set to: 0
 18752  011C90  0012               	return	
 18753  011C92                     l1842:
 18754                           
 18755                           ; BSR set to: 0
 18756                           ;fat16.c: 553: };fat16.c: 554: };fat16.c: 555: };fat16.c: 556: ++file_number;
 18757                           
 18758                           ; BSR set to: 0
 18759                           
 18760                           ; BSR set to: 0
 18761                           
 18762                           ; BSR set to: 0
 18763                           
 18764                           ; BSR set to: 0
 18765  011C92  2B91               	incf	fat_find_file@file_number& (0+255),f,b
 18766                           
 18767                           ; BSR set to: 0
 18768  011C94  0E20               	movlw	32
 18769  011C96  2794               	addwf	fat_find_file@offset& (0+255),f,b
 18770  011C98  0E00               	movlw	0
 18771  011C9A  2395               	addwfc	(fat_find_file@offset+1)& (0+255),f,b
 18772  011C9C  D7AF               	goto	l14389
 18773  011C9E                     u13410:
 18774                           
 18775                           ; BSR set to: 0
 18776                           
 18777                           ; BSR set to: 0
 18778  011C9E  4B92               	infsnz	fat_find_file@sector& (0+255),f,b
 18779  011CA0  2B93               	incf	(fat_find_file@sector+1)& (0+255),f,b
 18780                           
 18781                           ; BSR set to: 0
 18782  011CA2  5193               	movf	(fat_find_file@sector+1)& (0+255),w,b
 18783  011CA4  E101               	bnz	l14423
 18784  011CA6  D797               	goto	L4
 18785  011CA8                     u13420:
 18786  011CA8                     l1833:
 18787  011CA8                     l14423:
 18788                           
 18789                           ; BSR set to: 0
 18790                           ;fat16.c: 557: };fat16.c: 558: };fat16.c: 559: return 0xFF;
 18791  011CA8  0EFF               	movlw	255
 18792  011CAA  0012               	return	
 18793  011CAC                     __end_of_fat_find_file:
 18794                           	opt stack 0
 18795                           tblptru	equ	0xFF8
 18796                           tblptrh	equ	0xFF7
 18797                           tblptrl	equ	0xFF6
 18798                           tablat	equ	0xFF5
 18799                           prodh	equ	0xFF4
 18800                           prodl	equ	0xFF3
 18801                           postinc0	equ	0xFEE
 18802                           wreg	equ	0xFE8
 18803                           postdec1	equ	0xFE5
 18804                           plusw1	equ	0xFE3
 18805                           fsr1h	equ	0xFE2
 18806                           fsr1l	equ	0xFE1
 18807                           indf2	equ	0xFDF
 18808                           postinc2	equ	0xFDE
 18809                           postdec2	equ	0xFDD
 18810                           plusw2	equ	0xFDB
 18811                           fsr2h	equ	0xFDA
 18812                           fsr2l	equ	0xFD9
 18813                           status	equ	0xFD8
 18814                           
 18815 ;; *************** function _strncmp *****************
 18816 ;; Defined at:
 18817 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
 18818 ;; Parameters:    Size  Location     Type
 18819 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 18820 ;;		 -> configFile_used_extention(3), configFile_used_name(8), configFile_extention(3), configFile_name(8), 
 18821 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 18822 ;;		 -> buffer(512), 
 18823 ;;  len             2    4[BANK0 ] unsigned int 
 18824 ;; Auto vars:     Size  Location     Type
 18825 ;;		None
 18826 ;; Return value:  Size  Location     Type
 18827 ;;                  2    0[BANK0 ] int 
 18828 ;; Registers used:
 18829 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 18830 ;; Tracked objects:
 18831 ;;		On entry : 0/0
 18832 ;;		On exit  : 0/0
 18833 ;;		Unchanged: 0/0
 18834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18835 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18837 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18838 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18839 ;;Total ram usage:        9 bytes
 18840 ;; Hardware stack levels used:    1
 18841 ;; Hardware stack levels required when called:   10
 18842 ;; This function calls:
 18843 ;;		Nothing
 18844 ;; This function is called by:
 18845 ;;		_fat_find_file
 18846 ;; This function uses a non-reentrant model
 18847 ;;
 18848                           
 18849                           	psect	text76
 18850  013AF8                     __ptext76:
 18851                           	opt stack 0
 18852  013AF8                     _strncmp:
 18853                           	opt stack 17
 18854                           
 18855                           ; BSR set to: 0
 18856                           ;incstack = 0
 18857  013AF8  D031               	goto	l3723
 18858  013AFA                     l13833:
 18859  013AFA  C060  FFD9         	movff	strncmp@s1,fsr2l
 18860  013AFE  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 18861  013B02  50DF               	movf	indf2,w,c
 18862  013B04  B4D8               	btfsc	status,2,c
 18863  013B06  D00C               	goto	u12710
 18864  013B08  C062  FFD9         	movff	strncmp@s2,fsr2l
 18865  013B0C  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 18866  013B10  C060  FFE1         	movff	strncmp@s1,fsr1l
 18867  013B14  C061  FFE2         	movff	strncmp@s1+1,fsr1h
 18868  013B18  50DE               	movf	postinc2,w,c
 18869  013B1A  18E6               	xorwf	postinc1,w,c
 18870  013B1C  B4D8               	btfsc	status,2,c
 18871  013B1E  D019               	goto	l3725
 18872  013B20                     u12710:
 18873  013B20  C062  FFD9         	movff	strncmp@s2,fsr2l
 18874  013B24  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 18875  013B28  50DF               	movf	indf2,w,c
 18876  013B2A  0100               	movlb	0	; () banked
 18877  013B2C  6F66               	movwf	??_strncmp& (0+255),b
 18878  013B2E  6B67               	clrf	(??_strncmp+1)& (0+255),b
 18879  013B30  1F66               	comf	??_strncmp& (0+255),f,b
 18880  013B32  1F67               	comf	(??_strncmp+1)& (0+255),f,b
 18881  013B34  4B66               	infsnz	??_strncmp& (0+255),f,b
 18882  013B36  2B67               	incf	(??_strncmp+1)& (0+255),f,b
 18883  013B38  C060  FFD9         	movff	strncmp@s1,fsr2l
 18884  013B3C  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 18885  013B40  50DF               	movf	indf2,w,c
 18886  013B42  6F68               	movwf	(??_strncmp+2)& (0+255),b
 18887  013B44  5168               	movf	(??_strncmp+2)& (0+255),w,b
 18888  013B46  2566               	addwf	??_strncmp& (0+255),w,b
 18889  013B48  6F60               	movwf	?_strncmp& (0+255),b
 18890  013B4A  0E00               	movlw	0
 18891  013B4C  2167               	addwfc	(??_strncmp+1)& (0+255),w,b
 18892  013B4E  6F61               	movwf	(?_strncmp+1)& (0+255),b
 18893                           
 18894                           ; BSR set to: 0
 18895  013B50  0012               	return	
 18896  013B52                     l3725:
 18897                           
 18898                           ; BSR set to: 0
 18899  013B52  0100               	movlb	0	; () banked
 18900  013B54  4B60               	infsnz	strncmp@s1& (0+255),f,b
 18901  013B56  2B61               	incf	(strncmp@s1+1)& (0+255),f,b
 18902  013B58  4B62               	infsnz	strncmp@s2& (0+255),f,b
 18903  013B5A  2B63               	incf	(strncmp@s2+1)& (0+255),f,b
 18904  013B5C                     l3723:
 18905                           
 18906                           ; BSR set to: 0
 18907  013B5C  0100               	movlb	0	; () banked
 18908  013B5E  0764               	decf	strncmp@len& (0+255),f,b
 18909  013B60  A0D8               	btfss	status,0,c
 18910  013B62  0765               	decf	(strncmp@len+1)& (0+255),f,b
 18911  013B64  2964               	incf	strncmp@len& (0+255),w,b
 18912  013B66  E1C9               	bnz	l13833
 18913  013B68  2965               	incf	(strncmp@len+1)& (0+255),w,b
 18914  013B6A  A4D8               	btfss	status,2,c
 18915  013B6C  D7C6               	goto	l3724
 18916                           
 18917                           ; BSR set to: 0
 18918                           
 18919                           ; BSR set to: 0
 18920  013B6E  0E00               	movlw	0
 18921  013B70  6F61               	movwf	(?_strncmp+1)& (0+255),b
 18922  013B72  0E00               	movlw	0
 18923  013B74  6F60               	movwf	?_strncmp& (0+255),b
 18924  013B76  0012               	return	
 18925  013B78                     __end_of_strncmp:
 18926                           	opt stack 0
 18927                           tblptru	equ	0xFF8
 18928                           tblptrh	equ	0xFF7
 18929                           tblptrl	equ	0xFF6
 18930                           tablat	equ	0xFF5
 18931                           prodh	equ	0xFF4
 18932                           prodl	equ	0xFF3
 18933                           postinc0	equ	0xFEE
 18934                           wreg	equ	0xFE8
 18935                           postinc1	equ	0xFE6
 18936                           postdec1	equ	0xFE5
 18937                           plusw1	equ	0xFE3
 18938                           fsr1h	equ	0xFE2
 18939                           fsr1l	equ	0xFE1
 18940                           indf2	equ	0xFDF
 18941                           postinc2	equ	0xFDE
 18942                           postdec2	equ	0xFDD
 18943                           plusw2	equ	0xFDB
 18944                           fsr2h	equ	0xFDA
 18945                           fsr2l	equ	0xFD9
 18946                           status	equ	0xFD8
 18947                           
 18948 ;; *************** function __parse_item *****************
 18949 ;; Defined at:
 18950 ;;		line 108 in file "config_file.c"
 18951 ;; Parameters:    Size  Location     Type
 18952 ;;  item_string     2   26[BANK0 ] PTR unsigned char 
 18953 ;;		 -> configFile_read@item_string(31), 
 18954 ;;  value_string    2   28[BANK0 ] PTR unsigned char 
 18955 ;;		 -> configFile_read@value_string(12), 
 18956 ;; Auto vars:     Size  Location     Type
 18957 ;;		None
 18958 ;; Return value:  Size  Location     Type
 18959 ;;                  1    wreg      unsigned char 
 18960 ;; Registers used:
 18961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18962 ;; Tracked objects:
 18963 ;;		On entry : 0/0
 18964 ;;		On exit  : 0/0
 18965 ;;		Unchanged: 0/0
 18966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18967 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18970 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18971 ;;Total ram usage:        4 bytes
 18972 ;; Hardware stack levels used:    1
 18973 ;; Hardware stack levels required when called:   12
 18974 ;; This function calls:
 18975 ;;		_atoi
 18976 ;;		_atol
 18977 ;;		_stricmp
 18978 ;; This function is called by:
 18979 ;;		_configFile_read
 18980 ;; This function uses a non-reentrant model
 18981 ;;
 18982                           
 18983                           	psect	text77
 18984  00C8D4                     __ptext77:
 18985                           	opt stack 0
 18986  00C8D4                     __parse_item:
 18987                           	opt stack 16
 18988                           
 18989                           ;config_file.c: 110: if(stricmp(item_string, full_circle_in_steps_string)==0)
 18990                           
 18991                           ; BSR set to: 0
 18992                           ;incstack = 0
 18993  00C8D4  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 18994  00C8D8  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18995  00C8DC  0EFD               	movlw	low _full_circle_in_steps_string
 18996  00C8DE  0100               	movlb	0	; () banked
 18997  00C8E0  6F63               	movwf	stricmp@s2& (0+255),b
 18998  00C8E2  0EA1               	movlw	high _full_circle_in_steps_string
 18999  00C8E4  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19000  00C8E6  ECEF  F0A2         	call	_stricmp	;wreg free
 19001  00C8EA  0100               	movlb	0	; () banked
 19002  00C8EC  5161               	movf	?_stricmp& (0+255),w,b
 19003  00C8EE  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19004  00C8F0  A4D8               	btfss	status,2,c
 19005  00C8F2  D00F               	goto	l2935
 19006                           
 19007                           ; BSR set to: 0
 19008                           ;config_file.c: 111: {;config_file.c: 112: config.full_circle_in_steps = atol(value_stri
      +                          ng);
 19009  00C8F4  C07C  F06C         	movff	__parse_item@value_string,atol@s
 19010  00C8F8  C07D  F06D         	movff	__parse_item@value_string+1,atol@s+1
 19011  00C8FC  EC8C  F08A         	call	_atol	;wreg free
 19012  00C900  C06C  F1A1         	movff	?_atol,_config
 19013  00C904  C06D  F1A2         	movff	?_atol+1,_config+1
 19014  00C908  C06E  F1A3         	movff	?_atol+2,_config+2
 19015  00C90C  C06F  F1A4         	movff	?_atol+3,_config+3
 19016                           
 19017                           ;config_file.c: 113: return 1;;	Return value of __parse_item is never used
 19018  00C910  0012               	return	
 19019  00C912                     l2935:
 19020                           
 19021                           ;config_file.c: 114: };config_file.c: 116: if(stricmp(item_string, overshoot_in_steps_st
      +                          ring)==0)
 19022  00C912  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19023  00C916  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19024  00C91A  0E12               	movlw	low _overshoot_in_steps_string
 19025  00C91C  0100               	movlb	0	; () banked
 19026  00C91E  6F63               	movwf	stricmp@s2& (0+255),b
 19027  00C920  0EA2               	movlw	high _overshoot_in_steps_string
 19028  00C922  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19029  00C924  ECEF  F0A2         	call	_stricmp	;wreg free
 19030  00C928  0100               	movlb	0	; () banked
 19031  00C92A  5161               	movf	?_stricmp& (0+255),w,b
 19032  00C92C  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19033  00C92E  A4D8               	btfss	status,2,c
 19034  00C930  D00B               	goto	l2937
 19035                           
 19036                           ; BSR set to: 0
 19037                           ;config_file.c: 117: {;config_file.c: 118: config.overshoot_in_steps = atoi(value_string
      +                          );
 19038  00C932  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19039  00C936  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19040  00C93A  EC68  F091         	call	_atoi	;wreg free
 19041  00C93E  C066  F1A6         	movff	?_atoi,_config+5
 19042  00C942  C067  F1A7         	movff	?_atoi+1,_config+6
 19043                           
 19044                           ;config_file.c: 119: return 2;;	Return value of __parse_item is never used
 19045  00C946  0012               	return	
 19046  00C948                     l2937:
 19047                           
 19048                           ;config_file.c: 120: };config_file.c: 122: if(stricmp(item_string, inverse_direction_str
      +                          ing)==0)
 19049  00C948  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19050  00C94C  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19051  00C950  0E49               	movlw	low _inverse_direction_string
 19052  00C952  0100               	movlb	0	; () banked
 19053  00C954  6F63               	movwf	stricmp@s2& (0+255),b
 19054  00C956  0EA2               	movlw	high _inverse_direction_string
 19055  00C958  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19056  00C95A  ECEF  F0A2         	call	_stricmp	;wreg free
 19057  00C95E  0100               	movlb	0	; () banked
 19058  00C960  5161               	movf	?_stricmp& (0+255),w,b
 19059  00C962  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19060  00C964  A4D8               	btfss	status,2,c
 19061  00C966  D00B               	goto	l2938
 19062                           
 19063                           ; BSR set to: 0
 19064                           ;config_file.c: 123: {;config_file.c: 124: config.inverse_direction = atol(value_string)
      +                          ;
 19065  00C968  C07C  F06C         	movff	__parse_item@value_string,atol@s
 19066  00C96C  C07D  F06D         	movff	__parse_item@value_string+1,atol@s+1
 19067  00C970  EC8C  F08A         	call	_atol	;wreg free
 19068  00C974  0100               	movlb	0	; () banked
 19069  00C976  516C               	movf	?_atol& (0+255),w,b
 19070  00C978  0101               	movlb	1	; () banked
 19071  00C97A  6FA5               	movwf	(_config+4)& (0+255),b
 19072                           
 19073                           ; BSR set to: 1
 19074                           ;config_file.c: 125: return 3;;	Return value of __parse_item is never used
 19075  00C97C  0012               	return	
 19076  00C97E                     l2938:
 19077                           
 19078                           ;config_file.c: 126: };config_file.c: 128: if(stricmp(item_string, overshoot_in_steps_st
      +                          ring)==0)
 19079                           
 19080                           ; BSR set to: 1
 19081  00C97E  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19082  00C982  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19083  00C986  0E12               	movlw	low _overshoot_in_steps_string
 19084  00C988  0100               	movlb	0	; () banked
 19085  00C98A  6F63               	movwf	stricmp@s2& (0+255),b
 19086  00C98C  0EA2               	movlw	high _overshoot_in_steps_string
 19087  00C98E  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19088  00C990  ECEF  F0A2         	call	_stricmp	;wreg free
 19089  00C994  0100               	movlb	0	; () banked
 19090  00C996  5161               	movf	?_stricmp& (0+255),w,b
 19091  00C998  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19092  00C99A  A4D8               	btfss	status,2,c
 19093  00C99C  D00B               	goto	l2939
 19094                           
 19095                           ; BSR set to: 0
 19096                           ;config_file.c: 129: {;config_file.c: 130: config.overshoot_in_steps = atoi(value_string
      +                          );
 19097  00C99E  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19098  00C9A2  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19099  00C9A6  EC68  F091         	call	_atoi	;wreg free
 19100  00C9AA  C066  F1A6         	movff	?_atoi,_config+5
 19101  00C9AE  C067  F1A7         	movff	?_atoi+1,_config+6
 19102                           
 19103                           ;config_file.c: 131: return 4;;	Return value of __parse_item is never used
 19104  00C9B2  0012               	return	
 19105  00C9B4                     l2939:
 19106                           
 19107                           ;config_file.c: 132: };config_file.c: 134: if(stricmp(item_string, overshoot_cost_in_ste
      +                          ps_string)==0)
 19108  00C9B4  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19109  00C9B8  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19110  00C9BC  0EBB               	movlw	low _overshoot_cost_in_steps_string
 19111  00C9BE  0100               	movlb	0	; () banked
 19112  00C9C0  6F63               	movwf	stricmp@s2& (0+255),b
 19113  00C9C2  0EA1               	movlw	high _overshoot_cost_in_steps_string
 19114  00C9C4  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19115  00C9C6  ECEF  F0A2         	call	_stricmp	;wreg free
 19116  00C9CA  0100               	movlb	0	; () banked
 19117  00C9CC  5161               	movf	?_stricmp& (0+255),w,b
 19118  00C9CE  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19119  00C9D0  A4D8               	btfss	status,2,c
 19120  00C9D2  D00B               	goto	l2940
 19121                           
 19122                           ; BSR set to: 0
 19123                           ;config_file.c: 135: {;config_file.c: 136: config.overshoot_cost_in_steps = atoi(value_s
      +                          tring);
 19124  00C9D4  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19125  00C9D8  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19126  00C9DC  EC68  F091         	call	_atoi	;wreg free
 19127  00C9E0  C066  F1A8         	movff	?_atoi,_config+7
 19128  00C9E4  C067  F1A9         	movff	?_atoi+1,_config+8
 19129                           
 19130                           ;config_file.c: 137: return 5;;	Return value of __parse_item is never used
 19131  00C9E8  0012               	return	
 19132  00C9EA                     l2940:
 19133                           
 19134                           ;config_file.c: 138: };config_file.c: 140: if(stricmp(item_string, minimum_speed_string)
      +                          ==0)
 19135  00C9EA  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19136  00C9EE  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19137  00C9F2  0E97               	movlw	low _minimum_speed_string
 19138  00C9F4  0100               	movlb	0	; () banked
 19139  00C9F6  6F63               	movwf	stricmp@s2& (0+255),b
 19140  00C9F8  0EA2               	movlw	high _minimum_speed_string
 19141  00C9FA  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19142  00C9FC  ECEF  F0A2         	call	_stricmp	;wreg free
 19143  00CA00  0100               	movlb	0	; () banked
 19144  00CA02  5161               	movf	?_stricmp& (0+255),w,b
 19145  00CA04  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19146  00CA06  A4D8               	btfss	status,2,c
 19147  00CA08  D00B               	goto	l2941
 19148                           
 19149                           ; BSR set to: 0
 19150                           ;config_file.c: 141: {;config_file.c: 142: config.minimum_speed = atoi(value_string);
 19151  00CA0A  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19152  00CA0E  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19153  00CA12  EC68  F091         	call	_atoi	;wreg free
 19154  00CA16  C066  F1AA         	movff	?_atoi,_config+9
 19155  00CA1A  C067  F1AB         	movff	?_atoi+1,_config+10
 19156                           
 19157                           ;config_file.c: 143: return 6;;	Return value of __parse_item is never used
 19158  00CA1E  0012               	return	
 19159  00CA20                     l2941:
 19160                           
 19161                           ;config_file.c: 144: };config_file.c: 146: if(stricmp(item_string, maximum_speed_string)
      +                          ==0)
 19162  00CA20  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19163  00CA24  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19164  00CA28  0E89               	movlw	low _maximum_speed_string
 19165  00CA2A  0100               	movlb	0	; () banked
 19166  00CA2C  6F63               	movwf	stricmp@s2& (0+255),b
 19167  00CA2E  0EA2               	movlw	high _maximum_speed_string
 19168  00CA30  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19169  00CA32  ECEF  F0A2         	call	_stricmp	;wreg free
 19170  00CA36  0100               	movlb	0	; () banked
 19171  00CA38  5161               	movf	?_stricmp& (0+255),w,b
 19172  00CA3A  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19173  00CA3C  A4D8               	btfss	status,2,c
 19174  00CA3E  D00B               	goto	l2942
 19175                           
 19176                           ; BSR set to: 0
 19177                           ;config_file.c: 147: {;config_file.c: 148: config.maximum_speed = atoi(value_string);
 19178  00CA40  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19179  00CA44  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19180  00CA48  EC68  F091         	call	_atoi	;wreg free
 19181  00CA4C  C066  F1AC         	movff	?_atoi,_config+11
 19182  00CA50  C067  F1AD         	movff	?_atoi+1,_config+12
 19183                           
 19184                           ;config_file.c: 149: return 7;;	Return value of __parse_item is never used
 19185  00CA54  0012               	return	
 19186  00CA56                     l2942:
 19187                           
 19188                           ;config_file.c: 150: };config_file.c: 152: if(stricmp(item_string, initial_speed_arc_str
      +                          ing)==0)
 19189  00CA56  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19190  00CA5A  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19191  00CA5E  0E37               	movlw	low _initial_speed_arc_string
 19192  00CA60  0100               	movlb	0	; () banked
 19193  00CA62  6F63               	movwf	stricmp@s2& (0+255),b
 19194  00CA64  0EA2               	movlw	high _initial_speed_arc_string
 19195  00CA66  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19196  00CA68  ECEF  F0A2         	call	_stricmp	;wreg free
 19197  00CA6C  0100               	movlb	0	; () banked
 19198  00CA6E  5161               	movf	?_stricmp& (0+255),w,b
 19199  00CA70  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19200  00CA72  A4D8               	btfss	status,2,c
 19201  00CA74  D00B               	goto	l2943
 19202                           
 19203                           ; BSR set to: 0
 19204                           ;config_file.c: 153: {;config_file.c: 154: config.initial_speed_arc = atoi(value_string)
      +                          ;
 19205  00CA76  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19206  00CA7A  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19207  00CA7E  EC68  F091         	call	_atoi	;wreg free
 19208  00CA82  C066  F1AE         	movff	?_atoi,_config+13
 19209  00CA86  C067  F1AF         	movff	?_atoi+1,_config+14
 19210                           
 19211                           ;config_file.c: 155: return 8;;	Return value of __parse_item is never used
 19212  00CA8A  0012               	return	
 19213  00CA8C                     l2943:
 19214                           
 19215                           ;config_file.c: 156: };config_file.c: 158: if(stricmp(item_string, maximum_speed_arc_str
      +                          ing)==0)
 19216  00CA8C  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19217  00CA90  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19218  00CA94  0E25               	movlw	low _maximum_speed_arc_string
 19219  00CA96  0100               	movlb	0	; () banked
 19220  00CA98  6F63               	movwf	stricmp@s2& (0+255),b
 19221  00CA9A  0EA2               	movlw	high _maximum_speed_arc_string
 19222  00CA9C  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19223  00CA9E  ECEF  F0A2         	call	_stricmp	;wreg free
 19224  00CAA2  0100               	movlb	0	; () banked
 19225  00CAA4  5161               	movf	?_stricmp& (0+255),w,b
 19226  00CAA6  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19227  00CAA8  A4D8               	btfss	status,2,c
 19228  00CAAA  D00B               	goto	l2944
 19229                           
 19230                           ; BSR set to: 0
 19231                           ;config_file.c: 159: {;config_file.c: 160: config.maximum_speed_arc = atoi(value_string)
      +                          ;
 19232  00CAAC  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19233  00CAB0  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19234  00CAB4  EC68  F091         	call	_atoi	;wreg free
 19235  00CAB8  C066  F1B0         	movff	?_atoi,_config+15
 19236  00CABC  C067  F1B1         	movff	?_atoi+1,_config+16
 19237                           
 19238                           ;config_file.c: 161: return 9;;	Return value of __parse_item is never used
 19239  00CAC0  0012               	return	
 19240  00CAC2                     l2944:
 19241                           
 19242                           ;config_file.c: 162: };config_file.c: 164: if(stricmp(item_string, initial_speed_manual_
      +                          string)==0)
 19243  00CAC2  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19244  00CAC6  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19245  00CACA  0EE8               	movlw	low _initial_speed_manual_string
 19246  00CACC  0100               	movlb	0	; () banked
 19247  00CACE  6F63               	movwf	stricmp@s2& (0+255),b
 19248  00CAD0  0EA1               	movlw	high _initial_speed_manual_string
 19249  00CAD2  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19250  00CAD4  ECEF  F0A2         	call	_stricmp	;wreg free
 19251  00CAD8  0100               	movlb	0	; () banked
 19252  00CADA  5161               	movf	?_stricmp& (0+255),w,b
 19253  00CADC  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19254  00CADE  A4D8               	btfss	status,2,c
 19255  00CAE0  D00B               	goto	l2945
 19256                           
 19257                           ; BSR set to: 0
 19258                           ;config_file.c: 165: {;config_file.c: 166: config.initial_speed_manual = atoi(value_stri
      +                          ng);
 19259  00CAE2  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19260  00CAE6  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19261  00CAEA  EC68  F091         	call	_atoi	;wreg free
 19262  00CAEE  C066  F1B2         	movff	?_atoi,_config+17
 19263  00CAF2  C067  F1B3         	movff	?_atoi+1,_config+18
 19264                           
 19265                           ;config_file.c: 167: return 10;;	Return value of __parse_item is never used
 19266  00CAF6  0012               	return	
 19267  00CAF8                     l2945:
 19268                           
 19269                           ;config_file.c: 168: };config_file.c: 170: if(stricmp(item_string, maximum_speed_manual_
      +                          string)==0)
 19270  00CAF8  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19271  00CAFC  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19272  00CB00  0ED3               	movlw	low _maximum_speed_manual_string
 19273  00CB02  0100               	movlb	0	; () banked
 19274  00CB04  6F63               	movwf	stricmp@s2& (0+255),b
 19275  00CB06  0EA1               	movlw	high _maximum_speed_manual_string
 19276  00CB08  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19277  00CB0A  ECEF  F0A2         	call	_stricmp	;wreg free
 19278  00CB0E  0100               	movlb	0	; () banked
 19279  00CB10  5161               	movf	?_stricmp& (0+255),w,b
 19280  00CB12  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19281  00CB14  A4D8               	btfss	status,2,c
 19282  00CB16  D00B               	goto	l2946
 19283                           
 19284                           ; BSR set to: 0
 19285                           ;config_file.c: 171: {;config_file.c: 172: config.maximum_speed_manual = atoi(value_stri
      +                          ng);
 19286  00CB18  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19287  00CB1C  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19288  00CB20  EC68  F091         	call	_atoi	;wreg free
 19289  00CB24  C066  F1B4         	movff	?_atoi,_config+19
 19290  00CB28  C067  F1B5         	movff	?_atoi+1,_config+20
 19291                           
 19292                           ;config_file.c: 173: return 11;;	Return value of __parse_item is never used
 19293  00CB2C  0012               	return	
 19294  00CB2E                     l2946:
 19295                           
 19296                           ;config_file.c: 174: };config_file.c: 176: if(stricmp(item_string, beep_duration_string)
      +                          ==0)
 19297  00CB2E  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19298  00CB32  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19299  00CB36  0E7B               	movlw	low _beep_duration_string
 19300  00CB38  0100               	movlb	0	; () banked
 19301  00CB3A  6F63               	movwf	stricmp@s2& (0+255),b
 19302  00CB3C  0EA2               	movlw	high _beep_duration_string
 19303  00CB3E  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19304  00CB40  ECEF  F0A2         	call	_stricmp	;wreg free
 19305  00CB44  0100               	movlb	0	; () banked
 19306  00CB46  5161               	movf	?_stricmp& (0+255),w,b
 19307  00CB48  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19308  00CB4A  A4D8               	btfss	status,2,c
 19309  00CB4C  D00B               	goto	l2947
 19310                           
 19311                           ; BSR set to: 0
 19312                           ;config_file.c: 177: {;config_file.c: 178: config.beep_duration = atoi(value_string);
 19313  00CB4E  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19314  00CB52  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19315  00CB56  EC68  F091         	call	_atoi	;wreg free
 19316  00CB5A  0100               	movlb	0	; () banked
 19317  00CB5C  5166               	movf	?_atoi& (0+255),w,b
 19318  00CB5E  0101               	movlb	1	; () banked
 19319  00CB60  6FB6               	movwf	(_config+21)& (0+255),b
 19320                           
 19321                           ; BSR set to: 1
 19322                           ;config_file.c: 179: return 12;;	Return value of __parse_item is never used
 19323  00CB62  0012               	return	
 19324  00CB64                     l2947:
 19325                           
 19326                           ;config_file.c: 180: };config_file.c: 182: if(stricmp(item_string, use_cw_limit_string)=
      +                          =0)
 19327                           
 19328                           ; BSR set to: 1
 19329  00CB64  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19330  00CB68  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19331  00CB6C  0EA5               	movlw	low _use_cw_limit_string
 19332  00CB6E  0100               	movlb	0	; () banked
 19333  00CB70  6F63               	movwf	stricmp@s2& (0+255),b
 19334  00CB72  0EA2               	movlw	high _use_cw_limit_string
 19335  00CB74  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19336  00CB76  ECEF  F0A2         	call	_stricmp	;wreg free
 19337  00CB7A  0100               	movlb	0	; () banked
 19338  00CB7C  5161               	movf	?_stricmp& (0+255),w,b
 19339  00CB7E  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19340  00CB80  A4D8               	btfss	status,2,c
 19341  00CB82  D00B               	goto	l2948
 19342                           
 19343                           ; BSR set to: 0
 19344                           ;config_file.c: 183: {;config_file.c: 184: config.use_cw_limit = atol(value_string);
 19345  00CB84  C07C  F06C         	movff	__parse_item@value_string,atol@s
 19346  00CB88  C07D  F06D         	movff	__parse_item@value_string+1,atol@s+1
 19347  00CB8C  EC8C  F08A         	call	_atol	;wreg free
 19348  00CB90  0100               	movlb	0	; () banked
 19349  00CB92  516C               	movf	?_atol& (0+255),w,b
 19350  00CB94  0101               	movlb	1	; () banked
 19351  00CB96  6FB7               	movwf	(_config+22)& (0+255),b
 19352                           
 19353                           ; BSR set to: 1
 19354                           ;config_file.c: 185: return 13;;	Return value of __parse_item is never used
 19355  00CB98  0012               	return	
 19356  00CB9A                     l2948:
 19357                           
 19358                           ;config_file.c: 186: };config_file.c: 188: if(stricmp(item_string, cw_limit_string)==0)
 19359                           
 19360                           ; BSR set to: 1
 19361  00CB9A  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19362  00CB9E  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19363  00CBA2  0EBC               	movlw	low _cw_limit_string
 19364  00CBA4  0100               	movlb	0	; () banked
 19365  00CBA6  6F63               	movwf	stricmp@s2& (0+255),b
 19366  00CBA8  0EA2               	movlw	high _cw_limit_string
 19367  00CBAA  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19368  00CBAC  ECEF  F0A2         	call	_stricmp	;wreg free
 19369  00CBB0  0100               	movlb	0	; () banked
 19370  00CBB2  5161               	movf	?_stricmp& (0+255),w,b
 19371  00CBB4  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19372  00CBB6  A4D8               	btfss	status,2,c
 19373  00CBB8  D00B               	goto	l2949
 19374                           
 19375                           ; BSR set to: 0
 19376                           ;config_file.c: 189: {;config_file.c: 190: config.cw_limit = atol(value_string);
 19377  00CBBA  C07C  F06C         	movff	__parse_item@value_string,atol@s
 19378  00CBBE  C07D  F06D         	movff	__parse_item@value_string+1,atol@s+1
 19379  00CBC2  EC8C  F08A         	call	_atol	;wreg free
 19380  00CBC6  C06C  F1B8         	movff	?_atol,_config+23
 19381  00CBCA  C06D  F1B9         	movff	?_atol+1,_config+24
 19382                           
 19383                           ;config_file.c: 191: return 14;;	Return value of __parse_item is never used
 19384  00CBCE  0012               	return	
 19385  00CBD0                     l2949:
 19386                           
 19387                           ;config_file.c: 192: };config_file.c: 194: if(stricmp(item_string, use_ccw_limit_string)
      +                          ==0)
 19388  00CBD0  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19389  00CBD4  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19390  00CBD8  0E6D               	movlw	low _use_ccw_limit_string
 19391  00CBDA  0100               	movlb	0	; () banked
 19392  00CBDC  6F63               	movwf	stricmp@s2& (0+255),b
 19393  00CBDE  0EA2               	movlw	high _use_ccw_limit_string
 19394  00CBE0  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19395  00CBE2  ECEF  F0A2         	call	_stricmp	;wreg free
 19396  00CBE6  0100               	movlb	0	; () banked
 19397  00CBE8  5161               	movf	?_stricmp& (0+255),w,b
 19398  00CBEA  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19399  00CBEC  A4D8               	btfss	status,2,c
 19400  00CBEE  D00B               	goto	l2950
 19401                           
 19402                           ; BSR set to: 0
 19403                           ;config_file.c: 195: {;config_file.c: 196: config.use_ccw_limit = atol(value_string);
 19404  00CBF0  C07C  F06C         	movff	__parse_item@value_string,atol@s
 19405  00CBF4  C07D  F06D         	movff	__parse_item@value_string+1,atol@s+1
 19406  00CBF8  EC8C  F08A         	call	_atol	;wreg free
 19407  00CBFC  0100               	movlb	0	; () banked
 19408  00CBFE  516C               	movf	?_atol& (0+255),w,b
 19409  00CC00  0101               	movlb	1	; () banked
 19410  00CC02  6FBA               	movwf	(_config+25)& (0+255),b
 19411                           
 19412                           ; BSR set to: 1
 19413                           ;config_file.c: 197: return 15;;	Return value of __parse_item is never used
 19414  00CC04  0012               	return	
 19415  00CC06                     l2950:
 19416                           
 19417                           ;config_file.c: 198: };config_file.c: 200: if(stricmp(item_string, ccw_limit_string)==0)
 19418                           
 19419                           ; BSR set to: 1
 19420  00CC06  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19421  00CC0A  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19422  00CC0E  0EB2               	movlw	low _ccw_limit_string
 19423  00CC10  0100               	movlb	0	; () banked
 19424  00CC12  6F63               	movwf	stricmp@s2& (0+255),b
 19425  00CC14  0EA2               	movlw	high _ccw_limit_string
 19426  00CC16  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19427  00CC18  ECEF  F0A2         	call	_stricmp	;wreg free
 19428  00CC1C  0100               	movlb	0	; () banked
 19429  00CC1E  5161               	movf	?_stricmp& (0+255),w,b
 19430  00CC20  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19431  00CC22  A4D8               	btfss	status,2,c
 19432  00CC24  0012               	return	
 19433                           
 19434                           ; BSR set to: 0
 19435                           ;config_file.c: 201: {;config_file.c: 202: config.ccw_limit = atol(value_string);
 19436  00CC26  C07C  F06C         	movff	__parse_item@value_string,atol@s
 19437  00CC2A  C07D  F06D         	movff	__parse_item@value_string+1,atol@s+1
 19438  00CC2E  EC8C  F08A         	call	_atol	;wreg free
 19439  00CC32  C06C  F1BB         	movff	?_atol,_config+26
 19440  00CC36  C06D  F1BC         	movff	?_atol+1,_config+27
 19441                           
 19442                           ;config_file.c: 203: return 16;;	Return value of __parse_item is never used
 19443  00CC3A  0012               	return	
 19444  00CC3C                     __end_of__parse_item:
 19445                           	opt stack 0
 19446                           tblptru	equ	0xFF8
 19447                           tblptrh	equ	0xFF7
 19448                           tblptrl	equ	0xFF6
 19449                           tablat	equ	0xFF5
 19450                           prodh	equ	0xFF4
 19451                           prodl	equ	0xFF3
 19452                           postinc0	equ	0xFEE
 19453                           wreg	equ	0xFE8
 19454                           postinc1	equ	0xFE6
 19455                           postdec1	equ	0xFE5
 19456                           plusw1	equ	0xFE3
 19457                           fsr1h	equ	0xFE2
 19458                           fsr1l	equ	0xFE1
 19459                           indf2	equ	0xFDF
 19460                           postinc2	equ	0xFDE
 19461                           postdec2	equ	0xFDD
 19462                           plusw2	equ	0xFDB
 19463                           fsr2h	equ	0xFDA
 19464                           fsr2l	equ	0xFD9
 19465                           status	equ	0xFD8
 19466                           
 19467 ;; *************** function _stricmp *****************
 19468 ;; Defined at:
 19469 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\stricmp.c"
 19470 ;; Parameters:    Size  Location     Type
 19471 ;;  s1              2    1[BANK0 ] PTR const unsigned char 
 19472 ;;		 -> configFile_read@item_string(31), 
 19473 ;;  s2              2    3[BANK0 ] PTR const unsigned char 
 19474 ;;		 -> ccw_limit_string(10), use_ccw_limit_string(14), cw_limit_string(9), use_cw_limit_string(13), 
 19475 ;;		 -> beep_duration_string(14), maximum_speed_manual_string(21), initial_speed_manual_string(21), maximum_speed_arc_st
      +ring(18), 
 19476 ;;		 -> initial_speed_arc_string(18), maximum_speed_string(14), minimum_speed_string(14), overshoot_cost_in_steps_string
      +(24), 
 19477 ;;		 -> inverse_direction_string(18), overshoot_in_steps_string(19), full_circle_in_steps_string(21), 
 19478 ;; Auto vars:     Size  Location     Type
 19479 ;;  r               1    6[BANK0 ] char 
 19480 ;; Return value:  Size  Location     Type
 19481 ;;                  2    1[BANK0 ] int 
 19482 ;; Registers used:
 19483 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19484 ;; Tracked objects:
 19485 ;;		On entry : 0/0
 19486 ;;		On exit  : 0/0
 19487 ;;		Unchanged: 0/0
 19488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19489 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19490 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19491 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19492 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19493 ;;Total ram usage:        6 bytes
 19494 ;; Hardware stack levels used:    1
 19495 ;; Hardware stack levels required when called:   11
 19496 ;; This function calls:
 19497 ;;		_toupper
 19498 ;; This function is called by:
 19499 ;;		__parse_item
 19500 ;; This function uses a non-reentrant model
 19501 ;;
 19502                           
 19503                           	psect	text78
 19504  0145DE                     __ptext78:
 19505                           	opt stack 0
 19506  0145DE                     _stricmp:
 19507                           	opt stack 16
 19508                           
 19509                           ;incstack = 0
 19510  0145DE  D005               	goto	l3709
 19511  0145E0  0100               	movlb	0	; () banked
 19512  0145E2  4B61               	infsnz	stricmp@s1& (0+255),f,b
 19513  0145E4  2B62               	incf	(stricmp@s1+1)& (0+255),f,b
 19514  0145E6  4B63               	infsnz	stricmp@s2& (0+255),f,b
 19515  0145E8  2B64               	incf	(stricmp@s2+1)& (0+255),f,b
 19516  0145EA                     l3709:
 19517                           
 19518                           ; BSR set to: 0
 19519  0145EA  C063  FFF6         	movff	stricmp@s2,tblptrl
 19520  0145EE  C064  FFF7         	movff	stricmp@s2+1,tblptrh
 19521  0145F2                     	if	0	;tblptru may be non-zero
 19522  0145F2                     	endif
 19523  0145F2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19524  0145F2  0E00               	movlw	low (__mediumconst shr (0+16))
 19525  0145F4  6EF8               	movwf	tblptru,c
 19526  0145F6                     	endif
 19527  0145F6  0008               	tblrd		*
 19528  0145F8  50F5               	movf	tablat,w,c
 19529  0145FA  EC4E  F0AC         	call	_toupper
 19530  0145FE  0800               	sublw	0
 19531  014600  0100               	movlb	0	; () banked
 19532  014602  6F65               	movwf	??_stricmp& (0+255),b
 19533  014604  C061  FFD9         	movff	stricmp@s1,fsr2l
 19534  014608  C062  FFDA         	movff	stricmp@s1+1,fsr2h
 19535  01460C  50DF               	movf	indf2,w,c
 19536  01460E  EC4E  F0AC         	call	_toupper
 19537  014612  0100               	movlb	0	; () banked
 19538  014614  2565               	addwf	??_stricmp& (0+255),w,b
 19539  014616  6F66               	movwf	stricmp@r& (0+255),b
 19540  014618  5166               	movf	stricmp@r& (0+255),w,b
 19541  01461A  A4D8               	btfss	status,2,c
 19542  01461C  D007               	goto	u13790
 19543                           
 19544                           ; BSR set to: 0
 19545  01461E  C061  FFD9         	movff	stricmp@s1,fsr2l
 19546  014622  C062  FFDA         	movff	stricmp@s1+1,fsr2h
 19547  014626  50DF               	movf	indf2,w,c
 19548  014628  A4D8               	btfss	status,2,c
 19549  01462A  D7DA               	goto	l3710
 19550  01462C                     u13790:
 19551                           
 19552                           ; BSR set to: 0
 19553                           
 19554                           ; BSR set to: 0
 19555                           
 19556                           ; BSR set to: 0
 19557  01462C  5166               	movf	stricmp@r& (0+255),w,b
 19558  01462E  6F61               	movwf	?_stricmp& (0+255),b
 19559  014630  6B62               	clrf	(?_stricmp+1)& (0+255),b
 19560  014632  BF61               	btfsc	?_stricmp& (0+255),7,b
 19561  014634  0762               	decf	(?_stricmp+1)& (0+255),f,b
 19562  014636  0012               	return	
 19563  014638                     __end_of_stricmp:
 19564                           	opt stack 0
 19565                           tblptru	equ	0xFF8
 19566                           tblptrh	equ	0xFF7
 19567                           tblptrl	equ	0xFF6
 19568                           tablat	equ	0xFF5
 19569                           prodh	equ	0xFF4
 19570                           prodl	equ	0xFF3
 19571                           postinc0	equ	0xFEE
 19572                           wreg	equ	0xFE8
 19573                           postinc1	equ	0xFE6
 19574                           postdec1	equ	0xFE5
 19575                           plusw1	equ	0xFE3
 19576                           fsr1h	equ	0xFE2
 19577                           fsr1l	equ	0xFE1
 19578                           indf2	equ	0xFDF
 19579                           postinc2	equ	0xFDE
 19580                           postdec2	equ	0xFDD
 19581                           plusw2	equ	0xFDB
 19582                           fsr2h	equ	0xFDA
 19583                           fsr2l	equ	0xFD9
 19584                           status	equ	0xFD8
 19585                           
 19586 ;; *************** function _toupper *****************
 19587 ;; Defined at:
 19588 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\toupper.c"
 19589 ;; Parameters:    Size  Location     Type
 19590 ;;  c               1    wreg     unsigned char 
 19591 ;; Auto vars:     Size  Location     Type
 19592 ;;  c               1    0[BANK0 ] unsigned char 
 19593 ;; Return value:  Size  Location     Type
 19594 ;;                  1    wreg      unsigned char 
 19595 ;; Registers used:
 19596 ;;		wreg, status,2, status,0
 19597 ;; Tracked objects:
 19598 ;;		On entry : 0/0
 19599 ;;		On exit  : 0/0
 19600 ;;		Unchanged: 0/0
 19601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19603 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19605 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19606 ;;Total ram usage:        1 bytes
 19607 ;; Hardware stack levels used:    1
 19608 ;; Hardware stack levels required when called:   10
 19609 ;; This function calls:
 19610 ;;		Nothing
 19611 ;; This function is called by:
 19612 ;;		_stricmp
 19613 ;; This function uses a non-reentrant model
 19614 ;;
 19615                           
 19616                           	psect	text79
 19617  01589C                     __ptext79:
 19618                           	opt stack 0
 19619  01589C                     _toupper:
 19620                           	opt stack 16
 19621                           
 19622                           ; BSR set to: 0
 19623                           ;incstack = 0
 19624                           ;toupper@c stored from wreg
 19625  01589C  0100               	movlb	0	; () banked
 19626  01589E  6F60               	movwf	toupper@c& (0+255),b
 19627  0158A0  0E7B               	movlw	123
 19628  0158A2  0100               	movlb	0	; () banked
 19629  0158A4  6160               	cpfslt	toupper@c& (0+255),b
 19630  0158A6  D004               	goto	l3732
 19631                           
 19632                           ; BSR set to: 0
 19633  0158A8  0E60               	movlw	96
 19634  0158AA  6560               	cpfsgt	toupper@c& (0+255),b
 19635  0158AC  D001               	goto	l3732
 19636                           
 19637                           ; BSR set to: 0
 19638  0158AE  9B60               	bcf	toupper@c& (0+255),5,b
 19639  0158B0                     l3732:
 19640                           
 19641                           ; BSR set to: 0
 19642                           
 19643                           ; BSR set to: 0
 19644  0158B0  5160               	movf	toupper@c& (0+255),w,b
 19645  0158B2  0012               	return	
 19646  0158B4                     __end_of_toupper:
 19647                           	opt stack 0
 19648                           tblptru	equ	0xFF8
 19649                           tblptrh	equ	0xFF7
 19650                           tblptrl	equ	0xFF6
 19651                           tablat	equ	0xFF5
 19652                           prodh	equ	0xFF4
 19653                           prodl	equ	0xFF3
 19654                           postinc0	equ	0xFEE
 19655                           wreg	equ	0xFE8
 19656                           postinc1	equ	0xFE6
 19657                           postdec1	equ	0xFE5
 19658                           plusw1	equ	0xFE3
 19659                           fsr1h	equ	0xFE2
 19660                           fsr1l	equ	0xFE1
 19661                           indf2	equ	0xFDF
 19662                           postinc2	equ	0xFDE
 19663                           postdec2	equ	0xFDD
 19664                           plusw2	equ	0xFDB
 19665                           fsr2h	equ	0xFDA
 19666                           fsr2l	equ	0xFD9
 19667                           status	equ	0xFD8
 19668                           
 19669 ;; *************** function _atol *****************
 19670 ;; Defined at:
 19671 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\atol.c"
 19672 ;; Parameters:    Size  Location     Type
 19673 ;;  s               2   12[BANK0 ] PTR const unsigned char 
 19674 ;;		 -> configFile_read@value_string(12), 
 19675 ;; Auto vars:     Size  Location     Type
 19676 ;;  a               4   21[BANK0 ] long 
 19677 ;;  c               1   25[BANK0 ] unsigned char 
 19678 ;;  sign            1   20[BANK0 ] unsigned char 
 19679 ;; Return value:  Size  Location     Type
 19680 ;;                  4   12[BANK0 ] long 
 19681 ;; Registers used:
 19682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19683 ;; Tracked objects:
 19684 ;;		On entry : 0/0
 19685 ;;		On exit  : 0/0
 19686 ;;		Unchanged: 0/0
 19687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19688 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19689 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19690 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19691 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19692 ;;Total ram usage:       14 bytes
 19693 ;; Hardware stack levels used:    1
 19694 ;; Hardware stack levels required when called:   11
 19695 ;; This function calls:
 19696 ;;		___lmul
 19697 ;;		_isdigit
 19698 ;; This function is called by:
 19699 ;;		__parse_item
 19700 ;; This function uses a non-reentrant model
 19701 ;;
 19702                           
 19703                           	psect	text80
 19704  011518                     __ptext80:
 19705                           	opt stack 0
 19706  011518                     _atol:
 19707                           	opt stack 16
 19708                           
 19709                           ; BSR set to: 0
 19710                           ;incstack = 0
 19711  011518  C06C  FFD9         	movff	atol@s,fsr2l
 19712  01151C  C06D  FFDA         	movff	atol@s+1,fsr2h
 19713  011520  50DF               	movf	indf2,w,c
 19714  011522  0100               	movlb	0	; () banked
 19715  011524  6F79               	movwf	atol@c& (0+255),b
 19716                           
 19717                           ; BSR set to: 0
 19718  011526  4B6C               	infsnz	atol@s& (0+255),f,b
 19719  011528  2B6D               	incf	(atol@s+1)& (0+255),f,b
 19720                           
 19721                           ; BSR set to: 0
 19722  01152A  0E20               	movlw	32
 19723  01152C  1979               	xorwf	atol@c& (0+255),w,b
 19724  01152E  B4D8               	btfsc	status,2,c
 19725  011530  D7F3               	goto	_atol
 19726                           
 19727                           ; BSR set to: 0
 19728  011532  0E09               	movlw	9
 19729  011534  1979               	xorwf	atol@c& (0+255),w,b
 19730  011536  B4D8               	btfsc	status,2,c
 19731  011538  D7EF               	goto	_atol
 19732                           
 19733                           ; BSR set to: 0
 19734                           
 19735                           ; BSR set to: 0
 19736  01153A  0E00               	movlw	0
 19737  01153C  6F75               	movwf	atol@a& (0+255),b
 19738  01153E  0E00               	movlw	0
 19739  011540  6F76               	movwf	(atol@a+1)& (0+255),b
 19740  011542  0E00               	movlw	0
 19741  011544  6F77               	movwf	(atol@a+2)& (0+255),b
 19742  011546  0E00               	movlw	0
 19743  011548  6F78               	movwf	(atol@a+3)& (0+255),b
 19744  01154A  0E00               	movlw	0
 19745  01154C  6F74               	movwf	atol@sign& (0+255),b
 19746                           
 19747                           ; BSR set to: 0
 19748  01154E  0E2D               	movlw	45
 19749  011550  1979               	xorwf	atol@c& (0+255),w,b
 19750  011552  A4D8               	btfss	status,2,c
 19751  011554  D002               	goto	l3652
 19752                           
 19753                           ; BSR set to: 0
 19754  011556  2B74               	incf	atol@sign& (0+255),f,b
 19755  011558  D029               	goto	L91
 19756  01155A                     l3652:
 19757                           
 19758                           ; BSR set to: 0
 19759                           
 19760                           ; BSR set to: 0
 19761  01155A  0E2B               	movlw	43
 19762  01155C  1979               	xorwf	atol@c& (0+255),w,b
 19763  01155E  A4D8               	btfss	status,2,c
 19764  011560  D02D               	goto	l3655
 19765  011562  D024               	goto	L91
 19766  011564                     
 19767                           ; BSR set to: 0
 19768  011564  C075  F060         	movff	atol@a,___lmul@multiplier
 19769  011568  C076  F061         	movff	atol@a+1,___lmul@multiplier+1
 19770  01156C  C077  F062         	movff	atol@a+2,___lmul@multiplier+2
 19771  011570  C078  F063         	movff	atol@a+3,___lmul@multiplier+3
 19772  011574  0E0A               	movlw	10
 19773  011576  0100               	movlb	0	; () banked
 19774  011578  6F64               	movwf	___lmul@multiplicand& (0+255),b
 19775  01157A  0E00               	movlw	0
 19776  01157C  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 19777  01157E  0E00               	movlw	0
 19778  011580  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 19779  011582  0E00               	movlw	0
 19780  011584  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 19781  011586  EC27  F0A4         	call	___lmul	;wreg free
 19782  01158A  C079  F070         	movff	atol@c,??_atol
 19783  01158E  0ED0               	movlw	208
 19784  011590  0100               	movlb	0	; () banked
 19785  011592  2770               	addwf	??_atol& (0+255),f,b
 19786  011594  5170               	movf	??_atol& (0+255),w,b
 19787  011596  2560               	addwf	?___lmul& (0+255),w,b
 19788  011598  6F75               	movwf	atol@a& (0+255),b
 19789  01159A  0E00               	movlw	0
 19790  01159C  2161               	addwfc	(?___lmul+1)& (0+255),w,b
 19791  01159E  6F76               	movwf	(atol@a+1)& (0+255),b
 19792  0115A0  0E00               	movlw	0
 19793  0115A2  2162               	addwfc	(?___lmul+2)& (0+255),w,b
 19794  0115A4  6F77               	movwf	(atol@a+2)& (0+255),b
 19795  0115A6  0E00               	movlw	0
 19796  0115A8  2163               	addwfc	(?___lmul+3)& (0+255),w,b
 19797  0115AA  6F78               	movwf	(atol@a+3)& (0+255),b
 19798  0115AC                     L91:
 19799                           
 19800                           ; BSR set to: 0
 19801  0115AC  C06C  FFD9         	movff	atol@s,fsr2l
 19802  0115B0  C06D  FFDA         	movff	atol@s+1,fsr2h
 19803  0115B4  50DF               	movf	indf2,w,c
 19804  0115B6  6F79               	movwf	atol@c& (0+255),b
 19805                           
 19806                           ; BSR set to: 0
 19807  0115B8  4B6C               	infsnz	atol@s& (0+255),f,b
 19808  0115BA  2B6D               	incf	(atol@s+1)& (0+255),f,b
 19809  0115BC                     l3655:
 19810                           
 19811                           ; BSR set to: 0
 19812                           
 19813                           ; BSR set to: 0
 19814  0115BC  5179               	movf	atol@c& (0+255),w,b
 19815  0115BE  ECAD  F0AB         	call	_isdigit
 19816  0115C2  B0D8               	btfsc	status,0,c
 19817  0115C4  D7CF               	goto	l3656
 19818  0115C6  0100               	movlb	0	; () banked
 19819  0115C8  5174               	movf	atol@sign& (0+255),w,b
 19820  0115CA  B4D8               	btfsc	status,2,c
 19821  0115CC  D01A               	goto	l3658
 19822                           
 19823                           ; BSR set to: 0
 19824  0115CE  C075  F070         	movff	atol@a,??_atol
 19825  0115D2  C076  F071         	movff	atol@a+1,??_atol+1
 19826  0115D6  C077  F072         	movff	atol@a+2,??_atol+2
 19827  0115DA  C078  F073         	movff	atol@a+3,??_atol+3
 19828  0115DE  1F70               	comf	??_atol& (0+255),f,b
 19829  0115E0  1F71               	comf	(??_atol+1)& (0+255),f,b
 19830  0115E2  1F72               	comf	(??_atol+2)& (0+255),f,b
 19831  0115E4  1F73               	comf	(??_atol+3)& (0+255),f,b
 19832  0115E6  2B70               	incf	??_atol& (0+255),f,b
 19833  0115E8  0E00               	movlw	0
 19834  0115EA  2371               	addwfc	(??_atol+1)& (0+255),f,b
 19835  0115EC  2372               	addwfc	(??_atol+2)& (0+255),f,b
 19836  0115EE  2373               	addwfc	(??_atol+3)& (0+255),f,b
 19837  0115F0  C070  F06C         	movff	??_atol,?_atol
 19838  0115F4  C071  F06D         	movff	??_atol+1,?_atol+1
 19839  0115F8  C072  F06E         	movff	??_atol+2,?_atol+2
 19840  0115FC  C073  F06F         	movff	??_atol+3,?_atol+3
 19841                           
 19842                           ; BSR set to: 0
 19843  011600  0012               	return	
 19844  011602                     l3658:
 19845                           
 19846                           ; BSR set to: 0
 19847  011602  C075  F06C         	movff	atol@a,?_atol
 19848  011606  C076  F06D         	movff	atol@a+1,?_atol+1
 19849  01160A  C077  F06E         	movff	atol@a+2,?_atol+2
 19850  01160E  C078  F06F         	movff	atol@a+3,?_atol+3
 19851                           
 19852                           ; BSR set to: 0
 19853  011612  0012               	return		;funcret
 19854  011614                     __end_of_atol:
 19855                           	opt stack 0
 19856                           tblptru	equ	0xFF8
 19857                           tblptrh	equ	0xFF7
 19858                           tblptrl	equ	0xFF6
 19859                           tablat	equ	0xFF5
 19860                           prodh	equ	0xFF4
 19861                           prodl	equ	0xFF3
 19862                           postinc0	equ	0xFEE
 19863                           wreg	equ	0xFE8
 19864                           postinc1	equ	0xFE6
 19865                           postdec1	equ	0xFE5
 19866                           plusw1	equ	0xFE3
 19867                           fsr1h	equ	0xFE2
 19868                           fsr1l	equ	0xFE1
 19869                           indf2	equ	0xFDF
 19870                           postinc2	equ	0xFDE
 19871                           postdec2	equ	0xFDD
 19872                           plusw2	equ	0xFDB
 19873                           fsr2h	equ	0xFDA
 19874                           fsr2l	equ	0xFD9
 19875                           status	equ	0xFD8
 19876                           
 19877 ;; *************** function _atoi *****************
 19878 ;; Defined at:
 19879 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\atoi.c"
 19880 ;; Parameters:    Size  Location     Type
 19881 ;;  s               2    6[BANK0 ] PTR const unsigned char 
 19882 ;;		 -> configFile_read@value_string(12), 
 19883 ;; Auto vars:     Size  Location     Type
 19884 ;;  a               2   11[BANK0 ] int 
 19885 ;;  sign            1   10[BANK0 ] unsigned char 
 19886 ;; Return value:  Size  Location     Type
 19887 ;;                  2    6[BANK0 ] int 
 19888 ;; Registers used:
 19889 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19890 ;; Tracked objects:
 19891 ;;		On entry : 0/0
 19892 ;;		On exit  : 0/0
 19893 ;;		Unchanged: 0/0
 19894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19895 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19896 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19897 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19898 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19899 ;;Total ram usage:        7 bytes
 19900 ;; Hardware stack levels used:    1
 19901 ;; Hardware stack levels required when called:   11
 19902 ;; This function calls:
 19903 ;;		___wmul
 19904 ;;		_isdigit
 19905 ;; This function is called by:
 19906 ;;		__parse_item
 19907 ;; This function uses a non-reentrant model
 19908 ;;
 19909                           
 19910                           	psect	text81
 19911  0122D0                     __ptext81:
 19912                           	opt stack 0
 19913  0122D0                     _atoi:
 19914                           	opt stack 16
 19915                           
 19916                           ; BSR set to: 0
 19917                           ;incstack = 0
 19918  0122D0  D003               	goto	l3635
 19919  0122D2  0100               	movlb	0	; () banked
 19920  0122D4  4B66               	infsnz	atoi@s& (0+255),f,b
 19921  0122D6  2B67               	incf	(atoi@s+1)& (0+255),f,b
 19922  0122D8                     l3635:
 19923                           
 19924                           ; BSR set to: 0
 19925  0122D8  C066  FFD9         	movff	atoi@s,fsr2l
 19926  0122DC  C067  FFDA         	movff	atoi@s+1,fsr2h
 19927  0122E0  0E20               	movlw	32
 19928  0122E2  18DE               	xorwf	postinc2,w,c
 19929  0122E4  B4D8               	btfsc	status,2,c
 19930  0122E6  D7F5               	goto	l3636
 19931  0122E8  C066  FFD9         	movff	atoi@s,fsr2l
 19932  0122EC  C067  FFDA         	movff	atoi@s+1,fsr2h
 19933  0122F0  0E09               	movlw	9
 19934  0122F2  18DE               	xorwf	postinc2,w,c
 19935  0122F4  B4D8               	btfsc	status,2,c
 19936  0122F6  D7ED               	goto	l3636
 19937  0122F8  0E00               	movlw	0
 19938  0122FA  0100               	movlb	0	; () banked
 19939  0122FC  6F6C               	movwf	(atoi@a+1)& (0+255),b
 19940  0122FE  0E00               	movlw	0
 19941  012300  6F6B               	movwf	atoi@a& (0+255),b
 19942  012302  0E00               	movlw	0
 19943  012304  6F6A               	movwf	atoi@sign& (0+255),b
 19944                           
 19945                           ; BSR set to: 0
 19946  012306  C066  FFD9         	movff	atoi@s,fsr2l
 19947  01230A  C067  FFDA         	movff	atoi@s+1,fsr2h
 19948  01230E  0E2D               	movlw	45
 19949  012310  18DE               	xorwf	postinc2,w,c
 19950  012312  A4D8               	btfss	status,2,c
 19951  012314  D002               	goto	l3638
 19952                           
 19953                           ; BSR set to: 0
 19954  012316  2B6A               	incf	atoi@sign& (0+255),f,b
 19955  012318  D026               	goto	l15173
 19956  01231A                     l3638:
 19957                           
 19958                           ; BSR set to: 0
 19959                           
 19960                           ; BSR set to: 0
 19961  01231A  C066  FFD9         	movff	atoi@s,fsr2l
 19962  01231E  C067  FFDA         	movff	atoi@s+1,fsr2h
 19963  012322  0E2B               	movlw	43
 19964  012324  18DE               	xorwf	postinc2,w,c
 19965  012326  A4D8               	btfss	status,2,c
 19966  012328  D020               	goto	l3641
 19967  01232A  D01D               	goto	l15173
 19968  01232C                     
 19969                           ; BSR set to: 0
 19970  01232C  C06B  F060         	movff	atoi@a,___wmul@multiplier
 19971  012330  C06C  F061         	movff	atoi@a+1,___wmul@multiplier+1
 19972  012334  0E00               	movlw	0
 19973  012336  0100               	movlb	0	; () banked
 19974  012338  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19975  01233A  0E0A               	movlw	10
 19976  01233C  6F62               	movwf	___wmul@multiplicand& (0+255),b
 19977  01233E  EC18  F0AB         	call	___wmul	;wreg free
 19978  012342  C066  FFD9         	movff	atoi@s,fsr2l
 19979  012346  C067  FFDA         	movff	atoi@s+1,fsr2h
 19980  01234A  50DF               	movf	indf2,w,c
 19981  01234C  0100               	movlb	0	; () banked
 19982  01234E  6F68               	movwf	??_atoi& (0+255),b
 19983  012350  6B69               	clrf	(??_atoi+1)& (0+255),b
 19984  012352  5160               	movf	?___wmul& (0+255),w,b
 19985  012354  2768               	addwf	??_atoi& (0+255),f,b
 19986  012356  5161               	movf	(?___wmul+1)& (0+255),w,b
 19987  012358  2369               	addwfc	(??_atoi+1)& (0+255),f,b
 19988  01235A  0ED0               	movlw	208
 19989  01235C  2568               	addwf	??_atoi& (0+255),w,b
 19990  01235E  6F6B               	movwf	atoi@a& (0+255),b
 19991  012360  0EFF               	movlw	255
 19992  012362  2169               	addwfc	(??_atoi+1)& (0+255),w,b
 19993  012364  6F6C               	movwf	(atoi@a+1)& (0+255),b
 19994  012366                     l15173:
 19995                           
 19996                           ; BSR set to: 0
 19997  012366  4B66               	infsnz	atoi@s& (0+255),f,b
 19998  012368  2B67               	incf	(atoi@s+1)& (0+255),f,b
 19999  01236A                     l3641:
 20000                           
 20001                           ; BSR set to: 0
 20002                           
 20003                           ; BSR set to: 0
 20004  01236A  C066  FFD9         	movff	atoi@s,fsr2l
 20005  01236E  C067  FFDA         	movff	atoi@s+1,fsr2h
 20006  012372  50DF               	movf	indf2,w,c
 20007  012374  ECAD  F0AB         	call	_isdigit
 20008  012378  B0D8               	btfsc	status,0,c
 20009  01237A  D7D8               	goto	l3642
 20010  01237C  0100               	movlb	0	; () banked
 20011  01237E  516A               	movf	atoi@sign& (0+255),w,b
 20012  012380  B4D8               	btfsc	status,2,c
 20013  012382  D00D               	goto	l3644
 20014                           
 20015                           ; BSR set to: 0
 20016  012384  C06B  F068         	movff	atoi@a,??_atoi
 20017  012388  C06C  F069         	movff	atoi@a+1,??_atoi+1
 20018  01238C  1F68               	comf	??_atoi& (0+255),f,b
 20019  01238E  1F69               	comf	(??_atoi+1)& (0+255),f,b
 20020  012390  4B68               	infsnz	??_atoi& (0+255),f,b
 20021  012392  2B69               	incf	(??_atoi+1)& (0+255),f,b
 20022  012394  C068  F066         	movff	??_atoi,?_atoi
 20023  012398  C069  F067         	movff	??_atoi+1,?_atoi+1
 20024  01239C  0012               	return	
 20025  01239E                     l3644:
 20026                           
 20027                           ; BSR set to: 0
 20028  01239E  C06B  F066         	movff	atoi@a,?_atoi
 20029  0123A2  C06C  F067         	movff	atoi@a+1,?_atoi+1
 20030                           
 20031                           ; BSR set to: 0
 20032  0123A6  0012               	return		;funcret
 20033  0123A8                     __end_of_atoi:
 20034                           	opt stack 0
 20035                           tblptru	equ	0xFF8
 20036                           tblptrh	equ	0xFF7
 20037                           tblptrl	equ	0xFF6
 20038                           tablat	equ	0xFF5
 20039                           prodh	equ	0xFF4
 20040                           prodl	equ	0xFF3
 20041                           postinc0	equ	0xFEE
 20042                           wreg	equ	0xFE8
 20043                           postinc1	equ	0xFE6
 20044                           postdec1	equ	0xFE5
 20045                           plusw1	equ	0xFE3
 20046                           fsr1h	equ	0xFE2
 20047                           fsr1l	equ	0xFE1
 20048                           indf2	equ	0xFDF
 20049                           postinc2	equ	0xFDE
 20050                           postdec2	equ	0xFDD
 20051                           plusw2	equ	0xFDB
 20052                           fsr2h	equ	0xFDA
 20053                           fsr2l	equ	0xFD9
 20054                           status	equ	0xFD8
 20055                           
 20056 ;; *************** function _isdigit *****************
 20057 ;; Defined at:
 20058 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\isdigit.c"
 20059 ;; Parameters:    Size  Location     Type
 20060 ;;  c               1    wreg     unsigned char 
 20061 ;; Auto vars:     Size  Location     Type
 20062 ;;  c               1    2[BANK0 ] unsigned char 
 20063 ;; Return value:  Size  Location     Type
 20064 ;;		None               void
 20065 ;; Registers used:
 20066 ;;		wreg, status,2, status,0
 20067 ;; Tracked objects:
 20068 ;;		On entry : 0/0
 20069 ;;		On exit  : 0/0
 20070 ;;		Unchanged: 0/0
 20071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20073 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20074 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20075 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20076 ;;Total ram usage:        3 bytes
 20077 ;; Hardware stack levels used:    1
 20078 ;; Hardware stack levels required when called:   10
 20079 ;; This function calls:
 20080 ;;		Nothing
 20081 ;; This function is called by:
 20082 ;;		_atoi
 20083 ;;		_atol
 20084 ;; This function uses a non-reentrant model
 20085 ;;
 20086                           
 20087                           	psect	text82
 20088  01575A                     __ptext82:
 20089                           	opt stack 0
 20090  01575A                     _isdigit:
 20091                           	opt stack 16
 20092                           
 20093                           ; BSR set to: 0
 20094                           ;incstack = 0
 20095                           ;isdigit@c stored from wreg
 20096  01575A  0100               	movlb	0	; () banked
 20097  01575C  6F62               	movwf	isdigit@c& (0+255),b
 20098  01575E  0E00               	movlw	0
 20099  015760  0100               	movlb	0	; () banked
 20100  015762  6F61               	movwf	_isdigit$8180& (0+255),b
 20101                           
 20102                           ; BSR set to: 0
 20103  015764  0E3A               	movlw	58
 20104  015766  6162               	cpfslt	isdigit@c& (0+255),b
 20105  015768  D005               	goto	l3663
 20106                           
 20107                           ; BSR set to: 0
 20108  01576A  0E2F               	movlw	47
 20109  01576C  6562               	cpfsgt	isdigit@c& (0+255),b
 20110  01576E  D002               	goto	l3663
 20111                           
 20112                           ; BSR set to: 0
 20113  015770  0E01               	movlw	1
 20114  015772  6F61               	movwf	_isdigit$8180& (0+255),b
 20115  015774                     l3663:
 20116                           
 20117                           ; BSR set to: 0
 20118                           
 20119                           ; BSR set to: 0
 20120  015774  C061  F060         	movff	_isdigit$8180,??_isdigit
 20121  015778  3160               	rrcf	??_isdigit& (0+255),w,b
 20122  01577A  0012               	return	
 20123  01577C                     __end_of_isdigit:
 20124                           	opt stack 0
 20125                           tblptru	equ	0xFF8
 20126                           tblptrh	equ	0xFF7
 20127                           tblptrl	equ	0xFF6
 20128                           tablat	equ	0xFF5
 20129                           prodh	equ	0xFF4
 20130                           prodl	equ	0xFF3
 20131                           postinc0	equ	0xFEE
 20132                           wreg	equ	0xFE8
 20133                           postinc1	equ	0xFE6
 20134                           postdec1	equ	0xFE5
 20135                           plusw1	equ	0xFE3
 20136                           fsr1h	equ	0xFE2
 20137                           fsr1l	equ	0xFE1
 20138                           indf2	equ	0xFDF
 20139                           postinc2	equ	0xFDE
 20140                           postdec2	equ	0xFDD
 20141                           plusw2	equ	0xFDB
 20142                           fsr2h	equ	0xFDA
 20143                           fsr2l	equ	0xFD9
 20144                           status	equ	0xFD8
 20145                           
 20146 ;; *************** function ___wmul *****************
 20147 ;; Defined at:
 20148 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
 20149 ;; Parameters:    Size  Location     Type
 20150 ;;  multiplier      2    0[BANK0 ] unsigned int 
 20151 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 20152 ;; Auto vars:     Size  Location     Type
 20153 ;;  product         2    4[BANK0 ] unsigned int 
 20154 ;; Return value:  Size  Location     Type
 20155 ;;                  2    0[BANK0 ] unsigned int 
 20156 ;; Registers used:
 20157 ;;		wreg, status,2, status,0, prodl, prodh
 20158 ;; Tracked objects:
 20159 ;;		On entry : 0/0
 20160 ;;		On exit  : 0/0
 20161 ;;		Unchanged: 0/0
 20162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20163 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20164 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20166 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20167 ;;Total ram usage:        6 bytes
 20168 ;; Hardware stack levels used:    1
 20169 ;; Hardware stack levels required when called:   10
 20170 ;; This function calls:
 20171 ;;		Nothing
 20172 ;; This function is called by:
 20173 ;;		_atoi
 20174 ;; This function uses a non-reentrant model
 20175 ;;
 20176                           
 20177                           	psect	text83
 20178  015630                     __ptext83:
 20179                           	opt stack 0
 20180  015630                     ___wmul:
 20181                           	opt stack 16
 20182                           
 20183                           ; BSR set to: 0
 20184                           ;incstack = 0
 20185  015630  0100               	movlb	0	; () banked
 20186  015632  5160               	movf	___wmul@multiplier& (0+255),w,b
 20187  015634  0362               	mulwf	___wmul@multiplicand& (0+255),b
 20188  015636  CFF3 F064          	movff	prodl,___wmul@product
 20189  01563A  CFF4 F065          	movff	prodh,___wmul@product+1
 20190  01563E  5160               	movf	___wmul@multiplier& (0+255),w,b
 20191  015640  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 20192  015642  50F3               	movf	prodl,w,c
 20193  015644  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 20194  015646  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 20195  015648  0362               	mulwf	___wmul@multiplicand& (0+255),b
 20196  01564A  50F3               	movf	prodl,w,c
 20197  01564C  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 20198                           
 20199                           ; BSR set to: 0
 20200  01564E  C064  F060         	movff	___wmul@product,?___wmul
 20201  015652  C065  F061         	movff	___wmul@product+1,?___wmul+1
 20202  015656  0012               	return	
 20203  015658                     __end_of___wmul:
 20204                           	opt stack 0
 20205                           tblptru	equ	0xFF8
 20206                           tblptrh	equ	0xFF7
 20207                           tblptrl	equ	0xFF6
 20208                           tablat	equ	0xFF5
 20209                           prodh	equ	0xFF4
 20210                           prodl	equ	0xFF3
 20211                           postinc0	equ	0xFEE
 20212                           wreg	equ	0xFE8
 20213                           postinc1	equ	0xFE6
 20214                           postdec1	equ	0xFE5
 20215                           plusw1	equ	0xFE3
 20216                           fsr1h	equ	0xFE2
 20217                           fsr1l	equ	0xFE1
 20218                           indf2	equ	0xFDF
 20219                           postinc2	equ	0xFDE
 20220                           postdec2	equ	0xFDD
 20221                           plusw2	equ	0xFDB
 20222                           fsr2h	equ	0xFDA
 20223                           fsr2l	equ	0xFD9
 20224                           status	equ	0xFD8
 20225                           
 20226 ;; *************** function __get_item *****************
 20227 ;; Defined at:
 20228 ;;		line 68 in file "config_file.c"
 20229 ;; Parameters:    Size  Location     Type
 20230 ;;  item_string     2    0[BANK0 ] PTR unsigned char 
 20231 ;;		 -> configFile_read@item_string(31), 
 20232 ;;  value_string    2    2[BANK0 ] PTR unsigned char 
 20233 ;;		 -> configFile_read@value_string(12), 
 20234 ;;  buffer          2    4[BANK0 ] PTR unsigned char 
 20235 ;;		 -> ConfigFile_buffer(512), 
 20236 ;; Auto vars:     Size  Location     Type
 20237 ;;  item_ctr        1   10[BANK0 ] unsigned char 
 20238 ;;  value_ctr       1    9[BANK0 ] unsigned char 
 20239 ;; Return value:  Size  Location     Type
 20240 ;;                  1    wreg      unsigned char 
 20241 ;; Registers used:
 20242 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20243 ;; Tracked objects:
 20244 ;;		On entry : 0/0
 20245 ;;		On exit  : 0/0
 20246 ;;		Unchanged: 0/0
 20247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20248 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20249 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20250 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20251 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20252 ;;Total ram usage:       11 bytes
 20253 ;; Hardware stack levels used:    1
 20254 ;; Hardware stack levels required when called:   10
 20255 ;; This function calls:
 20256 ;;		Nothing
 20257 ;; This function is called by:
 20258 ;;		_configFile_read
 20259 ;; This function uses a non-reentrant model
 20260 ;;
 20261                           
 20262                           	psect	text84
 20263  00F8F6                     __ptext84:
 20264                           	opt stack 0
 20265  00F8F6                     __get_item:
 20266                           	opt stack 18
 20267                           
 20268                           ;config_file.c: 70: uint8_t item_ctr;;config_file.c: 71: uint8_t value_ctr;;config_file.
      +                          c: 74: for(item_ctr=0;item_ctr<30;++item_ctr)
 20269                           
 20270                           ; BSR set to: 0
 20271                           ;incstack = 0
 20272  00F8F6  0E00               	movlw	0
 20273  00F8F8  0100               	movlb	0	; () banked
 20274  00F8FA  6F6A               	movwf	__get_item@item_ctr& (0+255),b
 20275  00F8FC                     l16115:
 20276                           
 20277                           ; BSR set to: 0
 20278  00F8FC  0E1D               	movlw	29
 20279  00F8FE  656A               	cpfsgt	__get_item@item_ctr& (0+255),b
 20280  00F900  D001               	goto	l2921
 20281  00F902  D020               	goto	u14940
 20282  00F904                     l2921:
 20283                           
 20284                           ; BSR set to: 0
 20285                           ;config_file.c: 75: {;config_file.c: 77: if(buffer[item_ctr] == '=')
 20286                           
 20287                           ; BSR set to: 0
 20288  00F904  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20289  00F906  0D01               	mullw	1
 20290  00F908  50F3               	movf	prodl,w,c
 20291  00F90A  2564               	addwf	__get_item@buffer& (0+255),w,b
 20292  00F90C  6ED9               	movwf	fsr2l,c
 20293  00F90E  50F4               	movf	prodh,w,c
 20294  00F910  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20295  00F912  6EDA               	movwf	fsr2h,c
 20296  00F914  0E3D               	movlw	61
 20297  00F916  18DE               	xorwf	postinc2,w,c
 20298  00F918  B4D8               	btfsc	status,2,c
 20299  00F91A  D014               	goto	u14940
 20300                           
 20301                           ; BSR set to: 0
 20302                           ;config_file.c: 80: };config_file.c: 81: item_string[item_ctr] = buffer[item_ctr];
 20303                           
 20304                           ; BSR set to: 0
 20305                           
 20306                           ; BSR set to: 0
 20307                           ;config_file.c: 78: {;config_file.c: 79: break;
 20308  00F91C  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20309  00F91E  0D01               	mullw	1
 20310  00F920  50F3               	movf	prodl,w,c
 20311  00F922  2564               	addwf	__get_item@buffer& (0+255),w,b
 20312  00F924  6ED9               	movwf	fsr2l,c
 20313  00F926  50F4               	movf	prodh,w,c
 20314  00F928  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20315  00F92A  6EDA               	movwf	fsr2h,c
 20316  00F92C  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20317  00F92E  0D01               	mullw	1
 20318  00F930  50F3               	movf	prodl,w,c
 20319  00F932  2560               	addwf	__get_item@item_string& (0+255),w,b
 20320  00F934  6EE1               	movwf	fsr1l,c
 20321  00F936  50F4               	movf	prodh,w,c
 20322  00F938  2161               	addwfc	(__get_item@item_string+1)& (0+255),w,b
 20323  00F93A  6EE2               	movwf	fsr1h,c
 20324  00F93C  CFDF FFE7          	movff	indf2,indf1
 20325                           
 20326                           ; BSR set to: 0
 20327  00F940  2B6A               	incf	__get_item@item_ctr& (0+255),f,b
 20328  00F942  D7DC               	goto	l16115
 20329  00F944                     u14940:
 20330                           
 20331                           ; BSR set to: 0
 20332                           ;config_file.c: 82: };config_file.c: 83: item_string[item_ctr++] = 0;
 20333                           
 20334                           ; BSR set to: 0
 20335  00F944  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20336  00F946  0D01               	mullw	1
 20337  00F948  50F3               	movf	prodl,w,c
 20338  00F94A  2560               	addwf	__get_item@item_string& (0+255),w,b
 20339  00F94C  6ED9               	movwf	fsr2l,c
 20340  00F94E  50F4               	movf	prodh,w,c
 20341  00F950  2161               	addwfc	(__get_item@item_string+1)& (0+255),w,b
 20342  00F952  6EDA               	movwf	fsr2h,c
 20343  00F954  0E00               	movlw	0
 20344  00F956  6EDF               	movwf	indf2,c
 20345                           
 20346                           ; BSR set to: 0
 20347  00F958  2B6A               	incf	__get_item@item_ctr& (0+255),f,b
 20348                           
 20349                           ; BSR set to: 0
 20350                           ;config_file.c: 86: for(value_ctr=0;value_ctr<11;++value_ctr)
 20351  00F95A  0E00               	movlw	0
 20352  00F95C  6F69               	movwf	__get_item@value_ctr& (0+255),b
 20353  00F95E                     l16135:
 20354                           
 20355                           ; BSR set to: 0
 20356  00F95E  0E0A               	movlw	10
 20357  00F960  6569               	cpfsgt	__get_item@value_ctr& (0+255),b
 20358  00F962  D001               	goto	l2924
 20359  00F964  D03B               	goto	u14980
 20360  00F966                     l2924:
 20361                           
 20362                           ; BSR set to: 0
 20363                           ;config_file.c: 87: {;config_file.c: 89: if((buffer[item_ctr+value_ctr]=='\r') || (buffe
      +                          r[item_ctr+value_ctr]=='\n'))
 20364                           
 20365                           ; BSR set to: 0
 20366  00F966  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20367  00F968  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20368  00F96C  6B67               	clrf	(??__get_item+1)& (0+255),b
 20369  00F96E  2766               	addwf	??__get_item& (0+255),f,b
 20370  00F970  0E00               	movlw	0
 20371  00F972  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20372  00F974  5166               	movf	??__get_item& (0+255),w,b
 20373  00F976  2564               	addwf	__get_item@buffer& (0+255),w,b
 20374  00F978  6ED9               	movwf	fsr2l,c
 20375  00F97A  5167               	movf	(??__get_item+1)& (0+255),w,b
 20376  00F97C  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20377  00F97E  6EDA               	movwf	fsr2h,c
 20378  00F980  0E0D               	movlw	13
 20379  00F982  18DE               	xorwf	postinc2,w,c
 20380  00F984  B4D8               	btfsc	status,2,c
 20381  00F986  D02A               	goto	u14980
 20382                           
 20383                           ; BSR set to: 0
 20384  00F988  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20385  00F98A  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20386  00F98E  6B67               	clrf	(??__get_item+1)& (0+255),b
 20387  00F990  2766               	addwf	??__get_item& (0+255),f,b
 20388  00F992  0E00               	movlw	0
 20389  00F994  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20390  00F996  5166               	movf	??__get_item& (0+255),w,b
 20391  00F998  2564               	addwf	__get_item@buffer& (0+255),w,b
 20392  00F99A  6ED9               	movwf	fsr2l,c
 20393  00F99C  5167               	movf	(??__get_item+1)& (0+255),w,b
 20394  00F99E  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20395  00F9A0  6EDA               	movwf	fsr2h,c
 20396  00F9A2  0E0A               	movlw	10
 20397  00F9A4  18DE               	xorwf	postinc2,w,c
 20398  00F9A6  B4D8               	btfsc	status,2,c
 20399  00F9A8  D019               	goto	u14980
 20400                           
 20401                           ; BSR set to: 0
 20402                           ;config_file.c: 92: };config_file.c: 93: value_string[value_ctr] = buffer[item_ctr+value
      +                          _ctr];
 20403                           
 20404                           ; BSR set to: 0
 20405                           
 20406                           ; BSR set to: 0
 20407                           ;config_file.c: 90: {;config_file.c: 91: break;
 20408  00F9AA  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20409  00F9AC  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20410  00F9B0  6B67               	clrf	(??__get_item+1)& (0+255),b
 20411  00F9B2  2766               	addwf	??__get_item& (0+255),f,b
 20412  00F9B4  0E00               	movlw	0
 20413  00F9B6  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20414  00F9B8  5166               	movf	??__get_item& (0+255),w,b
 20415  00F9BA  2564               	addwf	__get_item@buffer& (0+255),w,b
 20416  00F9BC  6ED9               	movwf	fsr2l,c
 20417  00F9BE  5167               	movf	(??__get_item+1)& (0+255),w,b
 20418  00F9C0  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20419  00F9C2  6EDA               	movwf	fsr2h,c
 20420  00F9C4  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20421  00F9C6  0D01               	mullw	1
 20422  00F9C8  50F3               	movf	prodl,w,c
 20423  00F9CA  2562               	addwf	__get_item@value_string& (0+255),w,b
 20424  00F9CC  6EE1               	movwf	fsr1l,c
 20425  00F9CE  50F4               	movf	prodh,w,c
 20426  00F9D0  2163               	addwfc	(__get_item@value_string+1)& (0+255),w,b
 20427  00F9D2  6EE2               	movwf	fsr1h,c
 20428  00F9D4  CFDF FFE7          	movff	indf2,indf1
 20429                           
 20430                           ; BSR set to: 0
 20431  00F9D8  2B69               	incf	__get_item@value_ctr& (0+255),f,b
 20432  00F9DA  D7C1               	goto	l16135
 20433  00F9DC                     u14980:
 20434                           
 20435                           ; BSR set to: 0
 20436                           ;config_file.c: 94: };config_file.c: 95: value_string[value_ctr++] = 0;
 20437                           
 20438                           ; BSR set to: 0
 20439  00F9DC  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20440  00F9DE  0D01               	mullw	1
 20441  00F9E0  50F3               	movf	prodl,w,c
 20442  00F9E2  2562               	addwf	__get_item@value_string& (0+255),w,b
 20443  00F9E4  6ED9               	movwf	fsr2l,c
 20444  00F9E6  50F4               	movf	prodh,w,c
 20445  00F9E8  2163               	addwfc	(__get_item@value_string+1)& (0+255),w,b
 20446  00F9EA  6EDA               	movwf	fsr2h,c
 20447  00F9EC  0E00               	movlw	0
 20448  00F9EE  6EDF               	movwf	indf2,c
 20449  00F9F0                     
 20450                           ; BSR set to: 0
 20451                           ;config_file.c: 99: {;config_file.c: 100: ++value_ctr;
 20452                           
 20453                           ; BSR set to: 0
 20454                           
 20455                           ;config_file.c: 98: while((buffer[item_ctr+value_ctr]=='\r') || (buffer[item_ctr+value_c
      +                          tr]=='\n') || (buffer[item_ctr+value_ctr]=='\t') || (buffer[item_ctr+value_ctr]==' '))
 20456                           
 20457                           ; BSR set to: 0
 20458  00F9F0  2B69               	incf	__get_item@value_ctr& (0+255),f,b
 20459                           
 20460                           ; BSR set to: 0
 20461                           
 20462                           ; BSR set to: 0
 20463  00F9F2  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20464  00F9F4  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20465  00F9F8  6B67               	clrf	(??__get_item+1)& (0+255),b
 20466  00F9FA  2766               	addwf	??__get_item& (0+255),f,b
 20467  00F9FC  0E00               	movlw	0
 20468  00F9FE  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20469  00FA00  5166               	movf	??__get_item& (0+255),w,b
 20470  00FA02  2564               	addwf	__get_item@buffer& (0+255),w,b
 20471  00FA04  6ED9               	movwf	fsr2l,c
 20472  00FA06  5167               	movf	(??__get_item+1)& (0+255),w,b
 20473  00FA08  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20474  00FA0A  6EDA               	movwf	fsr2h,c
 20475  00FA0C  0E0D               	movlw	13
 20476  00FA0E  18DE               	xorwf	postinc2,w,c
 20477  00FA10  B4D8               	btfsc	status,2,c
 20478  00FA12  D7EE               	goto	l16151
 20479                           
 20480                           ; BSR set to: 0
 20481  00FA14  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20482  00FA16  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20483  00FA1A  6B67               	clrf	(??__get_item+1)& (0+255),b
 20484  00FA1C  2766               	addwf	??__get_item& (0+255),f,b
 20485  00FA1E  0E00               	movlw	0
 20486  00FA20  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20487  00FA22  5166               	movf	??__get_item& (0+255),w,b
 20488  00FA24  2564               	addwf	__get_item@buffer& (0+255),w,b
 20489  00FA26  6ED9               	movwf	fsr2l,c
 20490  00FA28  5167               	movf	(??__get_item+1)& (0+255),w,b
 20491  00FA2A  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20492  00FA2C  6EDA               	movwf	fsr2h,c
 20493  00FA2E  0E0A               	movlw	10
 20494  00FA30  18DE               	xorwf	postinc2,w,c
 20495  00FA32  B4D8               	btfsc	status,2,c
 20496  00FA34  D7DD               	goto	l16151
 20497                           
 20498                           ; BSR set to: 0
 20499  00FA36  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20500  00FA38  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20501  00FA3C  6B67               	clrf	(??__get_item+1)& (0+255),b
 20502  00FA3E  2766               	addwf	??__get_item& (0+255),f,b
 20503  00FA40  0E00               	movlw	0
 20504  00FA42  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20505  00FA44  5166               	movf	??__get_item& (0+255),w,b
 20506  00FA46  2564               	addwf	__get_item@buffer& (0+255),w,b
 20507  00FA48  6ED9               	movwf	fsr2l,c
 20508  00FA4A  5167               	movf	(??__get_item+1)& (0+255),w,b
 20509  00FA4C  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20510  00FA4E  6EDA               	movwf	fsr2h,c
 20511  00FA50  0E09               	movlw	9
 20512  00FA52  18DE               	xorwf	postinc2,w,c
 20513  00FA54  B4D8               	btfsc	status,2,c
 20514  00FA56  D7CC               	goto	l16151
 20515                           
 20516                           ; BSR set to: 0
 20517  00FA58  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20518  00FA5A  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20519  00FA5E  6B67               	clrf	(??__get_item+1)& (0+255),b
 20520  00FA60  2766               	addwf	??__get_item& (0+255),f,b
 20521  00FA62  0E00               	movlw	0
 20522  00FA64  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20523  00FA66  5166               	movf	??__get_item& (0+255),w,b
 20524  00FA68  2564               	addwf	__get_item@buffer& (0+255),w,b
 20525  00FA6A  6ED9               	movwf	fsr2l,c
 20526  00FA6C  5167               	movf	(??__get_item+1)& (0+255),w,b
 20527  00FA6E  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20528  00FA70  6EDA               	movwf	fsr2h,c
 20529  00FA72  0E20               	movlw	32
 20530  00FA74  18DE               	xorwf	postinc2,w,c
 20531  00FA76  B4D8               	btfsc	status,2,c
 20532  00FA78  D7BB               	goto	l16151
 20533                           
 20534                           ; BSR set to: 0
 20535                           ;config_file.c: 101: };config_file.c: 104: return (item_ctr+value_ctr);
 20536                           
 20537                           ; BSR set to: 0
 20538  00FA7A  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20539  00FA7C  2569               	addwf	__get_item@value_ctr& (0+255),w,b
 20540  00FA7E  0012               	return	
 20541  00FA80                     __end_of__get_item:
 20542                           	opt stack 0
 20543                           tblptru	equ	0xFF8
 20544                           tblptrh	equ	0xFF7
 20545                           tblptrl	equ	0xFF6
 20546                           tablat	equ	0xFF5
 20547                           prodh	equ	0xFF4
 20548                           prodl	equ	0xFF3
 20549                           postinc0	equ	0xFEE
 20550                           wreg	equ	0xFE8
 20551                           indf1	equ	0xFE7
 20552                           postinc1	equ	0xFE6
 20553                           postdec1	equ	0xFE5
 20554                           plusw1	equ	0xFE3
 20555                           fsr1h	equ	0xFE2
 20556                           fsr1l	equ	0xFE1
 20557                           indf2	equ	0xFDF
 20558                           postinc2	equ	0xFDE
 20559                           postdec2	equ	0xFDD
 20560                           plusw2	equ	0xFDB
 20561                           fsr2h	equ	0xFDA
 20562                           fsr2l	equ	0xFD9
 20563                           status	equ	0xFD8
 20564                           
 20565 ;; *************** function _adc_init *****************
 20566 ;; Defined at:
 20567 ;;		line 19 in file "adc.c"
 20568 ;; Parameters:    Size  Location     Type
 20569 ;;		None
 20570 ;; Auto vars:     Size  Location     Type
 20571 ;;		None
 20572 ;; Return value:  Size  Location     Type
 20573 ;;                  1    wreg      void 
 20574 ;; Registers used:
 20575 ;;		wreg, status,2
 20576 ;; Tracked objects:
 20577 ;;		On entry : 0/0
 20578 ;;		On exit  : 0/0
 20579 ;;		Unchanged: 0/0
 20580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20585 ;;Total ram usage:        0 bytes
 20586 ;; Hardware stack levels used:    1
 20587 ;; Hardware stack levels required when called:   10
 20588 ;; This function calls:
 20589 ;;		Nothing
 20590 ;; This function is called by:
 20591 ;;		_system_init
 20592 ;; This function uses a non-reentrant model
 20593 ;;
 20594                           
 20595                           	psect	text85
 20596  0147F6                     __ptext85:
 20597                           	opt stack 0
 20598  0147F6                     _adc_init:
 20599                           	opt stack 19
 20600                           
 20601                           ;adc.c: 22: os.temperature[TEMPERATURE_SOURCE_INTERNAL] = 0;
 20602                           
 20603                           ; BSR set to: 0
 20604                           ;incstack = 0
 20605  0147F6  0E00               	movlw	0
 20606  0147F8  0101               	movlb	1	; () banked
 20607  0147FA  6F99               	movwf	(_os+40)& (0+255),b	;volatile
 20608  0147FC  0E00               	movlw	0
 20609  0147FE  6F98               	movwf	(_os+39)& (0+255),b	;volatile
 20610                           
 20611                           ;adc.c: 23: os.temperature[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 20612  014800  0E00               	movlw	0
 20613  014802  6F9B               	movwf	(_os+42)& (0+255),b	;volatile
 20614  014804  0E00               	movlw	0
 20615  014806  6F9A               	movwf	(_os+41)& (0+255),b	;volatile
 20616                           
 20617                           ;adc.c: 24: os.fan_on = 0;
 20618  014808  0E00               	movlw	0
 20619  01480A  6F9F               	movwf	(_os+46)& (0+255),b	;volatile
 20620                           
 20621                           ;adc.c: 25: params.temperature_source = TEMPERATURE_SOURCE_INTERNAL;
 20622  01480C  0E00               	movlw	0
 20623  01480E  0102               	movlb	2	; () banked
 20624  014810  6F1F               	movwf	_params& (0+255),b
 20625                           
 20626                           ;adc.c: 26: params.temperature_adc_sum[TEMPERATURE_SOURCE_INTERNAL] = 0;
 20627  014812  0E00               	movlw	0
 20628  014814  6F21               	movwf	(_params+2)& (0+255),b
 20629  014816  0E00               	movlw	0
 20630  014818  6F20               	movwf	(_params+1)& (0+255),b
 20631                           
 20632                           ;adc.c: 27: params.temperature_count[TEMPERATURE_SOURCE_INTERNAL] = 0;
 20633  01481A  0E00               	movlw	0
 20634  01481C  6F24               	movwf	(_params+5)& (0+255),b
 20635                           
 20636                           ;adc.c: 28: params.temperature_adc_sum[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 20637  01481E  0E00               	movlw	0
 20638  014820  6F23               	movwf	(_params+4)& (0+255),b
 20639  014822  0E00               	movlw	0
 20640  014824  6F22               	movwf	(_params+3)& (0+255),b
 20641                           
 20642                           ;adc.c: 29: params.temperature_count[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 20643  014826  0E00               	movlw	0
 20644  014828  6F25               	movwf	(_params+6)& (0+255),b
 20645                           
 20646                           ; BSR set to: 2
 20647                           ;adc.c: 31: ADCON0bits.VCFG1 = 0;
 20648  01482A  9EC2               	bcf	4034,7,c	;volatile
 20649                           
 20650                           ; BSR set to: 2
 20651                           ;adc.c: 32: ADCON0bits.VCFG0 = 0;
 20652  01482C  9CC2               	bcf	4034,6,c	;volatile
 20653                           
 20654                           ;adc.c: 33: ADCON0bits.CHS = 0b1001;
 20655  01482E  50C2               	movf	4034,w,c	;volatile
 20656  014830  0BC3               	andlw	-61
 20657  014832  0924               	iorlw	36
 20658  014834  6EC2               	movwf	4034,c	;volatile
 20659                           
 20660                           ; BSR set to: 2
 20661                           ;adc.c: 35: ADCON1bits.ADFM = 1;
 20662  014836  8EC1               	bsf	4033,7,c	;volatile
 20663                           
 20664                           ; BSR set to: 2
 20665                           ;adc.c: 36: ADCON1bits.ADCAL = 0;
 20666  014838  9CC1               	bcf	4033,6,c	;volatile
 20667                           
 20668                           ; BSR set to: 2
 20669                           ;adc.c: 37: ADCON1bits.ACQT = 0b111;
 20670  01483A  86C1               	bsf	4033,3,c	;volatile
 20671  01483C  88C1               	bsf	4033,4,c	;volatile
 20672  01483E  8AC1               	bsf	4033,5,c	;volatile
 20673                           
 20674                           ;adc.c: 38: ADCON1bits.ADCS = 0b110;
 20675  014840  50C1               	movf	4033,w,c	;volatile
 20676  014842  0BF8               	andlw	-8
 20677  014844  0906               	iorlw	6
 20678  014846  6EC1               	movwf	4033,c	;volatile
 20679                           
 20680                           ; BSR set to: 2
 20681                           ;adc.c: 40: ADCON0bits.ADON = 1;
 20682  014848  80C2               	bsf	4034,0,c	;volatile
 20683                           
 20684                           ; BSR set to: 2
 20685                           ;adc.c: 41: ADCON0bits.GO = 1;
 20686  01484A  82C2               	bsf	4034,1,c	;volatile
 20687                           
 20688                           ; BSR set to: 2
 20689  01484C  0012               	return		;funcret
 20690  01484E                     __end_of_adc_init:
 20691                           	opt stack 0
 20692                           tblptru	equ	0xFF8
 20693                           tblptrh	equ	0xFF7
 20694                           tblptrl	equ	0xFF6
 20695                           tablat	equ	0xFF5
 20696                           prodh	equ	0xFF4
 20697                           prodl	equ	0xFF3
 20698                           postinc0	equ	0xFEE
 20699                           wreg	equ	0xFE8
 20700                           indf1	equ	0xFE7
 20701                           postinc1	equ	0xFE6
 20702                           postdec1	equ	0xFE5
 20703                           plusw1	equ	0xFE3
 20704                           fsr1h	equ	0xFE2
 20705                           fsr1l	equ	0xFE1
 20706                           indf2	equ	0xFDF
 20707                           postinc2	equ	0xFDE
 20708                           postdec2	equ	0xFDD
 20709                           plusw2	equ	0xFDB
 20710                           fsr2h	equ	0xFDA
 20711                           fsr2l	equ	0xFD9
 20712                           status	equ	0xFD8
 20713                           
 20714 ;; *************** function __system_timer0_init *****************
 20715 ;; Defined at:
 20716 ;;		line 125 in file "os.c"
 20717 ;; Parameters:    Size  Location     Type
 20718 ;;		None
 20719 ;; Auto vars:     Size  Location     Type
 20720 ;;		None
 20721 ;; Return value:  Size  Location     Type
 20722 ;;                  1    wreg      void 
 20723 ;; Registers used:
 20724 ;;		wreg, status,2
 20725 ;; Tracked objects:
 20726 ;;		On entry : 0/0
 20727 ;;		On exit  : 0/0
 20728 ;;		Unchanged: 0/0
 20729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20734 ;;Total ram usage:        0 bytes
 20735 ;; Hardware stack levels used:    1
 20736 ;; Hardware stack levels required when called:   10
 20737 ;; This function calls:
 20738 ;;		Nothing
 20739 ;; This function is called by:
 20740 ;;		_system_init
 20741 ;; This function uses a non-reentrant model
 20742 ;;
 20743                           
 20744                           	psect	text86
 20745  0154E0                     __ptext86:
 20746                           	opt stack 0
 20747  0154E0                     __system_timer0_init:
 20748                           	opt stack 19
 20749                           
 20750                           ;os.c: 130: T0CONbits.T0CS = 0;
 20751                           
 20752                           ; BSR set to: 2
 20753                           ;incstack = 0
 20754  0154E0  9AD5               	bcf	4053,5,c	;volatile
 20755                           
 20756                           ;os.c: 132: T0CONbits.T08BIT = 0;
 20757  0154E2  9CD5               	bcf	4053,6,c	;volatile
 20758                           
 20759                           ;os.c: 134: T0CONbits.T0PS2 = 0;
 20760  0154E4  94D5               	bcf	4053,2,c	;volatile
 20761                           
 20762                           ;os.c: 135: T0CONbits.T0PS1 = 1;
 20763  0154E6  82D5               	bsf	4053,1,c	;volatile
 20764                           
 20765                           ;os.c: 136: T0CONbits.T0PS0 = 0;
 20766  0154E8  90D5               	bcf	4053,0,c	;volatile
 20767                           
 20768                           ;os.c: 138: T0CONbits.PSA = 0;
 20769  0154EA  96D5               	bcf	4053,3,c	;volatile
 20770                           
 20771                           ;os.c: 140: TMR0H = 0xFA;
 20772  0154EC  0EFA               	movlw	250
 20773  0154EE  6ED7               	movwf	4055,c	;volatile
 20774                           
 20775                           ;os.c: 141: TMR0L = 0x24;
 20776  0154F0  0E24               	movlw	36
 20777  0154F2  6ED6               	movwf	4054,c	;volatile
 20778                           
 20779                           ;os.c: 143: T0CONbits.TMR0ON = 1;
 20780  0154F4  8ED5               	bsf	4053,7,c	;volatile
 20781                           
 20782                           ;os.c: 146: INTCONbits.TMR0IF = 0;
 20783  0154F6  94F2               	bcf	intcon,2,c	;volatile
 20784                           
 20785                           ;os.c: 147: INTCONbits.TMR0IE = 1;
 20786  0154F8  8AF2               	bsf	intcon,5,c	;volatile
 20787                           
 20788                           ;os.c: 148: INTCONbits.GIE = 1;
 20789  0154FA  8EF2               	bsf	intcon,7,c	;volatile
 20790                           
 20791                           ;os.c: 151: os.subTimeSlot = 0;
 20792  0154FC  0E00               	movlw	0
 20793  0154FE  0101               	movlb	1	; () banked
 20794  015500  6F71               	movwf	_os& (0+255),b	;volatile
 20795                           
 20796                           ;os.c: 152: os.timeSlot = 0;
 20797  015502  0E00               	movlw	0
 20798  015504  6F72               	movwf	(_os+1)& (0+255),b	;volatile
 20799                           
 20800                           ;os.c: 153: os.done = 0;
 20801  015506  0E00               	movlw	0
 20802  015508  6F73               	movwf	(_os+2)& (0+255),b	;volatile
 20803                           
 20804                           ; BSR set to: 1
 20805  01550A  0012               	return		;funcret
 20806  01550C                     __end_of__system_timer0_init:
 20807                           	opt stack 0
 20808                           tblptru	equ	0xFF8
 20809                           tblptrh	equ	0xFF7
 20810                           tblptrl	equ	0xFF6
 20811                           tablat	equ	0xFF5
 20812                           prodh	equ	0xFF4
 20813                           prodl	equ	0xFF3
 20814                           intcon	equ	0xFF2
 20815                           postinc0	equ	0xFEE
 20816                           wreg	equ	0xFE8
 20817                           indf1	equ	0xFE7
 20818                           postinc1	equ	0xFE6
 20819                           postdec1	equ	0xFE5
 20820                           plusw1	equ	0xFE3
 20821                           fsr1h	equ	0xFE2
 20822                           fsr1l	equ	0xFE1
 20823                           indf2	equ	0xFDF
 20824                           postinc2	equ	0xFDE
 20825                           postdec2	equ	0xFDD
 20826                           plusw2	equ	0xFDB
 20827                           fsr2h	equ	0xFDA
 20828                           fsr2l	equ	0xFD9
 20829                           status	equ	0xFD8
 20830                           
 20831 ;; *************** function __system_pin_setup *****************
 20832 ;; Defined at:
 20833 ;;		line 59 in file "os.c"
 20834 ;; Parameters:    Size  Location     Type
 20835 ;;		None
 20836 ;; Auto vars:     Size  Location     Type
 20837 ;;		None
 20838 ;; Return value:  Size  Location     Type
 20839 ;;                  1    wreg      void 
 20840 ;; Registers used:
 20841 ;;		wreg, status,2
 20842 ;; Tracked objects:
 20843 ;;		On entry : 0/0
 20844 ;;		On exit  : 0/0
 20845 ;;		Unchanged: 0/0
 20846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20851 ;;Total ram usage:        0 bytes
 20852 ;; Hardware stack levels used:    1
 20853 ;; Hardware stack levels required when called:   10
 20854 ;; This function calls:
 20855 ;;		Nothing
 20856 ;; This function is called by:
 20857 ;;		_system_init
 20858 ;; This function uses a non-reentrant model
 20859 ;;
 20860                           
 20861                           	psect	text87
 20862  0140E8                     __ptext87:
 20863                           	opt stack 0
 20864  0140E8                     __system_pin_setup:
 20865                           	opt stack 19
 20866                           
 20867                           ;os.c: 62: TRISDbits.TRISD5 = 1;
 20868                           
 20869                           ; BSR set to: 1
 20870                           ;incstack = 0
 20871  0140E8  8A95               	bsf	3989,5,c	;volatile
 20872                           
 20873                           ;os.c: 63: TRISDbits.TRISD4 = 0;
 20874  0140EA  9895               	bcf	3989,4,c	;volatile
 20875                           
 20876                           ;os.c: 64: TRISDbits.TRISD6 = 0;
 20877  0140EC  9C95               	bcf	3989,6,c	;volatile
 20878                           
 20879                           ;os.c: 65: TRISDbits.TRISD7 = 0;
 20880  0140EE  9E95               	bcf	3989,7,c	;volatile
 20881                           
 20882                           ;os.c: 66: LATDbits.LD7 = 1;
 20883  0140F0  8E8C               	bsf	3980,7,c	;volatile
 20884                           
 20885                           ;os.c: 68: TRISBbits.TRISB3 = 1;
 20886  0140F2  8693               	bsf	3987,3,c	;volatile
 20887                           
 20888                           ;os.c: 69: ANCON1bits.PCFG9 = 0;
 20889  0140F4  010F               	movlb	15	; () banked
 20890  0140F6  9349               	bcf	73,1,b	;volatile
 20891                           
 20892                           ;os.c: 71: TRISCbits.TRISC7 = 0;
 20893  0140F8  9E94               	bcf	3988,7,c	;volatile
 20894                           
 20895                           ;os.c: 72: LATCbits.LC7 = 0;
 20896  0140FA  9E8B               	bcf	3979,7,c	;volatile
 20897                           
 20898                           ;os.c: 74: TRISCbits.TRISC6 = 0;
 20899  0140FC  9C94               	bcf	3988,6,c	;volatile
 20900                           
 20901                           ;os.c: 75: LATCbits.LC6 = 0;
 20902  0140FE  9C8B               	bcf	3979,6,c	;volatile
 20903                           
 20904                           ;os.c: 77: TRISAbits.TRISA3 = 0;
 20905  014100  9692               	bcf	3986,3,c	;volatile
 20906                           
 20907                           ;os.c: 78: LATAbits.LA3 = 0;
 20908  014102  9689               	bcf	3977,3,c	;volatile
 20909                           
 20910                           ;os.c: 80: TRISCbits.TRISC1 = 0;
 20911  014104  9294               	bcf	3988,1,c	;volatile
 20912                           
 20913                           ;os.c: 81: LATCbits.LC1 = 0;
 20914  014106  928B               	bcf	3979,1,c	;volatile
 20915                           
 20916                           ;os.c: 86: TRISBbits.TRISB5 = 1;
 20917  014108  8A93               	bsf	3987,5,c	;volatile
 20918                           
 20919                           ;os.c: 87: TRISBbits.TRISB4 = 1;
 20920  01410A  8893               	bsf	3987,4,c	;volatile
 20921                           
 20922                           ;os.c: 89: TRISBbits.TRISB0 = 0;
 20923  01410C  9093               	bcf	3987,0,c	;volatile
 20924                           
 20925                           ;os.c: 90: LATBbits.LB0 = 1;
 20926  01410E  808A               	bsf	3978,0,c	;volatile
 20927                           
 20928                           ;os.c: 92: TRISBbits.TRISB2 = 0;
 20929  014110  9493               	bcf	3987,2,c	;volatile
 20930                           
 20931                           ;os.c: 93: LATBbits.LB2 = 0;
 20932  014112  948A               	bcf	3978,2,c	;volatile
 20933                           
 20934                           ;os.c: 95: TRISBbits.TRISB1 = 0;
 20935  014114  9293               	bcf	3987,1,c	;volatile
 20936                           
 20937                           ;os.c: 96: ANCON1bits.PCFG10 = 1;
 20938  014116  8549               	bsf	73,2,b	;volatile
 20939                           
 20940                           ;os.c: 97: LATBbits.LB1 = 0;
 20941  014118  928A               	bcf	3978,1,c	;volatile
 20942                           
 20943                           ; BSR set to: 15
 20944                           ;os.c: 98: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 20945  01411A  0E55               	movlw	85
 20946  01411C  6EA7               	movwf	4007,c	;volsfr
 20947  01411E  0EAA               	movlw	170
 20948  014120  6EA7               	movwf	4007,c	;volsfr
 20949                           
 20950                           ; BSR set to: 15
 20951  014122  010E               	movlb	14	; () banked
 20952  014124  91BF               	bcf	191,0,b	;volatile
 20953                           
 20954                           ;os.c: 99: RPOR4 = 14;
 20955  014126  0E0E               	movlw	14
 20956  014128  6FC4               	movwf	196,b	;volatile
 20957                           
 20958                           ;os.c: 100: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 20959  01412A  0E55               	movlw	85
 20960  01412C  6EA7               	movwf	4007,c	;volsfr
 20961  01412E  0EAA               	movlw	170
 20962  014130  6EA7               	movwf	4007,c	;volsfr
 20963                           
 20964                           ; BSR set to: 14
 20965  014132  81BF               	bsf	191,0,b	;volatile
 20966                           
 20967                           ; BSR set to: 14
 20968                           ;os.c: 102: TRISDbits.TRISD2 = 1;
 20969  014134  8495               	bsf	3989,2,c	;volatile
 20970                           
 20971                           ; BSR set to: 14
 20972                           ;os.c: 104: TRISEbits.TRISE2 = 1;
 20973  014136  8496               	bsf	3990,2,c	;volatile
 20974                           
 20975                           ; BSR set to: 14
 20976                           ;os.c: 105: ANCON0bits.PCFG7 = 1;
 20977  014138  010F               	movlb	15	; () banked
 20978  01413A  8F48               	bsf	72,7,b	;volatile
 20979                           
 20980                           ; BSR set to: 15
 20981                           ;os.c: 107: TRISEbits.TRISE0 = 1;
 20982  01413C  8096               	bsf	3990,0,c	;volatile
 20983                           
 20984                           ; BSR set to: 15
 20985                           ;os.c: 108: ANCON0bits.PCFG5 = 1;
 20986  01413E  8B48               	bsf	72,5,b	;volatile
 20987                           
 20988                           ; BSR set to: 15
 20989                           ;os.c: 110: TRISEbits.TRISE1 = 1;
 20990  014140  8296               	bsf	3990,1,c	;volatile
 20991                           
 20992                           ; BSR set to: 15
 20993                           ;os.c: 111: ANCON0bits.PCFG6 = 1;
 20994  014142  8D48               	bsf	72,6,b	;volatile
 20995                           
 20996                           ; BSR set to: 15
 20997                           ;os.c: 113: TRISAbits.TRISA0 = 1;
 20998  014144  8092               	bsf	3986,0,c	;volatile
 20999                           
 21000                           ; BSR set to: 15
 21001                           ;os.c: 114: ANCON0bits.PCFG0 = 1;
 21002  014146  8148               	bsf	72,0,b	;volatile
 21003                           
 21004                           ; BSR set to: 15
 21005                           ;os.c: 116: TRISAbits.TRISA2 = 1;
 21006  014148  8492               	bsf	3986,2,c	;volatile
 21007                           
 21008                           ; BSR set to: 15
 21009                           ;os.c: 117: ANCON0bits.PCFG2 = 1;
 21010  01414A  8548               	bsf	72,2,b	;volatile
 21011                           
 21012                           ; BSR set to: 15
 21013                           ;os.c: 119: TRISAbits.TRISA1 = 1;
 21014  01414C  8292               	bsf	3986,1,c	;volatile
 21015                           
 21016                           ; BSR set to: 15
 21017                           ;os.c: 120: ANCON0bits.PCFG1 = 1;
 21018  01414E  8348               	bsf	72,1,b	;volatile
 21019                           
 21020                           ; BSR set to: 15
 21021  014150  0012               	return		;funcret
 21022  014152                     __end_of__system_pin_setup:
 21023                           	opt stack 0
 21024                           tblptru	equ	0xFF8
 21025                           tblptrh	equ	0xFF7
 21026                           tblptrl	equ	0xFF6
 21027                           tablat	equ	0xFF5
 21028                           prodh	equ	0xFF4
 21029                           prodl	equ	0xFF3
 21030                           intcon	equ	0xFF2
 21031                           postinc0	equ	0xFEE
 21032                           wreg	equ	0xFE8
 21033                           indf1	equ	0xFE7
 21034                           postinc1	equ	0xFE6
 21035                           postdec1	equ	0xFE5
 21036                           plusw1	equ	0xFE3
 21037                           fsr1h	equ	0xFE2
 21038                           fsr1l	equ	0xFE1
 21039                           indf2	equ	0xFDF
 21040                           postinc2	equ	0xFDE
 21041                           postdec2	equ	0xFDD
 21042                           plusw2	equ	0xFDB
 21043                           fsr2h	equ	0xFDA
 21044                           fsr2l	equ	0xFD9
 21045                           status	equ	0xFD8
 21046                           
 21047 ;; *************** function __backlight_init *****************
 21048 ;; Defined at:
 21049 ;;		line 158 in file "os.c"
 21050 ;; Parameters:    Size  Location     Type
 21051 ;;		None
 21052 ;; Auto vars:     Size  Location     Type
 21053 ;;		None
 21054 ;; Return value:  Size  Location     Type
 21055 ;;                  1    wreg      void 
 21056 ;; Registers used:
 21057 ;;		None
 21058 ;; Tracked objects:
 21059 ;;		On entry : 0/0
 21060 ;;		On exit  : 0/0
 21061 ;;		Unchanged: 0/0
 21062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21067 ;;Total ram usage:        0 bytes
 21068 ;; Hardware stack levels used:    1
 21069 ;; Hardware stack levels required when called:   10
 21070 ;; This function calls:
 21071 ;;		Nothing
 21072 ;; This function is called by:
 21073 ;;		_system_init
 21074 ;; This function uses a non-reentrant model
 21075 ;;
 21076                           
 21077                           	psect	text88
 21078  0159C8                     __ptext88:
 21079                           	opt stack 0
 21080  0159C8                     __backlight_init:
 21081                           	opt stack 19
 21082                           
 21083                           ;os.c: 160: LATCbits.LC1 = 1;
 21084                           
 21085                           ; BSR set to: 15
 21086                           ;incstack = 0
 21087  0159C8  828B               	bsf	3979,1,c	;volatile
 21088  0159CA  0012               	return		;funcret
 21089  0159CC                     __end_of__backlight_init:
 21090                           	opt stack 0
 21091                           tblptru	equ	0xFF8
 21092                           tblptrh	equ	0xFF7
 21093                           tblptrl	equ	0xFF6
 21094                           tablat	equ	0xFF5
 21095                           prodh	equ	0xFF4
 21096                           prodl	equ	0xFF3
 21097                           intcon	equ	0xFF2
 21098                           postinc0	equ	0xFEE
 21099                           wreg	equ	0xFE8
 21100                           indf1	equ	0xFE7
 21101                           postinc1	equ	0xFE6
 21102                           postdec1	equ	0xFE5
 21103                           plusw1	equ	0xFE3
 21104                           fsr1h	equ	0xFE2
 21105                           fsr1l	equ	0xFE1
 21106                           indf2	equ	0xFDF
 21107                           postinc2	equ	0xFDE
 21108                           postdec2	equ	0xFDD
 21109                           plusw2	equ	0xFDB
 21110                           fsr2h	equ	0xFDA
 21111                           fsr2l	equ	0xFD9
 21112                           status	equ	0xFD8
 21113                           
 21114 ;; *************** function _motor_process_cue *****************
 21115 ;; Defined at:
 21116 ;;		line 159 in file "motor.c"
 21117 ;; Parameters:    Size  Location     Type
 21118 ;;		None
 21119 ;; Auto vars:     Size  Location     Type
 21120 ;;		None
 21121 ;; Return value:  Size  Location     Type
 21122 ;;                  1    wreg      void 
 21123 ;; Registers used:
 21124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21125 ;; Tracked objects:
 21126 ;;		On entry : 0/0
 21127 ;;		On exit  : 0/0
 21128 ;;		Unchanged: 0/0
 21129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21134 ;;Total ram usage:        0 bytes
 21135 ;; Hardware stack levels used:    1
 21136 ;; Hardware stack levels required when called:   13
 21137 ;; This function calls:
 21138 ;;		__motor_run
 21139 ;;		_motor_items_in_cue
 21140 ;; This function is called by:
 21141 ;;		_main
 21142 ;; This function uses a non-reentrant model
 21143 ;;
 21144                           
 21145                           	psect	text89
 21146  013DDE                     __ptext89:
 21147                           	opt stack 0
 21148  013DDE                     _motor_process_cue:
 21149                           	opt stack 17
 21150                           
 21151                           ;motor.c: 161: if(motor_items_in_cue()==0)
 21152                           
 21153                           ;incstack = 0
 21154  013DDE  ECA9  F0AC         	call	_motor_items_in_cue	;wreg free
 21155  013DE2  0900               	iorlw	0
 21156  013DE4  B4D8               	btfsc	status,2,c
 21157  013DE6  0012               	return	
 21158                           
 21159                           ;motor.c: 166: else if(os.busy)
 21160                           
 21161                           ;motor.c: 165: }
 21162                           
 21163                           ;motor.c: 162: {;motor.c: 164: return;
 21164  013DE8  0101               	movlb	1	; () banked
 21165  013DEA  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 21166  013DEC  A4D8               	btfss	status,2,c
 21167  013DEE  0012               	return	
 21168                           
 21169                           ; BSR set to: 1
 21170                           ;motor.c: 171: else;motor.c: 172: {;motor.c: 174: _motor_run(;motor.c: 175: motor_comman
      +                          d_cue[motor_cue_read_index].direction,;motor.c: 176: motor_command_cue[motor_cue_read_in
      +                          dex].distance,;motor.c: 177: motor_command_cue[motor_cue_read_index].speed;motor.c: 178:
      +                           );
 21171                           
 21172                           ; BSR set to: 1
 21173                           
 21174                           ; BSR set to: 1
 21175                           ;motor.c: 170: }
 21176                           
 21177                           ; BSR set to: 1
 21178                           ;motor.c: 167: {;motor.c: 169: return;
 21179  013DF0  5158               	movf	_motor_cue_read_index& (0+255),w,b
 21180  013DF2  0D07               	mullw	7
 21181  013DF4  0E01               	movlw	1
 21182  013DF6  26F3               	addwf	prodl,f,c
 21183  013DF8  0E00               	movlw	0
 21184  013DFA  22F4               	addwfc	prodh,f,c
 21185  013DFC  0E00               	movlw	low _motor_command_cue
 21186  013DFE  24F3               	addwf	prodl,w,c
 21187  013E00  6ED9               	movwf	fsr2l,c
 21188  013E02  0E03               	movlw	high _motor_command_cue
 21189  013E04  20F4               	addwfc	prodh,w,c
 21190  013E06  6EDA               	movwf	fsr2h,c
 21191  013E08  CFDE F08F          	movff	postinc2,__motor_run@distance_in_steps
 21192  013E0C  CFDE F090          	movff	postinc2,__motor_run@distance_in_steps+1
 21193  013E10  CFDE F091          	movff	postinc2,__motor_run@distance_in_steps+2
 21194  013E14  CFDE F092          	movff	postinc2,__motor_run@distance_in_steps+3
 21195  013E18  5158               	movf	_motor_cue_read_index& (0+255),w,b
 21196  013E1A  0D07               	mullw	7
 21197  013E1C  0E05               	movlw	5
 21198  013E1E  26F3               	addwf	prodl,f,c
 21199  013E20  0E00               	movlw	0
 21200  013E22  22F4               	addwfc	prodh,f,c
 21201  013E24  0E00               	movlw	low _motor_command_cue
 21202  013E26  24F3               	addwf	prodl,w,c
 21203  013E28  6ED9               	movwf	fsr2l,c
 21204  013E2A  0E03               	movlw	high _motor_command_cue
 21205  013E2C  20F4               	addwfc	prodh,w,c
 21206  013E2E  6EDA               	movwf	fsr2h,c
 21207  013E30  CFDE F093          	movff	postinc2,__motor_run@speed
 21208  013E34  CFDD F094          	movff	postdec2,__motor_run@speed+1
 21209  013E38  5158               	movf	_motor_cue_read_index& (0+255),w,b
 21210  013E3A  0D07               	mullw	7
 21211  013E3C  0E00               	movlw	low _motor_command_cue
 21212  013E3E  24F3               	addwf	prodl,w,c
 21213  013E40  6ED9               	movwf	fsr2l,c
 21214  013E42  0E03               	movlw	high _motor_command_cue
 21215  013E44  20F4               	addwfc	prodh,w,c
 21216  013E46  6EDA               	movwf	fsr2h,c
 21217  013E48  50DF               	movf	indf2,w,c
 21218  013E4A  ECA3  F062         	call	__motor_run
 21219                           
 21220                           ;motor.c: 180: ++motor_cue_read_index;
 21221  013E4E  0101               	movlb	1	; () banked
 21222  013E50  2B58               	incf	_motor_cue_read_index& (0+255),f,b
 21223                           
 21224                           ; BSR set to: 1
 21225  013E52  0012               	return	
 21226  013E54                     __end_of_motor_process_cue:
 21227                           	opt stack 0
 21228                           tblptru	equ	0xFF8
 21229                           tblptrh	equ	0xFF7
 21230                           tblptrl	equ	0xFF6
 21231                           tablat	equ	0xFF5
 21232                           prodh	equ	0xFF4
 21233                           prodl	equ	0xFF3
 21234                           intcon	equ	0xFF2
 21235                           postinc0	equ	0xFEE
 21236                           wreg	equ	0xFE8
 21237                           indf1	equ	0xFE7
 21238                           postinc1	equ	0xFE6
 21239                           postdec1	equ	0xFE5
 21240                           plusw1	equ	0xFE3
 21241                           fsr1h	equ	0xFE2
 21242                           fsr1l	equ	0xFE1
 21243                           indf2	equ	0xFDF
 21244                           postinc2	equ	0xFDE
 21245                           postdec2	equ	0xFDD
 21246                           plusw2	equ	0xFDB
 21247                           fsr2h	equ	0xFDA
 21248                           fsr2l	equ	0xFD9
 21249                           status	equ	0xFD8
 21250                           
 21251 ;; *************** function _encoder_statemachine *****************
 21252 ;; Defined at:
 21253 ;;		line 210 in file "encoder.c"
 21254 ;; Parameters:    Size  Location     Type
 21255 ;;		None
 21256 ;; Auto vars:     Size  Location     Type
 21257 ;;		None
 21258 ;; Return value:  Size  Location     Type
 21259 ;;                  1    wreg      void 
 21260 ;; Registers used:
 21261 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21262 ;; Tracked objects:
 21263 ;;		On entry : 0/0
 21264 ;;		On exit  : 0/0
 21265 ;;		Unchanged: 0/0
 21266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21269 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21270 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21271 ;;Total ram usage:        4 bytes
 21272 ;; Hardware stack levels used:    1
 21273 ;; Hardware stack levels required when called:   16
 21274 ;; This function calls:
 21275 ;;		__divide_jump_size_decrement
 21276 ;;		__divide_jump_size_increment
 21277 ;;		__encoder_next_arc_step_size
 21278 ;;		__encoder_next_divide_step_size
 21279 ;;		__encoder_next_setup_stepsize
 21280 ;;		_motor_arc_move
 21281 ;;		_motor_change_speed
 21282 ;;		_motor_decrease_manual_speed
 21283 ;;		_motor_divide_jump
 21284 ;;		_motor_divide_jump_to_nearest
 21285 ;;		_motor_go_to_steps_position
 21286 ;;		_motor_increase_manual_speed
 21287 ;;		_motor_nonzero_steps_from_degrees
 21288 ;;		_motor_schedule_command
 21289 ;;		_motor_set_zero
 21290 ;;		_motor_stop
 21291 ;; This function is called by:
 21292 ;;		_main
 21293 ;; This function uses a non-reentrant model
 21294 ;;
 21295                           
 21296                           	psect	text90
 21297  00AF94                     __ptext90:
 21298                           	opt stack 0
 21299  00AF94                     _encoder_statemachine:
 21300                           	opt stack 14
 21301                           
 21302                           ;encoder.c: 213: if(os.encoder1Count==0 && os.encoder2Count==0 && os.button1==0 && os.bu
      +                          tton2==0)
 21303                           
 21304                           ;incstack = 0
 21305  00AF94  0101               	movlb	1	; () banked
 21306  00AF96  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 21307  00AF98  A4D8               	btfss	status,2,c
 21308  00AF9A  EFCF  F05B         	goto	l2671
 21309                           
 21310                           ; BSR set to: 1
 21311  00AF9E  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 21312  00AFA0  A4D8               	btfss	status,2,c
 21313  00AFA2  D3FD               	goto	l2671
 21314                           
 21315                           ; BSR set to: 1
 21316  00AFA4  5175               	movf	(_os+4)& (0+255),w,b	;volatile
 21317  00AFA6  A4D8               	btfss	status,2,c
 21318  00AFA8  D3FA               	goto	l2671
 21319                           
 21320                           ; BSR set to: 1
 21321  00AFAA  5177               	movf	(_os+6)& (0+255),w,b	;volatile
 21322  00AFAC  B4D8               	btfsc	status,2,c
 21323  00AFAE  0012               	return	
 21324  00AFB0  D3F6               	goto	l2671
 21325  00AFB2                     
 21326                           ; BSR set to: 1
 21327                           ;encoder.c: 225: if(os.button1==1 || os.button2==1)
 21328                           
 21329                           ; BSR set to: 1
 21330  00AFB2  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21331  00AFB4  B4D8               	btfsc	status,2,c
 21332  00AFB6  D003               	goto	u17230
 21333                           
 21334                           ; BSR set to: 1
 21335  00AFB8  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21336  00AFBA  A4D8               	btfss	status,2,c
 21337  00AFBC  D002               	goto	l2675
 21338  00AFBE                     u17230:
 21339                           
 21340                           ; BSR set to: 1
 21341                           ;encoder.c: 226: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 21342                           
 21343                           ; BSR set to: 1
 21344  00AFBE  0E11               	movlw	17
 21345  00AFC0  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21346  00AFC2                     l2675:
 21347                           
 21348                           ; BSR set to: 1
 21349                           ;encoder.c: 227: if(os.encoder1Count+os.encoder2Count>0)
 21350                           
 21351                           ; BSR set to: 1
 21352  00AFC2  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21353  00AFC6  0100               	movlb	0	; () banked
 21354  00AFC8  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21355  00AFCA  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21356  00AFCC  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21357  00AFCE  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21358  00AFD2  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21359  00AFD4  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21360  00AFD6  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21361  00AFD8  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21362  00AFDA  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21363  00AFDC  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21364  00AFDE  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21365  00AFE0  BFD0               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21366  00AFE2  D008               	goto	l2678
 21367  00AFE4  51D0               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21368  00AFE6  E103               	bnz	u17240
 21369  00AFE8  05CF               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21370  00AFEA  A0D8               	btfss	status,0,c
 21371  00AFEC  D003               	goto	l2678
 21372  00AFEE                     u17240:
 21373                           
 21374                           ; BSR set to: 0
 21375                           ;encoder.c: 228: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 21376  00AFEE  0E02               	movlw	2
 21377  00AFF0  0101               	movlb	1	; () banked
 21378  00AFF2  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21379  00AFF4                     l2678:
 21380                           
 21381                           ;encoder.c: 229: if(os.encoder1Count+os.encoder2Count<0)
 21382                           
 21383                           ; BSR set to: 1
 21384  00AFF4  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21385  00AFF8  0100               	movlb	0	; () banked
 21386  00AFFA  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21387  00AFFC  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21388  00AFFE  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21389  00B000  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21390  00B004  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21391  00B006  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21392  00B008  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21393  00B00A  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21394  00B00C  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21395  00B00E  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21396  00B010  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21397  00B012  AFD0               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21398  00B014  D3E9               	goto	l2706
 21399                           
 21400                           ; BSR set to: 0
 21401                           ;encoder.c: 230: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 21402  00B016  0E05               	movlw	5
 21403  00B018  D3B0               	goto	L22
 21404  00B01A                     
 21405                           ; BSR set to: 1
 21406                           ;encoder.c: 233: if(os.button1==1 || os.button2==1)
 21407                           
 21408                           ; BSR set to: 1
 21409  00B01A  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21410  00B01C  B4D8               	btfsc	status,2,c
 21411  00B01E  D003               	goto	u17270
 21412                           
 21413                           ; BSR set to: 1
 21414  00B020  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21415  00B022  A4D8               	btfss	status,2,c
 21416  00B024  D002               	goto	l2682
 21417  00B026                     u17270:
 21418                           
 21419                           ; BSR set to: 1
 21420                           ;encoder.c: 234: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 21421                           
 21422                           ; BSR set to: 1
 21423  00B026  0E31               	movlw	49
 21424  00B028  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21425  00B02A                     l2682:
 21426                           
 21427                           ; BSR set to: 1
 21428                           ;encoder.c: 235: if(os.encoder1Count+os.encoder2Count>0)
 21429                           
 21430                           ; BSR set to: 1
 21431  00B02A  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21432  00B02E  0100               	movlb	0	; () banked
 21433  00B030  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21434  00B032  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21435  00B034  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21436  00B036  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21437  00B03A  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21438  00B03C  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21439  00B03E  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21440  00B040  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21441  00B042  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21442  00B044  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21443  00B046  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21444  00B048  BFD0               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21445  00B04A  D008               	goto	l2685
 21446  00B04C  51D0               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21447  00B04E  E103               	bnz	u17280
 21448  00B050  05CF               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21449  00B052  A0D8               	btfss	status,0,c
 21450  00B054  D003               	goto	l2685
 21451  00B056                     u17280:
 21452                           
 21453                           ; BSR set to: 0
 21454                           ;encoder.c: 236: os.displayState = DISPLAY_STATE_MAIN_ARC;
 21455  00B056  0E03               	movlw	3
 21456  00B058  0101               	movlb	1	; () banked
 21457  00B05A  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21458  00B05C                     l2685:
 21459                           
 21460                           ;encoder.c: 237: if(os.encoder1Count+os.encoder2Count<0)
 21461                           
 21462                           ; BSR set to: 1
 21463  00B05C  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21464  00B060  0100               	movlb	0	; () banked
 21465  00B062  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21466  00B064  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21467  00B066  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21468  00B068  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21469  00B06C  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21470  00B06E  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21471  00B070  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21472  00B072  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21473  00B074  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21474  00B076  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21475  00B078  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21476  00B07A  AFD0               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21477  00B07C  D3B5               	goto	l2706
 21478                           
 21479                           ; BSR set to: 0
 21480                           ;encoder.c: 238: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 21481  00B07E  0E01               	movlw	1
 21482  00B080  D37C               	goto	L22
 21483  00B082                     
 21484                           ; BSR set to: 1
 21485                           ;encoder.c: 241: if(os.button1==1 || os.button2==1)
 21486                           
 21487                           ; BSR set to: 1
 21488  00B082  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21489  00B084  B4D8               	btfsc	status,2,c
 21490  00B086  D003               	goto	u17310
 21491                           
 21492                           ; BSR set to: 1
 21493  00B088  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21494  00B08A  A4D8               	btfss	status,2,c
 21495  00B08C  D002               	goto	l2688
 21496  00B08E                     u17310:
 21497                           
 21498                           ; BSR set to: 1
 21499                           ;encoder.c: 242: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 21500                           
 21501                           ; BSR set to: 1
 21502  00B08E  0E51               	movlw	81
 21503  00B090  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21504  00B092                     l2688:
 21505                           
 21506                           ; BSR set to: 1
 21507                           ;encoder.c: 243: if(os.encoder1Count+os.encoder2Count>0)
 21508                           
 21509                           ; BSR set to: 1
 21510  00B092  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21511  00B096  0100               	movlb	0	; () banked
 21512  00B098  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21513  00B09A  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21514  00B09C  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21515  00B09E  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21516  00B0A2  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21517  00B0A4  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21518  00B0A6  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21519  00B0A8  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21520  00B0AA  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21521  00B0AC  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21522  00B0AE  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21523  00B0B0  BFD0               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21524  00B0B2  D008               	goto	l2691
 21525  00B0B4  51D0               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21526  00B0B6  E103               	bnz	u17320
 21527  00B0B8  05CF               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21528  00B0BA  A0D8               	btfss	status,0,c
 21529  00B0BC  D003               	goto	l2691
 21530  00B0BE                     u17320:
 21531                           
 21532                           ; BSR set to: 0
 21533                           ;encoder.c: 244: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 21534  00B0BE  0E04               	movlw	4
 21535  00B0C0  0101               	movlb	1	; () banked
 21536  00B0C2  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21537  00B0C4                     l2691:
 21538                           
 21539                           ;encoder.c: 245: if(os.encoder1Count+os.encoder2Count<0)
 21540                           
 21541                           ; BSR set to: 1
 21542  00B0C4  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21543  00B0C8  0100               	movlb	0	; () banked
 21544  00B0CA  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21545  00B0CC  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21546  00B0CE  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21547  00B0D0  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21548  00B0D4  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21549  00B0D6  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21550  00B0D8  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21551  00B0DA  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21552  00B0DC  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21553  00B0DE  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21554  00B0E0  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21555  00B0E2  AFD0               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21556  00B0E4  D381               	goto	l2706
 21557                           
 21558                           ; BSR set to: 0
 21559                           ;encoder.c: 246: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 21560  00B0E6  0E02               	movlw	2
 21561  00B0E8  D348               	goto	L22
 21562  00B0EA                     
 21563                           ; BSR set to: 1
 21564                           ;encoder.c: 249: if(os.button1==1 || os.button2==1)
 21565                           
 21566                           ; BSR set to: 1
 21567  00B0EA  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21568  00B0EC  B4D8               	btfsc	status,2,c
 21569  00B0EE  D003               	goto	u17350
 21570                           
 21571                           ; BSR set to: 1
 21572  00B0F0  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21573  00B0F2  A4D8               	btfss	status,2,c
 21574  00B0F4  D002               	goto	l2694
 21575  00B0F6                     u17350:
 21576                           
 21577                           ; BSR set to: 1
 21578                           ;encoder.c: 250: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 21579                           
 21580                           ; BSR set to: 1
 21581  00B0F6  0E82               	movlw	130
 21582  00B0F8  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21583  00B0FA                     l2694:
 21584                           
 21585                           ; BSR set to: 1
 21586                           ;encoder.c: 251: if(os.encoder1Count+os.encoder2Count>0)
 21587                           
 21588                           ; BSR set to: 1
 21589  00B0FA  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21590  00B0FE  0100               	movlb	0	; () banked
 21591  00B100  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21592  00B102  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21593  00B104  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21594  00B106  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21595  00B10A  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21596  00B10C  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21597  00B10E  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21598  00B110  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21599  00B112  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21600  00B114  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21601  00B116  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21602  00B118  BFD0               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21603  00B11A  D008               	goto	l2697
 21604  00B11C  51D0               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21605  00B11E  E103               	bnz	u17360
 21606  00B120  05CF               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21607  00B122  A0D8               	btfss	status,0,c
 21608  00B124  D003               	goto	l2697
 21609  00B126                     u17360:
 21610                           
 21611                           ; BSR set to: 0
 21612                           ;encoder.c: 252: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 21613  00B126  0E05               	movlw	5
 21614  00B128  0101               	movlb	1	; () banked
 21615  00B12A  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21616  00B12C                     l2697:
 21617                           
 21618                           ;encoder.c: 253: if(os.encoder1Count+os.encoder2Count<0)
 21619                           
 21620                           ; BSR set to: 1
 21621  00B12C  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21622  00B130  0100               	movlb	0	; () banked
 21623  00B132  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21624  00B134  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21625  00B136  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21626  00B138  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21627  00B13C  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21628  00B13E  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21629  00B140  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21630  00B142  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21631  00B144  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21632  00B146  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21633  00B148  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21634  00B14A  AFD0               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21635  00B14C  D34D               	goto	l2706
 21636                           
 21637                           ; BSR set to: 0
 21638                           ;encoder.c: 254: os.displayState = DISPLAY_STATE_MAIN_ARC;
 21639  00B14E  0E03               	movlw	3
 21640  00B150  D314               	goto	L22
 21641  00B152                     
 21642                           ; BSR set to: 1
 21643                           ;encoder.c: 257: if(os.button1==1 || os.button2==1)
 21644                           
 21645                           ; BSR set to: 1
 21646  00B152  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21647  00B154  B4D8               	btfsc	status,2,c
 21648  00B156  D003               	goto	u17390
 21649                           
 21650                           ; BSR set to: 1
 21651  00B158  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21652  00B15A  A4D8               	btfss	status,2,c
 21653  00B15C  D002               	goto	l2700
 21654  00B15E                     u17390:
 21655                           
 21656                           ; BSR set to: 1
 21657                           ;encoder.c: 258: os.displayState = DISPLAY_STATE_ZERO_NORMAL;
 21658                           
 21659                           ; BSR set to: 1
 21660  00B15E  0E71               	movlw	113
 21661  00B160  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21662  00B162                     l2700:
 21663                           
 21664                           ; BSR set to: 1
 21665                           ;encoder.c: 259: if(os.encoder1Count+os.encoder2Count>0)
 21666                           
 21667                           ; BSR set to: 1
 21668  00B162  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21669  00B166  0100               	movlb	0	; () banked
 21670  00B168  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21671  00B16A  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21672  00B16C  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21673  00B16E  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21674  00B172  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21675  00B174  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21676  00B176  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21677  00B178  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21678  00B17A  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21679  00B17C  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21680  00B17E  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21681  00B180  BFD0               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21682  00B182  D008               	goto	l2703
 21683  00B184  51D0               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21684  00B186  E103               	bnz	u17400
 21685  00B188  05CF               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21686  00B18A  A0D8               	btfss	status,0,c
 21687  00B18C  D003               	goto	l2703
 21688  00B18E                     u17400:
 21689                           
 21690                           ; BSR set to: 0
 21691                           ;encoder.c: 260: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 21692  00B18E  0E01               	movlw	1
 21693  00B190  0101               	movlb	1	; () banked
 21694  00B192  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21695  00B194                     l2703:
 21696                           
 21697                           ;encoder.c: 261: if(os.encoder1Count+os.encoder2Count<0)
 21698                           
 21699                           ; BSR set to: 1
 21700  00B194  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21701  00B198  0100               	movlb	0	; () banked
 21702  00B19A  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21703  00B19C  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21704  00B19E  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21705  00B1A0  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21706  00B1A4  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21707  00B1A6  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21708  00B1A8  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21709  00B1AA  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21710  00B1AC  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21711  00B1AE  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21712  00B1B0  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21713  00B1B2  AFD0               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21714  00B1B4  D319               	goto	l2706
 21715                           
 21716                           ; BSR set to: 0
 21717                           ;encoder.c: 262: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 21718  00B1B6  0E04               	movlw	4
 21719  00B1B8  D2E0               	goto	L22
 21720  00B1BA                     
 21721                           ; BSR set to: 1
 21722  00B1BA  0101               	movlb	1	; () banked
 21723  00B1BC  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 21724                           
 21725                           ; Switch size 1, requested type "space"
 21726                           ; Number of cases is 6, Range of values is 1 to 240
 21727                           ; switch strategies available:
 21728                           ; Name         Instructions Cycles
 21729                           ; simple_byte           19    10 (average)
 21730                           ;	Chosen strategy is simple_byte
 21731  00B1BE  0A01               	xorlw	1	; case 1
 21732  00B1C0  B4D8               	btfsc	status,2,c
 21733  00B1C2  D6F7               	goto	l2674
 21734  00B1C4  0A03               	xorlw	3	; case 2
 21735  00B1C6  B4D8               	btfsc	status,2,c
 21736  00B1C8  D728               	goto	l2681
 21737  00B1CA  0A01               	xorlw	1	; case 3
 21738  00B1CC  B4D8               	btfsc	status,2,c
 21739  00B1CE  D759               	goto	l2687
 21740  00B1D0  0A07               	xorlw	7	; case 4
 21741  00B1D2  B4D8               	btfsc	status,2,c
 21742  00B1D4  D78A               	goto	l2693
 21743  00B1D6  0A01               	xorlw	1	; case 5
 21744  00B1D8  B4D8               	btfsc	status,2,c
 21745  00B1DA  D7BB               	goto	l2699
 21746  00B1DC  0AF5               	xorlw	245	; case 240
 21747                           
 21748                           ; BSR set to: 1
 21749                           ;encoder.c: 268: break;
 21750  00B1DE  D304               	goto	l2706
 21751  00B1E0                     
 21752                           ; BSR set to: 1
 21753                           ;encoder.c: 274: if(os.button1==1)
 21754                           
 21755                           ; BSR set to: 1
 21756  00B1E0  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21757  00B1E2  A4D8               	btfss	status,2,c
 21758  00B1E4  D00E               	goto	l2710
 21759                           
 21760                           ; BSR set to: 1
 21761                           ;encoder.c: 275: {;encoder.c: 276: os.current_position_in_steps = 0;
 21762  00B1E6  0E00               	movlw	0
 21763  00B1E8  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 21764  00B1EA  0E00               	movlw	0
 21765  00B1EC  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 21766  00B1EE  0E00               	movlw	0
 21767  00B1F0  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 21768  00B1F2  0E00               	movlw	0
 21769  00B1F4  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 21770                           
 21771                           ;encoder.c: 277: os.divide_position = 0;
 21772  00B1F6  0E00               	movlw	0
 21773  00B1F8  6F88               	movwf	(_os+23)& (0+255),b	;volatile
 21774  00B1FA  0E00               	movlw	0
 21775  00B1FC  6F87               	movwf	(_os+22)& (0+255),b	;volatile
 21776                           
 21777                           ;encoder.c: 278: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 21778  00B1FE  0E21               	movlw	33
 21779  00B200  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21780  00B202                     l2710:
 21781                           
 21782                           ; BSR set to: 1
 21783                           ;encoder.c: 279: };encoder.c: 280: if(os.encoder1Count>0)
 21784                           
 21785                           ; BSR set to: 1
 21786  00B202  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 21787  00B204  0A80               	xorlw	128
 21788  00B206  0F7F               	addlw	-129
 21789  00B208  A0D8               	btfss	status,0,c
 21790  00B20A  D002               	goto	l2711
 21791                           
 21792                           ; BSR set to: 1
 21793                           ;encoder.c: 281: os.displayState = DISPLAY_STATE_SETUP1_CANCEL;
 21794  00B20C  0E12               	movlw	18
 21795  00B20E  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21796  00B210                     l2711:
 21797                           
 21798                           ; BSR set to: 1
 21799                           ;encoder.c: 282: if(os.encoder1Count<0)
 21800                           
 21801                           ; BSR set to: 1
 21802  00B210  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 21803  00B212  D01B               	goto	l2713
 21804                           
 21805                           ; BSR set to: 1
 21806                           ;encoder.c: 283: os.displayState = DISPLAY_STATE_SETUP1_CANCEL;
 21807  00B214  0E12               	movlw	18
 21808  00B216  D00F               	goto	L10
 21809  00B218                     
 21810                           ; BSR set to: 1
 21811                           ;encoder.c: 286: if(os.button1==1)
 21812                           
 21813                           ; BSR set to: 1
 21814  00B218  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21815  00B21A  A4D8               	btfss	status,2,c
 21816  00B21C  D002               	goto	l2715
 21817                           
 21818                           ; BSR set to: 1
 21819                           ;encoder.c: 287: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 21820  00B21E  0E01               	movlw	1
 21821  00B220  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21822  00B222                     l2715:
 21823                           
 21824                           ; BSR set to: 1
 21825                           ;encoder.c: 288: if(os.encoder1Count>0)
 21826                           
 21827                           ; BSR set to: 1
 21828  00B222  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 21829  00B224  0A80               	xorlw	128
 21830  00B226  0F7F               	addlw	-129
 21831  00B228  A0D8               	btfss	status,0,c
 21832  00B22A  D002               	goto	l2716
 21833                           
 21834                           ; BSR set to: 1
 21835                           ;encoder.c: 289: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 21836  00B22C  0E11               	movlw	17
 21837  00B22E  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21838  00B230                     l2716:
 21839                           
 21840                           ; BSR set to: 1
 21841                           ;encoder.c: 290: if(os.encoder1Count<0)
 21842                           
 21843                           ; BSR set to: 1
 21844  00B230  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 21845  00B232  D00B               	goto	l2713
 21846                           
 21847                           ; BSR set to: 1
 21848                           ;encoder.c: 291: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 21849  00B234  0E11               	movlw	17
 21850  00B236                     L10:
 21851  00B236  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21852                           
 21853                           ; BSR set to: 1
 21854                           ;encoder.c: 293: }
 21855                           
 21856                           ; BSR set to: 1
 21857                           ;encoder.c: 292: break;
 21858  00B238  D008               	goto	l2713
 21859  00B23A                     
 21860                           ; BSR set to: 1
 21861  00B23A  0101               	movlb	1	; () banked
 21862  00B23C  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 21863                           
 21864                           ; Switch size 1, requested type "space"
 21865                           ; Number of cases is 2, Range of values is 17 to 18
 21866                           ; switch strategies available:
 21867                           ; Name         Instructions Cycles
 21868                           ; simple_byte            7     4 (average)
 21869                           ;	Chosen strategy is simple_byte
 21870  00B23E  0A11               	xorlw	17	; case 17
 21871  00B240  B4D8               	btfsc	status,2,c
 21872  00B242  D7CE               	goto	l2709
 21873  00B244  0A03               	xorlw	3	; case 18
 21874  00B246  B4D8               	btfsc	status,2,c
 21875  00B248  D7E7               	goto	l2714
 21876  00B24A                     l2713:
 21877                           
 21878                           ; BSR set to: 1
 21879                           ;encoder.c: 294: if(os.button2==1)
 21880                           
 21881                           ; BSR set to: 1
 21882  00B24A  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21883  00B24C  A4D8               	btfss	status,2,c
 21884  00B24E  D00A               	goto	l2718
 21885                           
 21886                           ; BSR set to: 1
 21887                           ;encoder.c: 295: {;encoder.c: 296: os.setup_step_size = _encoder_next_setup_stepsize(os.
      +                          setup_step_size);
 21888  00B250  C181  F060         	movff	_os+16,__encoder_next_setup_stepsize@old_stepsize	;volatile
 21889  00B254  C182  F061         	movff	_os+17,__encoder_next_setup_stepsize@old_stepsize+1	;volatile
 21890  00B258  EC2A  F09F         	call	__encoder_next_setup_stepsize	;wreg free
 21891  00B25C  C060  F181         	movff	?__encoder_next_setup_stepsize,_os+16	;volatile
 21892  00B260  C061  F182         	movff	?__encoder_next_setup_stepsize+1,_os+17	;volatile
 21893  00B264                     l2718:
 21894                           
 21895                           ;encoder.c: 297: };encoder.c: 298: if(os.encoder2Count>0)
 21896  00B264  0101               	movlb	1	; () banked
 21897  00B266  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 21898  00B268  0A80               	xorlw	128
 21899  00B26A  0F7F               	addlw	-129
 21900  00B26C  A0D8               	btfss	status,0,c
 21901  00B26E  D019               	goto	l2720
 21902                           
 21903                           ; BSR set to: 1
 21904                           ;encoder.c: 299: {;encoder.c: 301: if(!os.busy)
 21905  00B270  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 21906  00B272  A4D8               	btfss	status,2,c
 21907  00B274  D016               	goto	l2720
 21908                           
 21909                           ; BSR set to: 1
 21910                           ;encoder.c: 302: motor_schedule_command(MOTOR_DIRECTION_CW, motor_nonzero_steps_from_deg
      +                          rees(os.setup_step_size), 0);
 21911  00B276  C181  F08F         	movff	_os+16,motor_nonzero_steps_from_degrees@degrees	;volatile
 21912  00B27A  C182  F090         	movff	_os+17,motor_nonzero_steps_from_degrees@degrees+1	;volatile
 21913  00B27E  ECE7  F0A6         	call	_motor_nonzero_steps_from_degrees	;wreg free
 21914  00B282  C08F  F0A0         	movff	?_motor_nonzero_steps_from_degrees,motor_schedule_command@distance_in_steps
 21915  00B286  C090  F0A1         	movff	?_motor_nonzero_steps_from_degrees+1,motor_schedule_command@distance_in_steps+1
 21916  00B28A  C091  F0A2         	movff	?_motor_nonzero_steps_from_degrees+2,motor_schedule_command@distance_in_steps+2
 21917  00B28E  C092  F0A3         	movff	?_motor_nonzero_steps_from_degrees+3,motor_schedule_command@distance_in_steps+3
 21918  00B292  0E00               	movlw	0
 21919  00B294  0100               	movlb	0	; () banked
 21920  00B296  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 21921  00B298  0E00               	movlw	0
 21922  00B29A  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 21923  00B29C  0E01               	movlw	1
 21924  00B29E  EC89  F097         	call	_motor_schedule_command
 21925  00B2A2                     l2720:
 21926                           
 21927                           ;encoder.c: 303: };encoder.c: 304: if(os.encoder2Count<0)
 21928  00B2A2  0101               	movlb	1	; () banked
 21929  00B2A4  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 21930  00B2A6  D2A0               	goto	l2706
 21931                           
 21932                           ; BSR set to: 1
 21933                           ;encoder.c: 305: {;encoder.c: 307: if(!os.busy)
 21934  00B2A8  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 21935  00B2AA  A4D8               	btfss	status,2,c
 21936  00B2AC  D29D               	goto	l2706
 21937                           
 21938                           ; BSR set to: 1
 21939                           ;encoder.c: 308: motor_schedule_command(MOTOR_DIRECTION_CCW, motor_nonzero_steps_from_de
      +                          grees(os.setup_step_size), 0);
 21940  00B2AE  C181  F08F         	movff	_os+16,motor_nonzero_steps_from_degrees@degrees	;volatile
 21941  00B2B2  C182  F090         	movff	_os+17,motor_nonzero_steps_from_degrees@degrees+1	;volatile
 21942  00B2B6  ECE7  F0A6         	call	_motor_nonzero_steps_from_degrees	;wreg free
 21943  00B2BA  C08F  F0A0         	movff	?_motor_nonzero_steps_from_degrees,motor_schedule_command@distance_in_steps
 21944  00B2BE  C090  F0A1         	movff	?_motor_nonzero_steps_from_degrees+1,motor_schedule_command@distance_in_steps+1
 21945  00B2C2  C091  F0A2         	movff	?_motor_nonzero_steps_from_degrees+2,motor_schedule_command@distance_in_steps+2
 21946  00B2C6  C092  F0A3         	movff	?_motor_nonzero_steps_from_degrees+3,motor_schedule_command@distance_in_steps+3
 21947  00B2CA  0E00               	movlw	0
 21948  00B2CC  0100               	movlb	0	; () banked
 21949  00B2CE  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 21950  00B2D0  0E00               	movlw	0
 21951  00B2D2  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 21952  00B2D4  0EFF               	movlw	255
 21953  00B2D6  EC89  F097         	call	_motor_schedule_command
 21954                           
 21955                           ;encoder.c: 309: };encoder.c: 310: break;
 21956  00B2DA  D286               	goto	l2706
 21957  00B2DC                     
 21958                           ;encoder.c: 316: if(os.button1==1 || os.button2==1)
 21959  00B2DC  0101               	movlb	1	; () banked
 21960  00B2DE  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21961  00B2E0  B4D8               	btfsc	status,2,c
 21962  00B2E2  D003               	goto	u17540
 21963                           
 21964                           ; BSR set to: 1
 21965  00B2E4  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21966  00B2E6  A4D8               	btfss	status,2,c
 21967  00B2E8  D003               	goto	l2726
 21968  00B2EA                     u17540:
 21969                           
 21970                           ; BSR set to: 1
 21971                           ;encoder.c: 317: {;encoder.c: 318: motor_set_zero(MOTOR_DIRECTION_CCW);
 21972                           
 21973                           ; BSR set to: 1
 21974  00B2EA  0EFF               	movlw	255
 21975  00B2EC  EC89  F098         	call	_motor_set_zero
 21976  00B2F0                     l2726:
 21977                           
 21978                           ;encoder.c: 319: };encoder.c: 320: if(os.encoder1Count+os.encoder2Count>0)
 21979  00B2F0  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 21980  00B2F4  0100               	movlb	0	; () banked
 21981  00B2F6  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21982  00B2F8  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 21983  00B2FA  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21984  00B2FC  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21985  00B300  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21986  00B302  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21987  00B304  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21988  00B306  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 21989  00B308  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21990  00B30A  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21991  00B30C  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21992  00B30E  BFD0               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21993  00B310  D008               	goto	l2729
 21994  00B312  51D0               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21995  00B314  E103               	bnz	u17550
 21996  00B316  05CF               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21997  00B318  A0D8               	btfss	status,0,c
 21998  00B31A  D003               	goto	l2729
 21999  00B31C                     u17550:
 22000                           
 22001                           ; BSR set to: 0
 22002                           ;encoder.c: 321: os.displayState = DISPLAY_STATE_SETUP2_CW;
 22003  00B31C  0E22               	movlw	34
 22004  00B31E  0101               	movlb	1	; () banked
 22005  00B320  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22006  00B322                     l2729:
 22007                           
 22008                           ;encoder.c: 322: if(os.encoder1Count+os.encoder2Count<0)
 22009                           
 22010                           ; BSR set to: 1
 22011  00B322  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 22012  00B326  0100               	movlb	0	; () banked
 22013  00B328  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22014  00B32A  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 22015  00B32C  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 22016  00B32E  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22017  00B332  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22018  00B334  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22019  00B336  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22020  00B338  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 22021  00B33A  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22022  00B33C  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22023  00B33E  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22024  00B340  AFD0               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 22025  00B342  D252               	goto	l2706
 22026                           
 22027                           ; BSR set to: 0
 22028                           ;encoder.c: 323: os.displayState = DISPLAY_STATE_SETUP2_CW;
 22029  00B344  0E22               	movlw	34
 22030  00B346  D219               	goto	L22
 22031  00B348                     
 22032                           ; BSR set to: 1
 22033                           ;encoder.c: 326: if(os.button1==1 || os.button2==1)
 22034                           
 22035                           ; BSR set to: 1
 22036  00B348  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 22037  00B34A  B4D8               	btfsc	status,2,c
 22038  00B34C  D003               	goto	u17580
 22039                           
 22040                           ; BSR set to: 1
 22041  00B34E  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22042  00B350  A4D8               	btfss	status,2,c
 22043  00B352  D003               	goto	l2733
 22044  00B354                     u17580:
 22045                           
 22046                           ; BSR set to: 1
 22047                           ;encoder.c: 327: {;encoder.c: 328: motor_set_zero(MOTOR_DIRECTION_CW);
 22048                           
 22049                           ; BSR set to: 1
 22050  00B354  0E01               	movlw	1
 22051  00B356  EC89  F098         	call	_motor_set_zero
 22052  00B35A                     l2733:
 22053                           
 22054                           ;encoder.c: 329: };encoder.c: 330: if(os.encoder1Count+os.encoder2Count>0)
 22055  00B35A  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 22056  00B35E  0100               	movlb	0	; () banked
 22057  00B360  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22058  00B362  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 22059  00B364  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 22060  00B366  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22061  00B36A  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22062  00B36C  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22063  00B36E  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22064  00B370  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 22065  00B372  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22066  00B374  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22067  00B376  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22068  00B378  BFD0               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 22069  00B37A  D008               	goto	l2736
 22070  00B37C  51D0               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 22071  00B37E  E103               	bnz	u17590
 22072  00B380  05CF               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 22073  00B382  A0D8               	btfss	status,0,c
 22074  00B384  D003               	goto	l2736
 22075  00B386                     u17590:
 22076                           
 22077                           ; BSR set to: 0
 22078                           ;encoder.c: 331: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 22079  00B386  0E21               	movlw	33
 22080  00B388  0101               	movlb	1	; () banked
 22081  00B38A  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22082  00B38C                     l2736:
 22083                           
 22084                           ;encoder.c: 332: if(os.encoder1Count+os.encoder2Count<0)
 22085                           
 22086                           ; BSR set to: 1
 22087  00B38C  C176  F0CD         	movff	_os+5,??_encoder_statemachine	;volatile
 22088  00B390  0100               	movlb	0	; () banked
 22089  00B392  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22090  00B394  BFCD               	btfsc	??_encoder_statemachine& (0+255),7,b
 22091  00B396  07CE               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 22092  00B398  C174  F0CF         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22093  00B39C  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22094  00B39E  BFCF               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22095  00B3A0  07D0               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22096  00B3A2  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 22097  00B3A4  27CF               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22098  00B3A6  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22099  00B3A8  23D0               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22100  00B3AA  AFD0               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 22101  00B3AC  D21D               	goto	l2706
 22102                           
 22103                           ; BSR set to: 0
 22104                           ;encoder.c: 333: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 22105  00B3AE  0E21               	movlw	33
 22106  00B3B0  D1E4               	goto	L22
 22107  00B3B2                     
 22108                           ; BSR set to: 1
 22109  00B3B2  0101               	movlb	1	; () banked
 22110  00B3B4  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 22111                           
 22112                           ; Switch size 1, requested type "space"
 22113                           ; Number of cases is 2, Range of values is 33 to 34
 22114                           ; switch strategies available:
 22115                           ; Name         Instructions Cycles
 22116                           ; simple_byte            7     4 (average)
 22117                           ;	Chosen strategy is simple_byte
 22118  00B3B6  0A21               	xorlw	33	; case 33
 22119  00B3B8  B4D8               	btfsc	status,2,c
 22120  00B3BA  D790               	goto	l2725
 22121  00B3BC  0A03               	xorlw	3	; case 34
 22122  00B3BE  B4D8               	btfsc	status,2,c
 22123  00B3C0  D7C3               	goto	l2732
 22124                           
 22125                           ; BSR set to: 1
 22126                           ;encoder.c: 336: break;
 22127  00B3C2  D212               	goto	l2706
 22128  00B3C4                     
 22129                           ; BSR set to: 1
 22130                           ;encoder.c: 342: if(os.button1==1)
 22131                           
 22132                           ; BSR set to: 1
 22133  00B3C4  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 22134  00B3C6  A4D8               	btfss	status,2,c
 22135  00B3C8  D005               	goto	l2741
 22136                           
 22137                           ; BSR set to: 1
 22138                           ;encoder.c: 343: {;encoder.c: 345: motor_divide_jump_to_nearest();
 22139  00B3CA  ECFA  F07D         	call	_motor_divide_jump_to_nearest	;wreg free
 22140                           
 22141                           ;encoder.c: 346: os.displayState = DISPLAY_STATE_DIVIDE2_NORMAL;
 22142  00B3CE  0E41               	movlw	65
 22143  00B3D0  0101               	movlb	1	; () banked
 22144  00B3D2  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22145  00B3D4                     l2741:
 22146                           
 22147                           ; BSR set to: 1
 22148                           ;encoder.c: 347: };encoder.c: 348: if(os.encoder1Count>0)
 22149                           
 22150                           ; BSR set to: 1
 22151  00B3D4  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 22152  00B3D6  0A80               	xorlw	128
 22153  00B3D8  0F7F               	addlw	-129
 22154  00B3DA  A0D8               	btfss	status,0,c
 22155  00B3DC  D002               	goto	l2742
 22156                           
 22157                           ; BSR set to: 1
 22158                           ;encoder.c: 349: os.displayState = DISPLAY_STATE_DIVIDE1_CANCEL;
 22159  00B3DE  0E32               	movlw	50
 22160  00B3E0  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22161  00B3E2                     l2742:
 22162                           
 22163                           ; BSR set to: 1
 22164                           ;encoder.c: 350: if(os.encoder1Count<0)
 22165                           
 22166                           ; BSR set to: 1
 22167  00B3E2  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 22168  00B3E4  D01B               	goto	l2744
 22169                           
 22170                           ; BSR set to: 1
 22171                           ;encoder.c: 351: os.displayState = DISPLAY_STATE_DIVIDE1_CANCEL;
 22172  00B3E6  0E32               	movlw	50
 22173  00B3E8  D00F               	goto	L13
 22174  00B3EA                     
 22175                           ; BSR set to: 1
 22176                           ;encoder.c: 354: if(os.button1==1)
 22177                           
 22178                           ; BSR set to: 1
 22179  00B3EA  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 22180  00B3EC  A4D8               	btfss	status,2,c
 22181  00B3EE  D002               	goto	l2746
 22182                           
 22183                           ; BSR set to: 1
 22184                           ;encoder.c: 355: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 22185  00B3F0  0E02               	movlw	2
 22186  00B3F2  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22187  00B3F4                     l2746:
 22188                           
 22189                           ; BSR set to: 1
 22190                           ;encoder.c: 356: if(os.encoder1Count>0)
 22191                           
 22192                           ; BSR set to: 1
 22193  00B3F4  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 22194  00B3F6  0A80               	xorlw	128
 22195  00B3F8  0F7F               	addlw	-129
 22196  00B3FA  A0D8               	btfss	status,0,c
 22197  00B3FC  D002               	goto	l2747
 22198                           
 22199                           ; BSR set to: 1
 22200                           ;encoder.c: 357: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 22201  00B3FE  0E31               	movlw	49
 22202  00B400  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22203  00B402                     l2747:
 22204                           
 22205                           ; BSR set to: 1
 22206                           ;encoder.c: 358: if(os.encoder1Count<0)
 22207                           
 22208                           ; BSR set to: 1
 22209  00B402  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 22210  00B404  D00B               	goto	l2744
 22211                           
 22212                           ; BSR set to: 1
 22213                           ;encoder.c: 359: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 22214  00B406  0E31               	movlw	49
 22215  00B408                     L13:
 22216  00B408  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22217                           
 22218                           ; BSR set to: 1
 22219                           ;encoder.c: 361: }
 22220                           
 22221                           ; BSR set to: 1
 22222                           ;encoder.c: 360: break;
 22223  00B40A  D008               	goto	l2744
 22224  00B40C                     
 22225                           ; BSR set to: 1
 22226  00B40C  0101               	movlb	1	; () banked
 22227  00B40E  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 22228                           
 22229                           ; Switch size 1, requested type "space"
 22230                           ; Number of cases is 2, Range of values is 49 to 50
 22231                           ; switch strategies available:
 22232                           ; Name         Instructions Cycles
 22233                           ; simple_byte            7     4 (average)
 22234                           ;	Chosen strategy is simple_byte
 22235  00B410  0A31               	xorlw	49	; case 49
 22236  00B412  B4D8               	btfsc	status,2,c
 22237  00B414  D7D7               	goto	l2740
 22238  00B416  0A03               	xorlw	3	; case 50
 22239  00B418  B4D8               	btfsc	status,2,c
 22240  00B41A  D7E7               	goto	l2745
 22241  00B41C                     l2744:
 22242                           
 22243                           ; BSR set to: 1
 22244                           ;encoder.c: 362: if(os.button2==1)
 22245                           
 22246                           ; BSR set to: 1
 22247  00B41C  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22248  00B41E  A4D8               	btfss	status,2,c
 22249  00B420  D005               	goto	l2749
 22250                           
 22251                           ; BSR set to: 1
 22252                           ;encoder.c: 363: {;encoder.c: 364: os.divide_step_size = _encoder_next_divide_step_size(
      +                          os.divide_step_size);
 22253  00B422  5186               	movf	(_os+21)& (0+255),w,b	;volatile
 22254  00B424  EC2C  F0AA         	call	__encoder_next_divide_step_size
 22255  00B428  0101               	movlb	1	; () banked
 22256  00B42A  6F86               	movwf	(_os+21)& (0+255),b	;volatile
 22257  00B42C                     l2749:
 22258                           
 22259                           ; BSR set to: 1
 22260                           ;encoder.c: 365: };encoder.c: 366: if(os.encoder2Count>0)
 22261                           
 22262                           ; BSR set to: 1
 22263  00B42C  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 22264  00B42E  0A80               	xorlw	128
 22265  00B430  0F7F               	addlw	-129
 22266  00B432  A0D8               	btfss	status,0,c
 22267  00B434  D004               	goto	l2750
 22268                           
 22269                           ; BSR set to: 1
 22270                           ;encoder.c: 367: {;encoder.c: 368: os.division += os.divide_step_size;
 22271  00B436  5186               	movf	(_os+21)& (0+255),w,b	;volatile
 22272  00B438  2784               	addwf	(_os+19)& (0+255),f,b	;volatile
 22273  00B43A  0E00               	movlw	0
 22274  00B43C  2385               	addwfc	(_os+20)& (0+255),f,b	;volatile
 22275  00B43E                     l2750:
 22276                           
 22277                           ; BSR set to: 1
 22278                           ;encoder.c: 369: };encoder.c: 370: if(os.encoder2Count<0)
 22279  00B43E  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 22280  00B440  D1D3               	goto	l2706
 22281                           
 22282                           ; BSR set to: 1
 22283                           ;encoder.c: 371: {;encoder.c: 372: if(os.division>os.divide_step_size)
 22284  00B442  5186               	movf	(_os+21)& (0+255),w,b	;volatile
 22285  00B444  0100               	movlb	0	; () banked
 22286  00B446  6FCD               	movwf	??_encoder_statemachine& (0+255),b
 22287  00B448  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22288  00B44A  0101               	movlb	1	; () banked
 22289  00B44C  5184               	movf	(_os+19)& (0+255),w,b	;volatile
 22290  00B44E  0100               	movlb	0	; () banked
 22291  00B450  5DCD               	subwf	??_encoder_statemachine& (0+255),w,b
 22292  00B452  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22293  00B454  0A80               	xorlw	128
 22294  00B456  6FCF               	movwf	(??_encoder_statemachine+2)& (0+255),b
 22295  00B458  0101               	movlb	1	; () banked
 22296  00B45A  5185               	movf	(_os+20)& (0+255),w,b	;volatile
 22297  00B45C  0A80               	xorlw	128
 22298  00B45E  0100               	movlb	0	; () banked
 22299  00B460  59CF               	subwfb	(??_encoder_statemachine+2)& (0+255),w,b
 22300  00B462  B0D8               	btfsc	status,0,c
 22301  00B464  D006               	goto	l2752
 22302                           
 22303                           ; BSR set to: 0
 22304                           ;encoder.c: 373: {;encoder.c: 374: os.division -= os.divide_step_size;
 22305  00B466  0101               	movlb	1	; () banked
 22306  00B468  5186               	movf	(_os+21)& (0+255),w,b	;volatile
 22307  00B46A  5F84               	subwf	(_os+19)& (0+255),f,b	;volatile
 22308  00B46C  0E00               	movlw	0
 22309  00B46E  5B85               	subwfb	(_os+20)& (0+255),f,b	;volatile
 22310                           
 22311                           ;encoder.c: 375: }
 22312  00B470  D1BB               	goto	l2706
 22313  00B472                     l2752:
 22314                           
 22315                           ;encoder.c: 376: else;encoder.c: 377: {;encoder.c: 378: os.division = 1;
 22316                           
 22317                           ; BSR set to: 1
 22318  00B472  0E00               	movlw	0
 22319  00B474  0101               	movlb	1	; () banked
 22320  00B476  6F85               	movwf	(_os+20)& (0+255),b	;volatile
 22321  00B478  0E01               	movlw	1
 22322  00B47A  6F84               	movwf	(_os+19)& (0+255),b	;volatile
 22323                           
 22324                           ; BSR set to: 1
 22325                           ;encoder.c: 379: };encoder.c: 380: };encoder.c: 381: break;
 22326                           
 22327                           ; BSR set to: 1
 22328  00B47C  D1B5               	goto	l2706
 22329  00B47E                     
 22330                           ;encoder.c: 384: if(os.button1==1)
 22331                           
 22332                           ; BSR set to: 1
 22333  00B47E  0101               	movlb	1	; () banked
 22334  00B480  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 22335  00B482  A4D8               	btfss	status,2,c
 22336  00B484  D002               	goto	l2755
 22337                           
 22338                           ; BSR set to: 1
 22339                           ;encoder.c: 385: {;encoder.c: 386: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 22340  00B486  0E02               	movlw	2
 22341  00B488  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22342  00B48A                     l2755:
 22343                           
 22344                           ; BSR set to: 1
 22345                           ;encoder.c: 387: };encoder.c: 388: if(os.button2==1)
 22346                           
 22347                           ; BSR set to: 1
 22348  00B48A  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22349  00B48C  B4D8               	btfsc	status,2,c
 22350                           
 22351                           ; BSR set to: 1
 22352                           ;encoder.c: 389: {;encoder.c: 390: motor_divide_jump();
 22353  00B48E  ECDF  F097         	call	_motor_divide_jump	;wreg free
 22354                           
 22355                           ;encoder.c: 391: };encoder.c: 392: if(os.encoder2Count>0)
 22356  00B492  0101               	movlb	1	; () banked
 22357  00B494  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 22358  00B496  0A80               	xorlw	128
 22359  00B498  0F7F               	addlw	-129
 22360  00B49A  B0D8               	btfsc	status,0,c
 22361                           
 22362                           ; BSR set to: 1
 22363                           ;encoder.c: 393: {;encoder.c: 394: _divide_jump_size_increment();
 22364  00B49C  EC45  F0A8         	call	__divide_jump_size_increment	;wreg free
 22365                           
 22366                           ;encoder.c: 395: };encoder.c: 396: if(os.encoder2Count<0)
 22367  00B4A0  0101               	movlb	1	; () banked
 22368  00B4A2  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 22369  00B4A4  D1A1               	goto	l2706
 22370                           
 22371                           ; BSR set to: 1
 22372                           ;encoder.c: 397: {;encoder.c: 398: _divide_jump_size_decrement();
 22373  00B4A6  ECD1  F09F         	call	__divide_jump_size_decrement	;wreg free
 22374                           
 22375                           ;encoder.c: 399: };encoder.c: 400: break;
 22376  00B4AA  D19E               	goto	l2706
 22377  00B4AC                     
 22378                           ;encoder.c: 406: if(os.button1==1)
 22379  00B4AC  0101               	movlb	1	; () banked
 22380  00B4AE  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 22381  00B4B0  A4D8               	btfss	status,2,c
 22382  00B4B2  D002               	goto	l2762
 22383                           
 22384                           ; BSR set to: 1
 22385                           ;encoder.c: 407: {;encoder.c: 408: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 22386  00B4B4  0E62               	movlw	98
 22387  00B4B6  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22388  00B4B8                     l2762:
 22389                           
 22390                           ; BSR set to: 1
 22391                           ;encoder.c: 409: };encoder.c: 410: if(os.encoder1Count>0)
 22392                           
 22393                           ; BSR set to: 1
 22394  00B4B8  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 22395  00B4BA  0A80               	xorlw	128
 22396  00B4BC  0F7F               	addlw	-129
 22397  00B4BE  A0D8               	btfss	status,0,c
 22398  00B4C0  D002               	goto	l2763
 22399                           
 22400                           ; BSR set to: 1
 22401                           ;encoder.c: 411: os.displayState = DISPLAY_STATE_ARC1_CANCEL;
 22402  00B4C2  0E52               	movlw	82
 22403  00B4C4  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22404  00B4C6                     l2763:
 22405                           
 22406                           ; BSR set to: 1
 22407                           ;encoder.c: 412: if(os.encoder1Count<0)
 22408                           
 22409                           ; BSR set to: 1
 22410  00B4C6  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 22411  00B4C8  D01B               	goto	l2765
 22412                           
 22413                           ; BSR set to: 1
 22414                           ;encoder.c: 413: os.displayState = DISPLAY_STATE_ARC1_CANCEL;
 22415  00B4CA  0E52               	movlw	82
 22416  00B4CC  D00F               	goto	L14
 22417  00B4CE                     
 22418                           ; BSR set to: 1
 22419                           ;encoder.c: 416: if(os.button1==1)
 22420                           
 22421                           ; BSR set to: 1
 22422  00B4CE  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 22423  00B4D0  A4D8               	btfss	status,2,c
 22424  00B4D2  D002               	goto	l2767
 22425                           
 22426                           ; BSR set to: 1
 22427                           ;encoder.c: 417: os.displayState = DISPLAY_STATE_MAIN_ARC;
 22428  00B4D4  0E03               	movlw	3
 22429  00B4D6  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22430  00B4D8                     l2767:
 22431                           
 22432                           ; BSR set to: 1
 22433                           ;encoder.c: 418: if(os.encoder1Count>0)
 22434                           
 22435                           ; BSR set to: 1
 22436  00B4D8  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 22437  00B4DA  0A80               	xorlw	128
 22438  00B4DC  0F7F               	addlw	-129
 22439  00B4DE  A0D8               	btfss	status,0,c
 22440  00B4E0  D002               	goto	l2768
 22441                           
 22442                           ; BSR set to: 1
 22443                           ;encoder.c: 419: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 22444  00B4E2  0E51               	movlw	81
 22445  00B4E4  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22446  00B4E6                     l2768:
 22447                           
 22448                           ; BSR set to: 1
 22449                           ;encoder.c: 420: if(os.encoder1Count<0)
 22450                           
 22451                           ; BSR set to: 1
 22452  00B4E6  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 22453  00B4E8  D00B               	goto	l2765
 22454                           
 22455                           ; BSR set to: 1
 22456                           ;encoder.c: 421: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 22457  00B4EA  0E51               	movlw	81
 22458  00B4EC                     L14:
 22459  00B4EC  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22460                           
 22461                           ; BSR set to: 1
 22462                           ;encoder.c: 423: }
 22463                           
 22464                           ; BSR set to: 1
 22465                           ;encoder.c: 422: break;
 22466  00B4EE  D008               	goto	l2765
 22467  00B4F0                     
 22468                           ; BSR set to: 1
 22469  00B4F0  0101               	movlb	1	; () banked
 22470  00B4F2  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 22471                           
 22472                           ; Switch size 1, requested type "space"
 22473                           ; Number of cases is 2, Range of values is 81 to 82
 22474                           ; switch strategies available:
 22475                           ; Name         Instructions Cycles
 22476                           ; simple_byte            7     4 (average)
 22477                           ;	Chosen strategy is simple_byte
 22478  00B4F4  0A51               	xorlw	81	; case 81
 22479  00B4F6  B4D8               	btfsc	status,2,c
 22480  00B4F8  D7D9               	goto	l2761
 22481  00B4FA  0A03               	xorlw	3	; case 82
 22482  00B4FC  B4D8               	btfsc	status,2,c
 22483  00B4FE  D7E7               	goto	l2766
 22484  00B500                     l2765:
 22485                           
 22486                           ; BSR set to: 1
 22487                           ;encoder.c: 424: if(os.button2==1)
 22488                           
 22489                           ; BSR set to: 1
 22490  00B500  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22491  00B502  A4D8               	btfss	status,2,c
 22492  00B504  D00A               	goto	l2770
 22493                           
 22494                           ; BSR set to: 1
 22495                           ;encoder.c: 425: {;encoder.c: 426: os.arc_step_size = _encoder_next_arc_step_size(os.arc
      +                          _step_size);
 22496  00B506  C18B  F060         	movff	_os+26,__encoder_next_arc_step_size@old_stepsize	;volatile
 22497  00B50A  C18C  F061         	movff	_os+27,__encoder_next_arc_step_size@old_stepsize+1	;volatile
 22498  00B50E  EC62  F09F         	call	__encoder_next_arc_step_size	;wreg free
 22499  00B512  C060  F18B         	movff	?__encoder_next_arc_step_size,_os+26	;volatile
 22500  00B516  C061  F18C         	movff	?__encoder_next_arc_step_size+1,_os+27	;volatile
 22501  00B51A                     l2770:
 22502                           
 22503                           ;encoder.c: 427: };encoder.c: 428: if(os.encoder2Count>0)
 22504  00B51A  0101               	movlb	1	; () banked
 22505  00B51C  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 22506  00B51E  0A80               	xorlw	128
 22507  00B520  0F7F               	addlw	-129
 22508  00B522  A0D8               	btfss	status,0,c
 22509  00B524  D01C               	goto	l2772
 22510                           
 22511                           ; BSR set to: 1
 22512                           ;encoder.c: 429: {;encoder.c: 430: os.arc_size += os.arc_step_size;
 22513  00B526  518B               	movf	(_os+26)& (0+255),w,b	;volatile
 22514  00B528  278D               	addwf	(_os+28)& (0+255),f,b	;volatile
 22515  00B52A  518C               	movf	(_os+27)& (0+255),w,b	;volatile
 22516  00B52C  238E               	addwfc	(_os+29)& (0+255),f,b	;volatile
 22517  00B52E  0E00               	movlw	0
 22518  00B530  238F               	addwfc	(_os+30)& (0+255),f,b	;volatile
 22519  00B532  0E00               	movlw	0
 22520  00B534  2390               	addwfc	(_os+31)& (0+255),f,b	;volatile
 22521                           
 22522                           ; BSR set to: 1
 22523                           ;encoder.c: 431: if(os.arc_size>100000)
 22524  00B536  BF90               	btfsc	(_os+31)& (0+255),7,b	;volatile
 22525  00B538  D012               	goto	l2772
 22526  00B53A  5190               	movf	(_os+31)& (0+255),w,b	;volatile
 22527  00B53C  E108               	bnz	u17830
 22528  00B53E  0EA1               	movlw	161
 22529  00B540  5D8D               	subwf	(_os+28)& (0+255),w,b	;volatile
 22530  00B542  0E86               	movlw	134
 22531  00B544  598E               	subwfb	(_os+29)& (0+255),w,b	;volatile
 22532  00B546  0E01               	movlw	1
 22533  00B548  598F               	subwfb	(_os+30)& (0+255),w,b	;volatile
 22534  00B54A  A0D8               	btfss	status,0,c
 22535  00B54C  D008               	goto	l2772
 22536  00B54E                     u17830:
 22537                           
 22538                           ; BSR set to: 1
 22539                           ;encoder.c: 432: os.arc_size = 100000;
 22540  00B54E  0EA0               	movlw	160
 22541  00B550  6F8D               	movwf	(_os+28)& (0+255),b	;volatile
 22542  00B552  0E86               	movlw	134
 22543  00B554  6F8E               	movwf	(_os+29)& (0+255),b	;volatile
 22544  00B556  0E01               	movlw	1
 22545  00B558  6F8F               	movwf	(_os+30)& (0+255),b	;volatile
 22546  00B55A  0E00               	movlw	0
 22547  00B55C  6F90               	movwf	(_os+31)& (0+255),b	;volatile
 22548  00B55E                     l2772:
 22549                           
 22550                           ; BSR set to: 1
 22551                           ;encoder.c: 433: };encoder.c: 434: if(os.encoder2Count<0)
 22552                           
 22553                           ; BSR set to: 1
 22554                           
 22555                           ; BSR set to: 1
 22556  00B55E  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 22557  00B560  D143               	goto	l2706
 22558                           
 22559                           ; BSR set to: 1
 22560                           ;encoder.c: 435: {;encoder.c: 436: os.arc_size -= os.arc_step_size;
 22561  00B562  518B               	movf	(_os+26)& (0+255),w,b	;volatile
 22562  00B564  0100               	movlb	0	; () banked
 22563  00B566  6FCD               	movwf	??_encoder_statemachine& (0+255),b
 22564  00B568  0101               	movlb	1	; () banked
 22565  00B56A  518C               	movf	(_os+27)& (0+255),w,b	;volatile
 22566  00B56C  0100               	movlb	0	; () banked
 22567  00B56E  6FCE               	movwf	(??_encoder_statemachine+1)& (0+255),b
 22568  00B570  6BCF               	clrf	(??_encoder_statemachine+2)& (0+255),b
 22569  00B572  6BD0               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22570  00B574  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 22571  00B576  0101               	movlb	1	; () banked
 22572  00B578  5F8D               	subwf	(_os+28)& (0+255),f,b	;volatile
 22573  00B57A  0100               	movlb	0	; () banked
 22574  00B57C  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22575  00B57E  0101               	movlb	1	; () banked
 22576  00B580  5B8E               	subwfb	(_os+29)& (0+255),f,b	;volatile
 22577  00B582  0100               	movlb	0	; () banked
 22578  00B584  51CF               	movf	(??_encoder_statemachine+2)& (0+255),w,b
 22579  00B586  0101               	movlb	1	; () banked
 22580  00B588  5B8F               	subwfb	(_os+30)& (0+255),f,b	;volatile
 22581  00B58A  0100               	movlb	0	; () banked
 22582  00B58C  51D0               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 22583  00B58E  0101               	movlb	1	; () banked
 22584  00B590  5B90               	subwfb	(_os+31)& (0+255),f,b	;volatile
 22585                           
 22586                           ;encoder.c: 437: if(os.arc_size<1)
 22587  00B592  BF90               	btfsc	(_os+31)& (0+255),7,b	;volatile
 22588  00B594  D007               	goto	u17850
 22589  00B596  5190               	movf	(_os+31)& (0+255),w,b	;volatile
 22590  00B598  118F               	iorwf	(_os+30)& (0+255),w,b	;volatile
 22591  00B59A  118E               	iorwf	(_os+29)& (0+255),w,b	;volatile
 22592  00B59C  E102               	bnz	u17851
 22593  00B59E  058D               	decf	(_os+28)& (0+255),w,b	;volatile
 22594  00B5A0  B0D8               	btfsc	status,0,c
 22595  00B5A2                     u17851:
 22596  00B5A2  D122               	goto	l2706
 22597  00B5A4                     u17850:
 22598                           
 22599                           ; BSR set to: 1
 22600                           ;encoder.c: 438: os.arc_size = 1;
 22601  00B5A4  0E01               	movlw	1
 22602  00B5A6  6F8D               	movwf	(_os+28)& (0+255),b	;volatile
 22603  00B5A8  0E00               	movlw	0
 22604  00B5AA  6F8E               	movwf	(_os+29)& (0+255),b	;volatile
 22605  00B5AC  0E00               	movlw	0
 22606  00B5AE  6F8F               	movwf	(_os+30)& (0+255),b	;volatile
 22607  00B5B0  0E00               	movlw	0
 22608  00B5B2  6F90               	movwf	(_os+31)& (0+255),b	;volatile
 22609                           
 22610                           ; BSR set to: 1
 22611                           ;encoder.c: 439: };encoder.c: 440: break;
 22612                           
 22613                           ; BSR set to: 1
 22614  00B5B4  D119               	goto	l2706
 22615  00B5B6                     
 22616                           ;encoder.c: 443: if(os.encoder1Count>0)
 22617                           
 22618                           ; BSR set to: 1
 22619  00B5B6  0101               	movlb	1	; () banked
 22620  00B5B8  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 22621  00B5BA  0A80               	xorlw	128
 22622  00B5BC  0F7F               	addlw	-129
 22623  00B5BE  A0D8               	btfss	status,0,c
 22624  00B5C0  D011               	goto	l2778
 22625                           
 22626                           ; BSR set to: 1
 22627                           ;encoder.c: 444: {;encoder.c: 445: if(os.arc_speed<config.maximum_speed_arc)
 22628  00B5C2  51B0               	movf	(_config+15)& (0+255),w,b
 22629  00B5C4  5D91               	subwf	(_os+32)& (0+255),w,b	;volatile
 22630  00B5C6  51B1               	movf	(_config+16)& (0+255),w,b
 22631  00B5C8  5992               	subwfb	(_os+33)& (0+255),w,b	;volatile
 22632  00B5CA  B0D8               	btfsc	status,0,c
 22633  00B5CC  D002               	goto	l2777
 22634                           
 22635                           ; BSR set to: 1
 22636                           ;encoder.c: 446: ++os.arc_speed;
 22637  00B5CE  4B91               	infsnz	(_os+32)& (0+255),f,b	;volatile
 22638  00B5D0  2B92               	incf	(_os+33)& (0+255),f,b	;volatile
 22639  00B5D2                     l2777:
 22640                           
 22641                           ; BSR set to: 1
 22642                           ;encoder.c: 447: if(os.busy)
 22643                           
 22644                           ; BSR set to: 1
 22645  00B5D2  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 22646  00B5D4  B4D8               	btfsc	status,2,c
 22647  00B5D6  D006               	goto	l2778
 22648                           
 22649                           ; BSR set to: 1
 22650                           ;encoder.c: 448: motor_change_speed(os.arc_speed);
 22651  00B5D8  C191  F060         	movff	_os+32,motor_change_speed@new_speed	;volatile
 22652  00B5DC  C192  F061         	movff	_os+33,motor_change_speed@new_speed+1	;volatile
 22653  00B5E0  ECC8  F0AC         	call	_motor_change_speed	;wreg free
 22654  00B5E4                     l2778:
 22655                           
 22656                           ;encoder.c: 449: };encoder.c: 450: if(os.encoder1Count<0)
 22657  00B5E4  0101               	movlb	1	; () banked
 22658  00B5E6  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 22659  00B5E8  D046               	goto	l2782
 22660                           
 22661                           ; BSR set to: 1
 22662                           ;encoder.c: 451: {;encoder.c: 452: if(os.arc_speed>config.minimum_speed)
 22663  00B5EA  5191               	movf	(_os+32)& (0+255),w,b	;volatile
 22664  00B5EC  5DAA               	subwf	(_config+9)& (0+255),w,b
 22665  00B5EE  5192               	movf	(_os+33)& (0+255),w,b	;volatile
 22666  00B5F0  59AB               	subwfb	(_config+10)& (0+255),w,b
 22667  00B5F2  B0D8               	btfsc	status,0,c
 22668  00B5F4  D003               	goto	l2780
 22669                           
 22670                           ; BSR set to: 1
 22671                           ;encoder.c: 453: --os.arc_speed;
 22672  00B5F6  0791               	decf	(_os+32)& (0+255),f,b	;volatile
 22673  00B5F8  A0D8               	btfss	status,0,c
 22674  00B5FA  0792               	decf	(_os+33)& (0+255),f,b	;volatile
 22675  00B5FC                     l2780:
 22676                           
 22677                           ; BSR set to: 1
 22678                           ;encoder.c: 454: if(os.busy)
 22679                           
 22680                           ; BSR set to: 1
 22681  00B5FC  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 22682  00B5FE  B4D8               	btfsc	status,2,c
 22683  00B600  D03A               	goto	l2782
 22684                           
 22685                           ; BSR set to: 1
 22686                           ;encoder.c: 455: motor_change_speed(os.arc_speed);
 22687  00B602  C191  F060         	movff	_os+32,motor_change_speed@new_speed	;volatile
 22688  00B606  C192  F061         	movff	_os+33,motor_change_speed@new_speed+1	;volatile
 22689  00B60A  ECC8  F0AC         	call	_motor_change_speed	;wreg free
 22690                           
 22691                           ;encoder.c: 456: };encoder.c: 457: switch(os.displayState)
 22692  00B60E  D033               	goto	l2782
 22693  00B610                     
 22694                           ;encoder.c: 460: if(os.button2==1)
 22695  00B610  0101               	movlb	1	; () banked
 22696  00B612  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22697  00B614  A4D8               	btfss	status,2,c
 22698  00B616  D006               	goto	l2784
 22699                           
 22700                           ; BSR set to: 1
 22701                           ;encoder.c: 461: {;encoder.c: 462: motor_arc_move(MOTOR_DIRECTION_CCW);
 22702  00B618  0EFF               	movlw	255
 22703  00B61A  EC7E  F08C         	call	_motor_arc_move
 22704                           
 22705                           ;encoder.c: 463: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 22706  00B61E  0E62               	movlw	98
 22707  00B620  0101               	movlb	1	; () banked
 22708  00B622  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22709  00B624                     l2784:
 22710                           
 22711                           ; BSR set to: 1
 22712                           ;encoder.c: 464: };encoder.c: 465: if(os.encoder2Count>0)
 22713                           
 22714                           ; BSR set to: 1
 22715  00B624  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 22716  00B626  0A80               	xorlw	128
 22717  00B628  0F7F               	addlw	-129
 22718  00B62A  A0D8               	btfss	status,0,c
 22719  00B62C  D0DD               	goto	l2706
 22720                           
 22721                           ; BSR set to: 1
 22722                           ;encoder.c: 466: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 22723  00B62E  0E62               	movlw	98
 22724  00B630  D0A5               	goto	L21
 22725  00B632                     
 22726                           ; BSR set to: 1
 22727                           ;encoder.c: 469: if(os.button2==1)
 22728                           
 22729                           ; BSR set to: 1
 22730  00B632  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22731  00B634  A4D8               	btfss	status,2,c
 22732  00B636  D007               	goto	l2788
 22733                           
 22734                           ; BSR set to: 1
 22735                           ;encoder.c: 470: {;encoder.c: 471: if(os.busy)
 22736  00B638  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 22737  00B63A  A4D8               	btfss	status,2,c
 22738                           
 22739                           ; BSR set to: 1
 22740                           ;encoder.c: 472: motor_stop();
 22741  00B63C  EC7A  F0A7         	call	_motor_stop	;wreg free
 22742                           
 22743                           ;encoder.c: 473: os.displayState = DISPLAY_STATE_MAIN_ARC;
 22744  00B640  0E03               	movlw	3
 22745  00B642  0101               	movlb	1	; () banked
 22746  00B644  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22747  00B646                     l2788:
 22748                           
 22749                           ; BSR set to: 1
 22750                           ;encoder.c: 474: };encoder.c: 475: if(os.encoder2Count>0)
 22751                           
 22752                           ; BSR set to: 1
 22753  00B646  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 22754  00B648  0A80               	xorlw	128
 22755  00B64A  0F7F               	addlw	-129
 22756  00B64C  A0D8               	btfss	status,0,c
 22757  00B64E  D002               	goto	l2790
 22758                           
 22759                           ; BSR set to: 1
 22760                           ;encoder.c: 476: os.displayState = DISPLAY_STATE_ARC2_CW;
 22761  00B650  0E63               	movlw	99
 22762  00B652  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22763  00B654                     l2790:
 22764                           
 22765                           ; BSR set to: 1
 22766                           ;encoder.c: 477: if(os.encoder2Count<0)
 22767                           
 22768                           ; BSR set to: 1
 22769  00B654  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 22770  00B656  D0C8               	goto	l2706
 22771                           
 22772                           ; BSR set to: 1
 22773                           ;encoder.c: 478: os.displayState = DISPLAY_STATE_ARC2_CCW;
 22774  00B658  0E61               	movlw	97
 22775  00B65A  D090               	goto	L21
 22776  00B65C                     
 22777                           ; BSR set to: 1
 22778                           ;encoder.c: 481: if(os.button2==1)
 22779                           
 22780                           ; BSR set to: 1
 22781  00B65C  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22782  00B65E  A4D8               	btfss	status,2,c
 22783  00B660  D006               	goto	l2793
 22784                           
 22785                           ; BSR set to: 1
 22786                           ;encoder.c: 482: {;encoder.c: 483: motor_arc_move(MOTOR_DIRECTION_CW);
 22787  00B662  0E01               	movlw	1
 22788  00B664  EC7E  F08C         	call	_motor_arc_move
 22789                           
 22790                           ;encoder.c: 484: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 22791  00B668  0E62               	movlw	98
 22792  00B66A  0101               	movlb	1	; () banked
 22793  00B66C  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22794  00B66E                     l2793:
 22795                           
 22796                           ; BSR set to: 1
 22797                           ;encoder.c: 485: };encoder.c: 486: if(os.encoder2Count<0)
 22798                           
 22799                           ; BSR set to: 1
 22800  00B66E  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 22801  00B670  D0BB               	goto	l2706
 22802                           
 22803                           ; BSR set to: 1
 22804                           ;encoder.c: 487: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 22805  00B672  0E62               	movlw	98
 22806  00B674  D083               	goto	L21
 22807  00B676                     l2782:
 22808                           
 22809                           ; BSR set to: 1
 22810  00B676  0101               	movlb	1	; () banked
 22811  00B678  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 22812                           
 22813                           ; Switch size 1, requested type "space"
 22814                           ; Number of cases is 3, Range of values is 97 to 99
 22815                           ; switch strategies available:
 22816                           ; Name         Instructions Cycles
 22817                           ; simple_byte           10     6 (average)
 22818                           ;	Chosen strategy is simple_byte
 22819  00B67A  0A61               	xorlw	97	; case 97
 22820  00B67C  B4D8               	btfsc	status,2,c
 22821  00B67E  D7C8               	goto	l2783
 22822  00B680  0A03               	xorlw	3	; case 98
 22823  00B682  B4D8               	btfsc	status,2,c
 22824  00B684  D7D6               	goto	l2787
 22825  00B686  0A01               	xorlw	1	; case 99
 22826  00B688  B4D8               	btfsc	status,2,c
 22827  00B68A  D7E8               	goto	l2792
 22828                           
 22829                           ; BSR set to: 1
 22830                           ;encoder.c: 490: break;
 22831  00B68C  D0AD               	goto	l2706
 22832  00B68E                     
 22833                           ;encoder.c: 493: if(os.button2==1)
 22834                           
 22835                           ; BSR set to: 1
 22836  00B68E  0101               	movlb	1	; () banked
 22837  00B690  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22838  00B692  A4D8               	btfss	status,2,c
 22839  00B694  D012               	goto	l2796
 22840                           
 22841                           ; BSR set to: 1
 22842                           ;encoder.c: 494: {;encoder.c: 496: motor_go_to_steps_position(0);
 22843  00B696  0E00               	movlw	0
 22844  00B698  0100               	movlb	0	; () banked
 22845  00B69A  6FA7               	movwf	motor_go_to_steps_position@target_position& (0+255),b
 22846  00B69C  0E00               	movlw	0
 22847  00B69E  6FA8               	movwf	(motor_go_to_steps_position@target_position+1)& (0+255),b
 22848  00B6A0  0E00               	movlw	0
 22849  00B6A2  6FA9               	movwf	(motor_go_to_steps_position@target_position+2)& (0+255),b
 22850  00B6A4  0E00               	movlw	0
 22851  00B6A6  6FAA               	movwf	(motor_go_to_steps_position@target_position+3)& (0+255),b
 22852  00B6A8  EC65  F069         	call	_motor_go_to_steps_position	;wreg free
 22853                           
 22854                           ;encoder.c: 498: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 22855  00B6AC  0E05               	movlw	5
 22856  00B6AE  0101               	movlb	1	; () banked
 22857  00B6B0  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22858                           
 22859                           ; BSR set to: 1
 22860                           ;encoder.c: 499: os.divide_position = 0;
 22861  00B6B2  0E00               	movlw	0
 22862  00B6B4  6F88               	movwf	(_os+23)& (0+255),b	;volatile
 22863  00B6B6  0E00               	movlw	0
 22864  00B6B8  6F87               	movwf	(_os+22)& (0+255),b	;volatile
 22865  00B6BA                     l2796:
 22866                           
 22867                           ; BSR set to: 1
 22868                           ;encoder.c: 500: };encoder.c: 501: if(os.button1==1)
 22869                           
 22870                           ; BSR set to: 1
 22871  00B6BA  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 22872  00B6BC  A4D8               	btfss	status,2,c
 22873  00B6BE  D094               	goto	l2706
 22874                           
 22875                           ; BSR set to: 1
 22876                           ;encoder.c: 502: {;encoder.c: 503: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 22877  00B6C0  0E05               	movlw	5
 22878  00B6C2  D05C               	goto	L21
 22879  00B6C4                     
 22880                           ;encoder.c: 508: if(os.encoder1Count>0)
 22881                           
 22882                           ; BSR set to: 1
 22883  00B6C4  0101               	movlb	1	; () banked
 22884  00B6C6  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 22885  00B6C8  0A80               	xorlw	128
 22886  00B6CA  0F7F               	addlw	-129
 22887  00B6CC  B0D8               	btfsc	status,0,c
 22888                           
 22889                           ; BSR set to: 1
 22890                           ;encoder.c: 509: {;encoder.c: 510: motor_increase_manual_speed();
 22891  00B6CE  EC27  F0AC         	call	_motor_increase_manual_speed	;wreg free
 22892                           
 22893                           ;encoder.c: 511: };encoder.c: 512: if(os.encoder1Count<0)
 22894  00B6D2  0101               	movlb	1	; () banked
 22895  00B6D4  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 22896  00B6D6  D054               	goto	l2801
 22897                           
 22898                           ; BSR set to: 1
 22899                           ;encoder.c: 513: {;encoder.c: 514: motor_decrease_manual_speed();
 22900  00B6D8  ECBE  F0AB         	call	_motor_decrease_manual_speed	;wreg free
 22901                           
 22902                           ;encoder.c: 515: };encoder.c: 516: switch(os.displayState)
 22903  00B6DC  D051               	goto	l2801
 22904  00B6DE                     
 22905                           ;encoder.c: 519: if(os.button2==1)
 22906  00B6DE  0101               	movlb	1	; () banked
 22907  00B6E0  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22908  00B6E2  A4D8               	btfss	status,2,c
 22909  00B6E4  D013               	goto	l2803
 22910                           
 22911                           ; BSR set to: 1
 22912                           ;encoder.c: 520: {;encoder.c: 521: motor_schedule_command(MOTOR_DIRECTION_CCW, 0, os.man
      +                          ual_speed);
 22913  00B6E6  0E00               	movlw	0
 22914  00B6E8  0100               	movlb	0	; () banked
 22915  00B6EA  6FA0               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 22916  00B6EC  0E00               	movlw	0
 22917  00B6EE  6FA1               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 22918  00B6F0  0E00               	movlw	0
 22919  00B6F2  6FA2               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 22920  00B6F4  0E00               	movlw	0
 22921  00B6F6  6FA3               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 22922  00B6F8  C194  F0A4         	movff	_os+35,motor_schedule_command@speed	;volatile
 22923  00B6FC  C195  F0A5         	movff	_os+36,motor_schedule_command@speed+1	;volatile
 22924  00B700  0EFF               	movlw	255
 22925  00B702  EC89  F097         	call	_motor_schedule_command
 22926                           
 22927                           ;encoder.c: 522: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 22928  00B706  0E84               	movlw	132
 22929  00B708  0101               	movlb	1	; () banked
 22930  00B70A  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22931  00B70C                     l2803:
 22932                           
 22933                           ; BSR set to: 1
 22934                           ;encoder.c: 523: };encoder.c: 524: if(os.encoder2Count>0)
 22935                           
 22936                           ; BSR set to: 1
 22937  00B70C  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 22938  00B70E  0A80               	xorlw	128
 22939  00B710  0F7F               	addlw	-129
 22940  00B712  A0D8               	btfss	status,0,c
 22941  00B714  D069               	goto	l2706
 22942                           
 22943                           ; BSR set to: 1
 22944                           ;encoder.c: 525: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 22945  00B716  0E82               	movlw	130
 22946  00B718  D031               	goto	L21
 22947  00B71A                     
 22948                           ; BSR set to: 1
 22949                           ;encoder.c: 528: if(os.button2==1)
 22950                           
 22951                           ; BSR set to: 1
 22952  00B71A  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22953  00B71C  A4D8               	btfss	status,2,c
 22954  00B71E  D002               	goto	l2807
 22955                           
 22956                           ; BSR set to: 1
 22957                           ;encoder.c: 529: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 22958  00B720  0E04               	movlw	4
 22959  00B722  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22960  00B724                     l2807:
 22961                           
 22962                           ; BSR set to: 1
 22963                           ;encoder.c: 530: if(os.encoder2Count>0)
 22964                           
 22965                           ; BSR set to: 1
 22966  00B724  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 22967  00B726  0A80               	xorlw	128
 22968  00B728  0F7F               	addlw	-129
 22969  00B72A  A0D8               	btfss	status,0,c
 22970  00B72C  D002               	goto	l2808
 22971                           
 22972                           ; BSR set to: 1
 22973                           ;encoder.c: 531: os.displayState = DISPLAY_STATE_MANUAL_CW;
 22974  00B72E  0E83               	movlw	131
 22975  00B730  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22976  00B732                     l2808:
 22977                           
 22978                           ; BSR set to: 1
 22979                           ;encoder.c: 532: if(os.encoder2Count<0)
 22980                           
 22981                           ; BSR set to: 1
 22982  00B732  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 22983  00B734  D059               	goto	l2706
 22984                           
 22985                           ; BSR set to: 1
 22986                           ;encoder.c: 533: os.displayState = DISPLAY_STATE_MANUAL_CCW;
 22987  00B736  0E81               	movlw	129
 22988  00B738  D021               	goto	L21
 22989  00B73A                     
 22990                           ; BSR set to: 1
 22991                           ;encoder.c: 536: if(os.button2==1)
 22992                           
 22993                           ; BSR set to: 1
 22994  00B73A  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22995  00B73C  A4D8               	btfss	status,2,c
 22996  00B73E  D012               	goto	l2811
 22997                           
 22998                           ; BSR set to: 1
 22999                           ;encoder.c: 537: {;encoder.c: 538: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 23000  00B740  0E84               	movlw	132
 23001  00B742  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 23002                           
 23003                           ; BSR set to: 1
 23004                           ;encoder.c: 539: motor_schedule_command(MOTOR_DIRECTION_CW, 0, os.manual_speed);
 23005  00B744  0E00               	movlw	0
 23006  00B746  0100               	movlb	0	; () banked
 23007  00B748  6FA0               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 23008  00B74A  0E00               	movlw	0
 23009  00B74C  6FA1               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 23010  00B74E  0E00               	movlw	0
 23011  00B750  6FA2               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 23012  00B752  0E00               	movlw	0
 23013  00B754  6FA3               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 23014  00B756  C194  F0A4         	movff	_os+35,motor_schedule_command@speed	;volatile
 23015  00B75A  C195  F0A5         	movff	_os+36,motor_schedule_command@speed+1	;volatile
 23016  00B75E  0E01               	movlw	1
 23017  00B760  EC89  F097         	call	_motor_schedule_command
 23018  00B764                     l2811:
 23019                           
 23020                           ;encoder.c: 540: };encoder.c: 541: if(os.encoder2Count<0)
 23021  00B764  0101               	movlb	1	; () banked
 23022  00B766  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 23023  00B768  D03F               	goto	l2706
 23024                           
 23025                           ; BSR set to: 1
 23026                           ;encoder.c: 542: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 23027  00B76A  0E82               	movlw	130
 23028  00B76C  D007               	goto	L21
 23029  00B76E                     
 23030                           ; BSR set to: 1
 23031                           ;encoder.c: 545: if(os.button2==1)
 23032                           
 23033                           ; BSR set to: 1
 23034  00B76E  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 23035  00B770  A4D8               	btfss	status,2,c
 23036  00B772  D03A               	goto	l2706
 23037                           
 23038                           ; BSR set to: 1
 23039                           ;encoder.c: 546: {;encoder.c: 547: motor_stop();
 23040  00B774  EC7A  F0A7         	call	_motor_stop	;wreg free
 23041                           
 23042                           ;encoder.c: 548: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 23043  00B778  0E82               	movlw	130
 23044  00B77A                     L22:
 23045  00B77A  0101               	movlb	1	; () banked
 23046  00B77C                     L21:
 23047  00B77C  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 23048                           
 23049                           ; BSR set to: 1
 23050                           ;encoder.c: 551: }
 23051                           
 23052                           ; BSR set to: 1
 23053                           ;encoder.c: 549: };encoder.c: 550: break;
 23054  00B77E  D034               	goto	l2706
 23055  00B780                     l2801:
 23056                           
 23057                           ; BSR set to: 1
 23058  00B780  0101               	movlb	1	; () banked
 23059  00B782  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 23060                           
 23061                           ; Switch size 1, requested type "space"
 23062                           ; Number of cases is 4, Range of values is 129 to 132
 23063                           ; switch strategies available:
 23064                           ; Name         Instructions Cycles
 23065                           ; simple_byte           13     7 (average)
 23066                           ;	Chosen strategy is simple_byte
 23067  00B784  0A81               	xorlw	129	; case 129
 23068  00B786  B4D8               	btfsc	status,2,c
 23069  00B788  D7AA               	goto	l2802
 23070  00B78A  0A03               	xorlw	3	; case 130
 23071  00B78C  B4D8               	btfsc	status,2,c
 23072  00B78E  D7C5               	goto	l2806
 23073  00B790  0A01               	xorlw	1	; case 131
 23074  00B792  B4D8               	btfsc	status,2,c
 23075  00B794  D7D2               	goto	l2810
 23076  00B796  0A07               	xorlw	7	; case 132
 23077  00B798  B4D8               	btfsc	status,2,c
 23078  00B79A  D7E9               	goto	l2813
 23079                           
 23080                           ; BSR set to: 1
 23081                           ;encoder.c: 553: }
 23082                           
 23083                           ; BSR set to: 1
 23084                           ;encoder.c: 552: break;
 23085  00B79C  D025               	goto	l2706
 23086  00B79E                     l2671:
 23087                           
 23088                           ; BSR set to: 1
 23089                           
 23090                           ; BSR set to: 1
 23091  00B79E  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 23092  00B7A0  0BF0               	andlw	240
 23093  00B7A2  0100               	movlb	0	; () banked
 23094  00B7A4  6FCD               	movwf	??_encoder_statemachine& (0+255),b
 23095  00B7A6  6BCE               	clrf	(??_encoder_statemachine+1)& (0+255),b
 23096                           
 23097                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23098                           ; Switch size 1, requested type "space"
 23099                           ; Number of cases is 1, Range of values is 0 to 0
 23100                           ; switch strategies available:
 23101                           ; Name         Instructions Cycles
 23102                           ; simple_byte            4     3 (average)
 23103                           ;	Chosen strategy is simple_byte
 23104  00B7A8  51CE               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 23105  00B7AA  0A00               	xorlw	0	; case 0
 23106  00B7AC  A4D8               	btfss	status,2,c
 23107  00B7AE  D01C               	goto	l2706
 23108                           
 23109                           ; BSR set to: 0
 23110                           ; Switch size 1, requested type "space"
 23111                           ; Number of cases is 9, Range of values is 0 to 128
 23112                           ; switch strategies available:
 23113                           ; Name         Instructions Cycles
 23114                           ; simple_byte           28    15 (average)
 23115                           ;	Chosen strategy is simple_byte
 23116  00B7B0  51CD               	movf	??_encoder_statemachine& (0+255),w,b
 23117  00B7B2  0A00               	xorlw	0	; case 0
 23118  00B7B4  B4D8               	btfsc	status,2,c
 23119  00B7B6  D501               	goto	l2673
 23120  00B7B8  0A10               	xorlw	16	; case 16
 23121  00B7BA  B4D8               	btfsc	status,2,c
 23122  00B7BC  D53E               	goto	l2708
 23123  00B7BE  0A30               	xorlw	48	; case 32
 23124  00B7C0  B4D8               	btfsc	status,2,c
 23125  00B7C2  D5F7               	goto	l2724
 23126  00B7C4  0A10               	xorlw	16	; case 48
 23127  00B7C6  B4D8               	btfsc	status,2,c
 23128  00B7C8  D621               	goto	l2739
 23129  00B7CA  0A70               	xorlw	112	; case 64
 23130  00B7CC  B4D8               	btfsc	status,2,c
 23131  00B7CE  D657               	goto	l2754
 23132  00B7D0  0A10               	xorlw	16	; case 80
 23133  00B7D2  B4D8               	btfsc	status,2,c
 23134  00B7D4  D68D               	goto	l2760
 23135  00B7D6  0A30               	xorlw	48	; case 96
 23136  00B7D8  B4D8               	btfsc	status,2,c
 23137  00B7DA  D6ED               	goto	l2775
 23138  00B7DC  0A10               	xorlw	16	; case 112
 23139  00B7DE  B4D8               	btfsc	status,2,c
 23140  00B7E0  D756               	goto	l2795
 23141  00B7E2  0AF0               	xorlw	240	; case 128
 23142  00B7E4  B4D8               	btfsc	status,2,c
 23143  00B7E6  D76E               	goto	l2798
 23144  00B7E8                     l2706:
 23145                           
 23146                           ;encoder.c: 556: os.encoder1Count = 0;
 23147                           
 23148                           ; BSR set to: 0
 23149  00B7E8  0E00               	movlw	0
 23150  00B7EA  0101               	movlb	1	; () banked
 23151  00B7EC  6F74               	movwf	(_os+3)& (0+255),b	;volatile
 23152                           
 23153                           ;encoder.c: 557: os.encoder2Count = 0;
 23154  00B7EE  0E00               	movlw	0
 23155  00B7F0  6F76               	movwf	(_os+5)& (0+255),b	;volatile
 23156                           
 23157                           ;encoder.c: 558: os.button1 = 0;
 23158  00B7F2  0E00               	movlw	0
 23159  00B7F4  6F75               	movwf	(_os+4)& (0+255),b	;volatile
 23160                           
 23161                           ;encoder.c: 559: os.button2 = 0;
 23162  00B7F6  0E00               	movlw	0
 23163  00B7F8  6F77               	movwf	(_os+6)& (0+255),b	;volatile
 23164                           
 23165                           ; BSR set to: 1
 23166  00B7FA  0012               	return		;funcret
 23167  00B7FC                     __end_of_encoder_statemachine:
 23168                           	opt stack 0
 23169                           tblptru	equ	0xFF8
 23170                           tblptrh	equ	0xFF7
 23171                           tblptrl	equ	0xFF6
 23172                           tablat	equ	0xFF5
 23173                           prodh	equ	0xFF4
 23174                           prodl	equ	0xFF3
 23175                           intcon	equ	0xFF2
 23176                           postinc0	equ	0xFEE
 23177                           wreg	equ	0xFE8
 23178                           indf1	equ	0xFE7
 23179                           postinc1	equ	0xFE6
 23180                           postdec1	equ	0xFE5
 23181                           plusw1	equ	0xFE3
 23182                           fsr1h	equ	0xFE2
 23183                           fsr1l	equ	0xFE1
 23184                           indf2	equ	0xFDF
 23185                           postinc2	equ	0xFDE
 23186                           postdec2	equ	0xFDD
 23187                           plusw2	equ	0xFDB
 23188                           fsr2h	equ	0xFDA
 23189                           fsr2l	equ	0xFD9
 23190                           status	equ	0xFD8
 23191                           
 23192 ;; *************** function _motor_nonzero_steps_from_degrees *****************
 23193 ;; Defined at:
 23194 ;;		line 50 in file "motor.c"
 23195 ;; Parameters:    Size  Location     Type
 23196 ;;  degrees         2   47[BANK0 ] unsigned int 
 23197 ;; Auto vars:     Size  Location     Type
 23198 ;;  steps           4   51[BANK0 ] unsigned long 
 23199 ;; Return value:  Size  Location     Type
 23200 ;;                  4   47[BANK0 ] unsigned long 
 23201 ;; Registers used:
 23202 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 23203 ;; Tracked objects:
 23204 ;;		On entry : 0/0
 23205 ;;		On exit  : 0/0
 23206 ;;		Unchanged: 0/0
 23207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23208 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23209 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23211 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23212 ;;Total ram usage:        8 bytes
 23213 ;; Hardware stack levels used:    1
 23214 ;; Hardware stack levels required when called:   12
 23215 ;; This function calls:
 23216 ;;		_motor_steps_from_degrees
 23217 ;; This function is called by:
 23218 ;;		_encoder_statemachine
 23219 ;; This function uses a non-reentrant model
 23220 ;;
 23221                           
 23222                           	psect	text91
 23223  014DCE                     __ptext91:
 23224                           	opt stack 0
 23225  014DCE                     _motor_nonzero_steps_from_degrees:
 23226                           	opt stack 17
 23227                           
 23228                           ;motor.c: 52: uint32_t steps;;motor.c: 53: steps = motor_steps_from_degrees(degrees);
 23229                           
 23230                           ; BSR set to: 1
 23231                           ;incstack = 0
 23232  014DCE  C08F  F087         	movff	motor_nonzero_steps_from_degrees@degrees,motor_steps_from_degrees@degrees
 23233  014DD2  C090  F088         	movff	motor_nonzero_steps_from_degrees@degrees+1,motor_steps_from_degrees@degrees+1
 23234  014DD6  ECC9  F08E         	call	_motor_steps_from_degrees	;wreg free
 23235  014DDA  C087  F093         	movff	?_motor_steps_from_degrees,motor_nonzero_steps_from_degrees@steps
 23236  014DDE  C088  F094         	movff	?_motor_steps_from_degrees+1,motor_nonzero_steps_from_degrees@steps+1
 23237  014DE2  C089  F095         	movff	?_motor_steps_from_degrees+2,motor_nonzero_steps_from_degrees@steps+2
 23238  014DE6  C08A  F096         	movff	?_motor_steps_from_degrees+3,motor_nonzero_steps_from_degrees@steps+3
 23239                           
 23240                           ;motor.c: 54: if(steps==0)
 23241  014DEA  0100               	movlb	0	; () banked
 23242  014DEC  5193               	movf	motor_nonzero_steps_from_degrees@steps& (0+255),w,b
 23243  014DEE  1194               	iorwf	(motor_nonzero_steps_from_degrees@steps+1)& (0+255),w,b
 23244  014DF0  1195               	iorwf	(motor_nonzero_steps_from_degrees@steps+2)& (0+255),w,b
 23245  014DF2  1196               	iorwf	(motor_nonzero_steps_from_degrees@steps+3)& (0+255),w,b
 23246  014DF4  A4D8               	btfss	status,2,c
 23247  014DF6  D008               	goto	l2407
 23248                           
 23249                           ; BSR set to: 0
 23250                           ;motor.c: 55: steps = 1;
 23251  014DF8  0E01               	movlw	1
 23252  014DFA  6F93               	movwf	motor_nonzero_steps_from_degrees@steps& (0+255),b
 23253  014DFC  0E00               	movlw	0
 23254  014DFE  6F94               	movwf	(motor_nonzero_steps_from_degrees@steps+1)& (0+255),b
 23255  014E00  0E00               	movlw	0
 23256  014E02  6F95               	movwf	(motor_nonzero_steps_from_degrees@steps+2)& (0+255),b
 23257  014E04  0E00               	movlw	0
 23258  014E06  6F96               	movwf	(motor_nonzero_steps_from_degrees@steps+3)& (0+255),b
 23259  014E08                     l2407:
 23260                           
 23261                           ; BSR set to: 0
 23262                           ;motor.c: 56: return steps;
 23263                           
 23264                           ; BSR set to: 0
 23265  014E08  C093  F08F         	movff	motor_nonzero_steps_from_degrees@steps,?_motor_nonzero_steps_from_degrees
 23266  014E0C  C094  F090         	movff	motor_nonzero_steps_from_degrees@steps+1,?_motor_nonzero_steps_from_degrees+1
 23267  014E10  C095  F091         	movff	motor_nonzero_steps_from_degrees@steps+2,?_motor_nonzero_steps_from_degrees+2
 23268  014E14  C096  F092         	movff	motor_nonzero_steps_from_degrees@steps+3,?_motor_nonzero_steps_from_degrees+3
 23269  014E18  0012               	return	
 23270  014E1A                     __end_of_motor_nonzero_steps_from_degrees:
 23271                           	opt stack 0
 23272                           tblptru	equ	0xFF8
 23273                           tblptrh	equ	0xFF7
 23274                           tblptrl	equ	0xFF6
 23275                           tablat	equ	0xFF5
 23276                           prodh	equ	0xFF4
 23277                           prodl	equ	0xFF3
 23278                           intcon	equ	0xFF2
 23279                           postinc0	equ	0xFEE
 23280                           wreg	equ	0xFE8
 23281                           indf1	equ	0xFE7
 23282                           postinc1	equ	0xFE6
 23283                           postdec1	equ	0xFE5
 23284                           plusw1	equ	0xFE3
 23285                           fsr1h	equ	0xFE2
 23286                           fsr1l	equ	0xFE1
 23287                           indf2	equ	0xFDF
 23288                           postinc2	equ	0xFDE
 23289                           postdec2	equ	0xFDD
 23290                           plusw2	equ	0xFDB
 23291                           fsr2h	equ	0xFDA
 23292                           fsr2l	equ	0xFD9
 23293                           status	equ	0xFD8
 23294                           
 23295 ;; *************** function _motor_increase_manual_speed *****************
 23296 ;; Defined at:
 23297 ;;		line 533 in file "motor.c"
 23298 ;; Parameters:    Size  Location     Type
 23299 ;;		None
 23300 ;; Auto vars:     Size  Location     Type
 23301 ;;		None
 23302 ;; Return value:  Size  Location     Type
 23303 ;;                  1    wreg      void 
 23304 ;; Registers used:
 23305 ;;		wreg, status,2, status,0, cstack
 23306 ;; Tracked objects:
 23307 ;;		On entry : 0/0
 23308 ;;		On exit  : 0/0
 23309 ;;		Unchanged: 0/0
 23310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23315 ;;Total ram usage:        0 bytes
 23316 ;; Hardware stack levels used:    1
 23317 ;; Hardware stack levels required when called:   12
 23318 ;; This function calls:
 23319 ;;		_motor_set_manual_speed
 23320 ;; This function is called by:
 23321 ;;		_encoder_statemachine
 23322 ;; This function uses a non-reentrant model
 23323 ;;
 23324                           
 23325                           	psect	text92
 23326  01584E                     __ptext92:
 23327                           	opt stack 0
 23328  01584E                     _motor_increase_manual_speed:
 23329                           	opt stack 17
 23330                           
 23331                           ;motor.c: 536: {;motor.c: 537: motor_set_manual_speed(os.manual_speed+1);
 23332                           
 23333                           ; BSR set to: 0
 23334                           ;incstack = 0
 23335  01584E  0E01               	movlw	1
 23336  015850  0101               	movlb	1	; () banked
 23337  015852  2594               	addwf	(_os+35)& (0+255),w,b	;volatile
 23338  015854  0100               	movlb	0	; () banked
 23339  015856  6F62               	movwf	motor_set_manual_speed@new_speed& (0+255),b
 23340  015858  0E00               	movlw	0
 23341  01585A  0101               	movlb	1	; () banked
 23342  01585C  2195               	addwfc	(_os+36)& (0+255),w,b	;volatile
 23343  01585E  0100               	movlb	0	; () banked
 23344  015860  6F63               	movwf	(motor_set_manual_speed@new_speed+1)& (0+255),b
 23345  015862  EC72  F0A6         	call	_motor_set_manual_speed	;wreg free
 23346  015866  0012               	return	
 23347  015868                     __end_of_motor_increase_manual_speed:
 23348                           	opt stack 0
 23349                           tblptru	equ	0xFF8
 23350                           tblptrh	equ	0xFF7
 23351                           tblptrl	equ	0xFF6
 23352                           tablat	equ	0xFF5
 23353                           prodh	equ	0xFF4
 23354                           prodl	equ	0xFF3
 23355                           intcon	equ	0xFF2
 23356                           postinc0	equ	0xFEE
 23357                           wreg	equ	0xFE8
 23358                           indf1	equ	0xFE7
 23359                           postinc1	equ	0xFE6
 23360                           postdec1	equ	0xFE5
 23361                           plusw1	equ	0xFE3
 23362                           fsr1h	equ	0xFE2
 23363                           fsr1l	equ	0xFE1
 23364                           indf2	equ	0xFDF
 23365                           postinc2	equ	0xFDE
 23366                           postdec2	equ	0xFDD
 23367                           plusw2	equ	0xFDB
 23368                           fsr2h	equ	0xFDA
 23369                           fsr2l	equ	0xFD9
 23370                           status	equ	0xFD8
 23371                           
 23372 ;; *************** function _motor_divide_jump_to_nearest *****************
 23373 ;; Defined at:
 23374 ;;		line 693 in file "motor.c"
 23375 ;; Parameters:    Size  Location     Type
 23376 ;;		None
 23377 ;; Auto vars:     Size  Location     Type
 23378 ;;  divide_posit    4  105[BANK0 ] float 
 23379 ;;  nearest_posi    4   99[BANK0 ] unsigned long 
 23380 ;;  nearest_divi    2  103[BANK0 ] int 
 23381 ;; Return value:  Size  Location     Type
 23382 ;;                  1    wreg      void 
 23383 ;; Registers used:
 23384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23385 ;; Tracked objects:
 23386 ;;		On entry : 0/0
 23387 ;;		On exit  : 0/0
 23388 ;;		Unchanged: 0/0
 23389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23391 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23393 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23394 ;;Total ram usage:       10 bytes
 23395 ;; Hardware stack levels used:    1
 23396 ;; Hardware stack levels required when called:   15
 23397 ;; This function calls:
 23398 ;;		___fladd
 23399 ;;		___fldiv
 23400 ;;		___flmul
 23401 ;;		___fltol
 23402 ;;		___xxtofl
 23403 ;;		__step_position_from_divide_position
 23404 ;;		_motor_go_to_steps_position
 23405 ;; This function is called by:
 23406 ;;		_encoder_statemachine
 23407 ;; This function uses a non-reentrant model
 23408 ;;
 23409                           
 23410                           	psect	text93
 23411  00FBF4                     __ptext93:
 23412                           	opt stack 0
 23413  00FBF4                     _motor_divide_jump_to_nearest:
 23414                           	opt stack 14
 23415                           
 23416                           ;motor.c: 695: float divide_position_float;;motor.c: 696: int16_t nearest_divide_positio
      +                          n;;motor.c: 697: uint32_t nearest_position_in_steps;;motor.c: 699: divide_position_float
      +                           = (float) os.current_position_in_steps;
 23417                           
 23418                           ;incstack = 0
 23419  00FBF4  C178  F060         	movff	_os+7,___xxtofl@val	;volatile
 23420  00FBF8  C179  F061         	movff	_os+8,___xxtofl@val+1	;volatile
 23421  00FBFC  C17A  F062         	movff	_os+9,___xxtofl@val+2	;volatile
 23422  00FC00  C17B  F063         	movff	_os+10,___xxtofl@val+3	;volatile
 23423  00FC04  0E00               	movlw	0
 23424  00FC06  EC34  F081         	call	___xxtofl
 23425  00FC0A  C060  F0C9         	movff	?___xxtofl,motor_divide_jump_to_nearest@divide_position_float
 23426  00FC0E  C061  F0CA         	movff	?___xxtofl+1,motor_divide_jump_to_nearest@divide_position_float+1
 23427  00FC12  C062  F0CB         	movff	?___xxtofl+2,motor_divide_jump_to_nearest@divide_position_float+2
 23428  00FC16  C063  F0CC         	movff	?___xxtofl+3,motor_divide_jump_to_nearest@divide_position_float+3
 23429                           
 23430                           ;motor.c: 700: divide_position_float *= (float) os.division;
 23431  00FC1A  C0C9  F06E         	movff	motor_divide_jump_to_nearest@divide_position_float,___flmul@b
 23432  00FC1E  C0CA  F06F         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___flmul@b+1
 23433  00FC22  C0CB  F070         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___flmul@b+2
 23434  00FC26  C0CC  F071         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___flmul@b+3
 23435  00FC2A  EE21  F084         	lfsr	2,_os+19	;volatile
 23436  00FC2E  CFDE F060          	movff	postinc2,___xxtofl@val
 23437  00FC32  CFDD F061          	movff	postdec2,___xxtofl@val+1
 23438  00FC36  0100               	movlb	0	; () banked
 23439  00FC38  0E00               	movlw	0
 23440  00FC3A  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 23441  00FC3C  0EFF               	movlw	-1
 23442  00FC3E  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 23443  00FC40  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 23444  00FC42  0E01               	movlw	1
 23445  00FC44  EC34  F081         	call	___xxtofl
 23446  00FC48  C060  F072         	movff	?___xxtofl,___flmul@a
 23447  00FC4C  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 23448  00FC50  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 23449  00FC54  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 23450  00FC58  EC1E  F066         	call	___flmul	;wreg free
 23451  00FC5C  C06E  F0C9         	movff	?___flmul,motor_divide_jump_to_nearest@divide_position_float
 23452  00FC60  C06F  F0CA         	movff	?___flmul+1,motor_divide_jump_to_nearest@divide_position_float+1
 23453  00FC64  C070  F0CB         	movff	?___flmul+2,motor_divide_jump_to_nearest@divide_position_float+2
 23454  00FC68  C071  F0CC         	movff	?___flmul+3,motor_divide_jump_to_nearest@divide_position_float+3
 23455                           
 23456                           ;motor.c: 701: divide_position_float /= (float) config.full_circle_in_steps;
 23457  00FC6C  C0C9  F06E         	movff	motor_divide_jump_to_nearest@divide_position_float,___fldiv@b
 23458  00FC70  C0CA  F06F         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fldiv@b+1
 23459  00FC74  C0CB  F070         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fldiv@b+2
 23460  00FC78  C0CC  F071         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fldiv@b+3
 23461  00FC7C  C1A1  F060         	movff	_config,___xxtofl@val
 23462  00FC80  C1A2  F061         	movff	_config+1,___xxtofl@val+1
 23463  00FC84  C1A3  F062         	movff	_config+2,___xxtofl@val+2
 23464  00FC88  C1A4  F063         	movff	_config+3,___xxtofl@val+3
 23465  00FC8C  0E00               	movlw	0
 23466  00FC8E  EC34  F081         	call	___xxtofl
 23467  00FC92  C060  F072         	movff	?___xxtofl,___fldiv@a
 23468  00FC96  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
 23469  00FC9A  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
 23470  00FC9E  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
 23471  00FCA2  ECD6  F06D         	call	___fldiv	;wreg free
 23472  00FCA6  C06E  F0C9         	movff	?___fldiv,motor_divide_jump_to_nearest@divide_position_float
 23473  00FCAA  C06F  F0CA         	movff	?___fldiv+1,motor_divide_jump_to_nearest@divide_position_float+1
 23474  00FCAE  C070  F0CB         	movff	?___fldiv+2,motor_divide_jump_to_nearest@divide_position_float+2
 23475  00FCB2  C071  F0CC         	movff	?___fldiv+3,motor_divide_jump_to_nearest@divide_position_float+3
 23476                           
 23477                           ;motor.c: 702: divide_position_float += 0.5;
 23478  00FCB6  C0C9  F072         	movff	motor_divide_jump_to_nearest@divide_position_float,___fladd@b
 23479  00FCBA  C0CA  F073         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fladd@b+1
 23480  00FCBE  C0CB  F074         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fladd@b+2
 23481  00FCC2  C0CC  F075         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fladd@b+3
 23482  00FCC6  0E00               	movlw	0
 23483  00FCC8  0100               	movlb	0	; () banked
 23484  00FCCA  6F76               	movwf	___fladd@a& (0+255),b
 23485  00FCCC  0E00               	movlw	0
 23486  00FCCE  6F77               	movwf	(___fladd@a+1)& (0+255),b
 23487  00FCD0  0E00               	movlw	0
 23488  00FCD2  6F78               	movwf	(___fladd@a+2)& (0+255),b
 23489  00FCD4  0E3F               	movlw	63
 23490  00FCD6  6F79               	movwf	(___fladd@a+3)& (0+255),b
 23491  00FCD8  ECC7  F067         	call	___fladd	;wreg free
 23492  00FCDC  C072  F0C9         	movff	?___fladd,motor_divide_jump_to_nearest@divide_position_float
 23493  00FCE0  C073  F0CA         	movff	?___fladd+1,motor_divide_jump_to_nearest@divide_position_float+1
 23494  00FCE4  C074  F0CB         	movff	?___fladd+2,motor_divide_jump_to_nearest@divide_position_float+2
 23495  00FCE8  C075  F0CC         	movff	?___fladd+3,motor_divide_jump_to_nearest@divide_position_float+3
 23496                           
 23497                           ;motor.c: 703: nearest_divide_position = (int16_t) divide_position_float;
 23498  00FCEC  C0C9  F060         	movff	motor_divide_jump_to_nearest@divide_position_float,___fltol@f1
 23499  00FCF0  C0CA  F061         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fltol@f1+1
 23500  00FCF4  C0CB  F062         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fltol@f1+2
 23501  00FCF8  C0CC  F063         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fltol@f1+3
 23502  00FCFC  EC8A  F090         	call	___fltol	;wreg free
 23503  00FD00  C060  F0C7         	movff	?___fltol,motor_divide_jump_to_nearest@nearest_divide_position
 23504  00FD04  C061  F0C8         	movff	?___fltol+1,motor_divide_jump_to_nearest@nearest_divide_position+1
 23505                           
 23506                           ;motor.c: 706: nearest_position_in_steps = _step_position_from_divide_position(nearest_d
      +                          ivide_position);
 23507  00FD08  C0C7  F087         	movff	motor_divide_jump_to_nearest@nearest_divide_position,__step_position_from_divide_
      +                          position@divide_position
 23508  00FD0C  C0C8  F088         	movff	motor_divide_jump_to_nearest@nearest_divide_position+1,__step_position_from_divid
      +                          e_position@divide_position+1
 23509  00FD10  EC6C  F08D         	call	__step_position_from_divide_position	;wreg free
 23510  00FD14  C087  F0C3         	movff	?__step_position_from_divide_position,motor_divide_jump_to_nearest@nearest_positi
      +                          on_in_steps
 23511  00FD18  C088  F0C4         	movff	?__step_position_from_divide_position+1,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+1
 23512  00FD1C  C089  F0C5         	movff	?__step_position_from_divide_position+2,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+2
 23513  00FD20  C08A  F0C6         	movff	?__step_position_from_divide_position+3,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+3
 23514                           
 23515                           ;motor.c: 709: os.divide_position = nearest_divide_position;
 23516  00FD24  C0C7  F187         	movff	motor_divide_jump_to_nearest@nearest_divide_position,_os+22	;volatile
 23517  00FD28  C0C8  F188         	movff	motor_divide_jump_to_nearest@nearest_divide_position+1,_os+23	;volatile
 23518                           
 23519                           ;motor.c: 710: motor_go_to_steps_position(nearest_position_in_steps);
 23520  00FD2C  C0C3  F0A7         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps,motor_go_to_steps_position
      +                          @target_position
 23521  00FD30  C0C4  F0A8         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+1,motor_go_to_steps_positi
      +                          on@target_position+1
 23522  00FD34  C0C5  F0A9         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+2,motor_go_to_steps_positi
      +                          on@target_position+2
 23523  00FD38  C0C6  F0AA         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+3,motor_go_to_steps_positi
      +                          on@target_position+3
 23524  00FD3C  EC65  F069         	call	_motor_go_to_steps_position	;wreg free
 23525  00FD40  0012               	return		;funcret
 23526  00FD42                     __end_of_motor_divide_jump_to_nearest:
 23527                           	opt stack 0
 23528                           tblptru	equ	0xFF8
 23529                           tblptrh	equ	0xFF7
 23530                           tblptrl	equ	0xFF6
 23531                           tablat	equ	0xFF5
 23532                           prodh	equ	0xFF4
 23533                           prodl	equ	0xFF3
 23534                           intcon	equ	0xFF2
 23535                           postinc0	equ	0xFEE
 23536                           wreg	equ	0xFE8
 23537                           indf1	equ	0xFE7
 23538                           postinc1	equ	0xFE6
 23539                           postdec1	equ	0xFE5
 23540                           plusw1	equ	0xFE3
 23541                           fsr1h	equ	0xFE2
 23542                           fsr1l	equ	0xFE1
 23543                           indf2	equ	0xFDF
 23544                           postinc2	equ	0xFDE
 23545                           postdec2	equ	0xFDD
 23546                           plusw2	equ	0xFDB
 23547                           fsr2h	equ	0xFDA
 23548                           fsr2l	equ	0xFD9
 23549                           status	equ	0xFD8
 23550                           
 23551 ;; *************** function _motor_divide_jump *****************
 23552 ;; Defined at:
 23553 ;;		line 662 in file "motor.c"
 23554 ;; Parameters:    Size  Location     Type
 23555 ;;		None
 23556 ;; Auto vars:     Size  Location     Type
 23557 ;;  target_posit    4  100[BANK0 ] unsigned long 
 23558 ;;  target_divid    2  104[BANK0 ] int 
 23559 ;; Return value:  Size  Location     Type
 23560 ;;                  1    wreg      void 
 23561 ;; Registers used:
 23562 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23563 ;; Tracked objects:
 23564 ;;		On entry : 0/0
 23565 ;;		On exit  : 0/0
 23566 ;;		Unchanged: 0/0
 23567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23569 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23570 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23571 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23572 ;;Total ram usage:        7 bytes
 23573 ;; Hardware stack levels used:    1
 23574 ;; Hardware stack levels required when called:   15
 23575 ;; This function calls:
 23576 ;;		__step_position_from_divide_position
 23577 ;;		_motor_go_to_steps_position
 23578 ;; This function is called by:
 23579 ;;		_encoder_statemachine
 23580 ;; This function uses a non-reentrant model
 23581 ;;
 23582                           
 23583                           	psect	text94
 23584  012FBE                     __ptext94:
 23585                           	opt stack 0
 23586  012FBE                     _motor_divide_jump:
 23587                           	opt stack 14
 23588                           
 23589                           ;motor.c: 664: int16_t target_divide_position;;motor.c: 665: uint32_t target_position_in
      +                          _steps;;motor.c: 668: if(os.divide_jump_size>0)
 23590                           
 23591                           ;incstack = 0
 23592  012FBE  0101               	movlb	1	; () banked
 23593  012FC0  BF8A               	btfsc	(_os+25)& (0+255),7,b	;volatile
 23594  012FC2  D023               	goto	l2543
 23595  012FC4  518A               	movf	(_os+25)& (0+255),w,b	;volatile
 23596  012FC6  E103               	bnz	u16630
 23597  012FC8  0589               	decf	(_os+24)& (0+255),w,b	;volatile
 23598  012FCA  A0D8               	btfss	status,0,c
 23599  012FCC  D01E               	goto	l2543
 23600  012FCE                     u16630:
 23601                           
 23602                           ; BSR set to: 1
 23603                           ;motor.c: 669: {;motor.c: 670: target_divide_position = os.divide_position + os.divide_j
      +                          ump_size;
 23604  012FCE  5189               	movf	(_os+24)& (0+255),w,b	;volatile
 23605  012FD0  2587               	addwf	(_os+22)& (0+255),w,b	;volatile
 23606  012FD2  0100               	movlb	0	; () banked
 23607  012FD4  6FC8               	movwf	motor_divide_jump@target_divide_position& (0+255),b
 23608  012FD6  0101               	movlb	1	; () banked
 23609  012FD8  518A               	movf	(_os+25)& (0+255),w,b	;volatile
 23610  012FDA  2188               	addwfc	(_os+23)& (0+255),w,b	;volatile
 23611  012FDC  0100               	movlb	0	; () banked
 23612  012FDE  6FC9               	movwf	(motor_divide_jump@target_divide_position+1)& (0+255),b
 23613                           
 23614                           ;motor.c: 671: if(target_divide_position>=os.division)
 23615  012FE0  0101               	movlb	1	; () banked
 23616  012FE2  5184               	movf	(_os+19)& (0+255),w,b	;volatile
 23617  012FE4  0100               	movlb	0	; () banked
 23618  012FE6  5DC8               	subwf	motor_divide_jump@target_divide_position& (0+255),w,b
 23619  012FE8  51C9               	movf	(motor_divide_jump@target_divide_position+1)& (0+255),w,b
 23620  012FEA  0A80               	xorlw	128
 23621  012FEC  6FC3               	movwf	??_motor_divide_jump& (0+255),b
 23622  012FEE  0101               	movlb	1	; () banked
 23623  012FF0  5185               	movf	(_os+20)& (0+255),w,b	;volatile
 23624  012FF2  0A80               	xorlw	128
 23625  012FF4  0100               	movlb	0	; () banked
 23626  012FF6  59C3               	subwfb	??_motor_divide_jump& (0+255),w,b
 23627  012FF8  A0D8               	btfss	status,0,c
 23628  012FFA  D019               	goto	l2546
 23629                           
 23630                           ; BSR set to: 0
 23631                           ;motor.c: 672: {;motor.c: 673: target_divide_position -= os.division;
 23632  012FFC  EE21  F084         	lfsr	2,_os+19	;volatile
 23633  013000  50DE               	movf	postinc2,w,c
 23634  013002  5FC8               	subwf	motor_divide_jump@target_divide_position& (0+255),f,b
 23635  013004  50DD               	movf	postdec2,w,c
 23636  013006  5BC9               	subwfb	(motor_divide_jump@target_divide_position+1)& (0+255),f,b
 23637                           
 23638                           ; BSR set to: 0
 23639                           ;motor.c: 674: };motor.c: 675: }
 23640  013008  D012               	goto	l2546
 23641  01300A                     l2543:
 23642                           
 23643                           ;motor.c: 676: else;motor.c: 677: {;motor.c: 678: target_divide_position = os.divide_pos
      +                          ition + os.divide_jump_size;
 23644                           
 23645                           ; BSR set to: 0
 23646  01300A  0101               	movlb	1	; () banked
 23647  01300C  5189               	movf	(_os+24)& (0+255),w,b	;volatile
 23648  01300E  2587               	addwf	(_os+22)& (0+255),w,b	;volatile
 23649  013010  0100               	movlb	0	; () banked
 23650  013012  6FC8               	movwf	motor_divide_jump@target_divide_position& (0+255),b
 23651  013014  0101               	movlb	1	; () banked
 23652  013016  518A               	movf	(_os+25)& (0+255),w,b	;volatile
 23653  013018  2188               	addwfc	(_os+23)& (0+255),w,b	;volatile
 23654  01301A  0100               	movlb	0	; () banked
 23655  01301C  6FC9               	movwf	(motor_divide_jump@target_divide_position+1)& (0+255),b
 23656                           
 23657                           ;motor.c: 679: if(target_divide_position<0)
 23658  01301E  AFC9               	btfss	(motor_divide_jump@target_divide_position+1)& (0+255),7,b
 23659  013020  D006               	goto	l2546
 23660                           
 23661                           ; BSR set to: 0
 23662                           ;motor.c: 680: {;motor.c: 681: target_divide_position += os.division;
 23663  013022  EE21  F084         	lfsr	2,_os+19	;volatile
 23664  013026  50DE               	movf	postinc2,w,c
 23665  013028  27C8               	addwf	motor_divide_jump@target_divide_position& (0+255),f,b
 23666  01302A  50DD               	movf	postdec2,w,c
 23667  01302C  23C9               	addwfc	(motor_divide_jump@target_divide_position+1)& (0+255),f,b
 23668  01302E                     l2546:
 23669                           
 23670                           ; BSR set to: 0
 23671                           ;motor.c: 682: };motor.c: 683: };motor.c: 686: target_position_in_steps = _step_position
      +                          _from_divide_position(target_divide_position);
 23672                           
 23673                           ; BSR set to: 0
 23674                           
 23675                           ; BSR set to: 0
 23676  01302E  C0C8  F087         	movff	motor_divide_jump@target_divide_position,__step_position_from_divide_position@div
      +                          ide_position
 23677  013032  C0C9  F088         	movff	motor_divide_jump@target_divide_position+1,__step_position_from_divide_position@d
      +                          ivide_position+1
 23678  013036  EC6C  F08D         	call	__step_position_from_divide_position	;wreg free
 23679  01303A  C087  F0C4         	movff	?__step_position_from_divide_position,motor_divide_jump@target_position_in_steps
 23680  01303E  C088  F0C5         	movff	?__step_position_from_divide_position+1,motor_divide_jump@target_position_in_step
      +                          s+1
 23681  013042  C089  F0C6         	movff	?__step_position_from_divide_position+2,motor_divide_jump@target_position_in_step
      +                          s+2
 23682  013046  C08A  F0C7         	movff	?__step_position_from_divide_position+3,motor_divide_jump@target_position_in_step
      +                          s+3
 23683                           
 23684                           ;motor.c: 689: os.divide_position = target_divide_position;
 23685  01304A  C0C8  F187         	movff	motor_divide_jump@target_divide_position,_os+22	;volatile
 23686  01304E  C0C9  F188         	movff	motor_divide_jump@target_divide_position+1,_os+23	;volatile
 23687                           
 23688                           ;motor.c: 690: motor_go_to_steps_position(target_position_in_steps);
 23689  013052  C0C4  F0A7         	movff	motor_divide_jump@target_position_in_steps,motor_go_to_steps_position@target_posi
      +                          tion
 23690  013056  C0C5  F0A8         	movff	motor_divide_jump@target_position_in_steps+1,motor_go_to_steps_position@target_po
      +                          sition+1
 23691  01305A  C0C6  F0A9         	movff	motor_divide_jump@target_position_in_steps+2,motor_go_to_steps_position@target_po
      +                          sition+2
 23692  01305E  C0C7  F0AA         	movff	motor_divide_jump@target_position_in_steps+3,motor_go_to_steps_position@target_po
      +                          sition+3
 23693  013062  EC65  F069         	call	_motor_go_to_steps_position	;wreg free
 23694  013066  0012               	return		;funcret
 23695  013068                     __end_of_motor_divide_jump:
 23696                           	opt stack 0
 23697                           tblptru	equ	0xFF8
 23698                           tblptrh	equ	0xFF7
 23699                           tblptrl	equ	0xFF6
 23700                           tablat	equ	0xFF5
 23701                           prodh	equ	0xFF4
 23702                           prodl	equ	0xFF3
 23703                           intcon	equ	0xFF2
 23704                           postinc0	equ	0xFEE
 23705                           wreg	equ	0xFE8
 23706                           indf1	equ	0xFE7
 23707                           postinc1	equ	0xFE6
 23708                           postdec1	equ	0xFE5
 23709                           plusw1	equ	0xFE3
 23710                           fsr1h	equ	0xFE2
 23711                           fsr1l	equ	0xFE1
 23712                           indf2	equ	0xFDF
 23713                           postinc2	equ	0xFDE
 23714                           postdec2	equ	0xFDD
 23715                           plusw2	equ	0xFDB
 23716                           fsr2h	equ	0xFDA
 23717                           fsr2l	equ	0xFD9
 23718                           status	equ	0xFD8
 23719                           
 23720 ;; *************** function __step_position_from_divide_position *****************
 23721 ;; Defined at:
 23722 ;;		line 92 in file "motor.c"
 23723 ;; Parameters:    Size  Location     Type
 23724 ;;  divide_posit    2   39[BANK0 ] int 
 23725 ;; Auto vars:     Size  Location     Type
 23726 ;;  target_posit    4   43[BANK0 ] float 
 23727 ;; Return value:  Size  Location     Type
 23728 ;;                  4   39[BANK0 ] unsigned long 
 23729 ;; Registers used:
 23730 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23731 ;; Tracked objects:
 23732 ;;		On entry : 0/0
 23733 ;;		On exit  : 0/0
 23734 ;;		Unchanged: 0/0
 23735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23736 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23737 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23739 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23740 ;;Total ram usage:        8 bytes
 23741 ;; Hardware stack levels used:    1
 23742 ;; Hardware stack levels required when called:   11
 23743 ;; This function calls:
 23744 ;;		___fldiv
 23745 ;;		___flmul
 23746 ;;		___fltol
 23747 ;;		___xxtofl
 23748 ;; This function is called by:
 23749 ;;		_motor_divide_jump
 23750 ;;		_motor_divide_jump_to_nearest
 23751 ;; This function uses a non-reentrant model
 23752 ;;
 23753                           
 23754                           	psect	text95
 23755  011AD8                     __ptext95:
 23756                           	opt stack 0
 23757  011AD8                     __step_position_from_divide_position:
 23758                           	opt stack 17
 23759                           
 23760                           ;motor.c: 94: float target_position;;motor.c: 97: target_position = (float) config.full_
      +                          circle_in_steps;
 23761                           
 23762                           ;incstack = 0
 23763  011AD8  C1A1  F060         	movff	_config,___xxtofl@val
 23764  011ADC  C1A2  F061         	movff	_config+1,___xxtofl@val+1
 23765  011AE0  C1A3  F062         	movff	_config+2,___xxtofl@val+2
 23766  011AE4  C1A4  F063         	movff	_config+3,___xxtofl@val+3
 23767  011AE8  0E00               	movlw	0
 23768  011AEA  EC34  F081         	call	___xxtofl
 23769  011AEE  C060  F08B         	movff	?___xxtofl,__step_position_from_divide_position@target_position
 23770  011AF2  C061  F08C         	movff	?___xxtofl+1,__step_position_from_divide_position@target_position+1
 23771  011AF6  C062  F08D         	movff	?___xxtofl+2,__step_position_from_divide_position@target_position+2
 23772  011AFA  C063  F08E         	movff	?___xxtofl+3,__step_position_from_divide_position@target_position+3
 23773                           
 23774                           ;motor.c: 98: target_position *= (float) divide_position;
 23775  011AFE  C08B  F06E         	movff	__step_position_from_divide_position@target_position,___flmul@b
 23776  011B02  C08C  F06F         	movff	__step_position_from_divide_position@target_position+1,___flmul@b+1
 23777  011B06  C08D  F070         	movff	__step_position_from_divide_position@target_position+2,___flmul@b+2
 23778  011B0A  C08E  F071         	movff	__step_position_from_divide_position@target_position+3,___flmul@b+3
 23779  011B0E  C087  F060         	movff	__step_position_from_divide_position@divide_position,___xxtofl@val
 23780  011B12  C088  F061         	movff	__step_position_from_divide_position@divide_position+1,___xxtofl@val+1
 23781  011B16  0100               	movlb	0	; () banked
 23782  011B18  0E00               	movlw	0
 23783  011B1A  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 23784  011B1C  0EFF               	movlw	-1
 23785  011B1E  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 23786  011B20  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 23787  011B22  0E01               	movlw	1
 23788  011B24  EC34  F081         	call	___xxtofl
 23789  011B28  C060  F072         	movff	?___xxtofl,___flmul@a
 23790  011B2C  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 23791  011B30  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 23792  011B34  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 23793  011B38  EC1E  F066         	call	___flmul	;wreg free
 23794  011B3C  C06E  F08B         	movff	?___flmul,__step_position_from_divide_position@target_position
 23795  011B40  C06F  F08C         	movff	?___flmul+1,__step_position_from_divide_position@target_position+1
 23796  011B44  C070  F08D         	movff	?___flmul+2,__step_position_from_divide_position@target_position+2
 23797  011B48  C071  F08E         	movff	?___flmul+3,__step_position_from_divide_position@target_position+3
 23798                           
 23799                           ;motor.c: 99: target_position /= (float) os.division;
 23800  011B4C  C08B  F06E         	movff	__step_position_from_divide_position@target_position,___fldiv@b
 23801  011B50  C08C  F06F         	movff	__step_position_from_divide_position@target_position+1,___fldiv@b+1
 23802  011B54  C08D  F070         	movff	__step_position_from_divide_position@target_position+2,___fldiv@b+2
 23803  011B58  C08E  F071         	movff	__step_position_from_divide_position@target_position+3,___fldiv@b+3
 23804  011B5C  EE21  F084         	lfsr	2,_os+19	;volatile
 23805  011B60  CFDE F060          	movff	postinc2,___xxtofl@val
 23806  011B64  CFDD F061          	movff	postdec2,___xxtofl@val+1
 23807  011B68  0100               	movlb	0	; () banked
 23808  011B6A  0E00               	movlw	0
 23809  011B6C  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 23810  011B6E  0EFF               	movlw	-1
 23811  011B70  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 23812  011B72  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 23813  011B74  0E01               	movlw	1
 23814  011B76  EC34  F081         	call	___xxtofl
 23815  011B7A  C060  F072         	movff	?___xxtofl,___fldiv@a
 23816  011B7E  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
 23817  011B82  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
 23818  011B86  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
 23819  011B8A  ECD6  F06D         	call	___fldiv	;wreg free
 23820  011B8E  C06E  F08B         	movff	?___fldiv,__step_position_from_divide_position@target_position
 23821  011B92  C06F  F08C         	movff	?___fldiv+1,__step_position_from_divide_position@target_position+1
 23822  011B96  C070  F08D         	movff	?___fldiv+2,__step_position_from_divide_position@target_position+2
 23823  011B9A  C071  F08E         	movff	?___fldiv+3,__step_position_from_divide_position@target_position+3
 23824                           
 23825                           ;motor.c: 101: return (uint32_t) target_position;
 23826  011B9E  C08B  F060         	movff	__step_position_from_divide_position@target_position,___fltol@f1
 23827  011BA2  C08C  F061         	movff	__step_position_from_divide_position@target_position+1,___fltol@f1+1
 23828  011BA6  C08D  F062         	movff	__step_position_from_divide_position@target_position+2,___fltol@f1+2
 23829  011BAA  C08E  F063         	movff	__step_position_from_divide_position@target_position+3,___fltol@f1+3
 23830  011BAE  EC8A  F090         	call	___fltol	;wreg free
 23831  011BB2  C060  F087         	movff	?___fltol,?__step_position_from_divide_position
 23832  011BB6  C061  F088         	movff	?___fltol+1,?__step_position_from_divide_position+1
 23833  011BBA  C062  F089         	movff	?___fltol+2,?__step_position_from_divide_position+2
 23834  011BBE  C063  F08A         	movff	?___fltol+3,?__step_position_from_divide_position+3
 23835  011BC2  0012               	return	
 23836  011BC4                     __end_of__step_position_from_divide_position:
 23837                           	opt stack 0
 23838                           tblptru	equ	0xFF8
 23839                           tblptrh	equ	0xFF7
 23840                           tblptrl	equ	0xFF6
 23841                           tablat	equ	0xFF5
 23842                           prodh	equ	0xFF4
 23843                           prodl	equ	0xFF3
 23844                           intcon	equ	0xFF2
 23845                           postinc0	equ	0xFEE
 23846                           wreg	equ	0xFE8
 23847                           indf1	equ	0xFE7
 23848                           postinc1	equ	0xFE6
 23849                           postdec1	equ	0xFE5
 23850                           plusw1	equ	0xFE3
 23851                           fsr1h	equ	0xFE2
 23852                           fsr1l	equ	0xFE1
 23853                           indf2	equ	0xFDF
 23854                           postinc2	equ	0xFDE
 23855                           postdec2	equ	0xFDD
 23856                           plusw2	equ	0xFDB
 23857                           fsr2h	equ	0xFDA
 23858                           fsr2l	equ	0xFD9
 23859                           status	equ	0xFD8
 23860                           
 23861 ;; *************** function _motor_decrease_manual_speed *****************
 23862 ;; Defined at:
 23863 ;;		line 541 in file "motor.c"
 23864 ;; Parameters:    Size  Location     Type
 23865 ;;		None
 23866 ;; Auto vars:     Size  Location     Type
 23867 ;;		None
 23868 ;; Return value:  Size  Location     Type
 23869 ;;                  1    wreg      void 
 23870 ;; Registers used:
 23871 ;;		wreg, status,2, status,0, cstack
 23872 ;; Tracked objects:
 23873 ;;		On entry : 0/0
 23874 ;;		On exit  : 0/0
 23875 ;;		Unchanged: 0/0
 23876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23881 ;;Total ram usage:        0 bytes
 23882 ;; Hardware stack levels used:    1
 23883 ;; Hardware stack levels required when called:   12
 23884 ;; This function calls:
 23885 ;;		_motor_set_manual_speed
 23886 ;; This function is called by:
 23887 ;;		_encoder_statemachine
 23888 ;; This function uses a non-reentrant model
 23889 ;;
 23890                           
 23891                           	psect	text96
 23892  01577C                     __ptext96:
 23893                           	opt stack 0
 23894  01577C                     _motor_decrease_manual_speed:
 23895                           	opt stack 17
 23896                           
 23897                           ;motor.c: 543: if(os.manual_speed>0)
 23898                           
 23899                           ;incstack = 0
 23900  01577C  0101               	movlb	1	; () banked
 23901  01577E  5194               	movf	(_os+35)& (0+255),w,b	;volatile
 23902  015780  1195               	iorwf	(_os+36)& (0+255),w,b	;volatile
 23903  015782  B4D8               	btfsc	status,2,c
 23904  015784  0012               	return	
 23905                           
 23906                           ; BSR set to: 1
 23907                           ;motor.c: 544: {;motor.c: 545: motor_set_manual_speed(os.manual_speed-1);
 23908  015786  0EFF               	movlw	255
 23909  015788  2594               	addwf	(_os+35)& (0+255),w,b	;volatile
 23910  01578A  0100               	movlb	0	; () banked
 23911  01578C  6F62               	movwf	motor_set_manual_speed@new_speed& (0+255),b
 23912  01578E  0EFF               	movlw	255
 23913  015790  0101               	movlb	1	; () banked
 23914  015792  2195               	addwfc	(_os+36)& (0+255),w,b	;volatile
 23915  015794  0100               	movlb	0	; () banked
 23916  015796  6F63               	movwf	(motor_set_manual_speed@new_speed+1)& (0+255),b
 23917  015798  EC72  F0A6         	call	_motor_set_manual_speed	;wreg free
 23918  01579C  0012               	return	
 23919  01579E                     __end_of_motor_decrease_manual_speed:
 23920                           	opt stack 0
 23921                           tblptru	equ	0xFF8
 23922                           tblptrh	equ	0xFF7
 23923                           tblptrl	equ	0xFF6
 23924                           tablat	equ	0xFF5
 23925                           prodh	equ	0xFF4
 23926                           prodl	equ	0xFF3
 23927                           intcon	equ	0xFF2
 23928                           postinc0	equ	0xFEE
 23929                           wreg	equ	0xFE8
 23930                           indf1	equ	0xFE7
 23931                           postinc1	equ	0xFE6
 23932                           postdec1	equ	0xFE5
 23933                           plusw1	equ	0xFE3
 23934                           fsr1h	equ	0xFE2
 23935                           fsr1l	equ	0xFE1
 23936                           indf2	equ	0xFDF
 23937                           postinc2	equ	0xFDE
 23938                           postdec2	equ	0xFDD
 23939                           plusw2	equ	0xFDB
 23940                           fsr2h	equ	0xFDA
 23941                           fsr2l	equ	0xFD9
 23942                           status	equ	0xFD8
 23943                           
 23944 ;; *************** function _motor_arc_move *****************
 23945 ;; Defined at:
 23946 ;;		line 713 in file "motor.c"
 23947 ;; Parameters:    Size  Location     Type
 23948 ;;  direction       1    wreg     enum E6622
 23949 ;; Auto vars:     Size  Location     Type
 23950 ;;  direction       1   75[BANK0 ] enum E6622
 23951 ;;  arc_in_steps    4   76[BANK0 ] float 
 23952 ;; Return value:  Size  Location     Type
 23953 ;;                  1    wreg      void 
 23954 ;; Registers used:
 23955 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23956 ;; Tracked objects:
 23957 ;;		On entry : 0/0
 23958 ;;		On exit  : 0/0
 23959 ;;		Unchanged: 0/0
 23960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23962 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23964 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23965 ;;Total ram usage:        9 bytes
 23966 ;; Hardware stack levels used:    1
 23967 ;; Hardware stack levels required when called:   14
 23968 ;; This function calls:
 23969 ;;		___fldiv
 23970 ;;		___flmul
 23971 ;;		___fltol
 23972 ;;		___xxtofl
 23973 ;;		_motor_schedule_command
 23974 ;; This function is called by:
 23975 ;;		_encoder_statemachine
 23976 ;; This function uses a non-reentrant model
 23977 ;;
 23978                           
 23979                           	psect	text97
 23980  0118FC                     __ptext97:
 23981                           	opt stack 0
 23982  0118FC                     _motor_arc_move:
 23983                           	opt stack 15
 23984                           
 23985                           ;incstack = 0
 23986                           ;motor_arc_move@direction stored from wreg
 23987  0118FC  0100               	movlb	0	; () banked
 23988  0118FE  6FAB               	movwf	motor_arc_move@direction& (0+255),b
 23989                           
 23990                           ;motor.c: 715: float arc_in_steps;;motor.c: 717: arc_in_steps = (float) os.arc_size;
 23991  011900  C18D  F060         	movff	_os+28,___xxtofl@val	;volatile
 23992  011904  C18E  F061         	movff	_os+29,___xxtofl@val+1	;volatile
 23993  011908  C18F  F062         	movff	_os+30,___xxtofl@val+2	;volatile
 23994  01190C  C190  F063         	movff	_os+31,___xxtofl@val+3	;volatile
 23995  011910  0E01               	movlw	1
 23996  011912  EC34  F081         	call	___xxtofl
 23997  011916  C060  F0AC         	movff	?___xxtofl,motor_arc_move@arc_in_steps
 23998  01191A  C061  F0AD         	movff	?___xxtofl+1,motor_arc_move@arc_in_steps+1
 23999  01191E  C062  F0AE         	movff	?___xxtofl+2,motor_arc_move@arc_in_steps+2
 24000  011922  C063  F0AF         	movff	?___xxtofl+3,motor_arc_move@arc_in_steps+3
 24001                           
 24002                           ;motor.c: 718: arc_in_steps *= (float) config.full_circle_in_steps;
 24003  011926  C0AC  F06E         	movff	motor_arc_move@arc_in_steps,___flmul@b
 24004  01192A  C0AD  F06F         	movff	motor_arc_move@arc_in_steps+1,___flmul@b+1
 24005  01192E  C0AE  F070         	movff	motor_arc_move@arc_in_steps+2,___flmul@b+2
 24006  011932  C0AF  F071         	movff	motor_arc_move@arc_in_steps+3,___flmul@b+3
 24007  011936  C1A1  F060         	movff	_config,___xxtofl@val
 24008  01193A  C1A2  F061         	movff	_config+1,___xxtofl@val+1
 24009  01193E  C1A3  F062         	movff	_config+2,___xxtofl@val+2
 24010  011942  C1A4  F063         	movff	_config+3,___xxtofl@val+3
 24011  011946  0E00               	movlw	0
 24012  011948  EC34  F081         	call	___xxtofl
 24013  01194C  C060  F072         	movff	?___xxtofl,___flmul@a
 24014  011950  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 24015  011954  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 24016  011958  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 24017  01195C  EC1E  F066         	call	___flmul	;wreg free
 24018  011960  C06E  F0AC         	movff	?___flmul,motor_arc_move@arc_in_steps
 24019  011964  C06F  F0AD         	movff	?___flmul+1,motor_arc_move@arc_in_steps+1
 24020  011968  C070  F0AE         	movff	?___flmul+2,motor_arc_move@arc_in_steps+2
 24021  01196C  C071  F0AF         	movff	?___flmul+3,motor_arc_move@arc_in_steps+3
 24022                           
 24023                           ;motor.c: 719: arc_in_steps /= (float) 36000;
 24024  011970  C0AC  F06E         	movff	motor_arc_move@arc_in_steps,___fldiv@b
 24025  011974  C0AD  F06F         	movff	motor_arc_move@arc_in_steps+1,___fldiv@b+1
 24026  011978  C0AE  F070         	movff	motor_arc_move@arc_in_steps+2,___fldiv@b+2
 24027  01197C  C0AF  F071         	movff	motor_arc_move@arc_in_steps+3,___fldiv@b+3
 24028  011980  0E00               	movlw	0
 24029  011982  0100               	movlb	0	; () banked
 24030  011984  6F72               	movwf	___fldiv@a& (0+255),b
 24031  011986  0EA0               	movlw	160
 24032  011988  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 24033  01198A  0E0C               	movlw	12
 24034  01198C  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 24035  01198E  0E47               	movlw	71
 24036  011990  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 24037  011992  ECD6  F06D         	call	___fldiv	;wreg free
 24038  011996  C06E  F0AC         	movff	?___fldiv,motor_arc_move@arc_in_steps
 24039  01199A  C06F  F0AD         	movff	?___fldiv+1,motor_arc_move@arc_in_steps+1
 24040  01199E  C070  F0AE         	movff	?___fldiv+2,motor_arc_move@arc_in_steps+2
 24041  0119A2  C071  F0AF         	movff	?___fldiv+3,motor_arc_move@arc_in_steps+3
 24042                           
 24043                           ;motor.c: 720: motor_schedule_command(direction, (uint32_t ) arc_in_steps, os.arc_speed)
      +                          ;
 24044  0119A6  C0AC  F060         	movff	motor_arc_move@arc_in_steps,___fltol@f1
 24045  0119AA  C0AD  F061         	movff	motor_arc_move@arc_in_steps+1,___fltol@f1+1
 24046  0119AE  C0AE  F062         	movff	motor_arc_move@arc_in_steps+2,___fltol@f1+2
 24047  0119B2  C0AF  F063         	movff	motor_arc_move@arc_in_steps+3,___fltol@f1+3
 24048  0119B6  EC8A  F090         	call	___fltol	;wreg free
 24049  0119BA  C060  F0A7         	movff	?___fltol,_motor_arc_move$8784
 24050  0119BE  C061  F0A8         	movff	?___fltol+1,_motor_arc_move$8784+1
 24051  0119C2  C062  F0A9         	movff	?___fltol+2,_motor_arc_move$8784+2
 24052  0119C6  C063  F0AA         	movff	?___fltol+3,_motor_arc_move$8784+3
 24053                           
 24054                           ;motor.c: 720: motor_schedule_command(direction, (uint32_t ) arc_in_steps, os.arc_speed)
      +                          ;
 24055  0119CA  C0A7  F0A0         	movff	_motor_arc_move$8784,motor_schedule_command@distance_in_steps
 24056  0119CE  C0A8  F0A1         	movff	_motor_arc_move$8784+1,motor_schedule_command@distance_in_steps+1
 24057  0119D2  C0A9  F0A2         	movff	_motor_arc_move$8784+2,motor_schedule_command@distance_in_steps+2
 24058  0119D6  C0AA  F0A3         	movff	_motor_arc_move$8784+3,motor_schedule_command@distance_in_steps+3
 24059  0119DA  C191  F0A4         	movff	_os+32,motor_schedule_command@speed	;volatile
 24060  0119DE  C192  F0A5         	movff	_os+33,motor_schedule_command@speed+1	;volatile
 24061  0119E2  0100               	movlb	0	; () banked
 24062  0119E4  51AB               	movf	motor_arc_move@direction& (0+255),w,b
 24063  0119E6  EC89  F097         	call	_motor_schedule_command
 24064  0119EA  0012               	return		;funcret
 24065  0119EC                     __end_of_motor_arc_move:
 24066                           	opt stack 0
 24067                           tblptru	equ	0xFF8
 24068                           tblptrh	equ	0xFF7
 24069                           tblptrl	equ	0xFF6
 24070                           tablat	equ	0xFF5
 24071                           prodh	equ	0xFF4
 24072                           prodl	equ	0xFF3
 24073                           intcon	equ	0xFF2
 24074                           postinc0	equ	0xFEE
 24075                           wreg	equ	0xFE8
 24076                           indf1	equ	0xFE7
 24077                           postinc1	equ	0xFE6
 24078                           postdec1	equ	0xFE5
 24079                           plusw1	equ	0xFE3
 24080                           fsr1h	equ	0xFE2
 24081                           fsr1l	equ	0xFE1
 24082                           indf2	equ	0xFDF
 24083                           postinc2	equ	0xFDE
 24084                           postdec2	equ	0xFDD
 24085                           plusw2	equ	0xFDB
 24086                           fsr2h	equ	0xFDA
 24087                           fsr2l	equ	0xFD9
 24088                           status	equ	0xFD8
 24089                           
 24090 ;; *************** function __encoder_next_setup_stepsize *****************
 24091 ;; Defined at:
 24092 ;;		line 24 in file "encoder.c"
 24093 ;; Parameters:    Size  Location     Type
 24094 ;;  old_stepsize    2    0[BANK0 ] unsigned int 
 24095 ;; Auto vars:     Size  Location     Type
 24096 ;;		None
 24097 ;; Return value:  Size  Location     Type
 24098 ;;                  2    0[BANK0 ] unsigned int 
 24099 ;; Registers used:
 24100 ;;		wreg, status,2, status,0
 24101 ;; Tracked objects:
 24102 ;;		On entry : 0/0
 24103 ;;		On exit  : 0/0
 24104 ;;		Unchanged: 0/0
 24105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24106 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24108 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24109 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24110 ;;Total ram usage:        4 bytes
 24111 ;; Hardware stack levels used:    1
 24112 ;; Hardware stack levels required when called:   10
 24113 ;; This function calls:
 24114 ;;		Nothing
 24115 ;; This function is called by:
 24116 ;;		_encoder_statemachine
 24117 ;; This function uses a non-reentrant model
 24118 ;;
 24119                           
 24120                           	psect	text98
 24121  013E54                     __ptext98:
 24122                           	opt stack 0
 24123  013E54                     __encoder_next_setup_stepsize:
 24124                           	opt stack 19
 24125                           
 24126                           ;encoder.c: 26: switch(old_stepsize)
 24127                           
 24128                           ;incstack = 0
 24129  013E54  D01A               	goto	l2602
 24130  013E56                     
 24131                           ;encoder.c: 29: return 100;
 24132  013E56  0E00               	movlw	0
 24133  013E58  0100               	movlb	0	; () banked
 24134  013E5A  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24135  013E5C  0E64               	movlw	100
 24136  013E5E  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24137                           
 24138                           ; BSR set to: 0
 24139  013E60  0012               	return	
 24140  013E62                     
 24141                           ; BSR set to: 0
 24142                           ;encoder.c: 31: return 10;
 24143                           
 24144                           ; BSR set to: 0
 24145  013E62  0E00               	movlw	0
 24146  013E64  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24147  013E66  0E0A               	movlw	10
 24148  013E68  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24149                           
 24150                           ; BSR set to: 0
 24151  013E6A  0012               	return	
 24152  013E6C                     
 24153                           ; BSR set to: 0
 24154                           ;encoder.c: 33: return 1;
 24155                           
 24156                           ; BSR set to: 0
 24157  013E6C  0E00               	movlw	0
 24158  013E6E  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24159  013E70  0E01               	movlw	1
 24160  013E72  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24161                           
 24162                           ; BSR set to: 0
 24163  013E74  0012               	return	
 24164  013E76                     
 24165                           ; BSR set to: 0
 24166                           ;encoder.c: 35: return 1000;
 24167                           
 24168                           ; BSR set to: 0
 24169  013E76  0E03               	movlw	3
 24170  013E78  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24171  013E7A  0EE8               	movlw	232
 24172  013E7C  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24173                           
 24174                           ; BSR set to: 0
 24175  013E7E  0012               	return	
 24176  013E80                     
 24177                           ; BSR set to: 0
 24178                           ;encoder.c: 37: return 100;
 24179                           
 24180                           ; BSR set to: 0
 24181  013E80  0E00               	movlw	0
 24182  013E82  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24183  013E84  0E64               	movlw	100
 24184  013E86  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24185                           
 24186                           ; BSR set to: 0
 24187                           ;encoder.c: 38: }
 24188                           
 24189                           ; BSR set to: 0
 24190  013E88  0012               	return	
 24191  013E8A                     l2602:
 24192                           
 24193                           ; BSR set to: 0
 24194  013E8A  C060  F062         	movff	__encoder_next_setup_stepsize@old_stepsize,??__encoder_next_setup_stepsize
 24195  013E8E  C061  F063         	movff	__encoder_next_setup_stepsize@old_stepsize+1,??__encoder_next_setup_stepsize+1
 24196                           
 24197                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 24198                           ; Switch size 1, requested type "space"
 24199                           ; Number of cases is 2, Range of values is 0 to 3
 24200                           ; switch strategies available:
 24201                           ; Name         Instructions Cycles
 24202                           ; simple_byte            7     4 (average)
 24203                           ;	Chosen strategy is simple_byte
 24204  013E92  0100               	movlb	0	; () banked
 24205  013E94  5163               	movf	(??__encoder_next_setup_stepsize+1)& (0+255),w,b
 24206  013E96  0A00               	xorlw	0	; case 0
 24207  013E98  B4D8               	btfsc	status,2,c
 24208  013E9A  D004               	goto	l19363
 24209  013E9C  0A03               	xorlw	3	; case 3
 24210  013E9E  B4D8               	btfsc	status,2,c
 24211  013EA0  D00C               	goto	l19365
 24212  013EA2  D7EE               	goto	l2608
 24213  013EA4                     l19363:
 24214                           
 24215                           ; BSR set to: 0
 24216                           ; Switch size 1, requested type "space"
 24217                           ; Number of cases is 3, Range of values is 1 to 100
 24218                           ; switch strategies available:
 24219                           ; Name         Instructions Cycles
 24220                           ; simple_byte           10     6 (average)
 24221                           ;	Chosen strategy is simple_byte
 24222  013EA4  5162               	movf	??__encoder_next_setup_stepsize& (0+255),w,b
 24223  013EA6  0A01               	xorlw	1	; case 1
 24224  013EA8  B4D8               	btfsc	status,2,c
 24225  013EAA  D7E5               	goto	l2607
 24226  013EAC  0A0B               	xorlw	11	; case 10
 24227  013EAE  B4D8               	btfsc	status,2,c
 24228  013EB0  D7DD               	goto	l2606
 24229  013EB2  0A6E               	xorlw	110	; case 100
 24230  013EB4  B4D8               	btfsc	status,2,c
 24231  013EB6  D7D5               	goto	l2605
 24232  013EB8  D7E3               	goto	l2608
 24233  013EBA                     l19365:
 24234                           
 24235                           ; BSR set to: 0
 24236                           ; Switch size 1, requested type "space"
 24237                           ; Number of cases is 1, Range of values is 232 to 232
 24238                           ; switch strategies available:
 24239                           ; Name         Instructions Cycles
 24240                           ; simple_byte            4     3 (average)
 24241                           ;	Chosen strategy is simple_byte
 24242  013EBA  5162               	movf	??__encoder_next_setup_stepsize& (0+255),w,b
 24243  013EBC  0AE8               	xorlw	232	; case 232
 24244  013EBE  B4D8               	btfsc	status,2,c
 24245  013EC0  D7CA               	goto	l2603
 24246  013EC2  D7DE               	goto	l2608
 24247  013EC4                     __end_of__encoder_next_setup_stepsize:
 24248                           	opt stack 0
 24249                           tblptru	equ	0xFF8
 24250                           tblptrh	equ	0xFF7
 24251                           tblptrl	equ	0xFF6
 24252                           tablat	equ	0xFF5
 24253                           prodh	equ	0xFF4
 24254                           prodl	equ	0xFF3
 24255                           intcon	equ	0xFF2
 24256                           postinc0	equ	0xFEE
 24257                           wreg	equ	0xFE8
 24258                           indf1	equ	0xFE7
 24259                           postinc1	equ	0xFE6
 24260                           postdec1	equ	0xFE5
 24261                           plusw1	equ	0xFE3
 24262                           fsr1h	equ	0xFE2
 24263                           fsr1l	equ	0xFE1
 24264                           indf2	equ	0xFDF
 24265                           postinc2	equ	0xFDE
 24266                           postdec2	equ	0xFDD
 24267                           plusw2	equ	0xFDB
 24268                           fsr2h	equ	0xFDA
 24269                           fsr2l	equ	0xFD9
 24270                           status	equ	0xFD8
 24271                           
 24272 ;; *************** function __encoder_next_divide_step_size *****************
 24273 ;; Defined at:
 24274 ;;		line 41 in file "encoder.c"
 24275 ;; Parameters:    Size  Location     Type
 24276 ;;  old_stepsize    1    wreg     unsigned char 
 24277 ;; Auto vars:     Size  Location     Type
 24278 ;;  old_stepsize    1    0[BANK0 ] unsigned char 
 24279 ;; Return value:  Size  Location     Type
 24280 ;;                  1    wreg      unsigned char 
 24281 ;; Registers used:
 24282 ;;		wreg, status,2, status,0
 24283 ;; Tracked objects:
 24284 ;;		On entry : 0/0
 24285 ;;		On exit  : 0/0
 24286 ;;		Unchanged: 0/0
 24287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24289 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24291 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24292 ;;Total ram usage:        1 bytes
 24293 ;; Hardware stack levels used:    1
 24294 ;; Hardware stack levels required when called:   10
 24295 ;; This function calls:
 24296 ;;		Nothing
 24297 ;; This function is called by:
 24298 ;;		_encoder_statemachine
 24299 ;; This function uses a non-reentrant model
 24300 ;;
 24301                           
 24302                           	psect	text99
 24303  015458                     __ptext99:
 24304                           	opt stack 0
 24305  015458                     __encoder_next_divide_step_size:
 24306                           	opt stack 19
 24307                           
 24308                           ; BSR set to: 0
 24309                           ;incstack = 0
 24310                           ;__encoder_next_divide_step_size@old_stepsize stored from wreg
 24311  015458  0100               	movlb	0	; () banked
 24312  01545A  6F60               	movwf	__encoder_next_divide_step_size@old_stepsize& (0+255),b
 24313                           
 24314                           ;encoder.c: 43: switch(old_stepsize)
 24315  01545C  D008               	goto	l2612
 24316  01545E                     
 24317                           ;encoder.c: 46: return 10;
 24318  01545E  0E0A               	movlw	10
 24319  015460  0012               	return	
 24320  015462                     
 24321                           ;encoder.c: 48: return 1;
 24322  015462  0E01               	movlw	1
 24323  015464  0012               	return	
 24324  015466                     
 24325                           ;encoder.c: 50: return 100;
 24326  015466  0E64               	movlw	100
 24327  015468  0012               	return	
 24328  01546A                     
 24329                           ;encoder.c: 52: return 1;
 24330  01546A  0E01               	movlw	1
 24331                           
 24332                           ;encoder.c: 53: }
 24333  01546C  0012               	return	
 24334  01546E                     l2612:
 24335  01546E  0100               	movlb	0	; () banked
 24336  015470  5160               	movf	__encoder_next_divide_step_size@old_stepsize& (0+255),w,b
 24337                           
 24338                           ; Switch size 1, requested type "space"
 24339                           ; Number of cases is 3, Range of values is 1 to 100
 24340                           ; switch strategies available:
 24341                           ; Name         Instructions Cycles
 24342                           ; simple_byte           10     6 (average)
 24343                           ;	Chosen strategy is simple_byte
 24344  015472  0A01               	xorlw	1	; case 1
 24345  015474  B4D8               	btfsc	status,2,c
 24346  015476  D7F7               	goto	l2616
 24347  015478  0A0B               	xorlw	11	; case 10
 24348  01547A  B4D8               	btfsc	status,2,c
 24349  01547C  D7F2               	goto	l2615
 24350  01547E  0A6E               	xorlw	110	; case 100
 24351  015480  B4D8               	btfsc	status,2,c
 24352  015482  D7ED               	goto	l2613
 24353  015484  D7F2               	goto	l2617
 24354  015486                     __end_of__encoder_next_divide_step_size:
 24355                           	opt stack 0
 24356                           tblptru	equ	0xFF8
 24357                           tblptrh	equ	0xFF7
 24358                           tblptrl	equ	0xFF6
 24359                           tablat	equ	0xFF5
 24360                           prodh	equ	0xFF4
 24361                           prodl	equ	0xFF3
 24362                           intcon	equ	0xFF2
 24363                           postinc0	equ	0xFEE
 24364                           wreg	equ	0xFE8
 24365                           indf1	equ	0xFE7
 24366                           postinc1	equ	0xFE6
 24367                           postdec1	equ	0xFE5
 24368                           plusw1	equ	0xFE3
 24369                           fsr1h	equ	0xFE2
 24370                           fsr1l	equ	0xFE1
 24371                           indf2	equ	0xFDF
 24372                           postinc2	equ	0xFDE
 24373                           postdec2	equ	0xFDD
 24374                           plusw2	equ	0xFDB
 24375                           fsr2h	equ	0xFDA
 24376                           fsr2l	equ	0xFD9
 24377                           status	equ	0xFD8
 24378                           
 24379 ;; *************** function __encoder_next_arc_step_size *****************
 24380 ;; Defined at:
 24381 ;;		line 56 in file "encoder.c"
 24382 ;; Parameters:    Size  Location     Type
 24383 ;;  old_stepsize    2    0[BANK0 ] unsigned int 
 24384 ;; Auto vars:     Size  Location     Type
 24385 ;;		None
 24386 ;; Return value:  Size  Location     Type
 24387 ;;                  2    0[BANK0 ] unsigned int 
 24388 ;; Registers used:
 24389 ;;		wreg, status,2, status,0
 24390 ;; Tracked objects:
 24391 ;;		On entry : 0/0
 24392 ;;		On exit  : 0/0
 24393 ;;		Unchanged: 0/0
 24394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24395 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24397 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24398 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24399 ;;Total ram usage:        4 bytes
 24400 ;; Hardware stack levels used:    1
 24401 ;; Hardware stack levels required when called:   10
 24402 ;; This function calls:
 24403 ;;		Nothing
 24404 ;; This function is called by:
 24405 ;;		_encoder_statemachine
 24406 ;; This function uses a non-reentrant model
 24407 ;;
 24408                           
 24409                           	psect	text100
 24410  013EC4                     __ptext100:
 24411                           	opt stack 0
 24412  013EC4                     __encoder_next_arc_step_size:
 24413                           	opt stack 19
 24414                           
 24415                           ;encoder.c: 58: switch(old_stepsize)
 24416                           
 24417                           ;incstack = 0
 24418  013EC4  D01A               	goto	l2621
 24419  013EC6                     
 24420                           ;encoder.c: 61: return 100;
 24421  013EC6  0E00               	movlw	0
 24422  013EC8  0100               	movlb	0	; () banked
 24423  013ECA  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24424  013ECC  0E64               	movlw	100
 24425  013ECE  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24426                           
 24427                           ; BSR set to: 0
 24428  013ED0  0012               	return	
 24429  013ED2                     
 24430                           ; BSR set to: 0
 24431                           ;encoder.c: 63: return 10;
 24432                           
 24433                           ; BSR set to: 0
 24434  013ED2  0E00               	movlw	0
 24435  013ED4  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24436  013ED6  0E0A               	movlw	10
 24437  013ED8  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24438                           
 24439                           ; BSR set to: 0
 24440  013EDA  0012               	return	
 24441  013EDC                     
 24442                           ; BSR set to: 0
 24443                           ;encoder.c: 65: return 1;
 24444                           
 24445                           ; BSR set to: 0
 24446  013EDC  0E00               	movlw	0
 24447  013EDE  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24448  013EE0  0E01               	movlw	1
 24449  013EE2  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24450                           
 24451                           ; BSR set to: 0
 24452  013EE4  0012               	return	
 24453  013EE6                     
 24454                           ; BSR set to: 0
 24455                           ;encoder.c: 67: return 1000;
 24456                           
 24457                           ; BSR set to: 0
 24458  013EE6  0E03               	movlw	3
 24459  013EE8  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24460  013EEA  0EE8               	movlw	232
 24461  013EEC  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24462                           
 24463                           ; BSR set to: 0
 24464  013EEE  0012               	return	
 24465  013EF0                     
 24466                           ; BSR set to: 0
 24467                           ;encoder.c: 69: return 100;
 24468                           
 24469                           ; BSR set to: 0
 24470  013EF0  0E00               	movlw	0
 24471  013EF2  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24472  013EF4  0E64               	movlw	100
 24473  013EF6  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24474                           
 24475                           ; BSR set to: 0
 24476                           ;encoder.c: 70: }
 24477                           
 24478                           ; BSR set to: 0
 24479  013EF8  0012               	return	
 24480  013EFA                     l2621:
 24481                           
 24482                           ; BSR set to: 0
 24483  013EFA  C060  F062         	movff	__encoder_next_arc_step_size@old_stepsize,??__encoder_next_arc_step_size
 24484  013EFE  C061  F063         	movff	__encoder_next_arc_step_size@old_stepsize+1,??__encoder_next_arc_step_size+1
 24485                           
 24486                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 24487                           ; Switch size 1, requested type "space"
 24488                           ; Number of cases is 2, Range of values is 0 to 3
 24489                           ; switch strategies available:
 24490                           ; Name         Instructions Cycles
 24491                           ; simple_byte            7     4 (average)
 24492                           ;	Chosen strategy is simple_byte
 24493  013F02  0100               	movlb	0	; () banked
 24494  013F04  5163               	movf	(??__encoder_next_arc_step_size+1)& (0+255),w,b
 24495  013F06  0A00               	xorlw	0	; case 0
 24496  013F08  B4D8               	btfsc	status,2,c
 24497  013F0A  D004               	goto	l19367
 24498  013F0C  0A03               	xorlw	3	; case 3
 24499  013F0E  B4D8               	btfsc	status,2,c
 24500  013F10  D00C               	goto	l19369
 24501  013F12  D7EE               	goto	l2627
 24502  013F14                     l19367:
 24503                           
 24504                           ; BSR set to: 0
 24505                           ; Switch size 1, requested type "space"
 24506                           ; Number of cases is 3, Range of values is 1 to 100
 24507                           ; switch strategies available:
 24508                           ; Name         Instructions Cycles
 24509                           ; simple_byte           10     6 (average)
 24510                           ;	Chosen strategy is simple_byte
 24511  013F14  5162               	movf	??__encoder_next_arc_step_size& (0+255),w,b
 24512  013F16  0A01               	xorlw	1	; case 1
 24513  013F18  B4D8               	btfsc	status,2,c
 24514  013F1A  D7E5               	goto	l2626
 24515  013F1C  0A0B               	xorlw	11	; case 10
 24516  013F1E  B4D8               	btfsc	status,2,c
 24517  013F20  D7DD               	goto	l2625
 24518  013F22  0A6E               	xorlw	110	; case 100
 24519  013F24  B4D8               	btfsc	status,2,c
 24520  013F26  D7D5               	goto	l2624
 24521  013F28  D7E3               	goto	l2627
 24522  013F2A                     l19369:
 24523                           
 24524                           ; BSR set to: 0
 24525                           ; Switch size 1, requested type "space"
 24526                           ; Number of cases is 1, Range of values is 232 to 232
 24527                           ; switch strategies available:
 24528                           ; Name         Instructions Cycles
 24529                           ; simple_byte            4     3 (average)
 24530                           ;	Chosen strategy is simple_byte
 24531  013F2A  5162               	movf	??__encoder_next_arc_step_size& (0+255),w,b
 24532  013F2C  0AE8               	xorlw	232	; case 232
 24533  013F2E  B4D8               	btfsc	status,2,c
 24534  013F30  D7CA               	goto	l2622
 24535  013F32  D7DE               	goto	l2627
 24536  013F34                     __end_of__encoder_next_arc_step_size:
 24537                           	opt stack 0
 24538                           tblptru	equ	0xFF8
 24539                           tblptrh	equ	0xFF7
 24540                           tblptrl	equ	0xFF6
 24541                           tablat	equ	0xFF5
 24542                           prodh	equ	0xFF4
 24543                           prodl	equ	0xFF3
 24544                           intcon	equ	0xFF2
 24545                           postinc0	equ	0xFEE
 24546                           wreg	equ	0xFE8
 24547                           indf1	equ	0xFE7
 24548                           postinc1	equ	0xFE6
 24549                           postdec1	equ	0xFE5
 24550                           plusw1	equ	0xFE3
 24551                           fsr1h	equ	0xFE2
 24552                           fsr1l	equ	0xFE1
 24553                           indf2	equ	0xFDF
 24554                           postinc2	equ	0xFDE
 24555                           postdec2	equ	0xFDD
 24556                           plusw2	equ	0xFDB
 24557                           fsr2h	equ	0xFDA
 24558                           fsr2l	equ	0xFD9
 24559                           status	equ	0xFD8
 24560                           
 24561 ;; *************** function __divide_jump_size_increment *****************
 24562 ;; Defined at:
 24563 ;;		line 73 in file "encoder.c"
 24564 ;; Parameters:    Size  Location     Type
 24565 ;;		None
 24566 ;; Auto vars:     Size  Location     Type
 24567 ;;		None
 24568 ;; Return value:  Size  Location     Type
 24569 ;;                  1    wreg      void 
 24570 ;; Registers used:
 24571 ;;		wreg, status,2, status,0
 24572 ;; Tracked objects:
 24573 ;;		On entry : 0/0
 24574 ;;		On exit  : 0/0
 24575 ;;		Unchanged: 0/0
 24576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24579 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24580 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24581 ;;Total ram usage:        1 bytes
 24582 ;; Hardware stack levels used:    1
 24583 ;; Hardware stack levels required when called:   10
 24584 ;; This function calls:
 24585 ;;		Nothing
 24586 ;; This function is called by:
 24587 ;;		_encoder_statemachine
 24588 ;; This function uses a non-reentrant model
 24589 ;;
 24590                           
 24591                           	psect	text101
 24592  01508A                     __ptext101:
 24593                           	opt stack 0
 24594  01508A                     __divide_jump_size_increment:
 24595                           	opt stack 19
 24596                           
 24597                           ;encoder.c: 75: ++os.divide_jump_size;
 24598                           
 24599                           ; BSR set to: 0
 24600                           ;incstack = 0
 24601  01508A  0101               	movlb	1	; () banked
 24602  01508C  4B89               	infsnz	(_os+24)& (0+255),f,b	;volatile
 24603  01508E  2B8A               	incf	(_os+25)& (0+255),f,b	;volatile
 24604                           
 24605                           ; BSR set to: 1
 24606                           ;encoder.c: 76: if(os.divide_jump_size==0)
 24607  015090  5189               	movf	(_os+24)& (0+255),w,b	;volatile
 24608  015092  118A               	iorwf	(_os+25)& (0+255),w,b	;volatile
 24609  015094  A4D8               	btfss	status,2,c
 24610  015096  D004               	goto	l2631
 24611                           
 24612                           ; BSR set to: 1
 24613                           ;encoder.c: 77: os.divide_jump_size = 1;
 24614  015098  0E00               	movlw	0
 24615  01509A  6F8A               	movwf	(_os+25)& (0+255),b	;volatile
 24616  01509C  0E01               	movlw	1
 24617  01509E  6F89               	movwf	(_os+24)& (0+255),b	;volatile
 24618  0150A0                     l2631:
 24619                           
 24620                           ; BSR set to: 1
 24621                           ;encoder.c: 78: if(os.divide_jump_size>=os.division)
 24622                           
 24623                           ; BSR set to: 1
 24624  0150A0  5184               	movf	(_os+19)& (0+255),w,b	;volatile
 24625  0150A2  5D89               	subwf	(_os+24)& (0+255),w,b	;volatile
 24626  0150A4  518A               	movf	(_os+25)& (0+255),w,b	;volatile
 24627  0150A6  0A80               	xorlw	128
 24628  0150A8  0100               	movlb	0	; () banked
 24629  0150AA  6F60               	movwf	??__divide_jump_size_increment& (0+255),b
 24630  0150AC  0101               	movlb	1	; () banked
 24631  0150AE  5185               	movf	(_os+20)& (0+255),w,b	;volatile
 24632  0150B0  0A80               	xorlw	128
 24633  0150B2  0100               	movlb	0	; () banked
 24634  0150B4  5960               	subwfb	??__divide_jump_size_increment& (0+255),w,b
 24635  0150B6  A0D8               	btfss	status,0,c
 24636  0150B8  0012               	return	
 24637                           
 24638                           ; BSR set to: 0
 24639                           ;encoder.c: 79: os.divide_jump_size = os.division - 1;
 24640  0150BA  0EFF               	movlw	255
 24641  0150BC  0101               	movlb	1	; () banked
 24642  0150BE  2584               	addwf	(_os+19)& (0+255),w,b	;volatile
 24643  0150C0  6F89               	movwf	(_os+24)& (0+255),b	;volatile
 24644  0150C2  0EFF               	movlw	255
 24645  0150C4  2185               	addwfc	(_os+20)& (0+255),w,b	;volatile
 24646  0150C6  6F8A               	movwf	(_os+25)& (0+255),b	;volatile
 24647  0150C8  0012               	return	
 24648  0150CA                     __end_of__divide_jump_size_increment:
 24649                           	opt stack 0
 24650                           tblptru	equ	0xFF8
 24651                           tblptrh	equ	0xFF7
 24652                           tblptrl	equ	0xFF6
 24653                           tablat	equ	0xFF5
 24654                           prodh	equ	0xFF4
 24655                           prodl	equ	0xFF3
 24656                           intcon	equ	0xFF2
 24657                           postinc0	equ	0xFEE
 24658                           wreg	equ	0xFE8
 24659                           indf1	equ	0xFE7
 24660                           postinc1	equ	0xFE6
 24661                           postdec1	equ	0xFE5
 24662                           plusw1	equ	0xFE3
 24663                           fsr1h	equ	0xFE2
 24664                           fsr1l	equ	0xFE1
 24665                           indf2	equ	0xFDF
 24666                           postinc2	equ	0xFDE
 24667                           postdec2	equ	0xFDD
 24668                           plusw2	equ	0xFDB
 24669                           fsr2h	equ	0xFDA
 24670                           fsr2l	equ	0xFD9
 24671                           status	equ	0xFD8
 24672                           
 24673 ;; *************** function __divide_jump_size_decrement *****************
 24674 ;; Defined at:
 24675 ;;		line 82 in file "encoder.c"
 24676 ;; Parameters:    Size  Location     Type
 24677 ;;		None
 24678 ;; Auto vars:     Size  Location     Type
 24679 ;;		None
 24680 ;; Return value:  Size  Location     Type
 24681 ;;                  1    wreg      void 
 24682 ;; Registers used:
 24683 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24684 ;; Tracked objects:
 24685 ;;		On entry : 0/0
 24686 ;;		On exit  : 0/0
 24687 ;;		Unchanged: 0/0
 24688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24691 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24692 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24693 ;;Total ram usage:        3 bytes
 24694 ;; Hardware stack levels used:    1
 24695 ;; Hardware stack levels required when called:   10
 24696 ;; This function calls:
 24697 ;;		Nothing
 24698 ;; This function is called by:
 24699 ;;		_encoder_statemachine
 24700 ;; This function uses a non-reentrant model
 24701 ;;
 24702                           
 24703                           	psect	text102
 24704  013FA2                     __ptext102:
 24705                           	opt stack 0
 24706  013FA2                     __divide_jump_size_decrement:
 24707                           	opt stack 19
 24708                           
 24709                           ;encoder.c: 84: --os.divide_jump_size;
 24710                           
 24711                           ;incstack = 0
 24712  013FA2  0101               	movlb	1	; () banked
 24713  013FA4  0789               	decf	(_os+24)& (0+255),f,b	;volatile
 24714  013FA6  A0D8               	btfss	status,0,c
 24715  013FA8  078A               	decf	(_os+25)& (0+255),f,b	;volatile
 24716                           
 24717                           ; BSR set to: 1
 24718                           ;encoder.c: 85: if(os.divide_jump_size==0)
 24719  013FAA  5189               	movf	(_os+24)& (0+255),w,b	;volatile
 24720  013FAC  118A               	iorwf	(_os+25)& (0+255),w,b	;volatile
 24721  013FAE  A4D8               	btfss	status,2,c
 24722  013FB0  D002               	goto	l2636
 24723                           
 24724                           ; BSR set to: 1
 24725                           ;encoder.c: 86: os.divide_jump_size = -1;
 24726  013FB2  6989               	setf	(_os+24)& (0+255),b	;volatile
 24727  013FB4  698A               	setf	(_os+25)& (0+255),b	;volatile
 24728  013FB6                     l2636:
 24729                           
 24730                           ; BSR set to: 1
 24731                           ;encoder.c: 87: if(os.divide_jump_size<=(-os.division))
 24732                           
 24733                           ; BSR set to: 1
 24734  013FB6  EE21  F084         	lfsr	2,_os+19	;volatile
 24735  013FBA  CFDE F060          	movff	postinc2,??__divide_jump_size_decrement
 24736  013FBE  CFDD F061          	movff	postdec2,??__divide_jump_size_decrement+1
 24737  013FC2  0100               	movlb	0	; () banked
 24738  013FC4  1F60               	comf	??__divide_jump_size_decrement& (0+255),f,b
 24739  013FC6  1F61               	comf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 24740  013FC8  4B60               	infsnz	??__divide_jump_size_decrement& (0+255),f,b
 24741  013FCA  2B61               	incf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 24742  013FCC  0101               	movlb	1	; () banked
 24743  013FCE  5189               	movf	(_os+24)& (0+255),w,b	;volatile
 24744  013FD0  0100               	movlb	0	; () banked
 24745  013FD2  5D60               	subwf	??__divide_jump_size_decrement& (0+255),w,b
 24746  013FD4  5161               	movf	(??__divide_jump_size_decrement+1)& (0+255),w,b
 24747  013FD6  0A80               	xorlw	128
 24748  013FD8  6F62               	movwf	(??__divide_jump_size_decrement+2)& (0+255),b
 24749  013FDA  0101               	movlb	1	; () banked
 24750  013FDC  518A               	movf	(_os+25)& (0+255),w,b	;volatile
 24751  013FDE  0A80               	xorlw	128
 24752  013FE0  0100               	movlb	0	; () banked
 24753  013FE2  5962               	subwfb	(??__divide_jump_size_decrement+2)& (0+255),w,b
 24754  013FE4  A0D8               	btfss	status,0,c
 24755  013FE6  0012               	return	
 24756                           
 24757                           ; BSR set to: 0
 24758                           ;encoder.c: 88: os.divide_jump_size = 1 - os.division;
 24759  013FE8  EE21  F084         	lfsr	2,_os+19	;volatile
 24760  013FEC  CFDE F060          	movff	postinc2,??__divide_jump_size_decrement
 24761  013FF0  CFDD F061          	movff	postdec2,??__divide_jump_size_decrement+1
 24762  013FF4  1F60               	comf	??__divide_jump_size_decrement& (0+255),f,b
 24763  013FF6  1F61               	comf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 24764  013FF8  4B60               	infsnz	??__divide_jump_size_decrement& (0+255),f,b
 24765  013FFA  2B61               	incf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 24766  013FFC  0E01               	movlw	1
 24767  013FFE  2560               	addwf	??__divide_jump_size_decrement& (0+255),w,b
 24768  014000  0101               	movlb	1	; () banked
 24769  014002  6F89               	movwf	(_os+24)& (0+255),b	;volatile
 24770  014004  0E00               	movlw	0
 24771  014006  0100               	movlb	0	; () banked
 24772  014008  2161               	addwfc	(??__divide_jump_size_decrement+1)& (0+255),w,b
 24773  01400A  0101               	movlb	1	; () banked
 24774  01400C  6F8A               	movwf	(_os+25)& (0+255),b	;volatile
 24775  01400E  0012               	return	
 24776  014010                     __end_of__divide_jump_size_decrement:
 24777                           	opt stack 0
 24778                           tblptru	equ	0xFF8
 24779                           tblptrh	equ	0xFF7
 24780                           tblptrl	equ	0xFF6
 24781                           tablat	equ	0xFF5
 24782                           prodh	equ	0xFF4
 24783                           prodl	equ	0xFF3
 24784                           intcon	equ	0xFF2
 24785                           postinc0	equ	0xFEE
 24786                           wreg	equ	0xFE8
 24787                           indf1	equ	0xFE7
 24788                           postinc1	equ	0xFE6
 24789                           postdec1	equ	0xFE5
 24790                           plusw1	equ	0xFE3
 24791                           fsr1h	equ	0xFE2
 24792                           fsr1l	equ	0xFE1
 24793                           indf2	equ	0xFDF
 24794                           postinc2	equ	0xFDE
 24795                           postdec2	equ	0xFDD
 24796                           plusw2	equ	0xFDB
 24797                           fsr2h	equ	0xFDA
 24798                           fsr2l	equ	0xFD9
 24799                           status	equ	0xFD8
 24800                           
 24801 ;; *************** function _display_prepare *****************
 24802 ;; Defined at:
 24803 ;;		line 278 in file "display.c"
 24804 ;; Parameters:    Size  Location     Type
 24805 ;;		None
 24806 ;; Auto vars:     Size  Location     Type
 24807 ;;  temp           10   94[BANK0 ] unsigned char [10]
 24808 ;;  cntr            1  105[BANK0 ] unsigned char 
 24809 ;;  space           1  104[BANK0 ] unsigned char 
 24810 ;; Return value:  Size  Location     Type
 24811 ;;                  1    wreg      void 
 24812 ;; Registers used:
 24813 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24814 ;; Tracked objects:
 24815 ;;		On entry : 0/0
 24816 ;;		On exit  : 0/0
 24817 ;;		Unchanged: 0/0
 24818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24820 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24821 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24822 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24823 ;;Total ram usage:       14 bytes
 24824 ;; Hardware stack levels used:    1
 24825 ;; Hardware stack levels required when called:   15
 24826 ;; This function calls:
 24827 ;;		__display_clear
 24828 ;;		__display_itoa
 24829 ;;		__display_itoa_long
 24830 ;;		__display_padded_itoa
 24831 ;;		__display_signed_itoa
 24832 ;;		_memcpy
 24833 ;;		_motor_speed_from_index
 24834 ;;		_strlen
 24835 ;; This function is called by:
 24836 ;;		_main
 24837 ;; This function uses a non-reentrant model
 24838 ;;
 24839                           
 24840                           	psect	text103
 24841  00A330                     __ptext103:
 24842                           	opt stack 0
 24843  00A330                     _display_prepare:
 24844                           	opt stack 15
 24845                           
 24846                           ;display.c: 280: uint8_t cntr;;display.c: 281: uint8_t space;;display.c: 282: char temp[
      +                          10];;display.c: 284: switch(os.displayState & 0xF0)
 24847                           
 24848                           ;incstack = 0
 24849  00A330  EF8E  F057         	goto	l1376
 24850  00A334                     
 24851                           ;display.c: 288: memcpy(display_content, dc_main, sizeof display_content);
 24852  00A334  0E34               	movlw	low _display_content
 24853  00A336  0100               	movlb	0	; () banked
 24854  00A338  6F60               	movwf	memcpy@d1& (0+255),b
 24855  00A33A  0E02               	movlw	high _display_content
 24856  00A33C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 24857  00A33E  0E6E               	movlw	low _dc_main
 24858  00A340  6F62               	movwf	memcpy@s1& (0+255),b
 24859  00A342  0EA0               	movlw	high _dc_main
 24860  00A344  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 24861  00A346  0E00               	movlw	0
 24862  00A348  6F65               	movwf	(memcpy@n+1)& (0+255),b
 24863  00A34A  0E50               	movlw	80
 24864  00A34C  6F64               	movwf	memcpy@n& (0+255),b
 24865  00A34E  EC05  F0A2         	call	_memcpy	;wreg free
 24866                           
 24867                           ;display.c: 289: switch(os.displayState)
 24868  00A352  D00F               	goto	l1378
 24869  00A354                     
 24870                           ;display.c: 292: display_content[1][0] = '>';
 24871  00A354  0E3E               	movlw	62
 24872  00A356  0102               	movlb	2	; () banked
 24873  00A358  6F48               	movwf	(_display_content+20)& (0+255),b
 24874                           
 24875                           ;display.c: 293: break;
 24876  00A35A  EFBC  F057         	goto	l1385
 24877  00A35E                     
 24878                           ;display.c: 295: display_content[1][9] = '>';
 24879                           
 24880                           ; BSR set to: 2
 24881  00A35E  0E3E               	movlw	62
 24882  00A360  0102               	movlb	2	; () banked
 24883  00A362  6F51               	movwf	(_display_content+29)& (0+255),b
 24884                           
 24885                           ;display.c: 296: break;
 24886  00A364  EFBC  F057         	goto	l1385
 24887  00A368                     
 24888                           ;display.c: 301: display_content[2][9] = '>';
 24889                           
 24890                           ; BSR set to: 2
 24891  00A368  0E3E               	movlw	62
 24892  00A36A  0102               	movlb	2	; () banked
 24893  00A36C  6F65               	movwf	(_display_content+49)& (0+255),b
 24894                           
 24895                           ;display.c: 302: break;
 24896  00A36E  EFBC  F057         	goto	l1385
 24897  00A372                     l1378:
 24898                           
 24899                           ; BSR set to: 2
 24900  00A372  0101               	movlb	1	; () banked
 24901  00A374  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 24902                           
 24903                           ; Switch size 1, requested type "space"
 24904                           ; Number of cases is 5, Range of values is 1 to 5
 24905                           ; switch strategies available:
 24906                           ; Name         Instructions Cycles
 24907                           ; simple_byte           16     9 (average)
 24908                           ;	Chosen strategy is simple_byte
 24909  00A376  0A01               	xorlw	1	; case 1
 24910  00A378  B4D8               	btfsc	status,2,c
 24911  00A37A  D7EC               	goto	l1379
 24912  00A37C  0A03               	xorlw	3	; case 2
 24913  00A37E  B4D8               	btfsc	status,2,c
 24914  00A380  D7EE               	goto	l1381
 24915  00A382  0A01               	xorlw	1	; case 3
 24916  00A384  B4D8               	btfsc	status,2,c
 24917  00A386  D067               	goto	l1398
 24918  00A388  0A07               	xorlw	7	; case 4
 24919  00A38A  B4D8               	btfsc	status,2,c
 24920  00A38C  D7ED               	goto	l1383
 24921  00A38E  0A01               	xorlw	1	; case 5
 24922  00A390  D072               	goto	L92
 24923  00A392                     
 24924                           ;display.c: 310: memcpy(display_content, dc_setup1, sizeof display_content);
 24925                           
 24926                           ; BSR set to: 1
 24927  00A392  0E34               	movlw	low _display_content
 24928  00A394  0100               	movlb	0	; () banked
 24929  00A396  6F60               	movwf	memcpy@d1& (0+255),b
 24930  00A398  0E02               	movlw	high _display_content
 24931  00A39A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 24932  00A39C  0E1E               	movlw	low _dc_setup1
 24933  00A39E  6F62               	movwf	memcpy@s1& (0+255),b
 24934  00A3A0  0EA0               	movlw	high _dc_setup1
 24935  00A3A2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 24936  00A3A4  0E00               	movlw	0
 24937  00A3A6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 24938  00A3A8  0E50               	movlw	80
 24939  00A3AA  6F64               	movwf	memcpy@n& (0+255),b
 24940  00A3AC  EC05  F0A2         	call	_memcpy	;wreg free
 24941                           
 24942                           ;display.c: 311: _display_itoa(os.setup_step_size, 2, temp);
 24943  00A3B0  C181  F095         	movff	_os+16,__display_itoa@value	;volatile
 24944  00A3B4  C182  F096         	movff	_os+17,__display_itoa@value+1	;volatile
 24945  00A3B8  0E02               	movlw	2
 24946  00A3BA  0100               	movlb	0	; () banked
 24947  00A3BC  6F97               	movwf	__display_itoa@decimals& (0+255),b
 24948  00A3BE  0EBE               	movlw	low display_prepare@temp
 24949  00A3C0  6F98               	movwf	__display_itoa@text& (0+255),b
 24950  00A3C2  0E00               	movlw	high display_prepare@temp
 24951  00A3C4  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 24952  00A3C6  EC0D  F075         	call	__display_itoa	;wreg free
 24953                           
 24954                           ;display.c: 312: if(os.setup_step_size>999)
 24955  00A3CA  0EE8               	movlw	232
 24956  00A3CC  0101               	movlb	1	; () banked
 24957  00A3CE  5D81               	subwf	(_os+16)& (0+255),w,b	;volatile
 24958  00A3D0  0E03               	movlw	3
 24959  00A3D2  5982               	subwfb	(_os+17)& (0+255),w,b	;volatile
 24960  00A3D4  A0D8               	btfss	status,0,c
 24961  00A3D6  D002               	goto	l1387
 24962                           
 24963                           ; BSR set to: 1
 24964                           ;display.c: 313: space = 0;
 24965  00A3D8  0E00               	movlw	0
 24966  00A3DA  D001               	goto	L23
 24967  00A3DC                     l1387:
 24968                           
 24969                           ;display.c: 314: else;display.c: 315: space = 1;
 24970                           
 24971                           ; BSR set to: 0
 24972  00A3DC  0E01               	movlw	1
 24973  00A3DE                     L23:
 24974  00A3DE  0100               	movlb	0	; () banked
 24975  00A3E0  6FC8               	movwf	display_prepare@space& (0+255),b
 24976                           
 24977                           ; BSR set to: 0
 24978                           ;display.c: 316: for(cntr=0; temp[cntr]; ++cntr)
 24979  00A3E2  0E00               	movlw	0
 24980  00A3E4  6FC9               	movwf	display_prepare@cntr& (0+255),b
 24981  00A3E6  D018               	goto	l1389
 24982  00A3E8                     
 24983                           ; BSR set to: 0
 24984                           ;display.c: 317: {;display.c: 318: display_content[3][space+cntr] = temp[cntr];
 24985                           
 24986                           ; BSR set to: 0
 24987  00A3E8  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24988  00A3EA  0D01               	mullw	1
 24989  00A3EC  0EBE               	movlw	low display_prepare@temp
 24990  00A3EE  24F3               	addwf	prodl,w,c
 24991  00A3F0  6ED9               	movwf	fsr2l,c
 24992  00A3F2  0E00               	movlw	high display_prepare@temp
 24993  00A3F4  20F4               	addwfc	prodh,w,c
 24994  00A3F6  6EDA               	movwf	fsr2h,c
 24995  00A3F8  51C9               	movf	display_prepare@cntr& (0+255),w,b
 24996  00A3FA  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 24997  00A3FE  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 24998  00A400  27BC               	addwf	??_display_prepare& (0+255),f,b
 24999  00A402  0E00               	movlw	0
 25000  00A404  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25001  00A406  0E70               	movlw	low (_display_content+60)
 25002  00A408  25BC               	addwf	??_display_prepare& (0+255),w,b
 25003  00A40A  6EE1               	movwf	fsr1l,c
 25004  00A40C  0E02               	movlw	high (_display_content+60)
 25005  00A40E  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25006  00A410  6EE2               	movwf	fsr1h,c
 25007  00A412  CFDF FFE7          	movff	indf2,indf1
 25008                           
 25009                           ; BSR set to: 0
 25010  00A416  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25011  00A418                     l1389:
 25012                           
 25013                           ; BSR set to: 0
 25014                           
 25015                           ; BSR set to: 0
 25016  00A418  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25017  00A41A  0D01               	mullw	1
 25018  00A41C  0EBE               	movlw	low display_prepare@temp
 25019  00A41E  24F3               	addwf	prodl,w,c
 25020  00A420  6ED9               	movwf	fsr2l,c
 25021  00A422  0E00               	movlw	high display_prepare@temp
 25022  00A424  20F4               	addwfc	prodh,w,c
 25023  00A426  6EDA               	movwf	fsr2h,c
 25024  00A428  50DF               	movf	indf2,w,c
 25025  00A42A  A4D8               	btfss	status,2,c
 25026  00A42C  D7DD               	goto	l1390
 25027                           
 25028                           ; BSR set to: 2
 25029                           
 25030                           ; BSR set to: 2
 25031                           ;display.c: 328: }
 25032                           
 25033                           ;display.c: 327: break;
 25034                           
 25035                           ;display.c: 326: display_content[3][12] = '>';
 25036                           
 25037                           ; BSR set to: 2
 25038                           
 25039                           ;display.c: 325: case DISPLAY_STATE_SETUP1_CANCEL:
 25040                           
 25041                           ;display.c: 324: break;
 25042                           
 25043                           ;display.c: 323: display_content[2][12] = '>';
 25044                           
 25045                           ; BSR set to: 0
 25046                           
 25047                           ;display.c: 321: {;display.c: 322: case DISPLAY_STATE_SETUP1_CONFIRM:
 25048                           
 25049                           ; BSR set to: 0
 25050                           ;display.c: 319: };display.c: 320: switch(os.displayState)
 25051  00A42E  0101               	movlb	1	; () banked
 25052  00A430  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 25053                           
 25054                           ; Switch size 1, requested type "space"
 25055                           ; Number of cases is 2, Range of values is 17 to 18
 25056                           ; switch strategies available:
 25057                           ; Name         Instructions Cycles
 25058                           ; simple_byte            7     4 (average)
 25059                           ;	Chosen strategy is simple_byte
 25060  00A432  0A11               	xorlw	17	; case 17
 25061  00A434  D08E               	goto	L29
 25062  00A436                     
 25063                           ;display.c: 332: memcpy(display_content, dc_setup2, sizeof display_content);
 25064                           
 25065                           ; BSR set to: 1
 25066  00A436  0E34               	movlw	low _display_content
 25067  00A438  0100               	movlb	0	; () banked
 25068  00A43A  6F60               	movwf	memcpy@d1& (0+255),b
 25069  00A43C  0E02               	movlw	high _display_content
 25070  00A43E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25071  00A440  0ECE               	movlw	low _dc_setup2
 25072  00A442  6F62               	movwf	memcpy@s1& (0+255),b
 25073  00A444  0E9F               	movlw	high _dc_setup2
 25074  00A446  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25075  00A448  0E00               	movlw	0
 25076  00A44A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25077  00A44C  0E50               	movlw	80
 25078  00A44E  6F64               	movwf	memcpy@n& (0+255),b
 25079  00A450  EC05  F0A2         	call	_memcpy	;wreg free
 25080                           
 25081                           ;display.c: 333: switch(os.displayState)
 25082  00A454  D00A               	goto	l1397
 25083  00A456                     l1398:
 25084                           
 25085                           ;display.c: 336: display_content[2][0] = '>';
 25086  00A456  0E3E               	movlw	62
 25087  00A458  0102               	movlb	2	; () banked
 25088  00A45A  6F5C               	movwf	(_display_content+40)& (0+255),b
 25089                           
 25090                           ;display.c: 337: break;
 25091  00A45C  EFBC  F057         	goto	l1385
 25092  00A460                     l1400:
 25093                           
 25094                           ;display.c: 339: display_content[3][0] = '>';
 25095                           
 25096                           ; BSR set to: 2
 25097  00A460  0E3E               	movlw	62
 25098  00A462  0102               	movlb	2	; () banked
 25099  00A464  6F70               	movwf	(_display_content+60)& (0+255),b
 25100                           
 25101                           ; BSR set to: 2
 25102                           ;display.c: 341: }
 25103                           
 25104                           ;display.c: 340: break;
 25105  00A466  EFBC  F057         	goto	l1385
 25106  00A46A                     l1397:
 25107                           
 25108                           ; BSR set to: 2
 25109  00A46A  0101               	movlb	1	; () banked
 25110  00A46C  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 25111                           
 25112                           ; Switch size 1, requested type "space"
 25113                           ; Number of cases is 2, Range of values is 33 to 34
 25114                           ; switch strategies available:
 25115                           ; Name         Instructions Cycles
 25116                           ; simple_byte            7     4 (average)
 25117                           ;	Chosen strategy is simple_byte
 25118  00A46E  0A21               	xorlw	33	; case 33
 25119  00A470  B4D8               	btfsc	status,2,c
 25120  00A472  D7F1               	goto	l1398
 25121  00A474  0A03               	xorlw	3	; case 34
 25122  00A476                     L92:
 25123  00A476  B4D8               	btfsc	status,2,c
 25124  00A478  D7F3               	goto	l1400
 25125                           
 25126                           ; BSR set to: 1
 25127                           ;display.c: 342: break;
 25128  00A47A  EFBC  F057         	goto	l1385
 25129  00A47E                     
 25130                           ;display.c: 345: memcpy(display_content, dc_divide1, sizeof display_content);
 25131                           
 25132                           ; BSR set to: 1
 25133  00A47E  0E34               	movlw	low _display_content
 25134  00A480  0100               	movlb	0	; () banked
 25135  00A482  6F60               	movwf	memcpy@d1& (0+255),b
 25136  00A484  0E02               	movlw	high _display_content
 25137  00A486  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25138  00A488  0E7E               	movlw	low _dc_divide1
 25139  00A48A  6F62               	movwf	memcpy@s1& (0+255),b
 25140  00A48C  0E9F               	movlw	high _dc_divide1
 25141  00A48E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25142  00A490  0E00               	movlw	0
 25143  00A492  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25144  00A494  0E50               	movlw	80
 25145  00A496  6F64               	movwf	memcpy@n& (0+255),b
 25146  00A498  EC05  F0A2         	call	_memcpy	;wreg free
 25147                           
 25148                           ;display.c: 347: _display_padded_itoa(os.divide_step_size, 3, temp);
 25149  00A49C  C186  F078         	movff	_os+21,__display_padded_itoa@value	;volatile
 25150  00A4A0  0100               	movlb	0	; () banked
 25151  00A4A2  6B79               	clrf	(__display_padded_itoa@value+1)& (0+255),b
 25152  00A4A4  0E03               	movlw	3
 25153  00A4A6  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 25154  00A4A8  0EBE               	movlw	low display_prepare@temp
 25155  00A4AA  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 25156  00A4AC  0E00               	movlw	high display_prepare@temp
 25157  00A4AE  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 25158  00A4B0  EC3B  F08F         	call	__display_padded_itoa	;wreg free
 25159                           
 25160                           ;display.c: 348: for(cntr=0; cntr<3; ++cntr)
 25161  00A4B4  0E00               	movlw	0
 25162  00A4B6  0100               	movlb	0	; () banked
 25163  00A4B8  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25164  00A4BA                     l18229:
 25165                           
 25166                           ; BSR set to: 0
 25167  00A4BA  0E02               	movlw	2
 25168  00A4BC  65C9               	cpfsgt	display_prepare@cntr& (0+255),b
 25169  00A4BE  D001               	goto	l1402
 25170  00A4C0  D014               	goto	u18240
 25171  00A4C2                     l1402:
 25172                           
 25173                           ; BSR set to: 0
 25174                           ;display.c: 349: {;display.c: 350: display_content[2][cntr] = temp[cntr];
 25175                           
 25176                           ; BSR set to: 0
 25177  00A4C2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25178  00A4C4  0D01               	mullw	1
 25179  00A4C6  0EBE               	movlw	low display_prepare@temp
 25180  00A4C8  24F3               	addwf	prodl,w,c
 25181  00A4CA  6ED9               	movwf	fsr2l,c
 25182  00A4CC  0E00               	movlw	high display_prepare@temp
 25183  00A4CE  20F4               	addwfc	prodh,w,c
 25184  00A4D0  6EDA               	movwf	fsr2h,c
 25185  00A4D2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25186  00A4D4  0D01               	mullw	1
 25187  00A4D6  0E5C               	movlw	low (_display_content+40)
 25188  00A4D8  24F3               	addwf	prodl,w,c
 25189  00A4DA  6EE1               	movwf	fsr1l,c
 25190  00A4DC  0E02               	movlw	high (_display_content+40)
 25191  00A4DE  20F4               	addwfc	prodh,w,c
 25192  00A4E0  6EE2               	movwf	fsr1h,c
 25193  00A4E2  CFDF FFE7          	movff	indf2,indf1
 25194                           
 25195                           ; BSR set to: 0
 25196  00A4E6  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25197  00A4E8  D7E8               	goto	l18229
 25198  00A4EA                     u18240:
 25199                           
 25200                           ; BSR set to: 0
 25201                           ;display.c: 351: };display.c: 353: _display_padded_itoa(os.division, 4, temp);
 25202                           
 25203                           ; BSR set to: 0
 25204  00A4EA  C184  F078         	movff	_os+19,__display_padded_itoa@value	;volatile
 25205  00A4EE  C185  F079         	movff	_os+20,__display_padded_itoa@value+1	;volatile
 25206  00A4F2  0E04               	movlw	4
 25207  00A4F4  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 25208  00A4F6  0EBE               	movlw	low display_prepare@temp
 25209  00A4F8  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 25210  00A4FA  0E00               	movlw	high display_prepare@temp
 25211  00A4FC  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 25212  00A4FE  EC3B  F08F         	call	__display_padded_itoa	;wreg free
 25213                           
 25214                           ;display.c: 354: for(cntr=0; cntr<4; ++cntr)
 25215  00A502  0E00               	movlw	0
 25216  00A504  0100               	movlb	0	; () banked
 25217  00A506  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25218  00A508                     l18243:
 25219                           
 25220                           ; BSR set to: 0
 25221  00A508  0E03               	movlw	3
 25222  00A50A  65C9               	cpfsgt	display_prepare@cntr& (0+255),b
 25223  00A50C  D001               	goto	l1404
 25224  00A50E  D01E               	goto	l1406
 25225  00A510                     l1404:
 25226                           
 25227                           ; BSR set to: 0
 25228                           ;display.c: 355: {;display.c: 356: display_content[3][cntr] = temp[cntr];
 25229                           
 25230                           ; BSR set to: 0
 25231  00A510  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25232  00A512  0D01               	mullw	1
 25233  00A514  0EBE               	movlw	low display_prepare@temp
 25234  00A516  24F3               	addwf	prodl,w,c
 25235  00A518  6ED9               	movwf	fsr2l,c
 25236  00A51A  0E00               	movlw	high display_prepare@temp
 25237  00A51C  20F4               	addwfc	prodh,w,c
 25238  00A51E  6EDA               	movwf	fsr2h,c
 25239  00A520  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25240  00A522  0D01               	mullw	1
 25241  00A524  0E70               	movlw	low (_display_content+60)
 25242  00A526  24F3               	addwf	prodl,w,c
 25243  00A528  6EE1               	movwf	fsr1l,c
 25244  00A52A  0E02               	movlw	high (_display_content+60)
 25245  00A52C  20F4               	addwfc	prodh,w,c
 25246  00A52E  6EE2               	movwf	fsr1h,c
 25247  00A530  CFDF FFE7          	movff	indf2,indf1
 25248                           
 25249                           ; BSR set to: 0
 25250  00A534  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25251  00A536  D7E8               	goto	l18243
 25252  00A538                     
 25253                           ;display.c: 361: display_content[2][12] = '>';
 25254                           
 25255                           ; BSR set to: 0
 25256  00A538  0E3E               	movlw	62
 25257  00A53A  0102               	movlb	2	; () banked
 25258  00A53C  6F68               	movwf	(_display_content+52)& (0+255),b
 25259                           
 25260                           ;display.c: 362: break;
 25261  00A53E  EFBC  F057         	goto	l1385
 25262  00A542                     
 25263                           ;display.c: 364: display_content[3][12] = '>';
 25264                           
 25265                           ; BSR set to: 2
 25266  00A542  0E3E               	movlw	62
 25267  00A544  0102               	movlb	2	; () banked
 25268  00A546  6F7C               	movwf	(_display_content+72)& (0+255),b
 25269                           
 25270                           ; BSR set to: 2
 25271                           ;display.c: 366: }
 25272                           
 25273                           ;display.c: 365: break;
 25274  00A548  EFBC  F057         	goto	l1385
 25275  00A54C                     l1406:
 25276                           
 25277                           ; BSR set to: 2
 25278  00A54C  0101               	movlb	1	; () banked
 25279  00A54E  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 25280                           
 25281                           ; Switch size 1, requested type "space"
 25282                           ; Number of cases is 2, Range of values is 49 to 50
 25283                           ; switch strategies available:
 25284                           ; Name         Instructions Cycles
 25285                           ; simple_byte            7     4 (average)
 25286                           ;	Chosen strategy is simple_byte
 25287  00A550  0A31               	xorlw	49	; case 49
 25288  00A552                     L29:
 25289  00A552  B4D8               	btfsc	status,2,c
 25290  00A554  D7F1               	goto	l1407
 25291  00A556  0A03               	xorlw	3	; case 50
 25292  00A558  B4D8               	btfsc	status,2,c
 25293  00A55A  D7F3               	goto	l1409
 25294                           
 25295                           ; BSR set to: 1
 25296                           ;display.c: 367: break;
 25297  00A55C  EFBC  F057         	goto	l1385
 25298  00A560                     
 25299                           ;display.c: 370: memcpy(display_content, dc_divide2, sizeof display_content);
 25300                           
 25301                           ; BSR set to: 1
 25302  00A560  0E34               	movlw	low _display_content
 25303  00A562  0100               	movlb	0	; () banked
 25304  00A564  6F60               	movwf	memcpy@d1& (0+255),b
 25305  00A566  0E02               	movlw	high _display_content
 25306  00A568  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25307  00A56A  0E2E               	movlw	low _dc_divide2
 25308  00A56C  6F62               	movwf	memcpy@s1& (0+255),b
 25309  00A56E  0E9F               	movlw	high _dc_divide2
 25310  00A570  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25311  00A572  0E00               	movlw	0
 25312  00A574  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25313  00A576  0E50               	movlw	80
 25314  00A578  6F64               	movwf	memcpy@n& (0+255),b
 25315  00A57A  EC05  F0A2         	call	_memcpy	;wreg free
 25316                           
 25317                           ;display.c: 372: _display_padded_itoa(os.division, 0, temp);
 25318  00A57E  C184  F078         	movff	_os+19,__display_padded_itoa@value	;volatile
 25319  00A582  C185  F079         	movff	_os+20,__display_padded_itoa@value+1	;volatile
 25320  00A586  0E00               	movlw	0
 25321  00A588  0100               	movlb	0	; () banked
 25322  00A58A  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 25323  00A58C  0EBE               	movlw	low display_prepare@temp
 25324  00A58E  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 25325  00A590  0E00               	movlw	high display_prepare@temp
 25326  00A592  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 25327  00A594  EC3B  F08F         	call	__display_padded_itoa	;wreg free
 25328                           
 25329                           ;display.c: 373: for(cntr=0; temp[cntr]; ++cntr)
 25330  00A598  0E00               	movlw	0
 25331  00A59A  0100               	movlb	0	; () banked
 25332  00A59C  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25333  00A59E  D018               	goto	l1411
 25334  00A5A0                     
 25335                           ; BSR set to: 0
 25336                           ;display.c: 374: {;display.c: 375: display_content[0][cntr+8] = temp[cntr];
 25337                           
 25338                           ; BSR set to: 0
 25339  00A5A0  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25340  00A5A2  0D01               	mullw	1
 25341  00A5A4  0EBE               	movlw	low display_prepare@temp
 25342  00A5A6  24F3               	addwf	prodl,w,c
 25343  00A5A8  6ED9               	movwf	fsr2l,c
 25344  00A5AA  0E00               	movlw	high display_prepare@temp
 25345  00A5AC  20F4               	addwfc	prodh,w,c
 25346  00A5AE  6EDA               	movwf	fsr2h,c
 25347  00A5B0  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25348  00A5B2  6FBC               	movwf	??_display_prepare& (0+255),b
 25349  00A5B4  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25350  00A5B6  0E08               	movlw	8
 25351  00A5B8  27BC               	addwf	??_display_prepare& (0+255),f,b
 25352  00A5BA  0E00               	movlw	0
 25353  00A5BC  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25354  00A5BE  0E34               	movlw	low _display_content
 25355  00A5C0  25BC               	addwf	??_display_prepare& (0+255),w,b
 25356  00A5C2  6EE1               	movwf	fsr1l,c
 25357  00A5C4  0E02               	movlw	high _display_content
 25358  00A5C6  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25359  00A5C8  6EE2               	movwf	fsr1h,c
 25360  00A5CA  CFDF FFE7          	movff	indf2,indf1
 25361                           
 25362                           ; BSR set to: 0
 25363  00A5CE  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25364  00A5D0                     l1411:
 25365                           
 25366                           ; BSR set to: 0
 25367                           
 25368                           ; BSR set to: 0
 25369  00A5D0  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25370  00A5D2  0D01               	mullw	1
 25371  00A5D4  0EBE               	movlw	low display_prepare@temp
 25372  00A5D6  24F3               	addwf	prodl,w,c
 25373  00A5D8  6ED9               	movwf	fsr2l,c
 25374  00A5DA  0E00               	movlw	high display_prepare@temp
 25375  00A5DC  20F4               	addwfc	prodh,w,c
 25376  00A5DE  6EDA               	movwf	fsr2h,c
 25377  00A5E0  50DF               	movf	indf2,w,c
 25378  00A5E2  A4D8               	btfss	status,2,c
 25379  00A5E4  D7DD               	goto	l1412
 25380                           
 25381                           ; BSR set to: 0
 25382                           ;display.c: 376: };display.c: 378: display_content[0][cntr+8] = ',';
 25383                           
 25384                           ; BSR set to: 0
 25385  00A5E6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25386  00A5E8  6FBC               	movwf	??_display_prepare& (0+255),b
 25387  00A5EA  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25388  00A5EC  0E08               	movlw	8
 25389  00A5EE  27BC               	addwf	??_display_prepare& (0+255),f,b
 25390  00A5F0  0E00               	movlw	0
 25391  00A5F2  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25392  00A5F4  0E34               	movlw	low _display_content
 25393  00A5F6  25BC               	addwf	??_display_prepare& (0+255),w,b
 25394  00A5F8  6ED9               	movwf	fsr2l,c
 25395  00A5FA  0E02               	movlw	high _display_content
 25396  00A5FC  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25397  00A5FE  6EDA               	movwf	fsr2h,c
 25398  00A600  0E2C               	movlw	44
 25399  00A602  6EDF               	movwf	indf2,c
 25400                           
 25401                           ; BSR set to: 0
 25402                           ;display.c: 379: if(os.approach_direction==MOTOR_DIRECTION_CCW)
 25403  00A604  0101               	movlb	1	; () banked
 25404  00A606  2983               	incf	(_os+18)& (0+255),w,b	;volatile
 25405  00A608  A4D8               	btfss	status,2,c
 25406  00A60A  D024               	goto	l1414
 25407                           
 25408                           ; BSR set to: 1
 25409                           ;display.c: 380: {;display.c: 381: display_content[0][cntr+10] = 'C';
 25410  00A60C  0100               	movlb	0	; () banked
 25411  00A60E  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25412  00A610  6FBC               	movwf	??_display_prepare& (0+255),b
 25413  00A612  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25414  00A614  0E0A               	movlw	10
 25415  00A616  27BC               	addwf	??_display_prepare& (0+255),f,b
 25416  00A618  0E00               	movlw	0
 25417  00A61A  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25418  00A61C  0E34               	movlw	low _display_content
 25419  00A61E  25BC               	addwf	??_display_prepare& (0+255),w,b
 25420  00A620  6ED9               	movwf	fsr2l,c
 25421  00A622  0E02               	movlw	high _display_content
 25422  00A624  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25423  00A626  6EDA               	movwf	fsr2h,c
 25424  00A628  0E43               	movlw	67
 25425  00A62A  6EDF               	movwf	indf2,c
 25426                           
 25427                           ;display.c: 382: display_content[0][cntr+11] = 'C';
 25428  00A62C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25429  00A62E  6FBC               	movwf	??_display_prepare& (0+255),b
 25430  00A630  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25431  00A632  0E0B               	movlw	11
 25432  00A634  27BC               	addwf	??_display_prepare& (0+255),f,b
 25433  00A636  0E00               	movlw	0
 25434  00A638  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25435  00A63A  0E34               	movlw	low _display_content
 25436  00A63C  25BC               	addwf	??_display_prepare& (0+255),w,b
 25437  00A63E  6ED9               	movwf	fsr2l,c
 25438  00A640  0E02               	movlw	high _display_content
 25439  00A642  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25440  00A644  6EDA               	movwf	fsr2h,c
 25441  00A646  0E43               	movlw	67
 25442  00A648  6EDF               	movwf	indf2,c
 25443                           
 25444                           ;display.c: 383: display_content[0][cntr+12] = 'W';
 25445  00A64A  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25446  00A64C  6FBC               	movwf	??_display_prepare& (0+255),b
 25447  00A64E  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25448  00A650  0E0C               	movlw	12
 25449  00A652  D014               	goto	L30
 25450  00A654                     l1414:
 25451                           
 25452                           ;display.c: 385: else;display.c: 386: {;display.c: 387: display_content[0][cntr+10] = 'C
      +                          ';
 25453                           
 25454                           ; BSR set to: 0
 25455  00A654  0100               	movlb	0	; () banked
 25456  00A656  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25457  00A658  6FBC               	movwf	??_display_prepare& (0+255),b
 25458  00A65A  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25459  00A65C  0E0A               	movlw	10
 25460  00A65E  27BC               	addwf	??_display_prepare& (0+255),f,b
 25461  00A660  0E00               	movlw	0
 25462  00A662  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25463  00A664  0E34               	movlw	low _display_content
 25464  00A666  25BC               	addwf	??_display_prepare& (0+255),w,b
 25465  00A668  6ED9               	movwf	fsr2l,c
 25466  00A66A  0E02               	movlw	high _display_content
 25467  00A66C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25468  00A66E  6EDA               	movwf	fsr2h,c
 25469  00A670  0E43               	movlw	67
 25470  00A672  6EDF               	movwf	indf2,c
 25471                           
 25472                           ;display.c: 388: display_content[0][cntr+11] = 'W';
 25473  00A674  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25474  00A676  6FBC               	movwf	??_display_prepare& (0+255),b
 25475  00A678  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25476  00A67A  0E0B               	movlw	11
 25477  00A67C                     L30:
 25478  00A67C  27BC               	addwf	??_display_prepare& (0+255),f,b
 25479  00A67E  0E00               	movlw	0
 25480  00A680  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25481  00A682  0E34               	movlw	low _display_content
 25482  00A684  25BC               	addwf	??_display_prepare& (0+255),w,b
 25483  00A686  6ED9               	movwf	fsr2l,c
 25484  00A688  0E02               	movlw	high _display_content
 25485  00A68A  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25486  00A68C  6EDA               	movwf	fsr2h,c
 25487  00A68E  0E57               	movlw	87
 25488  00A690  6EDF               	movwf	indf2,c
 25489                           
 25490                           ; BSR set to: 0
 25491                           ;display.c: 389: };display.c: 391: _display_padded_itoa(os.divide_position, 0, temp);
 25492                           
 25493                           ; BSR set to: 0
 25494  00A692  C187  F078         	movff	_os+22,__display_padded_itoa@value	;volatile
 25495  00A696  C188  F079         	movff	_os+23,__display_padded_itoa@value+1	;volatile
 25496  00A69A  0E00               	movlw	0
 25497  00A69C  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 25498  00A69E  0EBE               	movlw	low display_prepare@temp
 25499  00A6A0  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 25500  00A6A2  0E00               	movlw	high display_prepare@temp
 25501  00A6A4  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 25502  00A6A6  EC3B  F08F         	call	__display_padded_itoa	;wreg free
 25503                           
 25504                           ;display.c: 392: for(cntr=0; temp[cntr]; ++cntr)
 25505  00A6AA  0E00               	movlw	0
 25506  00A6AC  0100               	movlb	0	; () banked
 25507  00A6AE  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25508  00A6B0  D018               	goto	l1416
 25509  00A6B2                     
 25510                           ; BSR set to: 0
 25511                           ;display.c: 393: {;display.c: 394: display_content[1][cntr+5] = temp[cntr];
 25512                           
 25513                           ; BSR set to: 0
 25514  00A6B2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25515  00A6B4  0D01               	mullw	1
 25516  00A6B6  0EBE               	movlw	low display_prepare@temp
 25517  00A6B8  24F3               	addwf	prodl,w,c
 25518  00A6BA  6ED9               	movwf	fsr2l,c
 25519  00A6BC  0E00               	movlw	high display_prepare@temp
 25520  00A6BE  20F4               	addwfc	prodh,w,c
 25521  00A6C0  6EDA               	movwf	fsr2h,c
 25522  00A6C2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25523  00A6C4  6FBC               	movwf	??_display_prepare& (0+255),b
 25524  00A6C6  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25525  00A6C8  0E05               	movlw	5
 25526  00A6CA  27BC               	addwf	??_display_prepare& (0+255),f,b
 25527  00A6CC  0E00               	movlw	0
 25528  00A6CE  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25529  00A6D0  0E48               	movlw	low (_display_content+20)
 25530  00A6D2  25BC               	addwf	??_display_prepare& (0+255),w,b
 25531  00A6D4  6EE1               	movwf	fsr1l,c
 25532  00A6D6  0E02               	movlw	high (_display_content+20)
 25533  00A6D8  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25534  00A6DA  6EE2               	movwf	fsr1h,c
 25535  00A6DC  CFDF FFE7          	movff	indf2,indf1
 25536                           
 25537                           ; BSR set to: 0
 25538  00A6E0  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25539  00A6E2                     l1416:
 25540                           
 25541                           ; BSR set to: 0
 25542                           
 25543                           ; BSR set to: 0
 25544  00A6E2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25545  00A6E4  0D01               	mullw	1
 25546  00A6E6  0EBE               	movlw	low display_prepare@temp
 25547  00A6E8  24F3               	addwf	prodl,w,c
 25548  00A6EA  6ED9               	movwf	fsr2l,c
 25549  00A6EC  0E00               	movlw	high display_prepare@temp
 25550  00A6EE  20F4               	addwfc	prodh,w,c
 25551  00A6F0  6EDA               	movwf	fsr2h,c
 25552  00A6F2  50DF               	movf	indf2,w,c
 25553  00A6F4  A4D8               	btfss	status,2,c
 25554  00A6F6  D7DD               	goto	l1417
 25555                           
 25556                           ; BSR set to: 0
 25557                           ;display.c: 395: };display.c: 397: display_content[1][cntr+6] = '(';
 25558                           
 25559                           ; BSR set to: 0
 25560  00A6F8  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25561  00A6FA  6FBC               	movwf	??_display_prepare& (0+255),b
 25562  00A6FC  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25563  00A6FE  0E06               	movlw	6
 25564  00A700  27BC               	addwf	??_display_prepare& (0+255),f,b
 25565  00A702  0E00               	movlw	0
 25566  00A704  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25567  00A706  0E48               	movlw	low (_display_content+20)
 25568  00A708  25BC               	addwf	??_display_prepare& (0+255),w,b
 25569  00A70A  6ED9               	movwf	fsr2l,c
 25570  00A70C  0E02               	movlw	high (_display_content+20)
 25571  00A70E  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25572  00A710  6EDA               	movwf	fsr2h,c
 25573  00A712  0E28               	movlw	40
 25574  00A714  6EDF               	movwf	indf2,c
 25575                           
 25576                           ; BSR set to: 0
 25577                           ;display.c: 398: space = cntr + 7;
 25578  00A716  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25579  00A718  0F07               	addlw	7
 25580  00A71A  6FC8               	movwf	display_prepare@space& (0+255),b
 25581                           
 25582                           ; BSR set to: 0
 25583                           ;display.c: 399: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 25584  00A71C  C17C  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 25585  00A720  C17D  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 25586  00A724  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 25587  00A726  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 25588  00A728  0E02               	movlw	2
 25589  00A72A  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 25590  00A72C  0EBE               	movlw	low display_prepare@temp
 25591  00A72E  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 25592  00A730  0E00               	movlw	high display_prepare@temp
 25593  00A732  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 25594  00A734  ECED  F085         	call	__display_itoa_long	;wreg free
 25595                           
 25596                           ;display.c: 400: for(cntr=0; temp[cntr]; ++cntr)
 25597  00A738  0E00               	movlw	0
 25598  00A73A  0100               	movlb	0	; () banked
 25599  00A73C  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25600  00A73E  D018               	goto	l1419
 25601  00A740                     
 25602                           ; BSR set to: 0
 25603                           ;display.c: 401: {;display.c: 402: display_content[1][cntr+space] = temp[cntr];
 25604                           
 25605                           ; BSR set to: 0
 25606  00A740  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25607  00A742  0D01               	mullw	1
 25608  00A744  0EBE               	movlw	low display_prepare@temp
 25609  00A746  24F3               	addwf	prodl,w,c
 25610  00A748  6ED9               	movwf	fsr2l,c
 25611  00A74A  0E00               	movlw	high display_prepare@temp
 25612  00A74C  20F4               	addwfc	prodh,w,c
 25613  00A74E  6EDA               	movwf	fsr2h,c
 25614  00A750  51C8               	movf	display_prepare@space& (0+255),w,b
 25615  00A752  C0C9  F0BC         	movff	display_prepare@cntr,??_display_prepare
 25616  00A756  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25617  00A758  27BC               	addwf	??_display_prepare& (0+255),f,b
 25618  00A75A  0E00               	movlw	0
 25619  00A75C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25620  00A75E  0E48               	movlw	low (_display_content+20)
 25621  00A760  25BC               	addwf	??_display_prepare& (0+255),w,b
 25622  00A762  6EE1               	movwf	fsr1l,c
 25623  00A764  0E02               	movlw	high (_display_content+20)
 25624  00A766  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25625  00A768  6EE2               	movwf	fsr1h,c
 25626  00A76A  CFDF FFE7          	movff	indf2,indf1
 25627                           
 25628                           ; BSR set to: 0
 25629  00A76E  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25630  00A770                     l1419:
 25631                           
 25632                           ; BSR set to: 0
 25633                           
 25634                           ; BSR set to: 0
 25635  00A770  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25636  00A772  0D01               	mullw	1
 25637  00A774  0EBE               	movlw	low display_prepare@temp
 25638  00A776  24F3               	addwf	prodl,w,c
 25639  00A778  6ED9               	movwf	fsr2l,c
 25640  00A77A  0E00               	movlw	high display_prepare@temp
 25641  00A77C  20F4               	addwfc	prodh,w,c
 25642  00A77E  6EDA               	movwf	fsr2h,c
 25643  00A780  50DF               	movf	indf2,w,c
 25644  00A782  A4D8               	btfss	status,2,c
 25645  00A784  D7DD               	goto	l1420
 25646                           
 25647                           ; BSR set to: 0
 25648                           ;display.c: 403: };display.c: 404: display_content[1][cntr+space] = 0x01;
 25649                           
 25650                           ; BSR set to: 0
 25651  00A786  51C8               	movf	display_prepare@space& (0+255),w,b
 25652  00A788  C0C9  F0BC         	movff	display_prepare@cntr,??_display_prepare
 25653  00A78C  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25654  00A78E  27BC               	addwf	??_display_prepare& (0+255),f,b
 25655  00A790  0E00               	movlw	0
 25656  00A792  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25657  00A794  0E48               	movlw	low (_display_content+20)
 25658  00A796  25BC               	addwf	??_display_prepare& (0+255),w,b
 25659  00A798  6ED9               	movwf	fsr2l,c
 25660  00A79A  0E02               	movlw	high (_display_content+20)
 25661  00A79C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25662  00A79E  6EDA               	movwf	fsr2h,c
 25663  00A7A0  0E01               	movlw	1
 25664  00A7A2  6EDF               	movwf	indf2,c
 25665                           
 25666                           ;display.c: 405: display_content[1][cntr+space+1] = ')';
 25667  00A7A4  51C8               	movf	display_prepare@space& (0+255),w,b
 25668  00A7A6  C0C9  F0BC         	movff	display_prepare@cntr,??_display_prepare
 25669  00A7AA  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25670  00A7AC  27BC               	addwf	??_display_prepare& (0+255),f,b
 25671  00A7AE  0E00               	movlw	0
 25672  00A7B0  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25673  00A7B2  0E01               	movlw	1
 25674  00A7B4  27BC               	addwf	??_display_prepare& (0+255),f,b
 25675  00A7B6  0E00               	movlw	0
 25676  00A7B8  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25677  00A7BA  0E48               	movlw	low (_display_content+20)
 25678  00A7BC  25BC               	addwf	??_display_prepare& (0+255),w,b
 25679  00A7BE  6ED9               	movwf	fsr2l,c
 25680  00A7C0  0E02               	movlw	high (_display_content+20)
 25681  00A7C2  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25682  00A7C4  6EDA               	movwf	fsr2h,c
 25683  00A7C6  0E29               	movlw	41
 25684  00A7C8  6EDF               	movwf	indf2,c
 25685                           
 25686                           ; BSR set to: 0
 25687                           ;display.c: 407: _display_signed_itoa(os.divide_jump_size, temp);
 25688  00A7CA  C189  F08F         	movff	_os+24,__display_signed_itoa@value	;volatile
 25689  00A7CE  C18A  F090         	movff	_os+25,__display_signed_itoa@value+1	;volatile
 25690  00A7D2  0EBE               	movlw	low display_prepare@temp
 25691  00A7D4  6F91               	movwf	__display_signed_itoa@text& (0+255),b
 25692  00A7D6  0E00               	movlw	high display_prepare@temp
 25693  00A7D8  6F92               	movwf	(__display_signed_itoa@text+1)& (0+255),b
 25694  00A7DA  EC9D  F0A7         	call	__display_signed_itoa	;wreg free
 25695                           
 25696                           ;display.c: 408: for(cntr=0; temp[cntr]; ++cntr)
 25697  00A7DE  0E00               	movlw	0
 25698  00A7E0  0100               	movlb	0	; () banked
 25699  00A7E2  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25700  00A7E4  D018               	goto	l1422
 25701  00A7E6                     
 25702                           ; BSR set to: 0
 25703                           ;display.c: 409: {;display.c: 410: display_content[2][cntr+11] = temp[cntr];
 25704                           
 25705                           ; BSR set to: 0
 25706  00A7E6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25707  00A7E8  0D01               	mullw	1
 25708  00A7EA  0EBE               	movlw	low display_prepare@temp
 25709  00A7EC  24F3               	addwf	prodl,w,c
 25710  00A7EE  6ED9               	movwf	fsr2l,c
 25711  00A7F0  0E00               	movlw	high display_prepare@temp
 25712  00A7F2  20F4               	addwfc	prodh,w,c
 25713  00A7F4  6EDA               	movwf	fsr2h,c
 25714  00A7F6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25715  00A7F8  6FBC               	movwf	??_display_prepare& (0+255),b
 25716  00A7FA  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25717  00A7FC  0E0B               	movlw	11
 25718  00A7FE  27BC               	addwf	??_display_prepare& (0+255),f,b
 25719  00A800  0E00               	movlw	0
 25720  00A802  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25721  00A804  0E5C               	movlw	low (_display_content+40)
 25722  00A806  25BC               	addwf	??_display_prepare& (0+255),w,b
 25723  00A808  6EE1               	movwf	fsr1l,c
 25724  00A80A  0E02               	movlw	high (_display_content+40)
 25725  00A80C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25726  00A80E  6EE2               	movwf	fsr1h,c
 25727  00A810  CFDF FFE7          	movff	indf2,indf1
 25728                           
 25729                           ; BSR set to: 0
 25730  00A814  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25731  00A816                     l1422:
 25732                           
 25733                           ; BSR set to: 0
 25734                           
 25735                           ; BSR set to: 0
 25736  00A816  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25737  00A818  0D01               	mullw	1
 25738  00A81A  0EBE               	movlw	low display_prepare@temp
 25739  00A81C  24F3               	addwf	prodl,w,c
 25740  00A81E  6ED9               	movwf	fsr2l,c
 25741  00A820  0E00               	movlw	high display_prepare@temp
 25742  00A822  20F4               	addwfc	prodh,w,c
 25743  00A824  6EDA               	movwf	fsr2h,c
 25744  00A826  50DF               	movf	indf2,w,c
 25745  00A828  B4D8               	btfsc	status,2,c
 25746  00A82A  D3A6               	goto	l1385
 25747  00A82C  D7DC               	goto	l1423
 25748  00A82E                     
 25749                           ; BSR set to: 0
 25750                           ;display.c: 415: memcpy(display_content, dc_arc1, sizeof display_content);
 25751                           
 25752                           ; BSR set to: 0
 25753  00A82E  0E34               	movlw	low _display_content
 25754  00A830  6F60               	movwf	memcpy@d1& (0+255),b
 25755  00A832  0E02               	movlw	high _display_content
 25756  00A834  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25757  00A836  0EDE               	movlw	low _dc_arc1
 25758  00A838  6F62               	movwf	memcpy@s1& (0+255),b
 25759  00A83A  0E9E               	movlw	high _dc_arc1
 25760  00A83C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25761  00A83E  0E00               	movlw	0
 25762  00A840  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25763  00A842  0E50               	movlw	80
 25764  00A844  6F64               	movwf	memcpy@n& (0+255),b
 25765  00A846  EC05  F0A2         	call	_memcpy	;wreg free
 25766                           
 25767                           ;display.c: 416: switch(os.displayState)
 25768  00A84A  D008               	goto	l1426
 25769  00A84C                     
 25770                           ;display.c: 419: display_content[2][12] = '>';
 25771  00A84C  0E3E               	movlw	62
 25772  00A84E  0102               	movlb	2	; () banked
 25773  00A850  6F68               	movwf	(_display_content+52)& (0+255),b
 25774                           
 25775                           ;display.c: 420: break;
 25776  00A852  D00C               	goto	l1428
 25777  00A854                     
 25778                           ;display.c: 422: display_content[3][12] = '>';
 25779                           
 25780                           ; BSR set to: 2
 25781  00A854  0E3E               	movlw	62
 25782  00A856  0102               	movlb	2	; () banked
 25783  00A858  6F7C               	movwf	(_display_content+72)& (0+255),b
 25784                           
 25785                           ; BSR set to: 2
 25786                           ;display.c: 424: }
 25787                           
 25788                           ;display.c: 423: break;
 25789  00A85A  D008               	goto	l1428
 25790  00A85C                     l1426:
 25791                           
 25792                           ; BSR set to: 2
 25793  00A85C  0101               	movlb	1	; () banked
 25794  00A85E  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 25795                           
 25796                           ; Switch size 1, requested type "space"
 25797                           ; Number of cases is 2, Range of values is 81 to 82
 25798                           ; switch strategies available:
 25799                           ; Name         Instructions Cycles
 25800                           ; simple_byte            7     4 (average)
 25801                           ;	Chosen strategy is simple_byte
 25802  00A860  0A51               	xorlw	81	; case 81
 25803  00A862  B4D8               	btfsc	status,2,c
 25804  00A864  D7F3               	goto	l1427
 25805  00A866  0A03               	xorlw	3	; case 82
 25806  00A868  B4D8               	btfsc	status,2,c
 25807  00A86A  D7F4               	goto	l1429
 25808  00A86C                     l1428:
 25809                           
 25810                           ;display.c: 427: _display_itoa_long(os.arc_size, 2, temp);
 25811                           
 25812                           ; BSR set to: 1
 25813  00A86C  C18D  F0AD         	movff	_os+28,__display_itoa_long@value	;volatile
 25814  00A870  C18E  F0AE         	movff	_os+29,__display_itoa_long@value+1	;volatile
 25815  00A874  C18F  F0AF         	movff	_os+30,__display_itoa_long@value+2	;volatile
 25816  00A878  C190  F0B0         	movff	_os+31,__display_itoa_long@value+3	;volatile
 25817  00A87C  0E02               	movlw	2
 25818  00A87E  0100               	movlb	0	; () banked
 25819  00A880  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 25820  00A882  0EBE               	movlw	low display_prepare@temp
 25821  00A884  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 25822  00A886  0E00               	movlw	high display_prepare@temp
 25823  00A888  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 25824  00A88A  ECED  F085         	call	__display_itoa_long	;wreg free
 25825                           
 25826                           ;display.c: 428: for(cntr=0; temp[cntr]; ++cntr)
 25827  00A88E  0E00               	movlw	0
 25828  00A890  0100               	movlb	0	; () banked
 25829  00A892  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25830  00A894  D018               	goto	l1430
 25831  00A896                     
 25832                           ; BSR set to: 0
 25833                           ;display.c: 429: {;display.c: 430: display_content[1][10+cntr] = temp[cntr];
 25834                           
 25835                           ; BSR set to: 0
 25836  00A896  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25837  00A898  0D01               	mullw	1
 25838  00A89A  0EBE               	movlw	low display_prepare@temp
 25839  00A89C  24F3               	addwf	prodl,w,c
 25840  00A89E  6ED9               	movwf	fsr2l,c
 25841  00A8A0  0E00               	movlw	high display_prepare@temp
 25842  00A8A2  20F4               	addwfc	prodh,w,c
 25843  00A8A4  6EDA               	movwf	fsr2h,c
 25844  00A8A6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25845  00A8A8  6FBC               	movwf	??_display_prepare& (0+255),b
 25846  00A8AA  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25847  00A8AC  0E0A               	movlw	10
 25848  00A8AE  27BC               	addwf	??_display_prepare& (0+255),f,b
 25849  00A8B0  0E00               	movlw	0
 25850  00A8B2  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25851  00A8B4  0E48               	movlw	low (_display_content+20)
 25852  00A8B6  25BC               	addwf	??_display_prepare& (0+255),w,b
 25853  00A8B8  6EE1               	movwf	fsr1l,c
 25854  00A8BA  0E02               	movlw	high (_display_content+20)
 25855  00A8BC  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25856  00A8BE  6EE2               	movwf	fsr1h,c
 25857  00A8C0  CFDF FFE7          	movff	indf2,indf1
 25858                           
 25859                           ; BSR set to: 0
 25860  00A8C4  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25861  00A8C6                     l1430:
 25862                           
 25863                           ; BSR set to: 0
 25864                           
 25865                           ; BSR set to: 0
 25866  00A8C6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25867  00A8C8  0D01               	mullw	1
 25868  00A8CA  0EBE               	movlw	low display_prepare@temp
 25869  00A8CC  24F3               	addwf	prodl,w,c
 25870  00A8CE  6ED9               	movwf	fsr2l,c
 25871  00A8D0  0E00               	movlw	high display_prepare@temp
 25872  00A8D2  20F4               	addwfc	prodh,w,c
 25873  00A8D4  6EDA               	movwf	fsr2h,c
 25874  00A8D6  50DF               	movf	indf2,w,c
 25875  00A8D8  A4D8               	btfss	status,2,c
 25876  00A8DA  D7DD               	goto	l1431
 25877                           
 25878                           ; BSR set to: 0
 25879                           ;display.c: 431: };display.c: 432: display_content[1][10+cntr] = 0x01;
 25880                           
 25881                           ; BSR set to: 0
 25882  00A8DC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25883  00A8DE  6FBC               	movwf	??_display_prepare& (0+255),b
 25884  00A8E0  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25885  00A8E2  0E0A               	movlw	10
 25886  00A8E4  27BC               	addwf	??_display_prepare& (0+255),f,b
 25887  00A8E6  0E00               	movlw	0
 25888  00A8E8  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25889  00A8EA  0E48               	movlw	low (_display_content+20)
 25890  00A8EC  25BC               	addwf	??_display_prepare& (0+255),w,b
 25891  00A8EE  6ED9               	movwf	fsr2l,c
 25892  00A8F0  0E02               	movlw	high (_display_content+20)
 25893  00A8F2  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25894  00A8F4  6EDA               	movwf	fsr2h,c
 25895  00A8F6  0E01               	movlw	1
 25896  00A8F8  6EDF               	movwf	indf2,c
 25897                           
 25898                           ; BSR set to: 0
 25899                           ;display.c: 435: _display_itoa(os.arc_step_size, 2, temp);
 25900  00A8FA  C18B  F095         	movff	_os+26,__display_itoa@value	;volatile
 25901  00A8FE  C18C  F096         	movff	_os+27,__display_itoa@value+1	;volatile
 25902  00A902  0E02               	movlw	2
 25903  00A904  6F97               	movwf	__display_itoa@decimals& (0+255),b
 25904  00A906  0EBE               	movlw	low display_prepare@temp
 25905  00A908  6F98               	movwf	__display_itoa@text& (0+255),b
 25906  00A90A  0E00               	movlw	high display_prepare@temp
 25907  00A90C  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 25908  00A90E  EC0D  F075         	call	__display_itoa	;wreg free
 25909                           
 25910                           ;display.c: 436: if(os.arc_step_size>999)
 25911  00A912  0EE8               	movlw	232
 25912  00A914  0101               	movlb	1	; () banked
 25913  00A916  5D8B               	subwf	(_os+26)& (0+255),w,b	;volatile
 25914  00A918  0E03               	movlw	3
 25915  00A91A  598C               	subwfb	(_os+27)& (0+255),w,b	;volatile
 25916  00A91C  A0D8               	btfss	status,0,c
 25917  00A91E  D002               	goto	l1433
 25918                           
 25919                           ; BSR set to: 1
 25920                           ;display.c: 437: space = 0;
 25921  00A920  0E00               	movlw	0
 25922  00A922  D001               	goto	L24
 25923  00A924                     l1433:
 25924                           
 25925                           ;display.c: 438: else;display.c: 439: space = 1;
 25926                           
 25927                           ; BSR set to: 0
 25928  00A924  0E01               	movlw	1
 25929  00A926                     L24:
 25930  00A926  0100               	movlb	0	; () banked
 25931  00A928  6FC8               	movwf	display_prepare@space& (0+255),b
 25932                           
 25933                           ; BSR set to: 0
 25934                           ;display.c: 440: for(cntr=0; temp[cntr]; ++cntr)
 25935  00A92A  0E00               	movlw	0
 25936  00A92C  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25937  00A92E  D018               	goto	l1435
 25938  00A930                     
 25939                           ; BSR set to: 0
 25940                           ;display.c: 441: {;display.c: 442: display_content[3][space+cntr] = temp[cntr];
 25941                           
 25942                           ; BSR set to: 0
 25943  00A930  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25944  00A932  0D01               	mullw	1
 25945  00A934  0EBE               	movlw	low display_prepare@temp
 25946  00A936  24F3               	addwf	prodl,w,c
 25947  00A938  6ED9               	movwf	fsr2l,c
 25948  00A93A  0E00               	movlw	high display_prepare@temp
 25949  00A93C  20F4               	addwfc	prodh,w,c
 25950  00A93E  6EDA               	movwf	fsr2h,c
 25951  00A940  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25952  00A942  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 25953  00A946  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25954  00A948  27BC               	addwf	??_display_prepare& (0+255),f,b
 25955  00A94A  0E00               	movlw	0
 25956  00A94C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25957  00A94E  0E70               	movlw	low (_display_content+60)
 25958  00A950  25BC               	addwf	??_display_prepare& (0+255),w,b
 25959  00A952  6EE1               	movwf	fsr1l,c
 25960  00A954  0E02               	movlw	high (_display_content+60)
 25961  00A956  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25962  00A958  6EE2               	movwf	fsr1h,c
 25963  00A95A  CFDF FFE7          	movff	indf2,indf1
 25964                           
 25965                           ; BSR set to: 0
 25966  00A95E  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25967  00A960                     l1435:
 25968                           
 25969                           ; BSR set to: 0
 25970                           
 25971                           ; BSR set to: 0
 25972  00A960  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25973  00A962  0D01               	mullw	1
 25974  00A964  0EBE               	movlw	low display_prepare@temp
 25975  00A966  24F3               	addwf	prodl,w,c
 25976  00A968  6ED9               	movwf	fsr2l,c
 25977  00A96A  0E00               	movlw	high display_prepare@temp
 25978  00A96C  20F4               	addwfc	prodh,w,c
 25979  00A96E  6EDA               	movwf	fsr2h,c
 25980  00A970  50DF               	movf	indf2,w,c
 25981  00A972  A4D8               	btfss	status,2,c
 25982  00A974  D7DD               	goto	l1436
 25983                           
 25984                           ; BSR set to: 0
 25985                           ;display.c: 443: };display.c: 444: display_content[3][space+cntr] = 0x01 ;
 25986                           
 25987                           ; BSR set to: 0
 25988  00A976  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25989  00A978  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 25990  00A97C  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25991  00A97E  27BC               	addwf	??_display_prepare& (0+255),f,b
 25992  00A980  0E00               	movlw	0
 25993  00A982  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25994  00A984  0E70               	movlw	low (_display_content+60)
 25995  00A986  25BC               	addwf	??_display_prepare& (0+255),w,b
 25996  00A988  6ED9               	movwf	fsr2l,c
 25997  00A98A  0E02               	movlw	high (_display_content+60)
 25998  00A98C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25999  00A98E  6EDA               	movwf	fsr2h,c
 26000  00A990  0E01               	movlw	1
 26001  00A992  D25B               	goto	L27
 26002  00A994                     
 26003                           ; BSR set to: 0
 26004                           ;display.c: 449: memcpy(display_content, dc_arc2, sizeof display_content);
 26005                           
 26006                           ; BSR set to: 0
 26007  00A994  0E34               	movlw	low _display_content
 26008  00A996  6F60               	movwf	memcpy@d1& (0+255),b
 26009  00A998  0E02               	movlw	high _display_content
 26010  00A99A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26011  00A99C  0E8E               	movlw	low _dc_arc2
 26012  00A99E  6F62               	movwf	memcpy@s1& (0+255),b
 26013  00A9A0  0E9E               	movlw	high _dc_arc2
 26014  00A9A2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26015  00A9A4  0E00               	movlw	0
 26016  00A9A6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26017  00A9A8  0E50               	movlw	80
 26018  00A9AA  6F64               	movwf	memcpy@n& (0+255),b
 26019  00A9AC  EC05  F0A2         	call	_memcpy	;wreg free
 26020                           
 26021                           ;display.c: 450: switch(os.displayState)
 26022  00A9B0  D025               	goto	l1439
 26023  00A9B2                     
 26024                           ;display.c: 453: display_content[2][6] = 'W';
 26025  00A9B2  0E57               	movlw	87
 26026  00A9B4  0102               	movlb	2	; () banked
 26027  00A9B6  6F62               	movwf	(_display_content+46)& (0+255),b
 26028                           
 26029                           ;display.c: 454: display_content[2][7] = ' ';
 26030  00A9B8  0E20               	movlw	32
 26031  00A9BA  6F63               	movwf	(_display_content+47)& (0+255),b
 26032                           
 26033                           ;display.c: 455: break;
 26034  00A9BC  D027               	goto	l1441
 26035  00A9BE                     
 26036                           ;display.c: 457: memcpy(display_content[2], "        ", 8);
 26037                           
 26038                           ; BSR set to: 2
 26039  00A9BE  0E5C               	movlw	low (_display_content+40)
 26040  00A9C0  0100               	movlb	0	; () banked
 26041  00A9C2  6F60               	movwf	memcpy@d1& (0+255),b
 26042  00A9C4  0E02               	movlw	high (_display_content+40)
 26043  00A9C6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26044  00A9C8  0E14               	movlw	low STR_1
 26045  00A9CA  6F62               	movwf	memcpy@s1& (0+255),b
 26046  00A9CC  0EA3               	movlw	high STR_1
 26047  00A9CE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26048  00A9D0  0E00               	movlw	0
 26049  00A9D2  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26050  00A9D4  0E08               	movlw	8
 26051  00A9D6  6F64               	movwf	memcpy@n& (0+255),b
 26052  00A9D8  EC05  F0A2         	call	_memcpy	;wreg free
 26053                           
 26054                           ;display.c: 458: memcpy(display_content[3], "Cancel", 6);
 26055  00A9DC  0E70               	movlw	low (_display_content+60)
 26056  00A9DE  0100               	movlb	0	; () banked
 26057  00A9E0  6F60               	movwf	memcpy@d1& (0+255),b
 26058  00A9E2  0E02               	movlw	high (_display_content+60)
 26059  00A9E4  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26060  00A9E6  0E1D               	movlw	low STR_2
 26061  00A9E8  6F62               	movwf	memcpy@s1& (0+255),b
 26062  00A9EA  0EA3               	movlw	high STR_2
 26063  00A9EC  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26064  00A9EE  0E00               	movlw	0
 26065  00A9F0  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26066  00A9F2  0E06               	movlw	6
 26067  00A9F4  6F64               	movwf	memcpy@n& (0+255),b
 26068  00A9F6  EC05  F0A2         	call	_memcpy	;wreg free
 26069                           
 26070                           ;display.c: 460: }
 26071                           
 26072                           ;display.c: 459: break;
 26073  00A9FA  D008               	goto	l1441
 26074  00A9FC                     l1439:
 26075  00A9FC  0101               	movlb	1	; () banked
 26076  00A9FE  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 26077                           
 26078                           ; Switch size 1, requested type "space"
 26079                           ; Number of cases is 2, Range of values is 98 to 99
 26080                           ; switch strategies available:
 26081                           ; Name         Instructions Cycles
 26082                           ; simple_byte            7     4 (average)
 26083                           ;	Chosen strategy is simple_byte
 26084  00AA00  0A62               	xorlw	98	; case 98
 26085  00AA02  B4D8               	btfsc	status,2,c
 26086  00AA04  D7DC               	goto	l1442
 26087  00AA06  0A01               	xorlw	1	; case 99
 26088  00AA08  B4D8               	btfsc	status,2,c
 26089  00AA0A  D7D3               	goto	l1440
 26090  00AA0C                     l1441:
 26091                           
 26092                           ;display.c: 463: _display_itoa_long(os.arc_size, 2, temp);
 26093                           
 26094                           ; BSR set to: 1
 26095  00AA0C  C18D  F0AD         	movff	_os+28,__display_itoa_long@value	;volatile
 26096  00AA10  C18E  F0AE         	movff	_os+29,__display_itoa_long@value+1	;volatile
 26097  00AA14  C18F  F0AF         	movff	_os+30,__display_itoa_long@value+2	;volatile
 26098  00AA18  C190  F0B0         	movff	_os+31,__display_itoa_long@value+3	;volatile
 26099  00AA1C  0E02               	movlw	2
 26100  00AA1E  0100               	movlb	0	; () banked
 26101  00AA20  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 26102  00AA22  0EBE               	movlw	low display_prepare@temp
 26103  00AA24  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 26104  00AA26  0E00               	movlw	high display_prepare@temp
 26105  00AA28  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26106  00AA2A  ECED  F085         	call	__display_itoa_long	;wreg free
 26107                           
 26108                           ;display.c: 464: for(cntr=0; temp[cntr]; ++cntr)
 26109  00AA2E  0E00               	movlw	0
 26110  00AA30  0100               	movlb	0	; () banked
 26111  00AA32  6FC9               	movwf	display_prepare@cntr& (0+255),b
 26112  00AA34  D018               	goto	l1443
 26113  00AA36                     
 26114                           ; BSR set to: 0
 26115                           ;display.c: 465: {;display.c: 466: display_content[0][10+cntr] = temp[cntr];
 26116                           
 26117                           ; BSR set to: 0
 26118  00AA36  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26119  00AA38  0D01               	mullw	1
 26120  00AA3A  0EBE               	movlw	low display_prepare@temp
 26121  00AA3C  24F3               	addwf	prodl,w,c
 26122  00AA3E  6ED9               	movwf	fsr2l,c
 26123  00AA40  0E00               	movlw	high display_prepare@temp
 26124  00AA42  20F4               	addwfc	prodh,w,c
 26125  00AA44  6EDA               	movwf	fsr2h,c
 26126  00AA46  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26127  00AA48  6FBC               	movwf	??_display_prepare& (0+255),b
 26128  00AA4A  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26129  00AA4C  0E0A               	movlw	10
 26130  00AA4E  27BC               	addwf	??_display_prepare& (0+255),f,b
 26131  00AA50  0E00               	movlw	0
 26132  00AA52  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26133  00AA54  0E34               	movlw	low _display_content
 26134  00AA56  25BC               	addwf	??_display_prepare& (0+255),w,b
 26135  00AA58  6EE1               	movwf	fsr1l,c
 26136  00AA5A  0E02               	movlw	high _display_content
 26137  00AA5C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26138  00AA5E  6EE2               	movwf	fsr1h,c
 26139  00AA60  CFDF FFE7          	movff	indf2,indf1
 26140                           
 26141                           ; BSR set to: 0
 26142  00AA64  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 26143  00AA66                     l1443:
 26144                           
 26145                           ; BSR set to: 0
 26146                           
 26147                           ; BSR set to: 0
 26148  00AA66  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26149  00AA68  0D01               	mullw	1
 26150  00AA6A  0EBE               	movlw	low display_prepare@temp
 26151  00AA6C  24F3               	addwf	prodl,w,c
 26152  00AA6E  6ED9               	movwf	fsr2l,c
 26153  00AA70  0E00               	movlw	high display_prepare@temp
 26154  00AA72  20F4               	addwfc	prodh,w,c
 26155  00AA74  6EDA               	movwf	fsr2h,c
 26156  00AA76  50DF               	movf	indf2,w,c
 26157  00AA78  A4D8               	btfss	status,2,c
 26158  00AA7A  D7DD               	goto	l1444
 26159                           
 26160                           ; BSR set to: 0
 26161                           ;display.c: 467: };display.c: 468: display_content[0][10+cntr] = 0x01;
 26162                           
 26163                           ; BSR set to: 0
 26164  00AA7C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26165  00AA7E  6FBC               	movwf	??_display_prepare& (0+255),b
 26166  00AA80  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26167  00AA82  0E0A               	movlw	10
 26168  00AA84  27BC               	addwf	??_display_prepare& (0+255),f,b
 26169  00AA86  0E00               	movlw	0
 26170  00AA88  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26171  00AA8A  0E34               	movlw	low _display_content
 26172  00AA8C  25BC               	addwf	??_display_prepare& (0+255),w,b
 26173  00AA8E  6ED9               	movwf	fsr2l,c
 26174  00AA90  0E02               	movlw	high _display_content
 26175  00AA92  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26176  00AA94  6EDA               	movwf	fsr2h,c
 26177  00AA96  0E01               	movlw	1
 26178  00AA98  6EDF               	movwf	indf2,c
 26179                           
 26180                           ; BSR set to: 0
 26181                           ;display.c: 471: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 26182  00AA9A  C17C  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 26183  00AA9E  C17D  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 26184  00AAA2  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 26185  00AAA4  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 26186  00AAA6  0E02               	movlw	2
 26187  00AAA8  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 26188  00AAAA  0EBE               	movlw	low display_prepare@temp
 26189  00AAAC  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 26190  00AAAE  0E00               	movlw	high display_prepare@temp
 26191  00AAB0  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26192  00AAB2  ECED  F085         	call	__display_itoa_long	;wreg free
 26193                           
 26194                           ;display.c: 472: space = 6-strlen(temp);
 26195  00AAB6  0EBE               	movlw	low display_prepare@temp
 26196  00AAB8  0100               	movlb	0	; () banked
 26197  00AABA  6F60               	movwf	strlen@s& (0+255),b
 26198  00AABC  0E00               	movlw	high display_prepare@temp
 26199  00AABE  6F61               	movwf	(strlen@s+1)& (0+255),b
 26200  00AAC0  EC65  F0A8         	call	_strlen	;wreg free
 26201  00AAC4  0100               	movlb	0	; () banked
 26202  00AAC6  5160               	movf	?_strlen& (0+255),w,b
 26203  00AAC8  0800               	sublw	0
 26204  00AACA  0F06               	addlw	6
 26205  00AACC  6FC8               	movwf	display_prepare@space& (0+255),b
 26206                           
 26207                           ; BSR set to: 0
 26208                           ;display.c: 473: for(cntr=0; temp[cntr]; ++cntr)
 26209  00AACE  0E00               	movlw	0
 26210  00AAD0  6FC9               	movwf	display_prepare@cntr& (0+255),b
 26211  00AAD2  D01C               	goto	l1446
 26212  00AAD4                     
 26213                           ; BSR set to: 0
 26214                           ;display.c: 474: {;display.c: 475: display_content[1][13+space+cntr] = temp[cntr];
 26215                           
 26216                           ; BSR set to: 0
 26217  00AAD4  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26218  00AAD6  0D01               	mullw	1
 26219  00AAD8  0EBE               	movlw	low display_prepare@temp
 26220  00AADA  24F3               	addwf	prodl,w,c
 26221  00AADC  6ED9               	movwf	fsr2l,c
 26222  00AADE  0E00               	movlw	high display_prepare@temp
 26223  00AAE0  20F4               	addwfc	prodh,w,c
 26224  00AAE2  6EDA               	movwf	fsr2h,c
 26225  00AAE4  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26226  00AAE6  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 26227  00AAEA  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26228  00AAEC  27BC               	addwf	??_display_prepare& (0+255),f,b
 26229  00AAEE  0E00               	movlw	0
 26230  00AAF0  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26231  00AAF2  0E0D               	movlw	13
 26232  00AAF4  27BC               	addwf	??_display_prepare& (0+255),f,b
 26233  00AAF6  0E00               	movlw	0
 26234  00AAF8  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26235  00AAFA  0E48               	movlw	low (_display_content+20)
 26236  00AAFC  25BC               	addwf	??_display_prepare& (0+255),w,b
 26237  00AAFE  6EE1               	movwf	fsr1l,c
 26238  00AB00  0E02               	movlw	high (_display_content+20)
 26239  00AB02  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26240  00AB04  6EE2               	movwf	fsr1h,c
 26241  00AB06  CFDF FFE7          	movff	indf2,indf1
 26242                           
 26243                           ; BSR set to: 0
 26244  00AB0A  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 26245  00AB0C                     l1446:
 26246                           
 26247                           ; BSR set to: 0
 26248                           
 26249                           ; BSR set to: 0
 26250  00AB0C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26251  00AB0E  0D01               	mullw	1
 26252  00AB10  0EBE               	movlw	low display_prepare@temp
 26253  00AB12  24F3               	addwf	prodl,w,c
 26254  00AB14  6ED9               	movwf	fsr2l,c
 26255  00AB16  0E00               	movlw	high display_prepare@temp
 26256  00AB18  20F4               	addwfc	prodh,w,c
 26257  00AB1A  6EDA               	movwf	fsr2h,c
 26258  00AB1C  50DF               	movf	indf2,w,c
 26259  00AB1E  A4D8               	btfss	status,2,c
 26260  00AB20  D7D9               	goto	l1447
 26261                           
 26262                           ; BSR set to: 0
 26263                           ;display.c: 476: };display.c: 479: _display_itoa(motor_speed_from_index(os.arc_speed), 2
      +                          , temp);
 26264                           
 26265                           ; BSR set to: 0
 26266  00AB22  C191  F093         	movff	_os+32,motor_speed_from_index@speed_index	;volatile
 26267  00AB26  C192  F094         	movff	_os+33,motor_speed_from_index@speed_index+1	;volatile
 26268  00AB2A  EC5A  F0AC         	call	_motor_speed_from_index	;wreg free
 26269  00AB2E  C093  F095         	movff	?_motor_speed_from_index,__display_itoa@value
 26270  00AB32  C094  F096         	movff	?_motor_speed_from_index+1,__display_itoa@value+1
 26271  00AB36  0E02               	movlw	2
 26272  00AB38  0100               	movlb	0	; () banked
 26273  00AB3A  6F97               	movwf	__display_itoa@decimals& (0+255),b
 26274  00AB3C  0EBE               	movlw	low display_prepare@temp
 26275  00AB3E  6F98               	movwf	__display_itoa@text& (0+255),b
 26276  00AB40  0E00               	movlw	high display_prepare@temp
 26277  00AB42  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 26278  00AB44  EC0D  F075         	call	__display_itoa	;wreg free
 26279                           
 26280                           ;display.c: 480: for(cntr=0; temp[cntr]; ++cntr)
 26281  00AB48  0E00               	movlw	0
 26282  00AB4A  0100               	movlb	0	; () banked
 26283  00AB4C  6FC9               	movwf	display_prepare@cntr& (0+255),b
 26284  00AB4E  D018               	goto	l1449
 26285  00AB50                     
 26286                           ; BSR set to: 0
 26287                           ;display.c: 481: {;display.c: 482: display_content[3][11+cntr] = temp[cntr];
 26288                           
 26289                           ; BSR set to: 0
 26290  00AB50  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26291  00AB52  0D01               	mullw	1
 26292  00AB54  0EBE               	movlw	low display_prepare@temp
 26293  00AB56  24F3               	addwf	prodl,w,c
 26294  00AB58  6ED9               	movwf	fsr2l,c
 26295  00AB5A  0E00               	movlw	high display_prepare@temp
 26296  00AB5C  20F4               	addwfc	prodh,w,c
 26297  00AB5E  6EDA               	movwf	fsr2h,c
 26298  00AB60  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26299  00AB62  6FBC               	movwf	??_display_prepare& (0+255),b
 26300  00AB64  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26301  00AB66  0E0B               	movlw	11
 26302  00AB68  27BC               	addwf	??_display_prepare& (0+255),f,b
 26303  00AB6A  0E00               	movlw	0
 26304  00AB6C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26305  00AB6E  0E70               	movlw	low (_display_content+60)
 26306  00AB70  25BC               	addwf	??_display_prepare& (0+255),w,b
 26307  00AB72  6EE1               	movwf	fsr1l,c
 26308  00AB74  0E02               	movlw	high (_display_content+60)
 26309  00AB76  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26310  00AB78  6EE2               	movwf	fsr1h,c
 26311  00AB7A  CFDF FFE7          	movff	indf2,indf1
 26312                           
 26313                           ; BSR set to: 0
 26314  00AB7E  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 26315  00AB80                     l1449:
 26316                           
 26317                           ; BSR set to: 0
 26318                           
 26319                           ; BSR set to: 0
 26320  00AB80  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26321  00AB82  0D01               	mullw	1
 26322  00AB84  0EBE               	movlw	low display_prepare@temp
 26323  00AB86  24F3               	addwf	prodl,w,c
 26324  00AB88  6ED9               	movwf	fsr2l,c
 26325  00AB8A  0E00               	movlw	high display_prepare@temp
 26326  00AB8C  20F4               	addwfc	prodh,w,c
 26327  00AB8E  6EDA               	movwf	fsr2h,c
 26328  00AB90  50DF               	movf	indf2,w,c
 26329  00AB92  A4D8               	btfss	status,2,c
 26330  00AB94  D7DD               	goto	l1450
 26331  00AB96  D12D               	goto	L93
 26332  00AB98                     
 26333                           ; BSR set to: 0
 26334                           ;display.c: 495: memcpy(display_content, dc_zero, sizeof display_content);
 26335                           
 26336                           ; BSR set to: 0
 26337  00AB98  0E34               	movlw	low _display_content
 26338  00AB9A  6F60               	movwf	memcpy@d1& (0+255),b
 26339  00AB9C  0E02               	movlw	high _display_content
 26340  00AB9E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26341  00ABA0  0E3E               	movlw	low _dc_zero
 26342  00ABA2  6F62               	movwf	memcpy@s1& (0+255),b
 26343  00ABA4  0E9E               	movlw	high _dc_zero
 26344  00ABA6  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26345  00ABA8  0E00               	movlw	0
 26346  00ABAA  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26347  00ABAC  0E50               	movlw	80
 26348  00ABAE  6F64               	movwf	memcpy@n& (0+255),b
 26349  00ABB0  EC05  F0A2         	call	_memcpy	;wreg free
 26350                           
 26351                           ;display.c: 498: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 26352  00ABB4  C17C  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 26353  00ABB8  C17D  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 26354  00ABBC  0100               	movlb	0	; () banked
 26355  00ABBE  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 26356  00ABC0  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 26357  00ABC2  0E02               	movlw	2
 26358  00ABC4  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 26359  00ABC6  0EBE               	movlw	low display_prepare@temp
 26360  00ABC8  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 26361  00ABCA  0E00               	movlw	high display_prepare@temp
 26362  00ABCC  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26363  00ABCE  ECED  F085         	call	__display_itoa_long	;wreg free
 26364                           
 26365                           ;display.c: 499: for(cntr=0; temp[cntr]; ++cntr)
 26366  00ABD2  0E00               	movlw	0
 26367  00ABD4  0100               	movlb	0	; () banked
 26368  00ABD6  6FC9               	movwf	display_prepare@cntr& (0+255),b
 26369  00ABD8  D018               	goto	l1453
 26370  00ABDA                     
 26371                           ; BSR set to: 0
 26372                           ;display.c: 500: {;display.c: 501: display_content[1][13+cntr] = temp[cntr];
 26373                           
 26374                           ; BSR set to: 0
 26375  00ABDA  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26376  00ABDC  0D01               	mullw	1
 26377  00ABDE  0EBE               	movlw	low display_prepare@temp
 26378  00ABE0  24F3               	addwf	prodl,w,c
 26379  00ABE2  6ED9               	movwf	fsr2l,c
 26380  00ABE4  0E00               	movlw	high display_prepare@temp
 26381  00ABE6  20F4               	addwfc	prodh,w,c
 26382  00ABE8  6EDA               	movwf	fsr2h,c
 26383  00ABEA  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26384  00ABEC  6FBC               	movwf	??_display_prepare& (0+255),b
 26385  00ABEE  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26386  00ABF0  0E0D               	movlw	13
 26387  00ABF2  27BC               	addwf	??_display_prepare& (0+255),f,b
 26388  00ABF4  0E00               	movlw	0
 26389  00ABF6  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26390  00ABF8  0E48               	movlw	low (_display_content+20)
 26391  00ABFA  25BC               	addwf	??_display_prepare& (0+255),w,b
 26392  00ABFC  6EE1               	movwf	fsr1l,c
 26393  00ABFE  0E02               	movlw	high (_display_content+20)
 26394  00AC00  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26395  00AC02  6EE2               	movwf	fsr1h,c
 26396  00AC04  CFDF FFE7          	movff	indf2,indf1
 26397                           
 26398                           ; BSR set to: 0
 26399  00AC08  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 26400  00AC0A                     l1453:
 26401                           
 26402                           ; BSR set to: 0
 26403                           
 26404                           ; BSR set to: 0
 26405  00AC0A  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26406  00AC0C  0D01               	mullw	1
 26407  00AC0E  0EBE               	movlw	low display_prepare@temp
 26408  00AC10  24F3               	addwf	prodl,w,c
 26409  00AC12  6ED9               	movwf	fsr2l,c
 26410  00AC14  0E00               	movlw	high display_prepare@temp
 26411  00AC16  20F4               	addwfc	prodh,w,c
 26412  00AC18  6EDA               	movwf	fsr2h,c
 26413  00AC1A  50DF               	movf	indf2,w,c
 26414  00AC1C  A4D8               	btfss	status,2,c
 26415  00AC1E  D7DD               	goto	l1454
 26416                           
 26417                           ; BSR set to: 0
 26418                           ;display.c: 502: };display.c: 503: display_content[1][13+cntr] = 0x01;
 26419                           
 26420                           ; BSR set to: 0
 26421  00AC20  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26422  00AC22  6FBC               	movwf	??_display_prepare& (0+255),b
 26423  00AC24  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26424  00AC26  0E0D               	movlw	13
 26425  00AC28  27BC               	addwf	??_display_prepare& (0+255),f,b
 26426  00AC2A  0E00               	movlw	0
 26427  00AC2C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26428  00AC2E  0E48               	movlw	low (_display_content+20)
 26429  00AC30  25BC               	addwf	??_display_prepare& (0+255),w,b
 26430  00AC32  6ED9               	movwf	fsr2l,c
 26431  00AC34  0E02               	movlw	high (_display_content+20)
 26432  00AC36  D6AA               	goto	L36
 26433  00AC38                     
 26434                           ; BSR set to: 0
 26435                           ;display.c: 508: memcpy(display_content, dc_manual, sizeof display_content);
 26436                           
 26437                           ; BSR set to: 0
 26438  00AC38  0E34               	movlw	low _display_content
 26439  00AC3A  6F60               	movwf	memcpy@d1& (0+255),b
 26440  00AC3C  0E02               	movlw	high _display_content
 26441  00AC3E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26442  00AC40  0EEE               	movlw	low _dc_manual
 26443  00AC42  6F62               	movwf	memcpy@s1& (0+255),b
 26444  00AC44  0E9D               	movlw	high _dc_manual
 26445  00AC46  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26446  00AC48  0E00               	movlw	0
 26447  00AC4A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26448  00AC4C  0E50               	movlw	80
 26449  00AC4E  6F64               	movwf	memcpy@n& (0+255),b
 26450  00AC50  EC05  F0A2         	call	_memcpy	;wreg free
 26451                           
 26452                           ;display.c: 509: switch(os.displayState)
 26453  00AC54  D044               	goto	l1457
 26454  00AC56                     
 26455                           ;display.c: 512: display_content[2][6] = 'W';
 26456  00AC56  0E57               	movlw	87
 26457  00AC58  0102               	movlb	2	; () banked
 26458  00AC5A  6F62               	movwf	(_display_content+46)& (0+255),b
 26459                           
 26460                           ;display.c: 513: display_content[2][7] = ' ';
 26461  00AC5C  0E20               	movlw	32
 26462  00AC5E  6F63               	movwf	(_display_content+47)& (0+255),b
 26463                           
 26464                           ;display.c: 514: break;
 26465  00AC60  D049               	goto	l1459
 26466  00AC62                     
 26467                           ;display.c: 516: memcpy(display_content[2], "        ", 8);
 26468                           
 26469                           ; BSR set to: 2
 26470  00AC62  0E5C               	movlw	low (_display_content+40)
 26471  00AC64  0100               	movlb	0	; () banked
 26472  00AC66  6F60               	movwf	memcpy@d1& (0+255),b
 26473  00AC68  0E02               	movlw	high (_display_content+40)
 26474  00AC6A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26475  00AC6C  0E14               	movlw	low STR_1
 26476  00AC6E  6F62               	movwf	memcpy@s1& (0+255),b
 26477  00AC70  0EA3               	movlw	high STR_1
 26478  00AC72  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26479  00AC74  0E00               	movlw	0
 26480  00AC76  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26481  00AC78  0E08               	movlw	8
 26482  00AC7A  6F64               	movwf	memcpy@n& (0+255),b
 26483  00AC7C  EC05  F0A2         	call	_memcpy	;wreg free
 26484                           
 26485                           ;display.c: 517: memcpy(display_content[3], "Cancel", 6);
 26486  00AC80  0E70               	movlw	low (_display_content+60)
 26487  00AC82  0100               	movlb	0	; () banked
 26488  00AC84  6F60               	movwf	memcpy@d1& (0+255),b
 26489  00AC86  0E02               	movlw	high (_display_content+60)
 26490  00AC88  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26491  00AC8A  0E1D               	movlw	low STR_2
 26492  00AC8C  6F62               	movwf	memcpy@s1& (0+255),b
 26493  00AC8E  0EA3               	movlw	high STR_2
 26494  00AC90  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26495  00AC92  0E00               	movlw	0
 26496  00AC94  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26497  00AC96  0E06               	movlw	6
 26498  00AC98  6F64               	movwf	memcpy@n& (0+255),b
 26499  00AC9A  EC05  F0A2         	call	_memcpy	;wreg free
 26500                           
 26501                           ;display.c: 518: break;
 26502  00AC9E  D02A               	goto	l1459
 26503  00ACA0                     
 26504                           ;display.c: 520: memcpy(&display_content[2][0], "        ", 8);
 26505  00ACA0  0E5C               	movlw	low (_display_content+40)
 26506  00ACA2  0100               	movlb	0	; () banked
 26507  00ACA4  6F60               	movwf	memcpy@d1& (0+255),b
 26508  00ACA6  0E02               	movlw	high (_display_content+40)
 26509  00ACA8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26510  00ACAA  0E14               	movlw	low STR_1
 26511  00ACAC  6F62               	movwf	memcpy@s1& (0+255),b
 26512  00ACAE  0EA3               	movlw	high STR_1
 26513  00ACB0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26514  00ACB2  0E00               	movlw	0
 26515  00ACB4  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26516  00ACB6  0E08               	movlw	8
 26517  00ACB8  6F64               	movwf	memcpy@n& (0+255),b
 26518  00ACBA  EC05  F0A2         	call	_memcpy	;wreg free
 26519                           
 26520                           ;display.c: 521: memcpy(&display_content[3][0], "Stop ", 5);
 26521  00ACBE  0E70               	movlw	low (_display_content+60)
 26522  00ACC0  0100               	movlb	0	; () banked
 26523  00ACC2  6F60               	movwf	memcpy@d1& (0+255),b
 26524  00ACC4  0E02               	movlw	high (_display_content+60)
 26525  00ACC6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26526  00ACC8  0E24               	movlw	low STR_6
 26527  00ACCA  6F62               	movwf	memcpy@s1& (0+255),b
 26528  00ACCC  0EA3               	movlw	high STR_6
 26529  00ACCE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26530  00ACD0  0E00               	movlw	0
 26531  00ACD2  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26532  00ACD4  0E05               	movlw	5
 26533  00ACD6  6F64               	movwf	memcpy@n& (0+255),b
 26534  00ACD8  EC05  F0A2         	call	_memcpy	;wreg free
 26535                           
 26536                           ;display.c: 523: }
 26537                           
 26538                           ;display.c: 522: break;
 26539  00ACDC  D00B               	goto	l1459
 26540  00ACDE                     l1457:
 26541  00ACDE  0101               	movlb	1	; () banked
 26542  00ACE0  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 26543                           
 26544                           ; Switch size 1, requested type "space"
 26545                           ; Number of cases is 3, Range of values is 130 to 132
 26546                           ; switch strategies available:
 26547                           ; Name         Instructions Cycles
 26548                           ; simple_byte           10     6 (average)
 26549                           ;	Chosen strategy is simple_byte
 26550  00ACE2  0A82               	xorlw	130	; case 130
 26551  00ACE4  B4D8               	btfsc	status,2,c
 26552  00ACE6  D7BD               	goto	l1460
 26553  00ACE8  0A01               	xorlw	1	; case 131
 26554  00ACEA  B4D8               	btfsc	status,2,c
 26555  00ACEC  D7B4               	goto	l1458
 26556  00ACEE  0A07               	xorlw	7	; case 132
 26557  00ACF0  B4D8               	btfsc	status,2,c
 26558  00ACF2  D7D6               	goto	l1461
 26559  00ACF4                     l1459:
 26560                           
 26561                           ;display.c: 526: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 26562                           
 26563                           ; BSR set to: 1
 26564  00ACF4  C17C  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 26565  00ACF8  C17D  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 26566  00ACFC  0100               	movlb	0	; () banked
 26567  00ACFE  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 26568  00AD00  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 26569  00AD02  0E02               	movlw	2
 26570  00AD04  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 26571  00AD06  0EBE               	movlw	low display_prepare@temp
 26572  00AD08  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 26573  00AD0A  0E00               	movlw	high display_prepare@temp
 26574  00AD0C  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26575  00AD0E  ECED  F085         	call	__display_itoa_long	;wreg free
 26576                           
 26577                           ;display.c: 527: space = 7-strlen(temp);
 26578  00AD12  0EBE               	movlw	low display_prepare@temp
 26579  00AD14  0100               	movlb	0	; () banked
 26580  00AD16  6F60               	movwf	strlen@s& (0+255),b
 26581  00AD18  0E00               	movlw	high display_prepare@temp
 26582  00AD1A  6F61               	movwf	(strlen@s+1)& (0+255),b
 26583  00AD1C  EC65  F0A8         	call	_strlen	;wreg free
 26584  00AD20  0100               	movlb	0	; () banked
 26585  00AD22  5160               	movf	?_strlen& (0+255),w,b
 26586  00AD24  0800               	sublw	0
 26587  00AD26  0F07               	addlw	7
 26588  00AD28  6FC8               	movwf	display_prepare@space& (0+255),b
 26589                           
 26590                           ; BSR set to: 0
 26591                           ;display.c: 528: for(cntr=0; temp[cntr]; ++cntr)
 26592  00AD2A  0E00               	movlw	0
 26593  00AD2C  6FC9               	movwf	display_prepare@cntr& (0+255),b
 26594  00AD2E  D01C               	goto	l1462
 26595  00AD30                     
 26596                           ; BSR set to: 0
 26597                           ;display.c: 529: {;display.c: 530: display_content[1][12+space+cntr] = temp[cntr];
 26598                           
 26599                           ; BSR set to: 0
 26600  00AD30  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26601  00AD32  0D01               	mullw	1
 26602  00AD34  0EBE               	movlw	low display_prepare@temp
 26603  00AD36  24F3               	addwf	prodl,w,c
 26604  00AD38  6ED9               	movwf	fsr2l,c
 26605  00AD3A  0E00               	movlw	high display_prepare@temp
 26606  00AD3C  20F4               	addwfc	prodh,w,c
 26607  00AD3E  6EDA               	movwf	fsr2h,c
 26608  00AD40  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26609  00AD42  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 26610  00AD46  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26611  00AD48  27BC               	addwf	??_display_prepare& (0+255),f,b
 26612  00AD4A  0E00               	movlw	0
 26613  00AD4C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26614  00AD4E  0E0C               	movlw	12
 26615  00AD50  27BC               	addwf	??_display_prepare& (0+255),f,b
 26616  00AD52  0E00               	movlw	0
 26617  00AD54  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26618  00AD56  0E48               	movlw	low (_display_content+20)
 26619  00AD58  25BC               	addwf	??_display_prepare& (0+255),w,b
 26620  00AD5A  6EE1               	movwf	fsr1l,c
 26621  00AD5C  0E02               	movlw	high (_display_content+20)
 26622  00AD5E  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26623  00AD60  6EE2               	movwf	fsr1h,c
 26624  00AD62  CFDF FFE7          	movff	indf2,indf1
 26625                           
 26626                           ; BSR set to: 0
 26627  00AD66  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 26628  00AD68                     l1462:
 26629                           
 26630                           ; BSR set to: 0
 26631                           
 26632                           ; BSR set to: 0
 26633  00AD68  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26634  00AD6A  0D01               	mullw	1
 26635  00AD6C  0EBE               	movlw	low display_prepare@temp
 26636  00AD6E  24F3               	addwf	prodl,w,c
 26637  00AD70  6ED9               	movwf	fsr2l,c
 26638  00AD72  0E00               	movlw	high display_prepare@temp
 26639  00AD74  20F4               	addwfc	prodh,w,c
 26640  00AD76  6EDA               	movwf	fsr2h,c
 26641  00AD78  50DF               	movf	indf2,w,c
 26642  00AD7A  A4D8               	btfss	status,2,c
 26643  00AD7C  D7D9               	goto	l1463
 26644                           
 26645                           ; BSR set to: 0
 26646                           ;display.c: 531: };display.c: 534: _display_itoa(motor_speed_from_index(os.manual_speed)
      +                          , 2, temp);
 26647                           
 26648                           ; BSR set to: 0
 26649  00AD7E  C194  F093         	movff	_os+35,motor_speed_from_index@speed_index	;volatile
 26650  00AD82  C195  F094         	movff	_os+36,motor_speed_from_index@speed_index+1	;volatile
 26651  00AD86  EC5A  F0AC         	call	_motor_speed_from_index	;wreg free
 26652  00AD8A  C093  F095         	movff	?_motor_speed_from_index,__display_itoa@value
 26653  00AD8E  C094  F096         	movff	?_motor_speed_from_index+1,__display_itoa@value+1
 26654  00AD92  0E02               	movlw	2
 26655  00AD94  0100               	movlb	0	; () banked
 26656  00AD96  6F97               	movwf	__display_itoa@decimals& (0+255),b
 26657  00AD98  0EBE               	movlw	low display_prepare@temp
 26658  00AD9A  6F98               	movwf	__display_itoa@text& (0+255),b
 26659  00AD9C  0E00               	movlw	high display_prepare@temp
 26660  00AD9E  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 26661  00ADA0  EC0D  F075         	call	__display_itoa	;wreg free
 26662                           
 26663                           ;display.c: 535: for(cntr=0; temp[cntr]; ++cntr)
 26664  00ADA4  0E00               	movlw	0
 26665  00ADA6  0100               	movlb	0	; () banked
 26666  00ADA8  6FC9               	movwf	display_prepare@cntr& (0+255),b
 26667  00ADAA  D018               	goto	l1465
 26668  00ADAC                     
 26669                           ; BSR set to: 0
 26670                           ;display.c: 536: {;display.c: 537: display_content[3][11+cntr] = temp[cntr];
 26671                           
 26672                           ; BSR set to: 0
 26673  00ADAC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26674  00ADAE  0D01               	mullw	1
 26675  00ADB0  0EBE               	movlw	low display_prepare@temp
 26676  00ADB2  24F3               	addwf	prodl,w,c
 26677  00ADB4  6ED9               	movwf	fsr2l,c
 26678  00ADB6  0E00               	movlw	high display_prepare@temp
 26679  00ADB8  20F4               	addwfc	prodh,w,c
 26680  00ADBA  6EDA               	movwf	fsr2h,c
 26681  00ADBC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26682  00ADBE  6FBC               	movwf	??_display_prepare& (0+255),b
 26683  00ADC0  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26684  00ADC2  0E0B               	movlw	11
 26685  00ADC4  27BC               	addwf	??_display_prepare& (0+255),f,b
 26686  00ADC6  0E00               	movlw	0
 26687  00ADC8  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26688  00ADCA  0E70               	movlw	low (_display_content+60)
 26689  00ADCC  25BC               	addwf	??_display_prepare& (0+255),w,b
 26690  00ADCE  6EE1               	movwf	fsr1l,c
 26691  00ADD0  0E02               	movlw	high (_display_content+60)
 26692  00ADD2  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26693  00ADD4  6EE2               	movwf	fsr1h,c
 26694  00ADD6  CFDF FFE7          	movff	indf2,indf1
 26695                           
 26696                           ; BSR set to: 0
 26697  00ADDA  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 26698  00ADDC                     l1465:
 26699                           
 26700                           ; BSR set to: 0
 26701                           
 26702                           ; BSR set to: 0
 26703  00ADDC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26704  00ADDE  0D01               	mullw	1
 26705  00ADE0  0EBE               	movlw	low display_prepare@temp
 26706  00ADE2  24F3               	addwf	prodl,w,c
 26707  00ADE4  6ED9               	movwf	fsr2l,c
 26708  00ADE6  0E00               	movlw	high display_prepare@temp
 26709  00ADE8  20F4               	addwfc	prodh,w,c
 26710  00ADEA  6EDA               	movwf	fsr2h,c
 26711  00ADEC  50DF               	movf	indf2,w,c
 26712  00ADEE  A4D8               	btfss	status,2,c
 26713  00ADF0  D7DD               	goto	l1466
 26714  00ADF2                     L93:
 26715                           
 26716                           ; BSR set to: 0
 26717                           ;display.c: 538: };display.c: 539: display_content[3][11+cntr] = 0x01;
 26718                           
 26719                           ; BSR set to: 0
 26720  00ADF2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26721  00ADF4  6FBC               	movwf	??_display_prepare& (0+255),b
 26722  00ADF6  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26723  00ADF8  0E0B               	movlw	11
 26724  00ADFA  27BC               	addwf	??_display_prepare& (0+255),f,b
 26725  00ADFC  0E00               	movlw	0
 26726  00ADFE  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26727  00AE00  0E70               	movlw	low (_display_content+60)
 26728  00AE02  25BC               	addwf	??_display_prepare& (0+255),w,b
 26729  00AE04  6ED9               	movwf	fsr2l,c
 26730  00AE06  0E02               	movlw	high (_display_content+60)
 26731  00AE08  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26732  00AE0A  6EDA               	movwf	fsr2h,c
 26733  00AE0C  0E01               	movlw	1
 26734  00AE0E  6EDF               	movwf	indf2,c
 26735                           
 26736                           ;display.c: 540: display_content[3][12+cntr] = '/';
 26737  00AE10  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26738  00AE12  6FBC               	movwf	??_display_prepare& (0+255),b
 26739  00AE14  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26740  00AE16  0E0C               	movlw	12
 26741  00AE18  27BC               	addwf	??_display_prepare& (0+255),f,b
 26742  00AE1A  0E00               	movlw	0
 26743  00AE1C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26744  00AE1E  0E70               	movlw	low (_display_content+60)
 26745  00AE20  25BC               	addwf	??_display_prepare& (0+255),w,b
 26746  00AE22  6ED9               	movwf	fsr2l,c
 26747  00AE24  0E02               	movlw	high (_display_content+60)
 26748  00AE26  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26749  00AE28  6EDA               	movwf	fsr2h,c
 26750  00AE2A  0E2F               	movlw	47
 26751  00AE2C  6EDF               	movwf	indf2,c
 26752                           
 26753                           ;display.c: 541: display_content[3][13+cntr] = 's';
 26754  00AE2E  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26755  00AE30  6FBC               	movwf	??_display_prepare& (0+255),b
 26756  00AE32  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26757  00AE34  0E0D               	movlw	13
 26758  00AE36  27BC               	addwf	??_display_prepare& (0+255),f,b
 26759  00AE38  0E00               	movlw	0
 26760  00AE3A  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26761  00AE3C  0E70               	movlw	low (_display_content+60)
 26762  00AE3E  25BC               	addwf	??_display_prepare& (0+255),w,b
 26763  00AE40  6ED9               	movwf	fsr2l,c
 26764  00AE42  0E02               	movlw	high (_display_content+60)
 26765  00AE44  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26766  00AE46  6EDA               	movwf	fsr2h,c
 26767  00AE48  0E73               	movlw	115
 26768  00AE4A                     L27:
 26769  00AE4A  6EDF               	movwf	indf2,c
 26770                           
 26771                           ;display.c: 542: break;
 26772  00AE4C  D095               	goto	l1385
 26773  00AE4E                     
 26774                           ; BSR set to: 0
 26775                           ;display.c: 545: _display_clear();
 26776                           
 26777                           ; BSR set to: 0
 26778  00AE4E  EC0D  F0A7         	call	__display_clear	;wreg free
 26779                           
 26780                           ;display.c: 546: _display_itoa((int16_t) (os.encoder1Count), 0, display_content[0]);
 26781  00AE52  0101               	movlb	1	; () banked
 26782  00AE54  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 26783  00AE56  0100               	movlb	0	; () banked
 26784  00AE58  6F95               	movwf	__display_itoa@value& (0+255),b
 26785  00AE5A  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 26786  00AE5C  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 26787  00AE5E  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 26788  00AE60  0E00               	movlw	0
 26789  00AE62  6F97               	movwf	__display_itoa@decimals& (0+255),b
 26790  00AE64  0E34               	movlw	low _display_content
 26791  00AE66  6F98               	movwf	__display_itoa@text& (0+255),b
 26792  00AE68  0E02               	movlw	high _display_content
 26793  00AE6A  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 26794  00AE6C  EC0D  F075         	call	__display_itoa	;wreg free
 26795                           
 26796                           ;display.c: 547: if(PORTEbits.RE2)
 26797  00AE70  A484               	btfss	3972,2,c	;volatile
 26798  00AE72  D002               	goto	l1469
 26799                           
 26800                           ;display.c: 548: display_content[0][8] = 'H';
 26801  00AE74  0E48               	movlw	72
 26802  00AE76  D001               	goto	L31
 26803  00AE78                     l1469:
 26804                           
 26805                           ;display.c: 549: else;display.c: 550: display_content[0][8] = 'L';
 26806                           
 26807                           ; BSR set to: 2
 26808  00AE78  0E4C               	movlw	76
 26809  00AE7A                     L31:
 26810  00AE7A  0102               	movlb	2	; () banked
 26811  00AE7C  6F3C               	movwf	(_display_content+8)& (0+255),b
 26812                           
 26813                           ; BSR set to: 2
 26814                           ;display.c: 551: if(PORTEbits.RE0)
 26815                           
 26816                           ; BSR set to: 2
 26817  00AE7E  A084               	btfss	3972,0,c	;volatile
 26818  00AE80  D002               	goto	l1471
 26819                           
 26820                           ; BSR set to: 2
 26821                           ;display.c: 552: display_content[0][9] = 'H';
 26822  00AE82  0E48               	movlw	72
 26823  00AE84  D001               	goto	L32
 26824  00AE86                     l1471:
 26825                           
 26826                           ; BSR set to: 2
 26827                           ;display.c: 553: else;display.c: 554: display_content[0][9] = 'L';
 26828                           
 26829                           ; BSR set to: 2
 26830  00AE86  0E4C               	movlw	76
 26831  00AE88                     L32:
 26832  00AE88  6F3D               	movwf	(_display_content+9)& (0+255),b
 26833                           
 26834                           ; BSR set to: 2
 26835                           ;display.c: 555: _display_itoa((int16_t) (os.button1), 0, display_content[1]);
 26836                           
 26837                           ; BSR set to: 2
 26838  00AE8A  0101               	movlb	1	; () banked
 26839  00AE8C  5175               	movf	(_os+4)& (0+255),w,b	;volatile
 26840  00AE8E  0100               	movlb	0	; () banked
 26841  00AE90  6F95               	movwf	__display_itoa@value& (0+255),b
 26842  00AE92  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 26843  00AE94  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 26844  00AE96  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 26845  00AE98  0E00               	movlw	0
 26846  00AE9A  6F97               	movwf	__display_itoa@decimals& (0+255),b
 26847  00AE9C  0E48               	movlw	low (_display_content+20)
 26848  00AE9E  6F98               	movwf	__display_itoa@text& (0+255),b
 26849  00AEA0  0E02               	movlw	high (_display_content+20)
 26850  00AEA2  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 26851  00AEA4  EC0D  F075         	call	__display_itoa	;wreg free
 26852                           
 26853                           ;display.c: 556: if(PORTEbits.RE1)
 26854  00AEA8  A284               	btfss	3972,1,c	;volatile
 26855  00AEAA  D002               	goto	l1473
 26856                           
 26857                           ;display.c: 557: display_content[1][8] = 'H';
 26858  00AEAC  0E48               	movlw	72
 26859  00AEAE  D001               	goto	L33
 26860  00AEB0                     l1473:
 26861                           
 26862                           ;display.c: 558: else;display.c: 559: display_content[1][8] = 'L';
 26863                           
 26864                           ; BSR set to: 2
 26865  00AEB0  0E4C               	movlw	76
 26866  00AEB2                     L33:
 26867  00AEB2  0102               	movlb	2	; () banked
 26868  00AEB4  6F50               	movwf	(_display_content+28)& (0+255),b
 26869                           
 26870                           ; BSR set to: 2
 26871                           ;display.c: 560: _display_itoa((int16_t) (os.encoder2Count), 0, display_content[2]);
 26872                           
 26873                           ; BSR set to: 2
 26874  00AEB6  0101               	movlb	1	; () banked
 26875  00AEB8  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 26876  00AEBA  0100               	movlb	0	; () banked
 26877  00AEBC  6F95               	movwf	__display_itoa@value& (0+255),b
 26878  00AEBE  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 26879  00AEC0  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 26880  00AEC2  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 26881  00AEC4  0E00               	movlw	0
 26882  00AEC6  6F97               	movwf	__display_itoa@decimals& (0+255),b
 26883  00AEC8  0E5C               	movlw	low (_display_content+40)
 26884  00AECA  6F98               	movwf	__display_itoa@text& (0+255),b
 26885  00AECC  0E02               	movlw	high (_display_content+40)
 26886  00AECE  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 26887  00AED0  EC0D  F075         	call	__display_itoa	;wreg free
 26888                           
 26889                           ;display.c: 561: if(PORTAbits.RA0)
 26890  00AED4  A080               	btfss	3968,0,c	;volatile
 26891  00AED6  D002               	goto	l1475
 26892                           
 26893                           ;display.c: 562: display_content[2][8] = 'H';
 26894  00AED8  0E48               	movlw	72
 26895  00AEDA  D001               	goto	L34
 26896  00AEDC                     l1475:
 26897                           
 26898                           ;display.c: 563: else;display.c: 564: display_content[2][8] = 'L';
 26899                           
 26900                           ; BSR set to: 2
 26901  00AEDC  0E4C               	movlw	76
 26902  00AEDE                     L34:
 26903  00AEDE  0102               	movlb	2	; () banked
 26904  00AEE0  6F64               	movwf	(_display_content+48)& (0+255),b
 26905                           
 26906                           ; BSR set to: 2
 26907                           ;display.c: 565: if(PORTAbits.RA2)
 26908                           
 26909                           ; BSR set to: 2
 26910  00AEE2  A480               	btfss	3968,2,c	;volatile
 26911  00AEE4  D002               	goto	l1477
 26912                           
 26913                           ; BSR set to: 2
 26914                           ;display.c: 566: display_content[2][9] = 'H';
 26915  00AEE6  0E48               	movlw	72
 26916  00AEE8  D001               	goto	L35
 26917  00AEEA                     l1477:
 26918                           
 26919                           ; BSR set to: 2
 26920                           ;display.c: 567: else;display.c: 568: display_content[2][9] = 'L';
 26921                           
 26922                           ; BSR set to: 2
 26923  00AEEA  0E4C               	movlw	76
 26924  00AEEC                     L35:
 26925  00AEEC  6F65               	movwf	(_display_content+49)& (0+255),b
 26926                           
 26927                           ; BSR set to: 2
 26928                           ;display.c: 569: _display_itoa((int16_t) (os.button2), 0, display_content[3]);
 26929                           
 26930                           ; BSR set to: 2
 26931  00AEEE  0101               	movlb	1	; () banked
 26932  00AEF0  5177               	movf	(_os+6)& (0+255),w,b	;volatile
 26933  00AEF2  0100               	movlb	0	; () banked
 26934  00AEF4  6F95               	movwf	__display_itoa@value& (0+255),b
 26935  00AEF6  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 26936  00AEF8  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 26937  00AEFA  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 26938  00AEFC  0E00               	movlw	0
 26939  00AEFE  6F97               	movwf	__display_itoa@decimals& (0+255),b
 26940  00AF00  0E70               	movlw	low (_display_content+60)
 26941  00AF02  6F98               	movwf	__display_itoa@text& (0+255),b
 26942  00AF04  0E02               	movlw	high (_display_content+60)
 26943  00AF06  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 26944  00AF08  EC0D  F075         	call	__display_itoa	;wreg free
 26945                           
 26946                           ;display.c: 570: if(PORTAbits.RA1)
 26947  00AF0C  A280               	btfss	3968,1,c	;volatile
 26948  00AF0E  D002               	goto	l1479
 26949                           
 26950                           ;display.c: 571: display_content[3][8] = 'H';
 26951  00AF10  0E48               	movlw	72
 26952  00AF12  D001               	goto	L28
 26953  00AF14                     l1479:
 26954                           
 26955                           ;display.c: 572: else;display.c: 573: display_content[3][8] = 'L';
 26956                           
 26957                           ; BSR set to: 2
 26958  00AF14  0E4C               	movlw	76
 26959  00AF16                     L28:
 26960  00AF16  0102               	movlb	2	; () banked
 26961  00AF18  6F78               	movwf	(_display_content+68)& (0+255),b
 26962                           
 26963                           ; BSR set to: 2
 26964                           ;display.c: 575: }
 26965                           
 26966                           ; BSR set to: 2
 26967                           ;display.c: 574: break;
 26968  00AF1A  D02E               	goto	l1385
 26969  00AF1C                     l1376:
 26970                           
 26971                           ; BSR set to: 2
 26972  00AF1C  0101               	movlb	1	; () banked
 26973  00AF1E  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 26974  00AF20  0BF0               	andlw	240
 26975  00AF22  0100               	movlb	0	; () banked
 26976  00AF24  6FBC               	movwf	??_display_prepare& (0+255),b
 26977  00AF26  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26978                           
 26979                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26980                           ; Switch size 1, requested type "space"
 26981                           ; Number of cases is 1, Range of values is 0 to 0
 26982                           ; switch strategies available:
 26983                           ; Name         Instructions Cycles
 26984                           ; simple_byte            4     3 (average)
 26985                           ;	Chosen strategy is simple_byte
 26986  00AF28  51BD               	movf	(??_display_prepare+1)& (0+255),w,b
 26987  00AF2A  0A00               	xorlw	0	; case 0
 26988  00AF2C  A4D8               	btfss	status,2,c
 26989  00AF2E  D024               	goto	l1385
 26990                           
 26991                           ; BSR set to: 0
 26992                           ; Switch size 1, requested type "space"
 26993                           ; Number of cases is 10, Range of values is 0 to 240
 26994                           ; switch strategies available:
 26995                           ; Name         Instructions Cycles
 26996                           ; simple_byte           31    16 (average)
 26997                           ;	Chosen strategy is simple_byte
 26998  00AF30  51BC               	movf	??_display_prepare& (0+255),w,b
 26999  00AF32  0A00               	xorlw	0	; case 0
 27000  00AF34  B4D8               	btfsc	status,2,c
 27001  00AF36  EF9A  F051         	goto	l1377
 27002  00AF3A  0A10               	xorlw	16	; case 16
 27003  00AF3C  B4D8               	btfsc	status,2,c
 27004  00AF3E  EFC9  F051         	goto	l1386
 27005  00AF42  0A30               	xorlw	48	; case 32
 27006  00AF44  B4D8               	btfsc	status,2,c
 27007  00AF46  EF1B  F052         	goto	l1396
 27008  00AF4A  0A10               	xorlw	16	; case 48
 27009  00AF4C  B4D8               	btfsc	status,2,c
 27010  00AF4E  EF3F  F052         	goto	l1401
 27011  00AF52  0A70               	xorlw	112	; case 64
 27012  00AF54  B4D8               	btfsc	status,2,c
 27013  00AF56  EFB0  F052         	goto	l1410
 27014  00AF5A  0A10               	xorlw	16	; case 80
 27015  00AF5C  B4D8               	btfsc	status,2,c
 27016  00AF5E  D467               	goto	l1425
 27017  00AF60  0A30               	xorlw	48	; case 96
 27018  00AF62  B4D8               	btfsc	status,2,c
 27019  00AF64  D517               	goto	l1438
 27020  00AF66  0A10               	xorlw	16	; case 112
 27021  00AF68  B4D8               	btfsc	status,2,c
 27022  00AF6A  D616               	goto	l1452
 27023  00AF6C  0AF0               	xorlw	240	; case 128
 27024  00AF6E  B4D8               	btfsc	status,2,c
 27025  00AF70  D663               	goto	l1456
 27026  00AF72  0A70               	xorlw	112	; case 240
 27027  00AF74  B4D8               	btfsc	status,2,c
 27028  00AF76  D76B               	goto	l1468
 27029  00AF78                     l1385:
 27030                           
 27031                           ;display.c: 577: if(!PORTDbits.RD2)
 27032  00AF78  B483               	btfsc	3971,2,c	;volatile
 27033  00AF7A  0012               	return	
 27034                           
 27035                           ;display.c: 578: {;display.c: 579: display_content[0][0] = 'E';
 27036  00AF7C  0E45               	movlw	69
 27037  00AF7E  0102               	movlb	2	; () banked
 27038  00AF80  6F34               	movwf	_display_content& (0+255),b
 27039                           
 27040                           ;display.c: 580: display_content[0][1] = 'R';
 27041  00AF82  0E52               	movlw	82
 27042  00AF84  6F35               	movwf	(_display_content+1)& (0+255),b
 27043                           
 27044                           ;display.c: 581: display_content[0][2] = 'R';
 27045  00AF86  0E52               	movlw	82
 27046  00AF88  6F36               	movwf	(_display_content+2)& (0+255),b
 27047                           
 27048                           ;display.c: 582: display_content[0][3] = 'O';
 27049  00AF8A  0E4F               	movlw	79
 27050  00AF8C  6F37               	movwf	(_display_content+3)& (0+255),b
 27051                           
 27052                           ;display.c: 583: display_content[0][4] = 'R';
 27053  00AF8E  0E52               	movlw	82
 27054  00AF90  6F38               	movwf	(_display_content+4)& (0+255),b
 27055  00AF92  0012               	return	
 27056  00AF94                     __end_of_display_prepare:
 27057                           	opt stack 0
 27058                           tblptru	equ	0xFF8
 27059                           tblptrh	equ	0xFF7
 27060                           tblptrl	equ	0xFF6
 27061                           tablat	equ	0xFF5
 27062                           prodh	equ	0xFF4
 27063                           prodl	equ	0xFF3
 27064                           intcon	equ	0xFF2
 27065                           postinc0	equ	0xFEE
 27066                           wreg	equ	0xFE8
 27067                           indf1	equ	0xFE7
 27068                           postinc1	equ	0xFE6
 27069                           postdec1	equ	0xFE5
 27070                           plusw1	equ	0xFE3
 27071                           fsr1h	equ	0xFE2
 27072                           fsr1l	equ	0xFE1
 27073                           indf2	equ	0xFDF
 27074                           postinc2	equ	0xFDE
 27075                           postdec2	equ	0xFDD
 27076                           plusw2	equ	0xFDB
 27077                           fsr2h	equ	0xFDA
 27078                           fsr2l	equ	0xFD9
 27079                           status	equ	0xFD8
 27080                           
 27081 ;; *************** function _motor_speed_from_index *****************
 27082 ;; Defined at:
 27083 ;;		line 114 in file "motor.c"
 27084 ;; Parameters:    Size  Location     Type
 27085 ;;  speed_index     2   51[BANK0 ] unsigned int 
 27086 ;; Auto vars:     Size  Location     Type
 27087 ;;		None
 27088 ;; Return value:  Size  Location     Type
 27089 ;;                  2   51[BANK0 ] unsigned int 
 27090 ;; Registers used:
 27091 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27092 ;; Tracked objects:
 27093 ;;		On entry : 0/0
 27094 ;;		On exit  : 0/0
 27095 ;;		Unchanged: 0/0
 27096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27097 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27100 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27101 ;;Total ram usage:        2 bytes
 27102 ;; Hardware stack levels used:    1
 27103 ;; Hardware stack levels required when called:   12
 27104 ;; This function calls:
 27105 ;;		__motor_get_speed_in_degrees
 27106 ;; This function is called by:
 27107 ;;		_display_prepare
 27108 ;; This function uses a non-reentrant model
 27109 ;;
 27110                           
 27111                           	psect	text104
 27112  0158B4                     __ptext104:
 27113                           	opt stack 0
 27114  0158B4                     _motor_speed_from_index:
 27115                           	opt stack 17
 27116                           
 27117                           ;motor.c: 116: return _motor_get_speed_in_degrees(speed_index);
 27118                           
 27119                           ;incstack = 0
 27120  0158B4  C093  F087         	movff	motor_speed_from_index@speed_index,__motor_get_speed_in_degrees@speed_index
 27121  0158B8  C094  F088         	movff	motor_speed_from_index@speed_index+1,__motor_get_speed_in_degrees@speed_index+1
 27122  0158BC  EC74  F082         	call	__motor_get_speed_in_degrees	;wreg free
 27123  0158C0  C087  F093         	movff	?__motor_get_speed_in_degrees,?_motor_speed_from_index
 27124  0158C4  C088  F094         	movff	?__motor_get_speed_in_degrees+1,?_motor_speed_from_index+1
 27125  0158C8  0012               	return	
 27126  0158CA                     __end_of_motor_speed_from_index:
 27127                           	opt stack 0
 27128                           tblptru	equ	0xFF8
 27129                           tblptrh	equ	0xFF7
 27130                           tblptrl	equ	0xFF6
 27131                           tablat	equ	0xFF5
 27132                           prodh	equ	0xFF4
 27133                           prodl	equ	0xFF3
 27134                           intcon	equ	0xFF2
 27135                           postinc0	equ	0xFEE
 27136                           wreg	equ	0xFE8
 27137                           indf1	equ	0xFE7
 27138                           postinc1	equ	0xFE6
 27139                           postdec1	equ	0xFE5
 27140                           plusw1	equ	0xFE3
 27141                           fsr1h	equ	0xFE2
 27142                           fsr1l	equ	0xFE1
 27143                           indf2	equ	0xFDF
 27144                           postinc2	equ	0xFDE
 27145                           postdec2	equ	0xFDD
 27146                           plusw2	equ	0xFDB
 27147                           fsr2h	equ	0xFDA
 27148                           fsr2l	equ	0xFD9
 27149                           status	equ	0xFD8
 27150                           
 27151 ;; *************** function __motor_get_speed_in_degrees *****************
 27152 ;; Defined at:
 27153 ;;		line 75 in file "motor.c"
 27154 ;; Parameters:    Size  Location     Type
 27155 ;;  speed_index     2   39[BANK0 ] unsigned int 
 27156 ;; Auto vars:     Size  Location     Type
 27157 ;;  lookup          4   47[BANK0 ] unsigned long 
 27158 ;;  speed           4   43[BANK0 ] float 
 27159 ;; Return value:  Size  Location     Type
 27160 ;;                  2   39[BANK0 ] unsigned int 
 27161 ;; Registers used:
 27162 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27163 ;; Tracked objects:
 27164 ;;		On entry : 0/0
 27165 ;;		On exit  : 0/0
 27166 ;;		Unchanged: 0/0
 27167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27168 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27169 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27170 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27171 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27172 ;;Total ram usage:       12 bytes
 27173 ;; Hardware stack levels used:    1
 27174 ;; Hardware stack levels required when called:   11
 27175 ;; This function calls:
 27176 ;;		___fldiv
 27177 ;;		___fltol
 27178 ;;		___lmul
 27179 ;;		___xxtofl
 27180 ;; This function is called by:
 27181 ;;		_motor_speed_from_index
 27182 ;;		_motor_get_maximum_speed
 27183 ;;		_motor_get_current_speed
 27184 ;; This function uses a non-reentrant model
 27185 ;;
 27186                           
 27187                           	psect	text105
 27188  0104E8                     __ptext105:
 27189                           	opt stack 0
 27190  0104E8                     __motor_get_speed_in_degrees:
 27191                           	opt stack 17
 27192                           
 27193                           ;motor.c: 77: uint32_t lookup;;motor.c: 78: float speed;;motor.c: 80: lookup = motor_spe
      +                          ed_lookup[speed_index];
 27194                           
 27195                           ;incstack = 0
 27196  0104E8  90D8               	bcf	status,0,c
 27197  0104EA  0100               	movlb	0	; () banked
 27198  0104EC  3587               	rlcf	__motor_get_speed_in_degrees@speed_index& (0+255),w,b
 27199  0104EE  6EF6               	movwf	tblptrl,c
 27200  0104F0  3588               	rlcf	(__motor_get_speed_in_degrees@speed_index+1)& (0+255),w,b
 27201  0104F2  6EF7               	movwf	tblptrh,c
 27202  0104F4  0E93               	movlw	low _motor_speed_lookup
 27203  0104F6  26F6               	addwf	tblptrl,f,c
 27204  0104F8  0E90               	movlw	high _motor_speed_lookup
 27205  0104FA  22F7               	addwfc	tblptrh,f,c
 27206  0104FC                     	if	1	;There are 3 active tblptr bytes
 27207  0104FC  6AF8               	clrf	tblptru,c
 27208  0104FE  0E00               	movlw	low (__mediumconst shr (0+16))
 27209  010500  22F8               	addwfc	tblptru,f,c
 27210  010502                     	endif
 27211  010502  0009               	tblrd		*+
 27212  010504  CFF5 F089          	movff	tablat,??__motor_get_speed_in_degrees
 27213  010508  0009               	tblrd		*+
 27214  01050A  CFF5 F08A          	movff	tablat,??__motor_get_speed_in_degrees+1
 27215  01050E  C089  F08F         	movff	??__motor_get_speed_in_degrees,__motor_get_speed_in_degrees@lookup
 27216  010512  C08A  F090         	movff	??__motor_get_speed_in_degrees+1,__motor_get_speed_in_degrees@lookup+1
 27217  010516  6B91               	clrf	(__motor_get_speed_in_degrees@lookup+2)& (0+255),b
 27218  010518  6B92               	clrf	(__motor_get_speed_in_degrees@lookup+3)& (0+255),b
 27219                           
 27220                           ; BSR set to: 0
 27221                           ;motor.c: 81: lookup *= 16;
 27222  01051A  0E04               	movlw	4
 27223  01051C                     u14895:
 27224  01051C  90D8               	bcf	status,0,c
 27225  01051E  378F               	rlcf	__motor_get_speed_in_degrees@lookup& (0+255),f,b
 27226  010520  3790               	rlcf	(__motor_get_speed_in_degrees@lookup+1)& (0+255),f,b
 27227  010522  3791               	rlcf	(__motor_get_speed_in_degrees@lookup+2)& (0+255),f,b
 27228  010524  3792               	rlcf	(__motor_get_speed_in_degrees@lookup+3)& (0+255),f,b
 27229  010526  2EE8               	decfsz	wreg,f,c
 27230  010528  D7F9               	goto	u14895
 27231                           
 27232                           ; BSR set to: 0
 27233                           ;motor.c: 82: lookup *= 360;
 27234  01052A  C08F  F060         	movff	__motor_get_speed_in_degrees@lookup,___lmul@multiplier
 27235  01052E  C090  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___lmul@multiplier+1
 27236  010532  C091  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___lmul@multiplier+2
 27237  010536  C092  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___lmul@multiplier+3
 27238  01053A  0E68               	movlw	104
 27239  01053C  6F64               	movwf	___lmul@multiplicand& (0+255),b
 27240  01053E  0E01               	movlw	1
 27241  010540  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 27242  010542  0E00               	movlw	0
 27243  010544  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 27244  010546  0E00               	movlw	0
 27245  010548  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 27246  01054A  EC27  F0A4         	call	___lmul	;wreg free
 27247  01054E  C060  F08F         	movff	?___lmul,__motor_get_speed_in_degrees@lookup
 27248  010552  C061  F090         	movff	?___lmul+1,__motor_get_speed_in_degrees@lookup+1
 27249  010556  C062  F091         	movff	?___lmul+2,__motor_get_speed_in_degrees@lookup+2
 27250  01055A  C063  F092         	movff	?___lmul+3,__motor_get_speed_in_degrees@lookup+3
 27251                           
 27252                           ;motor.c: 83: lookup *= 100;
 27253  01055E  C08F  F060         	movff	__motor_get_speed_in_degrees@lookup,___lmul@multiplier
 27254  010562  C090  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___lmul@multiplier+1
 27255  010566  C091  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___lmul@multiplier+2
 27256  01056A  C092  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___lmul@multiplier+3
 27257  01056E  0E64               	movlw	100
 27258  010570  0100               	movlb	0	; () banked
 27259  010572  6F64               	movwf	___lmul@multiplicand& (0+255),b
 27260  010574  0E00               	movlw	0
 27261  010576  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 27262  010578  0E00               	movlw	0
 27263  01057A  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 27264  01057C  0E00               	movlw	0
 27265  01057E  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 27266  010580  EC27  F0A4         	call	___lmul	;wreg free
 27267  010584  C060  F08F         	movff	?___lmul,__motor_get_speed_in_degrees@lookup
 27268  010588  C061  F090         	movff	?___lmul+1,__motor_get_speed_in_degrees@lookup+1
 27269  01058C  C062  F091         	movff	?___lmul+2,__motor_get_speed_in_degrees@lookup+2
 27270  010590  C063  F092         	movff	?___lmul+3,__motor_get_speed_in_degrees@lookup+3
 27271                           
 27272                           ;motor.c: 85: speed = (float) lookup;
 27273  010594  C08F  F060         	movff	__motor_get_speed_in_degrees@lookup,___xxtofl@val
 27274  010598  C090  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___xxtofl@val+1
 27275  01059C  C091  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___xxtofl@val+2
 27276  0105A0  C092  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___xxtofl@val+3
 27277  0105A4  0E00               	movlw	0
 27278  0105A6  EC34  F081         	call	___xxtofl
 27279  0105AA  C060  F08B         	movff	?___xxtofl,__motor_get_speed_in_degrees@speed
 27280  0105AE  C061  F08C         	movff	?___xxtofl+1,__motor_get_speed_in_degrees@speed+1
 27281  0105B2  C062  F08D         	movff	?___xxtofl+2,__motor_get_speed_in_degrees@speed+2
 27282  0105B6  C063  F08E         	movff	?___xxtofl+3,__motor_get_speed_in_degrees@speed+3
 27283                           
 27284                           ;motor.c: 86: speed /= config.full_circle_in_steps;
 27285  0105BA  C08B  F06E         	movff	__motor_get_speed_in_degrees@speed,___fldiv@b
 27286  0105BE  C08C  F06F         	movff	__motor_get_speed_in_degrees@speed+1,___fldiv@b+1
 27287  0105C2  C08D  F070         	movff	__motor_get_speed_in_degrees@speed+2,___fldiv@b+2
 27288  0105C6  C08E  F071         	movff	__motor_get_speed_in_degrees@speed+3,___fldiv@b+3
 27289  0105CA  C1A1  F060         	movff	_config,___xxtofl@val
 27290  0105CE  C1A2  F061         	movff	_config+1,___xxtofl@val+1
 27291  0105D2  C1A3  F062         	movff	_config+2,___xxtofl@val+2
 27292  0105D6  C1A4  F063         	movff	_config+3,___xxtofl@val+3
 27293  0105DA  0E00               	movlw	0
 27294  0105DC  EC34  F081         	call	___xxtofl
 27295  0105E0  C060  F072         	movff	?___xxtofl,___fldiv@a
 27296  0105E4  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
 27297  0105E8  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
 27298  0105EC  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
 27299  0105F0  ECD6  F06D         	call	___fldiv	;wreg free
 27300  0105F4  C06E  F08B         	movff	?___fldiv,__motor_get_speed_in_degrees@speed
 27301  0105F8  C06F  F08C         	movff	?___fldiv+1,__motor_get_speed_in_degrees@speed+1
 27302  0105FC  C070  F08D         	movff	?___fldiv+2,__motor_get_speed_in_degrees@speed+2
 27303  010600  C071  F08E         	movff	?___fldiv+3,__motor_get_speed_in_degrees@speed+3
 27304                           
 27305                           ;motor.c: 89: return (uint16_t) speed;
 27306  010604  C08B  F060         	movff	__motor_get_speed_in_degrees@speed,___fltol@f1
 27307  010608  C08C  F061         	movff	__motor_get_speed_in_degrees@speed+1,___fltol@f1+1
 27308  01060C  C08D  F062         	movff	__motor_get_speed_in_degrees@speed+2,___fltol@f1+2
 27309  010610  C08E  F063         	movff	__motor_get_speed_in_degrees@speed+3,___fltol@f1+3
 27310  010614  EC8A  F090         	call	___fltol	;wreg free
 27311  010618  C060  F087         	movff	?___fltol,?__motor_get_speed_in_degrees
 27312  01061C  C061  F088         	movff	?___fltol+1,?__motor_get_speed_in_degrees+1
 27313  010620  0012               	return	
 27314  010622                     __end_of__motor_get_speed_in_degrees:
 27315                           	opt stack 0
 27316                           tblptru	equ	0xFF8
 27317                           tblptrh	equ	0xFF7
 27318                           tblptrl	equ	0xFF6
 27319                           tablat	equ	0xFF5
 27320                           prodh	equ	0xFF4
 27321                           prodl	equ	0xFF3
 27322                           intcon	equ	0xFF2
 27323                           postinc0	equ	0xFEE
 27324                           wreg	equ	0xFE8
 27325                           indf1	equ	0xFE7
 27326                           postinc1	equ	0xFE6
 27327                           postdec1	equ	0xFE5
 27328                           plusw1	equ	0xFE3
 27329                           fsr1h	equ	0xFE2
 27330                           fsr1l	equ	0xFE1
 27331                           indf2	equ	0xFDF
 27332                           postinc2	equ	0xFDE
 27333                           postdec2	equ	0xFDD
 27334                           plusw2	equ	0xFDB
 27335                           fsr2h	equ	0xFDA
 27336                           fsr2l	equ	0xFD9
 27337                           status	equ	0xFD8
 27338                           
 27339 ;; *************** function ___lmul *****************
 27340 ;; Defined at:
 27341 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
 27342 ;; Parameters:    Size  Location     Type
 27343 ;;  multiplier      4    0[BANK0 ] unsigned long 
 27344 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 27345 ;; Auto vars:     Size  Location     Type
 27346 ;;  product         4    8[BANK0 ] unsigned long 
 27347 ;; Return value:  Size  Location     Type
 27348 ;;                  4    0[BANK0 ] unsigned long 
 27349 ;; Registers used:
 27350 ;;		wreg, status,2, status,0
 27351 ;; Tracked objects:
 27352 ;;		On entry : 0/0
 27353 ;;		On exit  : 0/0
 27354 ;;		Unchanged: 0/0
 27355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27356 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27357 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27359 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27360 ;;Total ram usage:       12 bytes
 27361 ;; Hardware stack levels used:    1
 27362 ;; Hardware stack levels required when called:   10
 27363 ;; This function calls:
 27364 ;;		Nothing
 27365 ;; This function is called by:
 27366 ;;		__motor_get_speed_in_degrees
 27367 ;;		_atol
 27368 ;; This function uses a non-reentrant model
 27369 ;;
 27370                           
 27371                           	psect	text106
 27372  01484E                     __ptext106:
 27373                           	opt stack 0
 27374  01484E                     ___lmul:
 27375                           	opt stack 16
 27376                           
 27377                           ;incstack = 0
 27378  01484E  0E00               	movlw	0
 27379  014850  0100               	movlb	0	; () banked
 27380  014852  6F68               	movwf	___lmul@product& (0+255),b
 27381  014854  0E00               	movlw	0
 27382  014856  6F69               	movwf	(___lmul@product+1)& (0+255),b
 27383  014858  0E00               	movlw	0
 27384  01485A  6F6A               	movwf	(___lmul@product+2)& (0+255),b
 27385  01485C  0E00               	movlw	0
 27386  01485E  6F6B               	movwf	(___lmul@product+3)& (0+255),b
 27387  014860                     
 27388                           ; BSR set to: 0
 27389                           
 27390                           ; BSR set to: 0
 27391  014860  A160               	btfss	___lmul@multiplier& (0+255),0,b
 27392  014862  D008               	goto	l2981
 27393                           
 27394                           ; BSR set to: 0
 27395  014864  5164               	movf	___lmul@multiplicand& (0+255),w,b
 27396  014866  2768               	addwf	___lmul@product& (0+255),f,b
 27397  014868  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 27398  01486A  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
 27399  01486C  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 27400  01486E  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
 27401  014870  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 27402  014872  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
 27403  014874                     l2981:
 27404                           
 27405                           ; BSR set to: 0
 27406                           
 27407                           ; BSR set to: 0
 27408  014874  90D8               	bcf	status,0,c
 27409  014876  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
 27410  014878  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 27411  01487A  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 27412  01487C  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 27413                           
 27414                           ; BSR set to: 0
 27415  01487E  90D8               	bcf	status,0,c
 27416  014880  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 27417  014882  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 27418  014884  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 27419  014886  3360               	rrcf	___lmul@multiplier& (0+255),f,b
 27420  014888  5160               	movf	___lmul@multiplier& (0+255),w,b
 27421  01488A  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 27422  01488C  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 27423  01488E  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 27424  014890  A4D8               	btfss	status,2,c
 27425  014892  D7E6               	goto	l2980
 27426                           
 27427                           ; BSR set to: 0
 27428  014894  C068  F060         	movff	___lmul@product,?___lmul
 27429  014898  C069  F061         	movff	___lmul@product+1,?___lmul+1
 27430  01489C  C06A  F062         	movff	___lmul@product+2,?___lmul+2
 27431  0148A0  C06B  F063         	movff	___lmul@product+3,?___lmul+3
 27432                           
 27433                           ; BSR set to: 0
 27434  0148A4  0012               	return		;funcret
 27435  0148A6                     __end_of___lmul:
 27436                           	opt stack 0
 27437                           tblptru	equ	0xFF8
 27438                           tblptrh	equ	0xFF7
 27439                           tblptrl	equ	0xFF6
 27440                           tablat	equ	0xFF5
 27441                           prodh	equ	0xFF4
 27442                           prodl	equ	0xFF3
 27443                           intcon	equ	0xFF2
 27444                           postinc0	equ	0xFEE
 27445                           wreg	equ	0xFE8
 27446                           indf1	equ	0xFE7
 27447                           postinc1	equ	0xFE6
 27448                           postdec1	equ	0xFE5
 27449                           plusw1	equ	0xFE3
 27450                           fsr1h	equ	0xFE2
 27451                           fsr1l	equ	0xFE1
 27452                           indf2	equ	0xFDF
 27453                           postinc2	equ	0xFDE
 27454                           postdec2	equ	0xFDD
 27455                           plusw2	equ	0xFDB
 27456                           fsr2h	equ	0xFDA
 27457                           fsr2l	equ	0xFD9
 27458                           status	equ	0xFD8
 27459                           
 27460 ;; *************** function __display_signed_itoa *****************
 27461 ;; Defined at:
 27462 ;;		line 120 in file "display.c"
 27463 ;; Parameters:    Size  Location     Type
 27464 ;;  value           2   47[BANK0 ] int 
 27465 ;;  text            2   49[BANK0 ] PTR unsigned char 
 27466 ;;		 -> display_prepare@temp(10), 
 27467 ;; Auto vars:     Size  Location     Type
 27468 ;;		None
 27469 ;; Return value:  Size  Location     Type
 27470 ;;                  1    wreg      void 
 27471 ;; Registers used:
 27472 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27473 ;; Tracked objects:
 27474 ;;		On entry : 0/0
 27475 ;;		On exit  : 0/0
 27476 ;;		Unchanged: 0/0
 27477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27478 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27481 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27482 ;;Total ram usage:        4 bytes
 27483 ;; Hardware stack levels used:    1
 27484 ;; Hardware stack levels required when called:   14
 27485 ;; This function calls:
 27486 ;;		__display_padded_itoa
 27487 ;; This function is called by:
 27488 ;;		_display_prepare
 27489 ;; This function uses a non-reentrant model
 27490 ;;
 27491                           
 27492                           	psect	text107
 27493  014F3A                     __ptext107:
 27494                           	opt stack 0
 27495  014F3A                     __display_signed_itoa:
 27496                           	opt stack 15
 27497                           
 27498                           ;display.c: 122: if(value<0)
 27499                           
 27500                           ; BSR set to: 0
 27501                           ;incstack = 0
 27502  014F3A  0100               	movlb	0	; () banked
 27503  014F3C  AF90               	btfss	(__display_signed_itoa@value+1)& (0+255),7,b
 27504  014F3E  D00A               	goto	l1326
 27505                           
 27506                           ; BSR set to: 0
 27507                           ;display.c: 123: {;display.c: 124: value = -value;
 27508  014F40  6D8F               	negf	__display_signed_itoa@value& (0+255),b
 27509  014F42  1F90               	comf	(__display_signed_itoa@value+1)& (0+255),f,b
 27510  014F44  B0D8               	btfsc	status,0,c
 27511  014F46  2B90               	incf	(__display_signed_itoa@value+1)& (0+255),f,b
 27512                           
 27513                           ; BSR set to: 0
 27514                           ;display.c: 125: text[0] = '-';
 27515  014F48  C091  FFD9         	movff	__display_signed_itoa@text,fsr2l
 27516  014F4C  C092  FFDA         	movff	__display_signed_itoa@text+1,fsr2h
 27517  014F50  0E2D               	movlw	45
 27518  014F52  D005               	goto	L37
 27519  014F54                     l1326:
 27520                           
 27521                           ; BSR set to: 0
 27522                           ;display.c: 127: else;display.c: 128: {;display.c: 129: text[0] = '+';
 27523                           
 27524                           ; BSR set to: 0
 27525  014F54  C091  FFD9         	movff	__display_signed_itoa@text,fsr2l
 27526  014F58  C092  FFDA         	movff	__display_signed_itoa@text+1,fsr2h
 27527  014F5C  0E2B               	movlw	43
 27528  014F5E                     L37:
 27529  014F5E  6EDF               	movwf	indf2,c
 27530                           
 27531                           ; BSR set to: 0
 27532                           ;display.c: 130: };display.c: 131: _display_padded_itoa(value, 0, &text[1]);
 27533                           
 27534                           ; BSR set to: 0
 27535  014F60  C08F  F078         	movff	__display_signed_itoa@value,__display_padded_itoa@value
 27536  014F64  C090  F079         	movff	__display_signed_itoa@value+1,__display_padded_itoa@value+1
 27537  014F68  0E00               	movlw	0
 27538  014F6A  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 27539  014F6C  0E01               	movlw	1
 27540  014F6E  2591               	addwf	__display_signed_itoa@text& (0+255),w,b
 27541  014F70  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 27542  014F72  0E00               	movlw	0
 27543  014F74  2192               	addwfc	(__display_signed_itoa@text+1)& (0+255),w,b
 27544  014F76  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 27545  014F78  EC3B  F08F         	call	__display_padded_itoa	;wreg free
 27546  014F7C  0012               	return		;funcret
 27547  014F7E                     __end_of__display_signed_itoa:
 27548                           	opt stack 0
 27549                           tblptru	equ	0xFF8
 27550                           tblptrh	equ	0xFF7
 27551                           tblptrl	equ	0xFF6
 27552                           tablat	equ	0xFF5
 27553                           prodh	equ	0xFF4
 27554                           prodl	equ	0xFF3
 27555                           intcon	equ	0xFF2
 27556                           postinc0	equ	0xFEE
 27557                           wreg	equ	0xFE8
 27558                           indf1	equ	0xFE7
 27559                           postinc1	equ	0xFE6
 27560                           postdec1	equ	0xFE5
 27561                           plusw1	equ	0xFE3
 27562                           fsr1h	equ	0xFE2
 27563                           fsr1l	equ	0xFE1
 27564                           indf2	equ	0xFDF
 27565                           postinc2	equ	0xFDE
 27566                           postdec2	equ	0xFDD
 27567                           plusw2	equ	0xFDB
 27568                           fsr2h	equ	0xFDA
 27569                           fsr2l	equ	0xFD9
 27570                           status	equ	0xFD8
 27571                           
 27572 ;; *************** function __display_padded_itoa *****************
 27573 ;; Defined at:
 27574 ;;		line 98 in file "display.c"
 27575 ;; Parameters:    Size  Location     Type
 27576 ;;  value           2   24[BANK0 ] int 
 27577 ;;  length          1   26[BANK0 ] unsigned char 
 27578 ;;  text            2   27[BANK0 ] PTR unsigned char 
 27579 ;;		 -> display_prepare@temp(10), 
 27580 ;; Auto vars:     Size  Location     Type
 27581 ;;  tmp            10   34[BANK0 ] unsigned char [10]
 27582 ;;  padding         1   46[BANK0 ] unsigned char 
 27583 ;;  pos             1   45[BANK0 ] unsigned char 
 27584 ;;  len             1   44[BANK0 ] unsigned char 
 27585 ;; Return value:  Size  Location     Type
 27586 ;;                  1    wreg      void 
 27587 ;; Registers used:
 27588 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27589 ;; Tracked objects:
 27590 ;;		On entry : 0/0
 27591 ;;		On exit  : 0/0
 27592 ;;		Unchanged: 0/0
 27593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27594 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27595 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27596 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27597 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27598 ;;Total ram usage:       23 bytes
 27599 ;; Hardware stack levels used:    1
 27600 ;; Hardware stack levels required when called:   13
 27601 ;; This function calls:
 27602 ;;		_itoa
 27603 ;;		_strlen
 27604 ;; This function is called by:
 27605 ;;		__display_signed_itoa
 27606 ;;		_display_prepare
 27607 ;; This function uses a non-reentrant model
 27608 ;;
 27609                           
 27610                           	psect	text108
 27611  011E76                     __ptext108:
 27612                           	opt stack 0
 27613  011E76                     __display_padded_itoa:
 27614                           	opt stack 15
 27615                           
 27616                           ;display.c: 100: uint8_t pos;;display.c: 101: uint8_t padding;;display.c: 103: uint8_t l
      +                          en;;display.c: 104: char tmp[10];;display.c: 105: itoa(tmp, value, 10);
 27617                           
 27618                           ;incstack = 0
 27619  011E76  0E82               	movlw	low __display_padded_itoa@tmp
 27620  011E78  0100               	movlb	0	; () banked
 27621  011E7A  6F70               	movwf	itoa@buf& (0+255),b
 27622  011E7C  0E00               	movlw	high __display_padded_itoa@tmp
 27623  011E7E  6F71               	movwf	(itoa@buf+1)& (0+255),b
 27624  011E80  C078  F072         	movff	__display_padded_itoa@value,itoa@val
 27625  011E84  C079  F073         	movff	__display_padded_itoa@value+1,itoa@val+1
 27626  011E88  0E00               	movlw	0
 27627  011E8A  6F75               	movwf	(itoa@base+1)& (0+255),b
 27628  011E8C  0E0A               	movlw	10
 27629  011E8E  6F74               	movwf	itoa@base& (0+255),b
 27630  011E90  ECBF  F0A7         	call	_itoa	;wreg free
 27631                           
 27632                           ;display.c: 106: len = strlen(tmp);
 27633  011E94  0E82               	movlw	low __display_padded_itoa@tmp
 27634  011E96  0100               	movlb	0	; () banked
 27635  011E98  6F60               	movwf	strlen@s& (0+255),b
 27636  011E9A  0E00               	movlw	high __display_padded_itoa@tmp
 27637  011E9C  6F61               	movwf	(strlen@s+1)& (0+255),b
 27638  011E9E  EC65  F0A8         	call	_strlen	;wreg free
 27639  011EA2  0100               	movlb	0	; () banked
 27640  011EA4  5160               	movf	?_strlen& (0+255),w,b
 27641  011EA6  6F8C               	movwf	__display_padded_itoa@len& (0+255),b
 27642                           
 27643                           ; BSR set to: 0
 27644                           ;display.c: 107: padding = 0;
 27645  011EA8  0E00               	movlw	0
 27646  011EAA  6F8E               	movwf	__display_padded_itoa@padding& (0+255),b
 27647                           
 27648                           ;display.c: 108: while((padding+len)<length)
 27649  011EAC  D00B               	goto	l1317
 27650  011EAE                     
 27651                           ; BSR set to: 0
 27652                           ;display.c: 109: {;display.c: 110: text[padding] = ' ';
 27653                           
 27654                           ; BSR set to: 0
 27655  011EAE  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 27656  011EB0  0D01               	mullw	1
 27657  011EB2  50F3               	movf	prodl,w,c
 27658  011EB4  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 27659  011EB6  6ED9               	movwf	fsr2l,c
 27660  011EB8  50F4               	movf	prodh,w,c
 27661  011EBA  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 27662  011EBC  6EDA               	movwf	fsr2h,c
 27663  011EBE  0E20               	movlw	32
 27664  011EC0  6EDF               	movwf	indf2,c
 27665                           
 27666                           ; BSR set to: 0
 27667                           ;display.c: 111: ++padding;
 27668  011EC2  2B8E               	incf	__display_padded_itoa@padding& (0+255),f,b
 27669  011EC4                     l1317:
 27670                           
 27671                           ; BSR set to: 0
 27672                           
 27673                           ; BSR set to: 0
 27674  011EC4  517A               	movf	__display_padded_itoa@length& (0+255),w,b
 27675  011EC6  6F7D               	movwf	??__display_padded_itoa& (0+255),b
 27676  011EC8  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 27677  011ECA  518C               	movf	__display_padded_itoa@len& (0+255),w,b
 27678  011ECC  C08E  F07F         	movff	__display_padded_itoa@padding,??__display_padded_itoa+2
 27679  011ED0  6B80               	clrf	(??__display_padded_itoa+3)& (0+255),b
 27680  011ED2  277F               	addwf	(??__display_padded_itoa+2)& (0+255),f,b
 27681  011ED4  0E00               	movlw	0
 27682  011ED6  2380               	addwfc	(??__display_padded_itoa+3)& (0+255),f,b
 27683  011ED8  517D               	movf	??__display_padded_itoa& (0+255),w,b
 27684  011EDA  5D7F               	subwf	(??__display_padded_itoa+2)& (0+255),w,b
 27685  011EDC  5180               	movf	(??__display_padded_itoa+3)& (0+255),w,b
 27686  011EDE  0A80               	xorlw	128
 27687  011EE0  6F81               	movwf	(??__display_padded_itoa+4)& (0+255),b
 27688  011EE2  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 27689  011EE4  0A80               	xorlw	128
 27690  011EE6  5981               	subwfb	(??__display_padded_itoa+4)& (0+255),w,b
 27691  011EE8  A0D8               	btfss	status,0,c
 27692  011EEA  D7E1               	goto	l1318
 27693                           
 27694                           ; BSR set to: 0
 27695                           ;display.c: 112: };display.c: 113: for(pos=0; tmp[pos]; ++pos)
 27696                           
 27697                           ; BSR set to: 0
 27698  011EEC  0E00               	movlw	0
 27699  011EEE  6F8D               	movwf	__display_padded_itoa@pos& (0+255),b
 27700  011EF0  D018               	goto	l1320
 27701  011EF2                     
 27702                           ; BSR set to: 0
 27703                           ;display.c: 114: {;display.c: 115: text[pos+padding] = tmp[pos];
 27704                           
 27705                           ; BSR set to: 0
 27706  011EF2  518D               	movf	__display_padded_itoa@pos& (0+255),w,b
 27707  011EF4  0D01               	mullw	1
 27708  011EF6  0E82               	movlw	low __display_padded_itoa@tmp
 27709  011EF8  24F3               	addwf	prodl,w,c
 27710  011EFA  6ED9               	movwf	fsr2l,c
 27711  011EFC  0E00               	movlw	high __display_padded_itoa@tmp
 27712  011EFE  20F4               	addwfc	prodh,w,c
 27713  011F00  6EDA               	movwf	fsr2h,c
 27714  011F02  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 27715  011F04  C08D  F07D         	movff	__display_padded_itoa@pos,??__display_padded_itoa
 27716  011F08  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 27717  011F0A  277D               	addwf	??__display_padded_itoa& (0+255),f,b
 27718  011F0C  0E00               	movlw	0
 27719  011F0E  237E               	addwfc	(??__display_padded_itoa+1)& (0+255),f,b
 27720  011F10  517D               	movf	??__display_padded_itoa& (0+255),w,b
 27721  011F12  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 27722  011F14  6EE1               	movwf	fsr1l,c
 27723  011F16  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 27724  011F18  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 27725  011F1A  6EE2               	movwf	fsr1h,c
 27726  011F1C  CFDF FFE7          	movff	indf2,indf1
 27727                           
 27728                           ; BSR set to: 0
 27729  011F20  2B8D               	incf	__display_padded_itoa@pos& (0+255),f,b
 27730  011F22                     l1320:
 27731                           
 27732                           ; BSR set to: 0
 27733                           
 27734                           ; BSR set to: 0
 27735  011F22  518D               	movf	__display_padded_itoa@pos& (0+255),w,b
 27736  011F24  0D01               	mullw	1
 27737  011F26  0E82               	movlw	low __display_padded_itoa@tmp
 27738  011F28  24F3               	addwf	prodl,w,c
 27739  011F2A  6ED9               	movwf	fsr2l,c
 27740  011F2C  0E00               	movlw	high __display_padded_itoa@tmp
 27741  011F2E  20F4               	addwfc	prodh,w,c
 27742  011F30  6EDA               	movwf	fsr2h,c
 27743  011F32  50DF               	movf	indf2,w,c
 27744  011F34  A4D8               	btfss	status,2,c
 27745  011F36  D7DD               	goto	l1321
 27746                           
 27747                           ; BSR set to: 0
 27748                           ;display.c: 116: };display.c: 117: text[pos+padding] = 0x00;
 27749                           
 27750                           ; BSR set to: 0
 27751  011F38  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 27752  011F3A  C08D  F07D         	movff	__display_padded_itoa@pos,??__display_padded_itoa
 27753  011F3E  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 27754  011F40  277D               	addwf	??__display_padded_itoa& (0+255),f,b
 27755  011F42  0E00               	movlw	0
 27756  011F44  237E               	addwfc	(??__display_padded_itoa+1)& (0+255),f,b
 27757  011F46  517D               	movf	??__display_padded_itoa& (0+255),w,b
 27758  011F48  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 27759  011F4A  6ED9               	movwf	fsr2l,c
 27760  011F4C  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 27761  011F4E  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 27762  011F50  6EDA               	movwf	fsr2h,c
 27763  011F52  0E00               	movlw	0
 27764  011F54  6EDF               	movwf	indf2,c
 27765                           
 27766                           ; BSR set to: 0
 27767  011F56  0012               	return		;funcret
 27768  011F58                     __end_of__display_padded_itoa:
 27769                           	opt stack 0
 27770                           tblptru	equ	0xFF8
 27771                           tblptrh	equ	0xFF7
 27772                           tblptrl	equ	0xFF6
 27773                           tablat	equ	0xFF5
 27774                           prodh	equ	0xFF4
 27775                           prodl	equ	0xFF3
 27776                           intcon	equ	0xFF2
 27777                           postinc0	equ	0xFEE
 27778                           wreg	equ	0xFE8
 27779                           indf1	equ	0xFE7
 27780                           postinc1	equ	0xFE6
 27781                           postdec1	equ	0xFE5
 27782                           plusw1	equ	0xFE3
 27783                           fsr1h	equ	0xFE2
 27784                           fsr1l	equ	0xFE1
 27785                           indf2	equ	0xFDF
 27786                           postinc2	equ	0xFDE
 27787                           postdec2	equ	0xFDD
 27788                           plusw2	equ	0xFDB
 27789                           fsr2h	equ	0xFDA
 27790                           fsr2l	equ	0xFD9
 27791                           status	equ	0xFD8
 27792                           
 27793 ;; *************** function __display_itoa_long *****************
 27794 ;; Defined at:
 27795 ;;		line 202 in file "display.c"
 27796 ;; Parameters:    Size  Location     Type
 27797 ;;  value           4   77[BANK0 ] long 
 27798 ;;  decimals        1   81[BANK0 ] unsigned char 
 27799 ;;  text            2   82[BANK0 ] PTR unsigned char 
 27800 ;;		 -> display_prepare@temp(10), 
 27801 ;; Auto vars:     Size  Location     Type
 27802 ;;  short_value     2   89[BANK0 ] int 
 27803 ;;  last_digit      1   91[BANK0 ] char 
 27804 ;;  length          1   88[BANK0 ] unsigned char 
 27805 ;; Return value:  Size  Location     Type
 27806 ;;                  1    wreg      void 
 27807 ;; Registers used:
 27808 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27809 ;; Tracked objects:
 27810 ;;		On entry : 0/0
 27811 ;;		On exit  : 0/0
 27812 ;;		Unchanged: 0/0
 27813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27814 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27815 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27816 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27817 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27818 ;;Total ram usage:       15 bytes
 27819 ;; Hardware stack levels used:    1
 27820 ;; Hardware stack levels required when called:   14
 27821 ;; This function calls:
 27822 ;;		___aldiv
 27823 ;;		___almod
 27824 ;;		__display_itoa
 27825 ;;		_strlen
 27826 ;; This function is called by:
 27827 ;;		_display_prepare
 27828 ;; This function uses a non-reentrant model
 27829 ;;
 27830                           
 27831                           	psect	text109
 27832  010BDA                     __ptext109:
 27833                           	opt stack 0
 27834  010BDA                     __display_itoa_long:
 27835                           	opt stack 15
 27836                           
 27837                           ;display.c: 204: int16_t short_value;;display.c: 205: int8_t last_digit;;display.c: 206:
      +                           uint8_t length;;display.c: 208: short_value = (int16_t) value;
 27838                           
 27839                           ; BSR set to: 0
 27840                           ;incstack = 0
 27841  010BDA  C0AD  F0B9         	movff	__display_itoa_long@value,__display_itoa_long@short_value
 27842  010BDE  C0AE  F0BA         	movff	__display_itoa_long@value+1,__display_itoa_long@short_value+1
 27843                           
 27844                           ;display.c: 209: if(short_value==value)
 27845  010BE2  C0B9  F0B4         	movff	__display_itoa_long@short_value,??__display_itoa_long
 27846  010BE6  C0BA  F0B5         	movff	__display_itoa_long@short_value+1,??__display_itoa_long+1
 27847  010BEA  0E00               	movlw	0
 27848  010BEC  0100               	movlb	0	; () banked
 27849  010BEE  BFB5               	btfsc	(??__display_itoa_long+1)& (0+255),7,b
 27850  010BF0  0EFF               	movlw	255
 27851  010BF2  6FB6               	movwf	(??__display_itoa_long+2)& (0+255),b
 27852  010BF4  6FB7               	movwf	(??__display_itoa_long+3)& (0+255),b
 27853  010BF6  51AD               	movf	__display_itoa_long@value& (0+255),w,b
 27854  010BF8  19B4               	xorwf	??__display_itoa_long& (0+255),w,b
 27855  010BFA  E117               	bnz	l17131
 27856  010BFC  51AE               	movf	(__display_itoa_long@value+1)& (0+255),w,b
 27857  010BFE  19B5               	xorwf	(??__display_itoa_long+1)& (0+255),w,b
 27858  010C00  E114               	bnz	l17131
 27859  010C02  51AF               	movf	(__display_itoa_long@value+2)& (0+255),w,b
 27860  010C04  19B6               	xorwf	(??__display_itoa_long+2)& (0+255),w,b
 27861  010C06  E111               	bnz	l17131
 27862  010C08  51B0               	movf	(__display_itoa_long@value+3)& (0+255),w,b
 27863  010C0A  19B7               	xorwf	(??__display_itoa_long+3)& (0+255),w,b
 27864  010C0C  A4D8               	btfss	status,2,c
 27865  010C0E  D00D               	goto	l1353
 27866                           
 27867                           ; BSR set to: 0
 27868                           ;display.c: 210: {;display.c: 211: _display_itoa(short_value, decimals, text);
 27869  010C10  C0B9  F095         	movff	__display_itoa_long@short_value,__display_itoa@value
 27870  010C14  C0BA  F096         	movff	__display_itoa_long@short_value+1,__display_itoa@value+1
 27871  010C18  C0B1  F097         	movff	__display_itoa_long@decimals,__display_itoa@decimals
 27872  010C1C  C0B2  F098         	movff	__display_itoa_long@text,__display_itoa@text
 27873  010C20  C0B3  F099         	movff	__display_itoa_long@text+1,__display_itoa@text+1
 27874  010C24  EC0D  F075         	call	__display_itoa	;wreg free
 27875                           
 27876                           ;display.c: 212: }
 27877  010C28  0012               	return	
 27878  010C2A                     l1353:
 27879  010C2A                     l17131:
 27880                           
 27881                           ;display.c: 213: else;display.c: 214: {;display.c: 215: short_value = value / 10;
 27882  010C2A  C0AD  F060         	movff	__display_itoa_long@value,___aldiv@dividend
 27883  010C2E  C0AE  F061         	movff	__display_itoa_long@value+1,___aldiv@dividend+1
 27884  010C32  C0AF  F062         	movff	__display_itoa_long@value+2,___aldiv@dividend+2
 27885  010C36  C0B0  F063         	movff	__display_itoa_long@value+3,___aldiv@dividend+3
 27886  010C3A  0E0A               	movlw	10
 27887  010C3C  0100               	movlb	0	; () banked
 27888  010C3E  6F64               	movwf	___aldiv@divisor& (0+255),b
 27889  010C40  0E00               	movlw	0
 27890  010C42  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 27891  010C44  0E00               	movlw	0
 27892  010C46  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 27893  010C48  0E00               	movlw	0
 27894  010C4A  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 27895  010C4C  ECE3  F093         	call	___aldiv	;wreg free
 27896  010C50  C060  F0B9         	movff	?___aldiv,__display_itoa_long@short_value
 27897  010C54  C061  F0BA         	movff	?___aldiv+1,__display_itoa_long@short_value+1
 27898                           
 27899                           ;display.c: 216: _display_itoa(short_value, decimals-1, text);
 27900  010C58  C0B9  F095         	movff	__display_itoa_long@short_value,__display_itoa@value
 27901  010C5C  C0BA  F096         	movff	__display_itoa_long@short_value+1,__display_itoa@value+1
 27902  010C60  0100               	movlb	0	; () banked
 27903  010C62  05B1               	decf	__display_itoa_long@decimals& (0+255),w,b
 27904  010C64  6F97               	movwf	__display_itoa@decimals& (0+255),b
 27905  010C66  C0B2  F098         	movff	__display_itoa_long@text,__display_itoa@text
 27906  010C6A  C0B3  F099         	movff	__display_itoa_long@text+1,__display_itoa@text+1
 27907  010C6E  EC0D  F075         	call	__display_itoa	;wreg free
 27908                           
 27909                           ;display.c: 217: length = strlen(text);
 27910  010C72  C0B2  F060         	movff	__display_itoa_long@text,strlen@s
 27911  010C76  C0B3  F061         	movff	__display_itoa_long@text+1,strlen@s+1
 27912  010C7A  EC65  F0A8         	call	_strlen	;wreg free
 27913  010C7E  0100               	movlb	0	; () banked
 27914  010C80  5160               	movf	?_strlen& (0+255),w,b
 27915  010C82  6FB8               	movwf	__display_itoa_long@length& (0+255),b
 27916                           
 27917                           ; BSR set to: 0
 27918                           ;display.c: 218: last_digit = value % 10;
 27919  010C84  C0AD  F060         	movff	__display_itoa_long@value,___almod@dividend
 27920  010C88  C0AE  F061         	movff	__display_itoa_long@value+1,___almod@dividend+1
 27921  010C8C  C0AF  F062         	movff	__display_itoa_long@value+2,___almod@dividend+2
 27922  010C90  C0B0  F063         	movff	__display_itoa_long@value+3,___almod@dividend+3
 27923  010C94  0E0A               	movlw	10
 27924  010C96  6F64               	movwf	___almod@divisor& (0+255),b
 27925  010C98  0E00               	movlw	0
 27926  010C9A  6F65               	movwf	(___almod@divisor+1)& (0+255),b
 27927  010C9C  0E00               	movlw	0
 27928  010C9E  6F66               	movwf	(___almod@divisor+2)& (0+255),b
 27929  010CA0  0E00               	movlw	0
 27930  010CA2  6F67               	movwf	(___almod@divisor+3)& (0+255),b
 27931  010CA4  EC32  F097         	call	___almod	;wreg free
 27932  010CA8  0100               	movlb	0	; () banked
 27933  010CAA  5160               	movf	?___almod& (0+255),w,b
 27934  010CAC  6FBB               	movwf	__display_itoa_long@last_digit& (0+255),b
 27935                           
 27936                           ; BSR set to: 0
 27937                           ;display.c: 219: if(last_digit<0)
 27938  010CAE  BFBB               	btfsc	__display_itoa_long@last_digit& (0+255),7,b
 27939                           
 27940                           ; BSR set to: 0
 27941                           ;display.c: 220: last_digit = -last_digit;
 27942  010CB0  6DBB               	negf	__display_itoa_long@last_digit& (0+255),b
 27943                           
 27944                           ; BSR set to: 0
 27945                           ;display.c: 221: text[length] = last_digit + 0x30;
 27946                           
 27947                           ; BSR set to: 0
 27948  010CB2  51B8               	movf	__display_itoa_long@length& (0+255),w,b
 27949  010CB4  0D01               	mullw	1
 27950  010CB6  50F3               	movf	prodl,w,c
 27951  010CB8  25B2               	addwf	__display_itoa_long@text& (0+255),w,b
 27952  010CBA  6ED9               	movwf	fsr2l,c
 27953  010CBC  50F4               	movf	prodh,w,c
 27954  010CBE  21B3               	addwfc	(__display_itoa_long@text+1)& (0+255),w,b
 27955  010CC0  6EDA               	movwf	fsr2h,c
 27956  010CC2  51BB               	movf	__display_itoa_long@last_digit& (0+255),w,b
 27957  010CC4  0F30               	addlw	48
 27958  010CC6  6EDF               	movwf	indf2,c
 27959                           
 27960                           ; BSR set to: 0
 27961                           ;display.c: 222: text[length+1] = 0x00;
 27962  010CC8  51B8               	movf	__display_itoa_long@length& (0+255),w,b
 27963  010CCA  6FB4               	movwf	??__display_itoa_long& (0+255),b
 27964  010CCC  6BB5               	clrf	(??__display_itoa_long+1)& (0+255),b
 27965  010CCE  0E01               	movlw	1
 27966  010CD0  27B4               	addwf	??__display_itoa_long& (0+255),f,b
 27967  010CD2  0E00               	movlw	0
 27968  010CD4  23B5               	addwfc	(??__display_itoa_long+1)& (0+255),f,b
 27969  010CD6  51B4               	movf	??__display_itoa_long& (0+255),w,b
 27970  010CD8  25B2               	addwf	__display_itoa_long@text& (0+255),w,b
 27971  010CDA  6ED9               	movwf	fsr2l,c
 27972  010CDC  51B5               	movf	(??__display_itoa_long+1)& (0+255),w,b
 27973  010CDE  21B3               	addwfc	(__display_itoa_long@text+1)& (0+255),w,b
 27974  010CE0  6EDA               	movwf	fsr2h,c
 27975  010CE2  0E00               	movlw	0
 27976  010CE4  6EDF               	movwf	indf2,c
 27977  010CE6  0012               	return	
 27978  010CE8                     __end_of__display_itoa_long:
 27979                           	opt stack 0
 27980                           tblptru	equ	0xFF8
 27981                           tblptrh	equ	0xFF7
 27982                           tblptrl	equ	0xFF6
 27983                           tablat	equ	0xFF5
 27984                           prodh	equ	0xFF4
 27985                           prodl	equ	0xFF3
 27986                           intcon	equ	0xFF2
 27987                           postinc0	equ	0xFEE
 27988                           wreg	equ	0xFE8
 27989                           indf1	equ	0xFE7
 27990                           postinc1	equ	0xFE6
 27991                           postdec1	equ	0xFE5
 27992                           plusw1	equ	0xFE3
 27993                           fsr1h	equ	0xFE2
 27994                           fsr1l	equ	0xFE1
 27995                           indf2	equ	0xFDF
 27996                           postinc2	equ	0xFDE
 27997                           postdec2	equ	0xFDD
 27998                           plusw2	equ	0xFDB
 27999                           fsr2h	equ	0xFDA
 28000                           fsr2l	equ	0xFD9
 28001                           status	equ	0xFD8
 28002                           
 28003 ;; *************** function __display_itoa *****************
 28004 ;; Defined at:
 28005 ;;		line 134 in file "display.c"
 28006 ;; Parameters:    Size  Location     Type
 28007 ;;  value           2   53[BANK0 ] int 
 28008 ;;  decimals        1   55[BANK0 ] unsigned char 
 28009 ;;  text            2   56[BANK0 ] PTR unsigned char 
 28010 ;;		 -> display_prepare@temp(10), display_content(80), 
 28011 ;; Auto vars:     Size  Location     Type
 28012 ;;  tmp            10   64[BANK0 ] unsigned char [10]
 28013 ;;  pos             1   76[BANK0 ] unsigned char 
 28014 ;;  missing         1   75[BANK0 ] char 
 28015 ;;  len             1   74[BANK0 ] unsigned char 
 28016 ;; Return value:  Size  Location     Type
 28017 ;;                  1    wreg      void 
 28018 ;; Registers used:
 28019 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28020 ;; Tracked objects:
 28021 ;;		On entry : 0/0
 28022 ;;		On exit  : 0/0
 28023 ;;		Unchanged: 0/0
 28024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28025 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28026 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28027 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28028 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28029 ;;Total ram usage:       24 bytes
 28030 ;; Hardware stack levels used:    1
 28031 ;; Hardware stack levels required when called:   13
 28032 ;; This function calls:
 28033 ;;		_itoa
 28034 ;;		_strlen
 28035 ;; This function is called by:
 28036 ;;		__display_itoa_long
 28037 ;;		_display_prepare
 28038 ;; This function uses a non-reentrant model
 28039 ;;
 28040                           
 28041                           	psect	text110
 28042  00EA1A                     __ptext110:
 28043                           	opt stack 0
 28044  00EA1A                     __display_itoa:
 28045                           	opt stack 15
 28046                           
 28047                           ;display.c: 136: uint8_t pos;;display.c: 137: uint8_t len;;display.c: 138: int8_t missin
      +                          g;;display.c: 139: char tmp[10];;display.c: 140: itoa(tmp, value, 10);
 28048                           
 28049                           ;incstack = 0
 28050  00EA1A  0EA0               	movlw	low __display_itoa@tmp
 28051  00EA1C  0100               	movlb	0	; () banked
 28052  00EA1E  6F70               	movwf	itoa@buf& (0+255),b
 28053  00EA20  0E00               	movlw	high __display_itoa@tmp
 28054  00EA22  6F71               	movwf	(itoa@buf+1)& (0+255),b
 28055  00EA24  C095  F072         	movff	__display_itoa@value,itoa@val
 28056  00EA28  C096  F073         	movff	__display_itoa@value+1,itoa@val+1
 28057  00EA2C  0E00               	movlw	0
 28058  00EA2E  6F75               	movwf	(itoa@base+1)& (0+255),b
 28059  00EA30  0E0A               	movlw	10
 28060  00EA32  6F74               	movwf	itoa@base& (0+255),b
 28061  00EA34  ECBF  F0A7         	call	_itoa	;wreg free
 28062                           
 28063                           ;display.c: 141: len = strlen(tmp);
 28064  00EA38  0EA0               	movlw	low __display_itoa@tmp
 28065  00EA3A  0100               	movlb	0	; () banked
 28066  00EA3C  6F60               	movwf	strlen@s& (0+255),b
 28067  00EA3E  0E00               	movlw	high __display_itoa@tmp
 28068  00EA40  6F61               	movwf	(strlen@s+1)& (0+255),b
 28069  00EA42  EC65  F0A8         	call	_strlen	;wreg free
 28070  00EA46  0100               	movlb	0	; () banked
 28071  00EA48  5160               	movf	?_strlen& (0+255),w,b
 28072  00EA4A  6FAA               	movwf	__display_itoa@len& (0+255),b
 28073                           
 28074                           ; BSR set to: 0
 28075                           ;display.c: 143: if(value<0)
 28076  00EA4C  AF96               	btfss	(__display_itoa@value+1)& (0+255),7,b
 28077  00EA4E  D054               	goto	l1331
 28078                           
 28079                           ; BSR set to: 0
 28080                           ;display.c: 144: {;display.c: 145: missing = decimals + 2 - len;
 28081  00EA50  51AA               	movf	__display_itoa@len& (0+255),w,b
 28082  00EA52  0800               	sublw	0
 28083  00EA54  2597               	addwf	__display_itoa@decimals& (0+255),w,b
 28084  00EA56  0F02               	addlw	2
 28085  00EA58  6FAB               	movwf	__display_itoa@missing& (0+255),b
 28086                           
 28087                           ;display.c: 146: if(missing>0)
 28088  00EA5A  51AB               	movf	__display_itoa@missing& (0+255),w,b
 28089  00EA5C  0A80               	xorlw	128
 28090  00EA5E  0F7F               	addlw	-129
 28091  00EA60  A0D8               	btfss	status,0,c
 28092  00EA62  D090               	goto	l1338
 28093                           
 28094                           ; BSR set to: 0
 28095                           ;display.c: 147: {;display.c: 148: for(pos=decimals;pos!=0xFF;--pos)
 28096  00EA64  C097  F0AC         	movff	__display_itoa@decimals,__display_itoa@pos
 28097  00EA68                     l15445:
 28098                           
 28099                           ; BSR set to: 0
 28100  00EA68  29AC               	incf	__display_itoa@pos& (0+255),w,b
 28101  00EA6A  B4D8               	btfsc	status,2,c
 28102  00EA6C  D042               	goto	u14250
 28103                           
 28104                           ; BSR set to: 0
 28105                           ;display.c: 149: {;display.c: 150: if(pos>=missing)
 28106                           
 28107                           ; BSR set to: 0
 28108                           
 28109                           ; BSR set to: 0
 28110  00EA6E  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28111  00EA70  BFAB               	btfsc	__display_itoa@missing& (0+255),7,b
 28112  00EA72  D004               	goto	u14240
 28113  00EA74  0AFF               	xorlw	255
 28114  00EA76  25AB               	addwf	__display_itoa@missing& (0+255),w,b
 28115  00EA78  B0D8               	btfsc	status,0,c
 28116  00EA7A  D02A               	goto	l1335
 28117  00EA7C                     u14240:
 28118                           
 28119                           ; BSR set to: 0
 28120                           ;display.c: 151: {;display.c: 152: tmp[pos+1] = tmp[pos+1-missing];
 28121  00EA7C  C0AB  F09A         	movff	__display_itoa@missing,??__display_itoa
 28122  00EA80  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 28123  00EA82  BF9A               	btfsc	??__display_itoa& (0+255),7,b
 28124  00EA84  079B               	decf	(??__display_itoa+1)& (0+255),f,b
 28125  00EA86  1F9A               	comf	??__display_itoa& (0+255),f,b
 28126  00EA88  1F9B               	comf	(??__display_itoa+1)& (0+255),f,b
 28127  00EA8A  4B9A               	infsnz	??__display_itoa& (0+255),f,b
 28128  00EA8C  2B9B               	incf	(??__display_itoa+1)& (0+255),f,b
 28129  00EA8E  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28130  00EA90  6F9C               	movwf	(??__display_itoa+2)& (0+255),b
 28131  00EA92  6B9D               	clrf	(??__display_itoa+3)& (0+255),b
 28132  00EA94  519A               	movf	??__display_itoa& (0+255),w,b
 28133  00EA96  279C               	addwf	(??__display_itoa+2)& (0+255),f,b
 28134  00EA98  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 28135  00EA9A  239D               	addwfc	(??__display_itoa+3)& (0+255),f,b
 28136  00EA9C  0E01               	movlw	1
 28137  00EA9E  279C               	addwf	(??__display_itoa+2)& (0+255),f,b
 28138  00EAA0  0E00               	movlw	0
 28139  00EAA2  239D               	addwfc	(??__display_itoa+3)& (0+255),f,b
 28140  00EAA4  0EA0               	movlw	low __display_itoa@tmp
 28141  00EAA6  259C               	addwf	(??__display_itoa+2)& (0+255),w,b
 28142  00EAA8  6ED9               	movwf	fsr2l,c
 28143  00EAAA  0E00               	movlw	high __display_itoa@tmp
 28144  00EAAC  219D               	addwfc	(??__display_itoa+3)& (0+255),w,b
 28145  00EAAE  6EDA               	movwf	fsr2h,c
 28146  00EAB0  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28147  00EAB2  6F9E               	movwf	(??__display_itoa+4)& (0+255),b
 28148  00EAB4  6B9F               	clrf	(??__display_itoa+5)& (0+255),b
 28149  00EAB6  0E01               	movlw	1
 28150  00EAB8  279E               	addwf	(??__display_itoa+4)& (0+255),f,b
 28151  00EABA  0E00               	movlw	0
 28152  00EABC  239F               	addwfc	(??__display_itoa+5)& (0+255),f,b
 28153  00EABE  0EA0               	movlw	low __display_itoa@tmp
 28154  00EAC0  259E               	addwf	(??__display_itoa+4)& (0+255),w,b
 28155  00EAC2  6EE1               	movwf	fsr1l,c
 28156  00EAC4  0E00               	movlw	high __display_itoa@tmp
 28157  00EAC6  219F               	addwfc	(??__display_itoa+5)& (0+255),w,b
 28158  00EAC8  6EE2               	movwf	fsr1h,c
 28159  00EACA  CFDF FFE7          	movff	indf2,indf1
 28160                           
 28161                           ;display.c: 153: }
 28162  00EACE  D00F               	goto	l1336
 28163  00EAD0                     l1335:
 28164                           
 28165                           ; BSR set to: 0
 28166                           ;display.c: 154: else;display.c: 155: {;display.c: 156: tmp[pos+1] = '0';
 28167                           
 28168                           ; BSR set to: 0
 28169  00EAD0  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28170  00EAD2  6F9A               	movwf	??__display_itoa& (0+255),b
 28171  00EAD4  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 28172  00EAD6  0E01               	movlw	1
 28173  00EAD8  279A               	addwf	??__display_itoa& (0+255),f,b
 28174  00EADA  0E00               	movlw	0
 28175  00EADC  239B               	addwfc	(??__display_itoa+1)& (0+255),f,b
 28176  00EADE  0EA0               	movlw	low __display_itoa@tmp
 28177  00EAE0  259A               	addwf	??__display_itoa& (0+255),w,b
 28178  00EAE2  6ED9               	movwf	fsr2l,c
 28179  00EAE4  0E00               	movlw	high __display_itoa@tmp
 28180  00EAE6  219B               	addwfc	(??__display_itoa+1)& (0+255),w,b
 28181  00EAE8  6EDA               	movwf	fsr2h,c
 28182  00EAEA  0E30               	movlw	48
 28183  00EAEC  6EDF               	movwf	indf2,c
 28184  00EAEE                     l1336:
 28185                           
 28186                           ; BSR set to: 0
 28187                           
 28188                           ; BSR set to: 0
 28189  00EAEE  07AC               	decf	__display_itoa@pos& (0+255),f,b
 28190  00EAF0  D7BB               	goto	l15445
 28191  00EAF2                     u14250:
 28192                           
 28193                           ; BSR set to: 0
 28194                           ;display.c: 157: };display.c: 158: };display.c: 159: len = decimals + 2;
 28195                           
 28196                           ; BSR set to: 0
 28197  00EAF2  5197               	movf	__display_itoa@decimals& (0+255),w,b
 28198  00EAF4  0F02               	addlw	2
 28199  00EAF6  D045               	goto	L38
 28200  00EAF8                     l1331:
 28201                           
 28202                           ; BSR set to: 0
 28203                           ;display.c: 162: else;display.c: 163: {;display.c: 164: missing = decimals + 1 - len;
 28204                           
 28205                           ; BSR set to: 0
 28206  00EAF8  51AA               	movf	__display_itoa@len& (0+255),w,b
 28207  00EAFA  0800               	sublw	0
 28208  00EAFC  2597               	addwf	__display_itoa@decimals& (0+255),w,b
 28209  00EAFE  6F9A               	movwf	??__display_itoa& (0+255),b
 28210  00EB00  299A               	incf	??__display_itoa& (0+255),w,b
 28211  00EB02  6FAB               	movwf	__display_itoa@missing& (0+255),b
 28212                           
 28213                           ;display.c: 165: if(missing>0)
 28214  00EB04  51AB               	movf	__display_itoa@missing& (0+255),w,b
 28215  00EB06  0A80               	xorlw	128
 28216  00EB08  0F7F               	addlw	-129
 28217  00EB0A  A0D8               	btfss	status,0,c
 28218  00EB0C  D03B               	goto	l1338
 28219                           
 28220                           ; BSR set to: 0
 28221                           ;display.c: 166: {;display.c: 167: for(pos=decimals;pos!=0xFF;--pos)
 28222  00EB0E  C097  F0AC         	movff	__display_itoa@decimals,__display_itoa@pos
 28223  00EB12                     l15465:
 28224                           
 28225                           ; BSR set to: 0
 28226  00EB12  29AC               	incf	__display_itoa@pos& (0+255),w,b
 28227  00EB14  B4D8               	btfsc	status,2,c
 28228  00EB16  D034               	goto	u14290
 28229                           
 28230                           ; BSR set to: 0
 28231                           ;display.c: 168: {;display.c: 169: if(pos>=missing)
 28232                           
 28233                           ; BSR set to: 0
 28234                           
 28235                           ; BSR set to: 0
 28236  00EB18  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28237  00EB1A  BFAB               	btfsc	__display_itoa@missing& (0+255),7,b
 28238  00EB1C  D004               	goto	u14280
 28239  00EB1E  0AFF               	xorlw	255
 28240  00EB20  25AB               	addwf	__display_itoa@missing& (0+255),w,b
 28241  00EB22  B0D8               	btfsc	status,0,c
 28242  00EB24  D021               	goto	l1341
 28243  00EB26                     u14280:
 28244                           
 28245                           ; BSR set to: 0
 28246                           ;display.c: 170: {;display.c: 171: tmp[pos] = tmp[pos-missing];
 28247  00EB26  C0AB  F09A         	movff	__display_itoa@missing,??__display_itoa
 28248  00EB2A  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 28249  00EB2C  BF9A               	btfsc	??__display_itoa& (0+255),7,b
 28250  00EB2E  079B               	decf	(??__display_itoa+1)& (0+255),f,b
 28251  00EB30  1F9A               	comf	??__display_itoa& (0+255),f,b
 28252  00EB32  1F9B               	comf	(??__display_itoa+1)& (0+255),f,b
 28253  00EB34  4B9A               	infsnz	??__display_itoa& (0+255),f,b
 28254  00EB36  2B9B               	incf	(??__display_itoa+1)& (0+255),f,b
 28255  00EB38  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28256  00EB3A  6F9C               	movwf	(??__display_itoa+2)& (0+255),b
 28257  00EB3C  6B9D               	clrf	(??__display_itoa+3)& (0+255),b
 28258  00EB3E  519A               	movf	??__display_itoa& (0+255),w,b
 28259  00EB40  279C               	addwf	(??__display_itoa+2)& (0+255),f,b
 28260  00EB42  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 28261  00EB44  239D               	addwfc	(??__display_itoa+3)& (0+255),f,b
 28262  00EB46  0EA0               	movlw	low __display_itoa@tmp
 28263  00EB48  259C               	addwf	(??__display_itoa+2)& (0+255),w,b
 28264  00EB4A  6ED9               	movwf	fsr2l,c
 28265  00EB4C  0E00               	movlw	high __display_itoa@tmp
 28266  00EB4E  219D               	addwfc	(??__display_itoa+3)& (0+255),w,b
 28267  00EB50  6EDA               	movwf	fsr2h,c
 28268  00EB52  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28269  00EB54  0D01               	mullw	1
 28270  00EB56  0EA0               	movlw	low __display_itoa@tmp
 28271  00EB58  24F3               	addwf	prodl,w,c
 28272  00EB5A  6EE1               	movwf	fsr1l,c
 28273  00EB5C  0E00               	movlw	high __display_itoa@tmp
 28274  00EB5E  20F4               	addwfc	prodh,w,c
 28275  00EB60  6EE2               	movwf	fsr1h,c
 28276  00EB62  CFDF FFE7          	movff	indf2,indf1
 28277                           
 28278                           ;display.c: 172: }
 28279  00EB66  D00A               	goto	l1342
 28280  00EB68                     l1341:
 28281                           
 28282                           ; BSR set to: 0
 28283                           ;display.c: 173: else;display.c: 174: {;display.c: 175: tmp[pos] = '0';
 28284                           
 28285                           ; BSR set to: 0
 28286  00EB68  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28287  00EB6A  0D01               	mullw	1
 28288  00EB6C  0EA0               	movlw	low __display_itoa@tmp
 28289  00EB6E  24F3               	addwf	prodl,w,c
 28290  00EB70  6ED9               	movwf	fsr2l,c
 28291  00EB72  0E00               	movlw	high __display_itoa@tmp
 28292  00EB74  20F4               	addwfc	prodh,w,c
 28293  00EB76  6EDA               	movwf	fsr2h,c
 28294  00EB78  0E30               	movlw	48
 28295  00EB7A  6EDF               	movwf	indf2,c
 28296  00EB7C                     l1342:
 28297                           
 28298                           ; BSR set to: 0
 28299                           
 28300                           ; BSR set to: 0
 28301  00EB7C  07AC               	decf	__display_itoa@pos& (0+255),f,b
 28302  00EB7E  D7C9               	goto	l15465
 28303  00EB80                     u14290:
 28304                           
 28305                           ; BSR set to: 0
 28306                           ;display.c: 176: };display.c: 177: };display.c: 178: len = decimals + 1;
 28307                           
 28308                           ; BSR set to: 0
 28309  00EB80  2997               	incf	__display_itoa@decimals& (0+255),w,b
 28310  00EB82                     L38:
 28311  00EB82  6FAA               	movwf	__display_itoa@len& (0+255),b
 28312  00EB84                     l1338:
 28313                           
 28314                           ; BSR set to: 0
 28315                           ;display.c: 179: };display.c: 180: };display.c: 182: decimals = len - decimals - 1;
 28316                           
 28317                           ; BSR set to: 0
 28318  00EB84  5197               	movf	__display_itoa@decimals& (0+255),w,b
 28319  00EB86  0800               	sublw	0
 28320  00EB88  25AA               	addwf	__display_itoa@len& (0+255),w,b
 28321  00EB8A  6F9A               	movwf	??__display_itoa& (0+255),b
 28322  00EB8C  059A               	decf	??__display_itoa& (0+255),w,b
 28323  00EB8E  6F97               	movwf	__display_itoa@decimals& (0+255),b
 28324                           
 28325                           ; BSR set to: 0
 28326                           ;display.c: 184: for(pos=0;pos<len;++pos)
 28327  00EB90  0E00               	movlw	0
 28328  00EB92  6FAC               	movwf	__display_itoa@pos& (0+255),b
 28329  00EB94  D023               	goto	l1343
 28330  00EB96                     
 28331                           ; BSR set to: 0
 28332                           ;display.c: 185: {;display.c: 186: text[pos] = tmp[pos];
 28333                           
 28334                           ; BSR set to: 0
 28335  00EB96  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28336  00EB98  0D01               	mullw	1
 28337  00EB9A  0EA0               	movlw	low __display_itoa@tmp
 28338  00EB9C  24F3               	addwf	prodl,w,c
 28339  00EB9E  6ED9               	movwf	fsr2l,c
 28340  00EBA0  0E00               	movlw	high __display_itoa@tmp
 28341  00EBA2  20F4               	addwfc	prodh,w,c
 28342  00EBA4  6EDA               	movwf	fsr2h,c
 28343  00EBA6  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28344  00EBA8  0D01               	mullw	1
 28345  00EBAA  50F3               	movf	prodl,w,c
 28346  00EBAC  2598               	addwf	__display_itoa@text& (0+255),w,b
 28347  00EBAE  6EE1               	movwf	fsr1l,c
 28348  00EBB0  50F4               	movf	prodh,w,c
 28349  00EBB2  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 28350  00EBB4  6EE2               	movwf	fsr1h,c
 28351  00EBB6  CFDF FFE7          	movff	indf2,indf1
 28352                           
 28353                           ; BSR set to: 0
 28354                           ;display.c: 187: if(pos==decimals)
 28355  00EBBA  5197               	movf	__display_itoa@decimals& (0+255),w,b
 28356  00EBBC  19AC               	xorwf	__display_itoa@pos& (0+255),w,b
 28357  00EBBE  A4D8               	btfss	status,2,c
 28358  00EBC0  D00C               	goto	l1345
 28359                           
 28360                           ; BSR set to: 0
 28361                           ;display.c: 188: {;display.c: 190: ++pos;
 28362  00EBC2  2BAC               	incf	__display_itoa@pos& (0+255),f,b
 28363                           
 28364                           ; BSR set to: 0
 28365                           ;display.c: 191: text[pos] = '.';
 28366  00EBC4  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28367  00EBC6  0D01               	mullw	1
 28368  00EBC8  50F3               	movf	prodl,w,c
 28369  00EBCA  2598               	addwf	__display_itoa@text& (0+255),w,b
 28370  00EBCC  6ED9               	movwf	fsr2l,c
 28371  00EBCE  50F4               	movf	prodh,w,c
 28372  00EBD0  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 28373  00EBD2  6EDA               	movwf	fsr2h,c
 28374  00EBD4  0E2E               	movlw	46
 28375  00EBD6  6EDF               	movwf	indf2,c
 28376                           
 28377                           ;display.c: 192: break;
 28378  00EBD8  D01E               	goto	l1347
 28379  00EBDA                     l1345:
 28380                           
 28381                           ; BSR set to: 0
 28382                           
 28383                           ; BSR set to: 0
 28384  00EBDA  2BAC               	incf	__display_itoa@pos& (0+255),f,b
 28385  00EBDC                     l1343:
 28386                           
 28387                           ; BSR set to: 0
 28388                           
 28389                           ; BSR set to: 0
 28390  00EBDC  51AA               	movf	__display_itoa@len& (0+255),w,b
 28391  00EBDE  5DAC               	subwf	__display_itoa@pos& (0+255),w,b
 28392  00EBE0  B0D8               	btfsc	status,0,c
 28393  00EBE2  D019               	goto	l1347
 28394  00EBE4  D7D8               	goto	l1344
 28395  00EBE6                     
 28396                           ; BSR set to: 0
 28397                           ;display.c: 196: {;display.c: 197: text[pos+1] = tmp[pos];
 28398                           
 28399                           ; BSR set to: 0
 28400  00EBE6  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28401  00EBE8  0D01               	mullw	1
 28402  00EBEA  0EA0               	movlw	low __display_itoa@tmp
 28403  00EBEC  24F3               	addwf	prodl,w,c
 28404  00EBEE  6ED9               	movwf	fsr2l,c
 28405  00EBF0  0E00               	movlw	high __display_itoa@tmp
 28406  00EBF2  20F4               	addwfc	prodh,w,c
 28407  00EBF4  6EDA               	movwf	fsr2h,c
 28408  00EBF6  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28409  00EBF8  6F9A               	movwf	??__display_itoa& (0+255),b
 28410  00EBFA  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 28411  00EBFC  0E01               	movlw	1
 28412  00EBFE  279A               	addwf	??__display_itoa& (0+255),f,b
 28413  00EC00  0E00               	movlw	0
 28414  00EC02  239B               	addwfc	(??__display_itoa+1)& (0+255),f,b
 28415  00EC04  519A               	movf	??__display_itoa& (0+255),w,b
 28416  00EC06  2598               	addwf	__display_itoa@text& (0+255),w,b
 28417  00EC08  6EE1               	movwf	fsr1l,c
 28418  00EC0A  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 28419  00EC0C  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 28420  00EC0E  6EE2               	movwf	fsr1h,c
 28421  00EC10  CFDF FFE7          	movff	indf2,indf1
 28422                           
 28423                           ; BSR set to: 0
 28424  00EC14  2BAC               	incf	__display_itoa@pos& (0+255),f,b
 28425  00EC16                     l1347:
 28426                           
 28427                           ; BSR set to: 0
 28428                           
 28429                           ; BSR set to: 0
 28430  00EC16  51AA               	movf	__display_itoa@len& (0+255),w,b
 28431  00EC18  5DAC               	subwf	__display_itoa@pos& (0+255),w,b
 28432  00EC1A  A0D8               	btfss	status,0,c
 28433  00EC1C  D7E4               	goto	l1348
 28434                           
 28435                           ; BSR set to: 0
 28436                           ;display.c: 198: };display.c: 199: text[pos+1] = 0;
 28437                           
 28438                           ; BSR set to: 0
 28439  00EC1E  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28440  00EC20  6F9A               	movwf	??__display_itoa& (0+255),b
 28441  00EC22  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 28442  00EC24  0E01               	movlw	1
 28443  00EC26  279A               	addwf	??__display_itoa& (0+255),f,b
 28444  00EC28  0E00               	movlw	0
 28445  00EC2A  239B               	addwfc	(??__display_itoa+1)& (0+255),f,b
 28446  00EC2C  519A               	movf	??__display_itoa& (0+255),w,b
 28447  00EC2E  2598               	addwf	__display_itoa@text& (0+255),w,b
 28448  00EC30  6ED9               	movwf	fsr2l,c
 28449  00EC32  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 28450  00EC34  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 28451  00EC36  6EDA               	movwf	fsr2h,c
 28452  00EC38  0E00               	movlw	0
 28453  00EC3A  6EDF               	movwf	indf2,c
 28454                           
 28455                           ; BSR set to: 0
 28456  00EC3C  0012               	return		;funcret
 28457  00EC3E                     __end_of__display_itoa:
 28458                           	opt stack 0
 28459                           tblptru	equ	0xFF8
 28460                           tblptrh	equ	0xFF7
 28461                           tblptrl	equ	0xFF6
 28462                           tablat	equ	0xFF5
 28463                           prodh	equ	0xFF4
 28464                           prodl	equ	0xFF3
 28465                           intcon	equ	0xFF2
 28466                           postinc0	equ	0xFEE
 28467                           wreg	equ	0xFE8
 28468                           indf1	equ	0xFE7
 28469                           postinc1	equ	0xFE6
 28470                           postdec1	equ	0xFE5
 28471                           plusw1	equ	0xFE3
 28472                           fsr1h	equ	0xFE2
 28473                           fsr1l	equ	0xFE1
 28474                           indf2	equ	0xFDF
 28475                           postinc2	equ	0xFDE
 28476                           postdec2	equ	0xFDD
 28477                           plusw2	equ	0xFDB
 28478                           fsr2h	equ	0xFDA
 28479                           fsr2l	equ	0xFD9
 28480                           status	equ	0xFD8
 28481                           
 28482 ;; *************** function _strlen *****************
 28483 ;; Defined at:
 28484 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strlen.c"
 28485 ;; Parameters:    Size  Location     Type
 28486 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 28487 ;;		 -> display_prepare@temp(10), _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 28488 ;; Auto vars:     Size  Location     Type
 28489 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 28490 ;;		 -> display_prepare@temp(10), _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 28491 ;; Return value:  Size  Location     Type
 28492 ;;                  2    0[BANK0 ] unsigned int 
 28493 ;; Registers used:
 28494 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28495 ;; Tracked objects:
 28496 ;;		On entry : 0/0
 28497 ;;		On exit  : 0/0
 28498 ;;		Unchanged: 0/0
 28499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28500 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28501 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28502 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28503 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28504 ;;Total ram usage:        6 bytes
 28505 ;; Hardware stack levels used:    1
 28506 ;; Hardware stack levels required when called:   10
 28507 ;; This function calls:
 28508 ;;		Nothing
 28509 ;; This function is called by:
 28510 ;;		__display_padded_itoa
 28511 ;;		__display_itoa
 28512 ;;		__display_itoa_long
 28513 ;;		_display_prepare
 28514 ;; This function uses a non-reentrant model
 28515 ;;
 28516                           
 28517                           	psect	text111
 28518  0150CA                     __ptext111:
 28519                           	opt stack 0
 28520  0150CA                     _strlen:
 28521                           	opt stack 19
 28522                           
 28523                           ; BSR set to: 0
 28524                           ;incstack = 0
 28525  0150CA  C060  F064         	movff	strlen@s,strlen@cp
 28526  0150CE  C061  F065         	movff	strlen@s+1,strlen@cp+1
 28527  0150D2  D003               	goto	l3717
 28528  0150D4  0100               	movlb	0	; () banked
 28529  0150D6  4B64               	infsnz	strlen@cp& (0+255),f,b
 28530  0150D8  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 28531  0150DA                     l3717:
 28532                           
 28533                           ; BSR set to: 0
 28534  0150DA  C064  FFD9         	movff	strlen@cp,fsr2l
 28535  0150DE  C065  FFDA         	movff	strlen@cp+1,fsr2h
 28536  0150E2  50DF               	movf	indf2,w,c
 28537  0150E4  A4D8               	btfss	status,2,c
 28538  0150E6  D7F6               	goto	l3718
 28539  0150E8  C060  F062         	movff	strlen@s,??_strlen
 28540  0150EC  C061  F063         	movff	strlen@s+1,??_strlen+1
 28541  0150F0  0100               	movlb	0	; () banked
 28542  0150F2  1F62               	comf	??_strlen& (0+255),f,b
 28543  0150F4  1F63               	comf	(??_strlen+1)& (0+255),f,b
 28544  0150F6  4B62               	infsnz	??_strlen& (0+255),f,b
 28545  0150F8  2B63               	incf	(??_strlen+1)& (0+255),f,b
 28546  0150FA  5164               	movf	strlen@cp& (0+255),w,b
 28547  0150FC  2562               	addwf	??_strlen& (0+255),w,b
 28548  0150FE  6F60               	movwf	?_strlen& (0+255),b
 28549  015100  5165               	movf	(strlen@cp+1)& (0+255),w,b
 28550  015102  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 28551  015104  6F61               	movwf	(?_strlen+1)& (0+255),b
 28552  015106  0012               	return	
 28553  015108                     __end_of_strlen:
 28554                           	opt stack 0
 28555                           tblptru	equ	0xFF8
 28556                           tblptrh	equ	0xFF7
 28557                           tblptrl	equ	0xFF6
 28558                           tablat	equ	0xFF5
 28559                           prodh	equ	0xFF4
 28560                           prodl	equ	0xFF3
 28561                           intcon	equ	0xFF2
 28562                           postinc0	equ	0xFEE
 28563                           wreg	equ	0xFE8
 28564                           indf1	equ	0xFE7
 28565                           postinc1	equ	0xFE6
 28566                           postdec1	equ	0xFE5
 28567                           plusw1	equ	0xFE3
 28568                           fsr1h	equ	0xFE2
 28569                           fsr1l	equ	0xFE1
 28570                           indf2	equ	0xFDF
 28571                           postinc2	equ	0xFDE
 28572                           postdec2	equ	0xFDD
 28573                           plusw2	equ	0xFDB
 28574                           fsr2h	equ	0xFDA
 28575                           fsr2l	equ	0xFD9
 28576                           status	equ	0xFD8
 28577                           
 28578 ;; *************** function _itoa *****************
 28579 ;; Defined at:
 28580 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 28581 ;; Parameters:    Size  Location     Type
 28582 ;;  buf             2   16[BANK0 ] PTR unsigned char 
 28583 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 28584 ;;  val             2   18[BANK0 ] int 
 28585 ;;  base            2   20[BANK0 ] int 
 28586 ;; Auto vars:     Size  Location     Type
 28587 ;;  cp              2   22[BANK0 ] PTR unsigned char 
 28588 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 28589 ;; Return value:  Size  Location     Type
 28590 ;;                  2   16[BANK0 ] PTR unsigned char 
 28591 ;; Registers used:
 28592 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28593 ;; Tracked objects:
 28594 ;;		On entry : 0/0
 28595 ;;		On exit  : 0/0
 28596 ;;		Unchanged: 0/0
 28597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28598 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28599 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28601 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28602 ;;Total ram usage:        8 bytes
 28603 ;; Hardware stack levels used:    1
 28604 ;; Hardware stack levels required when called:   12
 28605 ;; This function calls:
 28606 ;;		_utoa
 28607 ;; This function is called by:
 28608 ;;		__display_padded_itoa
 28609 ;;		__display_itoa
 28610 ;;		__display_itoa_u16
 28611 ;; This function uses a non-reentrant model
 28612 ;;
 28613                           
 28614                           	psect	text112
 28615  014F7E                     __ptext112:
 28616                           	opt stack 0
 28617  014F7E                     _itoa:
 28618                           	opt stack 14
 28619                           
 28620                           ; BSR set to: 0
 28621                           ;incstack = 0
 28622  014F7E  C070  F076         	movff	itoa@buf,itoa@cp
 28623  014F82  C071  F077         	movff	itoa@buf+1,itoa@cp+1
 28624  014F86  0100               	movlb	0	; () banked
 28625  014F88  AF73               	btfss	(itoa@val+1)& (0+255),7,b
 28626  014F8A  D00C               	goto	l3669
 28627                           
 28628                           ; BSR set to: 0
 28629  014F8C  C070  FFD9         	movff	itoa@buf,fsr2l
 28630  014F90  C071  FFDA         	movff	itoa@buf+1,fsr2h
 28631  014F94  0E2D               	movlw	45
 28632  014F96  6EDF               	movwf	indf2,c
 28633                           
 28634                           ; BSR set to: 0
 28635  014F98  4B70               	infsnz	itoa@buf& (0+255),f,b
 28636  014F9A  2B71               	incf	(itoa@buf+1)& (0+255),f,b
 28637                           
 28638                           ; BSR set to: 0
 28639  014F9C  6D72               	negf	itoa@val& (0+255),b
 28640  014F9E  1F73               	comf	(itoa@val+1)& (0+255),f,b
 28641  014FA0  B0D8               	btfsc	status,0,c
 28642  014FA2  2B73               	incf	(itoa@val+1)& (0+255),f,b
 28643  014FA4                     l3669:
 28644                           
 28645                           ; BSR set to: 0
 28646                           
 28647                           ; BSR set to: 0
 28648  014FA4  C070  F067         	movff	itoa@buf,utoa@buf
 28649  014FA8  C071  F068         	movff	itoa@buf+1,utoa@buf+1
 28650  014FAC  C072  F069         	movff	itoa@val,utoa@val
 28651  014FB0  C073  F06A         	movff	itoa@val+1,utoa@val+1
 28652  014FB4  C074  F06B         	movff	itoa@base,utoa@base
 28653  014FB8  C075  F06C         	movff	itoa@base+1,utoa@base+1
 28654  014FBC  EC34  F098         	call	_utoa	;wreg free
 28655  014FC0  0012               	return	
 28656  014FC2                     __end_of_itoa:
 28657                           	opt stack 0
 28658                           tblptru	equ	0xFF8
 28659                           tblptrh	equ	0xFF7
 28660                           tblptrl	equ	0xFF6
 28661                           tablat	equ	0xFF5
 28662                           prodh	equ	0xFF4
 28663                           prodl	equ	0xFF3
 28664                           intcon	equ	0xFF2
 28665                           postinc0	equ	0xFEE
 28666                           wreg	equ	0xFE8
 28667                           indf1	equ	0xFE7
 28668                           postinc1	equ	0xFE6
 28669                           postdec1	equ	0xFE5
 28670                           plusw1	equ	0xFE3
 28671                           fsr1h	equ	0xFE2
 28672                           fsr1l	equ	0xFE1
 28673                           indf2	equ	0xFDF
 28674                           postinc2	equ	0xFDE
 28675                           postdec2	equ	0xFDD
 28676                           plusw2	equ	0xFDB
 28677                           fsr2h	equ	0xFDA
 28678                           fsr2l	equ	0xFD9
 28679                           status	equ	0xFD8
 28680                           
 28681 ;; *************** function _utoa *****************
 28682 ;; Defined at:
 28683 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 28684 ;; Parameters:    Size  Location     Type
 28685 ;;  buf             2    7[BANK0 ] PTR unsigned char 
 28686 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 28687 ;;  val             2    9[BANK0 ] unsigned int 
 28688 ;;  base            2   11[BANK0 ] int 
 28689 ;; Auto vars:     Size  Location     Type
 28690 ;;  v               2   13[BANK0 ] unsigned int 
 28691 ;;  c               1   15[BANK0 ] unsigned char 
 28692 ;; Return value:  Size  Location     Type
 28693 ;;                  2    7[BANK0 ] PTR unsigned char 
 28694 ;; Registers used:
 28695 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28696 ;; Tracked objects:
 28697 ;;		On entry : 0/0
 28698 ;;		On exit  : 0/0
 28699 ;;		Unchanged: 0/0
 28700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28701 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28702 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28704 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28705 ;;Total ram usage:        9 bytes
 28706 ;; Hardware stack levels used:    1
 28707 ;; Hardware stack levels required when called:   11
 28708 ;; This function calls:
 28709 ;;		___lwdiv
 28710 ;;		___lwmod
 28711 ;; This function is called by:
 28712 ;;		_itoa
 28713 ;; This function uses a non-reentrant model
 28714 ;;
 28715                           
 28716                           	psect	text113
 28717  013068                     __ptext113:
 28718                           	opt stack 0
 28719  013068                     _utoa:
 28720                           	opt stack 14
 28721                           
 28722                           ;incstack = 0
 28723  013068  C069  F06D         	movff	utoa@val,utoa@v
 28724  01306C  C06A  F06E         	movff	utoa@val+1,utoa@v+1
 28725  013070  C06D  F060         	movff	utoa@v,___lwdiv@dividend
 28726  013074  C06E  F061         	movff	utoa@v+1,___lwdiv@dividend+1
 28727  013078  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 28728  01307C  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 28729  013080  EC55  F0A5         	call	___lwdiv	;wreg free
 28730  013084  C060  F06D         	movff	?___lwdiv,utoa@v
 28731  013088  C061  F06E         	movff	?___lwdiv+1,utoa@v+1
 28732  01308C  0100               	movlb	0	; () banked
 28733  01308E  4B67               	infsnz	utoa@buf& (0+255),f,b
 28734  013090  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 28735                           
 28736                           ; BSR set to: 0
 28737  013092  516D               	movf	utoa@v& (0+255),w,b
 28738  013094  116E               	iorwf	(utoa@v+1)& (0+255),w,b
 28739  013096  A4D8               	btfss	status,2,c
 28740  013098  D7EB               	goto	l3673
 28741                           
 28742                           ; BSR set to: 0
 28743                           
 28744                           ; BSR set to: 0
 28745  01309A  C067  FFD9         	movff	utoa@buf,fsr2l
 28746  01309E  C068  FFDA         	movff	utoa@buf+1,fsr2h
 28747  0130A2  0E00               	movlw	0
 28748  0130A4  6EDF               	movwf	indf2,c
 28749                           
 28750                           ; BSR set to: 0
 28751  0130A6  0767               	decf	utoa@buf& (0+255),f,b
 28752  0130A8  A0D8               	btfss	status,0,c
 28753  0130AA  0768               	decf	(utoa@buf+1)& (0+255),f,b
 28754  0130AC                     
 28755                           ; BSR set to: 0
 28756                           
 28757                           ; BSR set to: 0
 28758  0130AC  C069  F060         	movff	utoa@val,___lwmod@dividend
 28759  0130B0  C06A  F061         	movff	utoa@val+1,___lwmod@dividend+1
 28760  0130B4  C06B  F062         	movff	utoa@base,___lwmod@divisor
 28761  0130B8  C06C  F063         	movff	utoa@base+1,___lwmod@divisor+1
 28762  0130BC  ECE1  F0A7         	call	___lwmod	;wreg free
 28763  0130C0  0100               	movlb	0	; () banked
 28764  0130C2  5160               	movf	?___lwmod& (0+255),w,b
 28765  0130C4  6F6F               	movwf	utoa@c& (0+255),b
 28766                           
 28767                           ; BSR set to: 0
 28768  0130C6  C069  F060         	movff	utoa@val,___lwdiv@dividend
 28769  0130CA  C06A  F061         	movff	utoa@val+1,___lwdiv@dividend+1
 28770  0130CE  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 28771  0130D2  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 28772  0130D6  EC55  F0A5         	call	___lwdiv	;wreg free
 28773  0130DA  C060  F069         	movff	?___lwdiv,utoa@val
 28774  0130DE  C061  F06A         	movff	?___lwdiv+1,utoa@val+1
 28775  0130E2  0E09               	movlw	9
 28776  0130E4  0100               	movlb	0	; () banked
 28777  0130E6  656F               	cpfsgt	utoa@c& (0+255),b
 28778  0130E8  D002               	goto	l3676
 28779                           
 28780                           ; BSR set to: 0
 28781  0130EA  0E07               	movlw	7
 28782  0130EC  276F               	addwf	utoa@c& (0+255),f,b
 28783  0130EE                     l3676:
 28784                           
 28785                           ; BSR set to: 0
 28786  0130EE  0E30               	movlw	48
 28787  0130F0  276F               	addwf	utoa@c& (0+255),f,b
 28788                           
 28789                           ; BSR set to: 0
 28790  0130F2  C067  FFD9         	movff	utoa@buf,fsr2l
 28791  0130F6  C068  FFDA         	movff	utoa@buf+1,fsr2h
 28792  0130FA  C06F  FFDF         	movff	utoa@c,indf2
 28793                           
 28794                           ; BSR set to: 0
 28795  0130FE  0767               	decf	utoa@buf& (0+255),f,b
 28796  013100  A0D8               	btfss	status,0,c
 28797  013102  0768               	decf	(utoa@buf+1)& (0+255),f,b
 28798                           
 28799                           ; BSR set to: 0
 28800  013104  5169               	movf	utoa@val& (0+255),w,b
 28801  013106  116A               	iorwf	(utoa@val+1)& (0+255),w,b
 28802  013108  A4D8               	btfss	status,2,c
 28803  01310A  D7D0               	goto	l3675
 28804                           
 28805                           ; BSR set to: 0
 28806                           ;	Return value of _utoa is never used
 28807                           
 28808                           ; BSR set to: 0
 28809  01310C  4B67               	infsnz	utoa@buf& (0+255),f,b
 28810  01310E  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 28811  013110  0012               	return	
 28812  013112                     __end_of_utoa:
 28813                           	opt stack 0
 28814                           tblptru	equ	0xFF8
 28815                           tblptrh	equ	0xFF7
 28816                           tblptrl	equ	0xFF6
 28817                           tablat	equ	0xFF5
 28818                           prodh	equ	0xFF4
 28819                           prodl	equ	0xFF3
 28820                           intcon	equ	0xFF2
 28821                           postinc0	equ	0xFEE
 28822                           wreg	equ	0xFE8
 28823                           indf1	equ	0xFE7
 28824                           postinc1	equ	0xFE6
 28825                           postdec1	equ	0xFE5
 28826                           plusw1	equ	0xFE3
 28827                           fsr1h	equ	0xFE2
 28828                           fsr1l	equ	0xFE1
 28829                           indf2	equ	0xFDF
 28830                           postinc2	equ	0xFDE
 28831                           postdec2	equ	0xFDD
 28832                           plusw2	equ	0xFDB
 28833                           fsr2h	equ	0xFDA
 28834                           fsr2l	equ	0xFD9
 28835                           status	equ	0xFD8
 28836                           
 28837 ;; *************** function ___lwmod *****************
 28838 ;; Defined at:
 28839 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 28840 ;; Parameters:    Size  Location     Type
 28841 ;;  dividend        2    0[BANK0 ] unsigned int 
 28842 ;;  divisor         2    2[BANK0 ] unsigned int 
 28843 ;; Auto vars:     Size  Location     Type
 28844 ;;  counter         1    4[BANK0 ] unsigned char 
 28845 ;; Return value:  Size  Location     Type
 28846 ;;                  2    0[BANK0 ] unsigned int 
 28847 ;; Registers used:
 28848 ;;		wreg, status,2, status,0
 28849 ;; Tracked objects:
 28850 ;;		On entry : 0/0
 28851 ;;		On exit  : 0/0
 28852 ;;		Unchanged: 0/0
 28853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28854 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28855 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28857 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28858 ;;Total ram usage:        5 bytes
 28859 ;; Hardware stack levels used:    1
 28860 ;; Hardware stack levels required when called:   10
 28861 ;; This function calls:
 28862 ;;		Nothing
 28863 ;; This function is called by:
 28864 ;;		_utoa
 28865 ;; This function uses a non-reentrant model
 28866 ;;
 28867                           
 28868                           	psect	text114
 28869  014FC2                     __ptext114:
 28870                           	opt stack 0
 28871  014FC2                     ___lwmod:
 28872                           	opt stack 14
 28873                           
 28874                           ; BSR set to: 0
 28875                           ;incstack = 0
 28876  014FC2  0100               	movlb	0	; () banked
 28877  014FC4  5162               	movf	___lwmod@divisor& (0+255),w,b
 28878  014FC6  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 28879  014FC8  B4D8               	btfsc	status,2,c
 28880  014FCA  D018               	goto	l3466
 28881                           
 28882                           ; BSR set to: 0
 28883  014FCC  0E01               	movlw	1
 28884  014FCE  6F64               	movwf	___lwmod@counter& (0+255),b
 28885  014FD0  D004               	goto	l3461
 28886  014FD2                     
 28887                           ; BSR set to: 0
 28888                           
 28889                           ; BSR set to: 0
 28890  014FD2  90D8               	bcf	status,0,c
 28891  014FD4  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 28892  014FD6  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 28893  014FD8  2B64               	incf	___lwmod@counter& (0+255),f,b
 28894  014FDA                     l3461:
 28895                           
 28896                           ; BSR set to: 0
 28897                           
 28898                           ; BSR set to: 0
 28899  014FDA  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 28900  014FDC  D7FA               	goto	l3462
 28901  014FDE                     u11030:
 28902                           
 28903                           ; BSR set to: 0
 28904                           
 28905                           ; BSR set to: 0
 28906                           
 28907                           ; BSR set to: 0
 28908  014FDE  5162               	movf	___lwmod@divisor& (0+255),w,b
 28909  014FE0  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 28910  014FE2  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 28911  014FE4  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 28912  014FE6  A0D8               	btfss	status,0,c
 28913  014FE8  D004               	goto	l3465
 28914                           
 28915                           ; BSR set to: 0
 28916  014FEA  5162               	movf	___lwmod@divisor& (0+255),w,b
 28917  014FEC  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 28918  014FEE  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 28919  014FF0  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 28920  014FF2                     l3465:
 28921                           
 28922                           ; BSR set to: 0
 28923                           
 28924                           ; BSR set to: 0
 28925  014FF2  90D8               	bcf	status,0,c
 28926  014FF4  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 28927  014FF6  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 28928                           
 28929                           ; BSR set to: 0
 28930  014FF8  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 28931  014FFA  D7F1               	goto	u11030
 28932  014FFC                     l3466:
 28933                           
 28934                           ; BSR set to: 0
 28935                           
 28936                           ; BSR set to: 0
 28937  014FFC  C060  F060         	movff	___lwmod@dividend,?___lwmod
 28938  015000  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 28939                           
 28940                           ; BSR set to: 0
 28941  015004  0012               	return		;funcret
 28942  015006                     __end_of___lwmod:
 28943                           	opt stack 0
 28944                           tblptru	equ	0xFF8
 28945                           tblptrh	equ	0xFF7
 28946                           tblptrl	equ	0xFF6
 28947                           tablat	equ	0xFF5
 28948                           prodh	equ	0xFF4
 28949                           prodl	equ	0xFF3
 28950                           intcon	equ	0xFF2
 28951                           postinc0	equ	0xFEE
 28952                           wreg	equ	0xFE8
 28953                           indf1	equ	0xFE7
 28954                           postinc1	equ	0xFE6
 28955                           postdec1	equ	0xFE5
 28956                           plusw1	equ	0xFE3
 28957                           fsr1h	equ	0xFE2
 28958                           fsr1l	equ	0xFE1
 28959                           indf2	equ	0xFDF
 28960                           postinc2	equ	0xFDE
 28961                           postdec2	equ	0xFDD
 28962                           plusw2	equ	0xFDB
 28963                           fsr2h	equ	0xFDA
 28964                           fsr2l	equ	0xFD9
 28965                           status	equ	0xFD8
 28966                           
 28967 ;; *************** function ___lwdiv *****************
 28968 ;; Defined at:
 28969 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 28970 ;; Parameters:    Size  Location     Type
 28971 ;;  dividend        2    0[BANK0 ] unsigned int 
 28972 ;;  divisor         2    2[BANK0 ] unsigned int 
 28973 ;; Auto vars:     Size  Location     Type
 28974 ;;  quotient        2    4[BANK0 ] unsigned int 
 28975 ;;  counter         1    6[BANK0 ] unsigned char 
 28976 ;; Return value:  Size  Location     Type
 28977 ;;                  2    0[BANK0 ] unsigned int 
 28978 ;; Registers used:
 28979 ;;		wreg, status,2, status,0
 28980 ;; Tracked objects:
 28981 ;;		On entry : 0/0
 28982 ;;		On exit  : 0/0
 28983 ;;		Unchanged: 0/0
 28984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28985 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28986 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28988 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28989 ;;Total ram usage:        7 bytes
 28990 ;; Hardware stack levels used:    1
 28991 ;; Hardware stack levels required when called:   10
 28992 ;; This function calls:
 28993 ;;		Nothing
 28994 ;; This function is called by:
 28995 ;;		_utoa
 28996 ;; This function uses a non-reentrant model
 28997 ;;
 28998                           
 28999                           	psect	text115
 29000  014AAA                     __ptext115:
 29001                           	opt stack 0
 29002  014AAA                     ___lwdiv:
 29003                           	opt stack 14
 29004                           
 29005                           ; BSR set to: 0
 29006                           ;incstack = 0
 29007  014AAA  0E00               	movlw	0
 29008  014AAC  0100               	movlb	0	; () banked
 29009  014AAE  6F65               	movwf	(___lwdiv@quotient+1)& (0+255),b
 29010  014AB0  0E00               	movlw	0
 29011  014AB2  6F64               	movwf	___lwdiv@quotient& (0+255),b
 29012                           
 29013                           ; BSR set to: 0
 29014  014AB4  5162               	movf	___lwdiv@divisor& (0+255),w,b
 29015  014AB6  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 29016  014AB8  B4D8               	btfsc	status,2,c
 29017  014ABA  D01C               	goto	l3456
 29018                           
 29019                           ; BSR set to: 0
 29020  014ABC  0E01               	movlw	1
 29021  014ABE  6F66               	movwf	___lwdiv@counter& (0+255),b
 29022  014AC0  D004               	goto	l3451
 29023  014AC2                     
 29024                           ; BSR set to: 0
 29025                           
 29026                           ; BSR set to: 0
 29027  014AC2  90D8               	bcf	status,0,c
 29028  014AC4  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 29029  014AC6  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 29030  014AC8  2B66               	incf	___lwdiv@counter& (0+255),f,b
 29031  014ACA                     l3451:
 29032                           
 29033                           ; BSR set to: 0
 29034                           
 29035                           ; BSR set to: 0
 29036  014ACA  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 29037  014ACC  D7FA               	goto	l3452
 29038  014ACE                     u11000:
 29039                           
 29040                           ; BSR set to: 0
 29041                           
 29042                           ; BSR set to: 0
 29043                           
 29044                           ; BSR set to: 0
 29045  014ACE  90D8               	bcf	status,0,c
 29046  014AD0  3764               	rlcf	___lwdiv@quotient& (0+255),f,b
 29047  014AD2  3765               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 29048                           
 29049                           ; BSR set to: 0
 29050  014AD4  5162               	movf	___lwdiv@divisor& (0+255),w,b
 29051  014AD6  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 29052  014AD8  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 29053  014ADA  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 29054  014ADC  A0D8               	btfss	status,0,c
 29055  014ADE  D005               	goto	l3455
 29056                           
 29057                           ; BSR set to: 0
 29058  014AE0  5162               	movf	___lwdiv@divisor& (0+255),w,b
 29059  014AE2  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 29060  014AE4  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 29061  014AE6  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 29062                           
 29063                           ; BSR set to: 0
 29064  014AE8  8164               	bsf	___lwdiv@quotient& (0+255),0,b
 29065  014AEA                     l3455:
 29066                           
 29067                           ; BSR set to: 0
 29068                           
 29069                           ; BSR set to: 0
 29070  014AEA  90D8               	bcf	status,0,c
 29071  014AEC  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 29072  014AEE  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 29073                           
 29074                           ; BSR set to: 0
 29075  014AF0  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
 29076  014AF2  D7ED               	goto	u11000
 29077  014AF4                     l3456:
 29078                           
 29079                           ; BSR set to: 0
 29080                           
 29081                           ; BSR set to: 0
 29082  014AF4  C064  F060         	movff	___lwdiv@quotient,?___lwdiv
 29083  014AF8  C065  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 29084                           
 29085                           ; BSR set to: 0
 29086  014AFC  0012               	return		;funcret
 29087  014AFE                     __end_of___lwdiv:
 29088                           	opt stack 0
 29089                           tblptru	equ	0xFF8
 29090                           tblptrh	equ	0xFF7
 29091                           tblptrl	equ	0xFF6
 29092                           tablat	equ	0xFF5
 29093                           prodh	equ	0xFF4
 29094                           prodl	equ	0xFF3
 29095                           intcon	equ	0xFF2
 29096                           postinc0	equ	0xFEE
 29097                           wreg	equ	0xFE8
 29098                           indf1	equ	0xFE7
 29099                           postinc1	equ	0xFE6
 29100                           postdec1	equ	0xFE5
 29101                           plusw1	equ	0xFE3
 29102                           fsr1h	equ	0xFE2
 29103                           fsr1l	equ	0xFE1
 29104                           indf2	equ	0xFDF
 29105                           postinc2	equ	0xFDE
 29106                           postdec2	equ	0xFDD
 29107                           plusw2	equ	0xFDB
 29108                           fsr2h	equ	0xFDA
 29109                           fsr2l	equ	0xFD9
 29110                           status	equ	0xFD8
 29111                           
 29112 ;; *************** function ___almod *****************
 29113 ;; Defined at:
 29114 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\almod.c"
 29115 ;; Parameters:    Size  Location     Type
 29116 ;;  dividend        4    0[BANK0 ] long 
 29117 ;;  divisor         4    4[BANK0 ] long 
 29118 ;; Auto vars:     Size  Location     Type
 29119 ;;  sign            1    9[BANK0 ] unsigned char 
 29120 ;;  counter         1    8[BANK0 ] unsigned char 
 29121 ;; Return value:  Size  Location     Type
 29122 ;;                  4    0[BANK0 ] long 
 29123 ;; Registers used:
 29124 ;;		wreg, status,2, status,0
 29125 ;; Tracked objects:
 29126 ;;		On entry : 0/0
 29127 ;;		On exit  : 0/0
 29128 ;;		Unchanged: 0/0
 29129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29130 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29131 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29133 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29134 ;;Total ram usage:       10 bytes
 29135 ;; Hardware stack levels used:    1
 29136 ;; Hardware stack levels required when called:   10
 29137 ;; This function calls:
 29138 ;;		Nothing
 29139 ;; This function is called by:
 29140 ;;		__display_itoa_long
 29141 ;; This function uses a non-reentrant model
 29142 ;;
 29143                           
 29144                           	psect	text116
 29145  012E64                     __ptext116:
 29146                           	opt stack 0
 29147  012E64                     ___almod:
 29148                           	opt stack 18
 29149                           
 29150                           ; BSR set to: 0
 29151                           ;incstack = 0
 29152  012E64  0E00               	movlw	0
 29153  012E66  0100               	movlb	0	; () banked
 29154  012E68  6F69               	movwf	___almod@sign& (0+255),b
 29155                           
 29156                           ; BSR set to: 0
 29157  012E6A  AF63               	btfss	(___almod@dividend+3)& (0+255),7,b
 29158  012E6C  D00A               	goto	l3053
 29159                           
 29160                           ; BSR set to: 0
 29161  012E6E  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 29162  012E70  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 29163  012E72  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 29164  012E74  6D60               	negf	___almod@dividend& (0+255),b
 29165  012E76  0E00               	movlw	0
 29166  012E78  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 29167  012E7A  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 29168  012E7C  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 29169                           
 29170                           ; BSR set to: 0
 29171  012E7E  0E01               	movlw	1
 29172  012E80  6F69               	movwf	___almod@sign& (0+255),b
 29173  012E82                     l3053:
 29174                           
 29175                           ; BSR set to: 0
 29176                           
 29177                           ; BSR set to: 0
 29178  012E82  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 29179  012E84  D008               	goto	l3054
 29180                           
 29181                           ; BSR set to: 0
 29182  012E86  1F67               	comf	(___almod@divisor+3)& (0+255),f,b
 29183  012E88  1F66               	comf	(___almod@divisor+2)& (0+255),f,b
 29184  012E8A  1F65               	comf	(___almod@divisor+1)& (0+255),f,b
 29185  012E8C  6D64               	negf	___almod@divisor& (0+255),b
 29186  012E8E  0E00               	movlw	0
 29187  012E90  2365               	addwfc	(___almod@divisor+1)& (0+255),f,b
 29188  012E92  2366               	addwfc	(___almod@divisor+2)& (0+255),f,b
 29189  012E94  2367               	addwfc	(___almod@divisor+3)& (0+255),f,b
 29190  012E96                     l3054:
 29191                           
 29192                           ; BSR set to: 0
 29193                           
 29194                           ; BSR set to: 0
 29195  012E96  5164               	movf	___almod@divisor& (0+255),w,b
 29196  012E98  1165               	iorwf	(___almod@divisor+1)& (0+255),w,b
 29197  012E9A  1166               	iorwf	(___almod@divisor+2)& (0+255),w,b
 29198  012E9C  1167               	iorwf	(___almod@divisor+3)& (0+255),w,b
 29199  012E9E  B4D8               	btfsc	status,2,c
 29200  012EA0  D024               	goto	l3061
 29201                           
 29202                           ; BSR set to: 0
 29203  012EA2  0E01               	movlw	1
 29204  012EA4  6F68               	movwf	___almod@counter& (0+255),b
 29205  012EA6  D006               	goto	l3056
 29206  012EA8                     
 29207                           ; BSR set to: 0
 29208                           
 29209                           ; BSR set to: 0
 29210  012EA8  90D8               	bcf	status,0,c
 29211  012EAA  3764               	rlcf	___almod@divisor& (0+255),f,b
 29212  012EAC  3765               	rlcf	(___almod@divisor+1)& (0+255),f,b
 29213  012EAE  3766               	rlcf	(___almod@divisor+2)& (0+255),f,b
 29214  012EB0  3767               	rlcf	(___almod@divisor+3)& (0+255),f,b
 29215  012EB2  2B68               	incf	___almod@counter& (0+255),f,b
 29216  012EB4                     l3056:
 29217                           
 29218                           ; BSR set to: 0
 29219                           
 29220                           ; BSR set to: 0
 29221  012EB4  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 29222  012EB6  D7F8               	goto	l3057
 29223  012EB8                     u15280:
 29224                           
 29225                           ; BSR set to: 0
 29226                           
 29227                           ; BSR set to: 0
 29228                           
 29229                           ; BSR set to: 0
 29230  012EB8  5164               	movf	___almod@divisor& (0+255),w,b
 29231  012EBA  5D60               	subwf	___almod@dividend& (0+255),w,b
 29232  012EBC  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 29233  012EBE  5961               	subwfb	(___almod@dividend+1)& (0+255),w,b
 29234  012EC0  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 29235  012EC2  5962               	subwfb	(___almod@dividend+2)& (0+255),w,b
 29236  012EC4  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 29237  012EC6  5963               	subwfb	(___almod@dividend+3)& (0+255),w,b
 29238  012EC8  A0D8               	btfss	status,0,c
 29239  012ECA  D008               	goto	l3060
 29240                           
 29241                           ; BSR set to: 0
 29242  012ECC  5164               	movf	___almod@divisor& (0+255),w,b
 29243  012ECE  5F60               	subwf	___almod@dividend& (0+255),f,b
 29244  012ED0  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 29245  012ED2  5B61               	subwfb	(___almod@dividend+1)& (0+255),f,b
 29246  012ED4  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 29247  012ED6  5B62               	subwfb	(___almod@dividend+2)& (0+255),f,b
 29248  012ED8  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 29249  012EDA  5B63               	subwfb	(___almod@dividend+3)& (0+255),f,b
 29250  012EDC                     l3060:
 29251                           
 29252                           ; BSR set to: 0
 29253                           
 29254                           ; BSR set to: 0
 29255  012EDC  90D8               	bcf	status,0,c
 29256  012EDE  3367               	rrcf	(___almod@divisor+3)& (0+255),f,b
 29257  012EE0  3366               	rrcf	(___almod@divisor+2)& (0+255),f,b
 29258  012EE2  3365               	rrcf	(___almod@divisor+1)& (0+255),f,b
 29259  012EE4  3364               	rrcf	___almod@divisor& (0+255),f,b
 29260                           
 29261                           ; BSR set to: 0
 29262  012EE6  2F68               	decfsz	___almod@counter& (0+255),f,b
 29263  012EE8  D7E7               	goto	u15280
 29264  012EEA                     l3061:
 29265                           
 29266                           ; BSR set to: 0
 29267                           
 29268                           ; BSR set to: 0
 29269                           
 29270                           ; BSR set to: 0
 29271  012EEA  5169               	movf	___almod@sign& (0+255),w,b
 29272  012EEC  B4D8               	btfsc	status,2,c
 29273  012EEE  D008               	goto	l3062
 29274                           
 29275                           ; BSR set to: 0
 29276  012EF0  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 29277  012EF2  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 29278  012EF4  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 29279  012EF6  6D60               	negf	___almod@dividend& (0+255),b
 29280  012EF8  0E00               	movlw	0
 29281  012EFA  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 29282  012EFC  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 29283  012EFE  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 29284  012F00                     l3062:
 29285                           
 29286                           ; BSR set to: 0
 29287                           
 29288                           ; BSR set to: 0
 29289  012F00  C060  F060         	movff	___almod@dividend,?___almod
 29290  012F04  C061  F061         	movff	___almod@dividend+1,?___almod+1
 29291  012F08  C062  F062         	movff	___almod@dividend+2,?___almod+2
 29292  012F0C  C063  F063         	movff	___almod@dividend+3,?___almod+3
 29293  012F10  0012               	return	
 29294  012F12                     __end_of___almod:
 29295                           	opt stack 0
 29296                           tblptru	equ	0xFF8
 29297                           tblptrh	equ	0xFF7
 29298                           tblptrl	equ	0xFF6
 29299                           tablat	equ	0xFF5
 29300                           prodh	equ	0xFF4
 29301                           prodl	equ	0xFF3
 29302                           intcon	equ	0xFF2
 29303                           postinc0	equ	0xFEE
 29304                           wreg	equ	0xFE8
 29305                           indf1	equ	0xFE7
 29306                           postinc1	equ	0xFE6
 29307                           postdec1	equ	0xFE5
 29308                           plusw1	equ	0xFE3
 29309                           fsr1h	equ	0xFE2
 29310                           fsr1l	equ	0xFE1
 29311                           indf2	equ	0xFDF
 29312                           postinc2	equ	0xFDE
 29313                           postdec2	equ	0xFDD
 29314                           plusw2	equ	0xFDB
 29315                           fsr2h	equ	0xFDA
 29316                           fsr2l	equ	0xFD9
 29317                           status	equ	0xFD8
 29318                           
 29319 ;; *************** function ___aldiv *****************
 29320 ;; Defined at:
 29321 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
 29322 ;; Parameters:    Size  Location     Type
 29323 ;;  dividend        4    0[BANK0 ] long 
 29324 ;;  divisor         4    4[BANK0 ] long 
 29325 ;; Auto vars:     Size  Location     Type
 29326 ;;  quotient        4   10[BANK0 ] long 
 29327 ;;  sign            1    9[BANK0 ] unsigned char 
 29328 ;;  counter         1    8[BANK0 ] unsigned char 
 29329 ;; Return value:  Size  Location     Type
 29330 ;;                  4    0[BANK0 ] long 
 29331 ;; Registers used:
 29332 ;;		wreg, status,2, status,0
 29333 ;; Tracked objects:
 29334 ;;		On entry : 0/0
 29335 ;;		On exit  : 0/0
 29336 ;;		Unchanged: 0/0
 29337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29338 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29339 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29341 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29342 ;;Total ram usage:       14 bytes
 29343 ;; Hardware stack levels used:    1
 29344 ;; Hardware stack levels required when called:   10
 29345 ;; This function calls:
 29346 ;;		Nothing
 29347 ;; This function is called by:
 29348 ;;		__display_itoa_long
 29349 ;; This function uses a non-reentrant model
 29350 ;;
 29351                           
 29352                           	psect	text117
 29353  0127C6                     __ptext117:
 29354                           	opt stack 0
 29355  0127C6                     ___aldiv:
 29356                           	opt stack 18
 29357                           
 29358                           ; BSR set to: 0
 29359                           ;incstack = 0
 29360  0127C6  0E00               	movlw	0
 29361  0127C8  0100               	movlb	0	; () banked
 29362  0127CA  6F69               	movwf	___aldiv@sign& (0+255),b
 29363                           
 29364                           ; BSR set to: 0
 29365  0127CC  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 29366  0127CE  D00A               	goto	l3040
 29367                           
 29368                           ; BSR set to: 0
 29369  0127D0  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
 29370  0127D2  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
 29371  0127D4  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
 29372  0127D6  6D64               	negf	___aldiv@divisor& (0+255),b
 29373  0127D8  0E00               	movlw	0
 29374  0127DA  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 29375  0127DC  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 29376  0127DE  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 29377                           
 29378                           ; BSR set to: 0
 29379  0127E0  0E01               	movlw	1
 29380  0127E2  6F69               	movwf	___aldiv@sign& (0+255),b
 29381  0127E4                     l3040:
 29382                           
 29383                           ; BSR set to: 0
 29384                           
 29385                           ; BSR set to: 0
 29386  0127E4  AF63               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 29387  0127E6  D00A               	goto	l3041
 29388                           
 29389                           ; BSR set to: 0
 29390  0127E8  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
 29391  0127EA  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
 29392  0127EC  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
 29393  0127EE  6D60               	negf	___aldiv@dividend& (0+255),b
 29394  0127F0  0E00               	movlw	0
 29395  0127F2  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 29396  0127F4  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 29397  0127F6  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 29398                           
 29399                           ; BSR set to: 0
 29400  0127F8  0E01               	movlw	1
 29401  0127FA  1B69               	xorwf	___aldiv@sign& (0+255),f,b
 29402  0127FC                     l3041:
 29403                           
 29404                           ; BSR set to: 0
 29405                           
 29406                           ; BSR set to: 0
 29407  0127FC  0E00               	movlw	0
 29408  0127FE  6F6A               	movwf	___aldiv@quotient& (0+255),b
 29409  012800  0E00               	movlw	0
 29410  012802  6F6B               	movwf	(___aldiv@quotient+1)& (0+255),b
 29411  012804  0E00               	movlw	0
 29412  012806  6F6C               	movwf	(___aldiv@quotient+2)& (0+255),b
 29413  012808  0E00               	movlw	0
 29414  01280A  6F6D               	movwf	(___aldiv@quotient+3)& (0+255),b
 29415                           
 29416                           ; BSR set to: 0
 29417  01280C  5164               	movf	___aldiv@divisor& (0+255),w,b
 29418  01280E  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 29419  012810  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 29420  012812  1167               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 29421  012814  B4D8               	btfsc	status,2,c
 29422  012816  D02A               	goto	l3048
 29423                           
 29424                           ; BSR set to: 0
 29425  012818  0E01               	movlw	1
 29426  01281A  6F68               	movwf	___aldiv@counter& (0+255),b
 29427  01281C  D006               	goto	l3043
 29428  01281E                     
 29429                           ; BSR set to: 0
 29430                           
 29431                           ; BSR set to: 0
 29432  01281E  90D8               	bcf	status,0,c
 29433  012820  3764               	rlcf	___aldiv@divisor& (0+255),f,b
 29434  012822  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 29435  012824  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 29436  012826  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 29437  012828  2B68               	incf	___aldiv@counter& (0+255),f,b
 29438  01282A                     l3043:
 29439                           
 29440                           ; BSR set to: 0
 29441                           
 29442                           ; BSR set to: 0
 29443  01282A  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 29444  01282C  D7F8               	goto	l3044
 29445  01282E                     u15220:
 29446                           
 29447                           ; BSR set to: 0
 29448                           
 29449                           ; BSR set to: 0
 29450                           
 29451                           ; BSR set to: 0
 29452  01282E  90D8               	bcf	status,0,c
 29453  012830  376A               	rlcf	___aldiv@quotient& (0+255),f,b
 29454  012832  376B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 29455  012834  376C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 29456  012836  376D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 29457                           
 29458                           ; BSR set to: 0
 29459  012838  5164               	movf	___aldiv@divisor& (0+255),w,b
 29460  01283A  5D60               	subwf	___aldiv@dividend& (0+255),w,b
 29461  01283C  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 29462  01283E  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 29463  012840  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 29464  012842  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 29465  012844  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 29466  012846  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 29467  012848  A0D8               	btfss	status,0,c
 29468  01284A  D009               	goto	l3047
 29469                           
 29470                           ; BSR set to: 0
 29471  01284C  5164               	movf	___aldiv@divisor& (0+255),w,b
 29472  01284E  5F60               	subwf	___aldiv@dividend& (0+255),f,b
 29473  012850  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 29474  012852  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 29475  012854  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 29476  012856  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 29477  012858  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 29478  01285A  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 29479                           
 29480                           ; BSR set to: 0
 29481  01285C  816A               	bsf	___aldiv@quotient& (0+255),0,b
 29482  01285E                     l3047:
 29483                           
 29484                           ; BSR set to: 0
 29485                           
 29486                           ; BSR set to: 0
 29487  01285E  90D8               	bcf	status,0,c
 29488  012860  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 29489  012862  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 29490  012864  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 29491  012866  3364               	rrcf	___aldiv@divisor& (0+255),f,b
 29492                           
 29493                           ; BSR set to: 0
 29494  012868  2F68               	decfsz	___aldiv@counter& (0+255),f,b
 29495  01286A  D7E1               	goto	u15220
 29496  01286C                     l3048:
 29497                           
 29498                           ; BSR set to: 0
 29499                           
 29500                           ; BSR set to: 0
 29501                           
 29502                           ; BSR set to: 0
 29503  01286C  5169               	movf	___aldiv@sign& (0+255),w,b
 29504  01286E  B4D8               	btfsc	status,2,c
 29505  012870  D008               	goto	l3049
 29506                           
 29507                           ; BSR set to: 0
 29508  012872  1F6D               	comf	(___aldiv@quotient+3)& (0+255),f,b
 29509  012874  1F6C               	comf	(___aldiv@quotient+2)& (0+255),f,b
 29510  012876  1F6B               	comf	(___aldiv@quotient+1)& (0+255),f,b
 29511  012878  6D6A               	negf	___aldiv@quotient& (0+255),b
 29512  01287A  0E00               	movlw	0
 29513  01287C  236B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 29514  01287E  236C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 29515  012880  236D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 29516  012882                     l3049:
 29517                           
 29518                           ; BSR set to: 0
 29519                           
 29520                           ; BSR set to: 0
 29521  012882  C06A  F060         	movff	___aldiv@quotient,?___aldiv
 29522  012886  C06B  F061         	movff	___aldiv@quotient+1,?___aldiv+1
 29523  01288A  C06C  F062         	movff	___aldiv@quotient+2,?___aldiv+2
 29524  01288E  C06D  F063         	movff	___aldiv@quotient+3,?___aldiv+3
 29525  012892  0012               	return	
 29526  012894                     __end_of___aldiv:
 29527                           	opt stack 0
 29528                           tblptru	equ	0xFF8
 29529                           tblptrh	equ	0xFF7
 29530                           tblptrl	equ	0xFF6
 29531                           tablat	equ	0xFF5
 29532                           prodh	equ	0xFF4
 29533                           prodl	equ	0xFF3
 29534                           intcon	equ	0xFF2
 29535                           postinc0	equ	0xFEE
 29536                           wreg	equ	0xFE8
 29537                           indf1	equ	0xFE7
 29538                           postinc1	equ	0xFE6
 29539                           postdec1	equ	0xFE5
 29540                           plusw1	equ	0xFE3
 29541                           fsr1h	equ	0xFE2
 29542                           fsr1l	equ	0xFE1
 29543                           indf2	equ	0xFDF
 29544                           postinc2	equ	0xFDE
 29545                           postdec2	equ	0xFDD
 29546                           plusw2	equ	0xFDB
 29547                           fsr2h	equ	0xFDA
 29548                           fsr2l	equ	0xFD9
 29549                           status	equ	0xFD8
 29550                           
 29551 ;; *************** function __display_clear *****************
 29552 ;; Defined at:
 29553 ;;		line 85 in file "display.c"
 29554 ;; Parameters:    Size  Location     Type
 29555 ;;		None
 29556 ;; Auto vars:     Size  Location     Type
 29557 ;;  col             1    3[BANK0 ] unsigned char 
 29558 ;;  row             1    2[BANK0 ] unsigned char 
 29559 ;; Return value:  Size  Location     Type
 29560 ;;                  1    wreg      void 
 29561 ;; Registers used:
 29562 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29563 ;; Tracked objects:
 29564 ;;		On entry : 0/0
 29565 ;;		On exit  : 0/0
 29566 ;;		Unchanged: 0/0
 29567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29569 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29570 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29571 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29572 ;;Total ram usage:        4 bytes
 29573 ;; Hardware stack levels used:    1
 29574 ;; Hardware stack levels required when called:   10
 29575 ;; This function calls:
 29576 ;;		Nothing
 29577 ;; This function is called by:
 29578 ;;		_display_prepare
 29579 ;; This function uses a non-reentrant model
 29580 ;;
 29581                           
 29582                           	psect	text118
 29583  014E1A                     __ptext118:
 29584                           	opt stack 0
 29585  014E1A                     __display_clear:
 29586                           	opt stack 19
 29587                           
 29588                           ;display.c: 87: uint8_t row;;display.c: 88: uint8_t col;;display.c: 89: for(row=0;row<4;
      +                          ++row)
 29589                           
 29590                           ; BSR set to: 0
 29591                           ;incstack = 0
 29592  014E1A  0E00               	movlw	0
 29593  014E1C  0100               	movlb	0	; () banked
 29594  014E1E  6F62               	movwf	__display_clear@row& (0+255),b
 29595  014E20                     l17095:
 29596                           
 29597                           ; BSR set to: 0
 29598  014E20  0E03               	movlw	3
 29599  014E22  6562               	cpfsgt	__display_clear@row& (0+255),b
 29600  014E24  D001               	goto	l1310
 29601  014E26  0012               	return	
 29602  014E28                     l1310:
 29603                           
 29604                           ; BSR set to: 0
 29605                           ;display.c: 90: {;display.c: 91: for(col=0;col<20;++col)
 29606                           
 29607                           ; BSR set to: 0
 29608  014E28  0E00               	movlw	0
 29609  014E2A  6F63               	movwf	__display_clear@col& (0+255),b
 29610  014E2C                     l17101:
 29611                           
 29612                           ; BSR set to: 0
 29613  014E2C  0E13               	movlw	19
 29614  014E2E  6563               	cpfsgt	__display_clear@col& (0+255),b
 29615  014E30  D001               	goto	l1312
 29616  014E32  D016               	goto	u16530
 29617  014E34                     l1312:
 29618                           
 29619                           ; BSR set to: 0
 29620                           ;display.c: 92: {;display.c: 93: display_content[row][col] = ' ';
 29621                           
 29622                           ; BSR set to: 0
 29623  014E34  5162               	movf	__display_clear@row& (0+255),w,b
 29624  014E36  0D14               	mullw	20
 29625  014E38  0E34               	movlw	low _display_content
 29626  014E3A  6F60               	movwf	??__display_clear& (0+255),b
 29627  014E3C  0E02               	movlw	high _display_content
 29628  014E3E  6F61               	movwf	(??__display_clear+1)& (0+255),b
 29629  014E40  50F3               	movf	prodl,w,c
 29630  014E42  2760               	addwf	??__display_clear& (0+255),f,b
 29631  014E44  50F4               	movf	prodh,w,c
 29632  014E46  2361               	addwfc	(??__display_clear+1)& (0+255),f,b
 29633  014E48  5163               	movf	__display_clear@col& (0+255),w,b
 29634  014E4A  0D01               	mullw	1
 29635  014E4C  50F3               	movf	prodl,w,c
 29636  014E4E  2560               	addwf	??__display_clear& (0+255),w,b
 29637  014E50  6ED9               	movwf	fsr2l,c
 29638  014E52  50F4               	movf	prodh,w,c
 29639  014E54  2161               	addwfc	(??__display_clear+1)& (0+255),w,b
 29640  014E56  6EDA               	movwf	fsr2h,c
 29641  014E58  0E20               	movlw	32
 29642  014E5A  6EDF               	movwf	indf2,c
 29643                           
 29644                           ; BSR set to: 0
 29645  014E5C  2B63               	incf	__display_clear@col& (0+255),f,b
 29646  014E5E  D7E6               	goto	l17101
 29647  014E60                     u16530:
 29648                           
 29649                           ; BSR set to: 0
 29650                           
 29651                           ; BSR set to: 0
 29652  014E60  2B62               	incf	__display_clear@row& (0+255),f,b
 29653  014E62  D7DE               	goto	l17095
 29654  014E64                     __end_of__display_clear:
 29655                           	opt stack 0
 29656                           tblptru	equ	0xFF8
 29657                           tblptrh	equ	0xFF7
 29658                           tblptrl	equ	0xFF6
 29659                           tablat	equ	0xFF5
 29660                           prodh	equ	0xFF4
 29661                           prodl	equ	0xFF3
 29662                           intcon	equ	0xFF2
 29663                           postinc0	equ	0xFEE
 29664                           wreg	equ	0xFE8
 29665                           indf1	equ	0xFE7
 29666                           postinc1	equ	0xFE6
 29667                           postdec1	equ	0xFE5
 29668                           plusw1	equ	0xFE3
 29669                           fsr1h	equ	0xFE2
 29670                           fsr1l	equ	0xFE1
 29671                           indf2	equ	0xFDF
 29672                           postinc2	equ	0xFDE
 29673                           postdec2	equ	0xFDD
 29674                           plusw2	equ	0xFDB
 29675                           fsr2h	equ	0xFDA
 29676                           fsr2l	equ	0xFD9
 29677                           status	equ	0xFD8
 29678                           
 29679 ;; *************** function _adc_read_temperature *****************
 29680 ;; Defined at:
 29681 ;;		line 44 in file "adc.c"
 29682 ;; Parameters:    Size  Location     Type
 29683 ;;		None
 29684 ;; Auto vars:     Size  Location     Type
 29685 ;;  temperature     4   43[BANK0 ] float 
 29686 ;;  adc_result      2   41[BANK0 ] unsigned int 
 29687 ;; Return value:  Size  Location     Type
 29688 ;;                  1    wreg      void 
 29689 ;; Registers used:
 29690 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29691 ;; Tracked objects:
 29692 ;;		On entry : 0/0
 29693 ;;		On exit  : 0/0
 29694 ;;		Unchanged: 0/0
 29695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29697 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29698 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29699 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29700 ;;Total ram usage:        8 bytes
 29701 ;; Hardware stack levels used:    1
 29702 ;; Hardware stack levels required when called:   11
 29703 ;; This function calls:
 29704 ;;		___fladd
 29705 ;;		___flmul
 29706 ;;		___flneg
 29707 ;;		___fltol
 29708 ;;		___xxtofl
 29709 ;; This function is called by:
 29710 ;;		_main
 29711 ;; This function uses a non-reentrant model
 29712 ;;
 29713                           
 29714                           	psect	text119
 29715  00F22E                     __ptext119:
 29716                           	opt stack 0
 29717  00F22E                     _adc_read_temperature:
 29718                           	opt stack 19
 29719                           
 29720                           ;adc.c: 46: uint16_t adc_result;;adc.c: 47: float temperature;;adc.c: 50: adc_result = A
      +                          DRESH;
 29721                           
 29722                           ; BSR set to: 0
 29723                           ;incstack = 0
 29724  00F22E  CFC4 F089          	movff	4036,adc_read_temperature@adc_result	;volatile
 29725  00F232  0100               	movlb	0	; () banked
 29726  00F234  6B8A               	clrf	(adc_read_temperature@adc_result+1)& (0+255),b
 29727                           
 29728                           ; BSR set to: 0
 29729                           ;adc.c: 51: adc_result <<= 8;
 29730  00F236  5189               	movf	adc_read_temperature@adc_result& (0+255),w,b
 29731  00F238  6F8A               	movwf	(adc_read_temperature@adc_result+1)& (0+255),b
 29732  00F23A  6B89               	clrf	adc_read_temperature@adc_result& (0+255),b
 29733                           
 29734                           ; BSR set to: 0
 29735                           ;adc.c: 52: adc_result |= ADRESL;
 29736  00F23C  50C3               	movf	4035,w,c	;volatile
 29737  00F23E  1389               	iorwf	adc_read_temperature@adc_result& (0+255),f,b
 29738                           
 29739                           ; BSR set to: 0
 29740                           ;adc.c: 55: params.temperature_adc_sum[params.temperature_source] += adc_result;
 29741  00F240  0102               	movlb	2	; () banked
 29742  00F242  511F               	movf	_params& (0+255),w,b
 29743  00F244  0D02               	mullw	2
 29744  00F246  0E20               	movlw	low (_params+1)
 29745  00F248  24F3               	addwf	prodl,w,c
 29746  00F24A  6ED9               	movwf	fsr2l,c
 29747  00F24C  0E02               	movlw	high (_params+1)
 29748  00F24E  20F4               	addwfc	prodh,w,c
 29749  00F250  6EDA               	movwf	fsr2h,c
 29750  00F252  0100               	movlb	0	; () banked
 29751  00F254  5189               	movf	adc_read_temperature@adc_result& (0+255),w,b
 29752  00F256  26DE               	addwf	postinc2,f,c
 29753  00F258  518A               	movf	(adc_read_temperature@adc_result+1)& (0+255),w,b
 29754  00F25A  22DD               	addwfc	postdec2,f,c
 29755                           
 29756                           ; BSR set to: 0
 29757                           ;adc.c: 56: ++params.temperature_count[params.temperature_source];
 29758  00F25C  0102               	movlb	2	; () banked
 29759  00F25E  511F               	movf	_params& (0+255),w,b
 29760  00F260  0D01               	mullw	1
 29761  00F262  0E24               	movlw	low (_params+5)
 29762  00F264  24F3               	addwf	prodl,w,c
 29763  00F266  6ED9               	movwf	fsr2l,c
 29764  00F268  0E02               	movlw	high (_params+5)
 29765  00F26A  20F4               	addwfc	prodh,w,c
 29766  00F26C  6EDA               	movwf	fsr2h,c
 29767  00F26E  2ADF               	incf	indf2,f,c
 29768                           
 29769                           ; BSR set to: 2
 29770                           ;adc.c: 59: ADCON0bits.GO = 1;
 29771  00F270  82C2               	bsf	4034,1,c	;volatile
 29772                           
 29773                           ; BSR set to: 2
 29774                           ;adc.c: 62: if(params.temperature_count[params.temperature_source]==8)
 29775  00F272  511F               	movf	_params& (0+255),w,b
 29776  00F274  0D01               	mullw	1
 29777  00F276  0E24               	movlw	low (_params+5)
 29778  00F278  24F3               	addwf	prodl,w,c
 29779  00F27A  6ED9               	movwf	fsr2l,c
 29780  00F27C  0E02               	movlw	high (_params+5)
 29781  00F27E  20F4               	addwfc	prodh,w,c
 29782  00F280  6EDA               	movwf	fsr2h,c
 29783  00F282  0E08               	movlw	8
 29784  00F284  18DE               	xorwf	postinc2,w,c
 29785  00F286  A4D8               	btfss	status,2,c
 29786  00F288  D0AF               	goto	l2840
 29787                           
 29788                           ; BSR set to: 2
 29789                           ;adc.c: 63: {;adc.c: 67: temperature = 21064.0 - (float) params.temperature_adc_sum[para
      +                          ms.temperature_source];
 29790  00F28A  511F               	movf	_params& (0+255),w,b
 29791  00F28C  0D02               	mullw	2
 29792  00F28E  0E20               	movlw	low (_params+1)
 29793  00F290  24F3               	addwf	prodl,w,c
 29794  00F292  6ED9               	movwf	fsr2l,c
 29795  00F294  0E02               	movlw	high (_params+1)
 29796  00F296  20F4               	addwfc	prodh,w,c
 29797  00F298  6EDA               	movwf	fsr2h,c
 29798  00F29A  CFDE F087          	movff	postinc2,??_adc_read_temperature
 29799  00F29E  CFDD F088          	movff	postdec2,??_adc_read_temperature+1
 29800  00F2A2  C087  F060         	movff	??_adc_read_temperature,___xxtofl@val
 29801  00F2A6  C088  F061         	movff	??_adc_read_temperature+1,___xxtofl@val+1
 29802  00F2AA  0100               	movlb	0	; () banked
 29803  00F2AC  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 29804  00F2AE  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 29805  00F2B0  0E00               	movlw	0
 29806  00F2B2  EC34  F081         	call	___xxtofl
 29807  00F2B6  C060  F06E         	movff	?___xxtofl,___flneg@f1
 29808  00F2BA  C061  F06F         	movff	?___xxtofl+1,___flneg@f1+1
 29809  00F2BE  C062  F070         	movff	?___xxtofl+2,___flneg@f1+2
 29810  00F2C2  C063  F071         	movff	?___xxtofl+3,___flneg@f1+3
 29811  00F2C6  ECE4  F0A9         	call	___flneg	;wreg free
 29812  00F2CA  C06E  F072         	movff	?___flneg,___fladd@b
 29813  00F2CE  C06F  F073         	movff	?___flneg+1,___fladd@b+1
 29814  00F2D2  C070  F074         	movff	?___flneg+2,___fladd@b+2
 29815  00F2D6  C071  F075         	movff	?___flneg+3,___fladd@b+3
 29816  00F2DA  0E00               	movlw	0
 29817  00F2DC  0100               	movlb	0	; () banked
 29818  00F2DE  6F76               	movwf	___fladd@a& (0+255),b
 29819  00F2E0  0E90               	movlw	144
 29820  00F2E2  6F77               	movwf	(___fladd@a+1)& (0+255),b
 29821  00F2E4  0EA4               	movlw	164
 29822  00F2E6  6F78               	movwf	(___fladd@a+2)& (0+255),b
 29823  00F2E8  0E46               	movlw	70
 29824  00F2EA  6F79               	movwf	(___fladd@a+3)& (0+255),b
 29825  00F2EC  ECC7  F067         	call	___fladd	;wreg free
 29826  00F2F0  C072  F08B         	movff	?___fladd,adc_read_temperature@temperature
 29827  00F2F4  C073  F08C         	movff	?___fladd+1,adc_read_temperature@temperature+1
 29828  00F2F8  C074  F08D         	movff	?___fladd+2,adc_read_temperature@temperature+2
 29829  00F2FC  C075  F08E         	movff	?___fladd+3,adc_read_temperature@temperature+3
 29830                           
 29831                           ;adc.c: 68: temperature *= 0.7405;
 29832  00F300  C08B  F06E         	movff	adc_read_temperature@temperature,___flmul@b
 29833  00F304  C08C  F06F         	movff	adc_read_temperature@temperature+1,___flmul@b+1
 29834  00F308  C08D  F070         	movff	adc_read_temperature@temperature+2,___flmul@b+2
 29835  00F30C  C08E  F071         	movff	adc_read_temperature@temperature+3,___flmul@b+3
 29836  00F310  0E68               	movlw	104
 29837  00F312  0100               	movlb	0	; () banked
 29838  00F314  6F72               	movwf	___flmul@a& (0+255),b
 29839  00F316  0E91               	movlw	145
 29840  00F318  6F73               	movwf	(___flmul@a+1)& (0+255),b
 29841  00F31A  0E3D               	movlw	61
 29842  00F31C  6F74               	movwf	(___flmul@a+2)& (0+255),b
 29843  00F31E  0E3F               	movlw	63
 29844  00F320  6F75               	movwf	(___flmul@a+3)& (0+255),b
 29845  00F322  EC1E  F066         	call	___flmul	;wreg free
 29846  00F326  C06E  F08B         	movff	?___flmul,adc_read_temperature@temperature
 29847  00F32A  C06F  F08C         	movff	?___flmul+1,adc_read_temperature@temperature+1
 29848  00F32E  C070  F08D         	movff	?___flmul+2,adc_read_temperature@temperature+2
 29849  00F332  C071  F08E         	movff	?___flmul+3,adc_read_temperature@temperature+3
 29850                           
 29851                           ;adc.c: 71: os.temperature[params.temperature_source] = (int16_t) temperature;
 29852  00F336  C08B  F060         	movff	adc_read_temperature@temperature,___fltol@f1
 29853  00F33A  C08C  F061         	movff	adc_read_temperature@temperature+1,___fltol@f1+1
 29854  00F33E  C08D  F062         	movff	adc_read_temperature@temperature+2,___fltol@f1+2
 29855  00F342  C08E  F063         	movff	adc_read_temperature@temperature+3,___fltol@f1+3
 29856  00F346  EC8A  F090         	call	___fltol	;wreg free
 29857  00F34A  0102               	movlb	2	; () banked
 29858  00F34C  511F               	movf	_params& (0+255),w,b
 29859  00F34E  0D02               	mullw	2
 29860  00F350  0E98               	movlw	low (_os+39)
 29861  00F352  24F3               	addwf	prodl,w,c
 29862  00F354  6ED9               	movwf	fsr2l,c
 29863  00F356  0E01               	movlw	high (_os+39)
 29864  00F358  20F4               	addwfc	prodh,w,c
 29865  00F35A  6EDA               	movwf	fsr2h,c
 29866  00F35C  0100               	movlb	0	; () banked
 29867  00F35E  C060  FFDE         	movff	?___fltol,postinc2
 29868  00F362  C061  FFDD         	movff	?___fltol+1,postdec2
 29869                           
 29870                           ; BSR set to: 0
 29871                           ;adc.c: 74: params.temperature_adc_sum[params.temperature_source] = 0;
 29872  00F366  0102               	movlb	2	; () banked
 29873  00F368  511F               	movf	_params& (0+255),w,b
 29874  00F36A  0D02               	mullw	2
 29875  00F36C  0E20               	movlw	low (_params+1)
 29876  00F36E  24F3               	addwf	prodl,w,c
 29877  00F370  6ED9               	movwf	fsr2l,c
 29878  00F372  0E02               	movlw	high (_params+1)
 29879  00F374  20F4               	addwfc	prodh,w,c
 29880  00F376  6EDA               	movwf	fsr2h,c
 29881  00F378  0E00               	movlw	0
 29882  00F37A  6EDE               	movwf	postinc2,c
 29883  00F37C  0E00               	movlw	0
 29884  00F37E  6EDD               	movwf	postdec2,c
 29885                           
 29886                           ; BSR set to: 2
 29887                           ;adc.c: 75: params.temperature_count[params.temperature_source] = 0;
 29888  00F380  511F               	movf	_params& (0+255),w,b
 29889  00F382  0D01               	mullw	1
 29890  00F384  0E24               	movlw	low (_params+5)
 29891  00F386  24F3               	addwf	prodl,w,c
 29892  00F388  6ED9               	movwf	fsr2l,c
 29893  00F38A  0E02               	movlw	high (_params+5)
 29894  00F38C  20F4               	addwfc	prodh,w,c
 29895  00F38E  6EDA               	movwf	fsr2h,c
 29896  00F390  0E00               	movlw	0
 29897  00F392  6EDF               	movwf	indf2,c
 29898                           
 29899                           ; BSR set to: 2
 29900                           ;adc.c: 78: if(os.fan_on)
 29901  00F394  0101               	movlb	1	; () banked
 29902  00F396  519F               	movf	(_os+46)& (0+255),w,b	;volatile
 29903  00F398  B4D8               	btfsc	status,2,c
 29904  00F39A  D013               	goto	l2837
 29905                           
 29906                           ; BSR set to: 1
 29907                           ;adc.c: 79: {;adc.c: 80: if((os.temperature[TEMPERATURE_SOURCE_INTERNAL]<2400) && (os.te
      +                          mperature[TEMPERATURE_SOURCE_EXTERNAL]<2400))
 29908  00F39C  BF99               	btfsc	(_os+40)& (0+255),7,b	;volatile
 29909  00F39E  D006               	goto	u18160
 29910  00F3A0  0E60               	movlw	96
 29911  00F3A2  5D98               	subwf	(_os+39)& (0+255),w,b	;volatile
 29912  00F3A4  0E09               	movlw	9
 29913  00F3A6  5999               	subwfb	(_os+40)& (0+255),w,b	;volatile
 29914  00F3A8  B0D8               	btfsc	status,0,c
 29915  00F3AA  D01E               	goto	l2840
 29916  00F3AC                     u18160:
 29917                           
 29918                           ; BSR set to: 1
 29919  00F3AC  BF9B               	btfsc	(_os+42)& (0+255),7,b	;volatile
 29920  00F3AE  D006               	goto	u18170
 29921  00F3B0  0E60               	movlw	96
 29922  00F3B2  5D9A               	subwf	(_os+41)& (0+255),w,b	;volatile
 29923  00F3B4  0E09               	movlw	9
 29924  00F3B6  599B               	subwfb	(_os+42)& (0+255),w,b	;volatile
 29925  00F3B8  B0D8               	btfsc	status,0,c
 29926  00F3BA  D016               	goto	l2840
 29927  00F3BC                     u18170:
 29928                           
 29929                           ; BSR set to: 1
 29930                           ;adc.c: 81: {;adc.c: 82: LATCbits.LC6 = 0;
 29931  00F3BC  9C8B               	bcf	3979,6,c	;volatile
 29932                           
 29933                           ; BSR set to: 1
 29934                           ;adc.c: 83: os.fan_on = 0;
 29935  00F3BE  0E00               	movlw	0
 29936  00F3C0  D012               	goto	L39
 29937  00F3C2                     l2837:
 29938                           
 29939                           ; BSR set to: 1
 29940                           ;adc.c: 86: else;adc.c: 87: {;adc.c: 88: if((os.temperature[TEMPERATURE_SOURCE_INTERNAL]
      +                          >2500) || (os.temperature[TEMPERATURE_SOURCE_EXTERNAL]>2500))
 29941                           
 29942                           ; BSR set to: 1
 29943  00F3C2  BF99               	btfsc	(_os+40)& (0+255),7,b	;volatile
 29944  00F3C4  D006               	goto	u18180
 29945  00F3C6  0EC5               	movlw	197
 29946  00F3C8  5D98               	subwf	(_os+39)& (0+255),w,b	;volatile
 29947  00F3CA  0E09               	movlw	9
 29948  00F3CC  5999               	subwfb	(_os+40)& (0+255),w,b	;volatile
 29949  00F3CE  B0D8               	btfsc	status,0,c
 29950  00F3D0  D008               	goto	u18190
 29951  00F3D2                     u18180:
 29952                           
 29953                           ; BSR set to: 1
 29954  00F3D2  BF9B               	btfsc	(_os+42)& (0+255),7,b	;volatile
 29955  00F3D4  D009               	goto	l2840
 29956  00F3D6  0EC5               	movlw	197
 29957  00F3D8  5D9A               	subwf	(_os+41)& (0+255),w,b	;volatile
 29958  00F3DA  0E09               	movlw	9
 29959  00F3DC  599B               	subwfb	(_os+42)& (0+255),w,b	;volatile
 29960  00F3DE  A0D8               	btfss	status,0,c
 29961  00F3E0  D003               	goto	l2840
 29962  00F3E2                     u18190:
 29963                           
 29964                           ; BSR set to: 1
 29965                           ;adc.c: 89: {;adc.c: 90: LATCbits.LC6 = 1;
 29966  00F3E2  8C8B               	bsf	3979,6,c	;volatile
 29967                           
 29968                           ; BSR set to: 1
 29969                           ;adc.c: 91: os.fan_on = 1;
 29970  00F3E4  0E01               	movlw	1
 29971  00F3E6                     L39:
 29972  00F3E6  6F9F               	movwf	(_os+46)& (0+255),b	;volatile
 29973  00F3E8                     l2840:
 29974                           
 29975                           ;adc.c: 92: };adc.c: 93: };adc.c: 94: };adc.c: 97: if(params.temperature_source==TEMPERA
      +                          TURE_SOURCE_INTERNAL)
 29976                           
 29977                           ; BSR set to: 1
 29978                           
 29979                           ; BSR set to: 1
 29980  00F3E8  0102               	movlb	2	; () banked
 29981  00F3EA  511F               	movf	_params& (0+255),w,b
 29982  00F3EC  A4D8               	btfss	status,2,c
 29983  00F3EE  D007               	goto	l2843
 29984                           
 29985                           ; BSR set to: 2
 29986                           ;adc.c: 98: {;adc.c: 99: ADCON0bits.CHS = 0b1011;
 29987  00F3F0  50C2               	movf	4034,w,c	;volatile
 29988  00F3F2  0BC3               	andlw	-61
 29989  00F3F4  092C               	iorlw	44
 29990  00F3F6  6EC2               	movwf	4034,c	;volatile
 29991                           
 29992                           ;adc.c: 100: params.temperature_source = TEMPERATURE_SOURCE_EXTERNAL;
 29993  00F3F8  0E01               	movlw	1
 29994  00F3FA  6F1F               	movwf	_params& (0+255),b
 29995                           
 29996                           ;adc.c: 101: }
 29997  00F3FC  0012               	return	
 29998  00F3FE                     l2843:
 29999                           
 30000                           ; BSR set to: 2
 30001                           ;adc.c: 102: else;adc.c: 103: {;adc.c: 104: ADCON0bits.CHS = 0b1001;
 30002                           
 30003                           ; BSR set to: 2
 30004  00F3FE  50C2               	movf	4034,w,c	;volatile
 30005  00F400  0BC3               	andlw	-61
 30006  00F402  0924               	iorlw	36
 30007  00F404  6EC2               	movwf	4034,c	;volatile
 30008                           
 30009                           ;adc.c: 105: params.temperature_source = TEMPERATURE_SOURCE_INTERNAL;
 30010  00F406  0E00               	movlw	0
 30011  00F408  6F1F               	movwf	_params& (0+255),b
 30012  00F40A  0012               	return	
 30013  00F40C                     __end_of_adc_read_temperature:
 30014                           	opt stack 0
 30015                           tblptru	equ	0xFF8
 30016                           tblptrh	equ	0xFF7
 30017                           tblptrl	equ	0xFF6
 30018                           tablat	equ	0xFF5
 30019                           prodh	equ	0xFF4
 30020                           prodl	equ	0xFF3
 30021                           intcon	equ	0xFF2
 30022                           postinc0	equ	0xFEE
 30023                           wreg	equ	0xFE8
 30024                           indf1	equ	0xFE7
 30025                           postinc1	equ	0xFE6
 30026                           postdec1	equ	0xFE5
 30027                           plusw1	equ	0xFE3
 30028                           fsr1h	equ	0xFE2
 30029                           fsr1l	equ	0xFE1
 30030                           indf2	equ	0xFDF
 30031                           postinc2	equ	0xFDE
 30032                           postdec2	equ	0xFDD
 30033                           plusw2	equ	0xFDB
 30034                           fsr2h	equ	0xFDA
 30035                           fsr2l	equ	0xFD9
 30036                           status	equ	0xFD8
 30037                           
 30038 ;; *************** function ___flneg *****************
 30039 ;; Defined at:
 30040 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
 30041 ;; Parameters:    Size  Location     Type
 30042 ;;  f1              4   14[BANK0 ] void 
 30043 ;; Auto vars:     Size  Location     Type
 30044 ;;		None
 30045 ;; Return value:  Size  Location     Type
 30046 ;;                  4   14[BANK0 ] void 
 30047 ;; Registers used:
 30048 ;;		wreg, status,2, status,0
 30049 ;; Tracked objects:
 30050 ;;		On entry : 0/0
 30051 ;;		On exit  : 0/0
 30052 ;;		Unchanged: 0/0
 30053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30054 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30057 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30058 ;;Total ram usage:        4 bytes
 30059 ;; Hardware stack levels used:    1
 30060 ;; Hardware stack levels required when called:   10
 30061 ;; This function calls:
 30062 ;;		Nothing
 30063 ;; This function is called by:
 30064 ;;		_adc_read_temperature
 30065 ;; This function uses a non-reentrant model
 30066 ;;
 30067                           
 30068                           	psect	text120
 30069  0153C8                     __ptext120:
 30070                           	opt stack 0
 30071  0153C8                     ___flneg:
 30072                           	opt stack 19
 30073                           
 30074                           ; BSR set to: 2
 30075                           ;incstack = 0
 30076  0153C8  0100               	movlb	0	; () banked
 30077  0153CA  516E               	movf	___flneg@f1& (0+255),w,b
 30078  0153CC  116F               	iorwf	(___flneg@f1+1)& (0+255),w,b
 30079  0153CE  1170               	iorwf	(___flneg@f1+2)& (0+255),w,b
 30080  0153D0  1171               	iorwf	(___flneg@f1+3)& (0+255),w,b
 30081  0153D2  B4D8               	btfsc	status,2,c
 30082  0153D4  D008               	goto	l3236
 30083                           
 30084                           ; BSR set to: 0
 30085  0153D6  0E00               	movlw	0
 30086  0153D8  1B6E               	xorwf	___flneg@f1& (0+255),f,b
 30087  0153DA  0E00               	movlw	0
 30088  0153DC  1B6F               	xorwf	(___flneg@f1+1)& (0+255),f,b
 30089  0153DE  0E00               	movlw	0
 30090  0153E0  1B70               	xorwf	(___flneg@f1+2)& (0+255),f,b
 30091  0153E2  0E80               	movlw	128
 30092  0153E4  1B71               	xorwf	(___flneg@f1+3)& (0+255),f,b
 30093  0153E6                     l3236:
 30094                           
 30095                           ; BSR set to: 0
 30096                           
 30097                           ; BSR set to: 0
 30098  0153E6  C06E  F06E         	movff	___flneg@f1,?___flneg
 30099  0153EA  C06F  F06F         	movff	___flneg@f1+1,?___flneg+1
 30100  0153EE  C070  F070         	movff	___flneg@f1+2,?___flneg+2
 30101  0153F2  C071  F071         	movff	___flneg@f1+3,?___flneg+3
 30102  0153F6  0012               	return	
 30103  0153F8                     __end_of___flneg:
 30104                           	opt stack 0
 30105                           tblptru	equ	0xFF8
 30106                           tblptrh	equ	0xFF7
 30107                           tblptrl	equ	0xFF6
 30108                           tablat	equ	0xFF5
 30109                           prodh	equ	0xFF4
 30110                           prodl	equ	0xFF3
 30111                           intcon	equ	0xFF2
 30112                           postinc0	equ	0xFEE
 30113                           wreg	equ	0xFE8
 30114                           indf1	equ	0xFE7
 30115                           postinc1	equ	0xFE6
 30116                           postdec1	equ	0xFE5
 30117                           plusw1	equ	0xFE3
 30118                           fsr1h	equ	0xFE2
 30119                           fsr1l	equ	0xFE1
 30120                           indf2	equ	0xFDF
 30121                           postinc2	equ	0xFDE
 30122                           postdec2	equ	0xFDD
 30123                           plusw2	equ	0xFDB
 30124                           fsr2h	equ	0xFDA
 30125                           fsr2l	equ	0xFD9
 30126                           status	equ	0xFD8
 30127                           
 30128 ;; *************** function ___fladd *****************
 30129 ;; Defined at:
 30130 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
 30131 ;; Parameters:    Size  Location     Type
 30132 ;;  b               4   18[BANK0 ] void 
 30133 ;;  a               4   22[BANK0 ] void 
 30134 ;; Auto vars:     Size  Location     Type
 30135 ;;  grs             1   37[BANK0 ] unsigned char 
 30136 ;;  bexp            1   36[BANK0 ] unsigned char 
 30137 ;;  aexp            1   35[BANK0 ] unsigned char 
 30138 ;;  signs           1   34[BANK0 ] unsigned char 
 30139 ;; Return value:  Size  Location     Type
 30140 ;;                  4   18[BANK0 ] unsigned char 
 30141 ;; Registers used:
 30142 ;;		wreg, status,2, status,0
 30143 ;; Tracked objects:
 30144 ;;		On entry : 0/0
 30145 ;;		On exit  : 0/0
 30146 ;;		Unchanged: 0/0
 30147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30148 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30149 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30150 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30151 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30152 ;;Total ram usage:       20 bytes
 30153 ;; Hardware stack levels used:    1
 30154 ;; Hardware stack levels required when called:   10
 30155 ;; This function calls:
 30156 ;;		Nothing
 30157 ;; This function is called by:
 30158 ;;		_motor_divide_jump_to_nearest
 30159 ;;		_adc_read_temperature
 30160 ;; This function uses a non-reentrant model
 30161 ;;
 30162                           
 30163                           	psect	text121
 30164  00CF8E                     __ptext121:
 30165                           	opt stack 0
 30166  00CF8E                     ___fladd:
 30167                           	opt stack 18
 30168                           
 30169                           ; BSR set to: 0
 30170                           ;incstack = 0
 30171  00CF8E  0100               	movlb	0	; () banked
 30172  00CF90  5175               	movf	(___fladd@b+3)& (0+255),w,b
 30173  00CF92  0B80               	andlw	128
 30174  00CF94  6F82               	movwf	___fladd@signs& (0+255),b
 30175  00CF96  5175               	movf	(___fladd@b+3)& (0+255),w,b
 30176  00CF98  2575               	addwf	(___fladd@b+3)& (0+255),w,b
 30177  00CF9A  6F84               	movwf	___fladd@bexp& (0+255),b
 30178                           
 30179                           ; BSR set to: 0
 30180  00CF9C  BF74               	btfsc	(___fladd@b+2)& (0+255),7,b
 30181                           
 30182                           ; BSR set to: 0
 30183  00CF9E  8184               	bsf	___fladd@bexp& (0+255),0,b
 30184                           
 30185                           ; BSR set to: 0
 30186                           
 30187                           ; BSR set to: 0
 30188  00CFA0  5184               	movf	___fladd@bexp& (0+255),w,b
 30189  00CFA2  B4D8               	btfsc	status,2,c
 30190  00CFA4  D00D               	goto	l3476
 30191                           
 30192                           ; BSR set to: 0
 30193  00CFA6  2984               	incf	___fladd@bexp& (0+255),w,b
 30194  00CFA8  A4D8               	btfss	status,2,c
 30195  00CFAA  D008               	goto	l3477
 30196                           
 30197                           ; BSR set to: 0
 30198  00CFAC  0E00               	movlw	0
 30199  00CFAE  6F72               	movwf	___fladd@b& (0+255),b
 30200  00CFB0  0E00               	movlw	0
 30201  00CFB2  6F73               	movwf	(___fladd@b+1)& (0+255),b
 30202  00CFB4  0E00               	movlw	0
 30203  00CFB6  6F74               	movwf	(___fladd@b+2)& (0+255),b
 30204  00CFB8  0E00               	movlw	0
 30205  00CFBA  6F75               	movwf	(___fladd@b+3)& (0+255),b
 30206  00CFBC                     l3477:
 30207                           
 30208                           ; BSR set to: 0
 30209                           
 30210                           ; BSR set to: 0
 30211  00CFBC  8F74               	bsf	(___fladd@b+2)& (0+255),7,b
 30212  00CFBE  D006               	goto	L40
 30213  00CFC0                     l3476:
 30214                           
 30215                           ; BSR set to: 0
 30216                           
 30217                           ; BSR set to: 0
 30218  00CFC0  0E00               	movlw	0
 30219  00CFC2  6F72               	movwf	___fladd@b& (0+255),b
 30220  00CFC4  0E00               	movlw	0
 30221  00CFC6  6F73               	movwf	(___fladd@b+1)& (0+255),b
 30222  00CFC8  0E00               	movlw	0
 30223  00CFCA  6F74               	movwf	(___fladd@b+2)& (0+255),b
 30224  00CFCC                     L40:
 30225  00CFCC  0E00               	movlw	0
 30226  00CFCE  6F75               	movwf	(___fladd@b+3)& (0+255),b
 30227                           
 30228                           ; BSR set to: 0
 30229                           
 30230                           ; BSR set to: 0
 30231  00CFD0  5179               	movf	(___fladd@a+3)& (0+255),w,b
 30232  00CFD2  0B80               	andlw	128
 30233  00CFD4  6F83               	movwf	___fladd@aexp& (0+255),b
 30234                           
 30235                           ; BSR set to: 0
 30236  00CFD6  5182               	movf	___fladd@signs& (0+255),w,b
 30237  00CFD8  1983               	xorwf	___fladd@aexp& (0+255),w,b
 30238  00CFDA  A4D8               	btfss	status,2,c
 30239                           
 30240                           ; BSR set to: 0
 30241  00CFDC  8D82               	bsf	___fladd@signs& (0+255),6,b
 30242                           
 30243                           ; BSR set to: 0
 30244                           
 30245                           ; BSR set to: 0
 30246  00CFDE  5179               	movf	(___fladd@a+3)& (0+255),w,b
 30247  00CFE0  2579               	addwf	(___fladd@a+3)& (0+255),w,b
 30248  00CFE2  6F83               	movwf	___fladd@aexp& (0+255),b
 30249                           
 30250                           ; BSR set to: 0
 30251  00CFE4  BF78               	btfsc	(___fladd@a+2)& (0+255),7,b
 30252                           
 30253                           ; BSR set to: 0
 30254  00CFE6  8183               	bsf	___fladd@aexp& (0+255),0,b
 30255                           
 30256                           ; BSR set to: 0
 30257                           
 30258                           ; BSR set to: 0
 30259  00CFE8  5183               	movf	___fladd@aexp& (0+255),w,b
 30260  00CFEA  B4D8               	btfsc	status,2,c
 30261  00CFEC  D00D               	goto	l3481
 30262                           
 30263                           ; BSR set to: 0
 30264  00CFEE  2983               	incf	___fladd@aexp& (0+255),w,b
 30265  00CFF0  A4D8               	btfss	status,2,c
 30266  00CFF2  D008               	goto	l3482
 30267                           
 30268                           ; BSR set to: 0
 30269  00CFF4  0E00               	movlw	0
 30270  00CFF6  6F76               	movwf	___fladd@a& (0+255),b
 30271  00CFF8  0E00               	movlw	0
 30272  00CFFA  6F77               	movwf	(___fladd@a+1)& (0+255),b
 30273  00CFFC  0E00               	movlw	0
 30274  00CFFE  6F78               	movwf	(___fladd@a+2)& (0+255),b
 30275  00D000  0E00               	movlw	0
 30276  00D002  6F79               	movwf	(___fladd@a+3)& (0+255),b
 30277  00D004                     l3482:
 30278                           
 30279                           ; BSR set to: 0
 30280                           
 30281                           ; BSR set to: 0
 30282  00D004  8F78               	bsf	(___fladd@a+2)& (0+255),7,b
 30283  00D006  D006               	goto	L41
 30284  00D008                     l3481:
 30285                           
 30286                           ; BSR set to: 0
 30287                           
 30288                           ; BSR set to: 0
 30289  00D008  0E00               	movlw	0
 30290  00D00A  6F76               	movwf	___fladd@a& (0+255),b
 30291  00D00C  0E00               	movlw	0
 30292  00D00E  6F77               	movwf	(___fladd@a+1)& (0+255),b
 30293  00D010  0E00               	movlw	0
 30294  00D012  6F78               	movwf	(___fladd@a+2)& (0+255),b
 30295  00D014                     L41:
 30296  00D014  0E00               	movlw	0
 30297  00D016  6F79               	movwf	(___fladd@a+3)& (0+255),b
 30298                           
 30299                           ; BSR set to: 0
 30300                           
 30301                           ; BSR set to: 0
 30302  00D018  5184               	movf	___fladd@bexp& (0+255),w,b
 30303  00D01A  5D83               	subwf	___fladd@aexp& (0+255),w,b
 30304  00D01C  B0D8               	btfsc	status,0,c
 30305  00D01E  D022               	goto	l3484
 30306                           
 30307                           ; BSR set to: 0
 30308  00D020  AD82               	btfss	___fladd@signs& (0+255),6,b
 30309  00D022  D002               	goto	l3485
 30310                           
 30311                           ; BSR set to: 0
 30312  00D024  0E80               	movlw	128
 30313  00D026  1B82               	xorwf	___fladd@signs& (0+255),f,b
 30314  00D028                     l3485:
 30315                           
 30316                           ; BSR set to: 0
 30317                           
 30318                           ; BSR set to: 0
 30319  00D028  C084  F085         	movff	___fladd@bexp,___fladd@grs
 30320                           
 30321                           ; BSR set to: 0
 30322  00D02C  C083  F084         	movff	___fladd@aexp,___fladd@bexp
 30323                           
 30324                           ; BSR set to: 0
 30325  00D030  C085  F083         	movff	___fladd@grs,___fladd@aexp
 30326                           
 30327                           ; BSR set to: 0
 30328  00D034  C072  F085         	movff	___fladd@b,___fladd@grs
 30329                           
 30330                           ; BSR set to: 0
 30331  00D038  C076  F072         	movff	___fladd@a,___fladd@b
 30332                           
 30333                           ; BSR set to: 0
 30334  00D03C  C085  F076         	movff	___fladd@grs,___fladd@a
 30335                           
 30336                           ; BSR set to: 0
 30337  00D040  C073  F085         	movff	___fladd@b+1,___fladd@grs
 30338                           
 30339                           ; BSR set to: 0
 30340  00D044  C077  F073         	movff	___fladd@a+1,___fladd@b+1
 30341                           
 30342                           ; BSR set to: 0
 30343  00D048  C085  F077         	movff	___fladd@grs,___fladd@a+1
 30344                           
 30345                           ; BSR set to: 0
 30346  00D04C  C074  F085         	movff	___fladd@b+2,___fladd@grs
 30347                           
 30348                           ; BSR set to: 0
 30349  00D050  C078  F074         	movff	___fladd@a+2,___fladd@b+2
 30350                           
 30351                           ; BSR set to: 0
 30352  00D054  C085  F078         	movff	___fladd@grs,___fladd@a+2
 30353                           
 30354                           ; BSR set to: 0
 30355  00D058  C075  F085         	movff	___fladd@b+3,___fladd@grs
 30356                           
 30357                           ; BSR set to: 0
 30358  00D05C  C079  F075         	movff	___fladd@a+3,___fladd@b+3
 30359                           
 30360                           ; BSR set to: 0
 30361  00D060  C085  F079         	movff	___fladd@grs,___fladd@a+3
 30362  00D064                     l3484:
 30363                           
 30364                           ; BSR set to: 0
 30365                           
 30366                           ; BSR set to: 0
 30367  00D064  0E00               	movlw	0
 30368  00D066  6F85               	movwf	___fladd@grs& (0+255),b
 30369                           
 30370                           ; BSR set to: 0
 30371  00D068  5184               	movf	___fladd@bexp& (0+255),w,b
 30372  00D06A  6F7A               	movwf	??___fladd& (0+255),b
 30373  00D06C  6B7B               	clrf	(??___fladd+1)& (0+255),b
 30374  00D06E  1F7A               	comf	??___fladd& (0+255),f,b
 30375  00D070  1F7B               	comf	(??___fladd+1)& (0+255),f,b
 30376  00D072  4B7A               	infsnz	??___fladd& (0+255),f,b
 30377  00D074  2B7B               	incf	(??___fladd+1)& (0+255),f,b
 30378  00D076  5183               	movf	___fladd@aexp& (0+255),w,b
 30379  00D078  6F7C               	movwf	(??___fladd+2)& (0+255),b
 30380  00D07A  6B7D               	clrf	(??___fladd+3)& (0+255),b
 30381  00D07C  517A               	movf	??___fladd& (0+255),w,b
 30382  00D07E  277C               	addwf	(??___fladd+2)& (0+255),f,b
 30383  00D080  517B               	movf	(??___fladd+1)& (0+255),w,b
 30384  00D082  237D               	addwfc	(??___fladd+3)& (0+255),f,b
 30385  00D084  BF7D               	btfsc	(??___fladd+3)& (0+255),7,b
 30386  00D086  D02C               	goto	l3488
 30387  00D088  517D               	movf	(??___fladd+3)& (0+255),w,b
 30388  00D08A  E104               	bnz	u15400
 30389  00D08C  0E1A               	movlw	26
 30390  00D08E  5D7C               	subwf	(??___fladd+2)& (0+255),w,b
 30391  00D090  A0D8               	btfss	status,0,c
 30392  00D092  D026               	goto	l3488
 30393  00D094                     u15400:
 30394                           
 30395                           ; BSR set to: 0
 30396  00D094  5172               	movf	___fladd@b& (0+255),w,b
 30397  00D096  1173               	iorwf	(___fladd@b+1)& (0+255),w,b
 30398  00D098  1174               	iorwf	(___fladd@b+2)& (0+255),w,b
 30399  00D09A  1175               	iorwf	(___fladd@b+3)& (0+255),w,b
 30400  00D09C  B4D8               	btfsc	status,2,c
 30401  00D09E  D002               	goto	u15410
 30402  00D0A0  0E01               	movlw	1
 30403  00D0A2  D001               	goto	u15420
 30404  00D0A4                     u15410:
 30405  00D0A4  0E00               	movlw	0
 30406  00D0A6                     u15420:
 30407  00D0A6  6F85               	movwf	___fladd@grs& (0+255),b
 30408                           
 30409                           ; BSR set to: 0
 30410  00D0A8  0E00               	movlw	0
 30411  00D0AA  6F72               	movwf	___fladd@b& (0+255),b
 30412  00D0AC  0E00               	movlw	0
 30413  00D0AE  6F73               	movwf	(___fladd@b+1)& (0+255),b
 30414  00D0B0  0E00               	movlw	0
 30415  00D0B2  6F74               	movwf	(___fladd@b+2)& (0+255),b
 30416  00D0B4  0E00               	movlw	0
 30417  00D0B6  6F75               	movwf	(___fladd@b+3)& (0+255),b
 30418                           
 30419                           ; BSR set to: 0
 30420  00D0B8  C083  F084         	movff	___fladd@aexp,___fladd@bexp
 30421  00D0BC  D015               	goto	u15450
 30422  00D0BE                     l3489:
 30423                           
 30424                           ; BSR set to: 0
 30425  00D0BE  A185               	btfss	___fladd@grs& (0+255),0,b
 30426  00D0C0  D005               	goto	l3490
 30427                           
 30428                           ; BSR set to: 0
 30429  00D0C2  90D8               	bcf	status,0,c
 30430  00D0C4  3185               	rrcf	___fladd@grs& (0+255),w,b
 30431  00D0C6  0901               	iorlw	1
 30432  00D0C8  6F85               	movwf	___fladd@grs& (0+255),b
 30433  00D0CA  D002               	goto	l3491
 30434  00D0CC                     l3490:
 30435                           
 30436                           ; BSR set to: 0
 30437                           
 30438                           ; BSR set to: 0
 30439  00D0CC  90D8               	bcf	status,0,c
 30440  00D0CE  3385               	rrcf	___fladd@grs& (0+255),f,b
 30441  00D0D0                     l3491:
 30442                           
 30443                           ; BSR set to: 0
 30444                           
 30445                           ; BSR set to: 0
 30446  00D0D0  B172               	btfsc	___fladd@b& (0+255),0,b
 30447                           
 30448                           ; BSR set to: 0
 30449  00D0D2  8F85               	bsf	___fladd@grs& (0+255),7,b
 30450                           
 30451                           ; BSR set to: 0
 30452                           
 30453                           ; BSR set to: 0
 30454  00D0D4  3575               	rlcf	(___fladd@b+3)& (0+255),w,b
 30455  00D0D6  3375               	rrcf	(___fladd@b+3)& (0+255),f,b
 30456  00D0D8  3374               	rrcf	(___fladd@b+2)& (0+255),f,b
 30457  00D0DA  3373               	rrcf	(___fladd@b+1)& (0+255),f,b
 30458  00D0DC  3372               	rrcf	___fladd@b& (0+255),f,b
 30459                           
 30460                           ; BSR set to: 0
 30461  00D0DE  2B84               	incf	___fladd@bexp& (0+255),f,b
 30462  00D0E0                     l3488:
 30463                           
 30464                           ; BSR set to: 0
 30465  00D0E0  5183               	movf	___fladd@aexp& (0+255),w,b
 30466  00D0E2  5D84               	subwf	___fladd@bexp& (0+255),w,b
 30467  00D0E4  A0D8               	btfss	status,0,c
 30468  00D0E6  D7EB               	goto	l3489
 30469  00D0E8                     u15450:
 30470                           
 30471                           ; BSR set to: 0
 30472                           
 30473                           ; BSR set to: 0
 30474  00D0E8  BD82               	btfsc	___fladd@signs& (0+255),6,b
 30475  00D0EA  D028               	goto	l3494
 30476                           
 30477                           ; BSR set to: 0
 30478  00D0EC  5184               	movf	___fladd@bexp& (0+255),w,b
 30479  00D0EE  A4D8               	btfss	status,2,c
 30480  00D0F0  D009               	goto	l3495
 30481                           
 30482                           ; BSR set to: 0
 30483  00D0F2  0E00               	movlw	0
 30484  00D0F4  6F72               	movwf	?___fladd& (0+255),b
 30485  00D0F6  0E00               	movlw	0
 30486  00D0F8  6F73               	movwf	(?___fladd+1)& (0+255),b
 30487  00D0FA  0E00               	movlw	0
 30488  00D0FC  6F74               	movwf	(?___fladd+2)& (0+255),b
 30489  00D0FE  0E00               	movlw	0
 30490  00D100  6F75               	movwf	(?___fladd+3)& (0+255),b
 30491                           
 30492                           ; BSR set to: 0
 30493  00D102  0012               	return	
 30494  00D104                     l3495:
 30495                           
 30496                           ; BSR set to: 0
 30497                           
 30498                           ; BSR set to: 0
 30499  00D104  5176               	movf	___fladd@a& (0+255),w,b
 30500  00D106  2772               	addwf	___fladd@b& (0+255),f,b
 30501  00D108  5177               	movf	(___fladd@a+1)& (0+255),w,b
 30502  00D10A  2373               	addwfc	(___fladd@b+1)& (0+255),f,b
 30503  00D10C  5178               	movf	(___fladd@a+2)& (0+255),w,b
 30504  00D10E  2374               	addwfc	(___fladd@b+2)& (0+255),f,b
 30505  00D110  5179               	movf	(___fladd@a+3)& (0+255),w,b
 30506  00D112  2375               	addwfc	(___fladd@b+3)& (0+255),f,b
 30507                           
 30508                           ; BSR set to: 0
 30509  00D114  A175               	btfss	(___fladd@b+3)& (0+255),0,b
 30510  00D116  D082               	goto	u15580
 30511                           
 30512                           ; BSR set to: 0
 30513  00D118  A185               	btfss	___fladd@grs& (0+255),0,b
 30514  00D11A  D005               	goto	l3498
 30515                           
 30516                           ; BSR set to: 0
 30517  00D11C  90D8               	bcf	status,0,c
 30518  00D11E  3185               	rrcf	___fladd@grs& (0+255),w,b
 30519  00D120  0901               	iorlw	1
 30520  00D122  6F85               	movwf	___fladd@grs& (0+255),b
 30521  00D124  D002               	goto	l3499
 30522  00D126                     l3498:
 30523                           
 30524                           ; BSR set to: 0
 30525                           
 30526                           ; BSR set to: 0
 30527  00D126  90D8               	bcf	status,0,c
 30528  00D128  3385               	rrcf	___fladd@grs& (0+255),f,b
 30529  00D12A                     l3499:
 30530                           
 30531                           ; BSR set to: 0
 30532                           
 30533                           ; BSR set to: 0
 30534  00D12A  B172               	btfsc	___fladd@b& (0+255),0,b
 30535                           
 30536                           ; BSR set to: 0
 30537  00D12C  8F85               	bsf	___fladd@grs& (0+255),7,b
 30538                           
 30539                           ; BSR set to: 0
 30540                           
 30541                           ; BSR set to: 0
 30542  00D12E  3575               	rlcf	(___fladd@b+3)& (0+255),w,b
 30543  00D130  3375               	rrcf	(___fladd@b+3)& (0+255),f,b
 30544  00D132  3374               	rrcf	(___fladd@b+2)& (0+255),f,b
 30545  00D134  3373               	rrcf	(___fladd@b+1)& (0+255),f,b
 30546  00D136  3372               	rrcf	___fladd@b& (0+255),f,b
 30547                           
 30548                           ; BSR set to: 0
 30549  00D138  2B84               	incf	___fladd@bexp& (0+255),f,b
 30550                           
 30551                           ; BSR set to: 0
 30552  00D13A  D070               	goto	u15580
 30553  00D13C                     l3494:
 30554                           
 30555                           ; BSR set to: 0
 30556                           
 30557                           ; BSR set to: 0
 30558  00D13C  5176               	movf	___fladd@a& (0+255),w,b
 30559  00D13E  5D72               	subwf	___fladd@b& (0+255),w,b
 30560  00D140  5177               	movf	(___fladd@a+1)& (0+255),w,b
 30561  00D142  5973               	subwfb	(___fladd@b+1)& (0+255),w,b
 30562  00D144  5178               	movf	(___fladd@a+2)& (0+255),w,b
 30563  00D146  5974               	subwfb	(___fladd@b+2)& (0+255),w,b
 30564  00D148  5175               	movf	(___fladd@b+3)& (0+255),w,b
 30565  00D14A  0A80               	xorlw	128
 30566  00D14C  6F7A               	movwf	??___fladd& (0+255),b
 30567  00D14E  5179               	movf	(___fladd@a+3)& (0+255),w,b
 30568  00D150  0A80               	xorlw	128
 30569  00D152  597A               	subwfb	??___fladd& (0+255),w,b
 30570  00D154  B0D8               	btfsc	status,0,c
 30571  00D156  D036               	goto	l3502
 30572                           
 30573                           ; BSR set to: 0
 30574  00D158  C072  F07A         	movff	___fladd@b,??___fladd
 30575  00D15C  C073  F07B         	movff	___fladd@b+1,??___fladd+1
 30576  00D160  C074  F07C         	movff	___fladd@b+2,??___fladd+2
 30577  00D164  C075  F07D         	movff	___fladd@b+3,??___fladd+3
 30578  00D168  1F7A               	comf	??___fladd& (0+255),f,b
 30579  00D16A  1F7B               	comf	(??___fladd+1)& (0+255),f,b
 30580  00D16C  1F7C               	comf	(??___fladd+2)& (0+255),f,b
 30581  00D16E  1F7D               	comf	(??___fladd+3)& (0+255),f,b
 30582  00D170  2B7A               	incf	??___fladd& (0+255),f,b
 30583  00D172  0E00               	movlw	0
 30584  00D174  237B               	addwfc	(??___fladd+1)& (0+255),f,b
 30585  00D176  237C               	addwfc	(??___fladd+2)& (0+255),f,b
 30586  00D178  237D               	addwfc	(??___fladd+3)& (0+255),f,b
 30587  00D17A  5176               	movf	___fladd@a& (0+255),w,b
 30588  00D17C  257A               	addwf	??___fladd& (0+255),w,b
 30589  00D17E  6F7E               	movwf	(??___fladd+4)& (0+255),b
 30590  00D180  5177               	movf	(___fladd@a+1)& (0+255),w,b
 30591  00D182  217B               	addwfc	(??___fladd+1)& (0+255),w,b
 30592  00D184  6F7F               	movwf	(??___fladd+5)& (0+255),b
 30593  00D186  5178               	movf	(___fladd@a+2)& (0+255),w,b
 30594  00D188  217C               	addwfc	(??___fladd+2)& (0+255),w,b
 30595  00D18A  6F80               	movwf	(??___fladd+6)& (0+255),b
 30596  00D18C  5179               	movf	(___fladd@a+3)& (0+255),w,b
 30597  00D18E  217D               	addwfc	(??___fladd+3)& (0+255),w,b
 30598  00D190  6F81               	movwf	(??___fladd+7)& (0+255),b
 30599  00D192  0EFF               	movlw	255
 30600  00D194  257E               	addwf	(??___fladd+4)& (0+255),w,b
 30601  00D196  6F72               	movwf	___fladd@b& (0+255),b
 30602  00D198  0EFF               	movlw	255
 30603  00D19A  217F               	addwfc	(??___fladd+5)& (0+255),w,b
 30604  00D19C  6F73               	movwf	(___fladd@b+1)& (0+255),b
 30605  00D19E  0EFF               	movlw	255
 30606  00D1A0  2180               	addwfc	(??___fladd+6)& (0+255),w,b
 30607  00D1A2  6F74               	movwf	(___fladd@b+2)& (0+255),b
 30608  00D1A4  0EFF               	movlw	255
 30609  00D1A6  2181               	addwfc	(??___fladd+7)& (0+255),w,b
 30610  00D1A8  6F75               	movwf	(___fladd@b+3)& (0+255),b
 30611  00D1AA  0E80               	movlw	128
 30612  00D1AC  1B82               	xorwf	___fladd@signs& (0+255),f,b
 30613                           
 30614                           ; BSR set to: 0
 30615  00D1AE  6D85               	negf	___fladd@grs& (0+255),b
 30616                           
 30617                           ; BSR set to: 0
 30618  00D1B0  5185               	movf	___fladd@grs& (0+255),w,b
 30619  00D1B2  A4D8               	btfss	status,2,c
 30620  00D1B4  D00F               	goto	l3504
 30621                           
 30622                           ; BSR set to: 0
 30623  00D1B6  0E01               	movlw	1
 30624  00D1B8  2772               	addwf	___fladd@b& (0+255),f,b
 30625  00D1BA  0E00               	movlw	0
 30626  00D1BC  2373               	addwfc	(___fladd@b+1)& (0+255),f,b
 30627  00D1BE  2374               	addwfc	(___fladd@b+2)& (0+255),f,b
 30628  00D1C0  2375               	addwfc	(___fladd@b+3)& (0+255),f,b
 30629                           
 30630                           ; BSR set to: 0
 30631  00D1C2  D008               	goto	l3504
 30632  00D1C4                     l3502:
 30633                           
 30634                           ; BSR set to: 0
 30635                           
 30636                           ; BSR set to: 0
 30637  00D1C4  5176               	movf	___fladd@a& (0+255),w,b
 30638  00D1C6  5F72               	subwf	___fladd@b& (0+255),f,b
 30639  00D1C8  5177               	movf	(___fladd@a+1)& (0+255),w,b
 30640  00D1CA  5B73               	subwfb	(___fladd@b+1)& (0+255),f,b
 30641  00D1CC  5178               	movf	(___fladd@a+2)& (0+255),w,b
 30642  00D1CE  5B74               	subwfb	(___fladd@b+2)& (0+255),f,b
 30643  00D1D0  5179               	movf	(___fladd@a+3)& (0+255),w,b
 30644  00D1D2  5B75               	subwfb	(___fladd@b+3)& (0+255),f,b
 30645  00D1D4                     l3504:
 30646                           
 30647                           ; BSR set to: 0
 30648  00D1D4  5172               	movf	___fladd@b& (0+255),w,b
 30649  00D1D6  1173               	iorwf	(___fladd@b+1)& (0+255),w,b
 30650  00D1D8  1174               	iorwf	(___fladd@b+2)& (0+255),w,b
 30651  00D1DA  1175               	iorwf	(___fladd@b+3)& (0+255),w,b
 30652  00D1DC  A4D8               	btfss	status,2,c
 30653  00D1DE  D01C               	goto	l3511
 30654                           
 30655                           ; BSR set to: 0
 30656  00D1E0  5185               	movf	___fladd@grs& (0+255),w,b
 30657  00D1E2  A4D8               	btfss	status,2,c
 30658  00D1E4  D019               	goto	l3511
 30659                           
 30660                           ; BSR set to: 0
 30661  00D1E6  0E00               	movlw	0
 30662  00D1E8  6F72               	movwf	?___fladd& (0+255),b
 30663  00D1EA  0E00               	movlw	0
 30664  00D1EC  6F73               	movwf	(?___fladd+1)& (0+255),b
 30665  00D1EE  0E00               	movlw	0
 30666  00D1F0  6F74               	movwf	(?___fladd+2)& (0+255),b
 30667  00D1F2  0E00               	movlw	0
 30668  00D1F4  6F75               	movwf	(?___fladd+3)& (0+255),b
 30669                           
 30670                           ; BSR set to: 0
 30671  00D1F6  0012               	return	
 30672  00D1F8                     
 30673                           ; BSR set to: 0
 30674                           
 30675                           ; BSR set to: 0
 30676  00D1F8  90D8               	bcf	status,0,c
 30677  00D1FA  3772               	rlcf	___fladd@b& (0+255),f,b
 30678  00D1FC  3773               	rlcf	(___fladd@b+1)& (0+255),f,b
 30679  00D1FE  3774               	rlcf	(___fladd@b+2)& (0+255),f,b
 30680  00D200  3775               	rlcf	(___fladd@b+3)& (0+255),f,b
 30681                           
 30682                           ; BSR set to: 0
 30683  00D202  BF85               	btfsc	___fladd@grs& (0+255),7,b
 30684                           
 30685                           ; BSR set to: 0
 30686  00D204  8172               	bsf	___fladd@b& (0+255),0,b
 30687                           
 30688                           ; BSR set to: 0
 30689                           
 30690                           ; BSR set to: 0
 30691  00D206  A185               	btfss	___fladd@grs& (0+255),0,b
 30692  00D208  D002               	goto	l3509
 30693                           
 30694                           ; BSR set to: 0
 30695  00D20A  80D8               	bsf	status,0,c
 30696  00D20C  D001               	goto	L42
 30697  00D20E                     l3509:
 30698                           
 30699                           ; BSR set to: 0
 30700                           
 30701                           ; BSR set to: 0
 30702  00D20E  90D8               	bcf	status,0,c
 30703  00D210                     L42:
 30704  00D210  3785               	rlcf	___fladd@grs& (0+255),f,b
 30705                           
 30706                           ; BSR set to: 0
 30707                           
 30708                           ; BSR set to: 0
 30709  00D212  5184               	movf	___fladd@bexp& (0+255),w,b
 30710  00D214  A4D8               	btfss	status,2,c
 30711                           
 30712                           ; BSR set to: 0
 30713  00D216  0784               	decf	___fladd@bexp& (0+255),f,b
 30714  00D218                     l3511:
 30715                           
 30716                           ; BSR set to: 0
 30717                           
 30718                           ; BSR set to: 0
 30719                           
 30720                           ; BSR set to: 0
 30721  00D218  AF74               	btfss	(___fladd@b+2)& (0+255),7,b
 30722  00D21A  D7EE               	goto	l3507
 30723  00D21C                     u15580:
 30724                           
 30725                           ; BSR set to: 0
 30726                           
 30727                           ; BSR set to: 0
 30728                           
 30729                           ; BSR set to: 0
 30730  00D21C  0E00               	movlw	0
 30731  00D21E  6F83               	movwf	___fladd@aexp& (0+255),b
 30732                           
 30733                           ; BSR set to: 0
 30734  00D220  AF85               	btfss	___fladd@grs& (0+255),7,b
 30735  00D222  D00A               	goto	l3516
 30736                           
 30737                           ; BSR set to: 0
 30738  00D224  C085  F07A         	movff	___fladd@grs,??___fladd
 30739  00D228  0E7F               	movlw	127
 30740  00D22A  177A               	andwf	??___fladd& (0+255),f,b
 30741  00D22C  A4D8               	btfss	status,2,c
 30742  00D22E  D002               	goto	u15610
 30743                           
 30744                           ; BSR set to: 0
 30745                           
 30746                           ; BSR set to: 0
 30747  00D230  A172               	btfss	___fladd@b& (0+255),0,b
 30748  00D232  D002               	goto	l3516
 30749  00D234                     u15610:
 30750                           
 30751                           ; BSR set to: 0
 30752  00D234  0E01               	movlw	1
 30753  00D236  6F83               	movwf	___fladd@aexp& (0+255),b
 30754  00D238                     l3516:
 30755                           
 30756                           ; BSR set to: 0
 30757                           
 30758                           ; BSR set to: 0
 30759                           
 30760                           ; BSR set to: 0
 30761  00D238  5183               	movf	___fladd@aexp& (0+255),w,b
 30762  00D23A  B4D8               	btfsc	status,2,c
 30763  00D23C  D020               	goto	l3519
 30764                           
 30765                           ; BSR set to: 0
 30766  00D23E  0E01               	movlw	1
 30767  00D240  2772               	addwf	___fladd@b& (0+255),f,b
 30768  00D242  0E00               	movlw	0
 30769  00D244  2373               	addwfc	(___fladd@b+1)& (0+255),f,b
 30770  00D246  2374               	addwfc	(___fladd@b+2)& (0+255),f,b
 30771  00D248  2375               	addwfc	(___fladd@b+3)& (0+255),f,b
 30772                           
 30773                           ; BSR set to: 0
 30774  00D24A  A175               	btfss	(___fladd@b+3)& (0+255),0,b
 30775  00D24C  D018               	goto	l3519
 30776                           
 30777                           ; BSR set to: 0
 30778  00D24E  C072  F07A         	movff	___fladd@b,??___fladd
 30779  00D252  C073  F07B         	movff	___fladd@b+1,??___fladd+1
 30780  00D256  C074  F07C         	movff	___fladd@b+2,??___fladd+2
 30781  00D25A  C075  F07D         	movff	___fladd@b+3,??___fladd+3
 30782  00D25E  357D               	rlcf	(??___fladd+3)& (0+255),w,b
 30783  00D260  337D               	rrcf	(??___fladd+3)& (0+255),f,b
 30784  00D262  337C               	rrcf	(??___fladd+2)& (0+255),f,b
 30785  00D264  337B               	rrcf	(??___fladd+1)& (0+255),f,b
 30786  00D266  337A               	rrcf	??___fladd& (0+255),f,b
 30787  00D268  C07A  F072         	movff	??___fladd,___fladd@b
 30788  00D26C  C07B  F073         	movff	??___fladd+1,___fladd@b+1
 30789  00D270  C07C  F074         	movff	??___fladd+2,___fladd@b+2
 30790  00D274  C07D  F075         	movff	??___fladd+3,___fladd@b+3
 30791  00D278  2984               	incf	___fladd@bexp& (0+255),w,b
 30792  00D27A  A4D8               	btfss	status,2,c
 30793                           
 30794                           ; BSR set to: 0
 30795  00D27C  2B84               	incf	___fladd@bexp& (0+255),f,b
 30796  00D27E                     l3519:
 30797                           
 30798                           ; BSR set to: 0
 30799                           
 30800                           ; BSR set to: 0
 30801                           
 30802                           ; BSR set to: 0
 30803                           
 30804                           ; BSR set to: 0
 30805  00D27E  2984               	incf	___fladd@bexp& (0+255),w,b
 30806  00D280  B4D8               	btfsc	status,2,c
 30807  00D282  D003               	goto	u15660
 30808                           
 30809                           ; BSR set to: 0
 30810  00D284  5184               	movf	___fladd@bexp& (0+255),w,b
 30811  00D286  A4D8               	btfss	status,2,c
 30812  00D288  D00D               	goto	l3523
 30813  00D28A                     u15660:
 30814                           
 30815                           ; BSR set to: 0
 30816                           
 30817                           ; BSR set to: 0
 30818  00D28A  0E00               	movlw	0
 30819  00D28C  6F72               	movwf	___fladd@b& (0+255),b
 30820  00D28E  0E00               	movlw	0
 30821  00D290  6F73               	movwf	(___fladd@b+1)& (0+255),b
 30822  00D292  0E00               	movlw	0
 30823  00D294  6F74               	movwf	(___fladd@b+2)& (0+255),b
 30824  00D296  0E00               	movlw	0
 30825  00D298  6F75               	movwf	(___fladd@b+3)& (0+255),b
 30826  00D29A  5184               	movf	___fladd@bexp& (0+255),w,b
 30827  00D29C  A4D8               	btfss	status,2,c
 30828  00D29E  D002               	goto	l3523
 30829                           
 30830                           ; BSR set to: 0
 30831  00D2A0  0E00               	movlw	0
 30832  00D2A2  6F82               	movwf	___fladd@signs& (0+255),b
 30833  00D2A4                     l3523:
 30834                           
 30835                           ; BSR set to: 0
 30836                           
 30837                           ; BSR set to: 0
 30838                           
 30839                           ; BSR set to: 0
 30840  00D2A4  A184               	btfss	___fladd@bexp& (0+255),0,b
 30841  00D2A6  D002               	goto	l3524
 30842                           
 30843                           ; BSR set to: 0
 30844  00D2A8  8F74               	bsf	(___fladd@b+2)& (0+255),7,b
 30845  00D2AA  D001               	goto	l3525
 30846  00D2AC                     l3524:
 30847                           
 30848                           ; BSR set to: 0
 30849                           
 30850                           ; BSR set to: 0
 30851  00D2AC  9F74               	bcf	(___fladd@b+2)& (0+255),7,b
 30852  00D2AE                     l3525:
 30853                           
 30854                           ; BSR set to: 0
 30855                           
 30856                           ; BSR set to: 0
 30857  00D2AE  90D8               	bcf	status,0,c
 30858  00D2B0  3184               	rrcf	___fladd@bexp& (0+255),w,b
 30859  00D2B2  6F75               	movwf	(___fladd@b+3)& (0+255),b
 30860                           
 30861                           ; BSR set to: 0
 30862  00D2B4  BF82               	btfsc	___fladd@signs& (0+255),7,b
 30863                           
 30864                           ; BSR set to: 0
 30865  00D2B6  8F75               	bsf	(___fladd@b+3)& (0+255),7,b
 30866                           
 30867                           ; BSR set to: 0
 30868                           
 30869                           ; BSR set to: 0
 30870  00D2B8  C072  F072         	movff	___fladd@b,?___fladd
 30871  00D2BC  C073  F073         	movff	___fladd@b+1,?___fladd+1
 30872  00D2C0  C074  F074         	movff	___fladd@b+2,?___fladd+2
 30873  00D2C4  C075  F075         	movff	___fladd@b+3,?___fladd+3
 30874  00D2C8  0012               	return	
 30875  00D2CA                     __end_of___fladd:
 30876                           	opt stack 0
 30877                           tblptru	equ	0xFF8
 30878                           tblptrh	equ	0xFF7
 30879                           tblptrl	equ	0xFF6
 30880                           tablat	equ	0xFF5
 30881                           prodh	equ	0xFF4
 30882                           prodl	equ	0xFF3
 30883                           intcon	equ	0xFF2
 30884                           postinc0	equ	0xFEE
 30885                           wreg	equ	0xFE8
 30886                           indf1	equ	0xFE7
 30887                           postinc1	equ	0xFE6
 30888                           postdec1	equ	0xFE5
 30889                           plusw1	equ	0xFE3
 30890                           fsr1h	equ	0xFE2
 30891                           fsr1l	equ	0xFE1
 30892                           indf2	equ	0xFDF
 30893                           postinc2	equ	0xFDE
 30894                           postdec2	equ	0xFDD
 30895                           plusw2	equ	0xFDB
 30896                           fsr2h	equ	0xFDA
 30897                           fsr2l	equ	0xFD9
 30898                           status	equ	0xFD8
 30899                           
 30900 ;; *************** function _USBDeviceInit *****************
 30901 ;; Defined at:
 30902 ;;		line 277 in file "usb_device.c"
 30903 ;; Parameters:    Size  Location     Type
 30904 ;;		None
 30905 ;; Auto vars:     Size  Location     Type
 30906 ;;  i               1    8[BANK0 ] unsigned char 
 30907 ;; Return value:  Size  Location     Type
 30908 ;;                  1    wreg      void 
 30909 ;; Registers used:
 30910 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30911 ;; Tracked objects:
 30912 ;;		On entry : 0/0
 30913 ;;		On exit  : 0/0
 30914 ;;		Unchanged: 0/0
 30915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30917 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30919 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30920 ;;Total ram usage:        1 bytes
 30921 ;; Hardware stack levels used:    1
 30922 ;; Hardware stack levels required when called:   11
 30923 ;; This function calls:
 30924 ;;		_memset
 30925 ;; This function is called by:
 30926 ;;		_main
 30927 ;; This function uses a non-reentrant model
 30928 ;;
 30929                           
 30930                           	psect	text122
 30931  00FE90                     __ptext122:
 30932                           	opt stack 0
 30933  00FE90                     _USBDeviceInit:
 30934                           	opt stack 19
 30935                           
 30936                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 30937                           
 30938                           ; BSR set to: 0
 30939                           ;incstack = 0
 30940  00FE90  98A0               	bcf	4000,4,c	;volatile
 30941                           
 30942                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 30943  00FE92  0E00               	movlw	0
 30944  00FE94  6E63               	movwf	3939,c	;volatile
 30945                           
 30946                           ;usb_device.c: 291: {UIR = 0;};
 30947  00FE96  0E00               	movlw	0
 30948  00FE98  6E62               	movwf	3938,c	;volatile
 30949                           
 30950                           ;usb_device.c: 294: UEP0 = 0;
 30951  00FE9A  0E00               	movlw	0
 30952  00FE9C  010F               	movlb	15	; () banked
 30953  00FE9E  6F26               	movwf	38,b	;volatile
 30954                           
 30955                           ; BSR set to: 15
 30956                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 30957  00FEA0  0E27               	movlw	39
 30958  00FEA2  0100               	movlb	0	; () banked
 30959  00FEA4  6F60               	movwf	memset@p1& (0+255),b
 30960  00FEA6  0E0F               	movlw	15
 30961  00FEA8  6F61               	movwf	(memset@p1+1)& (0+255),b
 30962  00FEAA  0E00               	movlw	0
 30963  00FEAC  6F63               	movwf	(memset@c+1)& (0+255),b
 30964  00FEAE  0E00               	movlw	0
 30965  00FEB0  6F62               	movwf	memset@c& (0+255),b
 30966  00FEB2  0E00               	movlw	0
 30967  00FEB4  6F65               	movwf	(memset@n+1)& (0+255),b
 30968  00FEB6  0E02               	movlw	2
 30969  00FEB8  6F64               	movwf	memset@n& (0+255),b
 30970  00FEBA  ECFC  F0A9         	call	_memset	;wreg free
 30971                           
 30972                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 30973  00FEBE  0E16               	movlw	22
 30974  00FEC0  010F               	movlb	15	; () banked
 30975  00FEC2  6F39               	movwf	57,b	;volatile
 30976                           
 30977                           ; BSR set to: 15
 30978  00FEC4  0E9F               	movlw	159
 30979  00FEC6  6F37               	movwf	55,b	;volatile
 30980                           
 30981                           ; BSR set to: 15
 30982  00FEC8  0E7B               	movlw	123
 30983  00FECA  6F36               	movwf	54,b	;volatile
 30984                           
 30985                           ; BSR set to: 15
 30986                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 30987  00FECC  0E00               	movlw	0
 30988  00FECE  0100               	movlb	0	; () banked
 30989  00FED0  6F68               	movwf	USBDeviceInit@i& (0+255),b
 30990  00FED2                     l17427:
 30991                           
 30992                           ; BSR set to: 0
 30993  00FED2  0E0B               	movlw	11
 30994  00FED4  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 30995  00FED6  D001               	goto	l145
 30996  00FED8  D00E               	goto	u16770
 30997  00FEDA                     l145:
 30998                           
 30999                           ; BSR set to: 0
 31000                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 31001                           
 31002                           ; BSR set to: 0
 31003  00FEDA  5168               	movf	USBDeviceInit@i& (0+255),w,b
 31004  00FEDC  0D04               	mullw	4
 31005  00FEDE  0E00               	movlw	0
 31006  00FEE0  24F3               	addwf	prodl,w,c
 31007  00FEE2  6ED9               	movwf	fsr2l,c
 31008  00FEE4  0E0D               	movlw	13
 31009  00FEE6  20F4               	addwfc	prodh,w,c
 31010  00FEE8  6EDA               	movwf	fsr2h,c
 31011  00FEEA  6ADE               	clrf	postinc2,c
 31012  00FEEC  6ADE               	clrf	postinc2,c
 31013  00FEEE  6ADE               	clrf	postinc2,c
 31014  00FEF0  6ADD               	clrf	postdec2,c
 31015                           
 31016                           ; BSR set to: 0
 31017  00FEF2  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 31018  00FEF4  D7EE               	goto	l17427
 31019  00FEF6                     u16770:
 31020                           
 31021                           ; BSR set to: 0
 31022                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 31023  00FEF6  8C65               	bsf	3941,6,c	;volatile
 31024                           
 31025                           ; BSR set to: 0
 31026                           ;usb_device.c: 316: UADDR = 0x00;
 31027  00FEF8  0E00               	movlw	0
 31028  00FEFA  010F               	movlb	15	; () banked
 31029  00FEFC  6F38               	movwf	56,b	;volatile
 31030                           
 31031                           ; BSR set to: 15
 31032                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 31033  00FEFE  9865               	bcf	3941,4,c	;volatile
 31034                           
 31035                           ; BSR set to: 15
 31036                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 31037  00FF00  9C65               	bcf	3941,6,c	;volatile
 31038  00FF02                     
 31039                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 31040                           
 31041                           ; BSR set to: 15
 31042  00FF02  9662               	bcf	3938,3,c	;volatile
 31043                           
 31044                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 31045  00FF04  0E00               	movlw	0
 31046  00FF06  6E55               	movwf	_inPipes+3,c	;volatile
 31047                           
 31048                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 31049  00FF08  0E00               	movlw	0
 31050  00FF0A  0101               	movlb	1	; () banked
 31051  00FF0C  6F15               	movwf	(_outPipes+3)& (0+255),b	;volatile
 31052                           
 31053                           ; BSR set to: 1
 31054                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 31055  00FF0E  0E00               	movlw	0
 31056  00FF10  6F17               	movwf	(_outPipes+5)& (0+255),b	;volatile
 31057  00FF12  0E00               	movlw	0
 31058  00FF14  6F16               	movwf	(_outPipes+4)& (0+255),b	;volatile
 31059                           
 31060                           ; BSR set to: 1
 31061                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 31062  00FF16  B662               	btfsc	3938,3,c	;volatile
 31063  00FF18  D7F4               	goto	l147
 31064                           
 31065                           ; BSR set to: 1
 31066                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 31067                           
 31068                           ; BSR set to: 1
 31069  00FF1A  0E01               	movlw	1
 31070  00FF1C  6F68               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 31071                           
 31072                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 31073  00FF1E  0E01               	movlw	1
 31074  00FF20  6F67               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 31075                           
 31076                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 31077  00FF22  0E00               	movlw	0
 31078  00FF24  6F66               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 31079                           
 31080                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 31081  00FF26  0E00               	movlw	0
 31082  00FF28  6F65               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 31083                           
 31084                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 31085  00FF2A  0E00               	movlw	0
 31086  00FF2C  6F6D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 31087                           
 31088                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 31089  00FF2E  0E00               	movlw	0
 31090  00FF30  0100               	movlb	0	; () banked
 31091  00FF32  6F68               	movwf	USBDeviceInit@i& (0+255),b
 31092  00FF34                     l17455:
 31093                           
 31094                           ; BSR set to: 0
 31095  00FF34  0E02               	movlw	2
 31096  00FF36  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 31097  00FF38  D001               	goto	l149
 31098  00FF3A  D02E               	goto	u16800
 31099  00FF3C                     l149:
 31100                           
 31101                           ; BSR set to: 0
 31102                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 31103                           
 31104                           ; BSR set to: 0
 31105  00FF3C  5168               	movf	USBDeviceInit@i& (0+255),w,b
 31106  00FF3E  0D02               	mullw	2
 31107  00FF40  0E1B               	movlw	low _pBDTEntryIn
 31108  00FF42  24F3               	addwf	prodl,w,c
 31109  00FF44  6ED9               	movwf	fsr2l,c
 31110  00FF46  0E01               	movlw	high _pBDTEntryIn
 31111  00FF48  20F4               	addwfc	prodh,w,c
 31112  00FF4A  6EDA               	movwf	fsr2h,c
 31113  00FF4C  0E00               	movlw	0
 31114  00FF4E  6EDE               	movwf	postinc2,c
 31115  00FF50  0E00               	movlw	0
 31116  00FF52  6EDD               	movwf	postdec2,c
 31117                           
 31118                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 31119  00FF54  5168               	movf	USBDeviceInit@i& (0+255),w,b
 31120  00FF56  0D02               	mullw	2
 31121  00FF58  0E21               	movlw	low _pBDTEntryOut
 31122  00FF5A  24F3               	addwf	prodl,w,c
 31123  00FF5C  6ED9               	movwf	fsr2l,c
 31124  00FF5E  0E01               	movlw	high _pBDTEntryOut
 31125  00FF60  20F4               	addwfc	prodh,w,c
 31126  00FF62  6EDA               	movwf	fsr2h,c
 31127  00FF64  0E00               	movlw	0
 31128  00FF66  6EDE               	movwf	postinc2,c
 31129  00FF68  0E00               	movlw	0
 31130  00FF6A  6EDD               	movwf	postdec2,c
 31131                           
 31132                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 31133  00FF6C  5168               	movf	USBDeviceInit@i& (0+255),w,b
 31134  00FF6E  0D01               	mullw	1
 31135  00FF70  0E3C               	movlw	low _ep_data_in
 31136  00FF72  24F3               	addwf	prodl,w,c
 31137  00FF74  6ED9               	movwf	fsr2l,c
 31138  00FF76  0E01               	movlw	high _ep_data_in
 31139  00FF78  20F4               	addwfc	prodh,w,c
 31140  00FF7A  6EDA               	movwf	fsr2h,c
 31141  00FF7C  0E00               	movlw	0
 31142  00FF7E  6EDF               	movwf	indf2,c
 31143                           
 31144                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 31145  00FF80  5168               	movf	USBDeviceInit@i& (0+255),w,b
 31146  00FF82  0D01               	mullw	1
 31147  00FF84  0E39               	movlw	low _ep_data_out
 31148  00FF86  24F3               	addwf	prodl,w,c
 31149  00FF88  6ED9               	movwf	fsr2l,c
 31150  00FF8A  0E01               	movlw	high _ep_data_out
 31151  00FF8C  20F4               	addwfc	prodh,w,c
 31152  00FF8E  6EDA               	movwf	fsr2h,c
 31153  00FF90  0E00               	movlw	0
 31154  00FF92  6EDF               	movwf	indf2,c
 31155                           
 31156                           ; BSR set to: 0
 31157  00FF94  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 31158  00FF96  D7CE               	goto	l17455
 31159  00FF98                     u16800:
 31160                           
 31161                           ; BSR set to: 0
 31162                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 31163                           
 31164                           ; BSR set to: 0
 31165  00FF98  0E08               	movlw	8
 31166  00FF9A  0101               	movlb	1	; () banked
 31167  00FF9C  6F1B               	movwf	_pBDTEntryIn& (0+255),b
 31168  00FF9E  0E0D               	movlw	13
 31169  00FFA0  6F1C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 31170                           
 31171                           ; BSR set to: 1
 31172                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 31173  00FFA2  0E16               	movlw	22
 31174  00FFA4  010F               	movlb	15	; () banked
 31175  00FFA6  6F26               	movwf	38,b	;volatile
 31176                           
 31177                           ; BSR set to: 15
 31178                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 31179  00FFA8  0E0D               	movlw	13
 31180  00FFAA  010D               	movlb	13	; () banked
 31181  00FFAC  6F03               	movwf	3,b	;volatile
 31182  00FFAE  0E30               	movlw	48
 31183  00FFB0  6F02               	movwf	2,b	;volatile
 31184                           
 31185                           ; BSR set to: 13
 31186                           ;usb_device.c: 359: BDT[0].CNT = 8;
 31187  00FFB2  0E08               	movlw	8
 31188  00FFB4  6F01               	movwf	1,b	;volatile
 31189                           
 31190                           ; BSR set to: 13
 31191                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 31192  00FFB6  0E04               	movlw	4
 31193  00FFB8  6F00               	movwf	0,b	;volatile
 31194                           
 31195                           ; BSR set to: 13
 31196                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 31197  00FFBA  8F00               	bsf	0,7,b	;volatile
 31198                           
 31199                           ; BSR set to: 13
 31200                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 31201  00FFBC  0E00               	movlw	0
 31202  00FFBE  0101               	movlb	1	; () banked
 31203  00FFC0  6FC2               	movwf	_USBActiveConfiguration& (0+255),b	;volatile
 31204                           
 31205                           ; BSR set to: 1
 31206                           ;usb_device.c: 366: USB1msTickCount = 0;
 31207  00FFC2  0E00               	movlw	0
 31208  00FFC4  6F2F               	movwf	_USB1msTickCount& (0+255),b	;volatile
 31209  00FFC6  0E00               	movlw	0
 31210  00FFC8  6F30               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 31211  00FFCA  0E00               	movlw	0
 31212  00FFCC  6F31               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 31213  00FFCE  0E00               	movlw	0
 31214  00FFD0  6F32               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 31215                           
 31216                           ; BSR set to: 1
 31217                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 31218  00FFD2  0E00               	movlw	0
 31219  00FFD4  6F64               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 31220                           
 31221                           ; BSR set to: 1
 31222                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 31223  00FFD6  0E00               	movlw	0
 31224  00FFD8  6E5E               	movwf	_USBDeviceState,c	;volatile
 31225                           
 31226                           ; BSR set to: 1
 31227  00FFDA  0012               	return		;funcret
 31228  00FFDC                     __end_of_USBDeviceInit:
 31229                           	opt stack 0
 31230                           tblptru	equ	0xFF8
 31231                           tblptrh	equ	0xFF7
 31232                           tblptrl	equ	0xFF6
 31233                           tablat	equ	0xFF5
 31234                           prodh	equ	0xFF4
 31235                           prodl	equ	0xFF3
 31236                           intcon	equ	0xFF2
 31237                           postinc0	equ	0xFEE
 31238                           wreg	equ	0xFE8
 31239                           indf1	equ	0xFE7
 31240                           postinc1	equ	0xFE6
 31241                           postdec1	equ	0xFE5
 31242                           plusw1	equ	0xFE3
 31243                           fsr1h	equ	0xFE2
 31244                           fsr1l	equ	0xFE1
 31245                           indf2	equ	0xFDF
 31246                           postinc2	equ	0xFDE
 31247                           postdec2	equ	0xFDD
 31248                           plusw2	equ	0xFDB
 31249                           fsr2h	equ	0xFDA
 31250                           fsr2l	equ	0xFD9
 31251                           status	equ	0xFD8
 31252                           
 31253 ;; *************** function _memset *****************
 31254 ;; Defined at:
 31255 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 31256 ;; Parameters:    Size  Location     Type
 31257 ;;  p1              2    0[BANK0 ] PTR void 
 31258 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 31259 ;;  c               2    2[BANK0 ] int 
 31260 ;;  n               2    4[BANK0 ] unsigned int 
 31261 ;; Auto vars:     Size  Location     Type
 31262 ;;  p               2    6[BANK0 ] PTR unsigned char 
 31263 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 31264 ;; Return value:  Size  Location     Type
 31265 ;;                  2    0[BANK0 ] PTR void 
 31266 ;; Registers used:
 31267 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31268 ;; Tracked objects:
 31269 ;;		On entry : 0/0
 31270 ;;		On exit  : 0/0
 31271 ;;		Unchanged: 0/0
 31272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31273 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31274 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31276 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31277 ;;Total ram usage:        8 bytes
 31278 ;; Hardware stack levels used:    1
 31279 ;; Hardware stack levels required when called:   10
 31280 ;; This function calls:
 31281 ;;		Nothing
 31282 ;; This function is called by:
 31283 ;;		_USBDeviceInit
 31284 ;; This function uses a non-reentrant model
 31285 ;;
 31286                           
 31287                           	psect	text123
 31288  0153F8                     __ptext123:
 31289                           	opt stack 0
 31290  0153F8                     _memset:
 31291                           	opt stack 19
 31292                           
 31293                           ; BSR set to: 1
 31294                           ;incstack = 0
 31295  0153F8  C060  F066         	movff	memset@p1,memset@p
 31296  0153FC  C061  F067         	movff	memset@p1+1,memset@p+1
 31297  015400  D009               	goto	l3701
 31298  015402                     l16559:
 31299  015402  C066  FFD9         	movff	memset@p,fsr2l
 31300  015406  C067  FFDA         	movff	memset@p+1,fsr2h
 31301  01540A  C062  FFDF         	movff	memset@c,indf2
 31302  01540E  0100               	movlb	0	; () banked
 31303  015410  4B66               	infsnz	memset@p& (0+255),f,b
 31304  015412  2B67               	incf	(memset@p+1)& (0+255),f,b
 31305  015414                     l3701:
 31306                           
 31307                           ; BSR set to: 0
 31308  015414  0100               	movlb	0	; () banked
 31309  015416  0764               	decf	memset@n& (0+255),f,b
 31310  015418  A0D8               	btfss	status,0,c
 31311  01541A  0765               	decf	(memset@n+1)& (0+255),f,b
 31312  01541C  2964               	incf	memset@n& (0+255),w,b
 31313  01541E  E1F1               	bnz	l16559
 31314  015420  2965               	incf	(memset@n+1)& (0+255),w,b
 31315  015422  B4D8               	btfsc	status,2,c
 31316  015424  0012               	return	
 31317  015426  D7ED               	goto	l3702
 31318  015428                     __end_of_memset:
 31319                           	opt stack 0
 31320                           tblptru	equ	0xFF8
 31321                           tblptrh	equ	0xFF7
 31322                           tblptrl	equ	0xFF6
 31323                           tablat	equ	0xFF5
 31324                           prodh	equ	0xFF4
 31325                           prodl	equ	0xFF3
 31326                           intcon	equ	0xFF2
 31327                           postinc0	equ	0xFEE
 31328                           wreg	equ	0xFE8
 31329                           indf1	equ	0xFE7
 31330                           postinc1	equ	0xFE6
 31331                           postdec1	equ	0xFE5
 31332                           plusw1	equ	0xFE3
 31333                           fsr1h	equ	0xFE2
 31334                           fsr1l	equ	0xFE1
 31335                           indf2	equ	0xFDF
 31336                           postinc2	equ	0xFDE
 31337                           postdec2	equ	0xFDD
 31338                           plusw2	equ	0xFDB
 31339                           fsr2h	equ	0xFDA
 31340                           fsr2l	equ	0xFD9
 31341                           status	equ	0xFD8
 31342                           
 31343 ;; *************** function _USBDeviceAttach *****************
 31344 ;; Defined at:
 31345 ;;		line 1354 in file "usb_device.c"
 31346 ;; Parameters:    Size  Location     Type
 31347 ;;		None
 31348 ;; Auto vars:     Size  Location     Type
 31349 ;;		None
 31350 ;; Return value:  Size  Location     Type
 31351 ;;                  1    wreg      void 
 31352 ;; Registers used:
 31353 ;;		wreg, status,2
 31354 ;; Tracked objects:
 31355 ;;		On entry : 0/0
 31356 ;;		On exit  : 0/0
 31357 ;;		Unchanged: 0/0
 31358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31363 ;;Total ram usage:        0 bytes
 31364 ;; Hardware stack levels used:    1
 31365 ;; Hardware stack levels required when called:   10
 31366 ;; This function calls:
 31367 ;;		Nothing
 31368 ;; This function is called by:
 31369 ;;		_main
 31370 ;; This function uses a non-reentrant model
 31371 ;;
 31372                           
 31373                           	psect	text124
 31374  015366                     __ptext124:
 31375                           	opt stack 0
 31376  015366                     _USBDeviceAttach:
 31377                           	opt stack 20
 31378                           
 31379                           ;usb_device.c: 1358: {;usb_device.c: 1359: if(1 == 1)
 31380                           
 31381                           ; BSR set to: 0
 31382                           ;incstack = 0
 31383  015366  505E               	movf	_USBDeviceState,w,c	;volatile
 31384  015368  A4D8               	btfss	status,2,c
 31385  01536A  0012               	return	
 31386                           
 31387                           ;usb_device.c: 1360: {;usb_device.c: 1362: UCON = 0;
 31388  01536C  0E00               	movlw	0
 31389  01536E  6E65               	movwf	3941,c	;volatile
 31390                           
 31391                           ;usb_device.c: 1365: UIE = 0;
 31392  015370  0E00               	movlw	0
 31393  015372  010F               	movlb	15	; () banked
 31394  015374  6F36               	movwf	54,b	;volatile
 31395                           
 31396                           ;usb_device.c: 1369: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 31397  015376  0E16               	movlw	22
 31398  015378  6F39               	movwf	57,b	;volatile
 31399  01537A  0E9F               	movlw	159
 31400  01537C  6F37               	movwf	55,b	;volatile
 31401  01537E  0E7B               	movlw	123
 31402  015380  6F36               	movwf	54,b	;volatile
 31403                           
 31404                           ; BSR set to: 15
 31405                           ;usb_device.c: 1371: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 31406  015382  8ED0               	bsf	4048,7,c	;volatile
 31407                           
 31408                           ; BSR set to: 15
 31409  015384  88A2               	bsf	4002,4,c	;volatile
 31410                           
 31411                           ; BSR set to: 15
 31412  015386  88A0               	bsf	4000,4,c	;volatile
 31413                           
 31414                           ; BSR set to: 15
 31415  015388  8EF2               	bsf	intcon,7,c	;volatile
 31416                           
 31417                           ;usb_device.c: 1374: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 31418  01538A  D001               	goto	l206
 31419  01538C                     l207:
 31420  01538C  8665               	bsf	3941,3,c	;volatile
 31421  01538E                     l206:
 31422  01538E  A665               	btfss	3941,3,c	;volatile
 31423  015390  D7FD               	goto	l207
 31424                           
 31425                           ;usb_device.c: 1377: USBDeviceState = ATTACHED_STATE;
 31426  015392  0E01               	movlw	1
 31427  015394  6E5E               	movwf	_USBDeviceState,c	;volatile
 31428  015396  0012               	return	
 31429  015398                     __end_of_USBDeviceAttach:
 31430                           	opt stack 0
 31431                           tblptru	equ	0xFF8
 31432                           tblptrh	equ	0xFF7
 31433                           tblptrl	equ	0xFF6
 31434                           tablat	equ	0xFF5
 31435                           prodh	equ	0xFF4
 31436                           prodl	equ	0xFF3
 31437                           intcon	equ	0xFF2
 31438                           postinc0	equ	0xFEE
 31439                           wreg	equ	0xFE8
 31440                           indf1	equ	0xFE7
 31441                           postinc1	equ	0xFE6
 31442                           postdec1	equ	0xFE5
 31443                           plusw1	equ	0xFE3
 31444                           fsr1h	equ	0xFE2
 31445                           fsr1l	equ	0xFE1
 31446                           indf2	equ	0xFDF
 31447                           postinc2	equ	0xFDE
 31448                           postdec2	equ	0xFDD
 31449                           plusw2	equ	0xFDB
 31450                           fsr2h	equ	0xFDA
 31451                           fsr2l	equ	0xFD9
 31452                           status	equ	0xFD8
 31453                           
 31454 ;; *************** function _SYSTEM_Initialize *****************
 31455 ;; Defined at:
 31456 ;;		line 39 in file "system.c"
 31457 ;; Parameters:    Size  Location     Type
 31458 ;;  state           1    wreg     enum E6623
 31459 ;; Auto vars:     Size  Location     Type
 31460 ;;  state           1    4[BANK0 ] enum E6623
 31461 ;;  pll_startup_    2    2[BANK0 ] unsigned int 
 31462 ;;  pll_startup_    2    0[BANK0 ] unsigned int 
 31463 ;; Return value:  Size  Location     Type
 31464 ;;                  1    wreg      void 
 31465 ;; Registers used:
 31466 ;;		wreg, status,2, status,0
 31467 ;; Tracked objects:
 31468 ;;		On entry : 0/0
 31469 ;;		On exit  : 0/0
 31470 ;;		Unchanged: 0/0
 31471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31473 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31475 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31476 ;;Total ram usage:        5 bytes
 31477 ;; Hardware stack levels used:    1
 31478 ;; Hardware stack levels required when called:   10
 31479 ;; This function calls:
 31480 ;;		Nothing
 31481 ;; This function is called by:
 31482 ;;		_main
 31483 ;; This function uses a non-reentrant model
 31484 ;;
 31485                           
 31486                           	psect	text125
 31487  014638                     __ptext125:
 31488                           	opt stack 0
 31489  014638                     _SYSTEM_Initialize:
 31490                           	opt stack 20
 31491                           
 31492                           ;incstack = 0
 31493                           ;SYSTEM_Initialize@state stored from wreg
 31494  014638  0100               	movlb	0	; () banked
 31495  01463A  6F64               	movwf	SYSTEM_Initialize@state& (0+255),b
 31496                           
 31497                           ;system.c: 41: switch(state)
 31498  01463C  D01E               	goto	l897
 31499  01463E                     
 31500                           ;system.c: 50: {;system.c: 51: unsigned int pll_startup_counter = 600;
 31501  01463E  0E02               	movlw	2
 31502  014640  0100               	movlb	0	; () banked
 31503  014642  6F61               	movwf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),b
 31504  014644  0E58               	movlw	88
 31505  014646  6F60               	movwf	SYSTEM_Initialize@pll_startup_counter& (0+255),b
 31506                           
 31507                           ; BSR set to: 0
 31508                           ;system.c: 52: OSCTUNEbits.PLLEN = 1;
 31509  014648  8C9B               	bsf	3995,6,c	;volatile
 31510  01464A                     l17607:
 31511                           
 31512                           ; BSR set to: 0
 31513  01464A  0760               	decf	SYSTEM_Initialize@pll_startup_counter& (0+255),f,b
 31514  01464C  A0D8               	btfss	status,0,c
 31515  01464E  0761               	decf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),f,b
 31516  014650  2960               	incf	SYSTEM_Initialize@pll_startup_counter& (0+255),w,b
 31517  014652  E1FB               	bnz	l17607
 31518  014654  2961               	incf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),w,b
 31519  014656  B4D8               	btfsc	status,2,c
 31520  014658  0012               	return	
 31521  01465A  D7F7               	goto	l900
 31522  01465C                     
 31523                           ; BSR set to: 0
 31524                           ;system.c: 78: OSCCON = 0x70;
 31525                           
 31526                           ; BSR set to: 0
 31527  01465C  0E70               	movlw	112
 31528  01465E  6ED3               	movwf	4051,c	;volatile
 31529                           
 31530                           ;system.c: 84: {;system.c: 85: unsigned int pll_startup_counter = 800;
 31531  014660  0E03               	movlw	3
 31532  014662  6F63               	movwf	(SYSTEM_Initialize@pll_startup_counter_3132+1)& (0+255),b
 31533  014664  0E20               	movlw	32
 31534  014666  6F62               	movwf	SYSTEM_Initialize@pll_startup_counter_3132& (0+255),b
 31535  014668                     l17611:
 31536                           
 31537                           ; BSR set to: 0
 31538  014668  0762               	decf	SYSTEM_Initialize@pll_startup_counter_3132& (0+255),f,b
 31539  01466A  A0D8               	btfss	status,0,c
 31540  01466C  0763               	decf	(SYSTEM_Initialize@pll_startup_counter_3132+1)& (0+255),f,b
 31541  01466E  2962               	incf	SYSTEM_Initialize@pll_startup_counter_3132& (0+255),w,b
 31542  014670  E1FB               	bnz	l17611
 31543  014672  2963               	incf	(SYSTEM_Initialize@pll_startup_counter_3132+1)& (0+255),w,b
 31544  014674  B4D8               	btfsc	status,2,c
 31545  014676  0012               	return	
 31546  014678  D7F7               	goto	l906
 31547  01467A                     l897:
 31548                           
 31549                           ; BSR set to: 0
 31550  01467A  0100               	movlb	0	; () banked
 31551  01467C  5164               	movf	SYSTEM_Initialize@state& (0+255),w,b
 31552                           
 31553                           ; Switch size 1, requested type "space"
 31554                           ; Number of cases is 3, Range of values is 0 to 2
 31555                           ; switch strategies available:
 31556                           ; Name         Instructions Cycles
 31557                           ; simple_byte           10     6 (average)
 31558                           ;	Chosen strategy is simple_byte
 31559  01467E  0A00               	xorlw	0	; case 0
 31560  014680  B4D8               	btfsc	status,2,c
 31561  014682  D7DD               	goto	l898
 31562  014684  0A01               	xorlw	1	; case 1
 31563  014686  B4D8               	btfsc	status,2,c
 31564  014688  0012               	return	
 31565  01468A  0A03               	xorlw	3	; case 2
 31566  01468C  A4D8               	btfss	status,2,c
 31567  01468E  0012               	return	
 31568  014690  D7E5               	goto	l904
 31569  014692                     __end_of_SYSTEM_Initialize:
 31570                           	opt stack 0
 31571                           tblptru	equ	0xFF8
 31572                           tblptrh	equ	0xFF7
 31573                           tblptrl	equ	0xFF6
 31574                           tablat	equ	0xFF5
 31575                           prodh	equ	0xFF4
 31576                           prodl	equ	0xFF3
 31577                           intcon	equ	0xFF2
 31578                           postinc0	equ	0xFEE
 31579                           wreg	equ	0xFE8
 31580                           indf1	equ	0xFE7
 31581                           postinc1	equ	0xFE6
 31582                           postdec1	equ	0xFE5
 31583                           plusw1	equ	0xFE3
 31584                           fsr1h	equ	0xFE2
 31585                           fsr1l	equ	0xFE1
 31586                           indf2	equ	0xFDF
 31587                           postinc2	equ	0xFDE
 31588                           postdec2	equ	0xFDD
 31589                           plusw2	equ	0xFDB
 31590                           fsr2h	equ	0xFDA
 31591                           fsr2l	equ	0xFD9
 31592                           status	equ	0xFD8
 31593                           
 31594 ;; *************** function _APP_DeviceMSDTasks *****************
 31595 ;; Defined at:
 31596 ;;		line 110 in file "app_device_msd.c"
 31597 ;; Parameters:    Size  Location     Type
 31598 ;;		None
 31599 ;; Auto vars:     Size  Location     Type
 31600 ;;		None
 31601 ;; Return value:  Size  Location     Type
 31602 ;;                  1    wreg      void 
 31603 ;; Registers used:
 31604 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 31605 ;; Tracked objects:
 31606 ;;		On entry : 0/0
 31607 ;;		On exit  : 0/0
 31608 ;;		Unchanged: 0/0
 31609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31614 ;;Total ram usage:        0 bytes
 31615 ;; Hardware stack levels used:    1
 31616 ;; Hardware stack levels required when called:   21
 31617 ;; This function calls:
 31618 ;;		_MSDTasks
 31619 ;; This function is called by:
 31620 ;;		_main
 31621 ;; This function uses a non-reentrant model
 31622 ;;
 31623                           
 31624                           	psect	text126
 31625  0158DE                     __ptext126:
 31626                           	opt stack 0
 31627  0158DE                     _APP_DeviceMSDTasks:
 31628                           	opt stack 9
 31629                           
 31630                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 31631                           
 31632                           ; BSR set to: 0
 31633                           ;incstack = 0
 31634  0158DE  0E20               	movlw	32
 31635  0158E0  605E               	cpfslt	_USBDeviceState,c	;volatile
 31636  0158E2  D001               	goto	l986
 31637  0158E4  0012               	return	
 31638  0158E6                     l986:
 31639                           
 31640                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 31641  0158E6  B265               	btfsc	3941,1,c	;volatile
 31642  0158E8  0012               	return	
 31643                           
 31644                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 31645                           
 31646                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 31647  0158EA  ECAB  F071         	call	_MSDTasks	;wreg free
 31648  0158EE  0012               	return		;funcret
 31649  0158F0                     __end_of_APP_DeviceMSDTasks:
 31650                           	opt stack 0
 31651                           tblptru	equ	0xFF8
 31652                           tblptrh	equ	0xFF7
 31653                           tblptrl	equ	0xFF6
 31654                           tablat	equ	0xFF5
 31655                           prodh	equ	0xFF4
 31656                           prodl	equ	0xFF3
 31657                           intcon	equ	0xFF2
 31658                           postinc0	equ	0xFEE
 31659                           wreg	equ	0xFE8
 31660                           indf1	equ	0xFE7
 31661                           postinc1	equ	0xFE6
 31662                           postdec1	equ	0xFE5
 31663                           plusw1	equ	0xFE3
 31664                           fsr1h	equ	0xFE2
 31665                           fsr1l	equ	0xFE1
 31666                           indf2	equ	0xFDF
 31667                           postinc2	equ	0xFDE
 31668                           postdec2	equ	0xFDD
 31669                           plusw2	equ	0xFDB
 31670                           fsr2h	equ	0xFDA
 31671                           fsr2l	equ	0xFD9
 31672                           status	equ	0xFD8
 31673                           
 31674 ;; *************** function _MSDTasks *****************
 31675 ;; Defined at:
 31676 ;;		line 335 in file "usb_device_msd.c"
 31677 ;; Parameters:    Size  Location     Type
 31678 ;;		None
 31679 ;; Auto vars:     Size  Location     Type
 31680 ;;  i               1   81[BANK0 ] unsigned char 
 31681 ;; Return value:  Size  Location     Type
 31682 ;;                  1    wreg      unsigned char 
 31683 ;; Registers used:
 31684 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 31685 ;; Tracked objects:
 31686 ;;		On entry : 0/0
 31687 ;;		On exit  : 0/0
 31688 ;;		Unchanged: 0/0
 31689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31691 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31692 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31693 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31694 ;;Total ram usage:        6 bytes
 31695 ;; Hardware stack levels used:    1
 31696 ;; Hardware stack levels required when called:   20
 31697 ;; This function calls:
 31698 ;;		_MSDProcessCommand
 31699 ;;		_USBStallEndpoint
 31700 ;;		_USBTransferOnePacket
 31701 ;; This function is called by:
 31702 ;;		_APP_DeviceMSDTasks
 31703 ;; This function uses a non-reentrant model
 31704 ;;
 31705                           
 31706                           	psect	text127
 31707  00E356                     __ptext127:
 31708                           	opt stack 0
 31709  00E356                     _MSDTasks:
 31710                           	opt stack 9
 31711                           
 31712                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 31713                           
 31714                           ;incstack = 0
 31715  00E356  0E20               	movlw	32
 31716  00E358  185E               	xorwf	_USBDeviceState,w,c	;volatile
 31717  00E35A  A4D8               	btfss	status,2,c
 31718  00E35C  0012               	return	
 31719                           
 31720                           ;usb_device_msd.c: 345: };usb_device_msd.c: 353: {PIE2bits.USBIE = 0;};
 31721                           
 31722                           ;usb_device_msd.c: 343: {;usb_device_msd.c: 344: return 0x00;;	Return value of _MSDTasks
      +                           is never used
 31723  00E35E  98A0               	bcf	4000,4,c	;volatile
 31724                           
 31725                           ;usb_device_msd.c: 357: switch(MSD_State)
 31726  00E360  D11E               	goto	l570
 31727  00E362                     
 31728                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 31729  00E362  0101               	movlb	1	; () banked
 31730  00E364  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 31731  00E366  114C               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 31732  00E368  B4D8               	btfsc	status,2,c
 31733  00E36A  D006               	goto	u15840
 31734                           
 31735                           ; BSR set to: 1
 31736  00E36C  C14B  FFD9         	movff	_USBMSDOutHandle,fsr2l
 31737  00E370  C14C  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 31738  00E374  BEDF               	btfsc	indf2,7,c
 31739  00E376  D122               	goto	l586
 31740  00E378                     u15840:
 31741                           
 31742                           ; BSR set to: 1
 31743                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 31744                           
 31745                           ; BSR set to: 1
 31746  00E378  0E00               	movlw	0
 31747  00E37A  0100               	movlb	0	; () banked
 31748  00E37C  6FB1               	movwf	MSDTasks@i& (0+255),b
 31749  00E37E                     l16645:
 31750                           
 31751                           ; BSR set to: 0
 31752  00E37E  0E1E               	movlw	30
 31753  00E380  65B1               	cpfsgt	MSDTasks@i& (0+255),b
 31754  00E382  D001               	goto	l575
 31755  00E384  D014               	goto	u15860
 31756  00E386                     l575:
 31757                           
 31758                           ; BSR set to: 0
 31759                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 31760                           
 31761                           ; BSR set to: 0
 31762  00E386  51B1               	movf	MSDTasks@i& (0+255),w,b
 31763  00E388  0D01               	mullw	1
 31764  00E38A  0E40               	movlw	64
 31765  00E38C  24F3               	addwf	prodl,w,c
 31766  00E38E  6ED9               	movwf	fsr2l,c
 31767  00E390  0E0D               	movlw	13
 31768  00E392  20F4               	addwfc	prodh,w,c
 31769  00E394  6EDA               	movwf	fsr2h,c
 31770  00E396  51B1               	movf	MSDTasks@i& (0+255),w,b
 31771  00E398  0D01               	mullw	1
 31772  00E39A  0E00               	movlw	low _gblCBW
 31773  00E39C  24F3               	addwf	prodl,w,c
 31774  00E39E  6EE1               	movwf	fsr1l,c
 31775  00E3A0  0E02               	movlw	high _gblCBW
 31776  00E3A2  20F4               	addwfc	prodh,w,c
 31777  00E3A4  6EE2               	movwf	fsr1h,c
 31778  00E3A6  CFDF FFE7          	movff	indf2,indf1
 31779                           
 31780                           ; BSR set to: 0
 31781  00E3AA  2BB1               	incf	MSDTasks@i& (0+255),f,b
 31782  00E3AC  D7E8               	goto	l16645
 31783  00E3AE                     u15860:
 31784                           
 31785                           ; BSR set to: 0
 31786                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 31787                           
 31788                           ; BSR set to: 0
 31789  00E3AE  0101               	movlb	1	; () banked
 31790  00E3B0  EE20 F001          	lfsr	2,1
 31791  00E3B4  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 31792  00E3B6  26D9               	addwf	fsr2l,f,c
 31793  00E3B8  514C               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 31794  00E3BA  22DA               	addwfc	fsr2h,f,c
 31795  00E3BC  0E1F               	movlw	31
 31796  00E3BE  18DE               	xorwf	postinc2,w,c
 31797  00E3C0  A4D8               	btfss	status,2,c
 31798  00E3C2  D077               	goto	l577
 31799                           
 31800                           ; BSR set to: 1
 31801  00E3C4  0E55               	movlw	85
 31802  00E3C6  0102               	movlb	2	; () banked
 31803  00E3C8  1900               	xorwf	_gblCBW& (0+255),w,b
 31804  00E3CA  E173               	bnz	l577
 31805  00E3CC  0E53               	movlw	83
 31806  00E3CE  1901               	xorwf	(_gblCBW+1)& (0+255),w,b
 31807  00E3D0  E170               	bnz	l577
 31808  00E3D2  0E42               	movlw	66
 31809  00E3D4  1902               	xorwf	(_gblCBW+2)& (0+255),w,b
 31810  00E3D6  E16D               	bnz	l577
 31811  00E3D8  0E43               	movlw	67
 31812  00E3DA  1903               	xorwf	(_gblCBW+3)& (0+255),w,b
 31813  00E3DC  A4D8               	btfss	status,2,c
 31814  00E3DE  D069               	goto	l577
 31815                           
 31816                           ; BSR set to: 2
 31817                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 31818  00E3E0  0E01               	movlw	1
 31819  00E3E2  0101               	movlb	1	; () banked
 31820  00E3E4  6F5B               	movwf	_MSDCBWValid& (0+255),b
 31821                           
 31822                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 31823  00E3E6  0102               	movlb	2	; () banked
 31824  00E3E8  510D               	movf	(_gblCBW+13)& (0+255),w,b
 31825  00E3EA  A4D8               	btfss	status,2,c
 31826  00E3EC  D055               	goto	l578
 31827                           
 31828                           ; BSR set to: 2
 31829  00E3EE  0E11               	movlw	17
 31830  00E3F0  610E               	cpfslt	(_gblCBW+14)& (0+255),b
 31831  00E3F2  D052               	goto	l578
 31832                           
 31833                           ; BSR set to: 2
 31834  00E3F4  510E               	movf	(_gblCBW+14)& (0+255),w,b
 31835  00E3F6  B4D8               	btfsc	status,2,c
 31836  00E3F8  D04F               	goto	l578
 31837                           
 31838                           ; BSR set to: 2
 31839  00E3FA  C20C  F0AC         	movff	_gblCBW+12,??_MSDTasks
 31840  00E3FE  0E3F               	movlw	63
 31841  00E400  0100               	movlb	0	; () banked
 31842  00E402  17AC               	andwf	??_MSDTasks& (0+255),f,b
 31843  00E404  A4D8               	btfss	status,2,c
 31844  00E406  D048               	goto	l578
 31845                           
 31846                           ; BSR set to: 0
 31847                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 31848  00E408  0E55               	movlw	85
 31849  00E40A  010D               	movlb	13	; () banked
 31850  00E40C  6F80               	movwf	128,b	;volatile
 31851  00E40E  0E53               	movlw	83
 31852  00E410  6F81               	movwf	129,b	;volatile
 31853  00E412  0E42               	movlw	66
 31854  00E414  6F82               	movwf	130,b	;volatile
 31855  00E416  0E53               	movlw	83
 31856  00E418  6F83               	movwf	131,b	;volatile
 31857                           
 31858                           ; BSR set to: 13
 31859                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 31860  00E41A  C204  FD84         	movff	_gblCBW+4,3460	;volatile
 31861  00E41E  C205  FD85         	movff	_gblCBW+5,3461	;volatile
 31862  00E422  C206  FD86         	movff	_gblCBW+6,3462	;volatile
 31863  00E426  C207  FD87         	movff	_gblCBW+7,3463	;volatile
 31864                           
 31865                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 31866  00E42A  0E00               	movlw	0
 31867  00E42C  6F88               	movwf	136,b	;volatile
 31868  00E42E  0E00               	movlw	0
 31869  00E430  6F89               	movwf	137,b	;volatile
 31870  00E432  0E00               	movlw	0
 31871  00E434  6F8A               	movwf	138,b	;volatile
 31872  00E436  0E00               	movlw	0
 31873  00E438  6F8B               	movwf	139,b	;volatile
 31874                           
 31875                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 31876  00E43A  0E00               	movlw	0
 31877  00E43C  6F8C               	movwf	140,b	;volatile
 31878                           
 31879                           ; BSR set to: 13
 31880                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 31881  00E43E  0101               	movlb	1	; () banked
 31882  00E440  6962               	setf	_MSDCommandState& (0+255),b
 31883                           
 31884                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 31885  00E442  0E00               	movlw	0
 31886  00E444  6F61               	movwf	_MSDReadState& (0+255),b
 31887                           
 31888                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 31889  00E446  0E00               	movlw	0
 31890  00E448  6F60               	movwf	_MSDWriteState& (0+255),b
 31891                           
 31892                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 31893  00E44A  0E00               	movlw	0
 31894  00E44C  6F5F               	movwf	_MSDRetryAttempt& (0+255),b
 31895                           
 31896                           ; BSR set to: 1
 31897                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 31898  00E44E  0E03               	movlw	3
 31899  00E450  0102               	movlb	2	; () banked
 31900  00E452  190F               	xorwf	(_gblCBW+15)& (0+255),w,b
 31901  00E454  B4D8               	btfsc	status,2,c
 31902  00E456  D009               	goto	l579
 31903                           
 31904                           ; BSR set to: 2
 31905                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 31906  00E458  0101               	movlb	1	; () banked
 31907  00E45A  9102               	bcf	(_gblSenseData+2)& (0+255),0,b
 31908  00E45C  9302               	bcf	(_gblSenseData+2)& (0+255),1,b
 31909  00E45E  9502               	bcf	(_gblSenseData+2)& (0+255),2,b
 31910  00E460  9702               	bcf	(_gblSenseData+2)& (0+255),3,b
 31911                           
 31912                           ; BSR set to: 1
 31913                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 31914  00E462  0E00               	movlw	0
 31915  00E464  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 31916                           
 31917                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 31918  00E466  0E00               	movlw	0
 31919  00E468  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 31920  00E46A                     l579:
 31921                           
 31922                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 31923                           
 31924                           ; BSR set to: 1
 31925  00E46A  0102               	movlb	2	; () banked
 31926  00E46C  AF0C               	btfss	(_gblCBW+12)& (0+255),7,b
 31927  00E46E  D002               	goto	l580
 31928                           
 31929                           ; BSR set to: 2
 31930                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 31931  00E470  0E01               	movlw	1
 31932  00E472  D001               	goto	L44
 31933  00E474                     l580:
 31934                           
 31935                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 31936                           
 31937                           ; BSR set to: 1
 31938  00E474  0E02               	movlw	2
 31939  00E476                     L44:
 31940  00E476  0101               	movlb	1	; () banked
 31941  00E478  6F63               	movwf	_MSD_State& (0+255),b
 31942                           
 31943                           ; BSR set to: 1
 31944                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 31945                           
 31946                           ; BSR set to: 1
 31947  00E47A  0102               	movlb	2	; () banked
 31948  00E47C  5108               	movf	(_gblCBW+8)& (0+255),w,b
 31949  00E47E  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 31950  00E480  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 31951  00E482  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 31952  00E484  B4D8               	btfsc	status,2,c
 31953  00E486  D002               	goto	l582
 31954                           
 31955                           ; BSR set to: 2
 31956                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 31957  00E488  0E00               	movlw	0
 31958  00E48A  D001               	goto	L45
 31959  00E48C                     l582:
 31960                           
 31961                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 31962                           
 31963                           ; BSR set to: 1
 31964  00E48C  0E01               	movlw	1
 31965  00E48E                     L45:
 31966  00E48E  0101               	movlb	1	; () banked
 31967  00E490  6F5C               	movwf	_MSDHostNoData& (0+255),b
 31968                           
 31969                           ; BSR set to: 1
 31970                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 31971                           
 31972                           ; BSR set to: 1
 31973  00E492  C20F  F162         	movff	_gblCBW+15,_MSDCommandState
 31974                           
 31975                           ;usb_device_msd.c: 454: }
 31976  00E496  D092               	goto	l586
 31977  00E498                     l578:
 31978                           
 31979                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 31980                           
 31981                           ; BSR set to: 1
 31982  00E498  0E01               	movlw	1
 31983  00E49A  0100               	movlb	0	; () banked
 31984  00E49C  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 31985  00E49E  0E02               	movlw	2
 31986  00E4A0  EC82  F087         	call	_USBStallEndpoint
 31987                           
 31988                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 31989  00E4A4  0E00               	movlw	0
 31990  00E4A6  0100               	movlb	0	; () banked
 31991  00E4A8  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 31992  00E4AA  0E02               	movlw	2
 31993  00E4AC  EC82  F087         	call	_USBStallEndpoint
 31994                           
 31995                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 31996  00E4B0  D085               	goto	l586
 31997  00E4B2                     l577:
 31998                           
 31999                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 32000  00E4B2  0E01               	movlw	1
 32001  00E4B4  0100               	movlb	0	; () banked
 32002  00E4B6  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 32003  00E4B8  0E02               	movlw	2
 32004  00E4BA  EC82  F087         	call	_USBStallEndpoint
 32005                           
 32006                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 32007  00E4BE  0E00               	movlw	0
 32008  00E4C0  0100               	movlb	0	; () banked
 32009  00E4C2  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 32010  00E4C4  0E02               	movlw	2
 32011  00E4C6  EC82  F087         	call	_USBStallEndpoint
 32012                           
 32013                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 32014  00E4CA  0E00               	movlw	0
 32015  00E4CC  0101               	movlb	1	; () banked
 32016  00E4CE  6F5B               	movwf	_MSDCBWValid& (0+255),b
 32017                           
 32018                           ; BSR set to: 1
 32019                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 32020                           
 32021                           ; BSR set to: 1
 32022  00E4D0  D075               	goto	l586
 32023  00E4D2                     
 32024                           ; BSR set to: 1
 32025                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 32026                           
 32027                           ; BSR set to: 1
 32028  00E4D2  EC11  F083         	call	_MSDProcessCommand	;wreg free
 32029  00E4D6  0AFF               	xorlw	255
 32030  00E4D8  A4D8               	btfss	status,2,c
 32031  00E4DA  D070               	goto	l586
 32032  00E4DC  D011               	goto	l591
 32033  00E4DE                     
 32034                           ; BSR set to: 1
 32035                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 32036                           
 32037                           ; BSR set to: 1
 32038  00E4DE  EC11  F083         	call	_MSDProcessCommand	;wreg free
 32039  00E4E2  0AFF               	xorlw	255
 32040  00E4E4  A4D8               	btfss	status,2,c
 32041  00E4E6  D06A               	goto	l586
 32042                           
 32043                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 32044  00E4E8  010D               	movlb	13	; () banked
 32045  00E4EA  518C               	movf	140,w,b	;volatile
 32046  00E4EC  A4D8               	btfss	status,2,c
 32047  00E4EE  D008               	goto	l591
 32048                           
 32049                           ; BSR set to: 13
 32050  00E4F0  5188               	movf	136,w,b	;volatile
 32051  00E4F2  1189               	iorwf	137,w,b	;volatile
 32052  00E4F4  118A               	iorwf	138,w,b	;volatile
 32053  00E4F6  118B               	iorwf	139,w,b	;volatile
 32054  00E4F8  B4D8               	btfsc	status,2,c
 32055  00E4FA  D002               	goto	l591
 32056                           
 32057                           ; BSR set to: 13
 32058                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 32059  00E4FC  0E02               	movlw	2
 32060  00E4FE  6F8C               	movwf	140,b	;volatile
 32061  00E500                     l591:
 32062                           
 32063                           ; BSR set to: 13
 32064                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 32065  00E500  0E03               	movlw	3
 32066  00E502  D03E               	goto	L43
 32067  00E504                     
 32068                           ; BSR set to: 1
 32069                           
 32070                           ; BSR set to: 1
 32071  00E504  C11F  F0AD         	movff	_pBDTEntryIn+4,_MSDTasks$2588
 32072  00E508  C120  F0AE         	movff	_pBDTEntryIn+5,_MSDTasks$2588+1
 32073                           
 32074                           ; BSR set to: 1
 32075                           
 32076                           ; BSR set to: 1
 32077                           
 32078                           ; BSR set to: 1
 32079  00E50C  0100               	movlb	0	; () banked
 32080  00E50E  51AD               	movf	_MSDTasks$2588& (0+255),w,b
 32081  00E510  11AE               	iorwf	(_MSDTasks$2588+1)& (0+255),w,b
 32082  00E512  B4D8               	btfsc	status,2,c
 32083  00E514  D00A               	goto	l593
 32084                           
 32085                           ; BSR set to: 0
 32086  00E516  C11F  F0AF         	movff	_pBDTEntryIn+4,_MSDTasks$2589
 32087  00E51A  C120  F0B0         	movff	_pBDTEntryIn+5,_MSDTasks$2589+1
 32088                           
 32089                           ; BSR set to: 0
 32090                           
 32091                           ; BSR set to: 0
 32092                           
 32093                           ; BSR set to: 0
 32094                           
 32095                           ; BSR set to: 0
 32096  00E51E  C0AF  FFD9         	movff	_MSDTasks$2589,fsr2l
 32097  00E522  C0B0  FFDA         	movff	_MSDTasks$2589+1,fsr2h
 32098  00E526  BEDF               	btfsc	indf2,7,c
 32099  00E528  D049               	goto	l586
 32100  00E52A                     l593:
 32101                           
 32102                           ; BSR set to: 0
 32103                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 32104                           
 32105                           ; BSR set to: 0
 32106  00E52A  0E01               	movlw	1
 32107  00E52C  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 32108  00E52E  0E80               	movlw	128
 32109  00E530  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 32110  00E532  0E0D               	movlw	13
 32111  00E534  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 32112  00E536  0E0D               	movlw	13
 32113  00E538  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 32114  00E53A  0E02               	movlw	2
 32115  00E53C  EC07  F088         	call	_USBTransferOnePacket
 32116  00E540  C060  F149         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 32117  00E544  C061  F14A         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 32118                           
 32119                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 32120  00E548  0101               	movlb	1	; () banked
 32121  00E54A  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 32122  00E54C  114C               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 32123  00E54E  B4D8               	btfsc	status,2,c
 32124  00E550  D006               	goto	u16030
 32125                           
 32126                           ; BSR set to: 1
 32127  00E552  C14B  FFD9         	movff	_USBMSDOutHandle,fsr2l
 32128  00E556  C14C  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 32129  00E55A  BEDF               	btfsc	indf2,7,c
 32130  00E55C  D010               	goto	l602
 32131  00E55E                     u16030:
 32132                           
 32133                           ; BSR set to: 1
 32134                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 32135                           
 32136                           ; BSR set to: 1
 32137  00E55E  0E00               	movlw	0
 32138  00E560  0100               	movlb	0	; () banked
 32139  00E562  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 32140  00E564  0E40               	movlw	64
 32141  00E566  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 32142  00E568  0E0D               	movlw	13
 32143  00E56A  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 32144  00E56C  0E40               	movlw	64
 32145  00E56E  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 32146  00E570  0E02               	movlw	2
 32147  00E572  EC07  F088         	call	_USBTransferOnePacket
 32148  00E576  C060  F14B         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 32149  00E57A  C061  F14C         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 32150  00E57E                     l602:
 32151                           
 32152                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 32153  00E57E  0E00               	movlw	0
 32154  00E580                     L43:
 32155  00E580  0101               	movlb	1	; () banked
 32156  00E582  6F63               	movwf	_MSD_State& (0+255),b
 32157                           
 32158                           ;usb_device_msd.c: 513: break;
 32159  00E584  D01B               	goto	l586
 32160  00E586                     
 32161                           ; BSR set to: 1
 32162                           ;usb_device_msd.c: 518: MSD_State=0x00;
 32163                           
 32164                           ; BSR set to: 1
 32165  00E586  0E00               	movlw	0
 32166  00E588  6F63               	movwf	_MSD_State& (0+255),b
 32167                           
 32168                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 32169  00E58A  0E02               	movlw	2
 32170  00E58C  010D               	movlb	13	; () banked
 32171  00E58E  6F8C               	movwf	140,b	;volatile
 32172                           
 32173                           ; BSR set to: 13
 32174                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 32175  00E590  0E00               	movlw	0
 32176  00E592  0100               	movlb	0	; () banked
 32177  00E594  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 32178  00E596  0E02               	movlw	2
 32179  00E598  EC82  F087         	call	_USBStallEndpoint
 32180                           
 32181                           ;usb_device_msd.c: 521: }
 32182  00E59C  D00F               	goto	l586
 32183  00E59E                     l570:
 32184  00E59E  0101               	movlb	1	; () banked
 32185  00E5A0  5163               	movf	_MSD_State& (0+255),w,b
 32186                           
 32187                           ; Switch size 1, requested type "space"
 32188                           ; Number of cases is 4, Range of values is 0 to 3
 32189                           ; switch strategies available:
 32190                           ; Name         Instructions Cycles
 32191                           ; simple_byte           13     7 (average)
 32192                           ;	Chosen strategy is simple_byte
 32193  00E5A2  0A00               	xorlw	0	; case 0
 32194  00E5A4  B4D8               	btfsc	status,2,c
 32195  00E5A6  D6DD               	goto	l571
 32196  00E5A8  0A01               	xorlw	1	; case 1
 32197  00E5AA  B4D8               	btfsc	status,2,c
 32198  00E5AC  D792               	goto	l587
 32199  00E5AE  0A03               	xorlw	3	; case 2
 32200  00E5B0  B4D8               	btfsc	status,2,c
 32201  00E5B2  D795               	goto	l589
 32202  00E5B4  0A01               	xorlw	1	; case 3
 32203  00E5B6  B4D8               	btfsc	status,2,c
 32204  00E5B8  D7A5               	goto	l592
 32205  00E5BA  D7E5               	goto	l605
 32206  00E5BC                     l586:
 32207                           
 32208                           ;usb_device_msd.c: 524: {PIE2bits.USBIE = 1;};
 32209  00E5BC  88A0               	bsf	4000,4,c	;volatile
 32210                           
 32211                           ;usb_device_msd.c: 526: return MSD_State;;	Return value of _MSDTasks is never used
 32212  00E5BE  0012               	return		;funcret
 32213  00E5C0                     __end_of_MSDTasks:
 32214                           	opt stack 0
 32215                           tblptru	equ	0xFF8
 32216                           tblptrh	equ	0xFF7
 32217                           tblptrl	equ	0xFF6
 32218                           tablat	equ	0xFF5
 32219                           prodh	equ	0xFF4
 32220                           prodl	equ	0xFF3
 32221                           intcon	equ	0xFF2
 32222                           postinc0	equ	0xFEE
 32223                           wreg	equ	0xFE8
 32224                           indf1	equ	0xFE7
 32225                           postinc1	equ	0xFE6
 32226                           postdec1	equ	0xFE5
 32227                           plusw1	equ	0xFE3
 32228                           fsr1h	equ	0xFE2
 32229                           fsr1l	equ	0xFE1
 32230                           indf2	equ	0xFDF
 32231                           postinc2	equ	0xFDE
 32232                           postdec2	equ	0xFDD
 32233                           plusw2	equ	0xFDB
 32234                           fsr2h	equ	0xFDA
 32235                           fsr2l	equ	0xFD9
 32236                           status	equ	0xFD8
 32237                           
 32238 ;; *************** function _MSDProcessCommand *****************
 32239 ;; Defined at:
 32240 ;;		line 553 in file "usb_device_msd.c"
 32241 ;; Parameters:    Size  Location     Type
 32242 ;;		None
 32243 ;; Auto vars:     Size  Location     Type
 32244 ;;		None
 32245 ;; Return value:  Size  Location     Type
 32246 ;;                  1    wreg      unsigned char 
 32247 ;; Registers used:
 32248 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 32249 ;; Tracked objects:
 32250 ;;		On entry : 0/0
 32251 ;;		On exit  : 0/0
 32252 ;;		Unchanged: 0/0
 32253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32256 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32257 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32258 ;;Total ram usage:        5 bytes
 32259 ;; Hardware stack levels used:    1
 32260 ;; Hardware stack levels required when called:   19
 32261 ;; This function calls:
 32262 ;;		_ExternalFlash_MediaDetect
 32263 ;;		_ExternalFlash_MediaInitialize
 32264 ;;		_MSDProcessCommandMediaAbsent
 32265 ;;		_MSDProcessCommandMediaPresent
 32266 ;; This function is called by:
 32267 ;;		_MSDTasks
 32268 ;; This function uses a non-reentrant model
 32269 ;;
 32270                           
 32271                           	psect	text128
 32272  010622                     __ptext128:
 32273                           	opt stack 0
 32274  010622                     _MSDProcessCommand:
 32275                           	opt stack 9
 32276                           
 32277                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 32278                           
 32279                           ;incstack = 0
 32280  010622  C29E  F060         	movff	_LUN+21,ExternalFlash_MediaDetect@config
 32281  010626  C29F  F061         	movff	_LUN+22,ExternalFlash_MediaDetect@config+1
 32282  01062A  EE22  F092         	lfsr	2,_LUN+9
 32283  01062E  D801               	call	u14018
 32284  010630  D00A               	goto	u14019
 32285  010632                     u14018:
 32286  010632  0005               	push	
 32287  010634  6EFA               	movwf	pclath,c
 32288  010636  50DE               	movf	postinc2,w,c
 32289  010638  6EFD               	movwf	tosl,c
 32290  01063A  50DE               	movf	postinc2,w,c
 32291  01063C  6EFE               	movwf	tosh,c
 32292  01063E  50DE               	movf	postinc2,w,c
 32293  010640  6EFF               	movwf	tosu,c
 32294  010642  50FA               	movf	pclath,w,c
 32295  010644  0012               	return		;indir
 32296  010646                     u14019:
 32297  010646  0900               	iorlw	0
 32298  010648  B4D8               	btfsc	status,2,c
 32299  01064A  D00C               	goto	u14030
 32300  01064C  0102               	movlb	2	; () banked
 32301  01064E  510D               	movf	(_gblCBW+13)& (0+255),w,b
 32302  010650  0D01               	mullw	1
 32303  010652  0E5D               	movlw	low _SoftDetach
 32304  010654  24F3               	addwf	prodl,w,c
 32305  010656  6ED9               	movwf	fsr2l,c
 32306  010658  0E01               	movlw	high _SoftDetach
 32307  01065A  20F4               	addwfc	prodh,w,c
 32308  01065C  6EDA               	movwf	fsr2h,c
 32309  01065E  04DE               	decf	postinc2,w,c
 32310  010660  A4D8               	btfss	status,2,c
 32311  010662  D01D               	goto	l608
 32312  010664                     u14030:
 32313                           
 32314                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 32315                           
 32316                           ; BSR set to: 2
 32317  010664  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 32318  010668  0E01               	movlw	1
 32319  01066A  0100               	movlb	0	; () banked
 32320  01066C  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 32321  01066E  0E00               	movlw	0
 32322  010670  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 32323  010672  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 32324  010674  D003               	goto	u14044
 32325  010676                     u14045:
 32326  010676  90D8               	bcf	status,0,c
 32327  010678  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 32328  01067A  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 32329  01067C                     u14044:
 32330  01067C  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 32331  01067E  D7FB               	goto	u14045
 32332  010680  0100               	movlb	0	; () banked
 32333  010682  1DA8               	comf	(??_MSDProcessCommand+1)& (0+255),w,b
 32334  010684  6FAA               	movwf	(??_MSDProcessCommand+3)& (0+255),b
 32335  010686  1DA9               	comf	(??_MSDProcessCommand+2)& (0+255),w,b
 32336  010688  6FAB               	movwf	(??_MSDProcessCommand+4)& (0+255),b
 32337  01068A  51AA               	movf	(??_MSDProcessCommand+3)& (0+255),w,b
 32338  01068C  0101               	movlb	1	; () banked
 32339  01068E  1747               	andwf	_gblMediaPresent& (0+255),f,b
 32340  010690  0100               	movlb	0	; () banked
 32341  010692  51AB               	movf	(??_MSDProcessCommand+4)& (0+255),w,b
 32342  010694  0101               	movlb	1	; () banked
 32343  010696  1748               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 32344                           
 32345                           ; BSR set to: 1
 32346                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 32347  010698  EC41  F0A1         	call	_MSDProcessCommandMediaAbsent	;wreg free
 32348                           
 32349                           ;usb_device_msd.c: 563: }
 32350  01069C  D058               	goto	l615
 32351  01069E                     l608:
 32352                           
 32353                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 32354  01069E  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 32355  0106A2  0E01               	movlw	1
 32356  0106A4  0100               	movlb	0	; () banked
 32357  0106A6  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 32358  0106A8  0E00               	movlw	0
 32359  0106AA  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 32360  0106AC  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 32361  0106AE  D003               	goto	u14054
 32362  0106B0                     u14055:
 32363  0106B0  90D8               	bcf	status,0,c
 32364  0106B2  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 32365  0106B4  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 32366  0106B6                     u14054:
 32367  0106B6  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 32368  0106B8  D7FB               	goto	u14055
 32369  0106BA  0101               	movlb	1	; () banked
 32370  0106BC  5147               	movf	_gblMediaPresent& (0+255),w,b
 32371  0106BE  0100               	movlb	0	; () banked
 32372  0106C0  17A8               	andwf	(??_MSDProcessCommand+1)& (0+255),f,b
 32373  0106C2  0101               	movlb	1	; () banked
 32374  0106C4  5148               	movf	(_gblMediaPresent+1)& (0+255),w,b
 32375  0106C6  0100               	movlb	0	; () banked
 32376  0106C8  17A9               	andwf	(??_MSDProcessCommand+2)& (0+255),f,b
 32377  0106CA  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 32378  0106CC  11A9               	iorwf	(??_MSDProcessCommand+2)& (0+255),w,b
 32379  0106CE  A4D8               	btfss	status,2,c
 32380  0106D0  D03C               	goto	l612
 32381                           
 32382                           ; BSR set to: 0
 32383                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 32384  0106D2  C29E  F060         	movff	_LUN+21,ExternalFlash_MediaInitialize@config
 32385  0106D6  C29F  F061         	movff	_LUN+22,ExternalFlash_MediaInitialize@config+1
 32386  0106DA  D801               	call	u14078
 32387  0106DC  D00B               	goto	u14079
 32388  0106DE                     u14078:
 32389  0106DE  0005               	push	
 32390  0106E0  6EFA               	movwf	pclath,c
 32391  0106E2  0102               	movlb	2	; () banked
 32392  0106E4  5189               	movf	_LUN& (0+255),w,b
 32393  0106E6  6EFD               	movwf	tosl,c
 32394  0106E8  518A               	movf	(_LUN+1)& (0+255),w,b
 32395  0106EA  6EFE               	movwf	tosh,c
 32396  0106EC  518B               	movf	(_LUN+2)& (0+255),w,b
 32397  0106EE  6EFF               	movwf	tosu,c
 32398  0106F0  50FA               	movf	pclath,w,c
 32399  0106F2  0012               	return		;indir
 32400  0106F4                     u14079:
 32401  0106F4  0100               	movlb	0	; () banked
 32402  0106F6  5160               	movf	?_ExternalFlash_MediaInitialize& (0+255),w,b
 32403  0106F8  1161               	iorwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),w,b
 32404  0106FA  B4D8               	btfsc	status,2,c
 32405  0106FC  D023               	goto	l613
 32406                           
 32407                           ; BSR set to: 0
 32408                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 32409  0106FE  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 32410  010702  0E01               	movlw	1
 32411  010704  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 32412  010706  0E00               	movlw	0
 32413  010708  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 32414  01070A  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 32415  01070C  D003               	goto	u14094
 32416  01070E                     u14095:
 32417  01070E  90D8               	bcf	status,0,c
 32418  010710  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 32419  010712  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 32420  010714                     u14094:
 32421  010714  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 32422  010716  D7FB               	goto	u14095
 32423  010718  0100               	movlb	0	; () banked
 32424  01071A  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 32425  01071C  0101               	movlb	1	; () banked
 32426  01071E  1347               	iorwf	_gblMediaPresent& (0+255),f,b
 32427  010720  0100               	movlb	0	; () banked
 32428  010722  51A9               	movf	(??_MSDProcessCommand+2)& (0+255),w,b
 32429  010724  0101               	movlb	1	; () banked
 32430  010726  1348               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 32431                           
 32432                           ; BSR set to: 1
 32433                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 32434  010728  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 32435  01072A  0BF0               	andlw	-16
 32436  01072C  0906               	iorlw	6
 32437  01072E  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 32438                           
 32439                           ; BSR set to: 1
 32440                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 32441  010730  0E28               	movlw	40
 32442  010732  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 32443                           
 32444                           ; BSR set to: 1
 32445                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 32446  010734  0E00               	movlw	0
 32447  010736  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 32448                           
 32449                           ; BSR set to: 1
 32450                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 32451  010738  0E01               	movlw	1
 32452  01073A  010D               	movlb	13	; () banked
 32453  01073C  6F8C               	movwf	140,b	;volatile
 32454                           
 32455                           ; BSR set to: 13
 32456                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 32457  01073E  ECD4  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 32458                           
 32459                           ;usb_device_msd.c: 589: }
 32460  010742  D005               	goto	l615
 32461  010744                     l613:
 32462                           
 32463                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 32464  010744  EC41  F0A1         	call	_MSDProcessCommandMediaAbsent	;wreg free
 32465                           
 32466                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 32467  010748  D002               	goto	l615
 32468  01074A                     l612:
 32469                           
 32470                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 32471  01074A  ECD4  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 32472  01074E                     l615:
 32473                           
 32474                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 32475  01074E  0101               	movlb	1	; () banked
 32476  010750  5162               	movf	_MSDCommandState& (0+255),w,b
 32477  010752  0012               	return	
 32478  010754                     __end_of_MSDProcessCommand:
 32479                           	opt stack 0
 32480                           tosu	equ	0xFFF
 32481                           tosh	equ	0xFFE
 32482                           tosl	equ	0xFFD
 32483                           pclath	equ	0xFFA
 32484                           tblptru	equ	0xFF8
 32485                           tblptrh	equ	0xFF7
 32486                           tblptrl	equ	0xFF6
 32487                           tablat	equ	0xFF5
 32488                           prodh	equ	0xFF4
 32489                           prodl	equ	0xFF3
 32490                           intcon	equ	0xFF2
 32491                           postinc0	equ	0xFEE
 32492                           wreg	equ	0xFE8
 32493                           indf1	equ	0xFE7
 32494                           postinc1	equ	0xFE6
 32495                           postdec1	equ	0xFE5
 32496                           plusw1	equ	0xFE3
 32497                           fsr1h	equ	0xFE2
 32498                           fsr1l	equ	0xFE1
 32499                           indf2	equ	0xFDF
 32500                           postinc2	equ	0xFDE
 32501                           postdec2	equ	0xFDD
 32502                           plusw2	equ	0xFDB
 32503                           fsr2h	equ	0xFDA
 32504                           fsr2l	equ	0xFD9
 32505                           status	equ	0xFD8
 32506                           
 32507 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 32508 ;; Defined at:
 32509 ;;		line 635 in file "usb_device_msd.c"
 32510 ;; Parameters:    Size  Location     Type
 32511 ;;		None
 32512 ;; Auto vars:     Size  Location     Type
 32513 ;;		None
 32514 ;; Return value:  Size  Location     Type
 32515 ;;                  1    wreg      void 
 32516 ;; Registers used:
 32517 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 32518 ;; Tracked objects:
 32519 ;;		On entry : 0/0
 32520 ;;		On exit  : 0/0
 32521 ;;		Unchanged: 0/0
 32522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32527 ;;Total ram usage:        0 bytes
 32528 ;; Hardware stack levels used:    1
 32529 ;; Hardware stack levels required when called:   18
 32530 ;; This function calls:
 32531 ;;		_MSDErrorHandler
 32532 ;;		_MSDProcessCommandMediaPresent
 32533 ;;		_ResetSenseData
 32534 ;; This function is called by:
 32535 ;;		_MSDProcessCommand
 32536 ;; This function uses a non-reentrant model
 32537 ;;
 32538                           
 32539                           	psect	text129
 32540  014282                     __ptext129:
 32541                           	opt stack 0
 32542  014282                     _MSDProcessCommandMediaAbsent:
 32543                           	opt stack 9
 32544                           
 32545                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 32546                           
 32547                           ; BSR set to: 1
 32548                           ;incstack = 0
 32549  014282  D01E               	goto	l619
 32550  014284                     
 32551                           ;usb_device_msd.c: 646: ResetSenseData();
 32552  014284  EC72  F0A1         	call	_ResetSenseData	;wreg free
 32553                           
 32554                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 32555  014288  0101               	movlb	1	; () banked
 32556  01428A  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 32557  01428C  0BF0               	andlw	-16
 32558  01428E  0902               	iorlw	2
 32559  014290  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 32560                           
 32561                           ; BSR set to: 1
 32562                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 32563  014292  0E3A               	movlw	58
 32564  014294  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 32565                           
 32566                           ; BSR set to: 1
 32567                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 32568  014296  0E00               	movlw	0
 32569  014298  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 32570                           
 32571                           ; BSR set to: 1
 32572                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 32573  01429A  ECD4  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 32574                           
 32575                           ;usb_device_msd.c: 655: break;
 32576  01429E  0012               	return	
 32577  0142A0                     
 32578                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 32579  0142A0  0E01               	movlw	1
 32580  0142A2  010D               	movlb	13	; () banked
 32581  0142A4  6F8C               	movwf	140,b	;volatile
 32582                           
 32583                           ; BSR set to: 13
 32584                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 32585  0142A6  0101               	movlb	1	; () banked
 32586  0142A8  6962               	setf	_MSDCommandState& (0+255),b
 32587                           
 32588                           ;usb_device_msd.c: 665: break;
 32589  0142AA  0012               	return	
 32590  0142AC                     
 32591                           ; BSR set to: 1
 32592                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 32593                           
 32594                           ; BSR set to: 1
 32595  0142AC  ECD4  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 32596                           
 32597                           ;usb_device_msd.c: 671: break;
 32598  0142B0  0012               	return	
 32599  0142B2                     
 32600                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 32601  0142B2  ECD4  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 32602                           
 32603                           ;usb_device_msd.c: 677: break;
 32604  0142B6  0012               	return	
 32605  0142B8                     
 32606                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 32607  0142B8  0E7F               	movlw	127
 32608  0142BA  ECD5  F084         	call	_MSDErrorHandler
 32609                           
 32610                           ;usb_device_msd.c: 685: }
 32611                           
 32612                           ;usb_device_msd.c: 684: break;
 32613  0142BE  0012               	return	
 32614  0142C0                     l619:
 32615  0142C0  0101               	movlb	1	; () banked
 32616  0142C2  5162               	movf	_MSDCommandState& (0+255),w,b
 32617                           
 32618                           ; Switch size 1, requested type "space"
 32619                           ; Number of cases is 5, Range of values is 0 to 253
 32620                           ; switch strategies available:
 32621                           ; Name         Instructions Cycles
 32622                           ; simple_byte           16     9 (average)
 32623                           ;	Chosen strategy is simple_byte
 32624  0142C4  0A00               	xorlw	0	; case 0
 32625  0142C6  B4D8               	btfsc	status,2,c
 32626  0142C8  D7EB               	goto	l622
 32627  0142CA  0A03               	xorlw	3	; case 3
 32628  0142CC  B4D8               	btfsc	status,2,c
 32629  0142CE  D7DA               	goto	l620
 32630  0142D0  0A11               	xorlw	17	; case 18
 32631  0142D2  B4D8               	btfsc	status,2,c
 32632  0142D4  D7EB               	goto	l624
 32633  0142D6  0A0C               	xorlw	12	; case 30
 32634  0142D8  B4D8               	btfsc	status,2,c
 32635  0142DA  D7E2               	goto	l622
 32636  0142DC  0AE3               	xorlw	227	; case 253
 32637  0142DE  B4D8               	btfsc	status,2,c
 32638  0142E0  D7E8               	goto	l625
 32639  0142E2  D7EA               	goto	l626
 32640  0142E4                     __end_of_MSDProcessCommandMediaAbsent:
 32641                           	opt stack 0
 32642                           tosu	equ	0xFFF
 32643                           tosh	equ	0xFFE
 32644                           tosl	equ	0xFFD
 32645                           pclath	equ	0xFFA
 32646                           tblptru	equ	0xFF8
 32647                           tblptrh	equ	0xFF7
 32648                           tblptrl	equ	0xFF6
 32649                           tablat	equ	0xFF5
 32650                           prodh	equ	0xFF4
 32651                           prodl	equ	0xFF3
 32652                           intcon	equ	0xFF2
 32653                           postinc0	equ	0xFEE
 32654                           wreg	equ	0xFE8
 32655                           indf1	equ	0xFE7
 32656                           postinc1	equ	0xFE6
 32657                           postdec1	equ	0xFE5
 32658                           plusw1	equ	0xFE3
 32659                           fsr1h	equ	0xFE2
 32660                           fsr1l	equ	0xFE1
 32661                           indf2	equ	0xFDF
 32662                           postinc2	equ	0xFDE
 32663                           postdec2	equ	0xFDD
 32664                           plusw2	equ	0xFDB
 32665                           fsr2h	equ	0xFDA
 32666                           fsr2l	equ	0xFD9
 32667                           status	equ	0xFD8
 32668                           
 32669 ;; *************** function _MSDProcessCommandMediaPresent *****************
 32670 ;; Defined at:
 32671 ;;		line 712 in file "usb_device_msd.c"
 32672 ;; Parameters:    Size  Location     Type
 32673 ;;		None
 32674 ;; Auto vars:     Size  Location     Type
 32675 ;;  capacity        4   66[BANK0 ] struct .
 32676 ;;  sectorSize      4   62[BANK0 ] struct .
 32677 ;;  i               1   70[BANK0 ] unsigned char 
 32678 ;;  NumBytesInPa    1   61[BANK0 ] unsigned char 
 32679 ;; Return value:  Size  Location     Type
 32680 ;;                  1    wreg      void 
 32681 ;; Registers used:
 32682 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 32683 ;; Tracked objects:
 32684 ;;		On entry : 0/0
 32685 ;;		On exit  : 0/0
 32686 ;;		Unchanged: 0/0
 32687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32689 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32690 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32691 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32692 ;;Total ram usage:       14 bytes
 32693 ;; Hardware stack levels used:    1
 32694 ;; Hardware stack levels required when called:   17
 32695 ;; This function calls:
 32696 ;;		_ExternalFlash_CapacityRead
 32697 ;;		_ExternalFlash_SectorSizeRead
 32698 ;;		_ExternalFlash_WriteProtectStateGet
 32699 ;;		_MSDCheckForErrorCases
 32700 ;;		_MSDComputeDeviceInAndResidue
 32701 ;;		_MSDErrorHandler
 32702 ;;		_MSDReadHandler
 32703 ;;		_MSDWriteHandler
 32704 ;;		_ResetSenseData
 32705 ;;		_USBTransferOnePacket
 32706 ;;		_memcpy
 32707 ;; This function is called by:
 32708 ;;		_MSDProcessCommand
 32709 ;;		_MSDProcessCommandMediaAbsent
 32710 ;; This function uses a non-reentrant model
 32711 ;;
 32712                           
 32713                           	psect	text130
 32714  00BDA8                     __ptext130:
 32715                           	opt stack 0
 32716  00BDA8                     _MSDProcessCommandMediaPresent:
 32717                           	opt stack 10
 32718                           
 32719                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 32720                           
 32721                           ;incstack = 0
 32722  00BDA8  D1D0               	goto	l630
 32723  00BDAA                     
 32724                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 32725  00BDAA  EC22  F078         	call	_MSDReadHandler	;wreg free
 32726  00BDAE  0900               	iorlw	0
 32727  00BDB0  A4D8               	btfss	status,2,c
 32728  00BDB2  0012               	return	
 32729                           
 32730                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 32731  00BDB4  0101               	movlb	1	; () banked
 32732  00BDB6  6962               	setf	_MSDCommandState& (0+255),b
 32733                           
 32734                           ; BSR set to: 1
 32735                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 32736  00BDB8  0012               	return	
 32737  00BDBA                     
 32738                           ; BSR set to: 1
 32739                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 32740                           
 32741                           ; BSR set to: 1
 32742  00BDBA  ECF5  F06A         	call	_MSDWriteHandler	;wreg free
 32743  00BDBE  0900               	iorlw	0
 32744  00BDC0  A4D8               	btfss	status,2,c
 32745  00BDC2  0012               	return	
 32746                           
 32747                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 32748  00BDC4  0101               	movlb	1	; () banked
 32749  00BDC6  6962               	setf	_MSDCommandState& (0+255),b
 32750                           
 32751                           ; BSR set to: 1
 32752                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 32753  00BDC8  0012               	return	
 32754  00BDCA                     
 32755                           ; BSR set to: 1
 32756                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 32757                           
 32758                           ; BSR set to: 1
 32759  00BDCA  055C               	decf	_MSDHostNoData& (0+255),w,b
 32760  00BDCC  A4D8               	btfss	status,2,c
 32761  00BDCE  D002               	goto	l637
 32762                           
 32763                           ; BSR set to: 1
 32764                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 32765  00BDD0  6962               	setf	_MSDCommandState& (0+255),b
 32766                           
 32767                           ;usb_device_msd.c: 751: break;
 32768  00BDD2  0012               	return	
 32769  00BDD4                     l637:
 32770                           
 32771                           ; BSR set to: 1
 32772                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 32773  00BDD4  C212  F146         	movff	_gblCBW+18,_TransferLength+1
 32774                           
 32775                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 32776  00BDD8  C213  F145         	movff	_gblCBW+19,_TransferLength
 32777                           
 32778                           ; BSR set to: 1
 32779                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 32780  00BDDC  C145  F06A         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 32781  00BDE0  C146  F06B         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 32782  00BDE4  0100               	movlb	0	; () banked
 32783  00BDE6  6B6C               	clrf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 32784  00BDE8  6B6D               	clrf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 32785  00BDEA  EC62  F085         	call	_MSDCheckForErrorCases	;wreg free
 32786  00BDEE  0900               	iorlw	0
 32787  00BDF0  A4D8               	btfss	status,2,c
 32788  00BDF2  0012               	return	
 32789                           
 32790                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 32791                           
 32792                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 32793  00BDF4  0E00               	movlw	0
 32794  00BDF6  0100               	movlb	0	; () banked
 32795  00BDF8  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 32796  00BDFA  0E24               	movlw	36
 32797  00BDFC  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 32798  00BDFE  EC0E  F095         	call	_MSDComputeDeviceInAndResidue	;wreg free
 32799                           
 32800                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 32801  00BE02  0E00               	movlw	0
 32802  00BE04  0100               	movlb	0	; () banked
 32803  00BE06  6F60               	movwf	memcpy@d1& (0+255),b
 32804  00BE08  0E06               	movlw	6
 32805  00BE0A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 32806  00BE0C  0E60               	movlw	low _inq_resp
 32807  00BE0E  6F62               	movwf	memcpy@s1& (0+255),b
 32808  00BE10  0EA1               	movlw	high _inq_resp
 32809  00BE12  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 32810  00BE14  0E00               	movlw	0
 32811  00BE16  6F65               	movwf	(memcpy@n+1)& (0+255),b
 32812  00BE18  0E24               	movlw	36
 32813  00BE1A  6F64               	movwf	memcpy@n& (0+255),b
 32814  00BE1C  EC05  F0A2         	call	_memcpy	;wreg free
 32815                           
 32816                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 32817  00BE20  0EFD               	movlw	253
 32818  00BE22  0101               	movlb	1	; () banked
 32819  00BE24  6F62               	movwf	_MSDCommandState& (0+255),b
 32820                           
 32821                           ;usb_device_msd.c: 773: break;
 32822  00BE26  0012               	return	
 32823  00BE28                     
 32824                           ; BSR set to: 1
 32825                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 32826                           
 32827                           ; BSR set to: 1
 32828  00BE28  C29E  F060         	movff	_LUN+21,ExternalFlash_CapacityRead@config
 32829  00BE2C  C29F  F061         	movff	_LUN+22,ExternalFlash_CapacityRead@config+1
 32830  00BE30  EE22  F08C         	lfsr	2,_LUN+3
 32831  00BE34  D801               	call	u12348
 32832  00BE36  D00A               	goto	u12349
 32833  00BE38                     u12348:
 32834  00BE38  0005               	push	
 32835  00BE3A  6EFA               	movwf	pclath,c
 32836  00BE3C  50DE               	movf	postinc2,w,c
 32837  00BE3E  6EFD               	movwf	tosl,c
 32838  00BE40  50DE               	movf	postinc2,w,c
 32839  00BE42  6EFE               	movwf	tosh,c
 32840  00BE44  50DE               	movf	postinc2,w,c
 32841  00BE46  6EFF               	movwf	tosu,c
 32842  00BE48  50FA               	movf	pclath,w,c
 32843  00BE4A  0012               	return		;indir
 32844  00BE4C                     u12349:
 32845  00BE4C  C060  F0A2         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 32846  00BE50  C061  F0A3         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 32847  00BE54  C062  F0A4         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 32848  00BE58  C063  F0A5         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 32849                           
 32850                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 32851  00BE5C  C29E  F060         	movff	_LUN+21,ExternalFlash_SectorSizeRead@config
 32852  00BE60  C29F  F061         	movff	_LUN+22,ExternalFlash_SectorSizeRead@config+1
 32853  00BE64  EE22  F08F         	lfsr	2,_LUN+6
 32854  00BE68  D801               	call	u12358
 32855  00BE6A  D00A               	goto	u12359
 32856  00BE6C                     u12358:
 32857  00BE6C  0005               	push	
 32858  00BE6E  6EFA               	movwf	pclath,c
 32859  00BE70  50DE               	movf	postinc2,w,c
 32860  00BE72  6EFD               	movwf	tosl,c
 32861  00BE74  50DE               	movf	postinc2,w,c
 32862  00BE76  6EFE               	movwf	tosh,c
 32863  00BE78  50DE               	movf	postinc2,w,c
 32864  00BE7A  6EFF               	movwf	tosu,c
 32865  00BE7C  50FA               	movf	pclath,w,c
 32866  00BE7E  0012               	return		;indir
 32867  00BE80                     u12359:
 32868  00BE80  0100               	movlb	0	; () banked
 32869  00BE82  C060  F09E         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 32870  00BE86  C061  F09F         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 32871  00BE8A  6BA0               	clrf	(MSDProcessCommandMediaPresent@sectorSize+2)& (0+255),b
 32872  00BE8C  6BA1               	clrf	(MSDProcessCommandMediaPresent@sectorSize+3)& (0+255),b
 32873                           
 32874                           ; BSR set to: 0
 32875                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 32876  00BE8E  EE26 F000          	lfsr	2,1536
 32877  00BE92  C0A5  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 32878                           
 32879                           ; BSR set to: 0
 32880                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 32881  00BE96  EE26 F001          	lfsr	2,1537	;volatile
 32882  00BE9A  C0A4  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 32883                           
 32884                           ; BSR set to: 0
 32885                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 32886  00BE9E  EE26 F002          	lfsr	2,1538	;volatile
 32887  00BEA2  C0A3  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 32888                           
 32889                           ; BSR set to: 0
 32890                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 32891  00BEA6  EE26 F003          	lfsr	2,1539	;volatile
 32892  00BEAA  C0A2  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 32893                           
 32894                           ; BSR set to: 0
 32895                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 32896  00BEAE  EE26 F004          	lfsr	2,1540	;volatile
 32897  00BEB2  C0A1  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 32898                           
 32899                           ; BSR set to: 0
 32900                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 32901  00BEB6  EE26 F005          	lfsr	2,1541	;volatile
 32902  00BEBA  C0A0  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 32903                           
 32904                           ; BSR set to: 0
 32905                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 32906  00BEBE  EE26 F006          	lfsr	2,1542	;volatile
 32907  00BEC2  C09F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 32908                           
 32909                           ; BSR set to: 0
 32910                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 32911  00BEC6  EE26 F007          	lfsr	2,1543	;volatile
 32912  00BECA  C09E  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 32913                           
 32914                           ; BSR set to: 0
 32915                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 32916  00BECE  0E00               	movlw	0
 32917  00BED0  0101               	movlb	1	; () banked
 32918  00BED2  6F46               	movwf	(_TransferLength+1)& (0+255),b
 32919  00BED4  0E08               	movlw	8
 32920  00BED6  6F45               	movwf	_TransferLength& (0+255),b
 32921                           
 32922                           ; BSR set to: 1
 32923                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 32924  00BED8  0E00               	movlw	0
 32925  00BEDA  0100               	movlb	0	; () banked
 32926  00BEDC  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 32927  00BEDE  0E08               	movlw	8
 32928  00BEE0  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 32929  00BEE2  EC0E  F095         	call	_MSDComputeDeviceInAndResidue	;wreg free
 32930                           
 32931                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 32932  00BEE6  0EFD               	movlw	253
 32933  00BEE8  0101               	movlb	1	; () banked
 32934  00BEEA  6F62               	movwf	_MSDCommandState& (0+255),b
 32935                           
 32936                           ;usb_device_msd.c: 802: break;
 32937  00BEEC  0012               	return	
 32938  00BEEE                     
 32939                           ; BSR set to: 1
 32940                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 32941                           
 32942                           ; BSR set to: 1
 32943  00BEEE  055C               	decf	_MSDHostNoData& (0+255),w,b
 32944  00BEF0  A4D8               	btfss	status,2,c
 32945  00BEF2  D002               	goto	l641
 32946                           
 32947                           ; BSR set to: 1
 32948                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 32949  00BEF4  6962               	setf	_MSDCommandState& (0+255),b
 32950                           
 32951                           ;usb_device_msd.c: 814: break;
 32952  00BEF6  0012               	return	
 32953  00BEF8                     l641:
 32954                           
 32955                           ; BSR set to: 1
 32956                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 32957                           
 32958                           ; BSR set to: 1
 32959  00BEF8  0E00               	movlw	0
 32960  00BEFA  6F46               	movwf	(_TransferLength+1)& (0+255),b
 32961  00BEFC  0E12               	movlw	18
 32962  00BEFE  6F45               	movwf	_TransferLength& (0+255),b
 32963                           
 32964                           ; BSR set to: 1
 32965                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 32966  00BF00  0E00               	movlw	0
 32967  00BF02  0100               	movlb	0	; () banked
 32968  00BF04  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 32969  00BF06  0E12               	movlw	18
 32970  00BF08  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 32971  00BF0A  EC0E  F095         	call	_MSDComputeDeviceInAndResidue	;wreg free
 32972                           
 32973                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 32974  00BF0E  0E00               	movlw	0
 32975  00BF10  0100               	movlb	0	; () banked
 32976  00BF12  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 32977  00BF14                     l13597:
 32978                           
 32979                           ; BSR set to: 0
 32980  00BF14  0E11               	movlw	17
 32981  00BF16  65A6               	cpfsgt	MSDProcessCommandMediaPresent@i& (0+255),b
 32982  00BF18  D001               	goto	l642
 32983  00BF1A  D014               	goto	u12380
 32984  00BF1C                     l642:
 32985                           
 32986                           ; BSR set to: 0
 32987                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 32988                           
 32989                           ; BSR set to: 0
 32990  00BF1C  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 32991  00BF1E  0D01               	mullw	1
 32992  00BF20  0E00               	movlw	low _gblSenseData
 32993  00BF22  24F3               	addwf	prodl,w,c
 32994  00BF24  6ED9               	movwf	fsr2l,c
 32995  00BF26  0E01               	movlw	high _gblSenseData
 32996  00BF28  20F4               	addwfc	prodh,w,c
 32997  00BF2A  6EDA               	movwf	fsr2h,c
 32998  00BF2C  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 32999  00BF2E  0D01               	mullw	1
 33000  00BF30  0E00               	movlw	0
 33001  00BF32  24F3               	addwf	prodl,w,c
 33002  00BF34  6EE1               	movwf	fsr1l,c
 33003  00BF36  0E06               	movlw	6
 33004  00BF38  20F4               	addwfc	prodh,w,c
 33005  00BF3A  6EE2               	movwf	fsr1h,c
 33006  00BF3C  CFDF FFE7          	movff	indf2,indf1
 33007                           
 33008                           ; BSR set to: 0
 33009  00BF40  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 33010  00BF42  D7E8               	goto	l13597
 33011  00BF44                     u12380:
 33012                           
 33013                           ; BSR set to: 0
 33014                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 33015                           
 33016                           ; BSR set to: 0
 33017  00BF44  0EFD               	movlw	253
 33018  00BF46  0101               	movlb	1	; () banked
 33019  00BF48  6F62               	movwf	_MSDCommandState& (0+255),b
 33020                           
 33021                           ;usb_device_msd.c: 827: break;
 33022  00BF4A  0012               	return	
 33023  00BF4C                     l644:
 33024                           
 33025                           ; BSR set to: 1
 33026                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 33027  00BF4C  0E03               	movlw	3
 33028  00BF4E  CFE8 F600          	movff	wreg,1536
 33029                           
 33030                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 33031  00BF52  0E00               	movlw	0
 33032  00BF54  CFE8 F601          	movff	wreg,1537	;volatile
 33033                           
 33034                           ; BSR set to: 1
 33035                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 33036  00BF58  C29E  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 33037  00BF5C  C29F  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 33038  00BF60  EE22  F098         	lfsr	2,_LUN+15
 33039  00BF64  D801               	call	u12398
 33040  00BF66  D00A               	goto	u12399
 33041  00BF68                     u12398:
 33042  00BF68  0005               	push	
 33043  00BF6A  6EFA               	movwf	pclath,c
 33044  00BF6C  50DE               	movf	postinc2,w,c
 33045  00BF6E  6EFD               	movwf	tosl,c
 33046  00BF70  50DE               	movf	postinc2,w,c
 33047  00BF72  6EFE               	movwf	tosh,c
 33048  00BF74  50DE               	movf	postinc2,w,c
 33049  00BF76  6EFF               	movwf	tosu,c
 33050  00BF78  50FA               	movf	pclath,w,c
 33051  00BF7A  0012               	return		;indir
 33052  00BF7C                     u12399:
 33053  00BF7C  0900               	iorlw	0
 33054  00BF7E  A4D8               	btfss	status,2,c
 33055  00BF80  D005               	goto	l646
 33056  00BF82  0E00               	movlw	0
 33057  00BF84  0100               	movlb	0	; () banked
 33058  00BF86  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2606+1)& (0+255),b
 33059  00BF88  0E00               	movlw	0
 33060  00BF8A  D004               	goto	L46
 33061  00BF8C                     l646:
 33062                           
 33063                           ; BSR set to: 0
 33064  00BF8C  0E00               	movlw	0
 33065  00BF8E  0100               	movlb	0	; () banked
 33066  00BF90  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2606+1)& (0+255),b
 33067  00BF92  0E80               	movlw	128
 33068  00BF94                     L46:
 33069  00BF94  6F9B               	movwf	_MSDProcessCommandMediaPresent$2606& (0+255),b
 33070                           
 33071                           ; BSR set to: 0
 33072                           
 33073                           ; BSR set to: 0
 33074  00BF96  EE26 F002          	lfsr	2,1538	;volatile
 33075  00BF9A  C09B  FFDF         	movff	_MSDProcessCommandMediaPresent$2606,indf2
 33076                           
 33077                           ; BSR set to: 0
 33078                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 33079  00BF9E  0E00               	movlw	0
 33080  00BFA0  CFE8 F603          	movff	wreg,1539	;volatile
 33081                           
 33082                           ; BSR set to: 0
 33083                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 33084  00BFA4  0E00               	movlw	0
 33085  00BFA6  0101               	movlb	1	; () banked
 33086  00BFA8  6F46               	movwf	(_TransferLength+1)& (0+255),b
 33087  00BFAA  0E04               	movlw	4
 33088  00BFAC  6F45               	movwf	_TransferLength& (0+255),b
 33089                           
 33090                           ; BSR set to: 1
 33091                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 33092  00BFAE  0E00               	movlw	0
 33093  00BFB0  0100               	movlb	0	; () banked
 33094  00BFB2  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 33095  00BFB4  0E04               	movlw	4
 33096  00BFB6  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 33097  00BFB8  EC0E  F095         	call	_MSDComputeDeviceInAndResidue	;wreg free
 33098                           
 33099                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 33100  00BFBC  0EFD               	movlw	253
 33101  00BFBE  0101               	movlb	1	; () banked
 33102  00BFC0  6F62               	movwf	_MSDCommandState& (0+255),b
 33103                           
 33104                           ;usb_device_msd.c: 839: break;
 33105  00BFC2  0012               	return	
 33106  00BFC4                     
 33107                           ; BSR set to: 1
 33108                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 33109                           
 33110                           ; BSR set to: 1
 33111  00BFC4  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 33112  00BFC6  0BF0               	andlw	-16
 33113  00BFC8  0905               	iorlw	5
 33114  00BFCA  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 33115                           
 33116                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 33117  00BFCC  0E20               	movlw	32
 33118  00BFCE  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 33119                           
 33120                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 33121  00BFD0  0E00               	movlw	0
 33122  00BFD2  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 33123                           
 33124                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 33125  00BFD4  0E01               	movlw	1
 33126  00BFD6  010D               	movlb	13	; () banked
 33127  00BFD8  6F8C               	movwf	140,b	;volatile
 33128                           
 33129                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 33130  00BFDA  0E00               	movlw	0
 33131  00BFDC  6F88               	movwf	136,b	;volatile
 33132  00BFDE  0E00               	movlw	0
 33133  00BFE0  6F89               	movwf	137,b	;volatile
 33134  00BFE2  0E00               	movlw	0
 33135  00BFE4  6F8A               	movwf	138,b	;volatile
 33136  00BFE6  0E00               	movlw	0
 33137  00BFE8  6F8B               	movwf	139,b	;volatile
 33138                           
 33139                           ; BSR set to: 13
 33140                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 33141  00BFEA  0101               	movlb	1	; () banked
 33142  00BFEC  6962               	setf	_MSDCommandState& (0+255),b
 33143                           
 33144                           ;usb_device_msd.c: 848: break;
 33145  00BFEE  0012               	return	
 33146  00BFF0                     
 33147                           ; BSR set to: 1
 33148                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 33149                           
 33150                           ; BSR set to: 1
 33151  00BFF0  0E00               	movlw	0
 33152  00BFF2  0100               	movlb	0	; () banked
 33153  00BFF4  6F6A               	movwf	MSDCheckForErrorCases@DeviceBytes& (0+255),b
 33154  00BFF6  0E00               	movlw	0
 33155  00BFF8  6F6B               	movwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),b
 33156  00BFFA  0E00               	movlw	0
 33157  00BFFC  6F6C               	movwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 33158  00BFFE  0E00               	movlw	0
 33159  00C000  6F6D               	movwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 33160  00C002  EC62  F085         	call	_MSDCheckForErrorCases	;wreg free
 33161  00C006  0900               	iorlw	0
 33162  00C008  A4D8               	btfss	status,2,c
 33163  00C00A  0012               	return	
 33164                           
 33165                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 33166                           
 33167                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 33168  00C00C  0101               	movlb	1	; () banked
 33169  00C00E  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 33170  00C010  0B0F               	andlw	15
 33171  00C012  0A06               	xorlw	6
 33172  00C014  A4D8               	btfss	status,2,c
 33173  00C016  D007               	goto	l652
 33174                           
 33175                           ; BSR set to: 1
 33176  00C018  010D               	movlb	13	; () banked
 33177  00C01A  058C               	decf	140,w,b	;volatile
 33178  00C01C  A4D8               	btfss	status,2,c
 33179  00C01E  D003               	goto	l652
 33180                           
 33181                           ; BSR set to: 13
 33182                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 33183  00C020  0101               	movlb	1	; () banked
 33184  00C022  6962               	setf	_MSDCommandState& (0+255),b
 33185                           
 33186                           ;usb_device_msd.c: 870: }
 33187  00C024  0012               	return	
 33188  00C026                     l652:
 33189                           
 33190                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 33191                           
 33192                           ; BSR set to: 1
 33193  00C026  EC72  F0A1         	call	_ResetSenseData	;wreg free
 33194                           
 33195                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 33196  00C02A  0E00               	movlw	0
 33197  00C02C  010D               	movlb	13	; () banked
 33198  00C02E  6F88               	movwf	136,b	;volatile
 33199  00C030  0E00               	movlw	0
 33200  00C032  6F89               	movwf	137,b	;volatile
 33201  00C034  0E00               	movlw	0
 33202  00C036  6F8A               	movwf	138,b	;volatile
 33203  00C038  0E00               	movlw	0
 33204  00C03A  6F8B               	movwf	139,b	;volatile
 33205                           
 33206                           ; BSR set to: 13
 33207                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 33208  00C03C  0101               	movlb	1	; () banked
 33209  00C03E  6962               	setf	_MSDCommandState& (0+255),b
 33210                           
 33211                           ; BSR set to: 1
 33212                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 33213  00C040  0012               	return	
 33214  00C042                     
 33215                           ; BSR set to: 1
 33216                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 33217                           
 33218                           ; BSR set to: 1
 33219                           
 33220                           ; BSR set to: 1
 33221  00C042  0E00               	movlw	0
 33222  00C044  010D               	movlb	13	; () banked
 33223  00C046  6F88               	movwf	136,b	;volatile
 33224  00C048  0E00               	movlw	0
 33225  00C04A  6F89               	movwf	137,b	;volatile
 33226  00C04C  0E00               	movlw	0
 33227  00C04E  6F8A               	movwf	138,b	;volatile
 33228  00C050  0E00               	movlw	0
 33229  00C052  6F8B               	movwf	139,b	;volatile
 33230                           
 33231                           ; BSR set to: 13
 33232                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 33233  00C054  0101               	movlb	1	; () banked
 33234  00C056  6962               	setf	_MSDCommandState& (0+255),b
 33235                           
 33236                           ;usb_device_msd.c: 885: break;
 33237  00C058  0012               	return	
 33238  00C05A                     
 33239                           ; BSR set to: 1
 33240                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 33241                           
 33242                           ; BSR set to: 1
 33243  00C05A  5149               	movf	_USBMSDInHandle& (0+255),w,b
 33244  00C05C  114A               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 33245  00C05E  B4D8               	btfsc	status,2,c
 33246  00C060  D006               	goto	u12450
 33247                           
 33248                           ; BSR set to: 1
 33249  00C062  C149  FFD9         	movff	_USBMSDInHandle,fsr2l
 33250  00C066  C14A  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 33251  00C06A  BEDF               	btfsc	indf2,7,c
 33252  00C06C  0012               	return	
 33253  00C06E                     u12450:
 33254                           
 33255                           ; BSR set to: 1
 33256                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 33257                           
 33258                           ; BSR set to: 1
 33259  00C06E  0102               	movlb	2	; () banked
 33260  00C070  510B               	movf	(_gblCBW+11)& (0+255),w,b
 33261  00C072  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 33262  00C074  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 33263  00C076  E104               	bnz	u12460
 33264  00C078  0E40               	movlw	64
 33265  00C07A  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 33266  00C07C  A0D8               	btfss	status,0,c
 33267  00C07E  D00B               	goto	l660
 33268  00C080                     u12460:
 33269                           
 33270                           ; BSR set to: 2
 33271                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 33272  00C080  0E40               	movlw	64
 33273  00C082  0100               	movlb	0	; () banked
 33274  00C084  6F9D               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),b
 33275                           
 33276                           ; BSR set to: 0
 33277                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 33278  00C086  0E40               	movlw	64
 33279  00C088  0102               	movlb	2	; () banked
 33280  00C08A  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 33281  00C08C  0E00               	movlw	0
 33282  00C08E  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 33283  00C090  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 33284  00C092  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 33285                           
 33286                           ;usb_device_msd.c: 900: }
 33287  00C094  D00A               	goto	l661
 33288  00C096                     l660:
 33289                           
 33290                           ; BSR set to: 2
 33291                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 33292  00C096  C208  F09D         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 33293                           
 33294                           ; BSR set to: 2
 33295                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 33296  00C09A  0E00               	movlw	0
 33297  00C09C  6F08               	movwf	(_gblCBW+8)& (0+255),b
 33298  00C09E  0E00               	movlw	0
 33299  00C0A0  6F09               	movwf	(_gblCBW+9)& (0+255),b
 33300  00C0A2  0E00               	movlw	0
 33301  00C0A4  6F0A               	movwf	(_gblCBW+10)& (0+255),b
 33302  00C0A6  0E00               	movlw	0
 33303  00C0A8  6F0B               	movwf	(_gblCBW+11)& (0+255),b
 33304  00C0AA                     l661:
 33305                           
 33306                           ; BSR set to: 2
 33307                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 33308                           
 33309                           ; BSR set to: 2
 33310  00C0AA  0100               	movlb	0	; () banked
 33311  00C0AC  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 33312  00C0AE  6F99               	movwf	??_MSDProcessCommandMediaPresent& (0+255),b
 33313  00C0B0  6B9A               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),b
 33314  00C0B2  5199               	movf	??_MSDProcessCommandMediaPresent& (0+255),w,b
 33315  00C0B4  0101               	movlb	1	; () banked
 33316  00C0B6  5D45               	subwf	_TransferLength& (0+255),w,b
 33317  00C0B8  0100               	movlb	0	; () banked
 33318  00C0BA  519A               	movf	(??_MSDProcessCommandMediaPresent+1)& (0+255),w,b
 33319  00C0BC  0101               	movlb	1	; () banked
 33320  00C0BE  5946               	subwfb	(_TransferLength+1)& (0+255),w,b
 33321  00C0C0  A0D8               	btfss	status,0,c
 33322  00C0C2  D007               	goto	l662
 33323                           
 33324                           ; BSR set to: 1
 33325                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 33326  00C0C4  0100               	movlb	0	; () banked
 33327  00C0C6  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 33328  00C0C8  0101               	movlb	1	; () banked
 33329  00C0CA  5F45               	subwf	_TransferLength& (0+255),f,b
 33330  00C0CC  0E00               	movlw	0
 33331  00C0CE  5B46               	subwfb	(_TransferLength+1)& (0+255),f,b
 33332                           
 33333                           ;usb_device_msd.c: 918: }
 33334  00C0D0  D01E               	goto	u12490
 33335  00C0D2                     l662:
 33336                           
 33337                           ; BSR set to: 1
 33338                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 33339                           
 33340                           ; BSR set to: 1
 33341  00C0D2  0E00               	movlw	0
 33342  00C0D4  0100               	movlb	0	; () banked
 33343  00C0D6  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 33344  00C0D8  D016               	goto	l664
 33345  00C0DA                     
 33346                           ; BSR set to: 0
 33347                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 33348                           
 33349                           ; BSR set to: 0
 33350  00C0DA  0101               	movlb	1	; () banked
 33351  00C0DC  5145               	movf	_TransferLength& (0+255),w,b
 33352  00C0DE  1146               	iorwf	(_TransferLength+1)& (0+255),w,b
 33353  00C0E0  B4D8               	btfsc	status,2,c
 33354  00C0E2  D004               	goto	l666
 33355                           
 33356                           ; BSR set to: 1
 33357                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 33358  00C0E4  0745               	decf	_TransferLength& (0+255),f,b
 33359  00C0E6  A0D8               	btfss	status,0,c
 33360  00C0E8  0746               	decf	(_TransferLength+1)& (0+255),f,b
 33361                           
 33362                           ;usb_device_msd.c: 932: }
 33363  00C0EA  D00B               	goto	l667
 33364  00C0EC                     l666:
 33365                           
 33366                           ; BSR set to: 1
 33367                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 33368                           
 33369                           ; BSR set to: 1
 33370  00C0EC  0100               	movlb	0	; () banked
 33371  00C0EE  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 33372  00C0F0  0D01               	mullw	1
 33373  00C0F2  0E00               	movlw	0
 33374  00C0F4  24F3               	addwf	prodl,w,c
 33375  00C0F6  6ED9               	movwf	fsr2l,c
 33376  00C0F8  0E06               	movlw	6
 33377  00C0FA  20F4               	addwfc	prodh,w,c
 33378  00C0FC  6EDA               	movwf	fsr2h,c
 33379  00C0FE  0E00               	movlw	0
 33380  00C100  6EDF               	movwf	indf2,c
 33381  00C102                     l667:
 33382                           
 33383                           ; BSR set to: 0
 33384  00C102  0100               	movlb	0	; () banked
 33385  00C104  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 33386  00C106                     l664:
 33387                           
 33388                           ; BSR set to: 0
 33389                           
 33390                           ; BSR set to: 0
 33391  00C106  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 33392  00C108  5DA6               	subwf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 33393  00C10A  A0D8               	btfss	status,0,c
 33394  00C10C  D7E6               	goto	l665
 33395  00C10E                     u12490:
 33396                           
 33397                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 33398                           
 33399                           ; BSR set to: 0
 33400                           
 33401                           ; BSR set to: 0
 33402  00C10E  0E01               	movlw	1
 33403  00C110  0100               	movlb	0	; () banked
 33404  00C112  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 33405  00C114  0E00               	movlw	0
 33406  00C116  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 33407  00C118  0E06               	movlw	6
 33408  00C11A  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 33409  00C11C  C09D  F063         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 33410  00C120  0E02               	movlw	2
 33411  00C122  EC07  F088         	call	_USBTransferOnePacket
 33412  00C126  C060  F149         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 33413  00C12A  C061  F14A         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 33414                           
 33415                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 33416  00C12E  0102               	movlb	2	; () banked
 33417  00C130  5108               	movf	(_gblCBW+8)& (0+255),w,b
 33418  00C132  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 33419  00C134  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 33420  00C136  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 33421  00C138  A4D8               	btfss	status,2,c
 33422  00C13A  0012               	return	
 33423                           
 33424                           ; BSR set to: 2
 33425                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 33426  00C13C  0101               	movlb	1	; () banked
 33427  00C13E  6962               	setf	_MSDCommandState& (0+255),b
 33428                           
 33429                           ; BSR set to: 1
 33430                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 33431                           
 33432                           ; BSR set to: 1
 33433                           
 33434                           ;usb_device_msd.c: 949: break;
 33435  00C140  0012               	return	
 33436  00C142                     
 33437                           ; BSR set to: 1
 33438                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 33439                           
 33440                           ; BSR set to: 1
 33441                           
 33442                           ;usb_device_msd.c: 954: default:
 33443                           
 33444                           ; BSR set to: 1
 33445  00C142  0E7F               	movlw	127
 33446  00C144  ECD5  F084         	call	_MSDErrorHandler
 33447                           
 33448                           ;usb_device_msd.c: 960: }
 33449                           
 33450                           ;usb_device_msd.c: 959: break;
 33451  00C148  0012               	return	
 33452  00C14A                     l630:
 33453  00C14A  0101               	movlb	1	; () banked
 33454  00C14C  5162               	movf	_MSDCommandState& (0+255),w,b
 33455                           
 33456                           ; Switch size 1, requested type "space"
 33457                           ; Number of cases is 12, Range of values is 0 to 254
 33458                           ; switch strategies available:
 33459                           ; Name         Instructions Cycles
 33460                           ; simple_byte           37    19 (average)
 33461                           ;	Chosen strategy is simple_byte
 33462  00C14E  0A00               	xorlw	0	; case 0
 33463  00C150  B4D8               	btfsc	status,2,c
 33464  00C152  D74E               	goto	l650
 33465  00C154  0A03               	xorlw	3	; case 3
 33466  00C156  B4D8               	btfsc	status,2,c
 33467  00C158  D6CA               	goto	l640
 33468  00C15A  0A11               	xorlw	17	; case 18
 33469  00C15C  B4D8               	btfsc	status,2,c
 33470  00C15E  D635               	goto	l636
 33471  00C160  0A08               	xorlw	8	; case 26
 33472  00C162  B4D8               	btfsc	status,2,c
 33473  00C164  D6F3               	goto	l644
 33474  00C166  0A01               	xorlw	1	; case 27
 33475  00C168  B4D8               	btfsc	status,2,c
 33476  00C16A  D76B               	goto	l654
 33477  00C16C  0A05               	xorlw	5	; case 30
 33478  00C16E  B4D8               	btfsc	status,2,c
 33479  00C170  D729               	goto	l649
 33480  00C172  0A3B               	xorlw	59	; case 37
 33481  00C174  B4D8               	btfsc	status,2,c
 33482  00C176  D658               	goto	l639
 33483  00C178  0A0D               	xorlw	13	; case 40
 33484  00C17A  B4D8               	btfsc	status,2,c
 33485  00C17C  D616               	goto	l631
 33486  00C17E  0A02               	xorlw	2	; case 42
 33487  00C180  B4D8               	btfsc	status,2,c
 33488  00C182  D61B               	goto	l634
 33489  00C184  0A05               	xorlw	5	; case 47
 33490  00C186  B4D8               	btfsc	status,2,c
 33491  00C188  D75C               	goto	l654
 33492  00C18A  0AD2               	xorlw	210	; case 253
 33493  00C18C  B4D8               	btfsc	status,2,c
 33494  00C18E  D765               	goto	l656
 33495  00C190  0A03               	xorlw	3	; case 254
 33496  00C192  D7D7               	goto	l670
 33497  00C194                     __end_of_MSDProcessCommandMediaPresent:
 33498                           	opt stack 0
 33499                           tosu	equ	0xFFF
 33500                           tosh	equ	0xFFE
 33501                           tosl	equ	0xFFD
 33502                           pclath	equ	0xFFA
 33503                           tblptru	equ	0xFF8
 33504                           tblptrh	equ	0xFF7
 33505                           tblptrl	equ	0xFF6
 33506                           tablat	equ	0xFF5
 33507                           prodh	equ	0xFF4
 33508                           prodl	equ	0xFF3
 33509                           intcon	equ	0xFF2
 33510                           postinc0	equ	0xFEE
 33511                           wreg	equ	0xFE8
 33512                           indf1	equ	0xFE7
 33513                           postinc1	equ	0xFE6
 33514                           postdec1	equ	0xFE5
 33515                           plusw1	equ	0xFE3
 33516                           fsr1h	equ	0xFE2
 33517                           fsr1l	equ	0xFE1
 33518                           indf2	equ	0xFDF
 33519                           postinc2	equ	0xFDE
 33520                           postdec2	equ	0xFDD
 33521                           plusw2	equ	0xFDB
 33522                           fsr2h	equ	0xFDA
 33523                           fsr2l	equ	0xFD9
 33524                           status	equ	0xFD8
 33525                           
 33526 ;; *************** function _MSDWriteHandler *****************
 33527 ;; Defined at:
 33528 ;;		line 1188 in file "usb_device_msd.c"
 33529 ;; Parameters:    Size  Location     Type
 33530 ;;		None
 33531 ;; Auto vars:     Size  Location     Type
 33532 ;;		None
 33533 ;; Return value:  Size  Location     Type
 33534 ;;                  1    wreg      unsigned char 
 33535 ;; Registers used:
 33536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 33537 ;; Tracked objects:
 33538 ;;		On entry : 0/0
 33539 ;;		On exit  : 0/0
 33540 ;;		Unchanged: 0/0
 33541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33544 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33545 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33546 ;;Total ram usage:        5 bytes
 33547 ;; Hardware stack levels used:    1
 33548 ;; Hardware stack levels required when called:   16
 33549 ;; This function calls:
 33550 ;;		_ExternalFlash_SectorWrite
 33551 ;;		_ExternalFlash_WriteProtectStateGet
 33552 ;;		_MSDCheckForErrorCases
 33553 ;;		_USBStallEndpoint
 33554 ;;		_USBTransferOnePacket
 33555 ;; This function is called by:
 33556 ;;		_MSDProcessCommandMediaPresent
 33557 ;; This function uses a non-reentrant model
 33558 ;;
 33559                           
 33560                           	psect	text131
 33561  00D5EA                     __ptext131:
 33562                           	opt stack 0
 33563  00D5EA                     _MSDWriteHandler:
 33564                           	opt stack 10
 33565                           
 33566                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 33567                           
 33568                           ;incstack = 0
 33569  00D5EA  D160               	goto	l700
 33570  00D5EC                     l701:
 33571                           
 33572                           ; BSR set to: 1
 33573                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 33574  00D5EC  C211  F12E         	movff	_gblCBW+17,_LBA+3
 33575                           
 33576                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 33577  00D5F0  C212  F12D         	movff	_gblCBW+18,_LBA+2
 33578                           
 33579                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 33580  00D5F4  C213  F12C         	movff	_gblCBW+19,_LBA+1
 33581                           
 33582                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 33583  00D5F8  C214  F12B         	movff	_gblCBW+20,_LBA
 33584                           
 33585                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 33586  00D5FC  C216  F146         	movff	_gblCBW+22,_TransferLength+1
 33587                           
 33588                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 33589  00D600  C217  F145         	movff	_gblCBW+23,_TransferLength
 33590                           
 33591                           ; BSR set to: 1
 33592                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 33593  00D604  5145               	movf	_TransferLength& (0+255),w,b
 33594  00D606  0100               	movlb	0	; () banked
 33595  00D608  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 33596  00D60A  0101               	movlb	1	; () banked
 33597  00D60C  5146               	movf	(_TransferLength+1)& (0+255),w,b
 33598  00D60E  0100               	movlb	0	; () banked
 33599  00D610  6F90               	movwf	(??_MSDWriteHandler+1)& (0+255),b
 33600  00D612  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 33601  00D614  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 33602  00D616  0E09               	movlw	9
 33603  00D618                     u11285:
 33604  00D618  90D8               	bcf	status,0,c
 33605  00D61A  378F               	rlcf	??_MSDWriteHandler& (0+255),f,b
 33606  00D61C  3790               	rlcf	(??_MSDWriteHandler+1)& (0+255),f,b
 33607  00D61E  3791               	rlcf	(??_MSDWriteHandler+2)& (0+255),f,b
 33608  00D620  3792               	rlcf	(??_MSDWriteHandler+3)& (0+255),f,b
 33609  00D622  2EE8               	decfsz	wreg,f,c
 33610  00D624  D7F9               	goto	u11285
 33611  00D626  C08F  F06A         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 33612  00D62A  C090  F06B         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 33613  00D62E  C091  F06C         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 33614  00D632  C092  F06D         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 33615  00D636  EC62  F085         	call	_MSDCheckForErrorCases	;wreg free
 33616  00D63A  0900               	iorlw	0
 33617  00D63C  A4D8               	btfss	status,2,c
 33618  00D63E  D148               	goto	l703
 33619                           
 33620                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 33621                           
 33622                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 33623  00D640  C29E  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 33624  00D644  C29F  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 33625  00D648  EE22  F098         	lfsr	2,_LUN+15
 33626  00D64C  D801               	call	u11308
 33627  00D64E  D00A               	goto	u11309
 33628  00D650                     u11308:
 33629  00D650  0005               	push	
 33630  00D652  6EFA               	movwf	pclath,c
 33631  00D654  50DE               	movf	postinc2,w,c
 33632  00D656  6EFD               	movwf	tosl,c
 33633  00D658  50DE               	movf	postinc2,w,c
 33634  00D65A  6EFE               	movwf	tosh,c
 33635  00D65C  50DE               	movf	postinc2,w,c
 33636  00D65E  6EFF               	movwf	tosu,c
 33637  00D660  50FA               	movf	pclath,w,c
 33638  00D662  0012               	return		;indir
 33639  00D664                     u11309:
 33640  00D664  0900               	iorlw	0
 33641  00D666  B4D8               	btfsc	status,2,c
 33642  00D668  D017               	goto	l704
 33643                           
 33644                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 33645  00D66A  0E01               	movlw	1
 33646  00D66C  010D               	movlb	13	; () banked
 33647  00D66E  6F8C               	movwf	140,b	;volatile
 33648                           
 33649                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 33650  00D670  0101               	movlb	1	; () banked
 33651  00D672  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 33652  00D674  0BF0               	andlw	-16
 33653  00D676  0907               	iorlw	7
 33654  00D678  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 33655                           
 33656                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 33657  00D67A  0E27               	movlw	39
 33658  00D67C  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 33659                           
 33660                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 33661  00D67E  0E00               	movlw	0
 33662  00D680  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 33663                           
 33664                           ; BSR set to: 1
 33665                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 33666  00D682  0E00               	movlw	0
 33667  00D684  0100               	movlb	0	; () banked
 33668  00D686  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 33669  00D688  0E02               	movlw	2
 33670  00D68A  EC82  F087         	call	_USBStallEndpoint
 33671                           
 33672                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 33673  00D68E  0E00               	movlw	0
 33674  00D690  0101               	movlb	1	; () banked
 33675  00D692  6F60               	movwf	_MSDWriteState& (0+255),b
 33676                           
 33677                           ; BSR set to: 1
 33678                           ;usb_device_msd.c: 1228: return MSDWriteState;
 33679  00D694  5160               	movf	_MSDWriteState& (0+255),w,b
 33680                           
 33681                           ; BSR set to: 1
 33682  00D696  0012               	return	
 33683  00D698                     l704:
 33684                           
 33685                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 33686                           
 33687                           ; BSR set to: 1
 33688  00D698  0E01               	movlw	1
 33689  00D69A  0101               	movlb	1	; () banked
 33690  00D69C  6F63               	movwf	_MSD_State& (0+255),b
 33691  00D69E                     
 33692                           ; BSR set to: 1
 33693                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 33694                           
 33695                           ; BSR set to: 1
 33696  00D69E  5145               	movf	_TransferLength& (0+255),w,b
 33697  00D6A0  1146               	iorwf	(_TransferLength+1)& (0+255),w,b
 33698  00D6A2  A4D8               	btfss	status,2,c
 33699  00D6A4  D002               	goto	l707
 33700                           
 33701                           ; BSR set to: 1
 33702                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 33703  00D6A6  0E00               	movlw	0
 33704  00D6A8  D0FF               	goto	L50
 33705  00D6AA                     l707:
 33706                           
 33707                           ; BSR set to: 1
 33708                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 33709                           
 33710                           ; BSR set to: 1
 33711  00D6AA  0E03               	movlw	3
 33712  00D6AC  6F60               	movwf	_MSDWriteState& (0+255),b
 33713                           
 33714                           ; BSR set to: 1
 33715                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 33716  00D6AE  0E00               	movlw	0
 33717  00D6B0  6F4D               	movwf	_ptrNextData& (0+255),b
 33718  00D6B2  0E06               	movlw	6
 33719  00D6B4  6F4E               	movwf	(_ptrNextData+1)& (0+255),b
 33720                           
 33721                           ; BSR set to: 1
 33722                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 33723  00D6B6  0E00               	movlw	0
 33724  00D6B8  010D               	movlb	13	; () banked
 33725  00D6BA  6F88               	movwf	136,b	;volatile
 33726  00D6BC  0E02               	movlw	2
 33727  00D6BE  6F89               	movwf	137,b	;volatile
 33728  00D6C0  0E00               	movlw	0
 33729  00D6C2  6F8A               	movwf	138,b	;volatile
 33730  00D6C4  0E00               	movlw	0
 33731  00D6C6  6F8B               	movwf	139,b	;volatile
 33732  00D6C8                     l708:
 33733                           
 33734                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 33735  00D6C8  010D               	movlb	13	; () banked
 33736  00D6CA  5188               	movf	136,w,b	;volatile
 33737  00D6CC  1189               	iorwf	137,w,b	;volatile
 33738  00D6CE  118A               	iorwf	138,w,b	;volatile
 33739  00D6D0  118B               	iorwf	139,w,b	;volatile
 33740  00D6D2  B4D8               	btfsc	status,2,c
 33741  00D6D4  D01F               	goto	l709
 33742                           
 33743                           ; BSR set to: 13
 33744                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 33745  00D6D6  0101               	movlb	1	; () banked
 33746  00D6D8  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 33747  00D6DA  114C               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 33748  00D6DC  B4D8               	btfsc	status,2,c
 33749  00D6DE  D006               	goto	l710
 33750                           
 33751                           ; BSR set to: 1
 33752  00D6E0  C14B  FFD9         	movff	_USBMSDOutHandle,fsr2l
 33753  00D6E4  C14C  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 33754  00D6E8  BEDF               	btfsc	indf2,7,c
 33755  00D6EA  D0F2               	goto	l703
 33756  00D6EC                     l710:
 33757                           
 33758                           ; BSR set to: 1
 33759                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 33760                           
 33761                           ; BSR set to: 1
 33762  00D6EC  0E00               	movlw	0
 33763  00D6EE  0100               	movlb	0	; () banked
 33764  00D6F0  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 33765  00D6F2  C14D  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 33766  00D6F6  C14E  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 33767  00D6FA  0E40               	movlw	64
 33768  00D6FC  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 33769  00D6FE  0E02               	movlw	2
 33770  00D700  EC07  F088         	call	_USBTransferOnePacket
 33771  00D704  C060  F14B         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 33772  00D708  C061  F14C         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 33773                           
 33774                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 33775  00D70C  0E04               	movlw	4
 33776  00D70E  0101               	movlb	1	; () banked
 33777  00D710  6F60               	movwf	_MSDWriteState& (0+255),b
 33778                           
 33779                           ;usb_device_msd.c: 1260: }
 33780  00D712  D023               	goto	l711
 33781  00D714                     l709:
 33782                           
 33783                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 33784                           
 33785                           ; BSR set to: 1
 33786  00D714  C29E  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 33787  00D718  C29F  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 33788  00D71C  EE22  F098         	lfsr	2,_LUN+15
 33789  00D720  D801               	call	u11368
 33790  00D722  D00A               	goto	u11369
 33791  00D724                     u11368:
 33792  00D724  0005               	push	
 33793  00D726  6EFA               	movwf	pclath,c
 33794  00D728  50DE               	movf	postinc2,w,c
 33795  00D72A  6EFD               	movwf	tosl,c
 33796  00D72C  50DE               	movf	postinc2,w,c
 33797  00D72E  6EFE               	movwf	tosh,c
 33798  00D730  50DE               	movf	postinc2,w,c
 33799  00D732  6EFF               	movwf	tosu,c
 33800  00D734  50FA               	movf	pclath,w,c
 33801  00D736  0012               	return		;indir
 33802  00D738                     u11369:
 33803  00D738  0900               	iorlw	0
 33804  00D73A  B4D8               	btfsc	status,2,c
 33805  00D73C  D00C               	goto	l712
 33806                           
 33807                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 33808  00D73E  0E01               	movlw	1
 33809  00D740  010D               	movlb	13	; () banked
 33810  00D742  6F8C               	movwf	140,b	;volatile
 33811                           
 33812                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 33813  00D744  0101               	movlb	1	; () banked
 33814  00D746  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 33815  00D748  0BF0               	andlw	-16
 33816  00D74A  0902               	iorlw	2
 33817  00D74C  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 33818                           
 33819                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 33820  00D74E  0E27               	movlw	39
 33821  00D750  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 33822                           
 33823                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 33824  00D752  0E00               	movlw	0
 33825  00D754  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 33826  00D756                     l712:
 33827                           
 33828                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 33829  00D756  0E02               	movlw	2
 33830  00D758  D0A6               	goto	L94
 33831  00D75A                     l711:
 33832                           
 33833                           ; BSR set to: 1
 33834                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 33835                           
 33836                           ; BSR set to: 1
 33837                           
 33838                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 33839                           
 33840                           ; BSR set to: 1
 33841  00D75A  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 33842  00D75C  114C               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 33843  00D75E  B4D8               	btfsc	status,2,c
 33844  00D760  D006               	goto	l714
 33845                           
 33846                           ; BSR set to: 1
 33847  00D762  C14B  FFD9         	movff	_USBMSDOutHandle,fsr2l
 33848  00D766  C14C  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 33849  00D76A  BEDF               	btfsc	indf2,7,c
 33850  00D76C  D0B1               	goto	l703
 33851  00D76E                     l714:
 33852                           
 33853                           ; BSR set to: 1
 33854                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 33855                           
 33856                           ; BSR set to: 1
 33857  00D76E  EE20 F001          	lfsr	2,1
 33858  00D772  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 33859  00D774  26D9               	addwf	fsr2l,f,c
 33860  00D776  514C               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 33861  00D778  22DA               	addwfc	fsr2h,f,c
 33862  00D77A  50DF               	movf	indf2,w,c
 33863  00D77C  0100               	movlb	0	; () banked
 33864  00D77E  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 33865  00D780  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 33866  00D784  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 33867  00D786  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 33868  00D788  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 33869  00D78A  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 33870  00D78C  0102               	movlb	2	; () banked
 33871  00D78E  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 33872  00D790  0100               	movlb	0	; () banked
 33873  00D792  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 33874  00D794  0102               	movlb	2	; () banked
 33875  00D796  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 33876  00D798  0100               	movlb	0	; () banked
 33877  00D79A  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 33878  00D79C  0102               	movlb	2	; () banked
 33879  00D79E  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 33880  00D7A0  0100               	movlb	0	; () banked
 33881  00D7A2  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 33882  00D7A4  0102               	movlb	2	; () banked
 33883  00D7A6  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 33884                           
 33885                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 33886  00D7A8  0101               	movlb	1	; () banked
 33887  00D7AA  EE20 F001          	lfsr	2,1
 33888  00D7AE  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 33889  00D7B0  26D9               	addwf	fsr2l,f,c
 33890  00D7B2  514C               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 33891  00D7B4  22DA               	addwfc	fsr2h,f,c
 33892  00D7B6  50DF               	movf	indf2,w,c
 33893  00D7B8  0100               	movlb	0	; () banked
 33894  00D7BA  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 33895  00D7BC  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 33896  00D7C0  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 33897  00D7C2  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 33898  00D7C4  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 33899  00D7C6  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 33900  00D7C8  010D               	movlb	13	; () banked
 33901  00D7CA  5F88               	subwf	136,f,b	;volatile
 33902  00D7CC  0100               	movlb	0	; () banked
 33903  00D7CE  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 33904  00D7D0  010D               	movlb	13	; () banked
 33905  00D7D2  5B89               	subwfb	137,f,b	;volatile
 33906  00D7D4  0100               	movlb	0	; () banked
 33907  00D7D6  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 33908  00D7D8  010D               	movlb	13	; () banked
 33909  00D7DA  5B8A               	subwfb	138,f,b	;volatile
 33910  00D7DC  0100               	movlb	0	; () banked
 33911  00D7DE  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 33912  00D7E0  010D               	movlb	13	; () banked
 33913  00D7E2  5B8B               	subwfb	139,f,b	;volatile
 33914                           
 33915                           ; BSR set to: 13
 33916                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 33917  00D7E4  0E40               	movlw	64
 33918  00D7E6  0101               	movlb	1	; () banked
 33919  00D7E8  274D               	addwf	_ptrNextData& (0+255),f,b
 33920  00D7EA  0E00               	movlw	0
 33921  00D7EC  234E               	addwfc	(_ptrNextData+1)& (0+255),f,b
 33922                           
 33923                           ; BSR set to: 1
 33924                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 33925  00D7EE  0E03               	movlw	3
 33926  00D7F0  D05B               	goto	L50
 33927  00D7F2                     
 33928                           ; BSR set to: 1
 33929                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 33930                           
 33931                           ; BSR set to: 1
 33932  00D7F2  010D               	movlb	13	; () banked
 33933  00D7F4  518C               	movf	140,w,b	;volatile
 33934  00D7F6  A4D8               	btfss	status,2,c
 33935  00D7F8  D040               	goto	l719
 33936                           
 33937                           ; BSR set to: 13
 33938                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 33939  00D7FA  C29E  F084         	movff	_LUN+21,ExternalFlash_SectorWrite@config
 33940  00D7FE  C29F  F085         	movff	_LUN+22,ExternalFlash_SectorWrite@config+1
 33941  00D802  C12B  F086         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 33942  00D806  C12C  F087         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 33943  00D80A  C12D  F088         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 33944  00D80E  C12E  F089         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 33945  00D812  0E00               	movlw	0
 33946  00D814  0100               	movlb	0	; () banked
 33947  00D816  6F8A               	movwf	ExternalFlash_SectorWrite@buffer& (0+255),b
 33948  00D818  0E06               	movlw	6
 33949  00D81A  6F8B               	movwf	(ExternalFlash_SectorWrite@buffer+1)& (0+255),b
 33950  00D81C  0101               	movlb	1	; () banked
 33951  00D81E  512B               	movf	_LBA& (0+255),w,b
 33952  00D820  112C               	iorwf	(_LBA+1)& (0+255),w,b
 33953  00D822  112D               	iorwf	(_LBA+2)& (0+255),w,b
 33954  00D824  112E               	iorwf	(_LBA+3)& (0+255),w,b
 33955  00D826  A4D8               	btfss	status,2,c
 33956  00D828  D002               	goto	u11410
 33957  00D82A  0E01               	movlw	1
 33958  00D82C  D001               	goto	u11420
 33959  00D82E                     u11410:
 33960  00D82E  0E00               	movlw	0
 33961  00D830                     u11420:
 33962  00D830  0100               	movlb	0	; () banked
 33963  00D832  6F8C               	movwf	ExternalFlash_SectorWrite@allowWriteToZero& (0+255),b
 33964  00D834  EE22  F09B         	lfsr	2,_LUN+18
 33965  00D838  D801               	call	u11438
 33966  00D83A  D00A               	goto	u11439
 33967  00D83C                     u11438:
 33968  00D83C  0005               	push	
 33969  00D83E  6EFA               	movwf	pclath,c
 33970  00D840  50DE               	movf	postinc2,w,c
 33971  00D842  6EFD               	movwf	tosl,c
 33972  00D844  50DE               	movf	postinc2,w,c
 33973  00D846  6EFE               	movwf	tosh,c
 33974  00D848  50DE               	movf	postinc2,w,c
 33975  00D84A  6EFF               	movwf	tosu,c
 33976  00D84C  50FA               	movf	pclath,w,c
 33977  00D84E  0012               	return		;indir
 33978  00D850                     u11439:
 33979  00D850  06E8               	decf	wreg,f,c
 33980  00D852  B4D8               	btfsc	status,2,c
 33981  00D854  D012               	goto	l719
 33982                           
 33983                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 33984  00D856  0E64               	movlw	100
 33985  00D858  0101               	movlb	1	; () banked
 33986  00D85A  615F               	cpfslt	_MSDRetryAttempt& (0+255),b
 33987  00D85C  D002               	goto	l718
 33988                           
 33989                           ; BSR set to: 1
 33990                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 33991  00D85E  2B5F               	incf	_MSDRetryAttempt& (0+255),f,b
 33992                           
 33993                           ;usb_device_msd.c: 1314: break;
 33994  00D860  D037               	goto	l703
 33995  00D862                     l718:
 33996                           
 33997                           ; BSR set to: 1
 33998                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 33999                           
 34000                           ; BSR set to: 1
 34001  00D862  0E01               	movlw	1
 34002  00D864  010D               	movlb	13	; () banked
 34003  00D866  6F8C               	movwf	140,b	;volatile
 34004                           
 34005                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 34006  00D868  0101               	movlb	1	; () banked
 34007  00D86A  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 34008  00D86C  0BF0               	andlw	-16
 34009  00D86E  0903               	iorlw	3
 34010  00D870  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 34011                           
 34012                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 34013  00D872  0E00               	movlw	0
 34014  00D874  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 34015                           
 34016                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 34017  00D876  0E00               	movlw	0
 34018  00D878  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 34019  00D87A                     l719:
 34020                           
 34021                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 34022                           
 34023                           ; BSR set to: 1
 34024                           
 34025                           ; BSR set to: 1
 34026                           
 34027                           ; BSR set to: 1
 34028  00D87A  0E01               	movlw	1
 34029  00D87C  0101               	movlb	1	; () banked
 34030  00D87E  272B               	addwf	_LBA& (0+255),f,b
 34031  00D880  0E00               	movlw	0
 34032  00D882  232C               	addwfc	(_LBA+1)& (0+255),f,b
 34033  00D884  232D               	addwfc	(_LBA+2)& (0+255),f,b
 34034  00D886  232E               	addwfc	(_LBA+3)& (0+255),f,b
 34035                           
 34036                           ; BSR set to: 1
 34037                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 34038  00D888  0745               	decf	_TransferLength& (0+255),f,b
 34039  00D88A  A0D8               	btfss	status,0,c
 34040  00D88C  0746               	decf	(_TransferLength+1)& (0+255),f,b
 34041                           
 34042                           ; BSR set to: 1
 34043                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 34044  00D88E  0E01               	movlw	1
 34045  00D890  D00B               	goto	L50
 34046  00D892                     
 34047                           ; BSR set to: 1
 34048                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 34049                           
 34050                           ; BSR set to: 1
 34051  00D892  0E02               	movlw	2
 34052  00D894  010D               	movlb	13	; () banked
 34053  00D896  6F8C               	movwf	140,b	;volatile
 34054                           
 34055                           ; BSR set to: 13
 34056                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 34057  00D898  0E00               	movlw	0
 34058  00D89A  0100               	movlb	0	; () banked
 34059  00D89C  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34060  00D89E  0E02               	movlw	2
 34061  00D8A0  EC82  F087         	call	_USBStallEndpoint
 34062                           
 34063                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 34064  00D8A4  0E00               	movlw	0
 34065  00D8A6                     L94:
 34066  00D8A6  0101               	movlb	1	; () banked
 34067  00D8A8                     L50:
 34068  00D8A8  6F60               	movwf	_MSDWriteState& (0+255),b
 34069                           
 34070                           ; BSR set to: 1
 34071                           ;usb_device_msd.c: 1345: }
 34072                           
 34073                           ;usb_device_msd.c: 1344: break;
 34074  00D8AA  D012               	goto	l703
 34075  00D8AC                     l700:
 34076                           
 34077                           ; BSR set to: 1
 34078  00D8AC  0101               	movlb	1	; () banked
 34079  00D8AE  5160               	movf	_MSDWriteState& (0+255),w,b
 34080                           
 34081                           ; Switch size 1, requested type "space"
 34082                           ; Number of cases is 5, Range of values is 0 to 4
 34083                           ; switch strategies available:
 34084                           ; Name         Instructions Cycles
 34085                           ; simple_byte           16     9 (average)
 34086                           ;	Chosen strategy is simple_byte
 34087  00D8B0  0A00               	xorlw	0	; case 0
 34088  00D8B2  B4D8               	btfsc	status,2,c
 34089  00D8B4  D69B               	goto	l701
 34090  00D8B6  0A01               	xorlw	1	; case 1
 34091  00D8B8  B4D8               	btfsc	status,2,c
 34092  00D8BA  D6F1               	goto	l706
 34093  00D8BC  0A03               	xorlw	3	; case 2
 34094  00D8BE  B4D8               	btfsc	status,2,c
 34095  00D8C0  D798               	goto	l715
 34096  00D8C2  0A01               	xorlw	1	; case 3
 34097  00D8C4  B4D8               	btfsc	status,2,c
 34098  00D8C6  D700               	goto	l708
 34099  00D8C8  0A07               	xorlw	7	; case 4
 34100  00D8CA  B4D8               	btfsc	status,2,c
 34101  00D8CC  D746               	goto	l711
 34102  00D8CE  D7E1               	goto	l720
 34103  00D8D0                     l703:
 34104                           
 34105                           ;usb_device_msd.c: 1347: return MSDWriteState;
 34106                           
 34107                           ; BSR set to: 1
 34108  00D8D0  0101               	movlb	1	; () banked
 34109  00D8D2  5160               	movf	_MSDWriteState& (0+255),w,b
 34110  00D8D4  0012               	return	
 34111  00D8D6                     __end_of_MSDWriteHandler:
 34112                           	opt stack 0
 34113                           tosu	equ	0xFFF
 34114                           tosh	equ	0xFFE
 34115                           tosl	equ	0xFFD
 34116                           pclath	equ	0xFFA
 34117                           tblptru	equ	0xFF8
 34118                           tblptrh	equ	0xFF7
 34119                           tblptrl	equ	0xFF6
 34120                           tablat	equ	0xFF5
 34121                           prodh	equ	0xFF4
 34122                           prodl	equ	0xFF3
 34123                           intcon	equ	0xFF2
 34124                           postinc0	equ	0xFEE
 34125                           wreg	equ	0xFE8
 34126                           indf1	equ	0xFE7
 34127                           postinc1	equ	0xFE6
 34128                           postdec1	equ	0xFE5
 34129                           plusw1	equ	0xFE3
 34130                           fsr1h	equ	0xFE2
 34131                           fsr1l	equ	0xFE1
 34132                           indf2	equ	0xFDF
 34133                           postinc2	equ	0xFDE
 34134                           postdec2	equ	0xFDD
 34135                           plusw2	equ	0xFDB
 34136                           fsr2h	equ	0xFDA
 34137                           fsr2l	equ	0xFD9
 34138                           status	equ	0xFD8
 34139                           
 34140 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 34141 ;; Defined at:
 34142 ;;		line 34 in file "external_flash.c"
 34143 ;; Parameters:    Size  Location     Type
 34144 ;;  config          2    0[BANK0 ] PTR void 
 34145 ;;		 -> NULL(0), 
 34146 ;; Auto vars:     Size  Location     Type
 34147 ;;		None
 34148 ;; Return value:  Size  Location     Type
 34149 ;;                  1    wreg      unsigned char 
 34150 ;; Registers used:
 34151 ;;		wreg
 34152 ;; Tracked objects:
 34153 ;;		On entry : 0/0
 34154 ;;		On exit  : 0/0
 34155 ;;		Unchanged: 0/0
 34156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34157 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34160 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34161 ;;Total ram usage:        2 bytes
 34162 ;; Hardware stack levels used:    1
 34163 ;; Hardware stack levels required when called:   10
 34164 ;; This function calls:
 34165 ;;		Nothing
 34166 ;; This function is called by:
 34167 ;;		_MSDWriteHandler
 34168 ;;		_MSDProcessCommandMediaPresent
 34169 ;; This function uses a non-reentrant model
 34170 ;;
 34171                           
 34172                           	psect	text132
 34173  0159CC                     __ptext132:
 34174                           	opt stack 0
 34175  0159CC                     _ExternalFlash_WriteProtectStateGet:
 34176                           	opt stack 15
 34177                           
 34178                           ;external_flash.c: 37: return 0;
 34179                           
 34180                           ; BSR set to: 1
 34181                           ;incstack = 0
 34182  0159CC  0E00               	movlw	0
 34183  0159CE  0012               	return	
 34184  0159D0                     __end_of_ExternalFlash_WriteProtectStateGet:
 34185                           	opt stack 0
 34186                           tosu	equ	0xFFF
 34187                           tosh	equ	0xFFE
 34188                           tosl	equ	0xFFD
 34189                           pclath	equ	0xFFA
 34190                           tblptru	equ	0xFF8
 34191                           tblptrh	equ	0xFF7
 34192                           tblptrl	equ	0xFF6
 34193                           tablat	equ	0xFF5
 34194                           prodh	equ	0xFF4
 34195                           prodl	equ	0xFF3
 34196                           intcon	equ	0xFF2
 34197                           postinc0	equ	0xFEE
 34198                           wreg	equ	0xFE8
 34199                           indf1	equ	0xFE7
 34200                           postinc1	equ	0xFE6
 34201                           postdec1	equ	0xFE5
 34202                           plusw1	equ	0xFE3
 34203                           fsr1h	equ	0xFE2
 34204                           fsr1l	equ	0xFE1
 34205                           indf2	equ	0xFDF
 34206                           postinc2	equ	0xFDE
 34207                           postdec2	equ	0xFDD
 34208                           plusw2	equ	0xFDB
 34209                           fsr2h	equ	0xFDA
 34210                           fsr2l	equ	0xFD9
 34211                           status	equ	0xFD8
 34212                           
 34213 ;; *************** function _ExternalFlash_SectorWrite *****************
 34214 ;; Defined at:
 34215 ;;		line 56 in file "external_flash.c"
 34216 ;; Parameters:    Size  Location     Type
 34217 ;;  config          2   36[BANK0 ] PTR void 
 34218 ;;		 -> NULL(0), 
 34219 ;;  sector_addr     4   38[BANK0 ] unsigned long 
 34220 ;;  buffer          2   42[BANK0 ] PTR unsigned char 
 34221 ;;		 -> msd_buffer(512), 
 34222 ;;  allowWriteTo    1   44[BANK0 ] unsigned char 
 34223 ;; Auto vars:     Size  Location     Type
 34224 ;;  page            2   45[BANK0 ] unsigned int 
 34225 ;; Return value:  Size  Location     Type
 34226 ;;                  1    wreg      unsigned char 
 34227 ;; Registers used:
 34228 ;;		wreg, status,2, status,0, cstack
 34229 ;; Tracked objects:
 34230 ;;		On entry : 0/0
 34231 ;;		On exit  : 0/0
 34232 ;;		Unchanged: 0/0
 34233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34234 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34235 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34237 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34238 ;;Total ram usage:       11 bytes
 34239 ;; Hardware stack levels used:    1
 34240 ;; Hardware stack levels required when called:   15
 34241 ;; This function calls:
 34242 ;;		_flash_sector_write
 34243 ;; This function is called by:
 34244 ;;		_MSDWriteHandler
 34245 ;; This function uses a non-reentrant model
 34246 ;;
 34247                           
 34248                           	psect	text133
 34249  015296                     __ptext133:
 34250                           	opt stack 0
 34251  015296                     _ExternalFlash_SectorWrite:
 34252                           	opt stack 10
 34253                           
 34254                           ;external_flash.c: 58: uint16_t page = (uint16_t) sector_addr;
 34255                           
 34256                           ;incstack = 0
 34257  015296  C086  F08D         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 34258  01529A  C087  F08E         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 34259                           
 34260                           ;external_flash.c: 61: if(sector_addr >= 8192)
 34261  01529E  0100               	movlb	0	; () banked
 34262  0152A0  5189               	movf	(ExternalFlash_SectorWrite@sector_addr+3)& (0+255),w,b
 34263  0152A2  1188               	iorwf	(ExternalFlash_SectorWrite@sector_addr+2)& (0+255),w,b
 34264  0152A4  E104               	bnz	u10970
 34265  0152A6  0E20               	movlw	32
 34266  0152A8  5D87               	subwf	(ExternalFlash_SectorWrite@sector_addr+1)& (0+255),w,b
 34267  0152AA  A0D8               	btfss	status,0,c
 34268  0152AC  D002               	goto	l1681
 34269  0152AE                     u10970:
 34270                           
 34271                           ; BSR set to: 0
 34272                           ;external_flash.c: 62: {;external_flash.c: 63: return 0;
 34273  0152AE  0E00               	movlw	0
 34274                           
 34275                           ; BSR set to: 0
 34276  0152B0  0012               	return	
 34277  0152B2                     l1681:
 34278                           
 34279                           ; BSR set to: 0
 34280                           ;external_flash.c: 64: };external_flash.c: 67: flash_sector_write(page, buffer);
 34281                           
 34282                           ; BSR set to: 0
 34283  0152B2  C08D  F07F         	movff	ExternalFlash_SectorWrite@page,flash_sector_write@page
 34284  0152B6  C08E  F080         	movff	ExternalFlash_SectorWrite@page+1,flash_sector_write@page+1
 34285  0152BA  C08A  F081         	movff	ExternalFlash_SectorWrite@buffer,flash_sector_write@data
 34286  0152BE  C08B  F082         	movff	ExternalFlash_SectorWrite@buffer+1,flash_sector_write@data+1
 34287  0152C2  EC4A  F0A6         	call	_flash_sector_write	;wreg free
 34288                           
 34289                           ;external_flash.c: 69: return 1;
 34290  0152C6  0E01               	movlw	1
 34291  0152C8  0012               	return	
 34292  0152CA                     __end_of_ExternalFlash_SectorWrite:
 34293                           	opt stack 0
 34294                           tosu	equ	0xFFF
 34295                           tosh	equ	0xFFE
 34296                           tosl	equ	0xFFD
 34297                           pclath	equ	0xFFA
 34298                           tblptru	equ	0xFF8
 34299                           tblptrh	equ	0xFF7
 34300                           tblptrl	equ	0xFF6
 34301                           tablat	equ	0xFF5
 34302                           prodh	equ	0xFF4
 34303                           prodl	equ	0xFF3
 34304                           intcon	equ	0xFF2
 34305                           postinc0	equ	0xFEE
 34306                           wreg	equ	0xFE8
 34307                           indf1	equ	0xFE7
 34308                           postinc1	equ	0xFE6
 34309                           postdec1	equ	0xFE5
 34310                           plusw1	equ	0xFE3
 34311                           fsr1h	equ	0xFE2
 34312                           fsr1l	equ	0xFE1
 34313                           indf2	equ	0xFDF
 34314                           postinc2	equ	0xFDE
 34315                           postdec2	equ	0xFDD
 34316                           plusw2	equ	0xFDB
 34317                           fsr2h	equ	0xFDA
 34318                           fsr2l	equ	0xFD9
 34319                           status	equ	0xFD8
 34320                           
 34321 ;; *************** function _flash_sector_write *****************
 34322 ;; Defined at:
 34323 ;;		line 434 in file "flash.c"
 34324 ;; Parameters:    Size  Location     Type
 34325 ;;  page            2   31[BANK0 ] unsigned int 
 34326 ;;  data            2   33[BANK0 ] PTR unsigned char 
 34327 ;;		 -> buffer(512), msd_buffer(512), 
 34328 ;; Auto vars:     Size  Location     Type
 34329 ;;  match           1   35[BANK0 ] enum E7004
 34330 ;; Return value:  Size  Location     Type
 34331 ;;                  1    wreg      void 
 34332 ;; Registers used:
 34333 ;;		wreg, status,2, status,0, cstack
 34334 ;; Tracked objects:
 34335 ;;		On entry : 0/0
 34336 ;;		On exit  : 0/0
 34337 ;;		Unchanged: 0/0
 34338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34339 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34340 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34342 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34343 ;;Total ram usage:        5 bytes
 34344 ;; Hardware stack levels used:    1
 34345 ;; Hardware stack levels required when called:   14
 34346 ;; This function calls:
 34347 ;;		__flash_compare_page_to_buffer
 34348 ;;		__flash_write_page_from_buffer
 34349 ;;		__flash_write_to_buffer
 34350 ;; This function is called by:
 34351 ;;		_ExternalFlash_SectorWrite
 34352 ;;		__make_cluster_chain
 34353 ;;		_fat_format
 34354 ;; This function uses a non-reentrant model
 34355 ;;
 34356                           
 34357                           	psect	text134
 34358  014C94                     __ptext134:
 34359                           	opt stack 0
 34360  014C94                     _flash_sector_write:
 34361                           	opt stack 13
 34362                           
 34363                           ;flash.c: 436: flashMatchResult_t match;;flash.c: 439: _flash_write_to_buffer(0, data, 5
      +                          12, FLASH_BUFFER_1);
 34364                           
 34365                           ;incstack = 0
 34366  014C94  0E00               	movlw	0
 34367  014C96  0100               	movlb	0	; () banked
 34368  014C98  6F74               	movwf	(__flash_write_to_buffer@start+1)& (0+255),b
 34369  014C9A  0E00               	movlw	0
 34370  014C9C  6F73               	movwf	__flash_write_to_buffer@start& (0+255),b
 34371  014C9E  C081  F075         	movff	flash_sector_write@data,__flash_write_to_buffer@data
 34372  014CA2  C082  F076         	movff	flash_sector_write@data+1,__flash_write_to_buffer@data+1
 34373  014CA6  0E02               	movlw	2
 34374  014CA8  6F78               	movwf	(__flash_write_to_buffer@data_length+1)& (0+255),b
 34375  014CAA  0E00               	movlw	0
 34376  014CAC  6F77               	movwf	__flash_write_to_buffer@data_length& (0+255),b
 34377  014CAE  0E00               	movlw	0
 34378  014CB0  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 34379  014CB2  ECA9  F0A5         	call	__flash_write_to_buffer	;wreg free
 34380                           
 34381                           ;flash.c: 442: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 34382  014CB6  C07F  F073         	movff	flash_sector_write@page,__flash_compare_page_to_buffer@page
 34383  014CBA  C080  F074         	movff	flash_sector_write@page+1,__flash_compare_page_to_buffer@page+1
 34384  014CBE  0E00               	movlw	0
 34385  014CC0  0100               	movlb	0	; () banked
 34386  014CC2  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 34387  014CC4  ECFA  F09D         	call	__flash_compare_page_to_buffer	;wreg free
 34388  014CC8  0100               	movlb	0	; () banked
 34389  014CCA  6F83               	movwf	flash_sector_write@match& (0+255),b
 34390                           
 34391                           ; BSR set to: 0
 34392                           ;flash.c: 445: if(match==DATA_DOES_NOT_MATCH)
 34393  014CCC  0583               	decf	flash_sector_write@match& (0+255),w,b
 34394  014CCE  A4D8               	btfss	status,2,c
 34395  014CD0  0012               	return	
 34396                           
 34397                           ; BSR set to: 0
 34398                           ;flash.c: 446: {;flash.c: 447: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 34399  014CD2  C07F  F073         	movff	flash_sector_write@page,__flash_write_page_from_buffer@page
 34400  014CD6  C080  F074         	movff	flash_sector_write@page+1,__flash_write_page_from_buffer@page+1
 34401  014CDA  0E00               	movlw	0
 34402  014CDC  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 34403  014CDE  EC49  F0A3         	call	__flash_write_page_from_buffer	;wreg free
 34404  014CE2  0012               	return	
 34405  014CE4                     __end_of_flash_sector_write:
 34406                           	opt stack 0
 34407                           tosu	equ	0xFFF
 34408                           tosh	equ	0xFFE
 34409                           tosl	equ	0xFFD
 34410                           pclath	equ	0xFFA
 34411                           tblptru	equ	0xFF8
 34412                           tblptrh	equ	0xFF7
 34413                           tblptrl	equ	0xFF6
 34414                           tablat	equ	0xFF5
 34415                           prodh	equ	0xFF4
 34416                           prodl	equ	0xFF3
 34417                           intcon	equ	0xFF2
 34418                           postinc0	equ	0xFEE
 34419                           wreg	equ	0xFE8
 34420                           indf1	equ	0xFE7
 34421                           postinc1	equ	0xFE6
 34422                           postdec1	equ	0xFE5
 34423                           plusw1	equ	0xFE3
 34424                           fsr1h	equ	0xFE2
 34425                           fsr1l	equ	0xFE1
 34426                           indf2	equ	0xFDF
 34427                           postinc2	equ	0xFDE
 34428                           postdec2	equ	0xFDD
 34429                           plusw2	equ	0xFDB
 34430                           fsr2h	equ	0xFDA
 34431                           fsr2l	equ	0xFD9
 34432                           status	equ	0xFD8
 34433                           
 34434 ;; *************** function __flash_write_to_buffer *****************
 34435 ;; Defined at:
 34436 ;;		line 236 in file "flash.c"
 34437 ;; Parameters:    Size  Location     Type
 34438 ;;  start           2   19[BANK0 ] unsigned int 
 34439 ;;  data            2   21[BANK0 ] PTR unsigned char 
 34440 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 34441 ;;		 -> _delete_root@deleted_value(1), buffer(512), msd_buffer(512), 
 34442 ;;  data_length     2   23[BANK0 ] unsigned int 
 34443 ;;  buffer          1   25[BANK0 ] enum E7000
 34444 ;; Auto vars:     Size  Location     Type
 34445 ;;  command         4   26[BANK0 ] unsigned char [4]
 34446 ;; Return value:  Size  Location     Type
 34447 ;;                  1    wreg      void 
 34448 ;; Registers used:
 34449 ;;		wreg, status,2, status,0, cstack
 34450 ;; Tracked objects:
 34451 ;;		On entry : 0/0
 34452 ;;		On exit  : 0/0
 34453 ;;		Unchanged: 0/0
 34454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34455 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34456 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34458 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34459 ;;Total ram usage:       11 bytes
 34460 ;; Hardware stack levels used:    1
 34461 ;; Hardware stack levels required when called:   13
 34462 ;; This function calls:
 34463 ;;		__flash_is_busy
 34464 ;;		_spi_tx_tx
 34465 ;; This function is called by:
 34466 ;;		_flash_sector_write
 34467 ;;		_flash_partial_write
 34468 ;;		_flash_write_to_buffer
 34469 ;; This function uses a non-reentrant model
 34470 ;;
 34471                           
 34472                           	psect	text135
 34473  014B52                     __ptext135:
 34474                           	opt stack 0
 34475  014B52                     __flash_write_to_buffer:
 34476                           	opt stack 13
 34477                           
 34478                           ;flash.c: 238: uint8_t command[4];;flash.c: 241: while(_flash_is_busy());
 34479                           
 34480                           ;incstack = 0
 34481  014B52  EC8A  F0AB         	call	__flash_is_busy	;wreg free
 34482  014B56  0900               	iorlw	0
 34483  014B58  A4D8               	btfss	status,2,c
 34484  014B5A  D7FB               	goto	__flash_write_to_buffer
 34485                           
 34486                           ;flash.c: 244: if(buffer==FLASH_BUFFER_1)
 34487  014B5C  0100               	movlb	0	; () banked
 34488  014B5E  5179               	movf	__flash_write_to_buffer@buffer& (0+255),w,b
 34489  014B60  A4D8               	btfss	status,2,c
 34490  014B62  D002               	goto	l1567
 34491                           
 34492                           ; BSR set to: 0
 34493                           ;flash.c: 245: command[0] = 0x84;
 34494  014B64  0E84               	movlw	132
 34495  014B66  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 34496  014B68                     l1567:
 34497                           
 34498                           ; BSR set to: 0
 34499                           ;flash.c: 246: if(buffer==FLASH_BUFFER_2)
 34500                           
 34501                           ; BSR set to: 0
 34502  014B68  0579               	decf	__flash_write_to_buffer@buffer& (0+255),w,b
 34503  014B6A  A4D8               	btfss	status,2,c
 34504  014B6C  D002               	goto	l1568
 34505                           
 34506                           ; BSR set to: 0
 34507                           ;flash.c: 247: command[0] = 0x87;
 34508  014B6E  0E87               	movlw	135
 34509  014B70  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 34510  014B72                     l1568:
 34511                           
 34512                           ; BSR set to: 0
 34513                           ;flash.c: 249: command[1] = 0x00;
 34514  014B72  0E00               	movlw	0
 34515  014B74  6F7B               	movwf	(__flash_write_to_buffer@command+1)& (0+255),b
 34516                           
 34517                           ;flash.c: 250: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 34518  014B76  5174               	movf	(__flash_write_to_buffer@start+1)& (0+255),w,b
 34519  014B78  6F7C               	movwf	(__flash_write_to_buffer@command+2)& (0+255),b
 34520                           
 34521                           ; BSR set to: 0
 34522                           ;flash.c: 251: command[3] = ((unsigned char)((start)&0xFF));
 34523  014B7A  C073  F07D         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 34524                           
 34525                           ; BSR set to: 0
 34526                           ;flash.c: 254: spi_tx_tx(command, 4, data, data_length);
 34527  014B7E  0E7A               	movlw	low __flash_write_to_buffer@command
 34528  014B80  6F60               	movwf	spi_tx_tx@command& (0+255),b
 34529  014B82  0E00               	movlw	high __flash_write_to_buffer@command
 34530  014B84  6F61               	movwf	(spi_tx_tx@command+1)& (0+255),b
 34531  014B86  0E00               	movlw	0
 34532  014B88  6F63               	movwf	(spi_tx_tx@command_length+1)& (0+255),b
 34533  014B8A  0E04               	movlw	4
 34534  014B8C  6F62               	movwf	spi_tx_tx@command_length& (0+255),b
 34535  014B8E  C075  F064         	movff	__flash_write_to_buffer@data,spi_tx_tx@data
 34536  014B92  C076  F065         	movff	__flash_write_to_buffer@data+1,spi_tx_tx@data+1
 34537  014B96  C077  F066         	movff	__flash_write_to_buffer@data_length,spi_tx_tx@data_length
 34538  014B9A  C078  F067         	movff	__flash_write_to_buffer@data_length+1,spi_tx_tx@data_length+1
 34539  014B9E  ECE4  F09B         	call	_spi_tx_tx	;wreg free
 34540  014BA2  0012               	return		;funcret
 34541  014BA4                     __end_of__flash_write_to_buffer:
 34542                           	opt stack 0
 34543                           tosu	equ	0xFFF
 34544                           tosh	equ	0xFFE
 34545                           tosl	equ	0xFFD
 34546                           pclath	equ	0xFFA
 34547                           tblptru	equ	0xFF8
 34548                           tblptrh	equ	0xFF7
 34549                           tblptrl	equ	0xFF6
 34550                           tablat	equ	0xFF5
 34551                           prodh	equ	0xFF4
 34552                           prodl	equ	0xFF3
 34553                           intcon	equ	0xFF2
 34554                           postinc0	equ	0xFEE
 34555                           wreg	equ	0xFE8
 34556                           indf1	equ	0xFE7
 34557                           postinc1	equ	0xFE6
 34558                           postdec1	equ	0xFE5
 34559                           plusw1	equ	0xFE3
 34560                           fsr1h	equ	0xFE2
 34561                           fsr1l	equ	0xFE1
 34562                           indf2	equ	0xFDF
 34563                           postinc2	equ	0xFDE
 34564                           postdec2	equ	0xFDD
 34565                           plusw2	equ	0xFDB
 34566                           fsr2h	equ	0xFDA
 34567                           fsr2l	equ	0xFD9
 34568                           status	equ	0xFD8
 34569                           
 34570 ;; *************** function _spi_tx_tx *****************
 34571 ;; Defined at:
 34572 ;;		line 146 in file "spi.c"
 34573 ;; Parameters:    Size  Location     Type
 34574 ;;  command         2    0[BANK0 ] PTR unsigned char 
 34575 ;;		 -> _flash_write_to_buffer@command(4), 
 34576 ;;  command_leng    2    2[BANK0 ] unsigned int 
 34577 ;;  data            2    4[BANK0 ] PTR unsigned char 
 34578 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 34579 ;;		 -> _delete_root@deleted_value(1), buffer(512), msd_buffer(512), 
 34580 ;;  data_length     2    6[BANK0 ] unsigned int 
 34581 ;; Auto vars:     Size  Location     Type
 34582 ;;		None
 34583 ;; Return value:  Size  Location     Type
 34584 ;;                  1    wreg      void 
 34585 ;; Registers used:
 34586 ;;		wreg, status,2, status,0
 34587 ;; Tracked objects:
 34588 ;;		On entry : 0/0
 34589 ;;		On exit  : 0/0
 34590 ;;		Unchanged: 0/0
 34591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34592 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34594 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34595 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34596 ;;Total ram usage:       12 bytes
 34597 ;; Hardware stack levels used:    1
 34598 ;; Hardware stack levels required when called:   10
 34599 ;; This function calls:
 34600 ;;		Nothing
 34601 ;; This function is called by:
 34602 ;;		__flash_write_to_buffer
 34603 ;; This function uses a non-reentrant model
 34604 ;;
 34605                           
 34606                           	psect	text136
 34607  0137C8                     __ptext136:
 34608                           	opt stack 0
 34609  0137C8                     _spi_tx_tx:
 34610                           	opt stack 15
 34611                           
 34612                           ;spi.c: 149: DMACON1bits.SSCON1 = 0;
 34613                           
 34614                           ;incstack = 0
 34615  0137C8  9E88               	bcf	3976,7,c	;volatile
 34616                           
 34617                           ;spi.c: 150: DMACON1bits.SSCON0 = 0;
 34618  0137CA  9C88               	bcf	3976,6,c	;volatile
 34619                           
 34620                           ;spi.c: 152: DMACON1bits.TXINC = 1;
 34621  0137CC  8A88               	bsf	3976,5,c	;volatile
 34622                           
 34623                           ;spi.c: 154: DMACON1bits.RXINC = 0;
 34624  0137CE  9888               	bcf	3976,4,c	;volatile
 34625                           
 34626                           ;spi.c: 156: DMACON1bits.DUPLEX1 = 0;
 34627  0137D0  9688               	bcf	3976,3,c	;volatile
 34628                           
 34629                           ;spi.c: 157: DMACON1bits.DUPLEX0 = 1;
 34630  0137D2  8488               	bsf	3976,2,c	;volatile
 34631                           
 34632                           ;spi.c: 159: DMACON1bits.DLYINTEN = 0;
 34633  0137D4  9288               	bcf	3976,1,c	;volatile
 34634                           
 34635                           ;spi.c: 161: DMACON2bits.DLYCYC = 0b0000;
 34636  0137D6  9886               	bcf	3974,4,c	;volatile
 34637  0137D8  9A86               	bcf	3974,5,c	;volatile
 34638  0137DA  9C86               	bcf	3974,6,c	;volatile
 34639  0137DC  9E86               	bcf	3974,7,c	;volatile
 34640                           
 34641                           ;spi.c: 163: DMACON2bits.INTLVL = 0b0000;
 34642  0137DE  9086               	bcf	3974,0,c	;volatile
 34643  0137E0  9286               	bcf	3974,1,c	;volatile
 34644  0137E2  9486               	bcf	3974,2,c	;volatile
 34645  0137E4  9686               	bcf	3974,3,c	;volatile
 34646                           
 34647                           ;spi.c: 166: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 34648  0137E6  0100               	movlb	0	; () banked
 34649  0137E8  5161               	movf	(spi_tx_tx@command+1)& (0+255),w,b
 34650  0137EA  6E6A               	movwf	3946,c	;volatile
 34651                           
 34652                           ; BSR set to: 0
 34653                           ;spi.c: 167: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 34654  0137EC  C060  FF6B         	movff	spi_tx_tx@command,3947	;volatile
 34655                           
 34656                           ; BSR set to: 0
 34657                           ;spi.c: 170: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 34658  0137F0  0EFF               	movlw	255
 34659  0137F2  6F68               	movwf	??_spi_tx_tx& (0+255),b
 34660  0137F4  0EFF               	movlw	255
 34661  0137F6  6F69               	movwf	(??_spi_tx_tx+1)& (0+255),b
 34662  0137F8  C062  F06A         	movff	spi_tx_tx@command_length,??_spi_tx_tx+2
 34663  0137FC  C063  F06B         	movff	spi_tx_tx@command_length+1,??_spi_tx_tx+3
 34664  013800  5168               	movf	??_spi_tx_tx& (0+255),w,b
 34665  013802  276A               	addwf	(??_spi_tx_tx+2)& (0+255),f,b
 34666  013804  5169               	movf	(??_spi_tx_tx+1)& (0+255),w,b
 34667  013806  236B               	addwfc	(??_spi_tx_tx+3)& (0+255),f,b
 34668  013808  C06B  F06A         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 34669  01380C  6B6B               	clrf	(??_spi_tx_tx+3)& (0+255),b
 34670  01380E  516A               	movf	(??_spi_tx_tx+2)& (0+255),w,b
 34671  013810  6E66               	movwf	3942,c	;volatile
 34672                           
 34673                           ; BSR set to: 0
 34674                           ;spi.c: 171: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 34675  013812  0562               	decf	spi_tx_tx@command_length& (0+255),w,b
 34676  013814  6E67               	movwf	3943,c	;volatile
 34677                           
 34678                           ; BSR set to: 0
 34679                           ;spi.c: 174: LATDbits.LD7 = 0;
 34680  013816  9E8C               	bcf	3980,7,c	;volatile
 34681                           
 34682                           ; BSR set to: 0
 34683                           ;spi.c: 177: DMACON1bits.DMAEN = 1;
 34684  013818  8088               	bsf	3976,0,c	;volatile
 34685  01381A                     
 34686                           ; BSR set to: 0
 34687  01381A  B088               	btfsc	3976,0,c	;volatile
 34688  01381C  D7FE               	goto	l2178
 34689                           
 34690                           ;spi.c: 181: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 34691  01381E  0100               	movlb	0	; () banked
 34692  013820  5165               	movf	(spi_tx_tx@data+1)& (0+255),w,b
 34693  013822  6E6A               	movwf	3946,c	;volatile
 34694                           
 34695                           ; BSR set to: 0
 34696                           ;spi.c: 182: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 34697  013824  C064  FF6B         	movff	spi_tx_tx@data,3947	;volatile
 34698                           
 34699                           ; BSR set to: 0
 34700                           ;spi.c: 185: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 34701  013828  0EFF               	movlw	255
 34702  01382A  6F68               	movwf	??_spi_tx_tx& (0+255),b
 34703  01382C  0EFF               	movlw	255
 34704  01382E  6F69               	movwf	(??_spi_tx_tx+1)& (0+255),b
 34705  013830  C066  F06A         	movff	spi_tx_tx@data_length,??_spi_tx_tx+2
 34706  013834  C067  F06B         	movff	spi_tx_tx@data_length+1,??_spi_tx_tx+3
 34707  013838  5168               	movf	??_spi_tx_tx& (0+255),w,b
 34708  01383A  276A               	addwf	(??_spi_tx_tx+2)& (0+255),f,b
 34709  01383C  5169               	movf	(??_spi_tx_tx+1)& (0+255),w,b
 34710  01383E  236B               	addwfc	(??_spi_tx_tx+3)& (0+255),f,b
 34711  013840  C06B  F06A         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 34712  013844  6B6B               	clrf	(??_spi_tx_tx+3)& (0+255),b
 34713  013846  516A               	movf	(??_spi_tx_tx+2)& (0+255),w,b
 34714  013848  6E66               	movwf	3942,c	;volatile
 34715                           
 34716                           ; BSR set to: 0
 34717                           ;spi.c: 186: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 34718  01384A  0566               	decf	spi_tx_tx@data_length& (0+255),w,b
 34719  01384C  6E67               	movwf	3943,c	;volatile
 34720                           
 34721                           ; BSR set to: 0
 34722                           ;spi.c: 189: DMACON1bits.DMAEN = 1;
 34723  01384E  8088               	bsf	3976,0,c	;volatile
 34724  013850                     
 34725                           ; BSR set to: 0
 34726  013850  B088               	btfsc	3976,0,c	;volatile
 34727  013852  D7FE               	goto	l2181
 34728                           
 34729                           ;spi.c: 193: LATDbits.LD7 = 1;
 34730  013854  8E8C               	bsf	3980,7,c	;volatile
 34731  013856  0012               	return		;funcret
 34732  013858                     __end_of_spi_tx_tx:
 34733                           	opt stack 0
 34734                           tosu	equ	0xFFF
 34735                           tosh	equ	0xFFE
 34736                           tosl	equ	0xFFD
 34737                           pclath	equ	0xFFA
 34738                           tblptru	equ	0xFF8
 34739                           tblptrh	equ	0xFF7
 34740                           tblptrl	equ	0xFF6
 34741                           tablat	equ	0xFF5
 34742                           prodh	equ	0xFF4
 34743                           prodl	equ	0xFF3
 34744                           intcon	equ	0xFF2
 34745                           postinc0	equ	0xFEE
 34746                           wreg	equ	0xFE8
 34747                           indf1	equ	0xFE7
 34748                           postinc1	equ	0xFE6
 34749                           postdec1	equ	0xFE5
 34750                           plusw1	equ	0xFE3
 34751                           fsr1h	equ	0xFE2
 34752                           fsr1l	equ	0xFE1
 34753                           indf2	equ	0xFDF
 34754                           postinc2	equ	0xFDE
 34755                           postdec2	equ	0xFDD
 34756                           plusw2	equ	0xFDB
 34757                           fsr2h	equ	0xFDA
 34758                           fsr2l	equ	0xFD9
 34759                           status	equ	0xFD8
 34760                           
 34761 ;; *************** function __flash_write_page_from_buffer *****************
 34762 ;; Defined at:
 34763 ;;		line 258 in file "flash.c"
 34764 ;; Parameters:    Size  Location     Type
 34765 ;;  page            2   19[BANK0 ] unsigned int 
 34766 ;;  buffer          1   21[BANK0 ] enum E7000
 34767 ;; Auto vars:     Size  Location     Type
 34768 ;;  command         4   25[BANK0 ] unsigned char [4]
 34769 ;; Return value:  Size  Location     Type
 34770 ;;                  1    wreg      void 
 34771 ;; Registers used:
 34772 ;;		wreg, status,2, status,0, cstack
 34773 ;; Tracked objects:
 34774 ;;		On entry : 0/0
 34775 ;;		On exit  : 0/0
 34776 ;;		Unchanged: 0/0
 34777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34778 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34779 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34780 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34781 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34782 ;;Total ram usage:       10 bytes
 34783 ;; Hardware stack levels used:    1
 34784 ;; Hardware stack levels required when called:   13
 34785 ;; This function calls:
 34786 ;;		__flash_is_busy
 34787 ;;		_spi_tx
 34788 ;; This function is called by:
 34789 ;;		_flash_sector_write
 34790 ;;		_flash_partial_write
 34791 ;;		_flash_write_page_from_buffer
 34792 ;; This function uses a non-reentrant model
 34793 ;;
 34794                           
 34795                           	psect	text137
 34796  014692                     __ptext137:
 34797                           	opt stack 0
 34798  014692                     __flash_write_page_from_buffer:
 34799                           	opt stack 13
 34800                           
 34801                           ;flash.c: 260: uint8_t command[4];;flash.c: 263: while(_flash_is_busy());
 34802                           
 34803                           ;incstack = 0
 34804  014692  EC8A  F0AB         	call	__flash_is_busy	;wreg free
 34805  014696  0900               	iorlw	0
 34806  014698  A4D8               	btfss	status,2,c
 34807  01469A  D7FB               	goto	__flash_write_page_from_buffer
 34808                           
 34809                           ;flash.c: 266: if(buffer==FLASH_BUFFER_1)
 34810  01469C  0100               	movlb	0	; () banked
 34811  01469E  5175               	movf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 34812  0146A0  A4D8               	btfss	status,2,c
 34813  0146A2  D002               	goto	l1575
 34814                           
 34815                           ; BSR set to: 0
 34816                           ;flash.c: 267: command[0] = 0x83;
 34817  0146A4  0E83               	movlw	131
 34818  0146A6  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 34819  0146A8                     l1575:
 34820                           
 34821                           ; BSR set to: 0
 34822                           ;flash.c: 268: if(buffer==FLASH_BUFFER_2)
 34823                           
 34824                           ; BSR set to: 0
 34825  0146A8  0575               	decf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 34826  0146AA  A4D8               	btfss	status,2,c
 34827  0146AC  D002               	goto	l1576
 34828                           
 34829                           ; BSR set to: 0
 34830                           ;flash.c: 269: command[0] = 0x86;
 34831  0146AE  0E86               	movlw	134
 34832  0146B0  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 34833  0146B2                     l1576:
 34834                           
 34835                           ; BSR set to: 0
 34836                           ;flash.c: 271: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 34837                           
 34838                           ; BSR set to: 0
 34839  0146B2  C073  F076         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 34840  0146B6  C074  F077         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 34841  0146BA  0E07               	movlw	7
 34842  0146BC  6F78               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),b
 34843  0146BE                     u9785:
 34844  0146BE  90D8               	bcf	status,0,c
 34845  0146C0  3377               	rrcf	(??__flash_write_page_from_buffer+1)& (0+255),f,b
 34846  0146C2  3376               	rrcf	??__flash_write_page_from_buffer& (0+255),f,b
 34847  0146C4  2F78               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,b
 34848  0146C6  D7FB               	goto	u9785
 34849  0146C8  5176               	movf	??__flash_write_page_from_buffer& (0+255),w,b
 34850  0146CA  6F7A               	movwf	(__flash_write_page_from_buffer@command+1)& (0+255),b
 34851                           
 34852                           ; BSR set to: 0
 34853                           ;flash.c: 272: command[2] = ((unsigned char)((page<<1)&0xFF));
 34854  0146CC  5173               	movf	__flash_write_page_from_buffer@page& (0+255),w,b
 34855  0146CE  2573               	addwf	__flash_write_page_from_buffer@page& (0+255),w,b
 34856  0146D0  6F7B               	movwf	(__flash_write_page_from_buffer@command+2)& (0+255),b
 34857                           
 34858                           ;flash.c: 273: command[3] = 0x00;
 34859  0146D2  0E00               	movlw	0
 34860  0146D4  6F7C               	movwf	(__flash_write_page_from_buffer@command+3)& (0+255),b
 34861                           
 34862                           ; BSR set to: 0
 34863                           ;flash.c: 276: spi_tx(command, 4);
 34864  0146D6  0E79               	movlw	low __flash_write_page_from_buffer@command
 34865  0146D8  6F60               	movwf	spi_tx@data& (0+255),b
 34866  0146DA  0E00               	movlw	high __flash_write_page_from_buffer@command
 34867  0146DC  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 34868  0146DE  0E00               	movlw	0
 34869  0146E0  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 34870  0146E2  0E04               	movlw	4
 34871  0146E4  6F62               	movwf	spi_tx@length& (0+255),b
 34872  0146E6  EC76  F0A3         	call	_spi_tx	;wreg free
 34873  0146EA  0012               	return		;funcret
 34874  0146EC                     __end_of__flash_write_page_from_buffer:
 34875                           	opt stack 0
 34876                           tosu	equ	0xFFF
 34877                           tosh	equ	0xFFE
 34878                           tosl	equ	0xFFD
 34879                           pclath	equ	0xFFA
 34880                           tblptru	equ	0xFF8
 34881                           tblptrh	equ	0xFF7
 34882                           tblptrl	equ	0xFF6
 34883                           tablat	equ	0xFF5
 34884                           prodh	equ	0xFF4
 34885                           prodl	equ	0xFF3
 34886                           intcon	equ	0xFF2
 34887                           postinc0	equ	0xFEE
 34888                           wreg	equ	0xFE8
 34889                           indf1	equ	0xFE7
 34890                           postinc1	equ	0xFE6
 34891                           postdec1	equ	0xFE5
 34892                           plusw1	equ	0xFE3
 34893                           fsr1h	equ	0xFE2
 34894                           fsr1l	equ	0xFE1
 34895                           indf2	equ	0xFDF
 34896                           postinc2	equ	0xFDE
 34897                           postdec2	equ	0xFDD
 34898                           plusw2	equ	0xFDB
 34899                           fsr2h	equ	0xFDA
 34900                           fsr2l	equ	0xFD9
 34901                           status	equ	0xFD8
 34902                           
 34903 ;; *************** function __flash_compare_page_to_buffer *****************
 34904 ;; Defined at:
 34905 ;;		line 176 in file "flash.c"
 34906 ;; Parameters:    Size  Location     Type
 34907 ;;  page            2   19[BANK0 ] unsigned int 
 34908 ;;  buffer          1   21[BANK0 ] enum E7000
 34909 ;; Auto vars:     Size  Location     Type
 34910 ;;  command         4   27[BANK0 ] unsigned char [4]
 34911 ;;  status          2   25[BANK0 ] unsigned int 
 34912 ;; Return value:  Size  Location     Type
 34913 ;;                  1    wreg      enum E7004
 34914 ;; Registers used:
 34915 ;;		wreg, status,2, status,0, cstack
 34916 ;; Tracked objects:
 34917 ;;		On entry : 0/0
 34918 ;;		On exit  : 0/0
 34919 ;;		Unchanged: 0/0
 34920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34921 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34922 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34923 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34924 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34925 ;;Total ram usage:       12 bytes
 34926 ;; Hardware stack levels used:    1
 34927 ;; Hardware stack levels required when called:   13
 34928 ;; This function calls:
 34929 ;;		__flash_get_status
 34930 ;;		__flash_is_busy
 34931 ;;		_spi_tx
 34932 ;; This function is called by:
 34933 ;;		_flash_sector_write
 34934 ;;		_flash_partial_write
 34935 ;; This function uses a non-reentrant model
 34936 ;;
 34937                           
 34938                           	psect	text138
 34939  013BF4                     __ptext138:
 34940                           	opt stack 0
 34941  013BF4                     __flash_compare_page_to_buffer:
 34942                           	opt stack 13
 34943                           
 34944                           ;flash.c: 178: uint8_t command[4];;flash.c: 179: uint16_t status;;flash.c: 182: while(_f
      +                          lash_is_busy());
 34945                           
 34946                           ;incstack = 0
 34947  013BF4  EC8A  F0AB         	call	__flash_is_busy	;wreg free
 34948  013BF8  0900               	iorlw	0
 34949  013BFA  A4D8               	btfss	status,2,c
 34950  013BFC  D7FB               	goto	__flash_compare_page_to_buffer
 34951                           
 34952                           ;flash.c: 185: if(buffer==FLASH_BUFFER_1)
 34953  013BFE  0100               	movlb	0	; () banked
 34954  013C00  5175               	movf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 34955  013C02  A4D8               	btfss	status,2,c
 34956  013C04  D002               	goto	l1548
 34957                           
 34958                           ; BSR set to: 0
 34959                           ;flash.c: 186: command[0] = 0x60;
 34960  013C06  0E60               	movlw	96
 34961  013C08  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 34962  013C0A                     l1548:
 34963                           
 34964                           ; BSR set to: 0
 34965                           ;flash.c: 187: if(buffer==FLASH_BUFFER_2)
 34966                           
 34967                           ; BSR set to: 0
 34968  013C0A  0575               	decf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 34969  013C0C  A4D8               	btfss	status,2,c
 34970  013C0E  D002               	goto	l1549
 34971                           
 34972                           ; BSR set to: 0
 34973                           ;flash.c: 188: command[0] = 0x60;
 34974  013C10  0E60               	movlw	96
 34975  013C12  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 34976  013C14                     l1549:
 34977                           
 34978                           ; BSR set to: 0
 34979                           ;flash.c: 190: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 34980                           
 34981                           ; BSR set to: 0
 34982  013C14  C073  F076         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 34983  013C18  C074  F077         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 34984  013C1C  0E07               	movlw	7
 34985  013C1E  6F78               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),b
 34986  013C20                     u9695:
 34987  013C20  90D8               	bcf	status,0,c
 34988  013C22  3377               	rrcf	(??__flash_compare_page_to_buffer+1)& (0+255),f,b
 34989  013C24  3376               	rrcf	??__flash_compare_page_to_buffer& (0+255),f,b
 34990  013C26  2F78               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,b
 34991  013C28  D7FB               	goto	u9695
 34992  013C2A  5176               	movf	??__flash_compare_page_to_buffer& (0+255),w,b
 34993  013C2C  6F7C               	movwf	(__flash_compare_page_to_buffer@command+1)& (0+255),b
 34994                           
 34995                           ; BSR set to: 0
 34996                           ;flash.c: 191: command[2] = ((unsigned char)((page<<1)&0xFF));
 34997  013C2E  5173               	movf	__flash_compare_page_to_buffer@page& (0+255),w,b
 34998  013C30  2573               	addwf	__flash_compare_page_to_buffer@page& (0+255),w,b
 34999  013C32  6F7D               	movwf	(__flash_compare_page_to_buffer@command+2)& (0+255),b
 35000                           
 35001                           ;flash.c: 192: command[3] = 0x00;
 35002  013C34  0E00               	movlw	0
 35003  013C36  6F7E               	movwf	(__flash_compare_page_to_buffer@command+3)& (0+255),b
 35004                           
 35005                           ; BSR set to: 0
 35006                           ;flash.c: 195: spi_tx(command, 4);
 35007  013C38  0E7B               	movlw	low __flash_compare_page_to_buffer@command
 35008  013C3A  6F60               	movwf	spi_tx@data& (0+255),b
 35009  013C3C  0E00               	movlw	high __flash_compare_page_to_buffer@command
 35010  013C3E  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 35011  013C40  0E00               	movlw	0
 35012  013C42  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 35013  013C44  0E04               	movlw	4
 35014  013C46  6F62               	movwf	spi_tx@length& (0+255),b
 35015  013C48  EC76  F0A3         	call	_spi_tx	;wreg free
 35016  013C4C  EC8A  F0AB         	call	__flash_is_busy	;wreg free
 35017  013C50  0900               	iorlw	0
 35018  013C52  A4D8               	btfss	status,2,c
 35019  013C54  D7FB               	goto	l1551
 35020                           
 35021                           ;flash.c: 201: status = _flash_get_status();
 35022  013C56  EC7F  F0A9         	call	__flash_get_status	;wreg free
 35023  013C5A  C06C  F079         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 35024  013C5E  C06D  F07A         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 35025                           
 35026                           ;flash.c: 204: if(status & 0b0000000001000000)
 35027  013C62  0100               	movlb	0	; () banked
 35028  013C64  AD79               	btfss	__flash_compare_page_to_buffer@status& (0+255),6,b
 35029  013C66  D002               	goto	l1553
 35030                           
 35031                           ; BSR set to: 0
 35032                           ;flash.c: 205: {;flash.c: 207: return DATA_DOES_NOT_MATCH;
 35033  013C68  0E01               	movlw	1
 35034                           
 35035                           ; BSR set to: 0
 35036                           ;flash.c: 208: }
 35037                           
 35038                           ; BSR set to: 0
 35039  013C6A  0012               	return	
 35040  013C6C                     l1553:
 35041                           
 35042                           ; BSR set to: 0
 35043                           ;flash.c: 209: else;flash.c: 210: {;flash.c: 212: return DATA_DOES_MATCH;
 35044                           
 35045                           ; BSR set to: 0
 35046  013C6C  0E00               	movlw	0
 35047                           
 35048                           ; BSR set to: 0
 35049  013C6E  0012               	return	
 35050  013C70                     __end_of__flash_compare_page_to_buffer:
 35051                           	opt stack 0
 35052                           tosu	equ	0xFFF
 35053                           tosh	equ	0xFFE
 35054                           tosl	equ	0xFFD
 35055                           pclath	equ	0xFFA
 35056                           tblptru	equ	0xFF8
 35057                           tblptrh	equ	0xFF7
 35058                           tblptrl	equ	0xFF6
 35059                           tablat	equ	0xFF5
 35060                           prodh	equ	0xFF4
 35061                           prodl	equ	0xFF3
 35062                           intcon	equ	0xFF2
 35063                           postinc0	equ	0xFEE
 35064                           wreg	equ	0xFE8
 35065                           indf1	equ	0xFE7
 35066                           postinc1	equ	0xFE6
 35067                           postdec1	equ	0xFE5
 35068                           plusw1	equ	0xFE3
 35069                           fsr1h	equ	0xFE2
 35070                           fsr1l	equ	0xFE1
 35071                           indf2	equ	0xFDF
 35072                           postinc2	equ	0xFDE
 35073                           postdec2	equ	0xFDD
 35074                           plusw2	equ	0xFDB
 35075                           fsr2h	equ	0xFDA
 35076                           fsr2l	equ	0xFD9
 35077                           status	equ	0xFD8
 35078                           
 35079 ;; *************** function _MSDReadHandler *****************
 35080 ;; Defined at:
 35081 ;;		line 1038 in file "usb_device_msd.c"
 35082 ;; Parameters:    Size  Location     Type
 35083 ;;		None
 35084 ;; Auto vars:     Size  Location     Type
 35085 ;;		None
 35086 ;; Return value:  Size  Location     Type
 35087 ;;                  1    wreg      unsigned char 
 35088 ;; Registers used:
 35089 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 35090 ;; Tracked objects:
 35091 ;;		On entry : 0/0
 35092 ;;		On exit  : 0/0
 35093 ;;		Unchanged: 0/0
 35094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35097 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35098 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35099 ;;Total ram usage:        4 bytes
 35100 ;; Hardware stack levels used:    1
 35101 ;; Hardware stack levels required when called:   16
 35102 ;; This function calls:
 35103 ;;		_ExternalFlash_SectorRead
 35104 ;;		_MSDCheckForErrorCases
 35105 ;;		_USBStallEndpoint
 35106 ;;		_USBTransferOnePacket
 35107 ;; This function is called by:
 35108 ;;		_MSDProcessCommandMediaPresent
 35109 ;; This function uses a non-reentrant model
 35110 ;;
 35111                           
 35112                           	psect	text139
 35113  00F044                     __ptext139:
 35114                           	opt stack 0
 35115  00F044                     _MSDReadHandler:
 35116                           	opt stack 10
 35117                           
 35118                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 35119                           
 35120                           ; BSR set to: 0
 35121                           ;incstack = 0
 35122  00F044  D0DF               	goto	l681
 35123  00F046                     l682:
 35124                           
 35125                           ; BSR set to: 1
 35126                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 35127  00F046  C211  F12E         	movff	_gblCBW+17,_LBA+3
 35128                           
 35129                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 35130  00F04A  C212  F12D         	movff	_gblCBW+18,_LBA+2
 35131                           
 35132                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 35133  00F04E  C213  F12C         	movff	_gblCBW+19,_LBA+1
 35134                           
 35135                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 35136  00F052  C214  F12B         	movff	_gblCBW+20,_LBA
 35137                           
 35138                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 35139  00F056  C216  F146         	movff	_gblCBW+22,_TransferLength+1
 35140                           
 35141                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 35142  00F05A  C217  F145         	movff	_gblCBW+23,_TransferLength
 35143                           
 35144                           ; BSR set to: 1
 35145                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 35146  00F05E  5145               	movf	_TransferLength& (0+255),w,b
 35147  00F060  0100               	movlb	0	; () banked
 35148  00F062  6F95               	movwf	??_MSDReadHandler& (0+255),b
 35149  00F064  0101               	movlb	1	; () banked
 35150  00F066  5146               	movf	(_TransferLength+1)& (0+255),w,b
 35151  00F068  0100               	movlb	0	; () banked
 35152  00F06A  6F96               	movwf	(??_MSDReadHandler+1)& (0+255),b
 35153  00F06C  6B97               	clrf	(??_MSDReadHandler+2)& (0+255),b
 35154  00F06E  6B98               	clrf	(??_MSDReadHandler+3)& (0+255),b
 35155  00F070  0E09               	movlw	9
 35156  00F072                     u11175:
 35157  00F072  90D8               	bcf	status,0,c
 35158  00F074  3795               	rlcf	??_MSDReadHandler& (0+255),f,b
 35159  00F076  3796               	rlcf	(??_MSDReadHandler+1)& (0+255),f,b
 35160  00F078  3797               	rlcf	(??_MSDReadHandler+2)& (0+255),f,b
 35161  00F07A  3798               	rlcf	(??_MSDReadHandler+3)& (0+255),f,b
 35162  00F07C  2EE8               	decfsz	wreg,f,c
 35163  00F07E  D7F9               	goto	u11175
 35164  00F080  C095  F06A         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 35165  00F084  C096  F06B         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 35166  00F088  C097  F06C         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 35167  00F08C  C098  F06D         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 35168  00F090  EC62  F085         	call	_MSDCheckForErrorCases	;wreg free
 35169  00F094  0900               	iorlw	0
 35170  00F096  A4D8               	btfss	status,2,c
 35171  00F098  D0C7               	goto	l684
 35172                           
 35173                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 35174                           
 35175                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 35176  00F09A  0E01               	movlw	1
 35177  00F09C  0101               	movlb	1	; () banked
 35178  00F09E  6F61               	movwf	_MSDReadState& (0+255),b
 35179  00F0A0                     
 35180                           ; BSR set to: 1
 35181                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 35182                           
 35183                           ; BSR set to: 1
 35184  00F0A0  5145               	movf	_TransferLength& (0+255),w,b
 35185  00F0A2  1146               	iorwf	(_TransferLength+1)& (0+255),w,b
 35186  00F0A4  A4D8               	btfss	status,2,c
 35187  00F0A6  D002               	goto	l686
 35188                           
 35189                           ; BSR set to: 1
 35190                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 35191  00F0A8  0E00               	movlw	0
 35192  00F0AA  D04A               	goto	L51
 35193  00F0AC                     l686:
 35194                           
 35195                           ; BSR set to: 1
 35196                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 35197                           
 35198                           ; BSR set to: 1
 35199  00F0AC  0745               	decf	_TransferLength& (0+255),f,b
 35200  00F0AE  A0D8               	btfss	status,0,c
 35201  00F0B0  0746               	decf	(_TransferLength+1)& (0+255),f,b
 35202                           
 35203                           ; BSR set to: 1
 35204                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 35205  00F0B2  0E02               	movlw	2
 35206  00F0B4  6F61               	movwf	_MSDReadState& (0+255),b
 35207  00F0B6                     
 35208                           ; BSR set to: 1
 35209                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 35210                           
 35211                           ; BSR set to: 1
 35212  00F0B6  5149               	movf	_USBMSDInHandle& (0+255),w,b
 35213  00F0B8  114A               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 35214  00F0BA  B4D8               	btfsc	status,2,c
 35215  00F0BC  D006               	goto	l688
 35216                           
 35217                           ; BSR set to: 1
 35218  00F0BE  C149  FFD9         	movff	_USBMSDInHandle,fsr2l
 35219  00F0C2  C14A  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 35220  00F0C6  BEDF               	btfsc	indf2,7,c
 35221  00F0C8  D0AF               	goto	l684
 35222  00F0CA                     l688:
 35223                           
 35224                           ; BSR set to: 1
 35225                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 35226                           
 35227                           ; BSR set to: 1
 35228  00F0CA  C29E  F08B         	movff	_LUN+21,ExternalFlash_SectorRead@config
 35229  00F0CE  C29F  F08C         	movff	_LUN+22,ExternalFlash_SectorRead@config+1
 35230  00F0D2  C12B  F08D         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 35231  00F0D6  C12C  F08E         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 35232  00F0DA  C12D  F08F         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 35233  00F0DE  C12E  F090         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 35234  00F0E2  0E00               	movlw	0
 35235  00F0E4  0100               	movlb	0	; () banked
 35236  00F0E6  6F91               	movwf	ExternalFlash_SectorRead@buffer& (0+255),b
 35237  00F0E8  0E06               	movlw	6
 35238  00F0EA  6F92               	movwf	(ExternalFlash_SectorRead@buffer+1)& (0+255),b
 35239  00F0EC  EE22  F095         	lfsr	2,_LUN+12
 35240  00F0F0  D801               	call	u11228
 35241  00F0F2  D00A               	goto	u11229
 35242  00F0F4                     u11228:
 35243  00F0F4  0005               	push	
 35244  00F0F6  6EFA               	movwf	pclath,c
 35245  00F0F8  50DE               	movf	postinc2,w,c
 35246  00F0FA  6EFD               	movwf	tosl,c
 35247  00F0FC  50DE               	movf	postinc2,w,c
 35248  00F0FE  6EFE               	movwf	tosh,c
 35249  00F100  50DE               	movf	postinc2,w,c
 35250  00F102  6EFF               	movwf	tosu,c
 35251  00F104  50FA               	movf	pclath,w,c
 35252  00F106  0012               	return		;indir
 35253  00F108                     u11229:
 35254  00F108  06E8               	decf	wreg,f,c
 35255  00F10A  B4D8               	btfsc	status,2,c
 35256  00F10C  D01B               	goto	l691
 35257                           
 35258                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 35259  00F10E  0E64               	movlw	100
 35260  00F110  0101               	movlb	1	; () banked
 35261  00F112  615F               	cpfslt	_MSDRetryAttempt& (0+255),b
 35262  00F114  D002               	goto	l690
 35263                           
 35264                           ; BSR set to: 1
 35265                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 35266  00F116  2B5F               	incf	_MSDRetryAttempt& (0+255),f,b
 35267                           
 35268                           ;usb_device_msd.c: 1088: break;
 35269  00F118  D087               	goto	l684
 35270  00F11A                     l690:
 35271                           
 35272                           ; BSR set to: 1
 35273                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 35274                           
 35275                           ; BSR set to: 1
 35276  00F11A  0E02               	movlw	2
 35277  00F11C  010D               	movlb	13	; () banked
 35278  00F11E  6F8C               	movwf	140,b	;volatile
 35279                           
 35280                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 35281  00F120  0101               	movlb	1	; () banked
 35282  00F122  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 35283  00F124  0BF0               	andlw	-16
 35284  00F126  0903               	iorlw	3
 35285  00F128  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 35286                           
 35287                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 35288  00F12A  0E00               	movlw	0
 35289  00F12C  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 35290                           
 35291                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 35292  00F12E  0E00               	movlw	0
 35293  00F130  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 35294                           
 35295                           ; BSR set to: 1
 35296                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 35297  00F132  0E01               	movlw	1
 35298  00F134  0100               	movlb	0	; () banked
 35299  00F136  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35300  00F138  0E02               	movlw	2
 35301  00F13A  EC82  F087         	call	_USBStallEndpoint
 35302  00F13E  D05F               	goto	l12901
 35303  00F140                     L51:
 35304  00F140  6F61               	movwf	_MSDReadState& (0+255),b
 35305                           
 35306                           ;usb_device_msd.c: 1109: break;
 35307  00F142  D072               	goto	l684
 35308  00F144                     l691:
 35309                           
 35310                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 35311                           
 35312                           ; BSR set to: 1
 35313                           
 35314                           ; BSR set to: 1
 35315  00F144  0E01               	movlw	1
 35316  00F146  0101               	movlb	1	; () banked
 35317  00F148  272B               	addwf	_LBA& (0+255),f,b
 35318  00F14A  0E00               	movlw	0
 35319  00F14C  232C               	addwfc	(_LBA+1)& (0+255),f,b
 35320  00F14E  232D               	addwfc	(_LBA+2)& (0+255),f,b
 35321  00F150  232E               	addwfc	(_LBA+3)& (0+255),f,b
 35322                           
 35323                           ; BSR set to: 1
 35324                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 35325  00F152  0E00               	movlw	0
 35326  00F154  010D               	movlb	13	; () banked
 35327  00F156  6F88               	movwf	136,b	;volatile
 35328  00F158  0E02               	movlw	2
 35329  00F15A  6F89               	movwf	137,b	;volatile
 35330  00F15C  0E00               	movlw	0
 35331  00F15E  6F8A               	movwf	138,b	;volatile
 35332  00F160  0E00               	movlw	0
 35333  00F162  6F8B               	movwf	139,b	;volatile
 35334                           
 35335                           ; BSR set to: 13
 35336                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 35337  00F164  0E00               	movlw	0
 35338  00F166  0101               	movlb	1	; () banked
 35339  00F168  6F4D               	movwf	_ptrNextData& (0+255),b
 35340  00F16A  0E06               	movlw	6
 35341  00F16C  6F4E               	movwf	(_ptrNextData+1)& (0+255),b
 35342                           
 35343                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 35344  00F16E  0E03               	movlw	3
 35345  00F170  6F61               	movwf	_MSDReadState& (0+255),b
 35346  00F172                     
 35347                           ; BSR set to: 1
 35348                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 35349                           
 35350                           ; BSR set to: 1
 35351  00F172  010D               	movlb	13	; () banked
 35352  00F174  5188               	movf	136,w,b	;volatile
 35353  00F176  1189               	iorwf	137,w,b	;volatile
 35354  00F178  118A               	iorwf	138,w,b	;volatile
 35355  00F17A  118B               	iorwf	139,w,b	;volatile
 35356  00F17C  A4D8               	btfss	status,2,c
 35357  00F17E  D002               	goto	l693
 35358                           
 35359                           ; BSR set to: 13
 35360                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 35361  00F180  0E01               	movlw	1
 35362  00F182  D03E               	goto	L53
 35363  00F184                     l693:
 35364                           
 35365                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 35366                           
 35367                           ; BSR set to: 1
 35368  00F184  0E04               	movlw	4
 35369  00F186  0101               	movlb	1	; () banked
 35370  00F188  6F61               	movwf	_MSDReadState& (0+255),b
 35371  00F18A                     
 35372                           ; BSR set to: 1
 35373                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 35374                           
 35375                           ; BSR set to: 1
 35376  00F18A  5149               	movf	_USBMSDInHandle& (0+255),w,b
 35377  00F18C  114A               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 35378  00F18E  B4D8               	btfsc	status,2,c
 35379  00F190  D006               	goto	l695
 35380                           
 35381                           ; BSR set to: 1
 35382  00F192  C149  FFD9         	movff	_USBMSDInHandle,fsr2l
 35383  00F196  C14A  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 35384  00F19A  BEDF               	btfsc	indf2,7,c
 35385  00F19C  D045               	goto	l684
 35386  00F19E                     l695:
 35387                           
 35388                           ; BSR set to: 1
 35389                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 35390                           
 35391                           ; BSR set to: 1
 35392  00F19E  0E01               	movlw	1
 35393  00F1A0  0100               	movlb	0	; () banked
 35394  00F1A2  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 35395  00F1A4  C14D  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 35396  00F1A8  C14E  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 35397  00F1AC  0E40               	movlw	64
 35398  00F1AE  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 35399  00F1B0  0E02               	movlw	2
 35400  00F1B2  EC07  F088         	call	_USBTransferOnePacket
 35401  00F1B6  C060  F149         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 35402  00F1BA  C061  F14A         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 35403                           
 35404                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 35405  00F1BE  0E03               	movlw	3
 35406  00F1C0  0101               	movlb	1	; () banked
 35407  00F1C2  6F61               	movwf	_MSDReadState& (0+255),b
 35408                           
 35409                           ; BSR set to: 1
 35410                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 35411  00F1C4  0E40               	movlw	64
 35412  00F1C6  0102               	movlb	2	; () banked
 35413  00F1C8  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 35414  00F1CA  0E00               	movlw	0
 35415  00F1CC  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 35416  00F1CE  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 35417  00F1D0  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 35418                           
 35419                           ; BSR set to: 2
 35420                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 35421  00F1D2  0E40               	movlw	64
 35422  00F1D4  010D               	movlb	13	; () banked
 35423  00F1D6  5F88               	subwf	136,f,b	;volatile
 35424  00F1D8  0E00               	movlw	0
 35425  00F1DA  5B89               	subwfb	137,f,b	;volatile
 35426  00F1DC  5B8A               	subwfb	138,f,b	;volatile
 35427  00F1DE  5B8B               	subwfb	139,f,b	;volatile
 35428                           
 35429                           ; BSR set to: 13
 35430                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 35431  00F1E0  0E40               	movlw	64
 35432  00F1E2  0101               	movlb	1	; () banked
 35433  00F1E4  274D               	addwf	_ptrNextData& (0+255),f,b
 35434  00F1E6  0E00               	movlw	0
 35435  00F1E8  234E               	addwfc	(_ptrNextData+1)& (0+255),f,b
 35436                           
 35437                           ;usb_device_msd.c: 1149: break;
 35438  00F1EA  D01E               	goto	l684
 35439  00F1EC                     
 35440                           ; BSR set to: 1
 35441                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 35442                           
 35443                           ; BSR set to: 1
 35444  00F1EC  0E02               	movlw	2
 35445  00F1EE  010D               	movlb	13	; () banked
 35446  00F1F0  6F8C               	movwf	140,b	;volatile
 35447                           
 35448                           ; BSR set to: 13
 35449                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 35450  00F1F2  0E01               	movlw	1
 35451  00F1F4  0100               	movlb	0	; () banked
 35452  00F1F6  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35453  00F1F8  0E02               	movlw	2
 35454  00F1FA  EC82  F087         	call	_USBStallEndpoint
 35455  00F1FE                     l12901:
 35456                           
 35457                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 35458  00F1FE  0E00               	movlw	0
 35459  00F200                     L53:
 35460  00F200  0101               	movlb	1	; () banked
 35461  00F202  D79E               	goto	L51
 35462  00F204                     l681:
 35463                           
 35464                           ; BSR set to: 1
 35465  00F204  0101               	movlb	1	; () banked
 35466  00F206  5161               	movf	_MSDReadState& (0+255),w,b
 35467                           
 35468                           ; Switch size 1, requested type "space"
 35469                           ; Number of cases is 5, Range of values is 0 to 4
 35470                           ; switch strategies available:
 35471                           ; Name         Instructions Cycles
 35472                           ; simple_byte           16     9 (average)
 35473                           ;	Chosen strategy is simple_byte
 35474  00F208  0A00               	xorlw	0	; case 0
 35475  00F20A  B4D8               	btfsc	status,2,c
 35476  00F20C  D71C               	goto	l682
 35477  00F20E  0A01               	xorlw	1	; case 1
 35478  00F210  B4D8               	btfsc	status,2,c
 35479  00F212  D746               	goto	l685
 35480  00F214  0A03               	xorlw	3	; case 2
 35481  00F216  B4D8               	btfsc	status,2,c
 35482  00F218  D74E               	goto	l687
 35483  00F21A  0A01               	xorlw	1	; case 3
 35484  00F21C  B4D8               	btfsc	status,2,c
 35485  00F21E  D7A9               	goto	l692
 35486  00F220  0A07               	xorlw	7	; case 4
 35487  00F222  B4D8               	btfsc	status,2,c
 35488  00F224  D7B2               	goto	l694
 35489  00F226  D7E2               	goto	l696
 35490  00F228                     l684:
 35491                           
 35492                           ;usb_device_msd.c: 1161: return MSDReadState;
 35493                           
 35494                           ; BSR set to: 1
 35495  00F228  0101               	movlb	1	; () banked
 35496  00F22A  5161               	movf	_MSDReadState& (0+255),w,b
 35497  00F22C  0012               	return	
 35498  00F22E                     __end_of_MSDReadHandler:
 35499                           	opt stack 0
 35500                           tosu	equ	0xFFF
 35501                           tosh	equ	0xFFE
 35502                           tosl	equ	0xFFD
 35503                           pclath	equ	0xFFA
 35504                           tblptru	equ	0xFF8
 35505                           tblptrh	equ	0xFF7
 35506                           tblptrl	equ	0xFF6
 35507                           tablat	equ	0xFF5
 35508                           prodh	equ	0xFF4
 35509                           prodl	equ	0xFF3
 35510                           intcon	equ	0xFF2
 35511                           postinc0	equ	0xFEE
 35512                           wreg	equ	0xFE8
 35513                           indf1	equ	0xFE7
 35514                           postinc1	equ	0xFE6
 35515                           postdec1	equ	0xFE5
 35516                           plusw1	equ	0xFE3
 35517                           fsr1h	equ	0xFE2
 35518                           fsr1l	equ	0xFE1
 35519                           indf2	equ	0xFDF
 35520                           postinc2	equ	0xFDE
 35521                           postdec2	equ	0xFDD
 35522                           plusw2	equ	0xFDB
 35523                           fsr2h	equ	0xFDA
 35524                           fsr2l	equ	0xFD9
 35525                           status	equ	0xFD8
 35526                           
 35527 ;; *************** function _MSDCheckForErrorCases *****************
 35528 ;; Defined at:
 35529 ;;		line 1434 in file "usb_device_msd.c"
 35530 ;; Parameters:    Size  Location     Type
 35531 ;;  DeviceBytes     4   10[BANK0 ] unsigned long 
 35532 ;; Auto vars:     Size  Location     Type
 35533 ;;  DeviceNoData    1   16[BANK0 ] unsigned char 
 35534 ;;  MSDErrorCase    1   15[BANK0 ] unsigned char 
 35535 ;;  HostMoreData    1   14[BANK0 ] unsigned char 
 35536 ;; Return value:  Size  Location     Type
 35537 ;;                  1    wreg      unsigned char 
 35538 ;; Registers used:
 35539 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35540 ;; Tracked objects:
 35541 ;;		On entry : 0/0
 35542 ;;		On exit  : 0/0
 35543 ;;		Unchanged: 0/0
 35544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35545 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35546 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35548 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35549 ;;Total ram usage:        7 bytes
 35550 ;; Hardware stack levels used:    1
 35551 ;; Hardware stack levels required when called:   12
 35552 ;; This function calls:
 35553 ;;		_MSDErrorHandler
 35554 ;; This function is called by:
 35555 ;;		_MSDProcessCommandMediaPresent
 35556 ;;		_MSDReadHandler
 35557 ;;		_MSDWriteHandler
 35558 ;; This function uses a non-reentrant model
 35559 ;;
 35560                           
 35561                           	psect	text140
 35562  010AC4                     __ptext140:
 35563                           	opt stack 0
 35564  010AC4                     _MSDCheckForErrorCases:
 35565                           	opt stack 13
 35566                           
 35567                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 35568                           
 35569                           ; BSR set to: 1
 35570                           ;incstack = 0
 35571  010AC4  0100               	movlb	0	; () banked
 35572  010AC6  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 35573  010AC8  116B               	iorwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 35574  010ACA  116C               	iorwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 35575  010ACC  116D               	iorwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 35576  010ACE  A4D8               	btfss	status,2,c
 35577  010AD0  D002               	goto	l726
 35578                           
 35579                           ; BSR set to: 0
 35580                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 35581  010AD2  0E01               	movlw	1
 35582  010AD4  D001               	goto	L54
 35583  010AD6                     l726:
 35584                           
 35585                           ; BSR set to: 0
 35586                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 35587                           
 35588                           ; BSR set to: 0
 35589  010AD6  0E00               	movlw	0
 35590  010AD8                     L54:
 35591  010AD8  6F70               	movwf	MSDCheckForErrorCases@DeviceNoData& (0+255),b
 35592                           
 35593                           ; BSR set to: 0
 35594                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 35595                           
 35596                           ; BSR set to: 0
 35597  010ADA  0101               	movlb	1	; () banked
 35598  010ADC  055C               	decf	_MSDHostNoData& (0+255),w,b
 35599  010ADE  A4D8               	btfss	status,2,c
 35600  010AE0  D006               	goto	l728
 35601                           
 35602                           ; BSR set to: 1
 35603  010AE2  0100               	movlb	0	; () banked
 35604  010AE4  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 35605  010AE6  A4D8               	btfss	status,2,c
 35606  010AE8  D002               	goto	l728
 35607                           
 35608                           ; BSR set to: 0
 35609                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 35610  010AEA  0E00               	movlw	0
 35611                           
 35612                           ; BSR set to: 0
 35613  010AEC  0012               	return	
 35614  010AEE                     l728:
 35615                           
 35616                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 35617                           
 35618                           ; BSR set to: 0
 35619  010AEE  0100               	movlb	0	; () banked
 35620  010AF0  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 35621  010AF2  0102               	movlb	2	; () banked
 35622  010AF4  1908               	xorwf	(_gblCBW+8)& (0+255),w,b
 35623  010AF6  E120               	bnz	l12545
 35624  010AF8  0100               	movlb	0	; () banked
 35625  010AFA  516B               	movf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 35626  010AFC  0102               	movlb	2	; () banked
 35627  010AFE  1909               	xorwf	(_gblCBW+9)& (0+255),w,b
 35628  010B00  E11B               	bnz	l12545
 35629  010B02  0100               	movlb	0	; () banked
 35630  010B04  516C               	movf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 35631  010B06  0102               	movlb	2	; () banked
 35632  010B08  190A               	xorwf	(_gblCBW+10)& (0+255),w,b
 35633  010B0A  E116               	bnz	l12545
 35634  010B0C  0100               	movlb	0	; () banked
 35635  010B0E  516D               	movf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 35636  010B10  0102               	movlb	2	; () banked
 35637  010B12  190B               	xorwf	(_gblCBW+11)& (0+255),w,b
 35638  010B14  A4D8               	btfss	status,2,c
 35639  010B16  D010               	goto	l734
 35640                           
 35641                           ; BSR set to: 2
 35642                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 35643  010B18  0101               	movlb	1	; () banked
 35644  010B1A  0563               	decf	_MSD_State& (0+255),w,b
 35645  010B1C  A4D8               	btfss	status,2,c
 35646  010B1E  D006               	goto	l731
 35647                           
 35648                           ; BSR set to: 1
 35649                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 35650  010B20  0E2A               	movlw	42
 35651  010B22  1962               	xorwf	_MSDCommandState& (0+255),w,b
 35652  010B24  B4D8               	btfsc	status,2,c
 35653  010B26  D008               	goto	l734
 35654                           
 35655                           ; BSR set to: 1
 35656                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 35657  010B28  0E00               	movlw	0
 35658                           
 35659                           ; BSR set to: 1
 35660  010B2A  0012               	return	
 35661  010B2C                     l731:
 35662                           
 35663                           ; BSR set to: 1
 35664                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 35665                           
 35666                           ; BSR set to: 1
 35667  010B2C  0E2A               	movlw	42
 35668  010B2E  1962               	xorwf	_MSDCommandState& (0+255),w,b
 35669  010B30  A4D8               	btfss	status,2,c
 35670  010B32  D002               	goto	l734
 35671                           
 35672                           ; BSR set to: 1
 35673                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 35674  010B34  0E00               	movlw	0
 35675                           
 35676                           ; BSR set to: 1
 35677  010B36  0012               	return	
 35678  010B38                     l734:
 35679  010B38                     l12545:
 35680                           
 35681                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 35682  010B38  0102               	movlb	2	; () banked
 35683  010B3A  5108               	movf	(_gblCBW+8)& (0+255),w,b
 35684  010B3C  0100               	movlb	0	; () banked
 35685  010B3E  5D6A               	subwf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 35686  010B40  0102               	movlb	2	; () banked
 35687  010B42  5109               	movf	(_gblCBW+9)& (0+255),w,b
 35688  010B44  0100               	movlb	0	; () banked
 35689  010B46  596B               	subwfb	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 35690  010B48  0102               	movlb	2	; () banked
 35691  010B4A  510A               	movf	(_gblCBW+10)& (0+255),w,b
 35692  010B4C  0100               	movlb	0	; () banked
 35693  010B4E  596C               	subwfb	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 35694  010B50  0102               	movlb	2	; () banked
 35695  010B52  510B               	movf	(_gblCBW+11)& (0+255),w,b
 35696  010B54  0100               	movlb	0	; () banked
 35697  010B56  596D               	subwfb	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 35698  010B58  B0D8               	btfsc	status,0,c
 35699  010B5A  D002               	goto	l735
 35700                           
 35701                           ; BSR set to: 0
 35702                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 35703  010B5C  0E01               	movlw	1
 35704  010B5E  D001               	goto	L55
 35705  010B60                     l735:
 35706                           
 35707                           ; BSR set to: 0
 35708                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 35709                           
 35710                           ; BSR set to: 0
 35711  010B60  0E00               	movlw	0
 35712  010B62                     L55:
 35713  010B62  6F6E               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),b
 35714                           
 35715                           ; BSR set to: 0
 35716                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 35717                           
 35718                           ; BSR set to: 0
 35719  010B64  0E02               	movlw	2
 35720  010B66  0101               	movlb	1	; () banked
 35721  010B68  1963               	xorwf	_MSD_State& (0+255),w,b
 35722  010B6A  A4D8               	btfss	status,2,c
 35723  010B6C  D017               	goto	l737
 35724                           
 35725                           ; BSR set to: 1
 35726                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 35727  010B6E  0E2A               	movlw	42
 35728  010B70  1962               	xorwf	_MSDCommandState& (0+255),w,b
 35729  010B72  B4D8               	btfsc	status,2,c
 35730  010B74  D006               	goto	l738
 35731                           
 35732                           ; BSR set to: 1
 35733  010B76  0100               	movlb	0	; () banked
 35734  010B78  5170               	movf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 35735  010B7A  A4D8               	btfss	status,2,c
 35736  010B7C  D002               	goto	l738
 35737  010B7E                     u10850:
 35738                           
 35739                           ; BSR set to: 0
 35740                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 35741  010B7E  0E05               	movlw	5
 35742  010B80  D025               	goto	L60
 35743  010B82                     l738:
 35744                           
 35745                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 35746                           
 35747                           ; BSR set to: 0
 35748  010B82  0101               	movlb	1	; () banked
 35749  010B84  055C               	decf	_MSDHostNoData& (0+255),w,b
 35750  010B86  B4D8               	btfsc	status,2,c
 35751  010B88  D014               	goto	u10900
 35752                           
 35753                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 35754                           
 35755                           ; BSR set to: 0
 35756                           
 35757                           ; BSR set to: 1
 35758                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 35759  010B8A  0100               	movlb	0	; () banked
 35760  010B8C  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 35761  010B8E  B4D8               	btfsc	status,2,c
 35762  010B90  D003               	goto	u10880
 35763                           
 35764                           ; BSR set to: 0
 35765                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 35766                           
 35767                           ; BSR set to: 0
 35768                           
 35769                           ; BSR set to: 0
 35770                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 35771  010B92  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 35772  010B94  A4D8               	btfss	status,2,c
 35773  010B96  D7F3               	goto	u10850
 35774  010B98                     u10880:
 35775                           
 35776                           ; BSR set to: 0
 35777                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 35778  010B98  0E04               	movlw	4
 35779  010B9A  D018               	goto	L60
 35780  010B9C                     l737:
 35781                           
 35782                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 35783                           
 35784                           ; BSR set to: 0
 35785  010B9C  0E2A               	movlw	42
 35786  010B9E  0101               	movlb	1	; () banked
 35787  010BA0  1962               	xorwf	_MSDCommandState& (0+255),w,b
 35788  010BA2  A4D8               	btfss	status,2,c
 35789  010BA4  D002               	goto	l747
 35790                           
 35791                           ; BSR set to: 1
 35792                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 35793  010BA6  0E03               	movlw	3
 35794  010BA8  D005               	goto	L59
 35795  010BAA                     l747:
 35796                           
 35797                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 35798                           
 35799                           ; BSR set to: 0
 35800  010BAA  0101               	movlb	1	; () banked
 35801  010BAC  055C               	decf	_MSDHostNoData& (0+255),w,b
 35802  010BAE  A4D8               	btfss	status,2,c
 35803  010BB0  D003               	goto	l749
 35804  010BB2                     u10900:
 35805                           
 35806                           ; BSR set to: 1
 35807                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 35808  010BB2  0E01               	movlw	1
 35809  010BB4                     L59:
 35810  010BB4  0100               	movlb	0	; () banked
 35811  010BB6  D00A               	goto	L60
 35812  010BB8                     l749:
 35813                           
 35814                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 35815                           
 35816                           ; BSR set to: 0
 35817  010BB8  0100               	movlb	0	; () banked
 35818  010BBA  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 35819  010BBC  B4D8               	btfsc	status,2,c
 35820  010BBE  D003               	goto	u10920
 35821                           
 35822                           ; BSR set to: 0
 35823                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 35824                           
 35825                           ; BSR set to: 0
 35826                           
 35827                           ; BSR set to: 0
 35828                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 35829  010BC0  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 35830  010BC2  A4D8               	btfss	status,2,c
 35831  010BC4  D002               	goto	l753
 35832  010BC6                     u10920:
 35833                           
 35834                           ; BSR set to: 0
 35835                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 35836  010BC6  0E02               	movlw	2
 35837  010BC8  D001               	goto	L60
 35838  010BCA                     l753:
 35839                           
 35840                           ; BSR set to: 0
 35841                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 35842                           
 35843                           ; BSR set to: 0
 35844  010BCA  0E03               	movlw	3
 35845  010BCC                     L60:
 35846  010BCC  6F6F               	movwf	MSDCheckForErrorCases@MSDErrorCase& (0+255),b
 35847                           
 35848                           ; BSR set to: 0
 35849                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 35850                           
 35851                           ; BSR set to: 0
 35852                           
 35853                           ; BSR set to: 0
 35854                           
 35855                           ; BSR set to: 0
 35856                           
 35857                           ; BSR set to: 0
 35858                           
 35859                           ; BSR set to: 0
 35860  010BCE  516F               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 35861  010BD0  ECD5  F084         	call	_MSDErrorHandler
 35862                           
 35863                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 35864  010BD4  0100               	movlb	0	; () banked
 35865  010BD6  516F               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 35866  010BD8  0012               	return	
 35867  010BDA                     __end_of_MSDCheckForErrorCases:
 35868                           	opt stack 0
 35869                           tosu	equ	0xFFF
 35870                           tosh	equ	0xFFE
 35871                           tosl	equ	0xFFD
 35872                           pclath	equ	0xFFA
 35873                           tblptru	equ	0xFF8
 35874                           tblptrh	equ	0xFF7
 35875                           tblptrl	equ	0xFF6
 35876                           tablat	equ	0xFF5
 35877                           prodh	equ	0xFF4
 35878                           prodl	equ	0xFF3
 35879                           intcon	equ	0xFF2
 35880                           postinc0	equ	0xFEE
 35881                           wreg	equ	0xFE8
 35882                           indf1	equ	0xFE7
 35883                           postinc1	equ	0xFE6
 35884                           postdec1	equ	0xFE5
 35885                           plusw1	equ	0xFE3
 35886                           fsr1h	equ	0xFE2
 35887                           fsr1l	equ	0xFE1
 35888                           indf2	equ	0xFDF
 35889                           postinc2	equ	0xFDE
 35890                           postdec2	equ	0xFDD
 35891                           plusw2	equ	0xFDB
 35892                           fsr2h	equ	0xFDA
 35893                           fsr2l	equ	0xFD9
 35894                           status	equ	0xFD8
 35895                           
 35896 ;; *************** function _MSDErrorHandler *****************
 35897 ;; Defined at:
 35898 ;;		line 1577 in file "usb_device_msd.c"
 35899 ;; Parameters:    Size  Location     Type
 35900 ;;  ErrorCase       1    wreg     unsigned char 
 35901 ;; Auto vars:     Size  Location     Type
 35902 ;;  ErrorCase       1    8[BANK0 ] unsigned char 
 35903 ;;  OldMSD_State    1    9[BANK0 ] unsigned char 
 35904 ;; Return value:  Size  Location     Type
 35905 ;;                  1    wreg      void 
 35906 ;; Registers used:
 35907 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35908 ;; Tracked objects:
 35909 ;;		On entry : 0/0
 35910 ;;		On exit  : 0/0
 35911 ;;		Unchanged: 0/0
 35912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35914 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35916 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35917 ;;Total ram usage:        2 bytes
 35918 ;; Hardware stack levels used:    1
 35919 ;; Hardware stack levels required when called:   11
 35920 ;; This function calls:
 35921 ;;		_ResetSenseData
 35922 ;;		_USBStallEndpoint
 35923 ;; This function is called by:
 35924 ;;		_MSDProcessCommandMediaAbsent
 35925 ;;		_MSDProcessCommandMediaPresent
 35926 ;;		_MSDCheckForErrorCases
 35927 ;; This function uses a non-reentrant model
 35928 ;;
 35929                           
 35930                           	psect	text141
 35931  0109AA                     __ptext141:
 35932                           	opt stack 0
 35933  0109AA                     _MSDErrorHandler:
 35934                           	opt stack 13
 35935                           
 35936                           ;incstack = 0
 35937                           ;MSDErrorHandler@ErrorCase stored from wreg
 35938  0109AA  0100               	movlb	0	; () banked
 35939  0109AC  6F68               	movwf	MSDErrorHandler@ErrorCase& (0+255),b
 35940                           
 35941                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 35942  0109AE  0101               	movlb	1	; () banked
 35943  0109B0  5149               	movf	_USBMSDInHandle& (0+255),w,b
 35944  0109B2  114A               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 35945  0109B4  B4D8               	btfsc	status,2,c
 35946  0109B6  D006               	goto	u9930
 35947                           
 35948                           ; BSR set to: 1
 35949  0109B8  C149  FFD9         	movff	_USBMSDInHandle,fsr2l
 35950  0109BC  C14A  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 35951  0109C0  BEDF               	btfsc	indf2,7,c
 35952  0109C2  0012               	return	
 35953  0109C4                     u9930:
 35954                           
 35955                           ; BSR set to: 1
 35956                           
 35957                           ; BSR set to: 1
 35958  0109C4  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 35959  0109C6  114C               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 35960  0109C8  B4D8               	btfsc	status,2,c
 35961  0109CA  D006               	goto	l757
 35962                           
 35963                           ; BSR set to: 1
 35964  0109CC  C14B  FFD9         	movff	_USBMSDOutHandle,fsr2l
 35965  0109D0  C14C  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 35966  0109D4  BEDF               	btfsc	indf2,7,c
 35967  0109D6  0012               	return	
 35968  0109D8                     l757:
 35969                           
 35970                           ; BSR set to: 1
 35971                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 35972  0109D8  C163  F069         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 35973                           
 35974                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 35975  0109DC  6962               	setf	_MSDCommandState& (0+255),b
 35976                           
 35977                           ; BSR set to: 1
 35978                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 35979  0109DE  0E00               	movlw	0
 35980  0109E0  6F61               	movwf	_MSDReadState& (0+255),b
 35981                           
 35982                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 35983  0109E2  0E00               	movlw	0
 35984  0109E4  6F60               	movwf	_MSDWriteState& (0+255),b
 35985                           
 35986                           ; BSR set to: 1
 35987                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 35988  0109E6  C208  FD88         	movff	_gblCBW+8,3464	;volatile
 35989  0109EA  C209  FD89         	movff	_gblCBW+9,3465	;volatile
 35990  0109EE  C20A  FD8A         	movff	_gblCBW+10,3466	;volatile
 35991  0109F2  C20B  FD8B         	movff	_gblCBW+11,3467	;volatile
 35992                           
 35993                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 35994  0109F6  0E01               	movlw	1
 35995  0109F8  010D               	movlb	13	; () banked
 35996  0109FA  6F8C               	movwf	140,b	;volatile
 35997                           
 35998                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 35999  0109FC  0E03               	movlw	3
 36000  0109FE  0101               	movlb	1	; () banked
 36001  010A00  6F63               	movwf	_MSD_State& (0+255),b
 36002                           
 36003                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 36004  010A02  D04B               	goto	l763
 36005  010A04                     
 36006                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 36007                           
 36008                           ; BSR set to: 1
 36009  010A04  0E02               	movlw	2
 36010  010A06  010D               	movlb	13	; () banked
 36011  010A08  6F8C               	movwf	140,b	;volatile
 36012                           
 36013                           ;usb_device_msd.c: 1607: break;
 36014  010A0A  0012               	return	
 36015  010A0C                     
 36016                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 36017                           
 36018                           ; BSR set to: 13
 36019  010A0C  0E01               	movlw	1
 36020  010A0E  0100               	movlb	0	; () banked
 36021  010A10  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 36022  010A12  0E02               	movlw	2
 36023  010A14  EC82  F087         	call	_USBStallEndpoint
 36024                           
 36025                           ;usb_device_msd.c: 1611: break;
 36026  010A18  0012               	return	
 36027  010A1A                     
 36028                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 36029  010A1A  0E02               	movlw	2
 36030  010A1C  010D               	movlb	13	; () banked
 36031  010A1E  6F8C               	movwf	140,b	;volatile
 36032                           
 36033                           ; BSR set to: 13
 36034                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 36035  010A20  0E01               	movlw	1
 36036  010A22  0100               	movlb	0	; () banked
 36037  010A24  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 36038  010A26  0E02               	movlw	2
 36039  010A28  EC82  F087         	call	_USBStallEndpoint
 36040                           
 36041                           ;usb_device_msd.c: 1616: break;
 36042  010A2C  0012               	return	
 36043  010A2E                     
 36044                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 36045  010A2E  0E00               	movlw	0
 36046  010A30  0100               	movlb	0	; () banked
 36047  010A32  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 36048  010A34  0E02               	movlw	2
 36049  010A36  EC82  F087         	call	_USBStallEndpoint
 36050                           
 36051                           ;usb_device_msd.c: 1620: break;
 36052  010A3A  0012               	return	
 36053  010A3C                     
 36054                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 36055  010A3C  0E02               	movlw	2
 36056  010A3E  010D               	movlb	13	; () banked
 36057  010A40  6F8C               	movwf	140,b	;volatile
 36058                           
 36059                           ; BSR set to: 13
 36060                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 36061  010A42  0E00               	movlw	0
 36062  010A44  0100               	movlb	0	; () banked
 36063  010A46  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 36064  010A48  0E02               	movlw	2
 36065  010A4A  EC82  F087         	call	_USBStallEndpoint
 36066                           
 36067                           ;usb_device_msd.c: 1625: break;
 36068  010A4E  0012               	return	
 36069  010A50                     
 36070                           ;usb_device_msd.c: 1628: ResetSenseData();
 36071  010A50  EC72  F0A1         	call	_ResetSenseData	;wreg free
 36072                           
 36073                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 36074  010A54  0101               	movlb	1	; () banked
 36075  010A56  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 36076  010A58  0BF0               	andlw	-16
 36077  010A5A  0905               	iorlw	5
 36078  010A5C  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 36079                           
 36080                           ; BSR set to: 1
 36081                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 36082  010A5E  0E20               	movlw	32
 36083  010A60  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 36084                           
 36085                           ; BSR set to: 1
 36086                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 36087  010A62  0E00               	movlw	0
 36088  010A64  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 36089                           
 36090                           ; BSR set to: 1
 36091                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 36092  010A66  0E02               	movlw	2
 36093  010A68  0100               	movlb	0	; () banked
 36094  010A6A  1969               	xorwf	MSDErrorHandler@OldMSD_State& (0+255),w,b
 36095  010A6C  A4D8               	btfss	status,2,c
 36096  010A6E  D00E               	goto	l771
 36097                           
 36098                           ; BSR set to: 0
 36099  010A70  0102               	movlb	2	; () banked
 36100  010A72  5108               	movf	(_gblCBW+8)& (0+255),w,b
 36101  010A74  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 36102  010A76  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 36103  010A78  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 36104  010A7A  B4D8               	btfsc	status,2,c
 36105  010A7C  D007               	goto	l771
 36106                           
 36107                           ; BSR set to: 2
 36108                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 36109  010A7E  0E00               	movlw	0
 36110  010A80  0100               	movlb	0	; () banked
 36111  010A82  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 36112  010A84  0E02               	movlw	2
 36113  010A86  EC82  F087         	call	_USBStallEndpoint
 36114                           
 36115                           ;usb_device_msd.c: 1636: }
 36116  010A8A  0012               	return	
 36117  010A8C                     l771:
 36118                           
 36119                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 36120  010A8C  0E01               	movlw	1
 36121  010A8E  0100               	movlb	0	; () banked
 36122  010A90  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 36123  010A92  0E02               	movlw	2
 36124  010A94  EC82  F087         	call	_USBStallEndpoint
 36125                           
 36126                           ;usb_device_msd.c: 1644: }
 36127                           
 36128                           ;usb_device_msd.c: 1643: break;
 36129                           
 36130                           ;usb_device_msd.c: 1642: default:
 36131                           
 36132                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 36133  010A98  0012               	return	
 36134  010A9A                     l763:
 36135  010A9A  0100               	movlb	0	; () banked
 36136  010A9C  5168               	movf	MSDErrorHandler@ErrorCase& (0+255),w,b
 36137                           
 36138                           ; Switch size 1, requested type "space"
 36139                           ; Number of cases is 6, Range of values is 1 to 127
 36140                           ; switch strategies available:
 36141                           ; Name         Instructions Cycles
 36142                           ; simple_byte           19    10 (average)
 36143                           ;	Chosen strategy is simple_byte
 36144  010A9E  0A01               	xorlw	1	; case 1
 36145  010AA0  B4D8               	btfsc	status,2,c
 36146  010AA2  D7B0               	goto	l764
 36147  010AA4  0A03               	xorlw	3	; case 2
 36148  010AA6  B4D8               	btfsc	status,2,c
 36149  010AA8  D7B1               	goto	l766
 36150  010AAA  0A01               	xorlw	1	; case 3
 36151  010AAC  B4D8               	btfsc	status,2,c
 36152  010AAE  D7B5               	goto	l767
 36153  010AB0  0A07               	xorlw	7	; case 4
 36154  010AB2  B4D8               	btfsc	status,2,c
 36155  010AB4  D7BC               	goto	l768
 36156  010AB6  0A01               	xorlw	1	; case 5
 36157  010AB8  B4D8               	btfsc	status,2,c
 36158  010ABA  D7C0               	goto	l769
 36159  010ABC  0A7A               	xorlw	122	; case 127
 36160  010ABE  A4D8               	btfss	status,2,c
 36161  010AC0  0012               	return	
 36162  010AC2  D7C6               	goto	l770
 36163  010AC4                     __end_of_MSDErrorHandler:
 36164                           	opt stack 0
 36165                           tosu	equ	0xFFF
 36166                           tosh	equ	0xFFE
 36167                           tosl	equ	0xFFD
 36168                           pclath	equ	0xFFA
 36169                           tblptru	equ	0xFF8
 36170                           tblptrh	equ	0xFF7
 36171                           tblptrl	equ	0xFF6
 36172                           tablat	equ	0xFF5
 36173                           prodh	equ	0xFF4
 36174                           prodl	equ	0xFF3
 36175                           intcon	equ	0xFF2
 36176                           postinc0	equ	0xFEE
 36177                           wreg	equ	0xFE8
 36178                           indf1	equ	0xFE7
 36179                           postinc1	equ	0xFE6
 36180                           postdec1	equ	0xFE5
 36181                           plusw1	equ	0xFE3
 36182                           fsr1h	equ	0xFE2
 36183                           fsr1l	equ	0xFE1
 36184                           indf2	equ	0xFDF
 36185                           postinc2	equ	0xFDE
 36186                           postdec2	equ	0xFDD
 36187                           plusw2	equ	0xFDB
 36188                           fsr2h	equ	0xFDA
 36189                           fsr2l	equ	0xFD9
 36190                           status	equ	0xFD8
 36191                           
 36192 ;; *************** function _USBStallEndpoint *****************
 36193 ;; Defined at:
 36194 ;;		line 1073 in file "usb_device.c"
 36195 ;; Parameters:    Size  Location     Type
 36196 ;;  ep              1    wreg     unsigned char 
 36197 ;;  dir             1    0[BANK0 ] unsigned char 
 36198 ;; Auto vars:     Size  Location     Type
 36199 ;;  ep              1    5[BANK0 ] unsigned char 
 36200 ;;  p               2    6[BANK0 ] PTR struct __BDT
 36201 ;;		 -> BDT(48), 
 36202 ;; Return value:  Size  Location     Type
 36203 ;;                  1    wreg      void 
 36204 ;; Registers used:
 36205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 36206 ;; Tracked objects:
 36207 ;;		On entry : 0/0
 36208 ;;		On exit  : 0/0
 36209 ;;		Unchanged: 0/0
 36210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36211 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36212 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36213 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36214 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36215 ;;Total ram usage:        8 bytes
 36216 ;; Hardware stack levels used:    1
 36217 ;; Hardware stack levels required when called:   10
 36218 ;; This function calls:
 36219 ;;		Nothing
 36220 ;; This function is called by:
 36221 ;;		_MSDTasks
 36222 ;;		_MSDReadHandler
 36223 ;;		_MSDWriteHandler
 36224 ;;		_MSDErrorHandler
 36225 ;; This function uses a non-reentrant model
 36226 ;;
 36227                           
 36228                           	psect	text142
 36229  010F04                     __ptext142:
 36230                           	opt stack 0
 36231  010F04                     _USBStallEndpoint:
 36232                           	opt stack 18
 36233                           
 36234                           ;incstack = 0
 36235                           ;USBStallEndpoint@ep stored from wreg
 36236  010F04  0100               	movlb	0	; () banked
 36237  010F06  6F65               	movwf	USBStallEndpoint@ep& (0+255),b
 36238                           
 36239                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 36240  010F08  0100               	movlb	0	; () banked
 36241  010F0A  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 36242  010F0C  A4D8               	btfss	status,2,c
 36243  010F0E  D02B               	goto	l192
 36244                           
 36245                           ; BSR set to: 0
 36246                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 36247  010F10  EE20 F001          	lfsr	2,1
 36248  010F14  505C               	movf	_pBDTEntryEP0OutNext,w,c
 36249  010F16  26D9               	addwf	fsr2l,f,c
 36250  010F18  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 36251  010F1A  22DA               	addwfc	fsr2h,f,c
 36252  010F1C  0E08               	movlw	8
 36253  010F1E  6EDF               	movwf	indf2,c
 36254                           
 36255                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 36256  010F20  EE20 F002          	lfsr	2,2
 36257  010F24  505C               	movf	_pBDTEntryEP0OutNext,w,c
 36258  010F26  26D9               	addwf	fsr2l,f,c
 36259  010F28  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 36260  010F2A  22DA               	addwfc	fsr2h,f,c
 36261  010F2C  0E30               	movlw	48
 36262  010F2E  6EDE               	movwf	postinc2,c
 36263  010F30  0E0D               	movlw	13
 36264  010F32  6EDD               	movwf	postdec2,c
 36265                           
 36266                           ; BSR set to: 0
 36267                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 36268  010F34  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36269  010F38  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36270  010F3C  0E0C               	movlw	12
 36271  010F3E  6EDF               	movwf	indf2,c
 36272                           
 36273                           ; BSR set to: 0
 36274                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 36275  010F40  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36276  010F44  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36277  010F48  0E00               	movlw	0
 36278  010F4A  8EDB               	bsf	plusw2,7,c
 36279                           
 36280                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 36281  010F4C  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 36282  010F50  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36283  010F54  0E04               	movlw	4
 36284  010F56  6EDF               	movwf	indf2,c
 36285                           
 36286                           ; BSR set to: 0
 36287                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 36288  010F58  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 36289  010F5C  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36290  010F60  0E00               	movlw	0
 36291  010F62  8EDB               	bsf	plusw2,7,c
 36292                           
 36293                           ;usb_device.c: 1089: }
 36294  010F64  0012               	return	
 36295  010F66                     l192:
 36296                           
 36297                           ; BSR set to: 0
 36298                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 36299                           
 36300                           ; BSR set to: 0
 36301  010F66  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 36302  010F68  6F61               	movwf	??_USBStallEndpoint& (0+255),b
 36303  010F6A  6B62               	clrf	(??_USBStallEndpoint+1)& (0+255),b
 36304  010F6C  90D8               	bcf	status,0,c
 36305  010F6E  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 36306  010F70  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 36307  010F72  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 36308  010F74  6F63               	movwf	(??_USBStallEndpoint+2)& (0+255),b
 36309  010F76  6B64               	clrf	(??_USBStallEndpoint+3)& (0+255),b
 36310  010F78  90D8               	bcf	status,0,c
 36311  010F7A  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 36312  010F7C  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 36313  010F7E  90D8               	bcf	status,0,c
 36314  010F80  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 36315  010F82  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 36316  010F84  5161               	movf	??_USBStallEndpoint& (0+255),w,b
 36317  010F86  2763               	addwf	(??_USBStallEndpoint+2)& (0+255),f,b
 36318  010F88  5162               	movf	(??_USBStallEndpoint+1)& (0+255),w,b
 36319  010F8A  2364               	addwfc	(??_USBStallEndpoint+3)& (0+255),f,b
 36320  010F8C  90D8               	bcf	status,0,c
 36321  010F8E  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 36322  010F90  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 36323  010F92  90D8               	bcf	status,0,c
 36324  010F94  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 36325  010F96  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 36326  010F98  0E00               	movlw	0
 36327  010F9A  2563               	addwf	(??_USBStallEndpoint+2)& (0+255),w,b
 36328  010F9C  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 36329  010F9E  0E0D               	movlw	13
 36330  010FA0  2164               	addwfc	(??_USBStallEndpoint+3)& (0+255),w,b
 36331  010FA2  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 36332                           
 36333                           ; BSR set to: 0
 36334                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 36335  010FA4  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 36336  010FA8  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 36337  010FAC  0E00               	movlw	0
 36338  010FAE  84DB               	bsf	plusw2,2,c
 36339                           
 36340                           ; BSR set to: 0
 36341                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 36342  010FB0  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 36343  010FB4  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 36344  010FB8  0E00               	movlw	0
 36345  010FBA  8EDB               	bsf	plusw2,7,c
 36346                           
 36347                           ; BSR set to: 0
 36348                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 36349  010FBC  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 36350  010FBE  0D04               	mullw	4
 36351  010FC0  CFF3 F061          	movff	prodl,??_USBStallEndpoint
 36352  010FC4  CFF4 F062          	movff	prodh,??_USBStallEndpoint+1
 36353  010FC8  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 36354  010FCA  0D02               	mullw	2
 36355  010FCC  50F3               	movf	prodl,w,c
 36356  010FCE  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 36357  010FD0  50F4               	movf	prodh,w,c
 36358  010FD2  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 36359  010FD4  90D8               	bcf	status,0,c
 36360  010FD6  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 36361  010FD8  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 36362  010FDA  90D8               	bcf	status,0,c
 36363  010FDC  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 36364  010FDE  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 36365  010FE0  0E04               	movlw	4
 36366  010FE2  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 36367  010FE4  0E00               	movlw	0
 36368  010FE6  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 36369  010FE8  0E00               	movlw	0
 36370  010FEA  2561               	addwf	??_USBStallEndpoint& (0+255),w,b
 36371  010FEC  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 36372  010FEE  0E0D               	movlw	13
 36373  010FF0  2162               	addwfc	(??_USBStallEndpoint+1)& (0+255),w,b
 36374  010FF2  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 36375                           
 36376                           ; BSR set to: 0
 36377                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 36378  010FF4  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 36379  010FF8  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 36380  010FFC  0E00               	movlw	0
 36381  010FFE  84DB               	bsf	plusw2,2,c
 36382                           
 36383                           ; BSR set to: 0
 36384                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 36385  011000  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 36386  011004  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 36387  011008  0E00               	movlw	0
 36388  01100A  8EDB               	bsf	plusw2,7,c
 36389  01100C  0012               	return	
 36390  01100E                     __end_of_USBStallEndpoint:
 36391                           	opt stack 0
 36392                           tosu	equ	0xFFF
 36393                           tosh	equ	0xFFE
 36394                           tosl	equ	0xFFD
 36395                           pclath	equ	0xFFA
 36396                           tblptru	equ	0xFF8
 36397                           tblptrh	equ	0xFF7
 36398                           tblptrl	equ	0xFF6
 36399                           tablat	equ	0xFF5
 36400                           prodh	equ	0xFF4
 36401                           prodl	equ	0xFF3
 36402                           intcon	equ	0xFF2
 36403                           postinc0	equ	0xFEE
 36404                           wreg	equ	0xFE8
 36405                           indf1	equ	0xFE7
 36406                           postinc1	equ	0xFE6
 36407                           postdec1	equ	0xFE5
 36408                           plusw1	equ	0xFE3
 36409                           fsr1h	equ	0xFE2
 36410                           fsr1l	equ	0xFE1
 36411                           indf2	equ	0xFDF
 36412                           postinc2	equ	0xFDE
 36413                           postdec2	equ	0xFDD
 36414                           plusw2	equ	0xFDB
 36415                           fsr2h	equ	0xFDA
 36416                           fsr2l	equ	0xFD9
 36417                           status	equ	0xFD8
 36418                           
 36419 ;; *************** function _ResetSenseData *****************
 36420 ;; Defined at:
 36421 ;;		line 1373 in file "usb_device_msd.c"
 36422 ;; Parameters:    Size  Location     Type
 36423 ;;		None
 36424 ;; Auto vars:     Size  Location     Type
 36425 ;;		None
 36426 ;; Return value:  Size  Location     Type
 36427 ;;                  1    wreg      void 
 36428 ;; Registers used:
 36429 ;;		wreg, status,2
 36430 ;; Tracked objects:
 36431 ;;		On entry : 0/0
 36432 ;;		On exit  : 0/0
 36433 ;;		Unchanged: 0/0
 36434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36439 ;;Total ram usage:        0 bytes
 36440 ;; Hardware stack levels used:    1
 36441 ;; Hardware stack levels required when called:   10
 36442 ;; This function calls:
 36443 ;;		Nothing
 36444 ;; This function is called by:
 36445 ;;		_MSDProcessCommandMediaAbsent
 36446 ;;		_MSDProcessCommandMediaPresent
 36447 ;;		_MSDErrorHandler
 36448 ;; This function uses a non-reentrant model
 36449 ;;
 36450                           
 36451                           	psect	text143
 36452  0142E4                     __ptext143:
 36453                           	opt stack 0
 36454  0142E4                     _ResetSenseData:
 36455                           	opt stack 16
 36456                           
 36457                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 36458                           
 36459                           ; BSR set to: 0
 36460                           ;incstack = 0
 36461  0142E4  0101               	movlb	1	; () banked
 36462  0142E6  9100               	bcf	_gblSenseData& (0+255),0,b
 36463  0142E8  9300               	bcf	_gblSenseData& (0+255),1,b
 36464  0142EA  9500               	bcf	_gblSenseData& (0+255),2,b
 36465  0142EC  9700               	bcf	_gblSenseData& (0+255),3,b
 36466  0142EE  8900               	bsf	_gblSenseData& (0+255),4,b
 36467  0142F0  8B00               	bsf	_gblSenseData& (0+255),5,b
 36468  0142F2  8D00               	bsf	_gblSenseData& (0+255),6,b
 36469                           
 36470                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 36471  0142F4  9F00               	bcf	_gblSenseData& (0+255),7,b
 36472                           
 36473                           ; BSR set to: 1
 36474                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 36475  0142F6  0E00               	movlw	0
 36476  0142F8  6F01               	movwf	(_gblSenseData+1)& (0+255),b
 36477                           
 36478                           ; BSR set to: 1
 36479                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 36480  0142FA  9102               	bcf	(_gblSenseData+2)& (0+255),0,b
 36481  0142FC  9302               	bcf	(_gblSenseData+2)& (0+255),1,b
 36482  0142FE  9502               	bcf	(_gblSenseData+2)& (0+255),2,b
 36483  014300  9702               	bcf	(_gblSenseData+2)& (0+255),3,b
 36484                           
 36485                           ; BSR set to: 1
 36486                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 36487  014302  9B02               	bcf	(_gblSenseData+2)& (0+255),5,b
 36488                           
 36489                           ; BSR set to: 1
 36490                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 36491  014304  9D02               	bcf	(_gblSenseData+2)& (0+255),6,b
 36492                           
 36493                           ; BSR set to: 1
 36494                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 36495  014306  9F02               	bcf	(_gblSenseData+2)& (0+255),7,b
 36496                           
 36497                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 36498  014308  0E00               	movlw	0
 36499  01430A  6F03               	movwf	(_gblSenseData+3)& (0+255),b
 36500                           
 36501                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 36502  01430C  0E00               	movlw	0
 36503  01430E  6F04               	movwf	(_gblSenseData+4)& (0+255),b
 36504                           
 36505                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 36506  014310  0E00               	movlw	0
 36507  014312  6F05               	movwf	(_gblSenseData+5)& (0+255),b
 36508                           
 36509                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 36510  014314  0E00               	movlw	0
 36511  014316  6F06               	movwf	(_gblSenseData+6)& (0+255),b
 36512                           
 36513                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 36514  014318  0E0A               	movlw	10
 36515  01431A  6F07               	movwf	(_gblSenseData+7)& (0+255),b
 36516                           
 36517                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 36518  01431C  0E00               	movlw	0
 36519  01431E  6F08               	movwf	(_gblSenseData+8)& (0+255),b
 36520  014320  0E00               	movlw	0
 36521  014322  6F09               	movwf	(_gblSenseData+9)& (0+255),b
 36522  014324  0E00               	movlw	0
 36523  014326  6F0A               	movwf	(_gblSenseData+10)& (0+255),b
 36524  014328  0E00               	movlw	0
 36525  01432A  6F0B               	movwf	(_gblSenseData+11)& (0+255),b
 36526                           
 36527                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 36528  01432C  0E00               	movlw	0
 36529  01432E  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 36530                           
 36531                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 36532  014330  0E00               	movlw	0
 36533  014332  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 36534                           
 36535                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 36536  014334  0E00               	movlw	0
 36537  014336  6F0E               	movwf	(_gblSenseData+14)& (0+255),b
 36538                           
 36539                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 36540  014338  0E00               	movlw	0
 36541  01433A  6F0F               	movwf	(_gblSenseData+15)& (0+255),b
 36542                           
 36543                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 36544  01433C  0E00               	movlw	0
 36545  01433E  6F10               	movwf	(_gblSenseData+16)& (0+255),b
 36546                           
 36547                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 36548  014340  0E00               	movlw	0
 36549  014342  6F11               	movwf	(_gblSenseData+17)& (0+255),b
 36550                           
 36551                           ; BSR set to: 1
 36552  014344  0012               	return		;funcret
 36553  014346                     __end_of_ResetSenseData:
 36554                           	opt stack 0
 36555                           tosu	equ	0xFFF
 36556                           tosh	equ	0xFFE
 36557                           tosl	equ	0xFFD
 36558                           pclath	equ	0xFFA
 36559                           tblptru	equ	0xFF8
 36560                           tblptrh	equ	0xFF7
 36561                           tblptrl	equ	0xFF6
 36562                           tablat	equ	0xFF5
 36563                           prodh	equ	0xFF4
 36564                           prodl	equ	0xFF3
 36565                           intcon	equ	0xFF2
 36566                           postinc0	equ	0xFEE
 36567                           wreg	equ	0xFE8
 36568                           indf1	equ	0xFE7
 36569                           postinc1	equ	0xFE6
 36570                           postdec1	equ	0xFE5
 36571                           plusw1	equ	0xFE3
 36572                           fsr1h	equ	0xFE2
 36573                           fsr1l	equ	0xFE1
 36574                           indf2	equ	0xFDF
 36575                           postinc2	equ	0xFDE
 36576                           postdec2	equ	0xFDD
 36577                           plusw2	equ	0xFDB
 36578                           fsr2h	equ	0xFDA
 36579                           fsr2l	equ	0xFD9
 36580                           status	equ	0xFD8
 36581                           
 36582 ;; *************** function _ExternalFlash_SectorRead *****************
 36583 ;; Defined at:
 36584 ;;		line 40 in file "external_flash.c"
 36585 ;; Parameters:    Size  Location     Type
 36586 ;;  config          2   43[BANK0 ] PTR void 
 36587 ;;		 -> NULL(0), 
 36588 ;;  sector_addr     4   45[BANK0 ] unsigned long 
 36589 ;;  buffer          2   49[BANK0 ] PTR unsigned char 
 36590 ;;		 -> msd_buffer(512), 
 36591 ;; Auto vars:     Size  Location     Type
 36592 ;;  page            2   51[BANK0 ] unsigned int 
 36593 ;; Return value:  Size  Location     Type
 36594 ;;                  1    wreg      unsigned char 
 36595 ;; Registers used:
 36596 ;;		wreg, status,2, status,0, cstack
 36597 ;; Tracked objects:
 36598 ;;		On entry : 0/0
 36599 ;;		On exit  : 0/0
 36600 ;;		Unchanged: 0/0
 36601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36602 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36603 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36605 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36606 ;;Total ram usage:       10 bytes
 36607 ;; Hardware stack levels used:    1
 36608 ;; Hardware stack levels required when called:   15
 36609 ;; This function calls:
 36610 ;;		_flash_sector_read
 36611 ;; This function is called by:
 36612 ;;		_MSDReadHandler
 36613 ;; This function uses a non-reentrant model
 36614 ;;
 36615                           
 36616                           	psect	text144
 36617  0152CA                     __ptext144:
 36618                           	opt stack 0
 36619  0152CA                     _ExternalFlash_SectorRead:
 36620                           	opt stack 10
 36621                           
 36622                           ;external_flash.c: 42: uint16_t page = (uint16_t) sector_addr;
 36623                           
 36624                           ; BSR set to: 1
 36625                           ;incstack = 0
 36626  0152CA  C08D  F093         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 36627  0152CE  C08E  F094         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 36628                           
 36629                           ;external_flash.c: 45: if(sector_addr >= 8192)
 36630  0152D2  0100               	movlb	0	; () banked
 36631  0152D4  5190               	movf	(ExternalFlash_SectorRead@sector_addr+3)& (0+255),w,b
 36632  0152D6  118F               	iorwf	(ExternalFlash_SectorRead@sector_addr+2)& (0+255),w,b
 36633  0152D8  E104               	bnz	u10960
 36634  0152DA  0E20               	movlw	32
 36635  0152DC  5D8E               	subwf	(ExternalFlash_SectorRead@sector_addr+1)& (0+255),w,b
 36636  0152DE  A0D8               	btfss	status,0,c
 36637  0152E0  D002               	goto	l1677
 36638  0152E2                     u10960:
 36639                           
 36640                           ; BSR set to: 0
 36641                           ;external_flash.c: 46: {;external_flash.c: 47: return 0;
 36642  0152E2  0E00               	movlw	0
 36643                           
 36644                           ; BSR set to: 0
 36645  0152E4  0012               	return	
 36646  0152E6                     l1677:
 36647                           
 36648                           ; BSR set to: 0
 36649                           ;external_flash.c: 48: };external_flash.c: 51: flash_sector_read(page, buffer);
 36650                           
 36651                           ; BSR set to: 0
 36652  0152E6  C093  F087         	movff	ExternalFlash_SectorRead@page,flash_sector_read@page
 36653  0152EA  C094  F088         	movff	ExternalFlash_SectorRead@page+1,flash_sector_read@page+1
 36654  0152EE  C091  F089         	movff	ExternalFlash_SectorRead@buffer,flash_sector_read@data
 36655  0152F2  C092  F08A         	movff	ExternalFlash_SectorRead@buffer+1,flash_sector_read@data+1
 36656  0152F6  EC2C  F0AB         	call	_flash_sector_read	;wreg free
 36657                           
 36658                           ;external_flash.c: 53: return 1;
 36659  0152FA  0E01               	movlw	1
 36660  0152FC  0012               	return	
 36661  0152FE                     __end_of_ExternalFlash_SectorRead:
 36662                           	opt stack 0
 36663                           tosu	equ	0xFFF
 36664                           tosh	equ	0xFFE
 36665                           tosl	equ	0xFFD
 36666                           pclath	equ	0xFFA
 36667                           tblptru	equ	0xFF8
 36668                           tblptrh	equ	0xFF7
 36669                           tblptrl	equ	0xFF6
 36670                           tablat	equ	0xFF5
 36671                           prodh	equ	0xFF4
 36672                           prodl	equ	0xFF3
 36673                           intcon	equ	0xFF2
 36674                           postinc0	equ	0xFEE
 36675                           wreg	equ	0xFE8
 36676                           indf1	equ	0xFE7
 36677                           postinc1	equ	0xFE6
 36678                           postdec1	equ	0xFE5
 36679                           plusw1	equ	0xFE3
 36680                           fsr1h	equ	0xFE2
 36681                           fsr1l	equ	0xFE1
 36682                           indf2	equ	0xFDF
 36683                           postinc2	equ	0xFDE
 36684                           postdec2	equ	0xFDD
 36685                           plusw2	equ	0xFDB
 36686                           fsr2h	equ	0xFDA
 36687                           fsr2l	equ	0xFD9
 36688                           status	equ	0xFD8
 36689                           
 36690 ;; *************** function _flash_sector_read *****************
 36691 ;; Defined at:
 36692 ;;		line 426 in file "flash.c"
 36693 ;; Parameters:    Size  Location     Type
 36694 ;;  page            2   39[BANK0 ] unsigned int 
 36695 ;;  data            2   41[BANK0 ] PTR unsigned char 
 36696 ;;		 -> buffer(512), msd_buffer(512), 
 36697 ;; Auto vars:     Size  Location     Type
 36698 ;;		None
 36699 ;; Return value:  Size  Location     Type
 36700 ;;                  1    wreg      void 
 36701 ;; Registers used:
 36702 ;;		wreg, status,2, status,0, cstack
 36703 ;; Tracked objects:
 36704 ;;		On entry : 0/0
 36705 ;;		On exit  : 0/0
 36706 ;;		Unchanged: 0/0
 36707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36708 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36711 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36712 ;;Total ram usage:        4 bytes
 36713 ;; Hardware stack levels used:    1
 36714 ;; Hardware stack levels required when called:   14
 36715 ;; This function calls:
 36716 ;;		__flash_partial_read
 36717 ;; This function is called by:
 36718 ;;		_ExternalFlash_SectorRead
 36719 ;;		__get_available_cluster
 36720 ;;		__find_nth_cluster
 36721 ;;		__make_cluster_chain
 36722 ;;		_fat_find_file
 36723 ;;		_fat_get_format_status
 36724 ;; This function uses a non-reentrant model
 36725 ;;
 36726                           
 36727                           	psect	text145
 36728  015658                     __ptext145:
 36729                           	opt stack 0
 36730  015658                     _flash_sector_read:
 36731                           	opt stack 13
 36732                           
 36733                           ;flash.c: 429: _flash_partial_read(page, 0, 512, data);
 36734                           
 36735                           ;incstack = 0
 36736  015658  C087  F073         	movff	flash_sector_read@page,__flash_partial_read@page
 36737  01565C  C088  F074         	movff	flash_sector_read@page+1,__flash_partial_read@page+1
 36738  015660  0E00               	movlw	0
 36739  015662  0100               	movlb	0	; () banked
 36740  015664  6F76               	movwf	(__flash_partial_read@start+1)& (0+255),b
 36741  015666  0E00               	movlw	0
 36742  015668  6F75               	movwf	__flash_partial_read@start& (0+255),b
 36743  01566A  0E02               	movlw	2
 36744  01566C  6F78               	movwf	(__flash_partial_read@length+1)& (0+255),b
 36745  01566E  0E00               	movlw	0
 36746  015670  6F77               	movwf	__flash_partial_read@length& (0+255),b
 36747  015672  C089  F079         	movff	flash_sector_read@data,__flash_partial_read@data
 36748  015676  C08A  F07A         	movff	flash_sector_read@data+1,__flash_partial_read@data+1
 36749  01567A  ECB2  F09E         	call	__flash_partial_read	;wreg free
 36750  01567E  0012               	return		;funcret
 36751  015680                     __end_of_flash_sector_read:
 36752                           	opt stack 0
 36753                           tosu	equ	0xFFF
 36754                           tosh	equ	0xFFE
 36755                           tosl	equ	0xFFD
 36756                           pclath	equ	0xFFA
 36757                           tblptru	equ	0xFF8
 36758                           tblptrh	equ	0xFF7
 36759                           tblptrl	equ	0xFF6
 36760                           tablat	equ	0xFF5
 36761                           prodh	equ	0xFF4
 36762                           prodl	equ	0xFF3
 36763                           intcon	equ	0xFF2
 36764                           postinc0	equ	0xFEE
 36765                           wreg	equ	0xFE8
 36766                           indf1	equ	0xFE7
 36767                           postinc1	equ	0xFE6
 36768                           postdec1	equ	0xFE5
 36769                           plusw1	equ	0xFE3
 36770                           fsr1h	equ	0xFE2
 36771                           fsr1l	equ	0xFE1
 36772                           indf2	equ	0xFDF
 36773                           postinc2	equ	0xFDE
 36774                           postdec2	equ	0xFDD
 36775                           plusw2	equ	0xFDB
 36776                           fsr2h	equ	0xFDA
 36777                           fsr2l	equ	0xFD9
 36778                           status	equ	0xFD8
 36779                           
 36780 ;; *************** function __flash_partial_read *****************
 36781 ;; Defined at:
 36782 ;;		line 309 in file "flash.c"
 36783 ;; Parameters:    Size  Location     Type
 36784 ;;  page            2   19[BANK0 ] unsigned int 
 36785 ;;  start           2   21[BANK0 ] unsigned int 
 36786 ;;  length          2   23[BANK0 ] unsigned int 
 36787 ;;  data            2   25[BANK0 ] PTR unsigned char 
 36788 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 36789 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 36790 ;;		 -> _root_is_available@first_byte(1), buffer(512), msd_buffer(512), 
 36791 ;; Auto vars:     Size  Location     Type
 36792 ;;  command         4   31[BANK0 ] unsigned char [4]
 36793 ;;  address         4   35[BANK0 ] unsigned long 
 36794 ;; Return value:  Size  Location     Type
 36795 ;;                  1    wreg      void 
 36796 ;; Registers used:
 36797 ;;		wreg, status,2, status,0, cstack
 36798 ;; Tracked objects:
 36799 ;;		On entry : 0/0
 36800 ;;		On exit  : 0/0
 36801 ;;		Unchanged: 0/0
 36802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36803 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36804 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36805 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36806 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36807 ;;Total ram usage:       20 bytes
 36808 ;; Hardware stack levels used:    1
 36809 ;; Hardware stack levels required when called:   13
 36810 ;; This function calls:
 36811 ;;		__flash_is_busy
 36812 ;;		_spi_tx_rx
 36813 ;; This function is called by:
 36814 ;;		_flash_sector_read
 36815 ;;		_flash_partial_read
 36816 ;; This function uses a non-reentrant model
 36817 ;;
 36818                           
 36819                           	psect	text146
 36820  013D64                     __ptext146:
 36821                           	opt stack 0
 36822  013D64                     __flash_partial_read:
 36823                           	opt stack 13
 36824                           
 36825                           ;flash.c: 311: uint32_t address;;flash.c: 312: uint8_t command[4];;flash.c: 315: while(_
      +                          flash_is_busy());
 36826                           
 36827                           ;incstack = 0
 36828  013D64  EC8A  F0AB         	call	__flash_is_busy	;wreg free
 36829  013D68  0900               	iorlw	0
 36830  013D6A  A4D8               	btfss	status,2,c
 36831  013D6C  D7FB               	goto	__flash_partial_read
 36832                           
 36833                           ;flash.c: 318: address = page;
 36834  013D6E  C073  F083         	movff	__flash_partial_read@page,__flash_partial_read@address
 36835  013D72  C074  F084         	movff	__flash_partial_read@page+1,__flash_partial_read@address+1
 36836  013D76  0100               	movlb	0	; () banked
 36837  013D78  6B85               	clrf	(__flash_partial_read@address+2)& (0+255),b
 36838  013D7A  6B86               	clrf	(__flash_partial_read@address+3)& (0+255),b
 36839                           
 36840                           ; BSR set to: 0
 36841                           ;flash.c: 319: address <<= 9;
 36842  013D7C  0E09               	movlw	9
 36843  013D7E                     u9805:
 36844  013D7E  90D8               	bcf	status,0,c
 36845  013D80  3783               	rlcf	__flash_partial_read@address& (0+255),f,b
 36846  013D82  3784               	rlcf	(__flash_partial_read@address+1)& (0+255),f,b
 36847  013D84  3785               	rlcf	(__flash_partial_read@address+2)& (0+255),f,b
 36848  013D86  3786               	rlcf	(__flash_partial_read@address+3)& (0+255),f,b
 36849  013D88  2EE8               	decfsz	wreg,f,c
 36850  013D8A  D7F9               	goto	u9805
 36851                           
 36852                           ; BSR set to: 0
 36853                           ;flash.c: 320: address |= start;
 36854  013D8C  5175               	movf	__flash_partial_read@start& (0+255),w,b
 36855  013D8E  6F7B               	movwf	??__flash_partial_read& (0+255),b
 36856  013D90  5176               	movf	(__flash_partial_read@start+1)& (0+255),w,b
 36857  013D92  6F7C               	movwf	(??__flash_partial_read+1)& (0+255),b
 36858  013D94  6B7D               	clrf	(??__flash_partial_read+2)& (0+255),b
 36859  013D96  6B7E               	clrf	(??__flash_partial_read+3)& (0+255),b
 36860  013D98  517B               	movf	??__flash_partial_read& (0+255),w,b
 36861  013D9A  1383               	iorwf	__flash_partial_read@address& (0+255),f,b
 36862  013D9C  517C               	movf	(??__flash_partial_read+1)& (0+255),w,b
 36863  013D9E  1384               	iorwf	(__flash_partial_read@address+1)& (0+255),f,b
 36864  013DA0  517D               	movf	(??__flash_partial_read+2)& (0+255),w,b
 36865  013DA2  1385               	iorwf	(__flash_partial_read@address+2)& (0+255),f,b
 36866  013DA4  517E               	movf	(??__flash_partial_read+3)& (0+255),w,b
 36867  013DA6  1386               	iorwf	(__flash_partial_read@address+3)& (0+255),f,b
 36868                           
 36869                           ; BSR set to: 0
 36870                           ;flash.c: 323: command[0] = 0x03;
 36871  013DA8  0E03               	movlw	3
 36872  013DAA  6F7F               	movwf	__flash_partial_read@command& (0+255),b
 36873                           
 36874                           ; BSR set to: 0
 36875                           ;flash.c: 324: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 36876  013DAC  C085  F080         	movff	__flash_partial_read@address+2,__flash_partial_read@command+1
 36877                           
 36878                           ; BSR set to: 0
 36879                           ;flash.c: 325: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 36880  013DB0  5184               	movf	(__flash_partial_read@address+1)& (0+255),w,b
 36881  013DB2  6F81               	movwf	(__flash_partial_read@command+2)& (0+255),b
 36882                           
 36883                           ; BSR set to: 0
 36884                           ;flash.c: 326: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 36885  013DB4  C083  F082         	movff	__flash_partial_read@address,__flash_partial_read@command+3
 36886                           
 36887                           ; BSR set to: 0
 36888                           ;flash.c: 329: spi_tx_rx(command, 4, data, length);
 36889  013DB8  0E7F               	movlw	low __flash_partial_read@command
 36890  013DBA  6F60               	movwf	spi_tx_rx@command& (0+255),b
 36891  013DBC  0E00               	movlw	high __flash_partial_read@command
 36892  013DBE  6F61               	movwf	(spi_tx_rx@command+1)& (0+255),b
 36893  013DC0  0E00               	movlw	0
 36894  013DC2  6F63               	movwf	(spi_tx_rx@command_length+1)& (0+255),b
 36895  013DC4  0E04               	movlw	4
 36896  013DC6  6F62               	movwf	spi_tx_rx@command_length& (0+255),b
 36897  013DC8  C079  F064         	movff	__flash_partial_read@data,spi_tx_rx@data
 36898  013DCC  C07A  F065         	movff	__flash_partial_read@data+1,spi_tx_rx@data+1
 36899  013DD0  C077  F066         	movff	__flash_partial_read@length,spi_tx_rx@data_length
 36900  013DD4  C078  F067         	movff	__flash_partial_read@length+1,spi_tx_rx@data_length+1
 36901  013DD8  EC6F  F09A         	call	_spi_tx_rx	;wreg free
 36902  013DDC  0012               	return		;funcret
 36903  013DDE                     __end_of__flash_partial_read:
 36904                           	opt stack 0
 36905                           tosu	equ	0xFFF
 36906                           tosh	equ	0xFFE
 36907                           tosl	equ	0xFFD
 36908                           pclath	equ	0xFFA
 36909                           tblptru	equ	0xFF8
 36910                           tblptrh	equ	0xFF7
 36911                           tblptrl	equ	0xFF6
 36912                           tablat	equ	0xFF5
 36913                           prodh	equ	0xFF4
 36914                           prodl	equ	0xFF3
 36915                           intcon	equ	0xFF2
 36916                           postinc0	equ	0xFEE
 36917                           wreg	equ	0xFE8
 36918                           indf1	equ	0xFE7
 36919                           postinc1	equ	0xFE6
 36920                           postdec1	equ	0xFE5
 36921                           plusw1	equ	0xFE3
 36922                           fsr1h	equ	0xFE2
 36923                           fsr1l	equ	0xFE1
 36924                           indf2	equ	0xFDF
 36925                           postinc2	equ	0xFDE
 36926                           postdec2	equ	0xFDD
 36927                           plusw2	equ	0xFDB
 36928                           fsr2h	equ	0xFDA
 36929                           fsr2l	equ	0xFD9
 36930                           status	equ	0xFD8
 36931                           
 36932 ;; *************** function __flash_is_busy *****************
 36933 ;; Defined at:
 36934 ;;		line 281 in file "flash.c"
 36935 ;; Parameters:    Size  Location     Type
 36936 ;;		None
 36937 ;; Auto vars:     Size  Location     Type
 36938 ;;  status          2   17[BANK0 ] unsigned int 
 36939 ;; Return value:  Size  Location     Type
 36940 ;;                  1    wreg      unsigned char 
 36941 ;; Registers used:
 36942 ;;		wreg, status,2, status,0, cstack
 36943 ;; Tracked objects:
 36944 ;;		On entry : 0/0
 36945 ;;		On exit  : 0/0
 36946 ;;		Unchanged: 0/0
 36947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36949 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36951 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36952 ;;Total ram usage:        2 bytes
 36953 ;; Hardware stack levels used:    1
 36954 ;; Hardware stack levels required when called:   12
 36955 ;; This function calls:
 36956 ;;		__flash_get_status
 36957 ;;		__flash_wakeup
 36958 ;; This function is called by:
 36959 ;;		__flash_set_page_size
 36960 ;;		__flash_copy_page_to_buffer
 36961 ;;		__flash_compare_page_to_buffer
 36962 ;;		__flash_write_to_buffer
 36963 ;;		__flash_write_page_from_buffer
 36964 ;;		__flash_partial_read
 36965 ;;		_flash_partial_write
 36966 ;;		__flash_erase_page
 36967 ;;		__flash_buffer_read
 36968 ;;		_flash_is_busy
 36969 ;;		_flash_set_power_state
 36970 ;; This function uses a non-reentrant model
 36971 ;;
 36972                           
 36973                           	psect	text147
 36974  015714                     __ptext147:
 36975                           	opt stack 0
 36976  015714                     __flash_is_busy:
 36977                           	opt stack 15
 36978                           
 36979                           ;flash.c: 283: uint16_t status;;flash.c: 286: if(power_state!=FLASH_POWER_STATE_NORMAL)
 36980                           
 36981                           ;incstack = 0
 36982  015714  0101               	movlb	1	; () banked
 36983  015716  515A               	movf	_power_state& (0+255),w,b
 36984  015718  A4D8               	btfss	status,2,c
 36985                           
 36986                           ; BSR set to: 1
 36987                           ;flash.c: 287: {;flash.c: 288: _flash_wakeup();
 36988  01571A  EC53  F0A4         	call	__flash_wakeup	;wreg free
 36989                           
 36990                           ;flash.c: 289: };flash.c: 292: status = _flash_get_status();
 36991  01571E  EC7F  F0A9         	call	__flash_get_status	;wreg free
 36992  015722  C06C  F071         	movff	?__flash_get_status,__flash_is_busy@status
 36993  015726  C06D  F072         	movff	?__flash_get_status+1,__flash_is_busy@status+1
 36994                           
 36995                           ;flash.c: 295: if(status & 0b0000000010000000)
 36996  01572A  0100               	movlb	0	; () banked
 36997  01572C  AF71               	btfss	__flash_is_busy@status& (0+255),7,b
 36998  01572E  D002               	goto	l1581
 36999                           
 37000                           ; BSR set to: 0
 37001                           ;flash.c: 296: {;flash.c: 298: return 0;
 37002  015730  0E00               	movlw	0
 37003                           
 37004                           ; BSR set to: 0
 37005                           ;flash.c: 299: }
 37006                           
 37007                           ; BSR set to: 0
 37008  015732  0012               	return	
 37009  015734                     l1581:
 37010                           
 37011                           ; BSR set to: 0
 37012                           ;flash.c: 300: else;flash.c: 301: {;flash.c: 303: return 1;
 37013                           
 37014                           ; BSR set to: 0
 37015  015734  0E01               	movlw	1
 37016                           
 37017                           ; BSR set to: 0
 37018  015736  0012               	return	
 37019  015738                     __end_of__flash_is_busy:
 37020                           	opt stack 0
 37021                           tosu	equ	0xFFF
 37022                           tosh	equ	0xFFE
 37023                           tosl	equ	0xFFD
 37024                           pclath	equ	0xFFA
 37025                           tblptru	equ	0xFF8
 37026                           tblptrh	equ	0xFF7
 37027                           tblptrl	equ	0xFF6
 37028                           tablat	equ	0xFF5
 37029                           prodh	equ	0xFF4
 37030                           prodl	equ	0xFF3
 37031                           intcon	equ	0xFF2
 37032                           postinc0	equ	0xFEE
 37033                           wreg	equ	0xFE8
 37034                           indf1	equ	0xFE7
 37035                           postinc1	equ	0xFE6
 37036                           postdec1	equ	0xFE5
 37037                           plusw1	equ	0xFE3
 37038                           fsr1h	equ	0xFE2
 37039                           fsr1l	equ	0xFE1
 37040                           indf2	equ	0xFDF
 37041                           postinc2	equ	0xFDE
 37042                           postdec2	equ	0xFDD
 37043                           plusw2	equ	0xFDB
 37044                           fsr2h	equ	0xFDA
 37045                           fsr2l	equ	0xFD9
 37046                           status	equ	0xFD8
 37047                           
 37048 ;; *************** function __flash_wakeup *****************
 37049 ;; Defined at:
 37050 ;;		line 128 in file "flash.c"
 37051 ;; Parameters:    Size  Location     Type
 37052 ;;		None
 37053 ;; Auto vars:     Size  Location     Type
 37054 ;;  command         1    8[BANK0 ] unsigned char 
 37055 ;; Return value:  Size  Location     Type
 37056 ;;                  1    wreg      void 
 37057 ;; Registers used:
 37058 ;;		wreg, status,2, status,0, cstack
 37059 ;; Tracked objects:
 37060 ;;		On entry : 0/0
 37061 ;;		On exit  : 0/0
 37062 ;;		Unchanged: 0/0
 37063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37065 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37067 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37068 ;;Total ram usage:        1 bytes
 37069 ;; Hardware stack levels used:    1
 37070 ;; Hardware stack levels required when called:   11
 37071 ;; This function calls:
 37072 ;;		_spi_tx
 37073 ;; This function is called by:
 37074 ;;		__flash_is_busy
 37075 ;;		_flash_set_power_state
 37076 ;; This function uses a non-reentrant model
 37077 ;;
 37078                           
 37079                           	psect	text148
 37080  0148A6                     __ptext148:
 37081                           	opt stack 0
 37082  0148A6                     __flash_wakeup:
 37083                           	opt stack 15
 37084                           
 37085                           ;flash.c: 130: uint8_t command;;flash.c: 132: switch(power_state)
 37086                           
 37087                           ; BSR set to: 0
 37088                           ;incstack = 0
 37089  0148A6  D022               	goto	l1530
 37090  0148A8                     
 37091                           ;flash.c: 135: command = 0xAB;
 37092  0148A8  0EAB               	movlw	171
 37093  0148AA  0100               	movlb	0	; () banked
 37094  0148AC  6F68               	movwf	__flash_wakeup@command& (0+255),b
 37095                           
 37096                           ; BSR set to: 0
 37097                           ;flash.c: 136: spi_tx(&command, 1);
 37098  0148AE  0E68               	movlw	low __flash_wakeup@command
 37099  0148B0  6F60               	movwf	spi_tx@data& (0+255),b
 37100  0148B2  0E00               	movlw	high __flash_wakeup@command
 37101  0148B4  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 37102  0148B6  0E00               	movlw	0
 37103  0148B8  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 37104  0148BA  0E01               	movlw	1
 37105  0148BC  6F62               	movwf	spi_tx@length& (0+255),b
 37106  0148BE  EC76  F0A3         	call	_spi_tx	;wreg free
 37107                           
 37108                           ;flash.c: 137: _delay((unsigned long)((35)*(8000000/4000000.0)));
 37109  0148C2  0E17               	movlw	23
 37110  0148C4                     u19157:
 37111  0148C4  2EE8               	decfsz	wreg,f,c
 37112  0148C6  D7FE               	bra	u19157
 37113  0148C8  F000               	nop	
 37114                           
 37115                           ;flash.c: 138: power_state = FLASH_POWER_STATE_NORMAL;
 37116  0148CA  0E00               	movlw	0
 37117  0148CC  0101               	movlb	1	; () banked
 37118  0148CE  6F5A               	movwf	_power_state& (0+255),b
 37119                           
 37120                           ;flash.c: 139: break;
 37121  0148D0  0012               	return	
 37122  0148D2                     l1533:
 37123                           
 37124                           ; BSR set to: 1
 37125                           ;flash.c: 144: LATDbits.LD7 = 0;
 37126  0148D2  9E8C               	bcf	3980,7,c	;volatile
 37127                           
 37128                           ; BSR set to: 1
 37129                           ;flash.c: 145: _delay((unsigned long)((20)*(8000000/4000000.0)));
 37130  0148D4  0E0D               	movlw	13
 37131  0148D6                     u19167:
 37132  0148D6  2EE8               	decfsz	wreg,f,c
 37133  0148D8  D7FE               	bra	u19167
 37134  0148DA  F000               	nop	
 37135                           
 37136                           ;flash.c: 146: LATDbits.LD7 = 1;
 37137  0148DC  8E8C               	bsf	3980,7,c	;volatile
 37138                           
 37139                           ;flash.c: 147: _delay((unsigned long)((120)*(8000000/4000000.0)));
 37140  0148DE  0E50               	movlw	80
 37141  0148E0                     u19177:
 37142  0148E0  2EE8               	decfsz	wreg,f,c
 37143  0148E2  D7FE               	bra	u19177
 37144                           
 37145                           ;flash.c: 148: power_state = FLASH_POWER_STATE_NORMAL;
 37146  0148E4  0E00               	movlw	0
 37147  0148E6  0101               	movlb	1	; () banked
 37148  0148E8  6F5A               	movwf	_power_state& (0+255),b
 37149                           
 37150                           ; BSR set to: 1
 37151                           ;flash.c: 150: }
 37152                           
 37153                           ;flash.c: 149: break;
 37154  0148EA  0012               	return	
 37155  0148EC                     l1530:
 37156                           
 37157                           ; BSR set to: 1
 37158  0148EC  0101               	movlb	1	; () banked
 37159  0148EE  515A               	movf	_power_state& (0+255),w,b
 37160                           
 37161                           ; Switch size 1, requested type "space"
 37162                           ; Number of cases is 2, Range of values is 1 to 2
 37163                           ; switch strategies available:
 37164                           ; Name         Instructions Cycles
 37165                           ; simple_byte            7     4 (average)
 37166                           ;	Chosen strategy is simple_byte
 37167  0148F0  0A01               	xorlw	1	; case 1
 37168  0148F2  B4D8               	btfsc	status,2,c
 37169  0148F4  D7D9               	goto	l1531
 37170  0148F6  0A03               	xorlw	3	; case 2
 37171  0148F8  A4D8               	btfss	status,2,c
 37172  0148FA  0012               	return	
 37173  0148FC  D7EA               	goto	l1533
 37174  0148FE                     __end_of__flash_wakeup:
 37175                           	opt stack 0
 37176                           tosu	equ	0xFFF
 37177                           tosh	equ	0xFFE
 37178                           tosl	equ	0xFFD
 37179                           pclath	equ	0xFFA
 37180                           tblptru	equ	0xFF8
 37181                           tblptrh	equ	0xFF7
 37182                           tblptrl	equ	0xFF6
 37183                           tablat	equ	0xFF5
 37184                           prodh	equ	0xFF4
 37185                           prodl	equ	0xFF3
 37186                           intcon	equ	0xFF2
 37187                           postinc0	equ	0xFEE
 37188                           wreg	equ	0xFE8
 37189                           indf1	equ	0xFE7
 37190                           postinc1	equ	0xFE6
 37191                           postdec1	equ	0xFE5
 37192                           plusw1	equ	0xFE3
 37193                           fsr1h	equ	0xFE2
 37194                           fsr1l	equ	0xFE1
 37195                           indf2	equ	0xFDF
 37196                           postinc2	equ	0xFDE
 37197                           postdec2	equ	0xFDD
 37198                           plusw2	equ	0xFDB
 37199                           fsr2h	equ	0xFDA
 37200                           fsr2l	equ	0xFD9
 37201                           status	equ	0xFD8
 37202                           
 37203 ;; *************** function _spi_tx *****************
 37204 ;; Defined at:
 37205 ;;		line 108 in file "spi.c"
 37206 ;; Parameters:    Size  Location     Type
 37207 ;;  data            2    0[BANK0 ] PTR unsigned char 
 37208 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 37209 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 37210 ;;  length          2    2[BANK0 ] unsigned int 
 37211 ;; Auto vars:     Size  Location     Type
 37212 ;;		None
 37213 ;; Return value:  Size  Location     Type
 37214 ;;                  1    wreg      void 
 37215 ;; Registers used:
 37216 ;;		wreg, status,2, status,0
 37217 ;; Tracked objects:
 37218 ;;		On entry : 0/0
 37219 ;;		On exit  : 0/0
 37220 ;;		Unchanged: 0/0
 37221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37222 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37224 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37225 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37226 ;;Total ram usage:        8 bytes
 37227 ;; Hardware stack levels used:    1
 37228 ;; Hardware stack levels required when called:   10
 37229 ;; This function calls:
 37230 ;;		Nothing
 37231 ;; This function is called by:
 37232 ;;		__flash_set_page_size
 37233 ;;		__flash_wakeup
 37234 ;;		__flash_copy_page_to_buffer
 37235 ;;		__flash_compare_page_to_buffer
 37236 ;;		__flash_write_page_from_buffer
 37237 ;;		__flash_erase_page
 37238 ;;		_flash_set_power_state
 37239 ;; This function uses a non-reentrant model
 37240 ;;
 37241                           
 37242                           	psect	text149
 37243  0146EC                     __ptext149:
 37244                           	opt stack 0
 37245  0146EC                     _spi_tx:
 37246                           	opt stack 17
 37247                           
 37248                           ;spi.c: 111: DMACON1bits.SSCON1 = 0;
 37249                           
 37250                           ; BSR set to: 1
 37251                           ;incstack = 0
 37252  0146EC  9E88               	bcf	3976,7,c	;volatile
 37253                           
 37254                           ;spi.c: 112: DMACON1bits.SSCON0 = 0;
 37255  0146EE  9C88               	bcf	3976,6,c	;volatile
 37256                           
 37257                           ;spi.c: 114: DMACON1bits.TXINC = 1;
 37258  0146F0  8A88               	bsf	3976,5,c	;volatile
 37259                           
 37260                           ;spi.c: 116: DMACON1bits.RXINC = 0;
 37261  0146F2  9888               	bcf	3976,4,c	;volatile
 37262                           
 37263                           ;spi.c: 118: DMACON1bits.DUPLEX1 = 0;
 37264  0146F4  9688               	bcf	3976,3,c	;volatile
 37265                           
 37266                           ;spi.c: 119: DMACON1bits.DUPLEX0 = 1;
 37267  0146F6  8488               	bsf	3976,2,c	;volatile
 37268                           
 37269                           ;spi.c: 121: DMACON1bits.DLYINTEN = 0;
 37270  0146F8  9288               	bcf	3976,1,c	;volatile
 37271                           
 37272                           ;spi.c: 123: DMACON2bits.DLYCYC = 0b0000;
 37273  0146FA  9886               	bcf	3974,4,c	;volatile
 37274  0146FC  9A86               	bcf	3974,5,c	;volatile
 37275  0146FE  9C86               	bcf	3974,6,c	;volatile
 37276  014700  9E86               	bcf	3974,7,c	;volatile
 37277                           
 37278                           ;spi.c: 125: DMACON2bits.INTLVL = 0b0000;
 37279  014702  9086               	bcf	3974,0,c	;volatile
 37280  014704  9286               	bcf	3974,1,c	;volatile
 37281  014706  9486               	bcf	3974,2,c	;volatile
 37282  014708  9686               	bcf	3974,3,c	;volatile
 37283                           
 37284                           ;spi.c: 128: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 37285  01470A  0100               	movlb	0	; () banked
 37286  01470C  5161               	movf	(spi_tx@data+1)& (0+255),w,b
 37287  01470E  6E6A               	movwf	3946,c	;volatile
 37288                           
 37289                           ; BSR set to: 0
 37290                           ;spi.c: 129: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 37291  014710  C060  FF6B         	movff	spi_tx@data,3947	;volatile
 37292                           
 37293                           ; BSR set to: 0
 37294                           ;spi.c: 132: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 37295  014714  0EFF               	movlw	255
 37296  014716  6F64               	movwf	??_spi_tx& (0+255),b
 37297  014718  0EFF               	movlw	255
 37298  01471A  6F65               	movwf	(??_spi_tx+1)& (0+255),b
 37299  01471C  C062  F066         	movff	spi_tx@length,??_spi_tx+2
 37300  014720  C063  F067         	movff	spi_tx@length+1,??_spi_tx+3
 37301  014724  5164               	movf	??_spi_tx& (0+255),w,b
 37302  014726  2766               	addwf	(??_spi_tx+2)& (0+255),f,b
 37303  014728  5165               	movf	(??_spi_tx+1)& (0+255),w,b
 37304  01472A  2367               	addwfc	(??_spi_tx+3)& (0+255),f,b
 37305  01472C  C067  F066         	movff	??_spi_tx+3,??_spi_tx+2
 37306  014730  6B67               	clrf	(??_spi_tx+3)& (0+255),b
 37307  014732  5166               	movf	(??_spi_tx+2)& (0+255),w,b
 37308  014734  6E66               	movwf	3942,c	;volatile
 37309                           
 37310                           ; BSR set to: 0
 37311                           ;spi.c: 133: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 37312  014736  0562               	decf	spi_tx@length& (0+255),w,b
 37313  014738  6E67               	movwf	3943,c	;volatile
 37314                           
 37315                           ; BSR set to: 0
 37316                           ;spi.c: 136: LATDbits.LD7 = 0;
 37317  01473A  9E8C               	bcf	3980,7,c	;volatile
 37318                           
 37319                           ; BSR set to: 0
 37320                           ;spi.c: 137: DMACON1bits.DMAEN = 1;
 37321  01473C  8088               	bsf	3976,0,c	;volatile
 37322  01473E                     
 37323                           ; BSR set to: 0
 37324  01473E  B088               	btfsc	3976,0,c	;volatile
 37325  014740  D7FE               	goto	l2172
 37326                           
 37327                           ;spi.c: 139: LATDbits.LD7 = 1;
 37328  014742  8E8C               	bsf	3980,7,c	;volatile
 37329  014744  0012               	return		;funcret
 37330  014746                     __end_of_spi_tx:
 37331                           	opt stack 0
 37332                           tosu	equ	0xFFF
 37333                           tosh	equ	0xFFE
 37334                           tosl	equ	0xFFD
 37335                           pclath	equ	0xFFA
 37336                           tblptru	equ	0xFF8
 37337                           tblptrh	equ	0xFF7
 37338                           tblptrl	equ	0xFF6
 37339                           tablat	equ	0xFF5
 37340                           prodh	equ	0xFF4
 37341                           prodl	equ	0xFF3
 37342                           intcon	equ	0xFF2
 37343                           postinc0	equ	0xFEE
 37344                           wreg	equ	0xFE8
 37345                           indf1	equ	0xFE7
 37346                           postinc1	equ	0xFE6
 37347                           postdec1	equ	0xFE5
 37348                           plusw1	equ	0xFE3
 37349                           fsr1h	equ	0xFE2
 37350                           fsr1l	equ	0xFE1
 37351                           indf2	equ	0xFDF
 37352                           postinc2	equ	0xFDE
 37353                           postdec2	equ	0xFDD
 37354                           plusw2	equ	0xFDB
 37355                           fsr2h	equ	0xFDA
 37356                           fsr2l	equ	0xFD9
 37357                           status	equ	0xFD8
 37358                           
 37359 ;; *************** function __flash_get_status *****************
 37360 ;; Defined at:
 37361 ;;		line 117 in file "flash.c"
 37362 ;; Parameters:    Size  Location     Type
 37363 ;;		None
 37364 ;; Auto vars:     Size  Location     Type
 37365 ;;  status          2   15[BANK0 ] unsigned int 
 37366 ;;  command         1   14[BANK0 ] unsigned char 
 37367 ;; Return value:  Size  Location     Type
 37368 ;;                  2   12[BANK0 ] unsigned int 
 37369 ;; Registers used:
 37370 ;;		wreg, status,2, status,0, cstack
 37371 ;; Tracked objects:
 37372 ;;		On entry : 0/0
 37373 ;;		On exit  : 0/0
 37374 ;;		Unchanged: 0/0
 37375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37376 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37377 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37379 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37380 ;;Total ram usage:        5 bytes
 37381 ;; Hardware stack levels used:    1
 37382 ;; Hardware stack levels required when called:   11
 37383 ;; This function calls:
 37384 ;;		_spi_tx_rx
 37385 ;; This function is called by:
 37386 ;;		__flash_compare_page_to_buffer
 37387 ;;		__flash_is_busy
 37388 ;; This function uses a non-reentrant model
 37389 ;;
 37390                           
 37391                           	psect	text150
 37392  0152FE                     __ptext150:
 37393                           	opt stack 0
 37394  0152FE                     __flash_get_status:
 37395                           	opt stack 15
 37396                           
 37397                           ;flash.c: 121: uint8_t command = 0xD7;
 37398                           
 37399                           ;incstack = 0
 37400  0152FE  0ED7               	movlw	215
 37401  015300  0100               	movlb	0	; () banked
 37402  015302  6F6E               	movwf	__flash_get_status@command& (0+255),b
 37403                           
 37404                           ; BSR set to: 0
 37405                           ;flash.c: 122: uint16_t status;;flash.c: 123: spi_tx_rx(&command, 1, (uint8_t*) &status,
      +                           2);
 37406  015304  0E6E               	movlw	low __flash_get_status@command
 37407  015306  6F60               	movwf	spi_tx_rx@command& (0+255),b
 37408  015308  0E00               	movlw	high __flash_get_status@command
 37409  01530A  6F61               	movwf	(spi_tx_rx@command+1)& (0+255),b
 37410  01530C  0E00               	movlw	0
 37411  01530E  6F63               	movwf	(spi_tx_rx@command_length+1)& (0+255),b
 37412  015310  0E01               	movlw	1
 37413  015312  6F62               	movwf	spi_tx_rx@command_length& (0+255),b
 37414  015314  0E6F               	movlw	low __flash_get_status@status
 37415  015316  6F64               	movwf	spi_tx_rx@data& (0+255),b
 37416  015318  0E00               	movlw	high __flash_get_status@status
 37417  01531A  6F65               	movwf	(spi_tx_rx@data+1)& (0+255),b
 37418  01531C  0E00               	movlw	0
 37419  01531E  6F67               	movwf	(spi_tx_rx@data_length+1)& (0+255),b
 37420  015320  0E02               	movlw	2
 37421  015322  6F66               	movwf	spi_tx_rx@data_length& (0+255),b
 37422  015324  EC6F  F09A         	call	_spi_tx_rx	;wreg free
 37423                           
 37424                           ;flash.c: 124: return status;
 37425  015328  C06F  F06C         	movff	__flash_get_status@status,?__flash_get_status
 37426  01532C  C070  F06D         	movff	__flash_get_status@status+1,?__flash_get_status+1
 37427  015330  0012               	return	
 37428  015332                     __end_of__flash_get_status:
 37429                           	opt stack 0
 37430                           tosu	equ	0xFFF
 37431                           tosh	equ	0xFFE
 37432                           tosl	equ	0xFFD
 37433                           pclath	equ	0xFFA
 37434                           tblptru	equ	0xFF8
 37435                           tblptrh	equ	0xFF7
 37436                           tblptrl	equ	0xFF6
 37437                           tablat	equ	0xFF5
 37438                           prodh	equ	0xFF4
 37439                           prodl	equ	0xFF3
 37440                           intcon	equ	0xFF2
 37441                           postinc0	equ	0xFEE
 37442                           wreg	equ	0xFE8
 37443                           indf1	equ	0xFE7
 37444                           postinc1	equ	0xFE6
 37445                           postdec1	equ	0xFE5
 37446                           plusw1	equ	0xFE3
 37447                           fsr1h	equ	0xFE2
 37448                           fsr1l	equ	0xFE1
 37449                           indf2	equ	0xFDF
 37450                           postinc2	equ	0xFDE
 37451                           postdec2	equ	0xFDD
 37452                           plusw2	equ	0xFDB
 37453                           fsr2h	equ	0xFDA
 37454                           fsr2l	equ	0xFD9
 37455                           status	equ	0xFD8
 37456                           
 37457 ;; *************** function _spi_tx_rx *****************
 37458 ;; Defined at:
 37459 ;;		line 199 in file "spi.c"
 37460 ;; Parameters:    Size  Location     Type
 37461 ;;  command         2    0[BANK0 ] PTR unsigned char 
 37462 ;;		 -> _flash_buffer_read@command(4), _flash_partial_read@command(4), _flash_get_status@command(1), 
 37463 ;;  command_leng    2    2[BANK0 ] unsigned int 
 37464 ;;  data            2    4[BANK0 ] PTR unsigned char 
 37465 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 37466 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 37467 ;;		 -> _root_is_available@first_byte(1), buffer(512), _flash_get_status@status(2), msd_buffer(512), 
 37468 ;;  data_length     2    6[BANK0 ] unsigned int 
 37469 ;; Auto vars:     Size  Location     Type
 37470 ;;		None
 37471 ;; Return value:  Size  Location     Type
 37472 ;;                  1    wreg      void 
 37473 ;; Registers used:
 37474 ;;		wreg, status,2, status,0
 37475 ;; Tracked objects:
 37476 ;;		On entry : 0/0
 37477 ;;		On exit  : 0/0
 37478 ;;		Unchanged: 0/0
 37479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37480 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37482 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37483 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37484 ;;Total ram usage:       12 bytes
 37485 ;; Hardware stack levels used:    1
 37486 ;; Hardware stack levels required when called:   10
 37487 ;; This function calls:
 37488 ;;		Nothing
 37489 ;; This function is called by:
 37490 ;;		__flash_get_status
 37491 ;;		__flash_partial_read
 37492 ;;		__flash_buffer_read
 37493 ;; This function uses a non-reentrant model
 37494 ;;
 37495                           
 37496                           	psect	text151
 37497  0134DE                     __ptext151:
 37498                           	opt stack 0
 37499  0134DE                     _spi_tx_rx:
 37500                           	opt stack 15
 37501                           
 37502                           ;spi.c: 202: DMACON1bits.SSCON1 = 0;
 37503                           
 37504                           ;incstack = 0
 37505  0134DE  9E88               	bcf	3976,7,c	;volatile
 37506                           
 37507                           ;spi.c: 203: DMACON1bits.SSCON0 = 0;
 37508  0134E0  9C88               	bcf	3976,6,c	;volatile
 37509                           
 37510                           ;spi.c: 205: DMACON1bits.TXINC = 1;
 37511  0134E2  8A88               	bsf	3976,5,c	;volatile
 37512                           
 37513                           ;spi.c: 207: DMACON1bits.RXINC = 0;
 37514  0134E4  9888               	bcf	3976,4,c	;volatile
 37515                           
 37516                           ;spi.c: 209: DMACON1bits.DUPLEX1 = 0;
 37517  0134E6  9688               	bcf	3976,3,c	;volatile
 37518                           
 37519                           ;spi.c: 210: DMACON1bits.DUPLEX0 = 1;
 37520  0134E8  8488               	bsf	3976,2,c	;volatile
 37521                           
 37522                           ;spi.c: 212: DMACON1bits.DLYINTEN = 0;
 37523  0134EA  9288               	bcf	3976,1,c	;volatile
 37524                           
 37525                           ;spi.c: 214: DMACON2bits.DLYCYC = 0b0000;
 37526  0134EC  9886               	bcf	3974,4,c	;volatile
 37527  0134EE  9A86               	bcf	3974,5,c	;volatile
 37528  0134F0  9C86               	bcf	3974,6,c	;volatile
 37529  0134F2  9E86               	bcf	3974,7,c	;volatile
 37530                           
 37531                           ;spi.c: 216: DMACON2bits.INTLVL = 0b0000;
 37532  0134F4  9086               	bcf	3974,0,c	;volatile
 37533  0134F6  9286               	bcf	3974,1,c	;volatile
 37534  0134F8  9486               	bcf	3974,2,c	;volatile
 37535  0134FA  9686               	bcf	3974,3,c	;volatile
 37536                           
 37537                           ;spi.c: 219: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 37538  0134FC  0100               	movlb	0	; () banked
 37539  0134FE  5161               	movf	(spi_tx_rx@command+1)& (0+255),w,b
 37540  013500  6E6A               	movwf	3946,c	;volatile
 37541                           
 37542                           ; BSR set to: 0
 37543                           ;spi.c: 220: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 37544  013502  C060  FF6B         	movff	spi_tx_rx@command,3947	;volatile
 37545                           
 37546                           ; BSR set to: 0
 37547                           ;spi.c: 223: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 37548  013506  0EFF               	movlw	255
 37549  013508  6F68               	movwf	??_spi_tx_rx& (0+255),b
 37550  01350A  0EFF               	movlw	255
 37551  01350C  6F69               	movwf	(??_spi_tx_rx+1)& (0+255),b
 37552  01350E  C062  F06A         	movff	spi_tx_rx@command_length,??_spi_tx_rx+2
 37553  013512  C063  F06B         	movff	spi_tx_rx@command_length+1,??_spi_tx_rx+3
 37554  013516  5168               	movf	??_spi_tx_rx& (0+255),w,b
 37555  013518  276A               	addwf	(??_spi_tx_rx+2)& (0+255),f,b
 37556  01351A  5169               	movf	(??_spi_tx_rx+1)& (0+255),w,b
 37557  01351C  236B               	addwfc	(??_spi_tx_rx+3)& (0+255),f,b
 37558  01351E  C06B  F06A         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 37559  013522  6B6B               	clrf	(??_spi_tx_rx+3)& (0+255),b
 37560  013524  516A               	movf	(??_spi_tx_rx+2)& (0+255),w,b
 37561  013526  6E66               	movwf	3942,c	;volatile
 37562                           
 37563                           ; BSR set to: 0
 37564                           ;spi.c: 224: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 37565  013528  0562               	decf	spi_tx_rx@command_length& (0+255),w,b
 37566  01352A  6E67               	movwf	3943,c	;volatile
 37567                           
 37568                           ; BSR set to: 0
 37569                           ;spi.c: 227: LATDbits.LD7 = 0;
 37570  01352C  9E8C               	bcf	3980,7,c	;volatile
 37571                           
 37572                           ; BSR set to: 0
 37573                           ;spi.c: 230: DMACON1bits.DMAEN = 1;
 37574  01352E  8088               	bsf	3976,0,c	;volatile
 37575  013530                     
 37576                           ; BSR set to: 0
 37577  013530  B088               	btfsc	3976,0,c	;volatile
 37578  013532  D7FE               	goto	l2187
 37579                           
 37580                           ;spi.c: 234: DMACON1bits.TXINC = 0;
 37581  013534  9A88               	bcf	3976,5,c	;volatile
 37582                           
 37583                           ;spi.c: 236: DMACON1bits.RXINC = 1;
 37584  013536  8888               	bsf	3976,4,c	;volatile
 37585                           
 37586                           ;spi.c: 238: DMACON1bits.DUPLEX1 = 0;
 37587  013538  9688               	bcf	3976,3,c	;volatile
 37588                           
 37589                           ;spi.c: 239: DMACON1bits.DUPLEX0 = 0;
 37590  01353A  9488               	bcf	3976,2,c	;volatile
 37591                           
 37592                           ;spi.c: 242: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 37593  01353C  0100               	movlb	0	; () banked
 37594  01353E  5165               	movf	(spi_tx_rx@data+1)& (0+255),w,b
 37595  013540  6E68               	movwf	3944,c	;volatile
 37596                           
 37597                           ; BSR set to: 0
 37598                           ;spi.c: 243: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 37599  013542  C064  FF69         	movff	spi_tx_rx@data,3945	;volatile
 37600                           
 37601                           ; BSR set to: 0
 37602                           ;spi.c: 246: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 37603  013546  0EFF               	movlw	255
 37604  013548  6F68               	movwf	??_spi_tx_rx& (0+255),b
 37605  01354A  0EFF               	movlw	255
 37606  01354C  6F69               	movwf	(??_spi_tx_rx+1)& (0+255),b
 37607  01354E  C066  F06A         	movff	spi_tx_rx@data_length,??_spi_tx_rx+2
 37608  013552  C067  F06B         	movff	spi_tx_rx@data_length+1,??_spi_tx_rx+3
 37609  013556  5168               	movf	??_spi_tx_rx& (0+255),w,b
 37610  013558  276A               	addwf	(??_spi_tx_rx+2)& (0+255),f,b
 37611  01355A  5169               	movf	(??_spi_tx_rx+1)& (0+255),w,b
 37612  01355C  236B               	addwfc	(??_spi_tx_rx+3)& (0+255),f,b
 37613  01355E  C06B  F06A         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 37614  013562  6B6B               	clrf	(??_spi_tx_rx+3)& (0+255),b
 37615  013564  516A               	movf	(??_spi_tx_rx+2)& (0+255),w,b
 37616  013566  6E66               	movwf	3942,c	;volatile
 37617                           
 37618                           ; BSR set to: 0
 37619                           ;spi.c: 247: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 37620  013568  0566               	decf	spi_tx_rx@data_length& (0+255),w,b
 37621  01356A  6E67               	movwf	3943,c	;volatile
 37622                           
 37623                           ; BSR set to: 0
 37624                           ;spi.c: 250: DMACON1bits.DMAEN = 1;
 37625  01356C  8088               	bsf	3976,0,c	;volatile
 37626  01356E                     
 37627                           ; BSR set to: 0
 37628  01356E  B088               	btfsc	3976,0,c	;volatile
 37629  013570  D7FE               	goto	l2190
 37630                           
 37631                           ;spi.c: 254: LATDbits.LD7 = 1;
 37632  013572  8E8C               	bsf	3980,7,c	;volatile
 37633  013574  0012               	return		;funcret
 37634  013576                     __end_of_spi_tx_rx:
 37635                           	opt stack 0
 37636                           tosu	equ	0xFFF
 37637                           tosh	equ	0xFFE
 37638                           tosl	equ	0xFFD
 37639                           pclath	equ	0xFFA
 37640                           tblptru	equ	0xFF8
 37641                           tblptrh	equ	0xFF7
 37642                           tblptrl	equ	0xFF6
 37643                           tablat	equ	0xFF5
 37644                           prodh	equ	0xFF4
 37645                           prodl	equ	0xFF3
 37646                           intcon	equ	0xFF2
 37647                           postinc0	equ	0xFEE
 37648                           wreg	equ	0xFE8
 37649                           indf1	equ	0xFE7
 37650                           postinc1	equ	0xFE6
 37651                           postdec1	equ	0xFE5
 37652                           plusw1	equ	0xFE3
 37653                           fsr1h	equ	0xFE2
 37654                           fsr1l	equ	0xFE1
 37655                           indf2	equ	0xFDF
 37656                           postinc2	equ	0xFDE
 37657                           postdec2	equ	0xFDD
 37658                           plusw2	equ	0xFDB
 37659                           fsr2h	equ	0xFDA
 37660                           fsr2l	equ	0xFD9
 37661                           status	equ	0xFD8
 37662                           
 37663 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 37664 ;; Defined at:
 37665 ;;		line 993 in file "usb_device_msd.c"
 37666 ;; Parameters:    Size  Location     Type
 37667 ;;  DiExpected      2    0[BANK0 ] unsigned int 
 37668 ;; Auto vars:     Size  Location     Type
 37669 ;;		None
 37670 ;; Return value:  Size  Location     Type
 37671 ;;                  1    wreg      void 
 37672 ;; Registers used:
 37673 ;;		wreg, status,2, status,0
 37674 ;; Tracked objects:
 37675 ;;		On entry : 0/0
 37676 ;;		On exit  : 0/0
 37677 ;;		Unchanged: 0/0
 37678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37679 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37681 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37682 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37683 ;;Total ram usage:        6 bytes
 37684 ;; Hardware stack levels used:    1
 37685 ;; Hardware stack levels required when called:   10
 37686 ;; This function calls:
 37687 ;;		Nothing
 37688 ;; This function is called by:
 37689 ;;		_MSDProcessCommandMediaPresent
 37690 ;; This function uses a non-reentrant model
 37691 ;;
 37692                           
 37693                           	psect	text152
 37694  012A1C                     __ptext152:
 37695                           	opt stack 0
 37696  012A1C                     _MSDComputeDeviceInAndResidue:
 37697                           	opt stack 16
 37698                           
 37699                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 37700                           
 37701                           ;incstack = 0
 37702  012A1C  0100               	movlb	0	; () banked
 37703  012A1E  5160               	movf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 37704  012A20  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 37705  012A22  5161               	movf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 37706  012A24  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 37707  012A26  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 37708  012A28  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 37709  012A2A  5162               	movf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 37710  012A2C  0102               	movlb	2	; () banked
 37711  012A2E  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 37712  012A30  0100               	movlb	0	; () banked
 37713  012A32  5163               	movf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 37714  012A34  0102               	movlb	2	; () banked
 37715  012A36  5909               	subwfb	(_gblCBW+9)& (0+255),w,b
 37716  012A38  0100               	movlb	0	; () banked
 37717  012A3A  5164               	movf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 37718  012A3C  0102               	movlb	2	; () banked
 37719  012A3E  590A               	subwfb	(_gblCBW+10)& (0+255),w,b
 37720  012A40  0100               	movlb	0	; () banked
 37721  012A42  5165               	movf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 37722  012A44  0102               	movlb	2	; () banked
 37723  012A46  590B               	subwfb	(_gblCBW+11)& (0+255),w,b
 37724  012A48  B0D8               	btfsc	status,0,c
 37725  012A4A  D00E               	goto	l675
 37726                           
 37727                           ; BSR set to: 2
 37728                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 37729  012A4C  0E00               	movlw	0
 37730  012A4E  010D               	movlb	13	; () banked
 37731  012A50  6F88               	movwf	136,b	;volatile
 37732  012A52  0E00               	movlw	0
 37733  012A54  6F89               	movwf	137,b	;volatile
 37734  012A56  0E00               	movlw	0
 37735  012A58  6F8A               	movwf	138,b	;volatile
 37736  012A5A  0E00               	movlw	0
 37737  012A5C  6F8B               	movwf	139,b	;volatile
 37738                           
 37739                           ; BSR set to: 13
 37740                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 37741  012A5E  C208  F145         	movff	_gblCBW+8,_TransferLength
 37742  012A62  C209  F146         	movff	_gblCBW+9,_TransferLength+1
 37743                           
 37744                           ;usb_device_msd.c: 1002: }
 37745  012A66  0012               	return	
 37746  012A68                     l675:
 37747                           
 37748                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 37749                           
 37750                           ; BSR set to: 13
 37751  012A68  0101               	movlb	1	; () banked
 37752  012A6A  5145               	movf	_TransferLength& (0+255),w,b
 37753  012A6C  0100               	movlb	0	; () banked
 37754  012A6E  5D60               	subwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 37755  012A70  0101               	movlb	1	; () banked
 37756  012A72  5146               	movf	(_TransferLength+1)& (0+255),w,b
 37757  012A74  0100               	movlb	0	; () banked
 37758  012A76  5961               	subwfb	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 37759  012A78  B0D8               	btfsc	status,0,c
 37760  012A7A  D004               	goto	l677
 37761                           
 37762                           ; BSR set to: 0
 37763                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 37764  012A7C  C060  F145         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 37765  012A80  C061  F146         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 37766  012A84                     l677:
 37767                           
 37768                           ; BSR set to: 0
 37769                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 37770                           
 37771                           ; BSR set to: 0
 37772  012A84  0101               	movlb	1	; () banked
 37773  012A86  5145               	movf	_TransferLength& (0+255),w,b
 37774  012A88  0100               	movlb	0	; () banked
 37775  012A8A  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 37776  012A8C  0101               	movlb	1	; () banked
 37777  012A8E  5146               	movf	(_TransferLength+1)& (0+255),w,b
 37778  012A90  0100               	movlb	0	; () banked
 37779  012A92  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 37780  012A94  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 37781  012A96  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 37782  012A98  1F62               	comf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 37783  012A9A  1F63               	comf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 37784  012A9C  1F64               	comf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 37785  012A9E  1F65               	comf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 37786  012AA0  2B62               	incf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 37787  012AA2  0E00               	movlw	0
 37788  012AA4  2363               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 37789  012AA6  2364               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 37790  012AA8  2365               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 37791  012AAA  0102               	movlb	2	; () banked
 37792  012AAC  5108               	movf	(_gblCBW+8)& (0+255),w,b
 37793  012AAE  0100               	movlb	0	; () banked
 37794  012AB0  2562               	addwf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 37795  012AB2  010D               	movlb	13	; () banked
 37796  012AB4  6F88               	movwf	136,b	;volatile
 37797  012AB6  0102               	movlb	2	; () banked
 37798  012AB8  5109               	movf	(_gblCBW+9)& (0+255),w,b
 37799  012ABA  0100               	movlb	0	; () banked
 37800  012ABC  2163               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 37801  012ABE  010D               	movlb	13	; () banked
 37802  012AC0  6F89               	movwf	137,b	;volatile
 37803  012AC2  0102               	movlb	2	; () banked
 37804  012AC4  510A               	movf	(_gblCBW+10)& (0+255),w,b
 37805  012AC6  0100               	movlb	0	; () banked
 37806  012AC8  2164               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 37807  012ACA  010D               	movlb	13	; () banked
 37808  012ACC  6F8A               	movwf	138,b	;volatile
 37809  012ACE  0102               	movlb	2	; () banked
 37810  012AD0  510B               	movf	(_gblCBW+11)& (0+255),w,b
 37811  012AD2  0100               	movlb	0	; () banked
 37812  012AD4  2165               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 37813  012AD6  010D               	movlb	13	; () banked
 37814  012AD8  6F8B               	movwf	139,b	;volatile
 37815  012ADA  0012               	return	
 37816  012ADC                     __end_of_MSDComputeDeviceInAndResidue:
 37817                           	opt stack 0
 37818                           tosu	equ	0xFFF
 37819                           tosh	equ	0xFFE
 37820                           tosl	equ	0xFFD
 37821                           pclath	equ	0xFFA
 37822                           tblptru	equ	0xFF8
 37823                           tblptrh	equ	0xFF7
 37824                           tblptrl	equ	0xFF6
 37825                           tablat	equ	0xFF5
 37826                           prodh	equ	0xFF4
 37827                           prodl	equ	0xFF3
 37828                           intcon	equ	0xFF2
 37829                           postinc0	equ	0xFEE
 37830                           wreg	equ	0xFE8
 37831                           indf1	equ	0xFE7
 37832                           postinc1	equ	0xFE6
 37833                           postdec1	equ	0xFE5
 37834                           plusw1	equ	0xFE3
 37835                           fsr1h	equ	0xFE2
 37836                           fsr1l	equ	0xFE1
 37837                           indf2	equ	0xFDF
 37838                           postinc2	equ	0xFDE
 37839                           postdec2	equ	0xFDD
 37840                           plusw2	equ	0xFDB
 37841                           fsr2h	equ	0xFDA
 37842                           fsr2l	equ	0xFD9
 37843                           status	equ	0xFD8
 37844                           
 37845 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 37846 ;; Defined at:
 37847 ;;		line 18 in file "external_flash.c"
 37848 ;; Parameters:    Size  Location     Type
 37849 ;;  config          2    0[BANK0 ] PTR void 
 37850 ;;		 -> NULL(0), 
 37851 ;; Auto vars:     Size  Location     Type
 37852 ;;		None
 37853 ;; Return value:  Size  Location     Type
 37854 ;;                  2    0[BANK0 ] unsigned int 
 37855 ;; Registers used:
 37856 ;;		wreg, status,2
 37857 ;; Tracked objects:
 37858 ;;		On entry : 0/0
 37859 ;;		On exit  : 0/0
 37860 ;;		Unchanged: 0/0
 37861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37862 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37865 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37866 ;;Total ram usage:        2 bytes
 37867 ;; Hardware stack levels used:    1
 37868 ;; Hardware stack levels required when called:   10
 37869 ;; This function calls:
 37870 ;;		Nothing
 37871 ;; This function is called by:
 37872 ;;		_MSDProcessCommandMediaPresent
 37873 ;; This function uses a non-reentrant model
 37874 ;;
 37875                           
 37876                           	psect	text153
 37877  015946                     __ptext153:
 37878                           	opt stack 0
 37879  015946                     _ExternalFlash_SectorSizeRead:
 37880                           	opt stack 16
 37881                           
 37882                           ;external_flash.c: 20: return 512;
 37883                           
 37884                           ; BSR set to: 13
 37885                           ;incstack = 0
 37886  015946  0E02               	movlw	2
 37887  015948  0100               	movlb	0	; () banked
 37888  01594A  6F61               	movwf	(?_ExternalFlash_SectorSizeRead+1)& (0+255),b
 37889  01594C  0E00               	movlw	0
 37890  01594E  6F60               	movwf	?_ExternalFlash_SectorSizeRead& (0+255),b
 37891  015950  0012               	return	
 37892  015952                     __end_of_ExternalFlash_SectorSizeRead:
 37893                           	opt stack 0
 37894                           tosu	equ	0xFFF
 37895                           tosh	equ	0xFFE
 37896                           tosl	equ	0xFFD
 37897                           pclath	equ	0xFFA
 37898                           tblptru	equ	0xFF8
 37899                           tblptrh	equ	0xFF7
 37900                           tblptrl	equ	0xFF6
 37901                           tablat	equ	0xFF5
 37902                           prodh	equ	0xFF4
 37903                           prodl	equ	0xFF3
 37904                           intcon	equ	0xFF2
 37905                           postinc0	equ	0xFEE
 37906                           wreg	equ	0xFE8
 37907                           indf1	equ	0xFE7
 37908                           postinc1	equ	0xFE6
 37909                           postdec1	equ	0xFE5
 37910                           plusw1	equ	0xFE3
 37911                           fsr1h	equ	0xFE2
 37912                           fsr1l	equ	0xFE1
 37913                           indf2	equ	0xFDF
 37914                           postinc2	equ	0xFDE
 37915                           postdec2	equ	0xFDD
 37916                           plusw2	equ	0xFDB
 37917                           fsr2h	equ	0xFDA
 37918                           fsr2l	equ	0xFD9
 37919                           status	equ	0xFD8
 37920                           
 37921 ;; *************** function _ExternalFlash_CapacityRead *****************
 37922 ;; Defined at:
 37923 ;;		line 23 in file "external_flash.c"
 37924 ;; Parameters:    Size  Location     Type
 37925 ;;  config          2    0[BANK0 ] PTR void 
 37926 ;;		 -> NULL(0), 
 37927 ;; Auto vars:     Size  Location     Type
 37928 ;;		None
 37929 ;; Return value:  Size  Location     Type
 37930 ;;                  4    0[BANK0 ] unsigned long 
 37931 ;; Registers used:
 37932 ;;		wreg, status,2
 37933 ;; Tracked objects:
 37934 ;;		On entry : 0/0
 37935 ;;		On exit  : 0/0
 37936 ;;		Unchanged: 0/0
 37937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37938 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37941 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37942 ;;Total ram usage:        4 bytes
 37943 ;; Hardware stack levels used:    1
 37944 ;; Hardware stack levels required when called:   10
 37945 ;; This function calls:
 37946 ;;		Nothing
 37947 ;; This function is called by:
 37948 ;;		_MSDProcessCommandMediaPresent
 37949 ;; This function uses a non-reentrant model
 37950 ;;
 37951                           
 37952                           	psect	text154
 37953  0158CA                     __ptext154:
 37954                           	opt stack 0
 37955  0158CA                     _ExternalFlash_CapacityRead:
 37956                           	opt stack 16
 37957                           
 37958                           ;external_flash.c: 26: return ((uint32_t) 8192 - 1);
 37959                           
 37960                           ; BSR set to: 0
 37961                           ;incstack = 0
 37962  0158CA  0EFF               	movlw	255
 37963  0158CC  0100               	movlb	0	; () banked
 37964  0158CE  6F60               	movwf	?_ExternalFlash_CapacityRead& (0+255),b
 37965  0158D0  0E1F               	movlw	31
 37966  0158D2  6F61               	movwf	(?_ExternalFlash_CapacityRead+1)& (0+255),b
 37967  0158D4  0E00               	movlw	0
 37968  0158D6  6F62               	movwf	(?_ExternalFlash_CapacityRead+2)& (0+255),b
 37969  0158D8  0E00               	movlw	0
 37970  0158DA  6F63               	movwf	(?_ExternalFlash_CapacityRead+3)& (0+255),b
 37971  0158DC  0012               	return	
 37972  0158DE                     __end_of_ExternalFlash_CapacityRead:
 37973                           	opt stack 0
 37974                           tosu	equ	0xFFF
 37975                           tosh	equ	0xFFE
 37976                           tosl	equ	0xFFD
 37977                           pclath	equ	0xFFA
 37978                           tblptru	equ	0xFF8
 37979                           tblptrh	equ	0xFF7
 37980                           tblptrl	equ	0xFF6
 37981                           tablat	equ	0xFF5
 37982                           prodh	equ	0xFF4
 37983                           prodl	equ	0xFF3
 37984                           intcon	equ	0xFF2
 37985                           postinc0	equ	0xFEE
 37986                           wreg	equ	0xFE8
 37987                           indf1	equ	0xFE7
 37988                           postinc1	equ	0xFE6
 37989                           postdec1	equ	0xFE5
 37990                           plusw1	equ	0xFE3
 37991                           fsr1h	equ	0xFE2
 37992                           fsr1l	equ	0xFE1
 37993                           indf2	equ	0xFDF
 37994                           postinc2	equ	0xFDE
 37995                           postdec2	equ	0xFDD
 37996                           plusw2	equ	0xFDB
 37997                           fsr2h	equ	0xFDA
 37998                           fsr2l	equ	0xFD9
 37999                           status	equ	0xFD8
 38000                           
 38001 ;; *************** function _ExternalFlash_MediaInitialize *****************
 38002 ;; Defined at:
 38003 ;;		line 10 in file "external_flash.c"
 38004 ;; Parameters:    Size  Location     Type
 38005 ;;  config          2    0[BANK0 ] PTR void 
 38006 ;;		 -> NULL(0), 
 38007 ;; Auto vars:     Size  Location     Type
 38008 ;;		None
 38009 ;; Return value:  Size  Location     Type
 38010 ;;                  2    0[BANK0 ] PTR struct .
 38011 ;; Registers used:
 38012 ;;		wreg, status,2, status,0
 38013 ;; Tracked objects:
 38014 ;;		On entry : 0/0
 38015 ;;		On exit  : 0/0
 38016 ;;		Unchanged: 0/0
 38017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38018 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38021 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38022 ;;Total ram usage:        2 bytes
 38023 ;; Hardware stack levels used:    1
 38024 ;; Hardware stack levels required when called:   10
 38025 ;; This function calls:
 38026 ;;		Nothing
 38027 ;; This function is called by:
 38028 ;;		_USBMSDInit
 38029 ;;		_MSDProcessCommand
 38030 ;; This function uses a non-reentrant model
 38031 ;;
 38032                           
 38033                           	psect	text155
 38034  01579E                     __ptext155:
 38035                           	opt stack 0
 38036  01579E                     _ExternalFlash_MediaInitialize:
 38037                           	opt stack 0
 38038                           
 38039                           ; BSR set to: 0
 38040                           ;Skip over the trampoline to the duplicate function for level 2
 38041  01579E  B25F               	btfsc	btemp,1,c
 38042  0157A0  EF41  F0AC         	goto	i2_ExternalFlash_MediaInitialize
 38043  0157A4                     _ExternalFlash_MediaInitialize$intlevel0:
 38044                           	opt stack 17
 38045                           
 38046                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 38047                           
 38048                           ;incstack = 0
 38049  0157A4  0102               	movlb	2	; () banked
 38050  0157A6  8185               	bsf	(_mediaInformation+1)& (0+255),0,b
 38051                           
 38052                           ; BSR set to: 2
 38053                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 38054  0157A8  0E02               	movlw	2
 38055  0157AA  6F87               	movwf	(_mediaInformation+3)& (0+255),b
 38056  0157AC  0E00               	movlw	0
 38057  0157AE  6F86               	movwf	(_mediaInformation+2)& (0+255),b
 38058                           
 38059                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 38060  0157B0  0E00               	movlw	0
 38061  0157B2  6F84               	movwf	_mediaInformation& (0+255),b
 38062                           
 38063                           ; BSR set to: 2
 38064                           ;external_flash.c: 15: return &mediaInformation;
 38065  0157B4  0E84               	movlw	low _mediaInformation
 38066  0157B6  0100               	movlb	0	; () banked
 38067  0157B8  6F60               	movwf	?_ExternalFlash_MediaInitialize& (0+255),b
 38068  0157BA  0E02               	movlw	high _mediaInformation
 38069  0157BC  6F61               	movwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),b
 38070  0157BE  0012               	return	
 38071  0157C0                     __end_of_ExternalFlash_MediaInitialize:
 38072                           	opt stack 0
 38073                           tosu	equ	0xFFF
 38074                           tosh	equ	0xFFE
 38075                           tosl	equ	0xFFD
 38076                           pclath	equ	0xFFA
 38077                           tblptru	equ	0xFF8
 38078                           tblptrh	equ	0xFF7
 38079                           tblptrl	equ	0xFF6
 38080                           tablat	equ	0xFF5
 38081                           prodh	equ	0xFF4
 38082                           prodl	equ	0xFF3
 38083                           intcon	equ	0xFF2
 38084                           postinc0	equ	0xFEE
 38085                           wreg	equ	0xFE8
 38086                           indf1	equ	0xFE7
 38087                           postinc1	equ	0xFE6
 38088                           postdec1	equ	0xFE5
 38089                           plusw1	equ	0xFE3
 38090                           fsr1h	equ	0xFE2
 38091                           fsr1l	equ	0xFE1
 38092                           indf2	equ	0xFDF
 38093                           postinc2	equ	0xFDE
 38094                           postdec2	equ	0xFDD
 38095                           plusw2	equ	0xFDB
 38096                           fsr2h	equ	0xFDA
 38097                           fsr2l	equ	0xFD9
 38098                           status	equ	0xFD8
 38099                           
 38100 ;; *************** function _ExternalFlash_MediaDetect *****************
 38101 ;; Defined at:
 38102 ;;		line 29 in file "external_flash.c"
 38103 ;; Parameters:    Size  Location     Type
 38104 ;;  config          2    0[BANK0 ] PTR void 
 38105 ;;		 -> NULL(0), 
 38106 ;; Auto vars:     Size  Location     Type
 38107 ;;		None
 38108 ;; Return value:  Size  Location     Type
 38109 ;;                  1    wreg      unsigned char 
 38110 ;; Registers used:
 38111 ;;		wreg
 38112 ;; Tracked objects:
 38113 ;;		On entry : 0/0
 38114 ;;		On exit  : 0/0
 38115 ;;		Unchanged: 0/0
 38116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38117 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38120 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38121 ;;Total ram usage:        2 bytes
 38122 ;; Hardware stack levels used:    1
 38123 ;; Hardware stack levels required when called:   10
 38124 ;; This function calls:
 38125 ;;		Nothing
 38126 ;; This function is called by:
 38127 ;;		_USBMSDInit
 38128 ;;		_MSDProcessCommand
 38129 ;; This function uses a non-reentrant model
 38130 ;;
 38131                           
 38132                           	psect	text156
 38133  015986                     __ptext156:
 38134                           	opt stack 0
 38135  015986                     _ExternalFlash_MediaDetect:
 38136                           	opt stack 0
 38137                           
 38138                           ; BSR set to: 0
 38139                           ;Skip over the trampoline to the duplicate function for level 2
 38140  015986  B25F               	btfsc	btemp,1,c
 38141  015988  EFE8  F0AC         	goto	i2_ExternalFlash_MediaDetect
 38142  01598C                     _ExternalFlash_MediaDetect$intlevel0:
 38143                           	opt stack 17
 38144                           
 38145                           ;external_flash.c: 31: return 1;
 38146                           
 38147                           ;incstack = 0
 38148  01598C  0E01               	movlw	1
 38149  01598E  0012               	return	
 38150  015990                     __end_of_ExternalFlash_MediaDetect:
 38151                           	opt stack 0
 38152                           tosu	equ	0xFFF
 38153                           tosh	equ	0xFFE
 38154                           tosl	equ	0xFFD
 38155                           pclath	equ	0xFFA
 38156                           tblptru	equ	0xFF8
 38157                           tblptrh	equ	0xFF7
 38158                           tblptrl	equ	0xFF6
 38159                           tablat	equ	0xFF5
 38160                           prodh	equ	0xFF4
 38161                           prodl	equ	0xFF3
 38162                           intcon	equ	0xFF2
 38163                           postinc0	equ	0xFEE
 38164                           wreg	equ	0xFE8
 38165                           indf1	equ	0xFE7
 38166                           postinc1	equ	0xFE6
 38167                           postdec1	equ	0xFE5
 38168                           plusw1	equ	0xFE3
 38169                           fsr1h	equ	0xFE2
 38170                           fsr1l	equ	0xFE1
 38171                           indf2	equ	0xFDF
 38172                           postinc2	equ	0xFDE
 38173                           postdec2	equ	0xFDD
 38174                           plusw2	equ	0xFDB
 38175                           fsr2h	equ	0xFDA
 38176                           fsr2l	equ	0xFD9
 38177                           status	equ	0xFD8
 38178                           
 38179 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 38180 ;; Defined at:
 38181 ;;		line 73 in file "app_device_custom_hid.c"
 38182 ;; Parameters:    Size  Location     Type
 38183 ;;		None
 38184 ;; Auto vars:     Size  Location     Type
 38185 ;;  idx             1    0        unsigned char 
 38186 ;; Return value:  Size  Location     Type
 38187 ;;                  1    wreg      void 
 38188 ;; Registers used:
 38189 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38190 ;; Tracked objects:
 38191 ;;		On entry : 0/0
 38192 ;;		On exit  : 0/0
 38193 ;;		Unchanged: 0/0
 38194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38199 ;;Total ram usage:        0 bytes
 38200 ;; Hardware stack levels used:    1
 38201 ;; Hardware stack levels required when called:   17
 38202 ;; This function calls:
 38203 ;;		_USBTransferOnePacket
 38204 ;;		_api_parse
 38205 ;;		_api_prepare
 38206 ;; This function is called by:
 38207 ;;		_main
 38208 ;; This function uses a non-reentrant model
 38209 ;;
 38210                           
 38211                           	psect	text157
 38212  0131BC                     __ptext157:
 38213                           	opt stack 0
 38214  0131BC                     _APP_DeviceCustomHIDTasks:
 38215                           	opt stack 13
 38216                           
 38217                           ;app_device_custom_hid.c: 75: uint8_t idx;;app_device_custom_hid.c: 80: if( USBDeviceSta
      +                          te < CONFIGURED_STATE )
 38218                           
 38219                           ;incstack = 0
 38220  0131BC  0E20               	movlw	32
 38221  0131BE  605E               	cpfslt	_USBDeviceState,c	;volatile
 38222  0131C0  D001               	goto	l944
 38223  0131C2  0012               	return	
 38224  0131C4                     l944:
 38225                           
 38226                           ;app_device_custom_hid.c: 83: };app_device_custom_hid.c: 89: if( UCONbits.SUSPND== 1 )
 38227  0131C4  B265               	btfsc	3941,1,c	;volatile
 38228  0131C6  0012               	return	
 38229                           
 38230                           ;app_device_custom_hid.c: 92: };app_device_custom_hid.c: 95: if(((USBOutHandle != 0x0000
      +                          ) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 38231                           
 38232                           ;app_device_custom_hid.c: 90: {;app_device_custom_hid.c: 91: return;
 38233  0131C8  0101               	movlb	1	; () banked
 38234  0131CA  5143               	movf	_USBOutHandle& (0+255),w,b
 38235  0131CC  1144               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 38236  0131CE  B4D8               	btfsc	status,2,c
 38237  0131D0  D006               	goto	u17150
 38238                           
 38239                           ; BSR set to: 1
 38240  0131D2  C143  FFD9         	movff	_USBOutHandle,fsr2l
 38241  0131D6  C144  FFDA         	movff	_USBOutHandle+1,fsr2h
 38242  0131DA  BEDF               	btfsc	indf2,7,c
 38243  0131DC  0012               	return	
 38244  0131DE                     u17150:
 38245                           
 38246                           ; BSR set to: 1
 38247                           ;app_device_custom_hid.c: 96: {;app_device_custom_hid.c: 101: if(!((USBInHandle != 0x000
      +                          0) && ((*(volatile uint8_t*)USBInHandle & 0x80) != 0x00)))
 38248                           
 38249                           ; BSR set to: 1
 38250  0131DE  5141               	movf	_USBInHandle& (0+255),w,b
 38251  0131E0  1142               	iorwf	(_USBInHandle+1)& (0+255),w,b
 38252  0131E2  B4D8               	btfsc	status,2,c
 38253  0131E4  D006               	goto	u17170
 38254                           
 38255                           ; BSR set to: 1
 38256  0131E6  C141  FFD9         	movff	_USBInHandle,fsr2l
 38257  0131EA  C142  FFDA         	movff	_USBInHandle+1,fsr2h
 38258  0131EE  BEDF               	btfsc	indf2,7,c
 38259  0131F0  D01B               	goto	l950
 38260  0131F2                     u17170:
 38261                           
 38262                           ; BSR set to: 1
 38263                           ;app_device_custom_hid.c: 102: {;app_device_custom_hid.c: 104: api_prepare((uint8_t*) Re
      +                          ceivedDataBuffer, (uint8_t*) ToSendDataBuffer);
 38264                           
 38265                           ; BSR set to: 1
 38266  0131F2  0E78               	movlw	low _ReceivedDataBuffer
 38267  0131F4  0100               	movlb	0	; () banked
 38268  0131F6  6F70               	movwf	api_prepare@inBuffer& (0+255),b
 38269  0131F8  0E03               	movlw	high _ReceivedDataBuffer
 38270  0131FA  6F71               	movwf	(api_prepare@inBuffer+1)& (0+255),b
 38271  0131FC  0E38               	movlw	low _ToSendDataBuffer
 38272  0131FE  6F72               	movwf	api_prepare@outBuffer& (0+255),b
 38273  013200  0E03               	movlw	high _ToSendDataBuffer
 38274  013202  6F73               	movwf	(api_prepare@outBuffer+1)& (0+255),b
 38275  013204  ECAC  F08F         	call	_api_prepare	;wreg free
 38276                           
 38277                           ;app_device_custom_hid.c: 106: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 38278  013208  0E01               	movlw	1
 38279  01320A  0100               	movlb	0	; () banked
 38280  01320C  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 38281  01320E  0E38               	movlw	low _ToSendDataBuffer
 38282  013210  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 38283  013212  0E03               	movlw	high _ToSendDataBuffer
 38284  013214  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 38285  013216  0E40               	movlw	64
 38286  013218  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 38287  01321A  0E01               	movlw	1
 38288  01321C  EC07  F088         	call	_USBTransferOnePacket
 38289  013220  C060  F141         	movff	?_USBTransferOnePacket,_USBInHandle
 38290  013224  C061  F142         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 38291  013228                     l950:
 38292                           
 38293                           ;app_device_custom_hid.c: 107: };app_device_custom_hid.c: 110: api_parse(ReceivedDataBuf
      +                          fer, 64, ToSendDataBuffer);
 38294  013228  0E78               	movlw	low _ReceivedDataBuffer
 38295  01322A  0100               	movlb	0	; () banked
 38296  01322C  6FC4               	movwf	api_parse@inBuffer& (0+255),b
 38297  01322E  0E03               	movlw	high _ReceivedDataBuffer
 38298  013230  6FC5               	movwf	(api_parse@inBuffer+1)& (0+255),b
 38299  013232  0E40               	movlw	64
 38300  013234  6FC6               	movwf	api_parse@receivedDataLength& (0+255),b
 38301  013236  0E38               	movlw	low _ToSendDataBuffer
 38302  013238  6FC7               	movwf	api_parse@outBuffer& (0+255),b
 38303  01323A  0E03               	movlw	high _ToSendDataBuffer
 38304  01323C  6FC8               	movwf	(api_parse@outBuffer+1)& (0+255),b
 38305  01323E  EC40  F084         	call	_api_parse	;wreg free
 38306                           
 38307                           ;app_device_custom_hid.c: 114: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 38308  013242  0E00               	movlw	0
 38309  013244  0100               	movlb	0	; () banked
 38310  013246  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 38311  013248  0E78               	movlw	low _ReceivedDataBuffer
 38312  01324A  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 38313  01324C  0E03               	movlw	high _ReceivedDataBuffer
 38314  01324E  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 38315  013250  0E40               	movlw	64
 38316  013252  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 38317  013254  0E01               	movlw	1
 38318  013256  EC07  F088         	call	_USBTransferOnePacket
 38319  01325A  C060  F143         	movff	?_USBTransferOnePacket,_USBOutHandle
 38320  01325E  C061  F144         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 38321  013262  0012               	return	
 38322  013264                     __end_of_APP_DeviceCustomHIDTasks:
 38323                           	opt stack 0
 38324                           tosu	equ	0xFFF
 38325                           tosh	equ	0xFFE
 38326                           tosl	equ	0xFFD
 38327                           pclath	equ	0xFFA
 38328                           tblptru	equ	0xFF8
 38329                           tblptrh	equ	0xFF7
 38330                           tblptrl	equ	0xFF6
 38331                           tablat	equ	0xFF5
 38332                           prodh	equ	0xFF4
 38333                           prodl	equ	0xFF3
 38334                           intcon	equ	0xFF2
 38335                           postinc0	equ	0xFEE
 38336                           wreg	equ	0xFE8
 38337                           indf1	equ	0xFE7
 38338                           postinc1	equ	0xFE6
 38339                           postdec1	equ	0xFE5
 38340                           plusw1	equ	0xFE3
 38341                           fsr1h	equ	0xFE2
 38342                           fsr1l	equ	0xFE1
 38343                           indf2	equ	0xFDF
 38344                           postinc2	equ	0xFDE
 38345                           postdec2	equ	0xFDD
 38346                           plusw2	equ	0xFDB
 38347                           fsr2h	equ	0xFDA
 38348                           fsr2l	equ	0xFD9
 38349                           status	equ	0xFD8
 38350                           
 38351 ;; *************** function _api_prepare *****************
 38352 ;; Defined at:
 38353 ;;		line 37 in file "api.c"
 38354 ;; Parameters:    Size  Location     Type
 38355 ;;  inBuffer        2   16[BANK0 ] PTR unsigned char 
 38356 ;;		 -> ReceivedDataBuffer(64), 
 38357 ;;  outBuffer       2   18[BANK0 ] PTR unsigned char 
 38358 ;;		 -> ToSendDataBuffer(64), 
 38359 ;; Auto vars:     Size  Location     Type
 38360 ;;  command         1   20[BANK0 ] enum E6715
 38361 ;; Return value:  Size  Location     Type
 38362 ;;                  1    wreg      void 
 38363 ;; Registers used:
 38364 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38365 ;; Tracked objects:
 38366 ;;		On entry : 0/0
 38367 ;;		On exit  : 0/0
 38368 ;;		Unchanged: 0/0
 38369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38370 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38371 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38373 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38374 ;;Total ram usage:        5 bytes
 38375 ;; Hardware stack levels used:    1
 38376 ;; Hardware stack levels required when called:   12
 38377 ;; This function calls:
 38378 ;;		__fill_buffer_get_display
 38379 ;;		__fill_buffer_get_mode_details
 38380 ;;		__fill_buffer_get_status
 38381 ;;		_memcpy
 38382 ;; This function is called by:
 38383 ;;		_APP_DeviceCustomHIDTasks
 38384 ;; This function uses a non-reentrant model
 38385 ;;
 38386                           
 38387                           	psect	text158
 38388  011F58                     __ptext158:
 38389                           	opt stack 0
 38390  011F58                     _api_prepare:
 38391                           	opt stack 17
 38392                           
 38393                           ;api.c: 39: apiDataRequest_t command = (apiDataRequest_t) inBuffer[0];
 38394                           
 38395                           ;incstack = 0
 38396  011F58  C070  FFD9         	movff	api_prepare@inBuffer,fsr2l
 38397  011F5C  C071  FFDA         	movff	api_prepare@inBuffer+1,fsr2h
 38398  011F60  50DF               	movf	indf2,w,c
 38399  011F62  0100               	movlb	0	; () banked
 38400  011F64  6F74               	movwf	api_prepare@command& (0+255),b
 38401                           
 38402                           ; BSR set to: 0
 38403                           ;api.c: 41: if(command>0x7F)
 38404  011F66  0E7F               	movlw	127
 38405  011F68  6574               	cpfsgt	api_prepare@command& (0+255),b
 38406  011F6A  D051               	goto	l2234
 38407                           
 38408                           ; BSR set to: 0
 38409                           ;api.c: 48: outBuffer[0] = 0x99;
 38410                           
 38411                           ; BSR set to: 0
 38412                           
 38413                           ;api.c: 44: {;api.c: 47: default:
 38414                           
 38415                           ; BSR set to: 0
 38416                           ;api.c: 42: {;api.c: 43: switch(command)
 38417  011F6C  C072  FFD9         	movff	api_prepare@outBuffer,fsr2l
 38418  011F70  C073  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 38419  011F74  0E99               	movlw	153
 38420  011F76  6EDF               	movwf	indf2,c
 38421                           
 38422                           ; BSR set to: 0
 38423                           ;api.c: 49: outBuffer[1] = 0x99;
 38424  011F78  EE20 F001          	lfsr	2,1
 38425  011F7C  5172               	movf	api_prepare@outBuffer& (0+255),w,b
 38426  011F7E  26D9               	addwf	fsr2l,f,c
 38427  011F80  5173               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 38428  011F82  22DA               	addwfc	fsr2h,f,c
 38429  011F84  0E99               	movlw	153
 38430  011F86  6EDF               	movwf	indf2,c
 38431                           
 38432                           ;api.c: 50: }
 38433  011F88  0012               	return	
 38434  011F8A                     
 38435                           ; BSR set to: 0
 38436                           ;api.c: 63: _fill_buffer_get_status(outBuffer);
 38437                           
 38438                           ; BSR set to: 0
 38439  011F8A  C072  F06B         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 38440  011F8E  C073  F06C         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 38441  011F92  EC2A  F077         	call	__fill_buffer_get_status	;wreg free
 38442                           
 38443                           ;api.c: 64: break;
 38444  011F96  0012               	return	
 38445  011F98                     
 38446                           ;api.c: 68: _fill_buffer_get_display(outBuffer, 0);
 38447  011F98  C072  F064         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 38448  011F9C  C073  F065         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 38449  011FA0  0E00               	movlw	0
 38450  011FA2  0100               	movlb	0	; () banked
 38451  011FA4  6F66               	movwf	__fill_buffer_get_display@secondHalf& (0+255),b
 38452  011FA6  ECCC  F095         	call	__fill_buffer_get_display	;wreg free
 38453                           
 38454                           ;api.c: 69: break;
 38455  011FAA  0012               	return	
 38456  011FAC                     
 38457                           ;api.c: 73: _fill_buffer_get_display(outBuffer, 1);
 38458  011FAC  C072  F064         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 38459  011FB0  C073  F065         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 38460  011FB4  0E01               	movlw	1
 38461  011FB6  0100               	movlb	0	; () banked
 38462  011FB8  6F66               	movwf	__fill_buffer_get_display@secondHalf& (0+255),b
 38463  011FBA  ECCC  F095         	call	__fill_buffer_get_display	;wreg free
 38464                           
 38465                           ;api.c: 74: break;
 38466  011FBE  0012               	return	
 38467  011FC0                     
 38468                           ;api.c: 78: _fill_buffer_get_mode_details(outBuffer);
 38469  011FC0  C072  F060         	movff	api_prepare@outBuffer,__fill_buffer_get_mode_details@outBuffer
 38470  011FC4  C073  F061         	movff	api_prepare@outBuffer+1,__fill_buffer_get_mode_details@outBuffer+1
 38471  011FC8  EC06  F07A         	call	__fill_buffer_get_mode_details	;wreg free
 38472                           
 38473                           ;api.c: 79: break;
 38474  011FCC  0012               	return	
 38475  011FCE                     
 38476                           ;api.c: 83: memcpy(outBuffer, inBuffer, 64);
 38477  011FCE  C072  F060         	movff	api_prepare@outBuffer,memcpy@d1
 38478  011FD2  C073  F061         	movff	api_prepare@outBuffer+1,memcpy@d1+1
 38479  011FD6  C070  F062         	movff	api_prepare@inBuffer,memcpy@s1
 38480  011FDA  C071  F063         	movff	api_prepare@inBuffer+1,memcpy@s1+1
 38481  011FDE  0E00               	movlw	0
 38482  011FE0  0100               	movlb	0	; () banked
 38483  011FE2  6F65               	movwf	(memcpy@n+1)& (0+255),b
 38484  011FE4  0E40               	movlw	64
 38485  011FE6  6F64               	movwf	memcpy@n& (0+255),b
 38486  011FE8  EC05  F0A2         	call	_memcpy	;wreg free
 38487                           
 38488                           ;api.c: 84: break;
 38489  011FEC  0012               	return	
 38490  011FEE                     
 38491                           ;api.c: 87: outBuffer[0] = 0x99;
 38492  011FEE  C072  FFD9         	movff	api_prepare@outBuffer,fsr2l
 38493  011FF2  C073  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 38494  011FF6  0E99               	movlw	153
 38495  011FF8  6EDF               	movwf	indf2,c
 38496                           
 38497                           ;api.c: 88: outBuffer[1] = 0x99;
 38498  011FFA  0100               	movlb	0	; () banked
 38499  011FFC  EE20 F001          	lfsr	2,1
 38500  012000  5172               	movf	api_prepare@outBuffer& (0+255),w,b
 38501  012002  26D9               	addwf	fsr2l,f,c
 38502  012004  5173               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 38503  012006  22DA               	addwfc	fsr2h,f,c
 38504  012008  0E99               	movlw	153
 38505  01200A  6EDF               	movwf	indf2,c
 38506                           
 38507                           ;api.c: 89: }
 38508  01200C  0012               	return	
 38509  01200E                     l2234:
 38510                           
 38511                           ; BSR set to: 0
 38512                           
 38513                           ; BSR set to: 0
 38514  01200E  5174               	movf	api_prepare@command& (0+255),w,b
 38515                           
 38516                           ; Switch size 1, requested type "space"
 38517                           ; Number of cases is 6, Range of values is 0 to 32
 38518                           ; switch strategies available:
 38519                           ; Name         Instructions Cycles
 38520                           ; simple_byte           19    10 (average)
 38521                           ;	Chosen strategy is simple_byte
 38522  012010  0A00               	xorlw	0	; case 0
 38523  012012  B4D8               	btfsc	status,2,c
 38524  012014  0012               	return	
 38525  012016  0A10               	xorlw	16	; case 16
 38526  012018  B4D8               	btfsc	status,2,c
 38527  01201A  D7B7               	goto	l2237
 38528  01201C  0A01               	xorlw	1	; case 17
 38529  01201E  B4D8               	btfsc	status,2,c
 38530  012020  D7BB               	goto	l2238
 38531  012022  0A03               	xorlw	3	; case 18
 38532  012024  B4D8               	btfsc	status,2,c
 38533  012026  D7C2               	goto	l2239
 38534  012028  0A01               	xorlw	1	; case 19
 38535  01202A  B4D8               	btfsc	status,2,c
 38536  01202C  D7C9               	goto	l2240
 38537  01202E  0A33               	xorlw	51	; case 32
 38538  012030  B4D8               	btfsc	status,2,c
 38539  012032  D7CD               	goto	l2241
 38540  012034  D7DC               	goto	l2242
 38541  012036                     __end_of_api_prepare:
 38542                           	opt stack 0
 38543                           tosu	equ	0xFFF
 38544                           tosh	equ	0xFFE
 38545                           tosl	equ	0xFFD
 38546                           pclath	equ	0xFFA
 38547                           tblptru	equ	0xFF8
 38548                           tblptrh	equ	0xFF7
 38549                           tblptrl	equ	0xFF6
 38550                           tablat	equ	0xFF5
 38551                           prodh	equ	0xFF4
 38552                           prodl	equ	0xFF3
 38553                           intcon	equ	0xFF2
 38554                           postinc0	equ	0xFEE
 38555                           wreg	equ	0xFE8
 38556                           indf1	equ	0xFE7
 38557                           postinc1	equ	0xFE6
 38558                           postdec1	equ	0xFE5
 38559                           plusw1	equ	0xFE3
 38560                           fsr1h	equ	0xFE2
 38561                           fsr1l	equ	0xFE1
 38562                           indf2	equ	0xFDF
 38563                           postinc2	equ	0xFDE
 38564                           postdec2	equ	0xFDD
 38565                           plusw2	equ	0xFDB
 38566                           fsr2h	equ	0xFDA
 38567                           fsr2l	equ	0xFD9
 38568                           status	equ	0xFD8
 38569                           
 38570 ;; *************** function __fill_buffer_get_status *****************
 38571 ;; Defined at:
 38572 ;;		line 170 in file "api.c"
 38573 ;; Parameters:    Size  Location     Type
 38574 ;;  outBuffer       2   11[BANK0 ] PTR unsigned char 
 38575 ;;		 -> ToSendDataBuffer(64), 
 38576 ;; Auto vars:     Size  Location     Type
 38577 ;;		None
 38578 ;; Return value:  Size  Location     Type
 38579 ;;                  1    wreg      void 
 38580 ;; Registers used:
 38581 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 38582 ;; Tracked objects:
 38583 ;;		On entry : 0/0
 38584 ;;		On exit  : 0/0
 38585 ;;		Unchanged: 0/0
 38586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38587 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38590 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38591 ;;Total ram usage:        2 bytes
 38592 ;; Hardware stack levels used:    1
 38593 ;; Hardware stack levels required when called:   11
 38594 ;; This function calls:
 38595 ;;		_memcpy
 38596 ;; This function is called by:
 38597 ;;		_api_prepare
 38598 ;; This function uses a non-reentrant model
 38599 ;;
 38600                           
 38601                           	psect	text159
 38602  00EE54                     __ptext159:
 38603                           	opt stack 0
 38604  00EE54                     __fill_buffer_get_status:
 38605                           	opt stack 17
 38606                           
 38607                           ;api.c: 173: outBuffer[0] = DATAREQUEST_GET_STATUS;
 38608                           
 38609                           ;incstack = 0
 38610  00EE54  C06B  FFD9         	movff	__fill_buffer_get_status@outBuffer,fsr2l
 38611  00EE58  C06C  FFDA         	movff	__fill_buffer_get_status@outBuffer+1,fsr2h
 38612  00EE5C  0E10               	movlw	16
 38613  00EE5E  6EDF               	movwf	indf2,c
 38614                           
 38615                           ;api.c: 176: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 38616  00EE60  0100               	movlb	0	; () banked
 38617  00EE62  EE20 F001          	lfsr	2,1
 38618  00EE66  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38619  00EE68  26D9               	addwf	fsr2l,f,c
 38620  00EE6A  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38621  00EE6C  22DA               	addwfc	fsr2h,f,c
 38622  00EE6E  0EBC               	movlw	188
 38623  00EE70  6EDF               	movwf	indf2,c
 38624                           
 38625                           ; BSR set to: 0
 38626                           ;api.c: 177: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 38627  00EE72  EE20 F002          	lfsr	2,2
 38628  00EE76  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38629  00EE78  26D9               	addwf	fsr2l,f,c
 38630  00EE7A  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38631  00EE7C  22DA               	addwfc	fsr2h,f,c
 38632  00EE7E  0E26               	movlw	38
 38633  00EE80  6EDF               	movwf	indf2,c
 38634                           
 38635                           ; BSR set to: 0
 38636                           ;api.c: 180: outBuffer[3] = 0x00;
 38637  00EE82  EE20 F003          	lfsr	2,3
 38638  00EE86  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38639  00EE88  26D9               	addwf	fsr2l,f,c
 38640  00EE8A  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38641  00EE8C  22DA               	addwfc	fsr2h,f,c
 38642  00EE8E  0E00               	movlw	0
 38643  00EE90  6EDF               	movwf	indf2,c
 38644                           
 38645                           ; BSR set to: 0
 38646                           ;api.c: 181: outBuffer[4] = 0x05;
 38647  00EE92  EE20 F004          	lfsr	2,4
 38648  00EE96  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38649  00EE98  26D9               	addwf	fsr2l,f,c
 38650  00EE9A  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38651  00EE9C  22DA               	addwfc	fsr2h,f,c
 38652  00EE9E  0E05               	movlw	5
 38653  00EEA0  6EDF               	movwf	indf2,c
 38654                           
 38655                           ; BSR set to: 0
 38656                           ;api.c: 182: outBuffer[5] = 0x04;
 38657  00EEA2  EE20 F005          	lfsr	2,5
 38658  00EEA6  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38659  00EEA8  26D9               	addwf	fsr2l,f,c
 38660  00EEAA  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38661  00EEAC  22DA               	addwfc	fsr2h,f,c
 38662  00EEAE  0E04               	movlw	4
 38663  00EEB0  6EDF               	movwf	indf2,c
 38664                           
 38665                           ; BSR set to: 0
 38666                           ;api.c: 185: outBuffer[6] = os.subTimeSlot;
 38667  00EEB2  EE20 F006          	lfsr	2,6
 38668  00EEB6  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38669  00EEB8  26D9               	addwf	fsr2l,f,c
 38670  00EEBA  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38671  00EEBC  22DA               	addwfc	fsr2h,f,c
 38672  00EEBE  C171  FFDF         	movff	_os,indf2	;volatile
 38673                           
 38674                           ; BSR set to: 0
 38675                           ;api.c: 186: outBuffer[7] = os.timeSlot;
 38676  00EEC2  EE20 F007          	lfsr	2,7
 38677  00EEC6  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38678  00EEC8  26D9               	addwf	fsr2l,f,c
 38679  00EECA  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38680  00EECC  22DA               	addwfc	fsr2h,f,c
 38681  00EECE  C172  FFDF         	movff	_os+1,indf2	;volatile
 38682                           
 38683                           ; BSR set to: 0
 38684                           ;api.c: 187: outBuffer[8] = os.done;
 38685  00EED2  EE20 F008          	lfsr	2,8
 38686  00EED6  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38687  00EED8  26D9               	addwf	fsr2l,f,c
 38688  00EEDA  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38689  00EEDC  22DA               	addwfc	fsr2h,f,c
 38690  00EEDE  C173  FFDF         	movff	_os+2,indf2	;volatile
 38691                           
 38692                           ; BSR set to: 0
 38693                           ;api.c: 188: outBuffer[9] = os.encoder1Count;
 38694  00EEE2  EE20 F009          	lfsr	2,9
 38695  00EEE6  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38696  00EEE8  26D9               	addwf	fsr2l,f,c
 38697  00EEEA  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38698  00EEEC  22DA               	addwfc	fsr2h,f,c
 38699  00EEEE  C174  FFDF         	movff	_os+3,indf2	;volatile
 38700                           
 38701                           ; BSR set to: 0
 38702                           ;api.c: 189: outBuffer[10] = os.button1;
 38703  00EEF2  EE20 F00A          	lfsr	2,10
 38704  00EEF6  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38705  00EEF8  26D9               	addwf	fsr2l,f,c
 38706  00EEFA  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38707  00EEFC  22DA               	addwfc	fsr2h,f,c
 38708  00EEFE  C175  FFDF         	movff	_os+4,indf2	;volatile
 38709                           
 38710                           ; BSR set to: 0
 38711                           ;api.c: 190: outBuffer[11] = os.encoder2Count;
 38712  00EF02  EE20 F00B          	lfsr	2,11
 38713  00EF06  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38714  00EF08  26D9               	addwf	fsr2l,f,c
 38715  00EF0A  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38716  00EF0C  22DA               	addwfc	fsr2h,f,c
 38717  00EF0E  C176  FFDF         	movff	_os+5,indf2	;volatile
 38718                           
 38719                           ; BSR set to: 0
 38720                           ;api.c: 191: outBuffer[12] = os.button2;
 38721  00EF12  EE20 F00C          	lfsr	2,12
 38722  00EF16  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38723  00EF18  26D9               	addwf	fsr2l,f,c
 38724  00EF1A  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38725  00EF1C  22DA               	addwfc	fsr2h,f,c
 38726  00EF1E  C177  FFDF         	movff	_os+6,indf2	;volatile
 38727                           
 38728                           ; BSR set to: 0
 38729                           ;api.c: 192: memcpy(&outBuffer[13], &os.current_position_in_steps, 4);
 38730  00EF22  0E0D               	movlw	13
 38731  00EF24  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38732  00EF26  6F60               	movwf	memcpy@d1& (0+255),b
 38733  00EF28  0E00               	movlw	0
 38734  00EF2A  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38735  00EF2C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 38736  00EF2E  0E78               	movlw	low (_os+7)
 38737  00EF30  6F62               	movwf	memcpy@s1& (0+255),b
 38738  00EF32  0E01               	movlw	high (_os+7)
 38739  00EF34  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 38740  00EF36  0E00               	movlw	0
 38741  00EF38  6F65               	movwf	(memcpy@n+1)& (0+255),b
 38742  00EF3A  0E04               	movlw	4
 38743  00EF3C  6F64               	movwf	memcpy@n& (0+255),b
 38744  00EF3E  EC05  F0A2         	call	_memcpy	;wreg free
 38745                           
 38746                           ;api.c: 197: memcpy(&outBuffer[17], &os.current_position_in_degrees, 4);
 38747  00EF42  0E11               	movlw	17
 38748  00EF44  0100               	movlb	0	; () banked
 38749  00EF46  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38750  00EF48  6F60               	movwf	memcpy@d1& (0+255),b
 38751  00EF4A  0E00               	movlw	0
 38752  00EF4C  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38753  00EF4E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 38754  00EF50  0E7C               	movlw	low (_os+11)
 38755  00EF52  6F62               	movwf	memcpy@s1& (0+255),b
 38756  00EF54  0E01               	movlw	high (_os+11)
 38757  00EF56  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 38758  00EF58  0E00               	movlw	0
 38759  00EF5A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 38760  00EF5C  0E04               	movlw	4
 38761  00EF5E  6F64               	movwf	memcpy@n& (0+255),b
 38762  00EF60  EC05  F0A2         	call	_memcpy	;wreg free
 38763                           
 38764                           ;api.c: 202: outBuffer[21] = os.displayState;
 38765  00EF64  0100               	movlb	0	; () banked
 38766  00EF66  EE20 F015          	lfsr	2,21
 38767  00EF6A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38768  00EF6C  26D9               	addwf	fsr2l,f,c
 38769  00EF6E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38770  00EF70  22DA               	addwfc	fsr2h,f,c
 38771  00EF72  C17E  FFDF         	movff	_os+13,indf2	;volatile
 38772                           
 38773                           ; BSR set to: 0
 38774                           ;api.c: 203: outBuffer[22] = os.beep_count;
 38775  00EF76  EE20 F016          	lfsr	2,22
 38776  00EF7A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38777  00EF7C  26D9               	addwf	fsr2l,f,c
 38778  00EF7E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38779  00EF80  22DA               	addwfc	fsr2h,f,c
 38780  00EF82  C197  FFDF         	movff	_os+38,indf2	;volatile
 38781                           
 38782                           ; BSR set to: 0
 38783                           ;api.c: 204: outBuffer[23] = ((unsigned char)((os.temperature[TEMPERATURE_SOURCE_INTERNA
      +                          L])&0xFF));
 38784  00EF86  EE20 F017          	lfsr	2,23
 38785  00EF8A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38786  00EF8C  26D9               	addwf	fsr2l,f,c
 38787  00EF8E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38788  00EF90  22DA               	addwfc	fsr2h,f,c
 38789  00EF92  C198  FFDF         	movff	_os+39,indf2	;volatile
 38790                           
 38791                           ; BSR set to: 0
 38792                           ;api.c: 205: outBuffer[24] = ((unsigned char)(((os.temperature[TEMPERATURE_SOURCE_INTERN
      +                          AL])>>8)&0xFF));
 38793  00EF96  EE20 F018          	lfsr	2,24
 38794  00EF9A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38795  00EF9C  26D9               	addwf	fsr2l,f,c
 38796  00EF9E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38797  00EFA0  22DA               	addwfc	fsr2h,f,c
 38798  00EFA2  0101               	movlb	1	; () banked
 38799  00EFA4  5199               	movf	(_os+40)& (0+255),w,b	;volatile
 38800  00EFA6  6EDF               	movwf	indf2,c
 38801                           
 38802                           ; BSR set to: 1
 38803                           ;api.c: 206: outBuffer[25] = ((unsigned char)((os.temperature[TEMPERATURE_SOURCE_EXTERNA
      +                          L])&0xFF));
 38804  00EFA8  0100               	movlb	0	; () banked
 38805  00EFAA  EE20 F019          	lfsr	2,25
 38806  00EFAE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38807  00EFB0  26D9               	addwf	fsr2l,f,c
 38808  00EFB2  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38809  00EFB4  22DA               	addwfc	fsr2h,f,c
 38810  00EFB6  C19A  FFDF         	movff	_os+41,indf2	;volatile
 38811                           
 38812                           ; BSR set to: 0
 38813                           ;api.c: 207: outBuffer[26] = ((unsigned char)(((os.temperature[TEMPERATURE_SOURCE_EXTERN
      +                          AL])>>8)&0xFF));
 38814  00EFBA  EE20 F01A          	lfsr	2,26
 38815  00EFBE  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38816  00EFC0  26D9               	addwf	fsr2l,f,c
 38817  00EFC2  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38818  00EFC4  22DA               	addwfc	fsr2h,f,c
 38819  00EFC6  0101               	movlb	1	; () banked
 38820  00EFC8  519B               	movf	(_os+42)& (0+255),w,b	;volatile
 38821  00EFCA  6EDF               	movwf	indf2,c
 38822                           
 38823                           ; BSR set to: 1
 38824                           ;api.c: 208: outBuffer[27] = os.fan_on;
 38825  00EFCC  0100               	movlb	0	; () banked
 38826  00EFCE  EE20 F01B          	lfsr	2,27
 38827  00EFD2  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38828  00EFD4  26D9               	addwf	fsr2l,f,c
 38829  00EFD6  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38830  00EFD8  22DA               	addwfc	fsr2h,f,c
 38831  00EFDA  C19F  FFDF         	movff	_os+46,indf2	;volatile
 38832                           
 38833                           ; BSR set to: 0
 38834                           ;api.c: 209: outBuffer[28] = os.brake_on;
 38835  00EFDE  EE20 F01C          	lfsr	2,28
 38836  00EFE2  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38837  00EFE4  26D9               	addwf	fsr2l,f,c
 38838  00EFE6  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38839  00EFE8  22DA               	addwfc	fsr2h,f,c
 38840  00EFEA  C1A0  FFDF         	movff	_os+47,indf2	;volatile
 38841                           
 38842                           ; BSR set to: 0
 38843                           ;api.c: 210: outBuffer[29] = os.busy;
 38844  00EFEE  EE20 F01D          	lfsr	2,29
 38845  00EFF2  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38846  00EFF4  26D9               	addwf	fsr2l,f,c
 38847  00EFF6  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38848  00EFF8  22DA               	addwfc	fsr2h,f,c
 38849  00EFFA  C17F  FFDF         	movff	_os+14,indf2	;volatile
 38850                           
 38851                           ; BSR set to: 0
 38852                           ;api.c: 212: outBuffer[30] = ((unsigned char)((os.manual_speed)&0xFF));
 38853  00EFFE  EE20 F01E          	lfsr	2,30
 38854  00F002  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38855  00F004  26D9               	addwf	fsr2l,f,c
 38856  00F006  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38857  00F008  22DA               	addwfc	fsr2h,f,c
 38858  00F00A  C194  FFDF         	movff	_os+35,indf2	;volatile
 38859                           
 38860                           ; BSR set to: 0
 38861                           ;api.c: 213: outBuffer[31] = ((unsigned char)(((os.manual_speed)>>8)&0xFF));
 38862  00F00E  EE20 F01F          	lfsr	2,31
 38863  00F012  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38864  00F014  26D9               	addwf	fsr2l,f,c
 38865  00F016  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38866  00F018  22DA               	addwfc	fsr2h,f,c
 38867  00F01A  0101               	movlb	1	; () banked
 38868  00F01C  5195               	movf	(_os+36)& (0+255),w,b	;volatile
 38869  00F01E  6EDF               	movwf	indf2,c
 38870                           
 38871                           ; BSR set to: 1
 38872                           ;api.c: 227: memcpy(&outBuffer[42], &config, 22);
 38873  00F020  0E2A               	movlw	42
 38874  00F022  0100               	movlb	0	; () banked
 38875  00F024  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38876  00F026  6F60               	movwf	memcpy@d1& (0+255),b
 38877  00F028  0E00               	movlw	0
 38878  00F02A  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38879  00F02C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 38880  00F02E  0EA1               	movlw	low _config
 38881  00F030  6F62               	movwf	memcpy@s1& (0+255),b
 38882  00F032  0E01               	movlw	high _config
 38883  00F034  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 38884  00F036  0E00               	movlw	0
 38885  00F038  6F65               	movwf	(memcpy@n+1)& (0+255),b
 38886  00F03A  0E16               	movlw	22
 38887  00F03C  6F64               	movwf	memcpy@n& (0+255),b
 38888  00F03E  EC05  F0A2         	call	_memcpy	;wreg free
 38889  00F042  0012               	return		;funcret
 38890  00F044                     __end_of__fill_buffer_get_status:
 38891                           	opt stack 0
 38892                           tosu	equ	0xFFF
 38893                           tosh	equ	0xFFE
 38894                           tosl	equ	0xFFD
 38895                           pclath	equ	0xFFA
 38896                           tblptru	equ	0xFF8
 38897                           tblptrh	equ	0xFF7
 38898                           tblptrl	equ	0xFF6
 38899                           tablat	equ	0xFF5
 38900                           prodh	equ	0xFF4
 38901                           prodl	equ	0xFF3
 38902                           intcon	equ	0xFF2
 38903                           postinc0	equ	0xFEE
 38904                           wreg	equ	0xFE8
 38905                           indf1	equ	0xFE7
 38906                           postinc1	equ	0xFE6
 38907                           postdec1	equ	0xFE5
 38908                           plusw1	equ	0xFE3
 38909                           fsr1h	equ	0xFE2
 38910                           fsr1l	equ	0xFE1
 38911                           indf2	equ	0xFDF
 38912                           postinc2	equ	0xFDE
 38913                           postdec2	equ	0xFDD
 38914                           plusw2	equ	0xFDB
 38915                           fsr2h	equ	0xFDA
 38916                           fsr2l	equ	0xFD9
 38917                           status	equ	0xFD8
 38918                           
 38919 ;; *************** function _memcpy *****************
 38920 ;; Defined at:
 38921 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 38922 ;; Parameters:    Size  Location     Type
 38923 ;;  d1              2    0[BANK0 ] PTR void 
 38924 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 38925 ;;		 -> msd_buffer(512), SetupPkt(8), 
 38926 ;;  s1              2    2[BANK0 ] PTR const void 
 38927 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 38928 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 38929 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 38930 ;;		 -> dc_arc2(80), dc_arc1(80), os.current_position_in_degrees(2), dc_divide2(80), 
 38931 ;;		 -> dc_divide1(80), dc_setup2(80), dc_setup1(80), dc_main(80), 
 38932 ;;		 -> dc_startup(80), os.current_position_in_steps(4), config(28), ReceivedDataBuffer(64), 
 38933 ;;		 -> os(48), inq_resp(36), RAM(3759), 
 38934 ;;  n               2    4[BANK0 ] unsigned int 
 38935 ;; Auto vars:     Size  Location     Type
 38936 ;;  s               2    8[BANK0 ] PTR const unsigned char 
 38937 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 38938 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 38939 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 38940 ;;		 -> dc_arc2(80), dc_arc1(80), os.current_position_in_degrees(2), dc_divide2(80), 
 38941 ;;		 -> dc_divide1(80), dc_setup2(80), dc_setup1(80), dc_main(80), 
 38942 ;;		 -> dc_startup(80), os.current_position_in_steps(4), config(28), ReceivedDataBuffer(64), 
 38943 ;;		 -> os(48), inq_resp(36), RAM(3759), 
 38944 ;;  d               2    6[BANK0 ] PTR unsigned char 
 38945 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 38946 ;;		 -> msd_buffer(512), SetupPkt(8), 
 38947 ;;  tmp             1   10[BANK0 ] unsigned char 
 38948 ;; Return value:  Size  Location     Type
 38949 ;;                  2    0[BANK0 ] PTR void 
 38950 ;; Registers used:
 38951 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 38952 ;; Tracked objects:
 38953 ;;		On entry : 0/0
 38954 ;;		On exit  : 0/0
 38955 ;;		Unchanged: 0/0
 38956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38957 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38958 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38960 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38961 ;;Total ram usage:       11 bytes
 38962 ;; Hardware stack levels used:    1
 38963 ;; Hardware stack levels required when called:   10
 38964 ;; This function calls:
 38965 ;;		Nothing
 38966 ;; This function is called by:
 38967 ;;		_MSDProcessCommandMediaPresent
 38968 ;;		__display_start
 38969 ;;		_display_prepare
 38970 ;;		__flash_set_page_size
 38971 ;;		_fat_create_file
 38972 ;;		_api_prepare
 38973 ;;		__fill_buffer_get_status
 38974 ;; This function uses a non-reentrant model
 38975 ;;
 38976                           
 38977                           	psect	text160
 38978  01440A                     __ptext160:
 38979                           	opt stack 0
 38980  01440A                     _memcpy:
 38981                           	opt stack 17
 38982                           
 38983                           ;incstack = 0
 38984  01440A  C062  F068         	movff	memcpy@s1,memcpy@s
 38985  01440E  C063  F069         	movff	memcpy@s1+1,memcpy@s+1
 38986  014412  C060  F066         	movff	memcpy@d1,memcpy@d
 38987  014416  C061  F067         	movff	memcpy@d1+1,memcpy@d+1
 38988  01441A  D01D               	goto	l3695
 38989  01441C                     l12823:
 38990  01441C  C068  FFF6         	movff	memcpy@s,tblptrl
 38991  014420  C069  FFF7         	movff	memcpy@s+1,tblptrh
 38992  014424  0E00               	movlw	low (__mediumconst shr (0+16))
 38993  014426  6EF8               	movwf	tblptru,c
 38994  014428  0E0E               	movlw	(high __ramtop+-1)
 38995  01442A  64F7               	cpfsgt	tblptrh,c
 38996  01442C  D003               	bra	u11157
 38997  01442E  0008               	tblrd		*
 38998  014430  50F5               	movf	tablat,w,c
 38999  014432  D005               	bra	u11150
 39000  014434                     u11157:
 39001  014434  CFF6 FFE9          	movff	tblptrl,fsr0l
 39002  014438  CFF7 FFEA          	movff	tblptrh,fsr0h
 39003  01443C  50EF               	movf	indf0,w,c
 39004  01443E                     u11150:
 39005  01443E  0100               	movlb	0	; () banked
 39006  014440  6F6A               	movwf	memcpy@tmp& (0+255),b
 39007                           
 39008                           ; BSR set to: 0
 39009  014442  4B68               	infsnz	memcpy@s& (0+255),f,b
 39010  014444  2B69               	incf	(memcpy@s+1)& (0+255),f,b
 39011                           
 39012                           ; BSR set to: 0
 39013  014446  C066  FFD9         	movff	memcpy@d,fsr2l
 39014  01444A  C067  FFDA         	movff	memcpy@d+1,fsr2h
 39015  01444E  C06A  FFDF         	movff	memcpy@tmp,indf2
 39016                           
 39017                           ; BSR set to: 0
 39018  014452  4B66               	infsnz	memcpy@d& (0+255),f,b
 39019  014454  2B67               	incf	(memcpy@d+1)& (0+255),f,b
 39020  014456                     l3695:
 39021                           
 39022                           ; BSR set to: 0
 39023  014456  0100               	movlb	0	; () banked
 39024  014458  0764               	decf	memcpy@n& (0+255),f,b
 39025  01445A  A0D8               	btfss	status,0,c
 39026  01445C  0765               	decf	(memcpy@n+1)& (0+255),f,b
 39027  01445E  2964               	incf	memcpy@n& (0+255),w,b
 39028  014460  E1DD               	bnz	l12823
 39029  014462  2965               	incf	(memcpy@n+1)& (0+255),w,b
 39030  014464  B4D8               	btfsc	status,2,c
 39031  014466  0012               	return	
 39032  014468  D7D9               	goto	l3696
 39033  01446A                     __end_of_memcpy:
 39034                           	opt stack 0
 39035                           tosu	equ	0xFFF
 39036                           tosh	equ	0xFFE
 39037                           tosl	equ	0xFFD
 39038                           pclath	equ	0xFFA
 39039                           tblptru	equ	0xFF8
 39040                           tblptrh	equ	0xFF7
 39041                           tblptrl	equ	0xFF6
 39042                           tablat	equ	0xFF5
 39043                           prodh	equ	0xFF4
 39044                           prodl	equ	0xFF3
 39045                           intcon	equ	0xFF2
 39046                           indf0	equ	0xFEF
 39047                           postinc0	equ	0xFEE
 39048                           fsr0h	equ	0xFEA
 39049                           fsr0l	equ	0xFE9
 39050                           wreg	equ	0xFE8
 39051                           indf1	equ	0xFE7
 39052                           postinc1	equ	0xFE6
 39053                           postdec1	equ	0xFE5
 39054                           plusw1	equ	0xFE3
 39055                           fsr1h	equ	0xFE2
 39056                           fsr1l	equ	0xFE1
 39057                           indf2	equ	0xFDF
 39058                           postinc2	equ	0xFDE
 39059                           postdec2	equ	0xFDD
 39060                           plusw2	equ	0xFDB
 39061                           fsr2h	equ	0xFDA
 39062                           fsr2l	equ	0xFD9
 39063                           status	equ	0xFD8
 39064                           
 39065 ;; *************** function __fill_buffer_get_mode_details *****************
 39066 ;; Defined at:
 39067 ;;		line 272 in file "api.c"
 39068 ;; Parameters:    Size  Location     Type
 39069 ;;  outBuffer       2    0[BANK0 ] PTR unsigned char 
 39070 ;;		 -> ToSendDataBuffer(64), 
 39071 ;; Auto vars:     Size  Location     Type
 39072 ;;		None
 39073 ;; Return value:  Size  Location     Type
 39074 ;;                  1    wreg      void 
 39075 ;; Registers used:
 39076 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39077 ;; Tracked objects:
 39078 ;;		On entry : 0/0
 39079 ;;		On exit  : 0/0
 39080 ;;		Unchanged: 0/0
 39081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39082 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39084 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39085 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39086 ;;Total ram usage:        4 bytes
 39087 ;; Hardware stack levels used:    1
 39088 ;; Hardware stack levels required when called:   10
 39089 ;; This function calls:
 39090 ;;		Nothing
 39091 ;; This function is called by:
 39092 ;;		_api_prepare
 39093 ;; This function uses a non-reentrant model
 39094 ;;
 39095                           
 39096                           	psect	text161
 39097  00F40C                     __ptext161:
 39098                           	opt stack 0
 39099  00F40C                     __fill_buffer_get_mode_details:
 39100                           	opt stack 18
 39101                           
 39102                           ;api.c: 275: outBuffer[0] = DATAREQUEST_GET_MODE_DETAILS;
 39103                           
 39104                           ; BSR set to: 0
 39105                           ;incstack = 0
 39106  00F40C  C060  FFD9         	movff	__fill_buffer_get_mode_details@outBuffer,fsr2l
 39107  00F410  C061  FFDA         	movff	__fill_buffer_get_mode_details@outBuffer+1,fsr2h
 39108  00F414  0E13               	movlw	19
 39109  00F416  6EDF               	movwf	indf2,c
 39110                           
 39111                           ;api.c: 278: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 39112  00F418  0100               	movlb	0	; () banked
 39113  00F41A  EE20 F001          	lfsr	2,1
 39114  00F41E  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39115  00F420  26D9               	addwf	fsr2l,f,c
 39116  00F422  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39117  00F424  22DA               	addwfc	fsr2h,f,c
 39118  00F426  0EBC               	movlw	188
 39119  00F428  6EDF               	movwf	indf2,c
 39120                           
 39121                           ; BSR set to: 0
 39122                           ;api.c: 279: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 39123  00F42A  EE20 F002          	lfsr	2,2
 39124  00F42E  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39125  00F430  26D9               	addwf	fsr2l,f,c
 39126  00F432  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39127  00F434  22DA               	addwfc	fsr2h,f,c
 39128  00F436  0E26               	movlw	38
 39129  00F438  6EDF               	movwf	indf2,c
 39130                           
 39131                           ; BSR set to: 0
 39132                           ;api.c: 282: outBuffer[3] = os.displayState;
 39133  00F43A  EE20 F003          	lfsr	2,3
 39134  00F43E  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39135  00F440  26D9               	addwf	fsr2l,f,c
 39136  00F442  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39137  00F444  22DA               	addwfc	fsr2h,f,c
 39138  00F446  C17E  FFDF         	movff	_os+13,indf2	;volatile
 39139                           
 39140                           ;api.c: 284: switch(os.displayState & 0x0F)
 39141  00F44A  D090               	goto	l2277
 39142  00F44C                     
 39143                           ; BSR set to: 0
 39144                           ;api.c: 290: case DISPLAY_STATE_SETUP2:;api.c: 291: outBuffer[4] = os.setup_step_size;
 39145                           
 39146                           ; BSR set to: 0
 39147                           
 39148                           ; BSR set to: 0
 39149  00F44C  EE20 F004          	lfsr	2,4
 39150  00F450  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39151  00F452  26D9               	addwf	fsr2l,f,c
 39152  00F454  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39153  00F456  22DA               	addwfc	fsr2h,f,c
 39154  00F458  C181  FFDF         	movff	_os+16,indf2	;volatile
 39155                           
 39156                           ;api.c: 292: break;
 39157  00F45C  0012               	return	
 39158  00F45E                     
 39159                           ; BSR set to: 0
 39160                           ;api.c: 295: case DISPLAY_STATE_DIVIDE2:;api.c: 297: outBuffer[4] = os.divide_step_size;
 39161                           
 39162                           ; BSR set to: 0
 39163                           
 39164                           ; BSR set to: 0
 39165  00F45E  EE20 F004          	lfsr	2,4
 39166  00F462  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39167  00F464  26D9               	addwf	fsr2l,f,c
 39168  00F466  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39169  00F468  22DA               	addwfc	fsr2h,f,c
 39170  00F46A  C186  FFDF         	movff	_os+21,indf2	;volatile
 39171                           
 39172                           ;api.c: 298: outBuffer[5] = ((unsigned char)(((os.division)>>8)&0xFF));
 39173  00F46E  EE20 F005          	lfsr	2,5
 39174  00F472  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39175  00F474  26D9               	addwf	fsr2l,f,c
 39176  00F476  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39177  00F478  22DA               	addwfc	fsr2h,f,c
 39178  00F47A  0101               	movlb	1	; () banked
 39179  00F47C  5185               	movf	(_os+20)& (0+255),w,b	;volatile
 39180  00F47E  6EDF               	movwf	indf2,c
 39181                           
 39182                           ;api.c: 299: outBuffer[6] = ((unsigned char)((os.division)&0xFF));
 39183  00F480  0100               	movlb	0	; () banked
 39184  00F482  EE20 F006          	lfsr	2,6
 39185  00F486  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39186  00F488  26D9               	addwf	fsr2l,f,c
 39187  00F48A  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39188  00F48C  22DA               	addwfc	fsr2h,f,c
 39189  00F48E  C184  FFDF         	movff	_os+19,indf2	;volatile
 39190                           
 39191                           ;api.c: 300: outBuffer[7] = ((unsigned char)(((os.divide_jump_size)>>8)&0xFF));
 39192  00F492  EE20 F007          	lfsr	2,7
 39193  00F496  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39194  00F498  26D9               	addwf	fsr2l,f,c
 39195  00F49A  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39196  00F49C  22DA               	addwfc	fsr2h,f,c
 39197  00F49E  0101               	movlb	1	; () banked
 39198  00F4A0  518A               	movf	(_os+25)& (0+255),w,b	;volatile
 39199  00F4A2  6EDF               	movwf	indf2,c
 39200                           
 39201                           ;api.c: 301: outBuffer[8] = ((unsigned char)((os.divide_jump_size)&0xFF));
 39202  00F4A4  0100               	movlb	0	; () banked
 39203  00F4A6  EE20 F008          	lfsr	2,8
 39204  00F4AA  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39205  00F4AC  26D9               	addwf	fsr2l,f,c
 39206  00F4AE  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39207  00F4B0  22DA               	addwfc	fsr2h,f,c
 39208  00F4B2  C189  FFDF         	movff	_os+24,indf2	;volatile
 39209                           
 39210                           ;api.c: 302: outBuffer[9] = ((unsigned char)(((os.divide_position)>>8)&0xFF));
 39211  00F4B6  EE20 F009          	lfsr	2,9
 39212  00F4BA  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39213  00F4BC  26D9               	addwf	fsr2l,f,c
 39214  00F4BE  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39215  00F4C0  22DA               	addwfc	fsr2h,f,c
 39216  00F4C2  0101               	movlb	1	; () banked
 39217  00F4C4  5188               	movf	(_os+23)& (0+255),w,b	;volatile
 39218  00F4C6  6EDF               	movwf	indf2,c
 39219                           
 39220                           ;api.c: 303: outBuffer[10] = ((unsigned char)((os.divide_position)&0xFF));
 39221  00F4C8  0100               	movlb	0	; () banked
 39222  00F4CA  EE20 F00A          	lfsr	2,10
 39223  00F4CE  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39224  00F4D0  26D9               	addwf	fsr2l,f,c
 39225  00F4D2  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39226  00F4D4  22DA               	addwfc	fsr2h,f,c
 39227  00F4D6  C187  FFDF         	movff	_os+22,indf2	;volatile
 39228                           
 39229                           ;api.c: 304: break;
 39230  00F4DA  0012               	return	
 39231  00F4DC                     
 39232                           ; BSR set to: 0
 39233                           ;api.c: 307: case DISPLAY_STATE_ARC2:;api.c: 308: outBuffer[4] = ((unsigned char)(((os.a
      +                          rc_step_size)>>8)&0xFF));
 39234                           
 39235                           ; BSR set to: 0
 39236                           
 39237                           ; BSR set to: 0
 39238  00F4DC  EE20 F004          	lfsr	2,4
 39239  00F4E0  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39240  00F4E2  26D9               	addwf	fsr2l,f,c
 39241  00F4E4  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39242  00F4E6  22DA               	addwfc	fsr2h,f,c
 39243  00F4E8  0101               	movlb	1	; () banked
 39244  00F4EA  518C               	movf	(_os+27)& (0+255),w,b	;volatile
 39245  00F4EC  6EDF               	movwf	indf2,c
 39246                           
 39247                           ;api.c: 309: outBuffer[5] = ((unsigned char)((os.arc_step_size)&0xFF));
 39248  00F4EE  0100               	movlb	0	; () banked
 39249  00F4F0  EE20 F005          	lfsr	2,5
 39250  00F4F4  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39251  00F4F6  26D9               	addwf	fsr2l,f,c
 39252  00F4F8  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39253  00F4FA  22DA               	addwfc	fsr2h,f,c
 39254  00F4FC  C18B  FFDF         	movff	_os+26,indf2	;volatile
 39255                           
 39256                           ;api.c: 310: outBuffer[6] = os.arc_direction;
 39257  00F500  EE20 F006          	lfsr	2,6
 39258  00F504  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39259  00F506  26D9               	addwf	fsr2l,f,c
 39260  00F508  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39261  00F50A  22DA               	addwfc	fsr2h,f,c
 39262  00F50C  C193  FFDF         	movff	_os+34,indf2	;volatile
 39263                           
 39264                           ;api.c: 311: outBuffer[7] = ((unsigned char)(((os.arc_speed)>>8)&0xFF));
 39265  00F510  EE20 F007          	lfsr	2,7
 39266  00F514  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39267  00F516  26D9               	addwf	fsr2l,f,c
 39268  00F518  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39269  00F51A  22DA               	addwfc	fsr2h,f,c
 39270  00F51C  0101               	movlb	1	; () banked
 39271  00F51E  5192               	movf	(_os+33)& (0+255),w,b	;volatile
 39272  00F520  6EDF               	movwf	indf2,c
 39273                           
 39274                           ;api.c: 312: outBuffer[8] = ((unsigned char)((os.arc_speed)&0xFF));
 39275  00F522  0100               	movlb	0	; () banked
 39276  00F524  EE20 F008          	lfsr	2,8
 39277  00F528  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39278  00F52A  26D9               	addwf	fsr2l,f,c
 39279  00F52C  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39280  00F52E  22DA               	addwfc	fsr2h,f,c
 39281  00F530  C191  FFDF         	movff	_os+32,indf2	;volatile
 39282                           
 39283                           ; BSR set to: 0
 39284                           ;api.c: 316: break;
 39285                           
 39286                           ;api.c: 315: case DISPLAY_STATE_ZERO:
 39287                           
 39288                           ;api.c: 313: break;
 39289  00F534  0012               	return	
 39290  00F536                     
 39291                           ; BSR set to: 0
 39292                           ;api.c: 319: outBuffer[4] = os.manual_direction;
 39293                           
 39294                           ; BSR set to: 0
 39295  00F536  EE20 F004          	lfsr	2,4
 39296  00F53A  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39297  00F53C  26D9               	addwf	fsr2l,f,c
 39298  00F53E  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39299  00F540  22DA               	addwfc	fsr2h,f,c
 39300  00F542  C196  FFDF         	movff	_os+37,indf2	;volatile
 39301                           
 39302                           ;api.c: 320: outBuffer[5] = ((unsigned char)(((os.manual_speed)>>8)&0xFF));
 39303  00F546  EE20 F005          	lfsr	2,5
 39304  00F54A  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39305  00F54C  26D9               	addwf	fsr2l,f,c
 39306  00F54E  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39307  00F550  22DA               	addwfc	fsr2h,f,c
 39308  00F552  0101               	movlb	1	; () banked
 39309  00F554  5195               	movf	(_os+36)& (0+255),w,b	;volatile
 39310  00F556  6EDF               	movwf	indf2,c
 39311                           
 39312                           ;api.c: 321: outBuffer[6] = ((unsigned char)((os.manual_speed)&0xFF));
 39313  00F558  0100               	movlb	0	; () banked
 39314  00F55A  EE20 F006          	lfsr	2,6
 39315  00F55E  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39316  00F560  26D9               	addwf	fsr2l,f,c
 39317  00F562  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39318  00F564  22DA               	addwfc	fsr2h,f,c
 39319  00F566  C194  FFDF         	movff	_os+35,indf2	;volatile
 39320                           
 39321                           ; BSR set to: 0
 39322                           ;api.c: 323: }
 39323                           
 39324                           ;api.c: 322: break;
 39325  00F56A  0012               	return	
 39326  00F56C                     l2277:
 39327                           
 39328                           ; BSR set to: 0
 39329                           
 39330                           ; BSR set to: 0
 39331  00F56C  0101               	movlb	1	; () banked
 39332  00F56E  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 39333  00F570  0B0F               	andlw	15
 39334  00F572  0100               	movlb	0	; () banked
 39335  00F574  6F62               	movwf	??__fill_buffer_get_mode_details& (0+255),b
 39336  00F576  6B63               	clrf	(??__fill_buffer_get_mode_details+1)& (0+255),b
 39337                           
 39338                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 39339                           ; Switch size 1, requested type "space"
 39340                           ; Number of cases is 1, Range of values is 0 to 0
 39341                           ; switch strategies available:
 39342                           ; Name         Instructions Cycles
 39343                           ; simple_byte            4     3 (average)
 39344                           ;	Chosen strategy is simple_byte
 39345  00F578  5163               	movf	(??__fill_buffer_get_mode_details+1)& (0+255),w,b
 39346  00F57A  0A00               	xorlw	0	; case 0
 39347  00F57C  A4D8               	btfss	status,2,c
 39348  00F57E  0012               	return	
 39349                           
 39350                           ; BSR set to: 0
 39351                           ; Switch size 1, requested type "space"
 39352                           ; Number of cases is 9, Range of values is 0 to 128
 39353                           ; switch strategies available:
 39354                           ; Name         Instructions Cycles
 39355                           ; simple_byte           28    15 (average)
 39356                           ;	Chosen strategy is simple_byte
 39357  00F580  5162               	movf	??__fill_buffer_get_mode_details& (0+255),w,b
 39358  00F582  0A00               	xorlw	0	; case 0
 39359  00F584  B4D8               	btfsc	status,2,c
 39360  00F586  0012               	return	
 39361  00F588  0A10               	xorlw	16	; case 16
 39362  00F58A  B4D8               	btfsc	status,2,c
 39363  00F58C  D75F               	goto	l2280
 39364  00F58E  0A30               	xorlw	48	; case 32
 39365  00F590  B4D8               	btfsc	status,2,c
 39366  00F592  D75C               	goto	l2280
 39367  00F594  0A10               	xorlw	16	; case 48
 39368  00F596  B4D8               	btfsc	status,2,c
 39369  00F598  D762               	goto	l2282
 39370  00F59A  0A70               	xorlw	112	; case 64
 39371  00F59C  B4D8               	btfsc	status,2,c
 39372  00F59E  D75F               	goto	l2282
 39373  00F5A0  0A10               	xorlw	16	; case 80
 39374  00F5A2  B4D8               	btfsc	status,2,c
 39375  00F5A4  D79B               	goto	l2284
 39376  00F5A6  0A30               	xorlw	48	; case 96
 39377  00F5A8  B4D8               	btfsc	status,2,c
 39378  00F5AA  D798               	goto	l2284
 39379  00F5AC  0A10               	xorlw	16	; case 112
 39380  00F5AE  B4D8               	btfsc	status,2,c
 39381  00F5B0  0012               	return	
 39382  00F5B2  0AF0               	xorlw	240	; case 128
 39383  00F5B4  A4D8               	btfss	status,2,c
 39384  00F5B6  0012               	return	
 39385  00F5B8  D7BE               	goto	l2287
 39386  00F5BA                     __end_of__fill_buffer_get_mode_details:
 39387                           	opt stack 0
 39388                           tosu	equ	0xFFF
 39389                           tosh	equ	0xFFE
 39390                           tosl	equ	0xFFD
 39391                           pclath	equ	0xFFA
 39392                           tblptru	equ	0xFF8
 39393                           tblptrh	equ	0xFF7
 39394                           tblptrl	equ	0xFF6
 39395                           tablat	equ	0xFF5
 39396                           prodh	equ	0xFF4
 39397                           prodl	equ	0xFF3
 39398                           intcon	equ	0xFF2
 39399                           indf0	equ	0xFEF
 39400                           postinc0	equ	0xFEE
 39401                           fsr0h	equ	0xFEA
 39402                           fsr0l	equ	0xFE9
 39403                           wreg	equ	0xFE8
 39404                           indf1	equ	0xFE7
 39405                           postinc1	equ	0xFE6
 39406                           postdec1	equ	0xFE5
 39407                           plusw1	equ	0xFE3
 39408                           fsr1h	equ	0xFE2
 39409                           fsr1l	equ	0xFE1
 39410                           indf2	equ	0xFDF
 39411                           postinc2	equ	0xFDE
 39412                           postdec2	equ	0xFDD
 39413                           plusw2	equ	0xFDB
 39414                           fsr2h	equ	0xFDA
 39415                           fsr2l	equ	0xFD9
 39416                           status	equ	0xFD8
 39417                           
 39418 ;; *************** function __fill_buffer_get_display *****************
 39419 ;; Defined at:
 39420 ;;		line 231 in file "api.c"
 39421 ;; Parameters:    Size  Location     Type
 39422 ;;  outBuffer       2    4[BANK0 ] PTR unsigned char 
 39423 ;;		 -> ToSendDataBuffer(64), 
 39424 ;;  secondHalf      1    6[BANK0 ] unsigned char 
 39425 ;; Auto vars:     Size  Location     Type
 39426 ;;  position        1   15[BANK0 ] unsigned char 
 39427 ;;  start_line      1   14[BANK0 ] unsigned char 
 39428 ;;  line            1   13[BANK0 ] unsigned char 
 39429 ;;  cntr            1   12[BANK0 ] unsigned char 
 39430 ;; Return value:  Size  Location     Type
 39431 ;;                  1    wreg      void 
 39432 ;; Registers used:
 39433 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39434 ;; Tracked objects:
 39435 ;;		On entry : 0/0
 39436 ;;		On exit  : 0/0
 39437 ;;		Unchanged: 0/0
 39438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39439 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39440 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39441 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39442 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39443 ;;Total ram usage:       12 bytes
 39444 ;; Hardware stack levels used:    1
 39445 ;; Hardware stack levels required when called:   11
 39446 ;; This function calls:
 39447 ;;		_display_get_character
 39448 ;; This function is called by:
 39449 ;;		_api_prepare
 39450 ;; This function uses a non-reentrant model
 39451 ;;
 39452                           
 39453                           	psect	text162
 39454  012B98                     __ptext162:
 39455                           	opt stack 0
 39456  012B98                     __fill_buffer_get_display:
 39457                           	opt stack 17
 39458                           
 39459                           ;api.c: 233: uint8_t cntr;;api.c: 234: uint8_t line;;api.c: 235: uint8_t start_line;;api
      +                          .c: 236: uint8_t position;;api.c: 239: if(secondHalf)
 39460                           
 39461                           ; BSR set to: 0
 39462                           ;incstack = 0
 39463  012B98  0100               	movlb	0	; () banked
 39464  012B9A  5166               	movf	__fill_buffer_get_display@secondHalf& (0+255),w,b
 39465  012B9C  B4D8               	btfsc	status,2,c
 39466  012B9E  D006               	goto	l2265
 39467                           
 39468                           ; BSR set to: 0
 39469                           ;api.c: 240: {;api.c: 241: outBuffer[0] = DATAREQUEST_GET_DISPLAY_2;
 39470  012BA0  C064  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 39471  012BA4  C065  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 39472  012BA8  0E12               	movlw	18
 39473  012BAA  D005               	goto	L61
 39474  012BAC                     l2265:
 39475                           
 39476                           ; BSR set to: 0
 39477                           ;api.c: 243: else;api.c: 244: {;api.c: 245: outBuffer[0] = DATAREQUEST_GET_DISPLAY_1;
 39478                           
 39479                           ; BSR set to: 0
 39480  012BAC  C064  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 39481  012BB0  C065  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 39482  012BB4  0E11               	movlw	17
 39483  012BB6                     L61:
 39484  012BB6  6EDF               	movwf	indf2,c
 39485                           
 39486                           ; BSR set to: 0
 39487                           ;api.c: 246: };api.c: 249: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 39488                           
 39489                           ; BSR set to: 0
 39490  012BB8  EE20 F001          	lfsr	2,1
 39491  012BBC  5164               	movf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 39492  012BBE  26D9               	addwf	fsr2l,f,c
 39493  012BC0  5165               	movf	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 39494  012BC2  22DA               	addwfc	fsr2h,f,c
 39495  012BC4  0EBC               	movlw	188
 39496  012BC6  6EDF               	movwf	indf2,c
 39497                           
 39498                           ; BSR set to: 0
 39499                           ;api.c: 250: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 39500  012BC8  EE20 F002          	lfsr	2,2
 39501  012BCC  5164               	movf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 39502  012BCE  26D9               	addwf	fsr2l,f,c
 39503  012BD0  5165               	movf	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 39504  012BD2  22DA               	addwfc	fsr2h,f,c
 39505  012BD4  0E26               	movlw	38
 39506  012BD6  6EDF               	movwf	indf2,c
 39507                           
 39508                           ; BSR set to: 0
 39509                           ;api.c: 253: cntr = 3;
 39510  012BD8  0E03               	movlw	3
 39511  012BDA  6F6C               	movwf	__fill_buffer_get_display@cntr& (0+255),b
 39512                           
 39513                           ; BSR set to: 0
 39514                           ;api.c: 254: if(secondHalf)
 39515  012BDC  5166               	movf	__fill_buffer_get_display@secondHalf& (0+255),w,b
 39516  012BDE  B4D8               	btfsc	status,2,c
 39517  012BE0  D002               	goto	l2267
 39518                           
 39519                           ; BSR set to: 0
 39520                           ;api.c: 255: {;api.c: 256: start_line = 2;
 39521  012BE2  0E02               	movlw	2
 39522  012BE4  D001               	goto	L62
 39523  012BE6                     l2267:
 39524                           
 39525                           ; BSR set to: 0
 39526                           ;api.c: 258: else;api.c: 259: {;api.c: 260: start_line = 0;
 39527                           
 39528                           ; BSR set to: 0
 39529  012BE6  0E00               	movlw	0
 39530  012BE8                     L62:
 39531  012BE8  6F6E               	movwf	__fill_buffer_get_display@start_line& (0+255),b
 39532                           
 39533                           ; BSR set to: 0
 39534                           ;api.c: 261: };api.c: 262: for(line=start_line; line<start_line+2; ++line)
 39535                           
 39536                           ; BSR set to: 0
 39537  012BEA  C06E  F06D         	movff	__fill_buffer_get_display@start_line,__fill_buffer_get_display@line
 39538  012BEE  D01B               	goto	l2269
 39539  012BF0                     
 39540                           ; BSR set to: 0
 39541                           ;api.c: 263: {;api.c: 264: for(position=0; position<20; ++position)
 39542                           
 39543                           ; BSR set to: 0
 39544  012BF0  0E00               	movlw	0
 39545  012BF2  6F6F               	movwf	__fill_buffer_get_display@position& (0+255),b
 39546  012BF4                     l15945:
 39547                           
 39548                           ; BSR set to: 0
 39549  012BF4  0E13               	movlw	19
 39550  012BF6  656F               	cpfsgt	__fill_buffer_get_display@position& (0+255),b
 39551  012BF8  D001               	goto	l2271
 39552  012BFA  D014               	goto	u14840
 39553  012BFC                     l2271:
 39554                           
 39555                           ; BSR set to: 0
 39556                           ;api.c: 265: {;api.c: 266: outBuffer[cntr] = (uint8_t) display_get_character(line, posit
      +                          ion);
 39557                           
 39558                           ; BSR set to: 0
 39559  012BFC  C06F  F060         	movff	__fill_buffer_get_display@position,display_get_character@position
 39560  012C00  516D               	movf	__fill_buffer_get_display@line& (0+255),w,b
 39561  012C02  EC43  F0AA         	call	_display_get_character
 39562  012C06  0100               	movlb	0	; () banked
 39563  012C08  6F67               	movwf	??__fill_buffer_get_display& (0+255),b
 39564  012C0A  516C               	movf	__fill_buffer_get_display@cntr& (0+255),w,b
 39565  012C0C  0D01               	mullw	1
 39566  012C0E  50F3               	movf	prodl,w,c
 39567  012C10  2564               	addwf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 39568  012C12  6ED9               	movwf	fsr2l,c
 39569  012C14  50F4               	movf	prodh,w,c
 39570  012C16  2165               	addwfc	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 39571  012C18  6EDA               	movwf	fsr2h,c
 39572  012C1A  C067  FFDF         	movff	??__fill_buffer_get_display,indf2
 39573                           
 39574                           ; BSR set to: 0
 39575                           ;api.c: 267: ++cntr;
 39576  012C1E  2B6C               	incf	__fill_buffer_get_display@cntr& (0+255),f,b
 39577                           
 39578                           ; BSR set to: 0
 39579  012C20  2B6F               	incf	__fill_buffer_get_display@position& (0+255),f,b
 39580  012C22  D7E8               	goto	l15945
 39581  012C24                     u14840:
 39582                           
 39583                           ; BSR set to: 0
 39584                           
 39585                           ; BSR set to: 0
 39586  012C24  2B6D               	incf	__fill_buffer_get_display@line& (0+255),f,b
 39587  012C26                     l2269:
 39588                           
 39589                           ; BSR set to: 0
 39590                           
 39591                           ; BSR set to: 0
 39592  012C26  516E               	movf	__fill_buffer_get_display@start_line& (0+255),w,b
 39593  012C28  6F67               	movwf	??__fill_buffer_get_display& (0+255),b
 39594  012C2A  6B68               	clrf	(??__fill_buffer_get_display+1)& (0+255),b
 39595  012C2C  0E02               	movlw	2
 39596  012C2E  2767               	addwf	??__fill_buffer_get_display& (0+255),f,b
 39597  012C30  0E00               	movlw	0
 39598  012C32  2368               	addwfc	(??__fill_buffer_get_display+1)& (0+255),f,b
 39599  012C34  516D               	movf	__fill_buffer_get_display@line& (0+255),w,b
 39600  012C36  6F69               	movwf	(??__fill_buffer_get_display+2)& (0+255),b
 39601  012C38  6B6A               	clrf	(??__fill_buffer_get_display+3)& (0+255),b
 39602  012C3A  5167               	movf	??__fill_buffer_get_display& (0+255),w,b
 39603  012C3C  5D69               	subwf	(??__fill_buffer_get_display+2)& (0+255),w,b
 39604  012C3E  516A               	movf	(??__fill_buffer_get_display+3)& (0+255),w,b
 39605  012C40  0A80               	xorlw	128
 39606  012C42  6F6B               	movwf	(??__fill_buffer_get_display+4)& (0+255),b
 39607  012C44  5168               	movf	(??__fill_buffer_get_display+1)& (0+255),w,b
 39608  012C46  0A80               	xorlw	128
 39609  012C48  596B               	subwfb	(??__fill_buffer_get_display+4)& (0+255),w,b
 39610  012C4A  B0D8               	btfsc	status,0,c
 39611  012C4C  0012               	return	
 39612  012C4E  D7D0               	goto	l2270
 39613  012C50                     __end_of__fill_buffer_get_display:
 39614                           	opt stack 0
 39615                           tosu	equ	0xFFF
 39616                           tosh	equ	0xFFE
 39617                           tosl	equ	0xFFD
 39618                           pclath	equ	0xFFA
 39619                           tblptru	equ	0xFF8
 39620                           tblptrh	equ	0xFF7
 39621                           tblptrl	equ	0xFF6
 39622                           tablat	equ	0xFF5
 39623                           prodh	equ	0xFF4
 39624                           prodl	equ	0xFF3
 39625                           intcon	equ	0xFF2
 39626                           indf0	equ	0xFEF
 39627                           postinc0	equ	0xFEE
 39628                           fsr0h	equ	0xFEA
 39629                           fsr0l	equ	0xFE9
 39630                           wreg	equ	0xFE8
 39631                           indf1	equ	0xFE7
 39632                           postinc1	equ	0xFE6
 39633                           postdec1	equ	0xFE5
 39634                           plusw1	equ	0xFE3
 39635                           fsr1h	equ	0xFE2
 39636                           fsr1l	equ	0xFE1
 39637                           indf2	equ	0xFDF
 39638                           postinc2	equ	0xFDE
 39639                           postdec2	equ	0xFDD
 39640                           plusw2	equ	0xFDB
 39641                           fsr2h	equ	0xFDA
 39642                           fsr2l	equ	0xFD9
 39643                           status	equ	0xFD8
 39644                           
 39645 ;; *************** function _display_get_character *****************
 39646 ;; Defined at:
 39647 ;;		line 628 in file "display.c"
 39648 ;; Parameters:    Size  Location     Type
 39649 ;;  line            1    wreg     unsigned char 
 39650 ;;  position        1    0[BANK0 ] unsigned char 
 39651 ;; Auto vars:     Size  Location     Type
 39652 ;;  line            1    3[BANK0 ] unsigned char 
 39653 ;; Return value:  Size  Location     Type
 39654 ;;                  1    wreg      unsigned char 
 39655 ;; Registers used:
 39656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 39657 ;; Tracked objects:
 39658 ;;		On entry : 0/0
 39659 ;;		On exit  : 0/0
 39660 ;;		Unchanged: 0/0
 39661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39662 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39663 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39664 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39665 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39666 ;;Total ram usage:        4 bytes
 39667 ;; Hardware stack levels used:    1
 39668 ;; Hardware stack levels required when called:   10
 39669 ;; This function calls:
 39670 ;;		Nothing
 39671 ;; This function is called by:
 39672 ;;		__fill_buffer_get_display
 39673 ;; This function uses a non-reentrant model
 39674 ;;
 39675                           
 39676                           	psect	text163
 39677  015486                     __ptext163:
 39678                           	opt stack 0
 39679  015486                     _display_get_character:
 39680                           	opt stack 17
 39681                           
 39682                           ; BSR set to: 0
 39683                           ;incstack = 0
 39684                           ;display_get_character@line stored from wreg
 39685  015486  0100               	movlb	0	; () banked
 39686  015488  6F63               	movwf	display_get_character@line& (0+255),b
 39687                           
 39688                           ;display.c: 630: return display_content[line][position];
 39689  01548A  0100               	movlb	0	; () banked
 39690  01548C  5163               	movf	display_get_character@line& (0+255),w,b
 39691  01548E  0D14               	mullw	20
 39692  015490  0E34               	movlw	low _display_content
 39693  015492  6F61               	movwf	??_display_get_character& (0+255),b
 39694  015494  0E02               	movlw	high _display_content
 39695  015496  6F62               	movwf	(??_display_get_character+1)& (0+255),b
 39696  015498  50F3               	movf	prodl,w,c
 39697  01549A  2761               	addwf	??_display_get_character& (0+255),f,b
 39698  01549C  50F4               	movf	prodh,w,c
 39699  01549E  2362               	addwfc	(??_display_get_character+1)& (0+255),f,b
 39700  0154A0  5160               	movf	display_get_character@position& (0+255),w,b
 39701  0154A2  0D01               	mullw	1
 39702  0154A4  50F3               	movf	prodl,w,c
 39703  0154A6  2561               	addwf	??_display_get_character& (0+255),w,b
 39704  0154A8  6ED9               	movwf	fsr2l,c
 39705  0154AA  50F4               	movf	prodh,w,c
 39706  0154AC  2162               	addwfc	(??_display_get_character+1)& (0+255),w,b
 39707  0154AE  6EDA               	movwf	fsr2h,c
 39708  0154B0  50DF               	movf	indf2,w,c
 39709  0154B2  0012               	return	
 39710  0154B4                     __end_of_display_get_character:
 39711                           	opt stack 0
 39712                           tosu	equ	0xFFF
 39713                           tosh	equ	0xFFE
 39714                           tosl	equ	0xFFD
 39715                           pclath	equ	0xFFA
 39716                           tblptru	equ	0xFF8
 39717                           tblptrh	equ	0xFF7
 39718                           tblptrl	equ	0xFF6
 39719                           tablat	equ	0xFF5
 39720                           prodh	equ	0xFF4
 39721                           prodl	equ	0xFF3
 39722                           intcon	equ	0xFF2
 39723                           indf0	equ	0xFEF
 39724                           postinc0	equ	0xFEE
 39725                           fsr0h	equ	0xFEA
 39726                           fsr0l	equ	0xFE9
 39727                           wreg	equ	0xFE8
 39728                           indf1	equ	0xFE7
 39729                           postinc1	equ	0xFE6
 39730                           postdec1	equ	0xFE5
 39731                           plusw1	equ	0xFE3
 39732                           fsr1h	equ	0xFE2
 39733                           fsr1l	equ	0xFE1
 39734                           indf2	equ	0xFDF
 39735                           postinc2	equ	0xFDE
 39736                           postdec2	equ	0xFDD
 39737                           plusw2	equ	0xFDB
 39738                           fsr2h	equ	0xFDA
 39739                           fsr2l	equ	0xFD9
 39740                           status	equ	0xFD8
 39741                           
 39742 ;; *************** function _api_parse *****************
 39743 ;; Defined at:
 39744 ;;		line 93 in file "api.c"
 39745 ;; Parameters:    Size  Location     Type
 39746 ;;  inBuffer        2  100[BANK0 ] PTR unsigned char 
 39747 ;;		 -> ReceivedDataBuffer(64), 
 39748 ;;  receivedData    1  102[BANK0 ] unsigned char 
 39749 ;;  outBuffer       2  103[BANK0 ] PTR unsigned char 
 39750 ;;		 -> ToSendDataBuffer(64), 
 39751 ;; Auto vars:     Size  Location     Type
 39752 ;;  out_idx_ptr     2  107[BANK0 ] PTR unsigned char 
 39753 ;;		 -> api_parse@out_idx(1), 
 39754 ;;  in_idx          1  110[BANK0 ] unsigned char 
 39755 ;;  out_idx         1  109[BANK0 ] unsigned char 
 39756 ;; Return value:  Size  Location     Type
 39757 ;;                  1    wreg      void 
 39758 ;; Registers used:
 39759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39760 ;; Tracked objects:
 39761 ;;		On entry : 0/0
 39762 ;;		On exit  : 0/0
 39763 ;;		Unchanged: 0/0
 39764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39765 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39766 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39767 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39768 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39769 ;;Total ram usage:       11 bytes
 39770 ;; Hardware stack levels used:    1
 39771 ;; Hardware stack levels required when called:   16
 39772 ;; This function calls:
 39773 ;;		__parse_command_long
 39774 ;;		__parse_command_short
 39775 ;; This function is called by:
 39776 ;;		_APP_DeviceCustomHIDTasks
 39777 ;; This function uses a non-reentrant model
 39778 ;;
 39779                           
 39780                           	psect	text164
 39781  010880                     __ptext164:
 39782                           	opt stack 0
 39783  010880                     _api_parse:
 39784                           	opt stack 13
 39785                           
 39786                           ;api.c: 97: uint8_t in_idx;;api.c: 98: uint8_t out_idx;;api.c: 99: uint8_t *out_idx_ptr;
      +                          ;api.c: 101: out_idx = 0;
 39787                           
 39788                           ; BSR set to: 0
 39789                           ;incstack = 0
 39790  010880  0E00               	movlw	0
 39791  010882  0100               	movlb	0	; () banked
 39792  010884  6FCD               	movwf	api_parse@out_idx& (0+255),b
 39793                           
 39794                           ; BSR set to: 0
 39795                           ;api.c: 102: out_idx_ptr = &out_idx;
 39796  010886  0ECD               	movlw	low api_parse@out_idx
 39797  010888  6FCB               	movwf	api_parse@out_idx_ptr& (0+255),b
 39798  01088A  0E00               	movlw	high api_parse@out_idx
 39799  01088C  6FCC               	movwf	(api_parse@out_idx_ptr+1)& (0+255),b
 39800                           
 39801                           ; BSR set to: 0
 39802                           ;api.c: 104: if(inBuffer[0]>0x7F)
 39803  01088E  C0C4  FFD9         	movff	api_parse@inBuffer,fsr2l
 39804  010892  C0C5  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 39805  010896  0E7F               	movlw	127
 39806  010898  64DF               	cpfsgt	indf2,c
 39807  01089A  D001               	goto	l2246
 39808  01089C  0012               	return	
 39809  01089E                     l2246:
 39810                           
 39811                           ; BSR set to: 0
 39812                           ;api.c: 109: };api.c: 111: if(inBuffer[0]==DATAREQUEST_GET_ECHO)
 39813                           
 39814                           ; BSR set to: 0
 39815  01089E  C0C4  FFD9         	movff	api_parse@inBuffer,fsr2l
 39816  0108A2  C0C5  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 39817  0108A6  0E20               	movlw	32
 39818  0108A8  18DE               	xorwf	postinc2,w,c
 39819  0108AA  B4D8               	btfsc	status,2,c
 39820  0108AC  0012               	return	
 39821                           
 39822                           ; BSR set to: 0
 39823                           ;api.c: 116: };api.c: 118: if(inBuffer[0]==DATAREQUEST_GET_COMMAND_RESPONSE)
 39824                           
 39825                           ; BSR set to: 0
 39826                           
 39827                           ; BSR set to: 0
 39828                           ;api.c: 112: {;api.c: 115: return;
 39829  0108AE  C0C4  FFD9         	movff	api_parse@inBuffer,fsr2l
 39830  0108B2  C0C5  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 39831  0108B6  50DF               	movf	indf2,w,c
 39832  0108B8  A4D8               	btfss	status,2,c
 39833  0108BA  D018               	goto	l2249
 39834                           
 39835                           ; BSR set to: 0
 39836                           ;api.c: 119: {;api.c: 121: outBuffer[0] = DATAREQUEST_GET_COMMAND_RESPONSE;
 39837  0108BC  C0C7  FFD9         	movff	api_parse@outBuffer,fsr2l
 39838  0108C0  C0C8  FFDA         	movff	api_parse@outBuffer+1,fsr2h
 39839  0108C4  0E00               	movlw	0
 39840  0108C6  6EDF               	movwf	indf2,c
 39841                           
 39842                           ; BSR set to: 0
 39843                           ;api.c: 124: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 39844  0108C8  EE20 F001          	lfsr	2,1
 39845  0108CC  51C7               	movf	api_parse@outBuffer& (0+255),w,b
 39846  0108CE  26D9               	addwf	fsr2l,f,c
 39847  0108D0  51C8               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 39848  0108D2  22DA               	addwfc	fsr2h,f,c
 39849  0108D4  0EBC               	movlw	188
 39850  0108D6  6EDF               	movwf	indf2,c
 39851                           
 39852                           ; BSR set to: 0
 39853                           ;api.c: 125: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 39854  0108D8  EE20 F002          	lfsr	2,2
 39855  0108DC  51C7               	movf	api_parse@outBuffer& (0+255),w,b
 39856  0108DE  26D9               	addwf	fsr2l,f,c
 39857  0108E0  51C8               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 39858  0108E2  22DA               	addwfc	fsr2h,f,c
 39859  0108E4  0E26               	movlw	38
 39860  0108E6  6EDF               	movwf	indf2,c
 39861                           
 39862                           ; BSR set to: 0
 39863                           ;api.c: 128: out_idx = 3;
 39864  0108E8  0E03               	movlw	3
 39865  0108EA  6FCD               	movwf	api_parse@out_idx& (0+255),b
 39866  0108EC                     l2249:
 39867                           
 39868                           ; BSR set to: 0
 39869                           ;api.c: 129: };api.c: 131: in_idx = 1;
 39870                           
 39871                           ; BSR set to: 0
 39872  0108EC  0E01               	movlw	1
 39873  0108EE  6FCE               	movwf	api_parse@in_idx& (0+255),b
 39874                           
 39875                           ;api.c: 132: while(in_idx<receivedDataLength)
 39876  0108F0  D057               	goto	l2255
 39877  0108F2                     
 39878                           ; BSR set to: 0
 39879                           ;api.c: 133: {;api.c: 135: if(inBuffer[in_idx]==COMMAND_STOP_PARSING)
 39880                           
 39881                           ; BSR set to: 0
 39882  0108F2  51CE               	movf	api_parse@in_idx& (0+255),w,b
 39883  0108F4  0D01               	mullw	1
 39884  0108F6  50F3               	movf	prodl,w,c
 39885  0108F8  25C4               	addwf	api_parse@inBuffer& (0+255),w,b
 39886  0108FA  6ED9               	movwf	fsr2l,c
 39887  0108FC  50F4               	movf	prodh,w,c
 39888  0108FE  21C5               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 39889  010900  6EDA               	movwf	fsr2h,c
 39890  010902  0E99               	movlw	153
 39891  010904  18DE               	xorwf	postinc2,w,c
 39892  010906  B4D8               	btfsc	status,2,c
 39893  010908  0012               	return	
 39894  01090A  D02F               	goto	l2253
 39895  01090C                     
 39896                           ; BSR set to: 0
 39897                           ;api.c: 143: _parse_command_short(inBuffer[in_idx]);
 39898                           
 39899                           ; BSR set to: 0
 39900  01090C  51CE               	movf	api_parse@in_idx& (0+255),w,b
 39901  01090E  0D01               	mullw	1
 39902  010910  50F3               	movf	prodl,w,c
 39903  010912  25C4               	addwf	api_parse@inBuffer& (0+255),w,b
 39904  010914  6ED9               	movwf	fsr2l,c
 39905  010916  50F4               	movf	prodh,w,c
 39906  010918  21C5               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 39907  01091A  6EDA               	movwf	fsr2h,c
 39908  01091C  50DF               	movf	indf2,w,c
 39909  01091E  EC40  F07D         	call	__parse_command_short
 39910  010922  D00B               	goto	l16811
 39911  010924                     
 39912                           ; BSR set to: 0
 39913                           ;api.c: 148: _parse_command_short(inBuffer[in_idx]);
 39914                           
 39915                           ; BSR set to: 0
 39916  010924  51CE               	movf	api_parse@in_idx& (0+255),w,b
 39917  010926  0D01               	mullw	1
 39918  010928  50F3               	movf	prodl,w,c
 39919  01092A  25C4               	addwf	api_parse@inBuffer& (0+255),w,b
 39920  01092C  6ED9               	movwf	fsr2l,c
 39921  01092E  50F4               	movf	prodh,w,c
 39922  010930  21C5               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 39923  010932  6EDA               	movwf	fsr2h,c
 39924  010934  50DF               	movf	indf2,w,c
 39925  010936  EC40  F07D         	call	__parse_command_short
 39926  01093A                     l16811:
 39927                           
 39928                           ;api.c: 149: ++in_idx;
 39929  01093A  0100               	movlb	0	; () banked
 39930  01093C  2BCE               	incf	api_parse@in_idx& (0+255),f,b
 39931                           
 39932                           ;api.c: 150: break;
 39933  01093E  D030               	goto	l2255
 39934  010940                     
 39935                           ; BSR set to: 0
 39936                           ;api.c: 153: in_idx += _parse_command_long(&inBuffer[in_idx], outBuffer, out_idx_ptr);
 39937                           
 39938                           ; BSR set to: 0
 39939  010940  51CE               	movf	api_parse@in_idx& (0+255),w,b
 39940  010942  0D01               	mullw	1
 39941  010944  50F3               	movf	prodl,w,c
 39942  010946  25C4               	addwf	api_parse@inBuffer& (0+255),w,b
 39943  010948  6FB3               	movwf	__parse_command_long@data& (0+255),b
 39944  01094A  50F4               	movf	prodh,w,c
 39945  01094C  21C5               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 39946  01094E  6FB4               	movwf	(__parse_command_long@data+1)& (0+255),b
 39947  010950  C0C7  F0B5         	movff	api_parse@outBuffer,__parse_command_long@out_buffer
 39948  010954  C0C8  F0B6         	movff	api_parse@outBuffer+1,__parse_command_long@out_buffer+1
 39949  010958  C0CB  F0B7         	movff	api_parse@out_idx_ptr,__parse_command_long@out_idx_ptr
 39950  01095C  C0CC  F0B8         	movff	api_parse@out_idx_ptr+1,__parse_command_long@out_idx_ptr+1
 39951  010960  ECA3  F0A1         	call	__parse_command_long	;wreg free
 39952  010964  0100               	movlb	0	; () banked
 39953  010966  27CE               	addwf	api_parse@in_idx& (0+255),f,b
 39954                           
 39955                           ;api.c: 154: break;
 39956  010968  D01B               	goto	l2255
 39957  01096A                     l2253:
 39958                           
 39959                           ; BSR set to: 0
 39960                           
 39961                           ; BSR set to: 0
 39962  01096A  51CE               	movf	api_parse@in_idx& (0+255),w,b
 39963  01096C  0D01               	mullw	1
 39964  01096E  50F3               	movf	prodl,w,c
 39965  010970  25C4               	addwf	api_parse@inBuffer& (0+255),w,b
 39966  010972  6ED9               	movwf	fsr2l,c
 39967  010974  50F4               	movf	prodh,w,c
 39968  010976  21C5               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 39969  010978  6EDA               	movwf	fsr2h,c
 39970  01097A  50DF               	movf	indf2,w,c
 39971  01097C  0BF0               	andlw	240
 39972  01097E  6FC9               	movwf	??_api_parse& (0+255),b
 39973  010980  6BCA               	clrf	(??_api_parse+1)& (0+255),b
 39974                           
 39975                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 39976                           ; Switch size 1, requested type "space"
 39977                           ; Number of cases is 1, Range of values is 0 to 0
 39978                           ; switch strategies available:
 39979                           ; Name         Instructions Cycles
 39980                           ; simple_byte            4     3 (average)
 39981                           ;	Chosen strategy is simple_byte
 39982  010982  51CA               	movf	(??_api_parse+1)& (0+255),w,b
 39983  010984  0A00               	xorlw	0	; case 0
 39984  010986  A4D8               	btfss	status,2,c
 39985  010988  0012               	return	
 39986                           
 39987                           ; BSR set to: 0
 39988                           ; Switch size 1, requested type "space"
 39989                           ; Number of cases is 3, Range of values is 32 to 144
 39990                           ; switch strategies available:
 39991                           ; Name         Instructions Cycles
 39992                           ; simple_byte           10     6 (average)
 39993                           ;	Chosen strategy is simple_byte
 39994  01098A  51C9               	movf	??_api_parse& (0+255),w,b
 39995  01098C  0A20               	xorlw	32	; case 32
 39996  01098E  B4D8               	btfsc	status,2,c
 39997  010990  D7BD               	goto	l2254
 39998  010992  0A10               	xorlw	16	; case 48
 39999  010994  B4D8               	btfsc	status,2,c
 40000  010996  D7C6               	goto	l2256
 40001  010998  0AA0               	xorlw	160	; case 144
 40002  01099A  A4D8               	btfss	status,2,c
 40003  01099C  0012               	return	
 40004  01099E  D7D0               	goto	l2257
 40005  0109A0                     l2255:
 40006                           
 40007                           ; BSR set to: 0
 40008                           
 40009                           ; BSR set to: 0
 40010                           
 40011                           ; BSR set to: 0
 40012  0109A0  51C6               	movf	api_parse@receivedDataLength& (0+255),w,b
 40013  0109A2  5DCE               	subwf	api_parse@in_idx& (0+255),w,b
 40014  0109A4  B0D8               	btfsc	status,0,c
 40015  0109A6  0012               	return	
 40016  0109A8  D7A4               	goto	l2251
 40017  0109AA                     __end_of_api_parse:
 40018                           	opt stack 0
 40019                           tosu	equ	0xFFF
 40020                           tosh	equ	0xFFE
 40021                           tosl	equ	0xFFD
 40022                           pclath	equ	0xFFA
 40023                           tblptru	equ	0xFF8
 40024                           tblptrh	equ	0xFF7
 40025                           tblptrl	equ	0xFF6
 40026                           tablat	equ	0xFF5
 40027                           prodh	equ	0xFF4
 40028                           prodl	equ	0xFF3
 40029                           intcon	equ	0xFF2
 40030                           indf0	equ	0xFEF
 40031                           postinc0	equ	0xFEE
 40032                           fsr0h	equ	0xFEA
 40033                           fsr0l	equ	0xFE9
 40034                           wreg	equ	0xFE8
 40035                           indf1	equ	0xFE7
 40036                           postinc1	equ	0xFE6
 40037                           postdec1	equ	0xFE5
 40038                           plusw1	equ	0xFE3
 40039                           fsr1h	equ	0xFE2
 40040                           fsr1l	equ	0xFE1
 40041                           indf2	equ	0xFDF
 40042                           postinc2	equ	0xFDE
 40043                           postdec2	equ	0xFDD
 40044                           plusw2	equ	0xFDB
 40045                           fsr2h	equ	0xFDA
 40046                           fsr2l	equ	0xFD9
 40047                           status	equ	0xFD8
 40048                           
 40049 ;; *************** function __parse_command_short *****************
 40050 ;; Defined at:
 40051 ;;		line 326 in file "api.c"
 40052 ;; Parameters:    Size  Location     Type
 40053 ;;  cmd             1    wreg     unsigned char 
 40054 ;; Auto vars:     Size  Location     Type
 40055 ;;  cmd             1   99[BANK0 ] unsigned char 
 40056 ;; Return value:  Size  Location     Type
 40057 ;;                  1    wreg      void 
 40058 ;; Registers used:
 40059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40060 ;; Tracked objects:
 40061 ;;		On entry : 0/0
 40062 ;;		On exit  : 0/0
 40063 ;;		Unchanged: 0/0
 40064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40066 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40068 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40069 ;;Total ram usage:        1 bytes
 40070 ;; Hardware stack levels used:    1
 40071 ;; Hardware stack levels required when called:   15
 40072 ;; This function calls:
 40073 ;;		_motor_clear_command_cue
 40074 ;;		_motor_go_to_steps_position
 40075 ;;		_motor_schedule_command
 40076 ;;		_motor_set_zero
 40077 ;;		_motor_stop
 40078 ;; This function is called by:
 40079 ;;		_api_parse
 40080 ;; This function uses a non-reentrant model
 40081 ;;
 40082                           
 40083                           	psect	text165
 40084  00FA80                     __ptext165:
 40085                           	opt stack 0
 40086  00FA80                     __parse_command_short:
 40087                           	opt stack 13
 40088                           
 40089                           ; BSR set to: 0
 40090                           ;incstack = 0
 40091                           ;__parse_command_short@cmd stored from wreg
 40092  00FA80  0100               	movlb	0	; () banked
 40093  00FA82  6FC3               	movwf	__parse_command_short@cmd& (0+255),b
 40094                           
 40095                           ;api.c: 328: switch(cmd)
 40096  00FA84  D07E               	goto	l2291
 40097  00FA86                     
 40098                           ;api.c: 346: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 40099  00FA86  0E01               	movlw	1
 40100  00FA88  0101               	movlb	1	; () banked
 40101  00FA8A  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40102                           
 40103                           ;api.c: 347: break;
 40104  00FA8C  0012               	return	
 40105  00FA8E                     
 40106                           ;api.c: 350: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 40107                           
 40108                           ; BSR set to: 1
 40109  00FA8E  0E11               	movlw	17
 40110  00FA90  0101               	movlb	1	; () banked
 40111  00FA92  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40112                           
 40113                           ;api.c: 351: break;
 40114  00FA94  0012               	return	
 40115  00FA96                     
 40116                           ;api.c: 354: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 40117                           
 40118                           ; BSR set to: 1
 40119  00FA96  0E31               	movlw	49
 40120  00FA98  0101               	movlb	1	; () banked
 40121  00FA9A  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40122                           
 40123                           ;api.c: 355: break;
 40124  00FA9C  0012               	return	
 40125  00FA9E                     
 40126                           ;api.c: 358: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 40127                           
 40128                           ; BSR set to: 1
 40129  00FA9E  0E51               	movlw	81
 40130  00FAA0  0101               	movlb	1	; () banked
 40131  00FAA2  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40132                           
 40133                           ;api.c: 359: break;
 40134  00FAA4  0012               	return	
 40135  00FAA6                     
 40136                           ;api.c: 362: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 40137                           
 40138                           ; BSR set to: 1
 40139  00FAA6  0E82               	movlw	130
 40140  00FAA8  0101               	movlb	1	; () banked
 40141  00FAAA  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40142                           
 40143                           ;api.c: 363: break;
 40144  00FAAC  0012               	return	
 40145  00FAAE                     
 40146                           ;api.c: 366: os.displayState = DISPLAY_STATE_ZERO_NORMAL;
 40147                           
 40148                           ; BSR set to: 1
 40149  00FAAE  0E71               	movlw	113
 40150  00FAB0  0101               	movlb	1	; () banked
 40151  00FAB2  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40152                           
 40153                           ;api.c: 367: break;
 40154  00FAB4  0012               	return	
 40155  00FAB6                     
 40156                           ;api.c: 370: motor_set_zero(MOTOR_DIRECTION_CCW);
 40157                           
 40158                           ; BSR set to: 1
 40159  00FAB6  0EFF               	movlw	255
 40160  00FAB8  EC89  F098         	call	_motor_set_zero
 40161                           
 40162                           ;api.c: 371: break;
 40163  00FABC  0012               	return	
 40164  00FABE                     
 40165                           ;api.c: 374: motor_set_zero(MOTOR_DIRECTION_CW);
 40166  00FABE  0E01               	movlw	1
 40167  00FAC0  EC89  F098         	call	_motor_set_zero
 40168                           
 40169                           ;api.c: 375: break;
 40170  00FAC4  0012               	return	
 40171  00FAC6                     
 40172                           ;api.c: 378: motor_go_to_steps_position(0);
 40173  00FAC6  0E00               	movlw	0
 40174  00FAC8  0100               	movlb	0	; () banked
 40175  00FACA  6FA7               	movwf	motor_go_to_steps_position@target_position& (0+255),b
 40176  00FACC  0E00               	movlw	0
 40177  00FACE  6FA8               	movwf	(motor_go_to_steps_position@target_position+1)& (0+255),b
 40178  00FAD0  0E00               	movlw	0
 40179  00FAD2  6FA9               	movwf	(motor_go_to_steps_position@target_position+2)& (0+255),b
 40180  00FAD4  0E00               	movlw	0
 40181  00FAD6  6FAA               	movwf	(motor_go_to_steps_position@target_position+3)& (0+255),b
 40182  00FAD8  EC65  F069         	call	_motor_go_to_steps_position	;wreg free
 40183                           
 40184                           ;api.c: 380: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 40185  00FADC  0E05               	movlw	5
 40186  00FADE  0101               	movlb	1	; () banked
 40187  00FAE0  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40188                           
 40189                           ; BSR set to: 1
 40190                           ;api.c: 381: os.divide_position = 0;
 40191  00FAE2  0E00               	movlw	0
 40192  00FAE4  6F88               	movwf	(_os+23)& (0+255),b	;volatile
 40193  00FAE6  0E00               	movlw	0
 40194  00FAE8  6F87               	movwf	(_os+22)& (0+255),b	;volatile
 40195  00FAEA                     
 40196                           ;api.c: 384: --os.encoder2Count;
 40197                           
 40198                           ; BSR set to: 1
 40199  00FAEA  0101               	movlb	1	; () banked
 40200  00FAEC  0776               	decf	(_os+5)& (0+255),f,b	;volatile
 40201                           
 40202                           ;api.c: 385: break;
 40203  00FAEE  0012               	return	
 40204  00FAF0                     
 40205                           ;api.c: 388: ++os.encoder2Count;
 40206                           
 40207                           ; BSR set to: 1
 40208  00FAF0  0101               	movlb	1	; () banked
 40209  00FAF2  2B76               	incf	(_os+5)& (0+255),f,b	;volatile
 40210                           
 40211                           ;api.c: 389: break;
 40212  00FAF4  0012               	return	
 40213  00FAF6                     
 40214                           ;api.c: 392: ++os.button2;
 40215                           
 40216                           ; BSR set to: 1
 40217  00FAF6  0101               	movlb	1	; () banked
 40218  00FAF8  2B77               	incf	(_os+6)& (0+255),f,b	;volatile
 40219                           
 40220                           ;api.c: 393: break;
 40221  00FAFA  0012               	return	
 40222  00FAFC                     
 40223                           ;api.c: 396: --os.encoder1Count;
 40224                           
 40225                           ; BSR set to: 1
 40226  00FAFC  0101               	movlb	1	; () banked
 40227  00FAFE  0774               	decf	(_os+3)& (0+255),f,b	;volatile
 40228                           
 40229                           ;api.c: 397: break;
 40230  00FB00  0012               	return	
 40231  00FB02                     
 40232                           ;api.c: 400: ++os.encoder1Count;
 40233                           
 40234                           ; BSR set to: 1
 40235  00FB02  0101               	movlb	1	; () banked
 40236  00FB04  2B74               	incf	(_os+3)& (0+255),f,b	;volatile
 40237                           
 40238                           ;api.c: 401: break;
 40239  00FB06  0012               	return	
 40240  00FB08                     
 40241                           ;api.c: 404: ++os.button1;
 40242                           
 40243                           ; BSR set to: 1
 40244  00FB08  0101               	movlb	1	; () banked
 40245  00FB0A  2B75               	incf	(_os+4)& (0+255),f,b	;volatile
 40246                           
 40247                           ;api.c: 405: break;
 40248  00FB0C  0012               	return	
 40249  00FB0E                     
 40250                           ;api.c: 408: if(!os.busy)
 40251                           
 40252                           ; BSR set to: 1
 40253  00FB0E  0101               	movlb	1	; () banked
 40254  00FB10  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 40255  00FB12  A4D8               	btfss	status,2,c
 40256  00FB14  0012               	return	
 40257                           
 40258                           ; BSR set to: 1
 40259                           ;api.c: 409: {;api.c: 410: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 40260  00FB16  0E84               	movlw	132
 40261  00FB18  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40262                           
 40263                           ; BSR set to: 1
 40264                           ;api.c: 411: motor_schedule_command(MOTOR_DIRECTION_CCW, 0, os.manual_speed);
 40265  00FB1A  0E00               	movlw	0
 40266  00FB1C  0100               	movlb	0	; () banked
 40267  00FB1E  6FA0               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 40268  00FB20  0E00               	movlw	0
 40269  00FB22  6FA1               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 40270  00FB24  0E00               	movlw	0
 40271  00FB26  6FA2               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 40272  00FB28  0E00               	movlw	0
 40273  00FB2A  6FA3               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 40274  00FB2C  C194  F0A4         	movff	_os+35,motor_schedule_command@speed	;volatile
 40275  00FB30  C195  F0A5         	movff	_os+36,motor_schedule_command@speed+1	;volatile
 40276  00FB34  0EFF               	movlw	255
 40277  00FB36  EC89  F097         	call	_motor_schedule_command
 40278                           
 40279                           ;api.c: 412: };api.c: 413: break;
 40280  00FB3A  0012               	return	
 40281  00FB3C                     
 40282                           ;api.c: 416: if(!os.busy)
 40283  00FB3C  0101               	movlb	1	; () banked
 40284  00FB3E  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 40285  00FB40  A4D8               	btfss	status,2,c
 40286  00FB42  0012               	return	
 40287                           
 40288                           ; BSR set to: 1
 40289                           ;api.c: 417: {;api.c: 418: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 40290  00FB44  0E84               	movlw	132
 40291  00FB46  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40292                           
 40293                           ; BSR set to: 1
 40294                           ;api.c: 419: motor_schedule_command(MOTOR_DIRECTION_CW, 0, os.manual_speed);
 40295  00FB48  0E00               	movlw	0
 40296  00FB4A  0100               	movlb	0	; () banked
 40297  00FB4C  6FA0               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 40298  00FB4E  0E00               	movlw	0
 40299  00FB50  6FA1               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 40300  00FB52  0E00               	movlw	0
 40301  00FB54  6FA2               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 40302  00FB56  0E00               	movlw	0
 40303  00FB58  6FA3               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 40304  00FB5A  C194  F0A4         	movff	_os+35,motor_schedule_command@speed	;volatile
 40305  00FB5E  C195  F0A5         	movff	_os+36,motor_schedule_command@speed+1	;volatile
 40306  00FB62  0E01               	movlw	1
 40307  00FB64  EC89  F097         	call	_motor_schedule_command
 40308                           
 40309                           ;api.c: 420: };api.c: 421: break;
 40310  00FB68  0012               	return	
 40311  00FB6A                     
 40312                           ;api.c: 424: if(os.busy)
 40313  00FB6A  0101               	movlb	1	; () banked
 40314  00FB6C  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 40315  00FB6E  B4D8               	btfsc	status,2,c
 40316  00FB70  0012               	return	
 40317                           
 40318                           ; BSR set to: 1
 40319                           ;api.c: 425: {;api.c: 426: motor_stop();
 40320  00FB72  EC7A  F0A7         	call	_motor_stop	;wreg free
 40321                           
 40322                           ;api.c: 427: motor_clear_command_cue();
 40323  00FB76  ECE1  F0AC         	call	_motor_clear_command_cue	;wreg free
 40324                           
 40325                           ;api.c: 428: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 40326  00FB7A  0E82               	movlw	130
 40327  00FB7C  0101               	movlb	1	; () banked
 40328  00FB7E  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40329                           
 40330                           ; BSR set to: 1
 40331                           ;api.c: 431: }
 40332                           
 40333                           ; BSR set to: 1
 40334                           ;api.c: 429: };api.c: 430: break;
 40335  00FB80  0012               	return	
 40336  00FB82                     l2291:
 40337                           
 40338                           ; BSR set to: 1
 40339  00FB82  0100               	movlb	0	; () banked
 40340  00FB84  51C3               	movf	__parse_command_short@cmd& (0+255),w,b
 40341                           
 40342                           ; Switch size 1, requested type "space"
 40343                           ; Number of cases is 18, Range of values is 32 to 56
 40344                           ; switch strategies available:
 40345                           ; Name         Instructions Cycles
 40346                           ; simple_byte           55    28 (average)
 40347                           ;	Chosen strategy is simple_byte
 40348  00FB86  0A20               	xorlw	32	; case 32
 40349  00FB88  B4D8               	btfsc	status,2,c
 40350  00FB8A  D77D               	goto	l2292
 40351  00FB8C  0A01               	xorlw	1	; case 33
 40352  00FB8E  B4D8               	btfsc	status,2,c
 40353  00FB90  D77E               	goto	l2294
 40354  00FB92  0A03               	xorlw	3	; case 34
 40355  00FB94  B4D8               	btfsc	status,2,c
 40356  00FB96  D77F               	goto	l2295
 40357  00FB98  0A01               	xorlw	1	; case 35
 40358  00FB9A  B4D8               	btfsc	status,2,c
 40359  00FB9C  D780               	goto	l2296
 40360  00FB9E  0A07               	xorlw	7	; case 36
 40361  00FBA0  B4D8               	btfsc	status,2,c
 40362  00FBA2  D781               	goto	l2297
 40363  00FBA4  0A01               	xorlw	1	; case 37
 40364  00FBA6  B4D8               	btfsc	status,2,c
 40365  00FBA8  D782               	goto	l2298
 40366  00FBAA  0A03               	xorlw	3	; case 38
 40367  00FBAC  B4D8               	btfsc	status,2,c
 40368  00FBAE  D783               	goto	l2299
 40369  00FBB0  0A01               	xorlw	1	; case 39
 40370  00FBB2  B4D8               	btfsc	status,2,c
 40371  00FBB4  D784               	goto	l2300
 40372  00FBB6  0A0F               	xorlw	15	; case 40
 40373  00FBB8  B4D8               	btfsc	status,2,c
 40374  00FBBA  D785               	goto	l2301
 40375  00FBBC  0A18               	xorlw	24	; case 48
 40376  00FBBE  B4D8               	btfsc	status,2,c
 40377  00FBC0  D794               	goto	l2302
 40378  00FBC2  0A01               	xorlw	1	; case 49
 40379  00FBC4  B4D8               	btfsc	status,2,c
 40380  00FBC6  D794               	goto	l2303
 40381  00FBC8  0A03               	xorlw	3	; case 50
 40382  00FBCA  B4D8               	btfsc	status,2,c
 40383  00FBCC  D794               	goto	l2304
 40384  00FBCE  0A01               	xorlw	1	; case 51
 40385  00FBD0  B4D8               	btfsc	status,2,c
 40386  00FBD2  D794               	goto	l2305
 40387  00FBD4  0A07               	xorlw	7	; case 52
 40388  00FBD6  B4D8               	btfsc	status,2,c
 40389  00FBD8  D794               	goto	l2306
 40390  00FBDA  0A01               	xorlw	1	; case 53
 40391  00FBDC  B4D8               	btfsc	status,2,c
 40392  00FBDE  D794               	goto	l2307
 40393  00FBE0  0A03               	xorlw	3	; case 54
 40394  00FBE2  B4D8               	btfsc	status,2,c
 40395  00FBE4  D794               	goto	l2308
 40396  00FBE6  0A01               	xorlw	1	; case 55
 40397  00FBE8  B4D8               	btfsc	status,2,c
 40398  00FBEA  D7A8               	goto	l2310
 40399  00FBEC  0A0F               	xorlw	15	; case 56
 40400  00FBEE  A4D8               	btfss	status,2,c
 40401  00FBF0  0012               	return	
 40402  00FBF2  D7BB               	goto	l2312
 40403  00FBF4                     __end_of__parse_command_short:
 40404                           	opt stack 0
 40405                           tosu	equ	0xFFF
 40406                           tosh	equ	0xFFE
 40407                           tosl	equ	0xFFD
 40408                           pclath	equ	0xFFA
 40409                           tblptru	equ	0xFF8
 40410                           tblptrh	equ	0xFF7
 40411                           tblptrl	equ	0xFF6
 40412                           tablat	equ	0xFF5
 40413                           prodh	equ	0xFF4
 40414                           prodl	equ	0xFF3
 40415                           intcon	equ	0xFF2
 40416                           indf0	equ	0xFEF
 40417                           postinc0	equ	0xFEE
 40418                           fsr0h	equ	0xFEA
 40419                           fsr0l	equ	0xFE9
 40420                           wreg	equ	0xFE8
 40421                           indf1	equ	0xFE7
 40422                           postinc1	equ	0xFE6
 40423                           postdec1	equ	0xFE5
 40424                           plusw1	equ	0xFE3
 40425                           fsr1h	equ	0xFE2
 40426                           fsr1l	equ	0xFE1
 40427                           indf2	equ	0xFDF
 40428                           postinc2	equ	0xFDE
 40429                           postdec2	equ	0xFDD
 40430                           plusw2	equ	0xFDB
 40431                           fsr2h	equ	0xFDA
 40432                           fsr2l	equ	0xFD9
 40433                           status	equ	0xFD8
 40434                           
 40435 ;; *************** function _motor_stop *****************
 40436 ;; Defined at:
 40437 ;;		line 528 in file "motor.c"
 40438 ;; Parameters:    Size  Location     Type
 40439 ;;		None
 40440 ;; Auto vars:     Size  Location     Type
 40441 ;;		None
 40442 ;; Return value:  Size  Location     Type
 40443 ;;                  1    wreg      void 
 40444 ;; Registers used:
 40445 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 40446 ;; Tracked objects:
 40447 ;;		On entry : 0/0
 40448 ;;		On exit  : 0/0
 40449 ;;		Unchanged: 0/0
 40450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40453 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40454 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40455 ;;Total ram usage:        2 bytes
 40456 ;; Hardware stack levels used:    1
 40457 ;; Hardware stack levels required when called:   10
 40458 ;; This function calls:
 40459 ;;		Nothing
 40460 ;; This function is called by:
 40461 ;;		__parse_command_short
 40462 ;;		_encoder_statemachine
 40463 ;; This function uses a non-reentrant model
 40464 ;;
 40465                           
 40466                           	psect	text166
 40467  014EF4                     __ptext166:
 40468                           	opt stack 0
 40469  014EF4                     _motor_stop:
 40470                           	opt stack 19
 40471                           
 40472                           ;motor.c: 530: motor_final_stepcount = motor_current_stepcount + motor_steps_lookup[moto
      +                          r_current_speed];
 40473                           
 40474                           ;incstack = 0
 40475  014EF4  90D8               	bcf	status,0,c
 40476  014EF6  0100               	movlb	0	; () banked
 40477  014EF8  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 40478  014EFA  6EF6               	movwf	tblptrl,c
 40479  014EFC  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 40480  014EFE  6EF7               	movwf	tblptrh,c
 40481  014F00  0E61               	movlw	low _motor_steps_lookup
 40482  014F02  26F6               	addwf	tblptrl,f,c
 40483  014F04  0E94               	movlw	high _motor_steps_lookup
 40484  014F06  22F7               	addwfc	tblptrh,f,c
 40485  014F08                     	if	1	;There are 3 active tblptr bytes
 40486  014F08  6AF8               	clrf	tblptru,c
 40487  014F0A  0E00               	movlw	low (__mediumconst shr (0+16))
 40488  014F0C  22F8               	addwfc	tblptru,f,c
 40489  014F0E                     	endif
 40490  014F0E  0009               	tblrd		*+
 40491  014F10  CFF5 F060          	movff	tablat,??_motor_stop
 40492  014F14  0009               	tblrd		*+
 40493  014F16  CFF5 F061          	movff	tablat,??_motor_stop+1
 40494  014F1A  5160               	movf	??_motor_stop& (0+255),w,b
 40495  014F1C  2458               	addwf	_motor_current_stepcount,w,c	;volatile
 40496  014F1E  0101               	movlb	1	; () banked
 40497  014F20  6F27               	movwf	_motor_final_stepcount& (0+255),b	;volatile
 40498  014F22  0100               	movlb	0	; () banked
 40499  014F24  5161               	movf	(??_motor_stop+1)& (0+255),w,b
 40500  014F26  2059               	addwfc	_motor_current_stepcount+1,w,c	;volatile
 40501  014F28  0101               	movlb	1	; () banked
 40502  014F2A  6F28               	movwf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 40503  014F2C  0E00               	movlw	0
 40504  014F2E  205A               	addwfc	_motor_current_stepcount+2,w,c	;volatile
 40505  014F30  6F29               	movwf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 40506  014F32  0E00               	movlw	0
 40507  014F34  205B               	addwfc	_motor_current_stepcount+3,w,c	;volatile
 40508  014F36  6F2A               	movwf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 40509                           
 40510                           ; BSR set to: 1
 40511  014F38  0012               	return		;funcret
 40512  014F3A                     __end_of_motor_stop:
 40513                           	opt stack 0
 40514                           tosu	equ	0xFFF
 40515                           tosh	equ	0xFFE
 40516                           tosl	equ	0xFFD
 40517                           pclath	equ	0xFFA
 40518                           tblptru	equ	0xFF8
 40519                           tblptrh	equ	0xFF7
 40520                           tblptrl	equ	0xFF6
 40521                           tablat	equ	0xFF5
 40522                           prodh	equ	0xFF4
 40523                           prodl	equ	0xFF3
 40524                           intcon	equ	0xFF2
 40525                           indf0	equ	0xFEF
 40526                           postinc0	equ	0xFEE
 40527                           fsr0h	equ	0xFEA
 40528                           fsr0l	equ	0xFE9
 40529                           wreg	equ	0xFE8
 40530                           indf1	equ	0xFE7
 40531                           postinc1	equ	0xFE6
 40532                           postdec1	equ	0xFE5
 40533                           plusw1	equ	0xFE3
 40534                           fsr1h	equ	0xFE2
 40535                           fsr1l	equ	0xFE1
 40536                           indf2	equ	0xFDF
 40537                           postinc2	equ	0xFDE
 40538                           postdec2	equ	0xFDD
 40539                           plusw2	equ	0xFDB
 40540                           fsr2h	equ	0xFDA
 40541                           fsr2l	equ	0xFD9
 40542                           status	equ	0xFD8
 40543                           
 40544 ;; *************** function _motor_set_zero *****************
 40545 ;; Defined at:
 40546 ;;		line 723 in file "motor.c"
 40547 ;; Parameters:    Size  Location     Type
 40548 ;;  direction       1    wreg     enum E6622
 40549 ;; Auto vars:     Size  Location     Type
 40550 ;;  direction       1   71[BANK0 ] enum E6622
 40551 ;; Return value:  Size  Location     Type
 40552 ;;                  1    wreg      void 
 40553 ;; Registers used:
 40554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40555 ;; Tracked objects:
 40556 ;;		On entry : 0/0
 40557 ;;		On exit  : 0/0
 40558 ;;		Unchanged: 0/0
 40559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40561 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40563 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40564 ;;Total ram usage:        1 bytes
 40565 ;; Hardware stack levels used:    1
 40566 ;; Hardware stack levels required when called:   14
 40567 ;; This function calls:
 40568 ;;		_motor_schedule_command
 40569 ;; This function is called by:
 40570 ;;		__parse_command_short
 40571 ;;		_encoder_statemachine
 40572 ;; This function uses a non-reentrant model
 40573 ;;
 40574                           
 40575                           	psect	text167
 40576  013112                     __ptext167:
 40577                           	opt stack 0
 40578  013112                     _motor_set_zero:
 40579                           	opt stack 15
 40580                           
 40581                           ; BSR set to: 1
 40582                           ;incstack = 0
 40583                           ;motor_set_zero@direction stored from wreg
 40584  013112  0100               	movlb	0	; () banked
 40585  013114  6FA7               	movwf	motor_set_zero@direction& (0+255),b
 40586                           
 40587                           ;motor.c: 725: if(config.overshoot_in_steps!=0)
 40588  013116  0101               	movlb	1	; () banked
 40589  013118  51A6               	movf	(_config+5)& (0+255),w,b
 40590  01311A  11A7               	iorwf	(_config+6)& (0+255),w,b
 40591  01311C  B4D8               	btfsc	status,2,c
 40592  01311E  D03C               	goto	l2558
 40593                           
 40594                           ; BSR set to: 1
 40595                           ;motor.c: 726: {;motor.c: 727: if(direction==MOTOR_DIRECTION_CW)
 40596  013120  0100               	movlb	0	; () banked
 40597  013122  05A7               	decf	motor_set_zero@direction& (0+255),w,b
 40598  013124  A4D8               	btfss	status,2,c
 40599  013126  D01C               	goto	l2557
 40600                           
 40601                           ; BSR set to: 0
 40602                           ;motor.c: 728: {;motor.c: 729: motor_schedule_command(MOTOR_DIRECTION_CCW, config.oversh
      +                          oot_in_steps, 0);
 40603  013128  C1A6  F0A0         	movff	_config+5,motor_schedule_command@distance_in_steps
 40604  01312C  C1A7  F0A1         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 40605  013130  6BA2               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 40606  013132  6BA3               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 40607  013134  0E00               	movlw	0
 40608  013136  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 40609  013138  0E00               	movlw	0
 40610  01313A  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 40611  01313C  0EFF               	movlw	255
 40612  01313E  EC89  F097         	call	_motor_schedule_command
 40613                           
 40614                           ;motor.c: 730: motor_schedule_command(MOTOR_DIRECTION_CW, config.overshoot_in_steps, 0);
 40615  013142  C1A6  F0A0         	movff	_config+5,motor_schedule_command@distance_in_steps
 40616  013146  C1A7  F0A1         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 40617  01314A  0100               	movlb	0	; () banked
 40618  01314C  6BA2               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 40619  01314E  6BA3               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 40620  013150  0E00               	movlw	0
 40621  013152  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 40622  013154  0E00               	movlw	0
 40623  013156  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 40624  013158  0E01               	movlw	1
 40625  01315A  EC89  F097         	call	_motor_schedule_command
 40626                           
 40627                           ;motor.c: 731: }
 40628  01315E  D01C               	goto	l2558
 40629  013160                     l2557:
 40630                           
 40631                           ;motor.c: 732: else;motor.c: 733: {;motor.c: 734: motor_schedule_command(MOTOR_DIRECTION
      +                          _CW, config.overshoot_in_steps, 0);
 40632  013160  C1A6  F0A0         	movff	_config+5,motor_schedule_command@distance_in_steps
 40633  013164  C1A7  F0A1         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 40634  013168  0100               	movlb	0	; () banked
 40635  01316A  6BA2               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 40636  01316C  6BA3               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 40637  01316E  0E00               	movlw	0
 40638  013170  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 40639  013172  0E00               	movlw	0
 40640  013174  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 40641  013176  0E01               	movlw	1
 40642  013178  EC89  F097         	call	_motor_schedule_command
 40643                           
 40644                           ;motor.c: 735: motor_schedule_command(MOTOR_DIRECTION_CCW, config.overshoot_in_steps, 0)
      +                          ;
 40645  01317C  C1A6  F0A0         	movff	_config+5,motor_schedule_command@distance_in_steps
 40646  013180  C1A7  F0A1         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 40647  013184  0100               	movlb	0	; () banked
 40648  013186  6BA2               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 40649  013188  6BA3               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 40650  01318A  0E00               	movlw	0
 40651  01318C  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 40652  01318E  0E00               	movlw	0
 40653  013190  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 40654  013192  0EFF               	movlw	255
 40655  013194  EC89  F097         	call	_motor_schedule_command
 40656  013198                     l2558:
 40657                           
 40658                           ;motor.c: 736: };motor.c: 737: };motor.c: 738: os.approach_direction = direction;
 40659  013198  C0A7  F183         	movff	motor_set_zero@direction,_os+18	;volatile
 40660                           
 40661                           ;motor.c: 739: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 40662  01319C  0E01               	movlw	1
 40663  01319E  0101               	movlb	1	; () banked
 40664  0131A0  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40665                           
 40666                           ; BSR set to: 1
 40667                           ;motor.c: 740: os.current_position_in_steps = 0;
 40668  0131A2  0E00               	movlw	0
 40669  0131A4  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 40670  0131A6  0E00               	movlw	0
 40671  0131A8  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 40672  0131AA  0E00               	movlw	0
 40673  0131AC  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 40674  0131AE  0E00               	movlw	0
 40675  0131B0  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 40676                           
 40677                           ; BSR set to: 1
 40678                           ;motor.c: 741: os.divide_position = 0;
 40679  0131B2  0E00               	movlw	0
 40680  0131B4  6F88               	movwf	(_os+23)& (0+255),b	;volatile
 40681  0131B6  0E00               	movlw	0
 40682  0131B8  6F87               	movwf	(_os+22)& (0+255),b	;volatile
 40683                           
 40684                           ; BSR set to: 1
 40685  0131BA  0012               	return		;funcret
 40686  0131BC                     __end_of_motor_set_zero:
 40687                           	opt stack 0
 40688                           tosu	equ	0xFFF
 40689                           tosh	equ	0xFFE
 40690                           tosl	equ	0xFFD
 40691                           pclath	equ	0xFFA
 40692                           tblptru	equ	0xFF8
 40693                           tblptrh	equ	0xFF7
 40694                           tblptrl	equ	0xFF6
 40695                           tablat	equ	0xFF5
 40696                           prodh	equ	0xFF4
 40697                           prodl	equ	0xFF3
 40698                           intcon	equ	0xFF2
 40699                           indf0	equ	0xFEF
 40700                           postinc0	equ	0xFEE
 40701                           fsr0h	equ	0xFEA
 40702                           fsr0l	equ	0xFE9
 40703                           wreg	equ	0xFE8
 40704                           indf1	equ	0xFE7
 40705                           postinc1	equ	0xFE6
 40706                           postdec1	equ	0xFE5
 40707                           plusw1	equ	0xFE3
 40708                           fsr1h	equ	0xFE2
 40709                           fsr1l	equ	0xFE1
 40710                           indf2	equ	0xFDF
 40711                           postinc2	equ	0xFDE
 40712                           postdec2	equ	0xFDD
 40713                           plusw2	equ	0xFDB
 40714                           fsr2h	equ	0xFDA
 40715                           fsr2l	equ	0xFD9
 40716                           status	equ	0xFD8
 40717                           
 40718 ;; *************** function _motor_go_to_steps_position *****************
 40719 ;; Defined at:
 40720 ;;		line 571 in file "motor.c"
 40721 ;; Parameters:    Size  Location     Type
 40722 ;;  target_posit    4   71[BANK0 ] unsigned long 
 40723 ;; Auto vars:     Size  Location     Type
 40724 ;;  distance_ccw    4   95[BANK0 ] unsigned long 
 40725 ;;  distance_cw     4   91[BANK0 ] unsigned long 
 40726 ;;  overhead_ccw    4   87[BANK0 ] unsigned long 
 40727 ;;  overhead_cw     4   83[BANK0 ] unsigned long 
 40728 ;; Return value:  Size  Location     Type
 40729 ;;                  1    wreg      void 
 40730 ;; Registers used:
 40731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40732 ;; Tracked objects:
 40733 ;;		On entry : 0/0
 40734 ;;		On exit  : 0/0
 40735 ;;		Unchanged: 0/0
 40736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40737 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40738 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40739 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40740 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40741 ;;Total ram usage:       28 bytes
 40742 ;; Hardware stack levels used:    1
 40743 ;; Hardware stack levels required when called:   14
 40744 ;; This function calls:
 40745 ;;		_motor_schedule_command
 40746 ;; This function is called by:
 40747 ;;		__parse_command_short
 40748 ;;		_motor_divide_jump
 40749 ;;		_motor_divide_jump_to_nearest
 40750 ;;		_encoder_statemachine
 40751 ;;		_motor_go_to_degrees_position
 40752 ;; This function uses a non-reentrant model
 40753 ;;
 40754                           
 40755                           	psect	text168
 40756  00D2CA                     __ptext168:
 40757                           	opt stack 0
 40758  00D2CA                     _motor_go_to_steps_position:
 40759                           	opt stack 15
 40760                           
 40761                           ;motor.c: 573: uint32_t distance_cw;;motor.c: 574: uint32_t overhead_cw;;motor.c: 575: u
      +                          int32_t distance_ccw;;motor.c: 576: uint32_t overhead_ccw;;motor.c: 579: if(os.busy)
 40762                           
 40763                           ; BSR set to: 1
 40764                           ;incstack = 0
 40765  00D2CA  0101               	movlb	1	; () banked
 40766  00D2CC  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 40767  00D2CE  A4D8               	btfss	status,2,c
 40768  00D2D0  0012               	return	
 40769                           
 40770                           ; BSR set to: 1
 40771                           ;motor.c: 582: };motor.c: 585: if(os.current_position_in_steps == target_position)
 40772                           
 40773                           ; BSR set to: 1
 40774                           
 40775                           ; BSR set to: 1
 40776                           ;motor.c: 580: {;motor.c: 581: return;
 40777  00D2D2  0100               	movlb	0	; () banked
 40778  00D2D4  51A7               	movf	motor_go_to_steps_position@target_position& (0+255),w,b
 40779  00D2D6  0101               	movlb	1	; () banked
 40780  00D2D8  1978               	xorwf	(_os+7)& (0+255),w,b	;volatile
 40781  00D2DA  E110               	bnz	l14999
 40782  00D2DC  0100               	movlb	0	; () banked
 40783  00D2DE  51A8               	movf	(motor_go_to_steps_position@target_position+1)& (0+255),w,b
 40784  00D2E0  0101               	movlb	1	; () banked
 40785  00D2E2  1979               	xorwf	(_os+8)& (0+255),w,b	;volatile
 40786  00D2E4  E10B               	bnz	l14999
 40787  00D2E6  0100               	movlb	0	; () banked
 40788  00D2E8  51A9               	movf	(motor_go_to_steps_position@target_position+2)& (0+255),w,b
 40789  00D2EA  0101               	movlb	1	; () banked
 40790  00D2EC  197A               	xorwf	(_os+9)& (0+255),w,b	;volatile
 40791  00D2EE  E106               	bnz	l14999
 40792  00D2F0  0100               	movlb	0	; () banked
 40793  00D2F2  51AA               	movf	(motor_go_to_steps_position@target_position+3)& (0+255),w,b
 40794  00D2F4  0101               	movlb	1	; () banked
 40795  00D2F6  197B               	xorwf	(_os+10)& (0+255),w,b	;volatile
 40796  00D2F8  B4D8               	btfsc	status,2,c
 40797  00D2FA  0012               	return	
 40798  00D2FC                     l14999:
 40799                           
 40800                           ; BSR set to: 1
 40801                           ;motor.c: 588: };motor.c: 591: overhead_cw = 0;
 40802  00D2FC  0E00               	movlw	0
 40803  00D2FE  0100               	movlb	0	; () banked
 40804  00D300  6FB3               	movwf	motor_go_to_steps_position@overhead_cw& (0+255),b
 40805  00D302  0E00               	movlw	0
 40806  00D304  6FB4               	movwf	(motor_go_to_steps_position@overhead_cw+1)& (0+255),b
 40807  00D306  0E00               	movlw	0
 40808  00D308  6FB5               	movwf	(motor_go_to_steps_position@overhead_cw+2)& (0+255),b
 40809  00D30A  0E00               	movlw	0
 40810  00D30C  6FB6               	movwf	(motor_go_to_steps_position@overhead_cw+3)& (0+255),b
 40811                           
 40812                           ; BSR set to: 0
 40813                           ;motor.c: 592: distance_cw = target_position - os.current_position_in_steps;
 40814  00D30E  C178  F0AB         	movff	_os+7,??_motor_go_to_steps_position	;volatile
 40815  00D312  C179  F0AC         	movff	_os+8,??_motor_go_to_steps_position+1	;volatile
 40816  00D316  C17A  F0AD         	movff	_os+9,??_motor_go_to_steps_position+2	;volatile
 40817  00D31A  C17B  F0AE         	movff	_os+10,??_motor_go_to_steps_position+3	;volatile
 40818  00D31E  1FAB               	comf	??_motor_go_to_steps_position& (0+255),f,b
 40819  00D320  1FAC               	comf	(??_motor_go_to_steps_position+1)& (0+255),f,b
 40820  00D322  1FAD               	comf	(??_motor_go_to_steps_position+2)& (0+255),f,b
 40821  00D324  1FAE               	comf	(??_motor_go_to_steps_position+3)& (0+255),f,b
 40822  00D326  2BAB               	incf	??_motor_go_to_steps_position& (0+255),f,b
 40823  00D328  0E00               	movlw	0
 40824  00D32A  23AC               	addwfc	(??_motor_go_to_steps_position+1)& (0+255),f,b
 40825  00D32C  23AD               	addwfc	(??_motor_go_to_steps_position+2)& (0+255),f,b
 40826  00D32E  23AE               	addwfc	(??_motor_go_to_steps_position+3)& (0+255),f,b
 40827  00D330  51A7               	movf	motor_go_to_steps_position@target_position& (0+255),w,b
 40828  00D332  25AB               	addwf	??_motor_go_to_steps_position& (0+255),w,b
 40829  00D334  6FBB               	movwf	motor_go_to_steps_position@distance_cw& (0+255),b
 40830  00D336  51A8               	movf	(motor_go_to_steps_position@target_position+1)& (0+255),w,b
 40831  00D338  21AC               	addwfc	(??_motor_go_to_steps_position+1)& (0+255),w,b
 40832  00D33A  6FBC               	movwf	(motor_go_to_steps_position@distance_cw+1)& (0+255),b
 40833  00D33C  51A9               	movf	(motor_go_to_steps_position@target_position+2)& (0+255),w,b
 40834  00D33E  21AD               	addwfc	(??_motor_go_to_steps_position+2)& (0+255),w,b
 40835  00D340  6FBD               	movwf	(motor_go_to_steps_position@distance_cw+2)& (0+255),b
 40836  00D342  51AA               	movf	(motor_go_to_steps_position@target_position+3)& (0+255),w,b
 40837  00D344  21AE               	addwfc	(??_motor_go_to_steps_position+3)& (0+255),w,b
 40838  00D346  6FBE               	movwf	(motor_go_to_steps_position@distance_cw+3)& (0+255),b
 40839                           
 40840                           ; BSR set to: 0
 40841                           ;motor.c: 593: if(distance_cw>config.full_circle_in_steps)
 40842  00D348  51BB               	movf	motor_go_to_steps_position@distance_cw& (0+255),w,b
 40843  00D34A  0101               	movlb	1	; () banked
 40844  00D34C  5DA1               	subwf	_config& (0+255),w,b
 40845  00D34E  0100               	movlb	0	; () banked
 40846  00D350  51BC               	movf	(motor_go_to_steps_position@distance_cw+1)& (0+255),w,b
 40847  00D352  0101               	movlb	1	; () banked
 40848  00D354  59A2               	subwfb	(_config+1)& (0+255),w,b
 40849  00D356  0100               	movlb	0	; () banked
 40850  00D358  51BD               	movf	(motor_go_to_steps_position@distance_cw+2)& (0+255),w,b
 40851  00D35A  0101               	movlb	1	; () banked
 40852  00D35C  59A3               	subwfb	(_config+2)& (0+255),w,b
 40853  00D35E  0100               	movlb	0	; () banked
 40854  00D360  51BE               	movf	(motor_go_to_steps_position@distance_cw+3)& (0+255),w,b
 40855  00D362  0101               	movlb	1	; () banked
 40856  00D364  59A4               	subwfb	(_config+3)& (0+255),w,b
 40857  00D366  B0D8               	btfsc	status,0,c
 40858  00D368  D00F               	goto	l2526
 40859                           
 40860                           ; BSR set to: 1
 40861                           ;motor.c: 594: {;motor.c: 595: distance_cw += config.full_circle_in_steps;
 40862  00D36A  51A1               	movf	_config& (0+255),w,b
 40863  00D36C  0100               	movlb	0	; () banked
 40864  00D36E  27BB               	addwf	motor_go_to_steps_position@distance_cw& (0+255),f,b
 40865  00D370  0101               	movlb	1	; () banked
 40866  00D372  51A2               	movf	(_config+1)& (0+255),w,b
 40867  00D374  0100               	movlb	0	; () banked
 40868  00D376  23BC               	addwfc	(motor_go_to_steps_position@distance_cw+1)& (0+255),f,b
 40869  00D378  0101               	movlb	1	; () banked
 40870  00D37A  51A3               	movf	(_config+2)& (0+255),w,b
 40871  00D37C  0100               	movlb	0	; () banked
 40872  00D37E  23BD               	addwfc	(motor_go_to_steps_position@distance_cw+2)& (0+255),f,b
 40873  00D380  0101               	movlb	1	; () banked
 40874  00D382  51A4               	movf	(_config+3)& (0+255),w,b
 40875  00D384  0100               	movlb	0	; () banked
 40876  00D386  23BE               	addwfc	(motor_go_to_steps_position@distance_cw+3)& (0+255),f,b
 40877  00D388                     l2526:
 40878                           
 40879                           ;motor.c: 596: };motor.c: 597: if(os.approach_direction==MOTOR_DIRECTION_CCW)
 40880  00D388  0101               	movlb	1	; () banked
 40881  00D38A  2983               	incf	(_os+18)& (0+255),w,b	;volatile
 40882  00D38C  A4D8               	btfss	status,2,c
 40883  00D38E  D023               	goto	l2527
 40884                           
 40885                           ; BSR set to: 1
 40886                           ;motor.c: 598: {;motor.c: 599: distance_cw += config.overshoot_in_steps;
 40887  00D390  51A6               	movf	(_config+5)& (0+255),w,b
 40888  00D392  0100               	movlb	0	; () banked
 40889  00D394  27BB               	addwf	motor_go_to_steps_position@distance_cw& (0+255),f,b
 40890  00D396  0101               	movlb	1	; () banked
 40891  00D398  51A7               	movf	(_config+6)& (0+255),w,b
 40892  00D39A  0100               	movlb	0	; () banked
 40893  00D39C  23BC               	addwfc	(motor_go_to_steps_position@distance_cw+1)& (0+255),f,b
 40894  00D39E  0E00               	movlw	0
 40895  00D3A0  23BD               	addwfc	(motor_go_to_steps_position@distance_cw+2)& (0+255),f,b
 40896  00D3A2  0E00               	movlw	0
 40897  00D3A4  23BE               	addwfc	(motor_go_to_steps_position@distance_cw+3)& (0+255),f,b
 40898                           
 40899                           ;motor.c: 600: overhead_cw += config.overshoot_in_steps;
 40900  00D3A6  0101               	movlb	1	; () banked
 40901  00D3A8  51A6               	movf	(_config+5)& (0+255),w,b
 40902  00D3AA  0100               	movlb	0	; () banked
 40903  00D3AC  27B3               	addwf	motor_go_to_steps_position@overhead_cw& (0+255),f,b
 40904  00D3AE  0101               	movlb	1	; () banked
 40905  00D3B0  51A7               	movf	(_config+6)& (0+255),w,b
 40906  00D3B2  0100               	movlb	0	; () banked
 40907  00D3B4  23B4               	addwfc	(motor_go_to_steps_position@overhead_cw+1)& (0+255),f,b
 40908  00D3B6  0E00               	movlw	0
 40909  00D3B8  23B5               	addwfc	(motor_go_to_steps_position@overhead_cw+2)& (0+255),f,b
 40910  00D3BA  0E00               	movlw	0
 40911  00D3BC  23B6               	addwfc	(motor_go_to_steps_position@overhead_cw+3)& (0+255),f,b
 40912                           
 40913                           ;motor.c: 601: overhead_cw += config.overshoot_cost_in_steps;
 40914  00D3BE  0101               	movlb	1	; () banked
 40915  00D3C0  51A8               	movf	(_config+7)& (0+255),w,b
 40916  00D3C2  0100               	movlb	0	; () banked
 40917  00D3C4  27B3               	addwf	motor_go_to_steps_position@overhead_cw& (0+255),f,b
 40918  00D3C6  0101               	movlb	1	; () banked
 40919  00D3C8  51A9               	movf	(_config+8)& (0+255),w,b
 40920  00D3CA  0100               	movlb	0	; () banked
 40921  00D3CC  23B4               	addwfc	(motor_go_to_steps_position@overhead_cw+1)& (0+255),f,b
 40922  00D3CE  0E00               	movlw	0
 40923  00D3D0  23B5               	addwfc	(motor_go_to_steps_position@overhead_cw+2)& (0+255),f,b
 40924  00D3D2  0E00               	movlw	0
 40925  00D3D4  23B6               	addwfc	(motor_go_to_steps_position@overhead_cw+3)& (0+255),f,b
 40926  00D3D6                     l2527:
 40927                           
 40928                           ;motor.c: 602: };motor.c: 605: overhead_ccw = 0;
 40929                           
 40930                           ; BSR set to: 0
 40931  00D3D6  0E00               	movlw	0
 40932  00D3D8  0100               	movlb	0	; () banked
 40933  00D3DA  6FB7               	movwf	motor_go_to_steps_position@overhead_ccw& (0+255),b
 40934  00D3DC  0E00               	movlw	0
 40935  00D3DE  6FB8               	movwf	(motor_go_to_steps_position@overhead_ccw+1)& (0+255),b
 40936  00D3E0  0E00               	movlw	0
 40937  00D3E2  6FB9               	movwf	(motor_go_to_steps_position@overhead_ccw+2)& (0+255),b
 40938  00D3E4  0E00               	movlw	0
 40939  00D3E6  6FBA               	movwf	(motor_go_to_steps_position@overhead_ccw+3)& (0+255),b
 40940                           
 40941                           ; BSR set to: 0
 40942                           ;motor.c: 606: distance_ccw = os.current_position_in_steps - target_position;
 40943  00D3E8  C0A7  F0AB         	movff	motor_go_to_steps_position@target_position,??_motor_go_to_steps_position
 40944  00D3EC  C0A8  F0AC         	movff	motor_go_to_steps_position@target_position+1,??_motor_go_to_steps_position+1
 40945  00D3F0  C0A9  F0AD         	movff	motor_go_to_steps_position@target_position+2,??_motor_go_to_steps_position+2
 40946  00D3F4  C0AA  F0AE         	movff	motor_go_to_steps_position@target_position+3,??_motor_go_to_steps_position+3
 40947  00D3F8  1FAB               	comf	??_motor_go_to_steps_position& (0+255),f,b
 40948  00D3FA  1FAC               	comf	(??_motor_go_to_steps_position+1)& (0+255),f,b
 40949  00D3FC  1FAD               	comf	(??_motor_go_to_steps_position+2)& (0+255),f,b
 40950  00D3FE  1FAE               	comf	(??_motor_go_to_steps_position+3)& (0+255),f,b
 40951  00D400  2BAB               	incf	??_motor_go_to_steps_position& (0+255),f,b
 40952  00D402  0E00               	movlw	0
 40953  00D404  23AC               	addwfc	(??_motor_go_to_steps_position+1)& (0+255),f,b
 40954  00D406  23AD               	addwfc	(??_motor_go_to_steps_position+2)& (0+255),f,b
 40955  00D408  23AE               	addwfc	(??_motor_go_to_steps_position+3)& (0+255),f,b
 40956  00D40A  0101               	movlb	1	; () banked
 40957  00D40C  5178               	movf	(_os+7)& (0+255),w,b	;volatile
 40958  00D40E  0100               	movlb	0	; () banked
 40959  00D410  25AB               	addwf	??_motor_go_to_steps_position& (0+255),w,b
 40960  00D412  6FBF               	movwf	motor_go_to_steps_position@distance_ccw& (0+255),b
 40961  00D414  0101               	movlb	1	; () banked
 40962  00D416  5179               	movf	(_os+8)& (0+255),w,b	;volatile
 40963  00D418  0100               	movlb	0	; () banked
 40964  00D41A  21AC               	addwfc	(??_motor_go_to_steps_position+1)& (0+255),w,b
 40965  00D41C  6FC0               	movwf	(motor_go_to_steps_position@distance_ccw+1)& (0+255),b
 40966  00D41E  0101               	movlb	1	; () banked
 40967  00D420  517A               	movf	(_os+9)& (0+255),w,b	;volatile
 40968  00D422  0100               	movlb	0	; () banked
 40969  00D424  21AD               	addwfc	(??_motor_go_to_steps_position+2)& (0+255),w,b
 40970  00D426  6FC1               	movwf	(motor_go_to_steps_position@distance_ccw+2)& (0+255),b
 40971  00D428  0101               	movlb	1	; () banked
 40972  00D42A  517B               	movf	(_os+10)& (0+255),w,b	;volatile
 40973  00D42C  0100               	movlb	0	; () banked
 40974  00D42E  21AE               	addwfc	(??_motor_go_to_steps_position+3)& (0+255),w,b
 40975  00D430  6FC2               	movwf	(motor_go_to_steps_position@distance_ccw+3)& (0+255),b
 40976                           
 40977                           ; BSR set to: 0
 40978                           ;motor.c: 607: if(distance_ccw>config.full_circle_in_steps)
 40979  00D432  51BF               	movf	motor_go_to_steps_position@distance_ccw& (0+255),w,b
 40980  00D434  0101               	movlb	1	; () banked
 40981  00D436  5DA1               	subwf	_config& (0+255),w,b
 40982  00D438  0100               	movlb	0	; () banked
 40983  00D43A  51C0               	movf	(motor_go_to_steps_position@distance_ccw+1)& (0+255),w,b
 40984  00D43C  0101               	movlb	1	; () banked
 40985  00D43E  59A2               	subwfb	(_config+1)& (0+255),w,b
 40986  00D440  0100               	movlb	0	; () banked
 40987  00D442  51C1               	movf	(motor_go_to_steps_position@distance_ccw+2)& (0+255),w,b
 40988  00D444  0101               	movlb	1	; () banked
 40989  00D446  59A3               	subwfb	(_config+2)& (0+255),w,b
 40990  00D448  0100               	movlb	0	; () banked
 40991  00D44A  51C2               	movf	(motor_go_to_steps_position@distance_ccw+3)& (0+255),w,b
 40992  00D44C  0101               	movlb	1	; () banked
 40993  00D44E  59A4               	subwfb	(_config+3)& (0+255),w,b
 40994  00D450  B0D8               	btfsc	status,0,c
 40995  00D452  D00F               	goto	l2528
 40996                           
 40997                           ; BSR set to: 1
 40998                           ;motor.c: 608: {;motor.c: 609: distance_ccw += config.full_circle_in_steps;
 40999  00D454  51A1               	movf	_config& (0+255),w,b
 41000  00D456  0100               	movlb	0	; () banked
 41001  00D458  27BF               	addwf	motor_go_to_steps_position@distance_ccw& (0+255),f,b
 41002  00D45A  0101               	movlb	1	; () banked
 41003  00D45C  51A2               	movf	(_config+1)& (0+255),w,b
 41004  00D45E  0100               	movlb	0	; () banked
 41005  00D460  23C0               	addwfc	(motor_go_to_steps_position@distance_ccw+1)& (0+255),f,b
 41006  00D462  0101               	movlb	1	; () banked
 41007  00D464  51A3               	movf	(_config+2)& (0+255),w,b
 41008  00D466  0100               	movlb	0	; () banked
 41009  00D468  23C1               	addwfc	(motor_go_to_steps_position@distance_ccw+2)& (0+255),f,b
 41010  00D46A  0101               	movlb	1	; () banked
 41011  00D46C  51A4               	movf	(_config+3)& (0+255),w,b
 41012  00D46E  0100               	movlb	0	; () banked
 41013  00D470  23C2               	addwfc	(motor_go_to_steps_position@distance_ccw+3)& (0+255),f,b
 41014  00D472                     l2528:
 41015                           
 41016                           ;motor.c: 610: };motor.c: 611: if(os.approach_direction==MOTOR_DIRECTION_CW)
 41017  00D472  0101               	movlb	1	; () banked
 41018  00D474  0583               	decf	(_os+18)& (0+255),w,b	;volatile
 41019  00D476  A4D8               	btfss	status,2,c
 41020  00D478  D023               	goto	l2529
 41021                           
 41022                           ; BSR set to: 1
 41023                           ;motor.c: 612: {;motor.c: 613: distance_ccw += config.overshoot_in_steps;
 41024  00D47A  51A6               	movf	(_config+5)& (0+255),w,b
 41025  00D47C  0100               	movlb	0	; () banked
 41026  00D47E  27BF               	addwf	motor_go_to_steps_position@distance_ccw& (0+255),f,b
 41027  00D480  0101               	movlb	1	; () banked
 41028  00D482  51A7               	movf	(_config+6)& (0+255),w,b
 41029  00D484  0100               	movlb	0	; () banked
 41030  00D486  23C0               	addwfc	(motor_go_to_steps_position@distance_ccw+1)& (0+255),f,b
 41031  00D488  0E00               	movlw	0
 41032  00D48A  23C1               	addwfc	(motor_go_to_steps_position@distance_ccw+2)& (0+255),f,b
 41033  00D48C  0E00               	movlw	0
 41034  00D48E  23C2               	addwfc	(motor_go_to_steps_position@distance_ccw+3)& (0+255),f,b
 41035                           
 41036                           ;motor.c: 614: overhead_ccw += config.overshoot_in_steps;
 41037  00D490  0101               	movlb	1	; () banked
 41038  00D492  51A6               	movf	(_config+5)& (0+255),w,b
 41039  00D494  0100               	movlb	0	; () banked
 41040  00D496  27B7               	addwf	motor_go_to_steps_position@overhead_ccw& (0+255),f,b
 41041  00D498  0101               	movlb	1	; () banked
 41042  00D49A  51A7               	movf	(_config+6)& (0+255),w,b
 41043  00D49C  0100               	movlb	0	; () banked
 41044  00D49E  23B8               	addwfc	(motor_go_to_steps_position@overhead_ccw+1)& (0+255),f,b
 41045  00D4A0  0E00               	movlw	0
 41046  00D4A2  23B9               	addwfc	(motor_go_to_steps_position@overhead_ccw+2)& (0+255),f,b
 41047  00D4A4  0E00               	movlw	0
 41048  00D4A6  23BA               	addwfc	(motor_go_to_steps_position@overhead_ccw+3)& (0+255),f,b
 41049                           
 41050                           ;motor.c: 615: overhead_ccw += config.overshoot_cost_in_steps;
 41051  00D4A8  0101               	movlb	1	; () banked
 41052  00D4AA  51A8               	movf	(_config+7)& (0+255),w,b
 41053  00D4AC  0100               	movlb	0	; () banked
 41054  00D4AE  27B7               	addwf	motor_go_to_steps_position@overhead_ccw& (0+255),f,b
 41055  00D4B0  0101               	movlb	1	; () banked
 41056  00D4B2  51A9               	movf	(_config+8)& (0+255),w,b
 41057  00D4B4  0100               	movlb	0	; () banked
 41058  00D4B6  23B8               	addwfc	(motor_go_to_steps_position@overhead_ccw+1)& (0+255),f,b
 41059  00D4B8  0E00               	movlw	0
 41060  00D4BA  23B9               	addwfc	(motor_go_to_steps_position@overhead_ccw+2)& (0+255),f,b
 41061  00D4BC  0E00               	movlw	0
 41062  00D4BE  23BA               	addwfc	(motor_go_to_steps_position@overhead_ccw+3)& (0+255),f,b
 41063  00D4C0                     l2529:
 41064                           
 41065                           ;motor.c: 616: };motor.c: 619: if((distance_cw+overhead_cw) < (distance_ccw+overhead_ccw
      +                          ))
 41066                           
 41067                           ; BSR set to: 0
 41068  00D4C0  0100               	movlb	0	; () banked
 41069  00D4C2  51B7               	movf	motor_go_to_steps_position@overhead_ccw& (0+255),w,b
 41070  00D4C4  25BF               	addwf	motor_go_to_steps_position@distance_ccw& (0+255),w,b
 41071  00D4C6  6FAB               	movwf	??_motor_go_to_steps_position& (0+255),b
 41072  00D4C8  51B8               	movf	(motor_go_to_steps_position@overhead_ccw+1)& (0+255),w,b
 41073  00D4CA  21C0               	addwfc	(motor_go_to_steps_position@distance_ccw+1)& (0+255),w,b
 41074  00D4CC  6FAC               	movwf	(??_motor_go_to_steps_position+1)& (0+255),b
 41075  00D4CE  51B9               	movf	(motor_go_to_steps_position@overhead_ccw+2)& (0+255),w,b
 41076  00D4D0  21C1               	addwfc	(motor_go_to_steps_position@distance_ccw+2)& (0+255),w,b
 41077  00D4D2  6FAD               	movwf	(??_motor_go_to_steps_position+2)& (0+255),b
 41078  00D4D4  51BA               	movf	(motor_go_to_steps_position@overhead_ccw+3)& (0+255),w,b
 41079  00D4D6  21C2               	addwfc	(motor_go_to_steps_position@distance_ccw+3)& (0+255),w,b
 41080  00D4D8  6FAE               	movwf	(??_motor_go_to_steps_position+3)& (0+255),b
 41081  00D4DA  51B3               	movf	motor_go_to_steps_position@overhead_cw& (0+255),w,b
 41082  00D4DC  25BB               	addwf	motor_go_to_steps_position@distance_cw& (0+255),w,b
 41083  00D4DE  6FAF               	movwf	(??_motor_go_to_steps_position+4)& (0+255),b
 41084  00D4E0  51B4               	movf	(motor_go_to_steps_position@overhead_cw+1)& (0+255),w,b
 41085  00D4E2  21BC               	addwfc	(motor_go_to_steps_position@distance_cw+1)& (0+255),w,b
 41086  00D4E4  6FB0               	movwf	(??_motor_go_to_steps_position+5)& (0+255),b
 41087  00D4E6  51B5               	movf	(motor_go_to_steps_position@overhead_cw+2)& (0+255),w,b
 41088  00D4E8  21BD               	addwfc	(motor_go_to_steps_position@distance_cw+2)& (0+255),w,b
 41089  00D4EA  6FB1               	movwf	(??_motor_go_to_steps_position+6)& (0+255),b
 41090  00D4EC  51B6               	movf	(motor_go_to_steps_position@overhead_cw+3)& (0+255),w,b
 41091  00D4EE  21BE               	addwfc	(motor_go_to_steps_position@distance_cw+3)& (0+255),w,b
 41092  00D4F0  6FB2               	movwf	(??_motor_go_to_steps_position+7)& (0+255),b
 41093  00D4F2  51AB               	movf	??_motor_go_to_steps_position& (0+255),w,b
 41094  00D4F4  5DAF               	subwf	(??_motor_go_to_steps_position+4)& (0+255),w,b
 41095  00D4F6  51AC               	movf	(??_motor_go_to_steps_position+1)& (0+255),w,b
 41096  00D4F8  59B0               	subwfb	(??_motor_go_to_steps_position+5)& (0+255),w,b
 41097  00D4FA  51AD               	movf	(??_motor_go_to_steps_position+2)& (0+255),w,b
 41098  00D4FC  59B1               	subwfb	(??_motor_go_to_steps_position+6)& (0+255),w,b
 41099  00D4FE  51AE               	movf	(??_motor_go_to_steps_position+3)& (0+255),w,b
 41100  00D500  59B2               	subwfb	(??_motor_go_to_steps_position+7)& (0+255),w,b
 41101  00D502  B0D8               	btfsc	status,0,c
 41102  00D504  D039               	goto	l2530
 41103                           
 41104                           ; BSR set to: 0
 41105                           ;motor.c: 620: {;motor.c: 621: if(os.approach_direction==MOTOR_DIRECTION_CW)
 41106  00D506  0101               	movlb	1	; () banked
 41107  00D508  0583               	decf	(_os+18)& (0+255),w,b	;volatile
 41108  00D50A  A4D8               	btfss	status,2,c
 41109  00D50C  D011               	goto	l2531
 41110                           
 41111                           ; BSR set to: 1
 41112                           ;motor.c: 622: {;motor.c: 624: motor_schedule_command(MOTOR_DIRECTION_CW, distance_cw, 0
      +                          );
 41113  00D50E  C0BB  F0A0         	movff	motor_go_to_steps_position@distance_cw,motor_schedule_command@distance_in_steps
 41114  00D512  C0BC  F0A1         	movff	motor_go_to_steps_position@distance_cw+1,motor_schedule_command@distance_in_steps
      +                          +1
 41115  00D516  C0BD  F0A2         	movff	motor_go_to_steps_position@distance_cw+2,motor_schedule_command@distance_in_steps
      +                          +2
 41116  00D51A  C0BE  F0A3         	movff	motor_go_to_steps_position@distance_cw+3,motor_schedule_command@distance_in_steps
      +                          +3
 41117  00D51E  0E00               	movlw	0
 41118  00D520  0100               	movlb	0	; () banked
 41119  00D522  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 41120  00D524  0E00               	movlw	0
 41121  00D526  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 41122  00D528  0E01               	movlw	1
 41123  00D52A  EC89  F097         	call	_motor_schedule_command
 41124                           
 41125                           ;motor.c: 625: }
 41126  00D52E  0012               	return	
 41127  00D530                     l2531:
 41128                           
 41129                           ;motor.c: 626: else;motor.c: 627: {;motor.c: 629: motor_schedule_command(MOTOR_DIRECTION
      +                          _CW, distance_cw, 0);
 41130  00D530  C0BB  F0A0         	movff	motor_go_to_steps_position@distance_cw,motor_schedule_command@distance_in_steps
 41131  00D534  C0BC  F0A1         	movff	motor_go_to_steps_position@distance_cw+1,motor_schedule_command@distance_in_steps
      +                          +1
 41132  00D538  C0BD  F0A2         	movff	motor_go_to_steps_position@distance_cw+2,motor_schedule_command@distance_in_steps
      +                          +2
 41133  00D53C  C0BE  F0A3         	movff	motor_go_to_steps_position@distance_cw+3,motor_schedule_command@distance_in_steps
      +                          +3
 41134  00D540  0E00               	movlw	0
 41135  00D542  0100               	movlb	0	; () banked
 41136  00D544  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 41137  00D546  0E00               	movlw	0
 41138  00D548  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 41139  00D54A  0E01               	movlw	1
 41140  00D54C  EC89  F097         	call	_motor_schedule_command
 41141                           
 41142                           ;motor.c: 630: if(config.overshoot_in_steps!=0)
 41143  00D550  0101               	movlb	1	; () banked
 41144  00D552  51A6               	movf	(_config+5)& (0+255),w,b
 41145  00D554  11A7               	iorwf	(_config+6)& (0+255),w,b
 41146  00D556  B4D8               	btfsc	status,2,c
 41147  00D558  0012               	return	
 41148                           
 41149                           ; BSR set to: 1
 41150                           ;motor.c: 631: {;motor.c: 632: motor_schedule_command(MOTOR_DIRECTION_CCW, config.oversh
      +                          oot_in_steps, 0);
 41151  00D55A  C1A6  F0A0         	movff	_config+5,motor_schedule_command@distance_in_steps
 41152  00D55E  C1A7  F0A1         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 41153  00D562  0100               	movlb	0	; () banked
 41154  00D564  6BA2               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 41155  00D566  6BA3               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 41156  00D568  0E00               	movlw	0
 41157  00D56A  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 41158  00D56C  0E00               	movlw	0
 41159  00D56E  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 41160  00D570  0EFF               	movlw	255
 41161  00D572  EC89  F097         	call	_motor_schedule_command
 41162                           
 41163                           ;motor.c: 633: };motor.c: 634: };motor.c: 635: }
 41164  00D576  0012               	return	
 41165  00D578                     l2530:
 41166                           
 41167                           ;motor.c: 636: else;motor.c: 637: {;motor.c: 638: if(os.approach_direction==MOTOR_DIRECT
      +                          ION_CCW)
 41168  00D578  0101               	movlb	1	; () banked
 41169  00D57A  2983               	incf	(_os+18)& (0+255),w,b	;volatile
 41170  00D57C  A4D8               	btfss	status,2,c
 41171  00D57E  D011               	goto	l2535
 41172                           
 41173                           ; BSR set to: 1
 41174                           ;motor.c: 639: {;motor.c: 641: motor_schedule_command(MOTOR_DIRECTION_CCW, distance_ccw,
      +                           0);
 41175  00D580  C0BF  F0A0         	movff	motor_go_to_steps_position@distance_ccw,motor_schedule_command@distance_in_steps
 41176  00D584  C0C0  F0A1         	movff	motor_go_to_steps_position@distance_ccw+1,motor_schedule_command@distance_in_step
      +                          s+1
 41177  00D588  C0C1  F0A2         	movff	motor_go_to_steps_position@distance_ccw+2,motor_schedule_command@distance_in_step
      +                          s+2
 41178  00D58C  C0C2  F0A3         	movff	motor_go_to_steps_position@distance_ccw+3,motor_schedule_command@distance_in_step
      +                          s+3
 41179  00D590  0E00               	movlw	0
 41180  00D592  0100               	movlb	0	; () banked
 41181  00D594  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 41182  00D596  0E00               	movlw	0
 41183  00D598  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 41184  00D59A  0EFF               	movlw	255
 41185  00D59C  EC89  F097         	call	_motor_schedule_command
 41186                           
 41187                           ;motor.c: 642: }
 41188  00D5A0  0012               	return	
 41189  00D5A2                     l2535:
 41190                           
 41191                           ;motor.c: 643: else;motor.c: 644: {;motor.c: 646: motor_schedule_command(MOTOR_DIRECTION
      +                          _CCW, distance_ccw, 0);
 41192  00D5A2  C0BF  F0A0         	movff	motor_go_to_steps_position@distance_ccw,motor_schedule_command@distance_in_steps
 41193  00D5A6  C0C0  F0A1         	movff	motor_go_to_steps_position@distance_ccw+1,motor_schedule_command@distance_in_step
      +                          s+1
 41194  00D5AA  C0C1  F0A2         	movff	motor_go_to_steps_position@distance_ccw+2,motor_schedule_command@distance_in_step
      +                          s+2
 41195  00D5AE  C0C2  F0A3         	movff	motor_go_to_steps_position@distance_ccw+3,motor_schedule_command@distance_in_step
      +                          s+3
 41196  00D5B2  0E00               	movlw	0
 41197  00D5B4  0100               	movlb	0	; () banked
 41198  00D5B6  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 41199  00D5B8  0E00               	movlw	0
 41200  00D5BA  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 41201  00D5BC  0EFF               	movlw	255
 41202  00D5BE  EC89  F097         	call	_motor_schedule_command
 41203                           
 41204                           ;motor.c: 647: if(config.overshoot_in_steps!=0)
 41205  00D5C2  0101               	movlb	1	; () banked
 41206  00D5C4  51A6               	movf	(_config+5)& (0+255),w,b
 41207  00D5C6  11A7               	iorwf	(_config+6)& (0+255),w,b
 41208  00D5C8  B4D8               	btfsc	status,2,c
 41209  00D5CA  0012               	return	
 41210                           
 41211                           ; BSR set to: 1
 41212                           ;motor.c: 648: {;motor.c: 649: motor_schedule_command(MOTOR_DIRECTION_CW, config.oversho
      +                          ot_in_steps, 0);
 41213  00D5CC  C1A6  F0A0         	movff	_config+5,motor_schedule_command@distance_in_steps
 41214  00D5D0  C1A7  F0A1         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 41215  00D5D4  0100               	movlb	0	; () banked
 41216  00D5D6  6BA2               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 41217  00D5D8  6BA3               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 41218  00D5DA  0E00               	movlw	0
 41219  00D5DC  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 41220  00D5DE  0E00               	movlw	0
 41221  00D5E0  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 41222  00D5E2  0E01               	movlw	1
 41223  00D5E4  EC89  F097         	call	_motor_schedule_command
 41224  00D5E8  0012               	return	
 41225  00D5EA                     __end_of_motor_go_to_steps_position:
 41226                           	opt stack 0
 41227                           tosu	equ	0xFFF
 41228                           tosh	equ	0xFFE
 41229                           tosl	equ	0xFFD
 41230                           pclath	equ	0xFFA
 41231                           tblptru	equ	0xFF8
 41232                           tblptrh	equ	0xFF7
 41233                           tblptrl	equ	0xFF6
 41234                           tablat	equ	0xFF5
 41235                           prodh	equ	0xFF4
 41236                           prodl	equ	0xFF3
 41237                           intcon	equ	0xFF2
 41238                           indf0	equ	0xFEF
 41239                           postinc0	equ	0xFEE
 41240                           fsr0h	equ	0xFEA
 41241                           fsr0l	equ	0xFE9
 41242                           wreg	equ	0xFE8
 41243                           indf1	equ	0xFE7
 41244                           postinc1	equ	0xFE6
 41245                           postdec1	equ	0xFE5
 41246                           plusw1	equ	0xFE3
 41247                           fsr1h	equ	0xFE2
 41248                           fsr1l	equ	0xFE1
 41249                           indf2	equ	0xFDF
 41250                           postinc2	equ	0xFDE
 41251                           postdec2	equ	0xFDD
 41252                           plusw2	equ	0xFDB
 41253                           fsr2h	equ	0xFDA
 41254                           fsr2l	equ	0xFD9
 41255                           status	equ	0xFD8
 41256                           
 41257 ;; *************** function _motor_clear_command_cue *****************
 41258 ;; Defined at:
 41259 ;;		line 153 in file "motor.c"
 41260 ;; Parameters:    Size  Location     Type
 41261 ;;		None
 41262 ;; Auto vars:     Size  Location     Type
 41263 ;;		None
 41264 ;; Return value:  Size  Location     Type
 41265 ;;                  1    wreg      void 
 41266 ;; Registers used:
 41267 ;;		None
 41268 ;; Tracked objects:
 41269 ;;		On entry : 0/0
 41270 ;;		On exit  : 0/0
 41271 ;;		Unchanged: 0/0
 41272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41277 ;;Total ram usage:        0 bytes
 41278 ;; Hardware stack levels used:    1
 41279 ;; Hardware stack levels required when called:   10
 41280 ;; This function calls:
 41281 ;;		Nothing
 41282 ;; This function is called by:
 41283 ;;		__parse_command_short
 41284 ;; This function uses a non-reentrant model
 41285 ;;
 41286                           
 41287                           	psect	text169
 41288  0159C2                     __ptext169:
 41289                           	opt stack 0
 41290  0159C2                     _motor_clear_command_cue:
 41291                           	opt stack 17
 41292                           
 41293                           ;motor.c: 156: motor_cue_write_index = motor_cue_read_index;
 41294                           
 41295                           ;incstack = 0
 41296  0159C2  C158  F157         	movff	_motor_cue_read_index,_motor_cue_write_index
 41297  0159C6  0012               	return		;funcret
 41298  0159C8                     __end_of_motor_clear_command_cue:
 41299                           	opt stack 0
 41300                           tosu	equ	0xFFF
 41301                           tosh	equ	0xFFE
 41302                           tosl	equ	0xFFD
 41303                           pclath	equ	0xFFA
 41304                           tblptru	equ	0xFF8
 41305                           tblptrh	equ	0xFF7
 41306                           tblptrl	equ	0xFF6
 41307                           tablat	equ	0xFF5
 41308                           prodh	equ	0xFF4
 41309                           prodl	equ	0xFF3
 41310                           intcon	equ	0xFF2
 41311                           indf0	equ	0xFEF
 41312                           postinc0	equ	0xFEE
 41313                           fsr0h	equ	0xFEA
 41314                           fsr0l	equ	0xFE9
 41315                           wreg	equ	0xFE8
 41316                           indf1	equ	0xFE7
 41317                           postinc1	equ	0xFE6
 41318                           postdec1	equ	0xFE5
 41319                           plusw1	equ	0xFE3
 41320                           fsr1h	equ	0xFE2
 41321                           fsr1l	equ	0xFE1
 41322                           indf2	equ	0xFDF
 41323                           postinc2	equ	0xFDE
 41324                           postdec2	equ	0xFDD
 41325                           plusw2	equ	0xFDB
 41326                           fsr2h	equ	0xFDA
 41327                           fsr2l	equ	0xFD9
 41328                           status	equ	0xFD8
 41329                           
 41330 ;; *************** function __parse_command_long *****************
 41331 ;; Defined at:
 41332 ;;		line 434 in file "api.c"
 41333 ;; Parameters:    Size  Location     Type
 41334 ;;  data            2   83[BANK0 ] PTR unsigned char 
 41335 ;;		 -> ReceivedDataBuffer(64), 
 41336 ;;  out_buffer      2   85[BANK0 ] PTR unsigned char 
 41337 ;;		 -> ToSendDataBuffer(64), 
 41338 ;;  out_idx_ptr     2   87[BANK0 ] PTR unsigned char 
 41339 ;;		 -> api_parse@out_idx(1), 
 41340 ;; Auto vars:     Size  Location     Type
 41341 ;;  length          1   89[BANK0 ] unsigned char 
 41342 ;; Return value:  Size  Location     Type
 41343 ;;                  1    wreg      unsigned char 
 41344 ;; Registers used:
 41345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41346 ;; Tracked objects:
 41347 ;;		On entry : 0/0
 41348 ;;		On exit  : 0/0
 41349 ;;		Unchanged: 0/0
 41350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41351 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41352 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41354 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41355 ;;Total ram usage:        7 bytes
 41356 ;; Hardware stack levels used:    1
 41357 ;; Hardware stack levels required when called:   15
 41358 ;; This function calls:
 41359 ;;		__parse_jump_steps
 41360 ;;		__parse_set_manual_speed
 41361 ;; This function is called by:
 41362 ;;		_api_parse
 41363 ;; This function uses a non-reentrant model
 41364 ;;
 41365                           
 41366                           	psect	text170
 41367  014346                     __ptext170:
 41368                           	opt stack 0
 41369  014346                     __parse_command_long:
 41370                           	opt stack 13
 41371                           
 41372                           ;api.c: 436: uint8_t length = 65;
 41373                           
 41374                           ;incstack = 0
 41375  014346  0E41               	movlw	65
 41376  014348  0100               	movlb	0	; () banked
 41377  01434A  6FB9               	movwf	__parse_command_long@length& (0+255),b
 41378                           
 41379                           ;api.c: 438: switch(data[0])
 41380  01434C  D020               	goto	l2317
 41381  01434E                     
 41382                           ; BSR set to: 0
 41383                           ;api.c: 445: length = _parse_jump_steps(data, out_buffer, out_idx_ptr);
 41384                           
 41385                           ; BSR set to: 0
 41386  01434E  C0B3  F0A7         	movff	__parse_command_long@data,__parse_jump_steps@data
 41387  014352  C0B4  F0A8         	movff	__parse_command_long@data+1,__parse_jump_steps@data+1
 41388  014356  C0B5  F0A9         	movff	__parse_command_long@out_buffer,__parse_jump_steps@out_buffer
 41389  01435A  C0B6  F0AA         	movff	__parse_command_long@out_buffer+1,__parse_jump_steps@out_buffer+1
 41390  01435E  C0B7  F0AB         	movff	__parse_command_long@out_idx_ptr,__parse_jump_steps@out_idx_ptr
 41391  014362  C0B8  F0AC         	movff	__parse_command_long@out_idx_ptr+1,__parse_jump_steps@out_idx_ptr+1
 41392  014366  ECA1  F07E         	call	__parse_jump_steps	;wreg free
 41393  01436A  D00E               	goto	L63
 41394  01436C                     
 41395                           ; BSR set to: 0
 41396                           ;api.c: 449: length = _parse_set_manual_speed(data, out_buffer, out_idx_ptr);
 41397                           
 41398                           ; BSR set to: 0
 41399  01436C  C0B3  F064         	movff	__parse_command_long@data,__parse_set_manual_speed@data
 41400  014370  C0B4  F065         	movff	__parse_command_long@data+1,__parse_set_manual_speed@data+1
 41401  014374  C0B5  F066         	movff	__parse_command_long@out_buffer,__parse_set_manual_speed@out_buffer
 41402  014378  C0B6  F067         	movff	__parse_command_long@out_buffer+1,__parse_set_manual_speed@out_buffer+1
 41403  01437C  C0B7  F068         	movff	__parse_command_long@out_idx_ptr,__parse_set_manual_speed@out_idx_ptr
 41404  014380  C0B8  F069         	movff	__parse_command_long@out_idx_ptr+1,__parse_set_manual_speed@out_idx_ptr+1
 41405  014384  ECF9  F09C         	call	__parse_set_manual_speed	;wreg free
 41406  014388                     L63:
 41407  014388  0100               	movlb	0	; () banked
 41408  01438A  6FB9               	movwf	__parse_command_long@length& (0+255),b
 41409                           
 41410                           ; BSR set to: 0
 41411                           ;api.c: 451: }
 41412                           
 41413                           ;api.c: 450: break;
 41414  01438C  D00B               	goto	l2319
 41415  01438E                     l2317:
 41416                           
 41417                           ; BSR set to: 0
 41418                           
 41419                           ; BSR set to: 0
 41420  01438E  C0B3  FFD9         	movff	__parse_command_long@data,fsr2l
 41421  014392  C0B4  FFDA         	movff	__parse_command_long@data+1,fsr2h
 41422  014396  50DF               	movf	indf2,w,c
 41423                           
 41424                           ; Switch size 1, requested type "space"
 41425                           ; Number of cases is 2, Range of values is 144 to 145
 41426                           ; switch strategies available:
 41427                           ; Name         Instructions Cycles
 41428                           ; simple_byte            7     4 (average)
 41429                           ;	Chosen strategy is simple_byte
 41430  014398  0A90               	xorlw	144	; case 144
 41431  01439A  B4D8               	btfsc	status,2,c
 41432  01439C  D7D8               	goto	l2318
 41433  01439E  0A01               	xorlw	1	; case 145
 41434  0143A0  B4D8               	btfsc	status,2,c
 41435  0143A2  D7E4               	goto	l2320
 41436  0143A4                     l2319:
 41437                           
 41438                           ; BSR set to: 0
 41439                           ;api.c: 455: return length;
 41440                           
 41441                           ; BSR set to: 0
 41442  0143A4  51B9               	movf	__parse_command_long@length& (0+255),w,b
 41443  0143A6  0012               	return	
 41444  0143A8                     __end_of__parse_command_long:
 41445                           	opt stack 0
 41446                           tosu	equ	0xFFF
 41447                           tosh	equ	0xFFE
 41448                           tosl	equ	0xFFD
 41449                           pclath	equ	0xFFA
 41450                           tblptru	equ	0xFF8
 41451                           tblptrh	equ	0xFF7
 41452                           tblptrl	equ	0xFF6
 41453                           tablat	equ	0xFF5
 41454                           prodh	equ	0xFF4
 41455                           prodl	equ	0xFF3
 41456                           intcon	equ	0xFF2
 41457                           indf0	equ	0xFEF
 41458                           postinc0	equ	0xFEE
 41459                           fsr0h	equ	0xFEA
 41460                           fsr0l	equ	0xFE9
 41461                           wreg	equ	0xFE8
 41462                           indf1	equ	0xFE7
 41463                           postinc1	equ	0xFE6
 41464                           postdec1	equ	0xFE5
 41465                           plusw1	equ	0xFE3
 41466                           fsr1h	equ	0xFE2
 41467                           fsr1l	equ	0xFE1
 41468                           indf2	equ	0xFDF
 41469                           postinc2	equ	0xFDE
 41470                           postdec2	equ	0xFDD
 41471                           plusw2	equ	0xFDB
 41472                           fsr2h	equ	0xFDA
 41473                           fsr2l	equ	0xFD9
 41474                           status	equ	0xFD8
 41475                           
 41476 ;; *************** function __parse_set_manual_speed *****************
 41477 ;; Defined at:
 41478 ;;		line 516 in file "api.c"
 41479 ;; Parameters:    Size  Location     Type
 41480 ;;  data            2    4[BANK0 ] PTR unsigned char 
 41481 ;;		 -> ReceivedDataBuffer(64), 
 41482 ;;  out_buffer      2    6[BANK0 ] PTR unsigned char 
 41483 ;;		 -> ToSendDataBuffer(64), 
 41484 ;;  out_idx_ptr     2    8[BANK0 ] PTR unsigned char 
 41485 ;;		 -> api_parse@out_idx(1), 
 41486 ;; Auto vars:     Size  Location     Type
 41487 ;;  new_speed       2   11[BANK0 ] unsigned int 
 41488 ;; Return value:  Size  Location     Type
 41489 ;;                  1    wreg      unsigned char 
 41490 ;; Registers used:
 41491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41492 ;; Tracked objects:
 41493 ;;		On entry : 0/0
 41494 ;;		On exit  : 0/0
 41495 ;;		Unchanged: 0/0
 41496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41497 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41498 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41499 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41500 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41501 ;;Total ram usage:        9 bytes
 41502 ;; Hardware stack levels used:    1
 41503 ;; Hardware stack levels required when called:   12
 41504 ;; This function calls:
 41505 ;;		_motor_set_manual_speed
 41506 ;; This function is called by:
 41507 ;;		__parse_command_long
 41508 ;; This function uses a non-reentrant model
 41509 ;;
 41510                           
 41511                           	psect	text171
 41512  0139F2                     __ptext171:
 41513                           	opt stack 0
 41514  0139F2                     __parse_set_manual_speed:
 41515                           	opt stack 15
 41516                           
 41517                           ;api.c: 520: uint16_t new_speed;;api.c: 522: new_speed = data[1];
 41518                           
 41519                           ; BSR set to: 0
 41520                           ;incstack = 0
 41521  0139F2  0100               	movlb	0	; () banked
 41522  0139F4  EE20 F001          	lfsr	2,1
 41523  0139F8  5164               	movf	__parse_set_manual_speed@data& (0+255),w,b
 41524  0139FA  26D9               	addwf	fsr2l,f,c
 41525  0139FC  5165               	movf	(__parse_set_manual_speed@data+1)& (0+255),w,b
 41526  0139FE  22DA               	addwfc	fsr2h,f,c
 41527  013A00  50DF               	movf	indf2,w,c
 41528  013A02  6F6A               	movwf	??__parse_set_manual_speed& (0+255),b
 41529  013A04  516A               	movf	??__parse_set_manual_speed& (0+255),w,b
 41530  013A06  6F6B               	movwf	__parse_set_manual_speed@new_speed& (0+255),b
 41531  013A08  6B6C               	clrf	(__parse_set_manual_speed@new_speed+1)& (0+255),b
 41532                           
 41533                           ; BSR set to: 0
 41534                           ;api.c: 523: new_speed <<= 8;
 41535  013A0A  516B               	movf	__parse_set_manual_speed@new_speed& (0+255),w,b
 41536  013A0C  6F6C               	movwf	(__parse_set_manual_speed@new_speed+1)& (0+255),b
 41537  013A0E  6B6B               	clrf	__parse_set_manual_speed@new_speed& (0+255),b
 41538                           
 41539                           ; BSR set to: 0
 41540                           ;api.c: 524: new_speed |= data[2];
 41541  013A10  EE20 F002          	lfsr	2,2
 41542  013A14  5164               	movf	__parse_set_manual_speed@data& (0+255),w,b
 41543  013A16  26D9               	addwf	fsr2l,f,c
 41544  013A18  5165               	movf	(__parse_set_manual_speed@data+1)& (0+255),w,b
 41545  013A1A  22DA               	addwfc	fsr2h,f,c
 41546  013A1C  50DF               	movf	indf2,w,c
 41547  013A1E  6F6A               	movwf	??__parse_set_manual_speed& (0+255),b
 41548  013A20  516A               	movf	??__parse_set_manual_speed& (0+255),w,b
 41549  013A22  136B               	iorwf	__parse_set_manual_speed@new_speed& (0+255),f,b
 41550                           
 41551                           ; BSR set to: 0
 41552                           ;api.c: 526: motor_set_manual_speed(new_speed);
 41553  013A24  C06B  F062         	movff	__parse_set_manual_speed@new_speed,motor_set_manual_speed@new_speed
 41554  013A28  C06C  F063         	movff	__parse_set_manual_speed@new_speed+1,motor_set_manual_speed@new_speed+1
 41555  013A2C  EC72  F0A6         	call	_motor_set_manual_speed	;wreg free
 41556                           
 41557                           ;api.c: 529: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 41558  013A30  C068  FFD9         	movff	__parse_set_manual_speed@out_idx_ptr,fsr2l
 41559  013A34  C069  FFDA         	movff	__parse_set_manual_speed@out_idx_ptr+1,fsr2h
 41560  013A38  50DF               	movf	indf2,w,c
 41561  013A3A  B4D8               	btfsc	status,2,c
 41562  013A3C  D01A               	goto	l2330
 41563  013A3E  C068  FFD9         	movff	__parse_set_manual_speed@out_idx_ptr,fsr2l
 41564  013A42  C069  FFDA         	movff	__parse_set_manual_speed@out_idx_ptr+1,fsr2h
 41565  013A46  0E3F               	movlw	63
 41566  013A48  60DF               	cpfslt	indf2,c
 41567  013A4A  D013               	goto	l2330
 41568                           
 41569                           ;api.c: 530: {;api.c: 531: out_buffer[(*out_idx_ptr)++] = COMMAND_SET_MANUAL_SPEED;
 41570  013A4C  C068  FFD9         	movff	__parse_set_manual_speed@out_idx_ptr,fsr2l
 41571  013A50  C069  FFDA         	movff	__parse_set_manual_speed@out_idx_ptr+1,fsr2h
 41572  013A54  CFDF F06A          	movff	indf2,??__parse_set_manual_speed
 41573  013A58  0E01               	movlw	1
 41574  013A5A  26DF               	addwf	indf2,f,c
 41575  013A5C  0100               	movlb	0	; () banked
 41576  013A5E  516A               	movf	??__parse_set_manual_speed& (0+255),w,b
 41577  013A60  0D01               	mullw	1
 41578  013A62  50F3               	movf	prodl,w,c
 41579  013A64  2566               	addwf	__parse_set_manual_speed@out_buffer& (0+255),w,b
 41580  013A66  6ED9               	movwf	fsr2l,c
 41581  013A68  50F4               	movf	prodh,w,c
 41582  013A6A  2167               	addwfc	(__parse_set_manual_speed@out_buffer+1)& (0+255),w,b
 41583  013A6C  6EDA               	movwf	fsr2h,c
 41584  013A6E  0E91               	movlw	145
 41585  013A70  6EDF               	movwf	indf2,c
 41586  013A72                     l2330:
 41587                           
 41588                           ;api.c: 532: };api.c: 534: return 3;
 41589                           
 41590                           ; BSR set to: 0
 41591  013A72  0E03               	movlw	3
 41592  013A74  0012               	return	
 41593  013A76                     __end_of__parse_set_manual_speed:
 41594                           	opt stack 0
 41595                           tosu	equ	0xFFF
 41596                           tosh	equ	0xFFE
 41597                           tosl	equ	0xFFD
 41598                           pclath	equ	0xFFA
 41599                           tblptru	equ	0xFF8
 41600                           tblptrh	equ	0xFF7
 41601                           tblptrl	equ	0xFF6
 41602                           tablat	equ	0xFF5
 41603                           prodh	equ	0xFF4
 41604                           prodl	equ	0xFF3
 41605                           intcon	equ	0xFF2
 41606                           indf0	equ	0xFEF
 41607                           postinc0	equ	0xFEE
 41608                           fsr0h	equ	0xFEA
 41609                           fsr0l	equ	0xFE9
 41610                           wreg	equ	0xFE8
 41611                           indf1	equ	0xFE7
 41612                           postinc1	equ	0xFE6
 41613                           postdec1	equ	0xFE5
 41614                           plusw1	equ	0xFE3
 41615                           fsr1h	equ	0xFE2
 41616                           fsr1l	equ	0xFE1
 41617                           indf2	equ	0xFDF
 41618                           postinc2	equ	0xFDE
 41619                           postdec2	equ	0xFDD
 41620                           plusw2	equ	0xFDB
 41621                           fsr2h	equ	0xFDA
 41622                           fsr2l	equ	0xFD9
 41623                           status	equ	0xFD8
 41624                           
 41625 ;; *************** function _motor_set_manual_speed *****************
 41626 ;; Defined at:
 41627 ;;		line 549 in file "motor.c"
 41628 ;; Parameters:    Size  Location     Type
 41629 ;;  new_speed       2    2[BANK0 ] unsigned int 
 41630 ;; Auto vars:     Size  Location     Type
 41631 ;;		None
 41632 ;; Return value:  Size  Location     Type
 41633 ;;                  1    wreg      void 
 41634 ;; Registers used:
 41635 ;;		wreg, status,2, status,0, cstack
 41636 ;; Tracked objects:
 41637 ;;		On entry : 0/0
 41638 ;;		On exit  : 0/0
 41639 ;;		Unchanged: 0/0
 41640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41641 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41644 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41645 ;;Total ram usage:        2 bytes
 41646 ;; Hardware stack levels used:    1
 41647 ;; Hardware stack levels required when called:   11
 41648 ;; This function calls:
 41649 ;;		_motor_change_speed
 41650 ;; This function is called by:
 41651 ;;		__parse_set_manual_speed
 41652 ;;		_motor_increase_manual_speed
 41653 ;;		_motor_decrease_manual_speed
 41654 ;; This function uses a non-reentrant model
 41655 ;;
 41656                           
 41657                           	psect	text172
 41658  014CE4                     __ptext172:
 41659                           	opt stack 0
 41660  014CE4                     _motor_set_manual_speed:
 41661                           	opt stack 17
 41662                           
 41663                           ;motor.c: 551: if(new_speed>config.maximum_speed_manual)
 41664                           
 41665                           ;incstack = 0
 41666  014CE4  0100               	movlb	0	; () banked
 41667  014CE6  5162               	movf	motor_set_manual_speed@new_speed& (0+255),w,b
 41668  014CE8  0101               	movlb	1	; () banked
 41669  014CEA  5DB4               	subwf	(_config+19)& (0+255),w,b
 41670  014CEC  0100               	movlb	0	; () banked
 41671  014CEE  5163               	movf	(motor_set_manual_speed@new_speed+1)& (0+255),w,b
 41672  014CF0  0101               	movlb	1	; () banked
 41673  014CF2  59B5               	subwfb	(_config+20)& (0+255),w,b
 41674  014CF4  B0D8               	btfsc	status,0,c
 41675  014CF6  D005               	goto	l2513
 41676                           
 41677                           ; BSR set to: 1
 41678                           ;motor.c: 552: {;motor.c: 553: os.manual_speed = config.maximum_speed_manual;
 41679  014CF8  C1B4  F194         	movff	_config+19,_os+35	;volatile
 41680  014CFC  C1B5  F195         	movff	_config+20,_os+36	;volatile
 41681                           
 41682                           ;motor.c: 554: }
 41683  014D00  D012               	goto	l2516
 41684  014D02                     l2513:
 41685                           
 41686                           ; BSR set to: 1
 41687                           ;motor.c: 555: else if(new_speed<config.minimum_speed)
 41688                           
 41689                           ; BSR set to: 1
 41690  014D02  51AA               	movf	(_config+9)& (0+255),w,b
 41691  014D04  0100               	movlb	0	; () banked
 41692  014D06  5D62               	subwf	motor_set_manual_speed@new_speed& (0+255),w,b
 41693  014D08  0101               	movlb	1	; () banked
 41694  014D0A  51AB               	movf	(_config+10)& (0+255),w,b
 41695  014D0C  0100               	movlb	0	; () banked
 41696  014D0E  5963               	subwfb	(motor_set_manual_speed@new_speed+1)& (0+255),w,b
 41697  014D10  B0D8               	btfsc	status,0,c
 41698  014D12  D005               	goto	l2515
 41699                           
 41700                           ; BSR set to: 0
 41701                           ;motor.c: 556: {;motor.c: 557: os.manual_speed = config.minimum_speed;
 41702  014D14  C1AA  F194         	movff	_config+9,_os+35	;volatile
 41703  014D18  C1AB  F195         	movff	_config+10,_os+36	;volatile
 41704                           
 41705                           ;motor.c: 558: }
 41706  014D1C  D004               	goto	l2516
 41707  014D1E                     l2515:
 41708                           
 41709                           ; BSR set to: 0
 41710                           ;motor.c: 559: else;motor.c: 560: {;motor.c: 561: os.manual_speed = new_speed;
 41711  014D1E  C062  F194         	movff	motor_set_manual_speed@new_speed,_os+35	;volatile
 41712  014D22  C063  F195         	movff	motor_set_manual_speed@new_speed+1,_os+36	;volatile
 41713  014D26                     l2516:
 41714                           
 41715                           ;motor.c: 562: };motor.c: 563: motor_change_speed(new_speed);
 41716                           
 41717                           ; BSR set to: 0
 41718                           
 41719                           ; BSR set to: 0
 41720  014D26  C062  F060         	movff	motor_set_manual_speed@new_speed,motor_change_speed@new_speed
 41721  014D2A  C063  F061         	movff	motor_set_manual_speed@new_speed+1,motor_change_speed@new_speed+1
 41722  014D2E  ECC8  F0AC         	call	_motor_change_speed	;wreg free
 41723  014D32  0012               	return		;funcret
 41724  014D34                     __end_of_motor_set_manual_speed:
 41725                           	opt stack 0
 41726                           tosu	equ	0xFFF
 41727                           tosh	equ	0xFFE
 41728                           tosl	equ	0xFFD
 41729                           pclath	equ	0xFFA
 41730                           tblptru	equ	0xFF8
 41731                           tblptrh	equ	0xFF7
 41732                           tblptrl	equ	0xFF6
 41733                           tablat	equ	0xFF5
 41734                           prodh	equ	0xFF4
 41735                           prodl	equ	0xFF3
 41736                           intcon	equ	0xFF2
 41737                           indf0	equ	0xFEF
 41738                           postinc0	equ	0xFEE
 41739                           fsr0h	equ	0xFEA
 41740                           fsr0l	equ	0xFE9
 41741                           wreg	equ	0xFE8
 41742                           indf1	equ	0xFE7
 41743                           postinc1	equ	0xFE6
 41744                           postdec1	equ	0xFE5
 41745                           plusw1	equ	0xFE3
 41746                           fsr1h	equ	0xFE2
 41747                           fsr1l	equ	0xFE1
 41748                           indf2	equ	0xFDF
 41749                           postinc2	equ	0xFDE
 41750                           postdec2	equ	0xFDD
 41751                           plusw2	equ	0xFDB
 41752                           fsr2h	equ	0xFDA
 41753                           fsr2l	equ	0xFD9
 41754                           status	equ	0xFD8
 41755                           
 41756 ;; *************** function _motor_change_speed *****************
 41757 ;; Defined at:
 41758 ;;		line 566 in file "motor.c"
 41759 ;; Parameters:    Size  Location     Type
 41760 ;;  new_speed       2    0[BANK0 ] unsigned int 
 41761 ;; Auto vars:     Size  Location     Type
 41762 ;;		None
 41763 ;; Return value:  Size  Location     Type
 41764 ;;                  1    wreg      void 
 41765 ;; Registers used:
 41766 ;;		None
 41767 ;; Tracked objects:
 41768 ;;		On entry : 0/0
 41769 ;;		On exit  : 0/0
 41770 ;;		Unchanged: 0/0
 41771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41772 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41775 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41776 ;;Total ram usage:        2 bytes
 41777 ;; Hardware stack levels used:    1
 41778 ;; Hardware stack levels required when called:   10
 41779 ;; This function calls:
 41780 ;;		Nothing
 41781 ;; This function is called by:
 41782 ;;		_motor_set_manual_speed
 41783 ;;		_encoder_statemachine
 41784 ;; This function uses a non-reentrant model
 41785 ;;
 41786                           
 41787                           	psect	text173
 41788  015990                     __ptext173:
 41789                           	opt stack 0
 41790  015990                     _motor_change_speed:
 41791                           	opt stack 17
 41792                           
 41793                           ;motor.c: 568: motor_maximum_speed = new_speed;
 41794                           
 41795                           ;incstack = 0
 41796  015990  C060  F13F         	movff	motor_change_speed@new_speed,_motor_maximum_speed
 41797  015994  C061  F140         	movff	motor_change_speed@new_speed+1,_motor_maximum_speed+1
 41798  015998  0012               	return		;funcret
 41799  01599A                     __end_of_motor_change_speed:
 41800                           	opt stack 0
 41801                           tosu	equ	0xFFF
 41802                           tosh	equ	0xFFE
 41803                           tosl	equ	0xFFD
 41804                           pclath	equ	0xFFA
 41805                           tblptru	equ	0xFF8
 41806                           tblptrh	equ	0xFF7
 41807                           tblptrl	equ	0xFF6
 41808                           tablat	equ	0xFF5
 41809                           prodh	equ	0xFF4
 41810                           prodl	equ	0xFF3
 41811                           intcon	equ	0xFF2
 41812                           indf0	equ	0xFEF
 41813                           postinc0	equ	0xFEE
 41814                           fsr0h	equ	0xFEA
 41815                           fsr0l	equ	0xFE9
 41816                           wreg	equ	0xFE8
 41817                           indf1	equ	0xFE7
 41818                           postinc1	equ	0xFE6
 41819                           postdec1	equ	0xFE5
 41820                           plusw1	equ	0xFE3
 41821                           fsr1h	equ	0xFE2
 41822                           fsr1l	equ	0xFE1
 41823                           indf2	equ	0xFDF
 41824                           postinc2	equ	0xFDE
 41825                           postdec2	equ	0xFDD
 41826                           plusw2	equ	0xFDB
 41827                           fsr2h	equ	0xFDA
 41828                           fsr2l	equ	0xFD9
 41829                           status	equ	0xFD8
 41830                           
 41831 ;; *************** function __parse_jump_steps *****************
 41832 ;; Defined at:
 41833 ;;		line 481 in file "api.c"
 41834 ;; Parameters:    Size  Location     Type
 41835 ;;  data            2   71[BANK0 ] PTR unsigned char 
 41836 ;;		 -> ReceivedDataBuffer(64), 
 41837 ;;  out_buffer      2   73[BANK0 ] PTR unsigned char 
 41838 ;;		 -> ToSendDataBuffer(64), 
 41839 ;;  out_idx_ptr     2   75[BANK0 ] PTR unsigned char 
 41840 ;;		 -> api_parse@out_idx(1), 
 41841 ;; Auto vars:     Size  Location     Type
 41842 ;;  number_of_st    4   79[BANK0 ] long 
 41843 ;;  return_value    1   78[BANK0 ] unsigned char 
 41844 ;; Return value:  Size  Location     Type
 41845 ;;                  1    wreg      unsigned char 
 41846 ;; Registers used:
 41847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41848 ;; Tracked objects:
 41849 ;;		On entry : 0/0
 41850 ;;		On exit  : 0/0
 41851 ;;		Unchanged: 0/0
 41852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41853 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41854 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41855 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41856 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41857 ;;Total ram usage:       12 bytes
 41858 ;; Hardware stack levels used:    1
 41859 ;; Hardware stack levels required when called:   14
 41860 ;; This function calls:
 41861 ;;		_motor_schedule_command
 41862 ;; This function is called by:
 41863 ;;		__parse_command_long
 41864 ;; This function uses a non-reentrant model
 41865 ;;
 41866                           
 41867                           	psect	text174
 41868  00FD42                     __ptext174:
 41869                           	opt stack 0
 41870  00FD42                     __parse_jump_steps:
 41871                           	opt stack 13
 41872                           
 41873                           ;api.c: 485: uint8_t return_value;;api.c: 486: int32_t number_of_steps;;api.c: 488: numb
      +                          er_of_steps = data[1];
 41874                           
 41875                           ;incstack = 0
 41876  00FD42  0100               	movlb	0	; () banked
 41877  00FD44  EE20 F001          	lfsr	2,1
 41878  00FD48  51A7               	movf	__parse_jump_steps@data& (0+255),w,b
 41879  00FD4A  26D9               	addwf	fsr2l,f,c
 41880  00FD4C  51A8               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 41881  00FD4E  22DA               	addwfc	fsr2h,f,c
 41882  00FD50  50DF               	movf	indf2,w,c
 41883  00FD52  6FAD               	movwf	??__parse_jump_steps& (0+255),b
 41884  00FD54  51AD               	movf	??__parse_jump_steps& (0+255),w,b
 41885  00FD56  6FAF               	movwf	__parse_jump_steps@number_of_steps& (0+255),b
 41886  00FD58  6BB0               	clrf	(__parse_jump_steps@number_of_steps+1)& (0+255),b
 41887  00FD5A  6BB1               	clrf	(__parse_jump_steps@number_of_steps+2)& (0+255),b
 41888  00FD5C  6BB2               	clrf	(__parse_jump_steps@number_of_steps+3)& (0+255),b
 41889                           
 41890                           ; BSR set to: 0
 41891                           ;api.c: 489: number_of_steps <<= 8;
 41892  00FD5E  C0B1  F0B2         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 41893  00FD62  C0B0  F0B1         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 41894  00FD66  C0AF  F0B0         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 41895  00FD6A  6BAF               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 41896                           
 41897                           ; BSR set to: 0
 41898                           ;api.c: 490: number_of_steps |= data[2];
 41899  00FD6C  EE20 F002          	lfsr	2,2
 41900  00FD70  51A7               	movf	__parse_jump_steps@data& (0+255),w,b
 41901  00FD72  26D9               	addwf	fsr2l,f,c
 41902  00FD74  51A8               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 41903  00FD76  22DA               	addwfc	fsr2h,f,c
 41904  00FD78  50DF               	movf	indf2,w,c
 41905  00FD7A  6FAD               	movwf	??__parse_jump_steps& (0+255),b
 41906  00FD7C  51AD               	movf	??__parse_jump_steps& (0+255),w,b
 41907  00FD7E  13AF               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 41908                           
 41909                           ;api.c: 491: number_of_steps <<= 8;
 41910  00FD80  C0B1  F0B2         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 41911  00FD84  C0B0  F0B1         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 41912  00FD88  C0AF  F0B0         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 41913  00FD8C  6BAF               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 41914                           
 41915                           ; BSR set to: 0
 41916                           ;api.c: 492: number_of_steps |= data[3];
 41917  00FD8E  EE20 F003          	lfsr	2,3
 41918  00FD92  51A7               	movf	__parse_jump_steps@data& (0+255),w,b
 41919  00FD94  26D9               	addwf	fsr2l,f,c
 41920  00FD96  51A8               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 41921  00FD98  22DA               	addwfc	fsr2h,f,c
 41922  00FD9A  50DF               	movf	indf2,w,c
 41923  00FD9C  6FAD               	movwf	??__parse_jump_steps& (0+255),b
 41924  00FD9E  51AD               	movf	??__parse_jump_steps& (0+255),w,b
 41925  00FDA0  13AF               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 41926                           
 41927                           ; BSR set to: 0
 41928                           ;api.c: 493: number_of_steps <<= 8;
 41929  00FDA2  C0B1  F0B2         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 41930  00FDA6  C0B0  F0B1         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 41931  00FDAA  C0AF  F0B0         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 41932  00FDAE  6BAF               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 41933                           
 41934                           ;api.c: 494: number_of_steps |= data[4];
 41935  00FDB0  EE20 F004          	lfsr	2,4
 41936  00FDB4  51A7               	movf	__parse_jump_steps@data& (0+255),w,b
 41937  00FDB6  26D9               	addwf	fsr2l,f,c
 41938  00FDB8  51A8               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 41939  00FDBA  22DA               	addwfc	fsr2h,f,c
 41940  00FDBC  50DF               	movf	indf2,w,c
 41941  00FDBE  6FAD               	movwf	??__parse_jump_steps& (0+255),b
 41942  00FDC0  51AD               	movf	??__parse_jump_steps& (0+255),w,b
 41943  00FDC2  13AF               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 41944                           
 41945                           ; BSR set to: 0
 41946                           ;api.c: 496: if(number_of_steps>0)
 41947  00FDC4  BFB2               	btfsc	(__parse_jump_steps@number_of_steps+3)& (0+255),7,b
 41948  00FDC6  D017               	goto	l2324
 41949  00FDC8  51B2               	movf	(__parse_jump_steps@number_of_steps+3)& (0+255),w,b
 41950  00FDCA  11B1               	iorwf	(__parse_jump_steps@number_of_steps+2)& (0+255),w,b
 41951  00FDCC  11B0               	iorwf	(__parse_jump_steps@number_of_steps+1)& (0+255),w,b
 41952  00FDCE  E103               	bnz	u13720
 41953  00FDD0  05AF               	decf	__parse_jump_steps@number_of_steps& (0+255),w,b
 41954  00FDD2  A0D8               	btfss	status,0,c
 41955  00FDD4  D010               	goto	l2324
 41956  00FDD6                     u13720:
 41957                           
 41958                           ; BSR set to: 0
 41959                           ;api.c: 497: {;api.c: 498: return_value = motor_schedule_command(MOTOR_DIRECTION_CW, (ui
      +                          nt32_t) number_of_steps, 0);
 41960  00FDD6  C0AF  F0A0         	movff	__parse_jump_steps@number_of_steps,motor_schedule_command@distance_in_steps
 41961  00FDDA  C0B0  F0A1         	movff	__parse_jump_steps@number_of_steps+1,motor_schedule_command@distance_in_steps+1
 41962  00FDDE  C0B1  F0A2         	movff	__parse_jump_steps@number_of_steps+2,motor_schedule_command@distance_in_steps+2
 41963  00FDE2  C0B2  F0A3         	movff	__parse_jump_steps@number_of_steps+3,motor_schedule_command@distance_in_steps+3
 41964  00FDE6  0E00               	movlw	0
 41965  00FDE8  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 41966  00FDEA  0E00               	movlw	0
 41967  00FDEC  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 41968  00FDEE  0E01               	movlw	1
 41969  00FDF0  EC89  F097         	call	_motor_schedule_command
 41970  00FDF4  D017               	goto	L64
 41971  00FDF6                     l2324:
 41972                           
 41973                           ; BSR set to: 0
 41974                           ;api.c: 500: else;api.c: 501: {;api.c: 502: number_of_steps = -number_of_steps;
 41975                           
 41976                           ; BSR set to: 0
 41977  00FDF6  1FB2               	comf	(__parse_jump_steps@number_of_steps+3)& (0+255),f,b
 41978  00FDF8  1FB1               	comf	(__parse_jump_steps@number_of_steps+2)& (0+255),f,b
 41979  00FDFA  1FB0               	comf	(__parse_jump_steps@number_of_steps+1)& (0+255),f,b
 41980  00FDFC  6DAF               	negf	__parse_jump_steps@number_of_steps& (0+255),b
 41981  00FDFE  0E00               	movlw	0
 41982  00FE00  23B0               	addwfc	(__parse_jump_steps@number_of_steps+1)& (0+255),f,b
 41983  00FE02  23B1               	addwfc	(__parse_jump_steps@number_of_steps+2)& (0+255),f,b
 41984  00FE04  23B2               	addwfc	(__parse_jump_steps@number_of_steps+3)& (0+255),f,b
 41985                           
 41986                           ; BSR set to: 0
 41987                           ;api.c: 503: return_value = motor_schedule_command(MOTOR_DIRECTION_CCW, (uint32_t) numbe
      +                          r_of_steps, 0);
 41988  00FE06  C0AF  F0A0         	movff	__parse_jump_steps@number_of_steps,motor_schedule_command@distance_in_steps
 41989  00FE0A  C0B0  F0A1         	movff	__parse_jump_steps@number_of_steps+1,motor_schedule_command@distance_in_steps+1
 41990  00FE0E  C0B1  F0A2         	movff	__parse_jump_steps@number_of_steps+2,motor_schedule_command@distance_in_steps+2
 41991  00FE12  C0B2  F0A3         	movff	__parse_jump_steps@number_of_steps+3,motor_schedule_command@distance_in_steps+3
 41992  00FE16  0E00               	movlw	0
 41993  00FE18  6FA5               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 41994  00FE1A  0E00               	movlw	0
 41995  00FE1C  6FA4               	movwf	motor_schedule_command@speed& (0+255),b
 41996  00FE1E  0EFF               	movlw	255
 41997  00FE20  EC89  F097         	call	_motor_schedule_command
 41998  00FE24                     L64:
 41999  00FE24  0100               	movlb	0	; () banked
 42000  00FE26  6FAE               	movwf	__parse_jump_steps@return_value& (0+255),b
 42001                           
 42002                           ; BSR set to: 0
 42003                           ;api.c: 504: };api.c: 507: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<62))
 42004                           
 42005                           ; BSR set to: 0
 42006  00FE28  C0AB  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 42007  00FE2C  C0AC  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 42008  00FE30  50DF               	movf	indf2,w,c
 42009  00FE32  B4D8               	btfsc	status,2,c
 42010  00FE34  D02B               	goto	l2326
 42011                           
 42012                           ; BSR set to: 0
 42013  00FE36  C0AB  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 42014  00FE3A  C0AC  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 42015  00FE3E  0E3E               	movlw	62
 42016  00FE40  60DF               	cpfslt	indf2,c
 42017  00FE42  D024               	goto	l2326
 42018                           
 42019                           ; BSR set to: 0
 42020                           ;api.c: 508: {;api.c: 509: out_buffer[(*out_idx_ptr)++] = COMMAND_JUMP_STEPS;
 42021  00FE44  C0AB  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 42022  00FE48  C0AC  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 42023  00FE4C  CFDF F0AD          	movff	indf2,??__parse_jump_steps
 42024  00FE50  0E01               	movlw	1
 42025  00FE52  26DF               	addwf	indf2,f,c
 42026  00FE54  51AD               	movf	??__parse_jump_steps& (0+255),w,b
 42027  00FE56  0D01               	mullw	1
 42028  00FE58  50F3               	movf	prodl,w,c
 42029  00FE5A  25A9               	addwf	__parse_jump_steps@out_buffer& (0+255),w,b
 42030  00FE5C  6ED9               	movwf	fsr2l,c
 42031  00FE5E  50F4               	movf	prodh,w,c
 42032  00FE60  21AA               	addwfc	(__parse_jump_steps@out_buffer+1)& (0+255),w,b
 42033  00FE62  6EDA               	movwf	fsr2h,c
 42034  00FE64  0E90               	movlw	144
 42035  00FE66  6EDF               	movwf	indf2,c
 42036                           
 42037                           ;api.c: 510: out_buffer[(*out_idx_ptr)++] = return_value;
 42038  00FE68  C0AB  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 42039  00FE6C  C0AC  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 42040  00FE70  CFDF F0AD          	movff	indf2,??__parse_jump_steps
 42041  00FE74  0E01               	movlw	1
 42042  00FE76  26DF               	addwf	indf2,f,c
 42043  00FE78  51AD               	movf	??__parse_jump_steps& (0+255),w,b
 42044  00FE7A  0D01               	mullw	1
 42045  00FE7C  50F3               	movf	prodl,w,c
 42046  00FE7E  25A9               	addwf	__parse_jump_steps@out_buffer& (0+255),w,b
 42047  00FE80  6ED9               	movwf	fsr2l,c
 42048  00FE82  50F4               	movf	prodh,w,c
 42049  00FE84  21AA               	addwfc	(__parse_jump_steps@out_buffer+1)& (0+255),w,b
 42050  00FE86  6EDA               	movwf	fsr2h,c
 42051  00FE88  C0AE  FFDF         	movff	__parse_jump_steps@return_value,indf2
 42052  00FE8C                     l2326:
 42053                           
 42054                           ; BSR set to: 0
 42055                           ;api.c: 511: };api.c: 513: return 5;
 42056                           
 42057                           ; BSR set to: 0
 42058  00FE8C  0E05               	movlw	5
 42059  00FE8E  0012               	return	
 42060  00FE90                     __end_of__parse_jump_steps:
 42061                           	opt stack 0
 42062                           tosu	equ	0xFFF
 42063                           tosh	equ	0xFFE
 42064                           tosl	equ	0xFFD
 42065                           pclath	equ	0xFFA
 42066                           tblptru	equ	0xFF8
 42067                           tblptrh	equ	0xFF7
 42068                           tblptrl	equ	0xFF6
 42069                           tablat	equ	0xFF5
 42070                           prodh	equ	0xFF4
 42071                           prodl	equ	0xFF3
 42072                           intcon	equ	0xFF2
 42073                           indf0	equ	0xFEF
 42074                           postinc0	equ	0xFEE
 42075                           fsr0h	equ	0xFEA
 42076                           fsr0l	equ	0xFE9
 42077                           wreg	equ	0xFE8
 42078                           indf1	equ	0xFE7
 42079                           postinc1	equ	0xFE6
 42080                           postdec1	equ	0xFE5
 42081                           plusw1	equ	0xFE3
 42082                           fsr1h	equ	0xFE2
 42083                           fsr1l	equ	0xFE1
 42084                           indf2	equ	0xFDF
 42085                           postinc2	equ	0xFDE
 42086                           postdec2	equ	0xFDD
 42087                           plusw2	equ	0xFDB
 42088                           fsr2h	equ	0xFDA
 42089                           fsr2l	equ	0xFD9
 42090                           status	equ	0xFD8
 42091                           
 42092 ;; *************** function _motor_schedule_command *****************
 42093 ;; Defined at:
 42094 ;;		line 124 in file "motor.c"
 42095 ;; Parameters:    Size  Location     Type
 42096 ;;  direction       1    wreg     enum E6622
 42097 ;;  distance_in_    4   64[BANK0 ] unsigned long 
 42098 ;;  speed           2   68[BANK0 ] unsigned int 
 42099 ;; Auto vars:     Size  Location     Type
 42100 ;;  direction       1   70[BANK0 ] enum E6622
 42101 ;; Return value:  Size  Location     Type
 42102 ;;                  1    wreg      unsigned char 
 42103 ;; Registers used:
 42104 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42105 ;; Tracked objects:
 42106 ;;		On entry : 0/0
 42107 ;;		On exit  : 0/0
 42108 ;;		Unchanged: 0/0
 42109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42110 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42111 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42113 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42114 ;;Total ram usage:        7 bytes
 42115 ;; Hardware stack levels used:    1
 42116 ;; Hardware stack levels required when called:   13
 42117 ;; This function calls:
 42118 ;;		__motor_run
 42119 ;;		_motor_items_in_cue
 42120 ;; This function is called by:
 42121 ;;		__parse_command_short
 42122 ;;		__parse_jump_steps
 42123 ;;		_motor_go_to_steps_position
 42124 ;;		_motor_arc_move
 42125 ;;		_motor_set_zero
 42126 ;;		_encoder_statemachine
 42127 ;; This function uses a non-reentrant model
 42128 ;;
 42129                           
 42130                           	psect	text175
 42131  012F12                     __ptext175:
 42132                           	opt stack 0
 42133  012F12                     _motor_schedule_command:
 42134                           	opt stack 15
 42135                           
 42136                           ; BSR set to: 0
 42137                           ;incstack = 0
 42138                           ;motor_schedule_command@direction stored from wreg
 42139  012F12  0100               	movlb	0	; () banked
 42140  012F14  6FA6               	movwf	motor_schedule_command@direction& (0+255),b
 42141                           
 42142                           ;motor.c: 126: if((motor_items_in_cue()==0) && (os.busy==0))
 42143  012F16  ECA9  F0AC         	call	_motor_items_in_cue	;wreg free
 42144  012F1A  0900               	iorlw	0
 42145  012F1C  A4D8               	btfss	status,2,c
 42146  012F1E  D016               	goto	l2433
 42147  012F20  0101               	movlb	1	; () banked
 42148  012F22  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 42149  012F24  A4D8               	btfss	status,2,c
 42150  012F26  D012               	goto	l2433
 42151                           
 42152                           ; BSR set to: 1
 42153                           ;motor.c: 127: {;motor.c: 130: _motor_run(direction, distance_in_steps, speed);
 42154  012F28  C0A0  F08F         	movff	motor_schedule_command@distance_in_steps,__motor_run@distance_in_steps
 42155  012F2C  C0A1  F090         	movff	motor_schedule_command@distance_in_steps+1,__motor_run@distance_in_steps+1
 42156  012F30  C0A2  F091         	movff	motor_schedule_command@distance_in_steps+2,__motor_run@distance_in_steps+2
 42157  012F34  C0A3  F092         	movff	motor_schedule_command@distance_in_steps+3,__motor_run@distance_in_steps+3
 42158  012F38  C0A4  F093         	movff	motor_schedule_command@speed,__motor_run@speed
 42159  012F3C  C0A5  F094         	movff	motor_schedule_command@speed+1,__motor_run@speed+1
 42160  012F40  0100               	movlb	0	; () banked
 42161  012F42  51A6               	movf	motor_schedule_command@direction& (0+255),w,b
 42162  012F44  ECA3  F062         	call	__motor_run
 42163                           
 42164                           ;motor.c: 132: return 1;
 42165  012F48  0E01               	movlw	1
 42166  012F4A  0012               	return	
 42167  012F4C                     l2433:
 42168                           
 42169                           ;motor.c: 133: };motor.c: 134: if(motor_items_in_cue()==8-1)
 42170  012F4C  ECA9  F0AC         	call	_motor_items_in_cue	;wreg free
 42171  012F50  0A07               	xorlw	7
 42172  012F52  A4D8               	btfss	status,2,c
 42173  012F54  D002               	goto	l2435
 42174                           
 42175                           ;motor.c: 135: {;motor.c: 138: return 0;
 42176  012F56  0E00               	movlw	0
 42177                           
 42178                           ;motor.c: 139: }
 42179  012F58  0012               	return	
 42180  012F5A                     l2435:
 42181                           
 42182                           ;motor.c: 140: else;motor.c: 141: {;motor.c: 143: motor_command_cue[motor_cue_write_inde
      +                          x].direction = direction;
 42183  012F5A  0101               	movlb	1	; () banked
 42184  012F5C  5157               	movf	_motor_cue_write_index& (0+255),w,b
 42185  012F5E  0D07               	mullw	7
 42186  012F60  0E00               	movlw	low _motor_command_cue
 42187  012F62  24F3               	addwf	prodl,w,c
 42188  012F64  6ED9               	movwf	fsr2l,c
 42189  012F66  0E03               	movlw	high _motor_command_cue
 42190  012F68  20F4               	addwfc	prodh,w,c
 42191  012F6A  6EDA               	movwf	fsr2h,c
 42192  012F6C  C0A6  FFDF         	movff	motor_schedule_command@direction,indf2
 42193                           
 42194                           ;motor.c: 144: motor_command_cue[motor_cue_write_index].distance = distance_in_steps;
 42195  012F70  5157               	movf	_motor_cue_write_index& (0+255),w,b
 42196  012F72  0D07               	mullw	7
 42197  012F74  0E01               	movlw	1
 42198  012F76  26F3               	addwf	prodl,f,c
 42199  012F78  0E00               	movlw	0
 42200  012F7A  22F4               	addwfc	prodh,f,c
 42201  012F7C  0E00               	movlw	low _motor_command_cue
 42202  012F7E  24F3               	addwf	prodl,w,c
 42203  012F80  6ED9               	movwf	fsr2l,c
 42204  012F82  0E03               	movlw	high _motor_command_cue
 42205  012F84  20F4               	addwfc	prodh,w,c
 42206  012F86  6EDA               	movwf	fsr2h,c
 42207  012F88  C0A0  FFDE         	movff	motor_schedule_command@distance_in_steps,postinc2
 42208  012F8C  C0A1  FFDE         	movff	motor_schedule_command@distance_in_steps+1,postinc2
 42209  012F90  C0A2  FFDE         	movff	motor_schedule_command@distance_in_steps+2,postinc2
 42210  012F94  C0A3  FFDE         	movff	motor_schedule_command@distance_in_steps+3,postinc2
 42211                           
 42212                           ;motor.c: 145: motor_command_cue[motor_cue_write_index].speed = speed;
 42213  012F98  5157               	movf	_motor_cue_write_index& (0+255),w,b
 42214  012F9A  0D07               	mullw	7
 42215  012F9C  0E05               	movlw	5
 42216  012F9E  26F3               	addwf	prodl,f,c
 42217  012FA0  0E00               	movlw	0
 42218  012FA2  22F4               	addwfc	prodh,f,c
 42219  012FA4  0E00               	movlw	low _motor_command_cue
 42220  012FA6  24F3               	addwf	prodl,w,c
 42221  012FA8  6ED9               	movwf	fsr2l,c
 42222  012FAA  0E03               	movlw	high _motor_command_cue
 42223  012FAC  20F4               	addwfc	prodh,w,c
 42224  012FAE  6EDA               	movwf	fsr2h,c
 42225  012FB0  C0A4  FFDE         	movff	motor_schedule_command@speed,postinc2
 42226  012FB4  C0A5  FFDD         	movff	motor_schedule_command@speed+1,postdec2
 42227                           
 42228                           ; BSR set to: 1
 42229                           ;motor.c: 147: ++motor_cue_write_index;
 42230  012FB8  2B57               	incf	_motor_cue_write_index& (0+255),f,b
 42231                           
 42232                           ; BSR set to: 1
 42233                           ;motor.c: 149: return 1;
 42234  012FBA  0E01               	movlw	1
 42235                           
 42236                           ; BSR set to: 1
 42237  012FBC  0012               	return	
 42238  012FBE                     __end_of_motor_schedule_command:
 42239                           	opt stack 0
 42240                           tosu	equ	0xFFF
 42241                           tosh	equ	0xFFE
 42242                           tosl	equ	0xFFD
 42243                           pclath	equ	0xFFA
 42244                           tblptru	equ	0xFF8
 42245                           tblptrh	equ	0xFF7
 42246                           tblptrl	equ	0xFF6
 42247                           tablat	equ	0xFF5
 42248                           prodh	equ	0xFF4
 42249                           prodl	equ	0xFF3
 42250                           intcon	equ	0xFF2
 42251                           indf0	equ	0xFEF
 42252                           postinc0	equ	0xFEE
 42253                           fsr0h	equ	0xFEA
 42254                           fsr0l	equ	0xFE9
 42255                           wreg	equ	0xFE8
 42256                           indf1	equ	0xFE7
 42257                           postinc1	equ	0xFE6
 42258                           postdec1	equ	0xFE5
 42259                           plusw1	equ	0xFE3
 42260                           fsr1h	equ	0xFE2
 42261                           fsr1l	equ	0xFE1
 42262                           indf2	equ	0xFDF
 42263                           postinc2	equ	0xFDE
 42264                           postdec2	equ	0xFDD
 42265                           plusw2	equ	0xFDB
 42266                           fsr2h	equ	0xFDA
 42267                           fsr2l	equ	0xFD9
 42268                           status	equ	0xFD8
 42269                           
 42270 ;; *************** function _motor_items_in_cue *****************
 42271 ;; Defined at:
 42272 ;;		line 119 in file "motor.c"
 42273 ;; Parameters:    Size  Location     Type
 42274 ;;		None
 42275 ;; Auto vars:     Size  Location     Type
 42276 ;;		None
 42277 ;; Return value:  Size  Location     Type
 42278 ;;                  1    wreg      unsigned char 
 42279 ;; Registers used:
 42280 ;;		wreg, status,2, status,0
 42281 ;; Tracked objects:
 42282 ;;		On entry : 0/0
 42283 ;;		On exit  : 0/0
 42284 ;;		Unchanged: 0/0
 42285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42290 ;;Total ram usage:        0 bytes
 42291 ;; Hardware stack levels used:    1
 42292 ;; Hardware stack levels required when called:   10
 42293 ;; This function calls:
 42294 ;;		Nothing
 42295 ;; This function is called by:
 42296 ;;		_motor_schedule_command
 42297 ;;		_motor_process_cue
 42298 ;; This function uses a non-reentrant model
 42299 ;;
 42300                           
 42301                           	psect	text176
 42302  015952                     __ptext176:
 42303                           	opt stack 0
 42304  015952                     _motor_items_in_cue:
 42305                           	opt stack 19
 42306                           
 42307                           ;motor.c: 121: return ((motor_cue_write_index-motor_cue_read_index) & 0b111);
 42308                           
 42309                           ;incstack = 0
 42310  015952  0101               	movlb	1	; () banked
 42311  015954  5158               	movf	_motor_cue_read_index& (0+255),w,b
 42312  015956  0800               	sublw	0
 42313  015958  2557               	addwf	_motor_cue_write_index& (0+255),w,b
 42314  01595A  0B07               	andlw	7
 42315  01595C  0012               	return	
 42316  01595E                     __end_of_motor_items_in_cue:
 42317                           	opt stack 0
 42318                           tosu	equ	0xFFF
 42319                           tosh	equ	0xFFE
 42320                           tosl	equ	0xFFD
 42321                           pclath	equ	0xFFA
 42322                           tblptru	equ	0xFF8
 42323                           tblptrh	equ	0xFF7
 42324                           tblptrl	equ	0xFF6
 42325                           tablat	equ	0xFF5
 42326                           prodh	equ	0xFF4
 42327                           prodl	equ	0xFF3
 42328                           intcon	equ	0xFF2
 42329                           indf0	equ	0xFEF
 42330                           postinc0	equ	0xFEE
 42331                           fsr0h	equ	0xFEA
 42332                           fsr0l	equ	0xFE9
 42333                           wreg	equ	0xFE8
 42334                           indf1	equ	0xFE7
 42335                           postinc1	equ	0xFE6
 42336                           postdec1	equ	0xFE5
 42337                           plusw1	equ	0xFE3
 42338                           fsr1h	equ	0xFE2
 42339                           fsr1l	equ	0xFE1
 42340                           indf2	equ	0xFDF
 42341                           postinc2	equ	0xFDE
 42342                           postdec2	equ	0xFDD
 42343                           plusw2	equ	0xFDB
 42344                           fsr2h	equ	0xFDA
 42345                           fsr2l	equ	0xFD9
 42346                           status	equ	0xFD8
 42347                           
 42348 ;; *************** function __motor_run *****************
 42349 ;; Defined at:
 42350 ;;		line 208 in file "motor.c"
 42351 ;; Parameters:    Size  Location     Type
 42352 ;;  direction       1    wreg     enum E6622
 42353 ;;  distance_in_    4   47[BANK0 ] unsigned long 
 42354 ;;  speed           2   51[BANK0 ] unsigned int 
 42355 ;; Auto vars:     Size  Location     Type
 42356 ;;  direction       1   57[BANK0 ] enum E6622
 42357 ;;  maximum_dist    4   60[BANK0 ] unsigned long 
 42358 ;;  maximum_dist    2   58[BANK0 ] unsigned int 
 42359 ;; Return value:  Size  Location     Type
 42360 ;;                  1    wreg      void 
 42361 ;; Registers used:
 42362 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42363 ;; Tracked objects:
 42364 ;;		On entry : 0/0
 42365 ;;		On exit  : 0/0
 42366 ;;		Unchanged: 0/0
 42367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42368 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42369 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42370 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42371 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42372 ;;Total ram usage:       17 bytes
 42373 ;; Hardware stack levels used:    1
 42374 ;; Hardware stack levels required when called:   12
 42375 ;; This function calls:
 42376 ;;		_motor_calculate_position_in_degrees
 42377 ;;		_motor_steps_from_degrees
 42378 ;; This function is called by:
 42379 ;;		_motor_schedule_command
 42380 ;;		_motor_process_cue
 42381 ;; This function uses a non-reentrant model
 42382 ;;
 42383                           
 42384                           	psect	text177
 42385  00C546                     __ptext177:
 42386                           	opt stack 0
 42387  00C546                     __motor_run:
 42388                           	opt stack 17
 42389                           
 42390                           ; BSR set to: 1
 42391                           ;incstack = 0
 42392                           ;__motor_run@direction stored from wreg
 42393  00C546  0100               	movlb	0	; () banked
 42394  00C548  6F99               	movwf	__motor_run@direction& (0+255),b
 42395                           
 42396                           ;motor.c: 210: uint16_t maximum_distance_in_degrees;;motor.c: 211: uint32_t maximum_dist
      +                          ance_in_steps;;motor.c: 214: motor_direction = direction;
 42397  00C54A  C099  F155         	movff	__motor_run@direction,_motor_direction
 42398                           
 42399                           ;motor.c: 217: if(distance_in_steps==0)
 42400  00C54E  0100               	movlb	0	; () banked
 42401  00C550  518F               	movf	__motor_run@distance_in_steps& (0+255),w,b
 42402  00C552  1190               	iorwf	(__motor_run@distance_in_steps+1)& (0+255),w,b
 42403  00C554  1191               	iorwf	(__motor_run@distance_in_steps+2)& (0+255),w,b
 42404  00C556  1192               	iorwf	(__motor_run@distance_in_steps+3)& (0+255),w,b
 42405  00C558  A4D8               	btfss	status,2,c
 42406  00C55A  D00A               	goto	l2452
 42407                           
 42408                           ; BSR set to: 0
 42409                           ;motor.c: 218: {;motor.c: 220: motor_final_stepcount = 0xFF000000;
 42410  00C55C  0E00               	movlw	0
 42411  00C55E  0101               	movlb	1	; () banked
 42412  00C560  6F27               	movwf	_motor_final_stepcount& (0+255),b	;volatile
 42413  00C562  0E00               	movlw	0
 42414  00C564  6F28               	movwf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 42415  00C566  0E00               	movlw	0
 42416  00C568  6F29               	movwf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 42417  00C56A  0EFF               	movlw	255
 42418  00C56C  6F2A               	movwf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 42419                           
 42420                           ;motor.c: 221: }
 42421  00C56E  D008               	goto	l2453
 42422  00C570                     l2452:
 42423                           
 42424                           ; BSR set to: 0
 42425                           ;motor.c: 222: else;motor.c: 223: {;motor.c: 224: motor_final_stepcount = distance_in_st
      +                          eps;
 42426  00C570  C08F  F127         	movff	__motor_run@distance_in_steps,_motor_final_stepcount	;volatile
 42427  00C574  C090  F128         	movff	__motor_run@distance_in_steps+1,_motor_final_stepcount+1	;volatile
 42428  00C578  C091  F129         	movff	__motor_run@distance_in_steps+2,_motor_final_stepcount+2	;volatile
 42429  00C57C  C092  F12A         	movff	__motor_run@distance_in_steps+3,_motor_final_stepcount+3	;volatile
 42430  00C580                     l2453:
 42431                           
 42432                           ;motor.c: 225: };motor.c: 228: if((motor_direction==MOTOR_DIRECTION_CCW) && config.use_c
      +                          cw_limit)
 42433                           
 42434                           ; BSR set to: 0
 42435  00C580  0101               	movlb	1	; () banked
 42436  00C582  2955               	incf	_motor_direction& (0+255),w,b
 42437  00C584  A4D8               	btfss	status,2,c
 42438  00C586  D061               	goto	l2457
 42439                           
 42440                           ; BSR set to: 1
 42441  00C588  51BA               	movf	(_config+25)& (0+255),w,b
 42442  00C58A  B4D8               	btfsc	status,2,c
 42443  00C58C  D05E               	goto	l2457
 42444                           
 42445                           ; BSR set to: 1
 42446                           ;motor.c: 230: {;motor.c: 232: motor_calculate_position_in_degrees();
 42447  00C58E  EC1B  F090         	call	_motor_calculate_position_in_degrees	;wreg free
 42448                           
 42449                           ;motor.c: 235: if(os.current_position_in_degrees >= config.ccw_limit)
 42450  00C592  0101               	movlb	1	; () banked
 42451  00C594  51BB               	movf	(_config+26)& (0+255),w,b
 42452  00C596  5D7C               	subwf	(_os+11)& (0+255),w,b	;volatile
 42453  00C598  51BC               	movf	(_config+27)& (0+255),w,b
 42454  00C59A  597D               	subwfb	(_os+12)& (0+255),w,b	;volatile
 42455  00C59C  A0D8               	btfss	status,0,c
 42456  00C59E  D014               	goto	l2455
 42457                           
 42458                           ; BSR set to: 1
 42459                           ;motor.c: 236: {;motor.c: 237: maximum_distance_in_degrees = os.current_position_in_degr
      +                          ees - config.ccw_limit;
 42460  00C5A0  EE21  F0BB         	lfsr	2,_config+26
 42461  00C5A4  CFDE F095          	movff	postinc2,??__motor_run
 42462  00C5A8  CFDD F096          	movff	postdec2,??__motor_run+1
 42463  00C5AC  0100               	movlb	0	; () banked
 42464  00C5AE  1F95               	comf	??__motor_run& (0+255),f,b
 42465  00C5B0  1F96               	comf	(??__motor_run+1)& (0+255),f,b
 42466  00C5B2  4B95               	infsnz	??__motor_run& (0+255),f,b
 42467  00C5B4  2B96               	incf	(??__motor_run+1)& (0+255),f,b
 42468  00C5B6  0101               	movlb	1	; () banked
 42469  00C5B8  517C               	movf	(_os+11)& (0+255),w,b	;volatile
 42470  00C5BA  0100               	movlb	0	; () banked
 42471  00C5BC  2595               	addwf	??__motor_run& (0+255),w,b
 42472  00C5BE  6F9A               	movwf	__motor_run@maximum_distance_in_degrees& (0+255),b
 42473  00C5C0  0101               	movlb	1	; () banked
 42474  00C5C2  517D               	movf	(_os+12)& (0+255),w,b	;volatile
 42475  00C5C4  0100               	movlb	0	; () banked
 42476  00C5C6  D017               	goto	L65
 42477  00C5C8                     l2455:
 42478                           
 42479                           ;motor.c: 239: else;motor.c: 240: {;motor.c: 242: maximum_distance_in_degrees = 36000 + 
      +                          os.current_position_in_degrees - config.ccw_limit;
 42480                           
 42481                           ; BSR set to: 0
 42482  00C5C8  EE21  F0BB         	lfsr	2,_config+26
 42483  00C5CC  CFDE F095          	movff	postinc2,??__motor_run
 42484  00C5D0  CFDD F096          	movff	postdec2,??__motor_run+1
 42485  00C5D4  0100               	movlb	0	; () banked
 42486  00C5D6  1F95               	comf	??__motor_run& (0+255),f,b
 42487  00C5D8  1F96               	comf	(??__motor_run+1)& (0+255),f,b
 42488  00C5DA  4B95               	infsnz	??__motor_run& (0+255),f,b
 42489  00C5DC  2B96               	incf	(??__motor_run+1)& (0+255),f,b
 42490  00C5DE  0101               	movlb	1	; () banked
 42491  00C5E0  517C               	movf	(_os+11)& (0+255),w,b	;volatile
 42492  00C5E2  0100               	movlb	0	; () banked
 42493  00C5E4  2795               	addwf	??__motor_run& (0+255),f,b
 42494  00C5E6  0101               	movlb	1	; () banked
 42495  00C5E8  517D               	movf	(_os+12)& (0+255),w,b	;volatile
 42496  00C5EA  0100               	movlb	0	; () banked
 42497  00C5EC  2396               	addwfc	(??__motor_run+1)& (0+255),f,b
 42498  00C5EE  0EA0               	movlw	160
 42499  00C5F0  2595               	addwf	??__motor_run& (0+255),w,b
 42500  00C5F2  6F9A               	movwf	__motor_run@maximum_distance_in_degrees& (0+255),b
 42501  00C5F4  0E8C               	movlw	140
 42502  00C5F6                     L65:
 42503  00C5F6  2196               	addwfc	(??__motor_run+1)& (0+255),w,b
 42504  00C5F8  6F9B               	movwf	(__motor_run@maximum_distance_in_degrees+1)& (0+255),b
 42505                           
 42506                           ; BSR set to: 0
 42507                           ;motor.c: 243: };motor.c: 245: maximum_distance_in_steps = motor_steps_from_degrees(maxi
      +                          mum_distance_in_degrees);
 42508                           
 42509                           ; BSR set to: 0
 42510  00C5FA  C09A  F087         	movff	__motor_run@maximum_distance_in_degrees,motor_steps_from_degrees@degrees
 42511  00C5FE  C09B  F088         	movff	__motor_run@maximum_distance_in_degrees+1,motor_steps_from_degrees@degrees+1
 42512  00C602  ECC9  F08E         	call	_motor_steps_from_degrees	;wreg free
 42513  00C606  C087  F09C         	movff	?_motor_steps_from_degrees,__motor_run@maximum_distance_in_steps
 42514  00C60A  C088  F09D         	movff	?_motor_steps_from_degrees+1,__motor_run@maximum_distance_in_steps+1
 42515  00C60E  C089  F09E         	movff	?_motor_steps_from_degrees+2,__motor_run@maximum_distance_in_steps+2
 42516  00C612  C08A  F09F         	movff	?_motor_steps_from_degrees+3,__motor_run@maximum_distance_in_steps+3
 42517                           
 42518                           ;motor.c: 247: if(maximum_distance_in_steps<motor_final_stepcount)
 42519  00C616  0101               	movlb	1	; () banked
 42520  00C618  5127               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 42521  00C61A  0100               	movlb	0	; () banked
 42522  00C61C  5D9C               	subwf	__motor_run@maximum_distance_in_steps& (0+255),w,b
 42523  00C61E  0101               	movlb	1	; () banked
 42524  00C620  5128               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 42525  00C622  0100               	movlb	0	; () banked
 42526  00C624  599D               	subwfb	(__motor_run@maximum_distance_in_steps+1)& (0+255),w,b
 42527  00C626  0101               	movlb	1	; () banked
 42528  00C628  5129               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 42529  00C62A  0100               	movlb	0	; () banked
 42530  00C62C  599E               	subwfb	(__motor_run@maximum_distance_in_steps+2)& (0+255),w,b
 42531  00C62E  0101               	movlb	1	; () banked
 42532  00C630  512A               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 42533  00C632  0100               	movlb	0	; () banked
 42534  00C634  599F               	subwfb	(__motor_run@maximum_distance_in_steps+3)& (0+255),w,b
 42535  00C636  B0D8               	btfsc	status,0,c
 42536  00C638  D008               	goto	l2457
 42537                           
 42538                           ; BSR set to: 0
 42539                           ;motor.c: 248: {;motor.c: 249: motor_final_stepcount = maximum_distance_in_steps;
 42540  00C63A  C09C  F127         	movff	__motor_run@maximum_distance_in_steps,_motor_final_stepcount	;volatile
 42541  00C63E  C09D  F128         	movff	__motor_run@maximum_distance_in_steps+1,_motor_final_stepcount+1	;volatile
 42542  00C642  C09E  F129         	movff	__motor_run@maximum_distance_in_steps+2,_motor_final_stepcount+2	;volatile
 42543  00C646  C09F  F12A         	movff	__motor_run@maximum_distance_in_steps+3,_motor_final_stepcount+3	;volatile
 42544  00C64A                     l2457:
 42545                           
 42546                           ;motor.c: 250: };motor.c: 251: };motor.c: 254: if((motor_direction==MOTOR_DIRECTION_CW) 
      +                          && config.use_cw_limit)
 42547                           
 42548                           ; BSR set to: 0
 42549                           
 42550                           ; BSR set to: 0
 42551  00C64A  0101               	movlb	1	; () banked
 42552  00C64C  0555               	decf	_motor_direction& (0+255),w,b
 42553  00C64E  A4D8               	btfss	status,2,c
 42554  00C650  D061               	goto	l2461
 42555                           
 42556                           ; BSR set to: 1
 42557  00C652  51B7               	movf	(_config+22)& (0+255),w,b
 42558  00C654  B4D8               	btfsc	status,2,c
 42559  00C656  D05E               	goto	l2461
 42560                           
 42561                           ; BSR set to: 1
 42562                           ;motor.c: 256: {;motor.c: 258: motor_calculate_position_in_degrees();
 42563  00C658  EC1B  F090         	call	_motor_calculate_position_in_degrees	;wreg free
 42564                           
 42565                           ;motor.c: 261: if(config.cw_limit >= os.current_position_in_degrees)
 42566  00C65C  0101               	movlb	1	; () banked
 42567  00C65E  517C               	movf	(_os+11)& (0+255),w,b	;volatile
 42568  00C660  5DB8               	subwf	(_config+23)& (0+255),w,b
 42569  00C662  517D               	movf	(_os+12)& (0+255),w,b	;volatile
 42570  00C664  59B9               	subwfb	(_config+24)& (0+255),w,b
 42571  00C666  A0D8               	btfss	status,0,c
 42572  00C668  D014               	goto	l2459
 42573                           
 42574                           ; BSR set to: 1
 42575                           ;motor.c: 262: {;motor.c: 263: maximum_distance_in_degrees = config.cw_limit - os.curren
      +                          t_position_in_degrees;
 42576  00C66A  EE21  F07C         	lfsr	2,_os+11	;volatile
 42577  00C66E  CFDE F095          	movff	postinc2,??__motor_run
 42578  00C672  CFDD F096          	movff	postdec2,??__motor_run+1
 42579  00C676  0100               	movlb	0	; () banked
 42580  00C678  1F95               	comf	??__motor_run& (0+255),f,b
 42581  00C67A  1F96               	comf	(??__motor_run+1)& (0+255),f,b
 42582  00C67C  4B95               	infsnz	??__motor_run& (0+255),f,b
 42583  00C67E  2B96               	incf	(??__motor_run+1)& (0+255),f,b
 42584  00C680  0101               	movlb	1	; () banked
 42585  00C682  51B8               	movf	(_config+23)& (0+255),w,b
 42586  00C684  0100               	movlb	0	; () banked
 42587  00C686  2595               	addwf	??__motor_run& (0+255),w,b
 42588  00C688  6F9A               	movwf	__motor_run@maximum_distance_in_degrees& (0+255),b
 42589  00C68A  0101               	movlb	1	; () banked
 42590  00C68C  51B9               	movf	(_config+24)& (0+255),w,b
 42591  00C68E  0100               	movlb	0	; () banked
 42592  00C690  D017               	goto	L66
 42593  00C692                     l2459:
 42594                           
 42595                           ;motor.c: 265: else;motor.c: 266: {;motor.c: 268: maximum_distance_in_degrees = 36000 + 
      +                          config.cw_limit - os.current_position_in_degrees;
 42596                           
 42597                           ; BSR set to: 0
 42598  00C692  EE21  F07C         	lfsr	2,_os+11	;volatile
 42599  00C696  CFDE F095          	movff	postinc2,??__motor_run
 42600  00C69A  CFDD F096          	movff	postdec2,??__motor_run+1
 42601  00C69E  0100               	movlb	0	; () banked
 42602  00C6A0  1F95               	comf	??__motor_run& (0+255),f,b
 42603  00C6A2  1F96               	comf	(??__motor_run+1)& (0+255),f,b
 42604  00C6A4  4B95               	infsnz	??__motor_run& (0+255),f,b
 42605  00C6A6  2B96               	incf	(??__motor_run+1)& (0+255),f,b
 42606  00C6A8  0101               	movlb	1	; () banked
 42607  00C6AA  51B8               	movf	(_config+23)& (0+255),w,b
 42608  00C6AC  0100               	movlb	0	; () banked
 42609  00C6AE  2795               	addwf	??__motor_run& (0+255),f,b
 42610  00C6B0  0101               	movlb	1	; () banked
 42611  00C6B2  51B9               	movf	(_config+24)& (0+255),w,b
 42612  00C6B4  0100               	movlb	0	; () banked
 42613  00C6B6  2396               	addwfc	(??__motor_run+1)& (0+255),f,b
 42614  00C6B8  0EA0               	movlw	160
 42615  00C6BA  2595               	addwf	??__motor_run& (0+255),w,b
 42616  00C6BC  6F9A               	movwf	__motor_run@maximum_distance_in_degrees& (0+255),b
 42617  00C6BE  0E8C               	movlw	140
 42618  00C6C0                     L66:
 42619  00C6C0  2196               	addwfc	(??__motor_run+1)& (0+255),w,b
 42620  00C6C2  6F9B               	movwf	(__motor_run@maximum_distance_in_degrees+1)& (0+255),b
 42621                           
 42622                           ; BSR set to: 0
 42623                           ;motor.c: 269: };motor.c: 271: maximum_distance_in_steps = motor_steps_from_degrees(maxi
      +                          mum_distance_in_degrees);
 42624                           
 42625                           ; BSR set to: 0
 42626  00C6C4  C09A  F087         	movff	__motor_run@maximum_distance_in_degrees,motor_steps_from_degrees@degrees
 42627  00C6C8  C09B  F088         	movff	__motor_run@maximum_distance_in_degrees+1,motor_steps_from_degrees@degrees+1
 42628  00C6CC  ECC9  F08E         	call	_motor_steps_from_degrees	;wreg free
 42629  00C6D0  C087  F09C         	movff	?_motor_steps_from_degrees,__motor_run@maximum_distance_in_steps
 42630  00C6D4  C088  F09D         	movff	?_motor_steps_from_degrees+1,__motor_run@maximum_distance_in_steps+1
 42631  00C6D8  C089  F09E         	movff	?_motor_steps_from_degrees+2,__motor_run@maximum_distance_in_steps+2
 42632  00C6DC  C08A  F09F         	movff	?_motor_steps_from_degrees+3,__motor_run@maximum_distance_in_steps+3
 42633                           
 42634                           ;motor.c: 273: if(maximum_distance_in_steps<motor_final_stepcount)
 42635  00C6E0  0101               	movlb	1	; () banked
 42636  00C6E2  5127               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 42637  00C6E4  0100               	movlb	0	; () banked
 42638  00C6E6  5D9C               	subwf	__motor_run@maximum_distance_in_steps& (0+255),w,b
 42639  00C6E8  0101               	movlb	1	; () banked
 42640  00C6EA  5128               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 42641  00C6EC  0100               	movlb	0	; () banked
 42642  00C6EE  599D               	subwfb	(__motor_run@maximum_distance_in_steps+1)& (0+255),w,b
 42643  00C6F0  0101               	movlb	1	; () banked
 42644  00C6F2  5129               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 42645  00C6F4  0100               	movlb	0	; () banked
 42646  00C6F6  599E               	subwfb	(__motor_run@maximum_distance_in_steps+2)& (0+255),w,b
 42647  00C6F8  0101               	movlb	1	; () banked
 42648  00C6FA  512A               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 42649  00C6FC  0100               	movlb	0	; () banked
 42650  00C6FE  599F               	subwfb	(__motor_run@maximum_distance_in_steps+3)& (0+255),w,b
 42651  00C700  B0D8               	btfsc	status,0,c
 42652  00C702  D008               	goto	l2461
 42653                           
 42654                           ; BSR set to: 0
 42655                           ;motor.c: 274: {;motor.c: 275: motor_final_stepcount = maximum_distance_in_steps;
 42656  00C704  C09C  F127         	movff	__motor_run@maximum_distance_in_steps,_motor_final_stepcount	;volatile
 42657  00C708  C09D  F128         	movff	__motor_run@maximum_distance_in_steps+1,_motor_final_stepcount+1	;volatile
 42658  00C70C  C09E  F129         	movff	__motor_run@maximum_distance_in_steps+2,_motor_final_stepcount+2	;volatile
 42659  00C710  C09F  F12A         	movff	__motor_run@maximum_distance_in_steps+3,_motor_final_stepcount+3	;volatile
 42660  00C714                     l2461:
 42661                           
 42662                           ;motor.c: 276: };motor.c: 277: };motor.c: 281: if(motor_final_stepcount==0)
 42663                           
 42664                           ; BSR set to: 0
 42665                           
 42666                           ; BSR set to: 0
 42667  00C714  0101               	movlb	1	; () banked
 42668  00C716  5127               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 42669  00C718  1128               	iorwf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 42670  00C71A  1129               	iorwf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 42671  00C71C  112A               	iorwf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 42672  00C71E  B4D8               	btfsc	status,2,c
 42673  00C720  0012               	return	
 42674                           
 42675                           ; BSR set to: 1
 42676                           ;motor.c: 284: };motor.c: 287: if(speed==0)
 42677                           
 42678                           ; BSR set to: 1
 42679                           
 42680                           ; BSR set to: 1
 42681                           ;motor.c: 282: {;motor.c: 283: return;
 42682  00C722  0100               	movlb	0	; () banked
 42683  00C724  5193               	movf	__motor_run@speed& (0+255),w,b
 42684  00C726  1194               	iorwf	(__motor_run@speed+1)& (0+255),w,b
 42685  00C728  A4D8               	btfss	status,2,c
 42686  00C72A  D005               	goto	l2464
 42687                           
 42688                           ; BSR set to: 0
 42689                           ;motor.c: 288: {;motor.c: 289: motor_maximum_speed = config.maximum_speed;
 42690  00C72C  C1AC  F13F         	movff	_config+11,_motor_maximum_speed
 42691  00C730  C1AD  F140         	movff	_config+12,_motor_maximum_speed+1
 42692                           
 42693                           ;motor.c: 290: }
 42694  00C734  D004               	goto	l2465
 42695  00C736                     l2464:
 42696                           
 42697                           ; BSR set to: 0
 42698                           ;motor.c: 291: else;motor.c: 292: {;motor.c: 293: motor_maximum_speed = speed;
 42699  00C736  C093  F13F         	movff	__motor_run@speed,_motor_maximum_speed
 42700  00C73A  C094  F140         	movff	__motor_run@speed+1,_motor_maximum_speed+1
 42701  00C73E                     l2465:
 42702                           
 42703                           ; BSR set to: 0
 42704                           ;motor.c: 294: };motor.c: 297: motor_current_speed = 0;
 42705                           
 42706                           ; BSR set to: 0
 42707  00C73E  0E00               	movlw	0
 42708  00C740  6FFF               	movwf	(_motor_current_speed+1)& (0+255),b	;volatile
 42709  00C742  0E00               	movlw	0
 42710  00C744  6FFE               	movwf	_motor_current_speed& (0+255),b	;volatile
 42711                           
 42712                           ;motor.c: 298: motor_current_stepcount = 0;
 42713  00C746  0E00               	movlw	0
 42714  00C748  6E58               	movwf	_motor_current_stepcount,c	;volatile
 42715  00C74A  0E00               	movlw	0
 42716  00C74C  6E59               	movwf	_motor_current_stepcount+1,c	;volatile
 42717  00C74E  0E00               	movlw	0
 42718  00C750  6E5A               	movwf	_motor_current_stepcount+2,c	;volatile
 42719  00C752  0E00               	movlw	0
 42720  00C754  6E5B               	movwf	_motor_current_stepcount+3,c	;volatile
 42721                           
 42722                           ; BSR set to: 0
 42723                           ;motor.c: 300: motor_next_speed_check = motor_steps_lookup[1];
 42724  00C756  0E63               	movlw	low (_motor_steps_lookup+2)
 42725  00C758  6EF6               	movwf	tblptrl,c
 42726  00C75A  0E94               	movlw	high (_motor_steps_lookup+2)
 42727  00C75C  6EF7               	movwf	tblptrh,c
 42728  00C75E                     	if	0	;tblptru may be non-zero
 42729  00C75E                     	endif
 42730  00C75E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 42731  00C75E  0E00               	movlw	low (__mediumconst shr (0+16))
 42732  00C760  6EF8               	movwf	tblptru,c
 42733  00C762                     	endif
 42734  00C762  0009               	tblrd		*+
 42735  00C764  CFF5 F095          	movff	tablat,??__motor_run
 42736  00C768  0009               	tblrd		*+
 42737  00C76A  CFF5 F096          	movff	tablat,??__motor_run+1
 42738  00C76E  C095  F226         	movff	??__motor_run,_motor_next_speed_check	;volatile
 42739  00C772  C096  F227         	movff	??__motor_run+1,_motor_next_speed_check+1	;volatile
 42740  00C776  0102               	movlb	2	; () banked
 42741  00C778  6B28               	clrf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 42742  00C77A  6B29               	clrf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 42743                           
 42744                           ; BSR set to: 2
 42745                           ;motor.c: 303: CCP1CONbits.CCP1M = 0b0000;
 42746  00C77C  90BA               	bcf	4026,0,c	;volatile
 42747  00C77E  92BA               	bcf	4026,1,c	;volatile
 42748  00C780  94BA               	bcf	4026,2,c	;volatile
 42749  00C782  96BA               	bcf	4026,3,c	;volatile
 42750                           
 42751                           ; BSR set to: 2
 42752                           ;motor.c: 306: LATBbits.LB0 = 0;
 42753  00C784  908A               	bcf	3978,0,c	;volatile
 42754                           
 42755                           ; BSR set to: 2
 42756                           ;motor.c: 307: if(direction==MOTOR_DIRECTION_CCW)
 42757  00C786  0100               	movlb	0	; () banked
 42758  00C788  2999               	incf	__motor_run@direction& (0+255),w,b
 42759  00C78A  A4D8               	btfss	status,2,c
 42760  00C78C  D005               	goto	l2466
 42761                           
 42762                           ; BSR set to: 0
 42763                           ;motor.c: 308: {;motor.c: 309: if(config.inverse_direction)
 42764  00C78E  0101               	movlb	1	; () banked
 42765  00C790  51A5               	movf	(_config+4)& (0+255),w,b
 42766  00C792  B4D8               	btfsc	status,2,c
 42767  00C794  D005               	goto	u11790
 42768  00C796  D006               	goto	l2470
 42769  00C798                     l2466:
 42770                           
 42771                           ;motor.c: 314: else;motor.c: 315: {;motor.c: 316: if(config.inverse_direction)
 42772                           
 42773                           ; BSR set to: 1
 42774  00C798  0101               	movlb	1	; () banked
 42775  00C79A  51A5               	movf	(_config+4)& (0+255),w,b
 42776  00C79C  B4D8               	btfsc	status,2,c
 42777  00C79E  D002               	goto	l2470
 42778  00C7A0                     u11790:
 42779                           
 42780                           ; BSR set to: 1
 42781                           ;motor.c: 317: LATBbits.LB2 = 0;
 42782  00C7A0  948A               	bcf	3978,2,c	;volatile
 42783  00C7A2  D001               	goto	l2471
 42784  00C7A4                     l2470:
 42785                           
 42786                           ; BSR set to: 1
 42787                           ;motor.c: 318: else;motor.c: 319: LATBbits.LB2 = 1;
 42788  00C7A4  848A               	bsf	3978,2,c	;volatile
 42789  00C7A6                     l2471:
 42790                           
 42791                           ; BSR set to: 1
 42792                           ;motor.c: 320: };motor.c: 323: LATBbits.LB1 = 1;
 42793                           
 42794                           ; BSR set to: 1
 42795  00C7A6  828A               	bsf	3978,1,c	;volatile
 42796                           
 42797                           ; BSR set to: 1
 42798                           ;motor.c: 326: ++motor_current_stepcount;
 42799  00C7A8  0E01               	movlw	1
 42800  00C7AA  2658               	addwf	_motor_current_stepcount,f,c	;volatile
 42801  00C7AC  0E00               	movlw	0
 42802  00C7AE  2259               	addwfc	_motor_current_stepcount+1,f,c	;volatile
 42803  00C7B0  225A               	addwfc	_motor_current_stepcount+2,f,c	;volatile
 42804  00C7B2  225B               	addwfc	_motor_current_stepcount+3,f,c	;volatile
 42805                           
 42806                           ;motor.c: 329: os.current_position_in_steps += motor_direction;
 42807  00C7B4  5155               	movf	_motor_direction& (0+255),w,b
 42808  00C7B6  0100               	movlb	0	; () banked
 42809  00C7B8  6F95               	movwf	??__motor_run& (0+255),b
 42810  00C7BA  0E00               	movlw	0
 42811  00C7BC  BF95               	btfsc	??__motor_run& (0+255),7,b
 42812  00C7BE  0EFF               	movlw	255
 42813  00C7C0  6F96               	movwf	(??__motor_run+1)& (0+255),b
 42814  00C7C2  6F97               	movwf	(??__motor_run+2)& (0+255),b
 42815  00C7C4  6F98               	movwf	(??__motor_run+3)& (0+255),b
 42816  00C7C6  5195               	movf	??__motor_run& (0+255),w,b
 42817  00C7C8  0101               	movlb	1	; () banked
 42818  00C7CA  2778               	addwf	(_os+7)& (0+255),f,b	;volatile
 42819  00C7CC  0100               	movlb	0	; () banked
 42820  00C7CE  5196               	movf	(??__motor_run+1)& (0+255),w,b
 42821  00C7D0  0101               	movlb	1	; () banked
 42822  00C7D2  2379               	addwfc	(_os+8)& (0+255),f,b	;volatile
 42823  00C7D4  0100               	movlb	0	; () banked
 42824  00C7D6  5197               	movf	(??__motor_run+2)& (0+255),w,b
 42825  00C7D8  0101               	movlb	1	; () banked
 42826  00C7DA  237A               	addwfc	(_os+9)& (0+255),f,b	;volatile
 42827  00C7DC  0100               	movlb	0	; () banked
 42828  00C7DE  5198               	movf	(??__motor_run+3)& (0+255),w,b
 42829  00C7E0  0101               	movlb	1	; () banked
 42830  00C7E2  237B               	addwfc	(_os+10)& (0+255),f,b	;volatile
 42831                           
 42832                           ;motor.c: 330: if(os.current_position_in_steps==config.full_circle_in_steps)
 42833  00C7E4  51A1               	movf	_config& (0+255),w,b
 42834  00C7E6  1978               	xorwf	(_os+7)& (0+255),w,b	;volatile
 42835  00C7E8  E112               	bnz	l13185
 42836  00C7EA  51A2               	movf	(_config+1)& (0+255),w,b
 42837  00C7EC  1979               	xorwf	(_os+8)& (0+255),w,b	;volatile
 42838  00C7EE  E10F               	bnz	l13185
 42839  00C7F0  51A3               	movf	(_config+2)& (0+255),w,b
 42840  00C7F2  197A               	xorwf	(_os+9)& (0+255),w,b	;volatile
 42841  00C7F4  E10C               	bnz	l13185
 42842  00C7F6  51A4               	movf	(_config+3)& (0+255),w,b
 42843  00C7F8  197B               	xorwf	(_os+10)& (0+255),w,b	;volatile
 42844  00C7FA  A4D8               	btfss	status,2,c
 42845  00C7FC  D008               	goto	l2472
 42846                           
 42847                           ; BSR set to: 1
 42848                           ;motor.c: 331: os.current_position_in_steps = 0;
 42849  00C7FE  0E00               	movlw	0
 42850  00C800  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 42851  00C802  0E00               	movlw	0
 42852  00C804  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 42853  00C806  0E00               	movlw	0
 42854  00C808  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 42855  00C80A  0E00               	movlw	0
 42856  00C80C  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 42857  00C80E                     l2472:
 42858  00C80E                     l13185:
 42859                           
 42860                           ; BSR set to: 1
 42861                           ;motor.c: 332: if(os.current_position_in_steps==0xFFFFFFFF)
 42862  00C80E  2978               	incf	(_os+7)& (0+255),w,b	;volatile
 42863  00C810  E113               	bnz	l13189
 42864  00C812  2979               	incf	(_os+8)& (0+255),w,b	;volatile
 42865  00C814  E111               	bnz	l13189
 42866  00C816  297A               	incf	(_os+9)& (0+255),w,b	;volatile
 42867  00C818  E10F               	bnz	l13189
 42868  00C81A  297B               	incf	(_os+10)& (0+255),w,b	;volatile
 42869  00C81C  A4D8               	btfss	status,2,c
 42870  00C81E  D00C               	goto	l2473
 42871                           
 42872                           ; BSR set to: 1
 42873                           ;motor.c: 333: os.current_position_in_steps = (config.full_circle_in_steps-1);
 42874  00C820  0EFF               	movlw	255
 42875  00C822  25A1               	addwf	_config& (0+255),w,b
 42876  00C824  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 42877  00C826  0EFF               	movlw	255
 42878  00C828  21A2               	addwfc	(_config+1)& (0+255),w,b
 42879  00C82A  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 42880  00C82C  0EFF               	movlw	255
 42881  00C82E  21A3               	addwfc	(_config+2)& (0+255),w,b
 42882  00C830  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 42883  00C832  0EFF               	movlw	255
 42884  00C834  21A4               	addwfc	(_config+3)& (0+255),w,b
 42885  00C836  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 42886  00C838                     l2473:
 42887  00C838                     l13189:
 42888                           
 42889                           ; BSR set to: 1
 42890                           ;motor.c: 336: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 42891  00C838  0E55               	movlw	85
 42892  00C83A  6EA7               	movwf	4007,c	;volsfr
 42893                           
 42894                           ; BSR set to: 1
 42895  00C83C  0EAA               	movlw	170
 42896  00C83E  6EA7               	movwf	4007,c	;volsfr
 42897                           
 42898                           ; BSR set to: 1
 42899  00C840  010E               	movlb	14	; () banked
 42900  00C842  91BF               	bcf	191,0,b	;volatile
 42901                           
 42902                           ; BSR set to: 14
 42903                           ;motor.c: 337: RPOR4 = 0;
 42904  00C844  0E00               	movlw	0
 42905  00C846  6FC4               	movwf	196,b	;volatile
 42906                           
 42907                           ; BSR set to: 14
 42908                           ;motor.c: 338: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 42909  00C848  0E55               	movlw	85
 42910  00C84A  6EA7               	movwf	4007,c	;volsfr
 42911                           
 42912                           ; BSR set to: 14
 42913  00C84C  0EAA               	movlw	170
 42914  00C84E  6EA7               	movwf	4007,c	;volsfr
 42915                           
 42916                           ; BSR set to: 14
 42917  00C850  81BF               	bsf	191,0,b	;volatile
 42918                           
 42919                           ; BSR set to: 14
 42920                           ;motor.c: 341: motor_mode = MOTOR_MODE_MANUAL;
 42921  00C852  0E00               	movlw	0
 42922  00C854  0101               	movlb	1	; () banked
 42923  00C856  6F56               	movwf	_motor_mode& (0+255),b
 42924                           
 42925                           ; BSR set to: 1
 42926                           ;motor.c: 345: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_speed];
 42927  00C858  0EFD               	movlw	low _motor_prescaler_lookup
 42928  00C85A  0100               	movlb	0	; () banked
 42929  00C85C  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 42930  00C85E  6EF6               	movwf	tblptrl,c
 42931  00C860  0E9B               	movlw	high _motor_prescaler_lookup
 42932  00C862  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 42933  00C864  6EF7               	movwf	tblptrh,c
 42934  00C866                     	if	1	;There are 3 active tblptr bytes
 42935  00C866  6AF8               	clrf	tblptru,c
 42936  00C868  0E00               	movlw	low (__mediumconst shr (0+16))
 42937  00C86A  22F8               	addwfc	tblptru,f,c
 42938  00C86C                     	endif
 42939  00C86C  0008               	tblrd		*
 42940  00C86E  CFF5 F095          	movff	tablat,??__motor_run
 42941  00C872  50CA               	movf	4042,w,c	;volatile
 42942  00C874  1995               	xorwf	??__motor_run& (0+255),w,b
 42943  00C876  0BFC               	andlw	-4
 42944  00C878  1995               	xorwf	??__motor_run& (0+255),w,b
 42945  00C87A  6ECA               	movwf	4042,c	;volatile
 42946                           
 42947                           ; BSR set to: 0
 42948                           ;motor.c: 347: PR2 = motor_period_lookup[motor_current_speed];
 42949  00C87C  0E16               	movlw	low _motor_period_lookup
 42950  00C87E  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 42951  00C880  6EF6               	movwf	tblptrl,c
 42952  00C882  0E9A               	movlw	high _motor_period_lookup
 42953  00C884  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 42954  00C886  6EF7               	movwf	tblptrh,c
 42955  00C888                     	if	1	;There are 3 active tblptr bytes
 42956  00C888  6AF8               	clrf	tblptru,c
 42957  00C88A  0E00               	movlw	low (__mediumconst shr (0+16))
 42958  00C88C  22F8               	addwfc	tblptru,f,c
 42959  00C88E                     	endif
 42960  00C88E  0008               	tblrd		*
 42961  00C890  CFF5 FFCB          	movff	tablat,4043	;volatile
 42962                           
 42963                           ; BSR set to: 0
 42964                           ;motor.c: 349: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 42965  00C894  0E2F               	movlw	low _motor_postscaler_lookup
 42966  00C896  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 42967  00C898  6EF6               	movwf	tblptrl,c
 42968  00C89A  0E98               	movlw	high _motor_postscaler_lookup
 42969  00C89C  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 42970  00C89E  6EF7               	movwf	tblptrh,c
 42971  00C8A0                     	if	1	;There are 3 active tblptr bytes
 42972  00C8A0  6AF8               	clrf	tblptru,c
 42973  00C8A2  0E00               	movlw	low (__mediumconst shr (0+16))
 42974  00C8A4  22F8               	addwfc	tblptru,f,c
 42975  00C8A6                     	endif
 42976  00C8A6  0008               	tblrd		*
 42977  00C8A8  CFF5 F095          	movff	tablat,??__motor_run
 42978  00C8AC  4795               	rlncf	??__motor_run& (0+255),f,b
 42979  00C8AE  4795               	rlncf	??__motor_run& (0+255),f,b
 42980  00C8B0  4795               	rlncf	??__motor_run& (0+255),f,b
 42981  00C8B2  50CA               	movf	4042,w,c	;volatile
 42982  00C8B4  1995               	xorwf	??__motor_run& (0+255),w,b
 42983  00C8B6  0B87               	andlw	-121
 42984  00C8B8  1995               	xorwf	??__motor_run& (0+255),w,b
 42985  00C8BA  6ECA               	movwf	4042,c	;volatile
 42986                           
 42987                           ; BSR set to: 0
 42988                           ;motor.c: 351: CCPR1L = PR2>>1;
 42989  00C8BC  90D8               	bcf	status,0,c
 42990  00C8BE  30CB               	rrcf	4043,w,c	;volatile
 42991  00C8C0  6EBB               	movwf	4027,c	;volatile
 42992                           
 42993                           ; BSR set to: 0
 42994                           ;motor.c: 354: PIR1bits.TMR2IF = 0;
 42995  00C8C2  929E               	bcf	3998,1,c	;volatile
 42996                           
 42997                           ; BSR set to: 0
 42998                           ;motor.c: 355: PIE1bits.TMR2IE = 1;
 42999  00C8C4  829D               	bsf	3997,1,c	;volatile
 43000                           
 43001                           ; BSR set to: 0
 43002                           ;motor.c: 358: TMR2 = 0;
 43003  00C8C6  0E00               	movlw	0
 43004  00C8C8  6ECC               	movwf	4044,c	;volatile
 43005                           
 43006                           ; BSR set to: 0
 43007                           ;motor.c: 359: T2CONbits.TMR2ON = 1;
 43008  00C8CA  84CA               	bsf	4042,2,c	;volatile
 43009                           
 43010                           ; BSR set to: 0
 43011                           ;motor.c: 362: os.busy = 1;
 43012  00C8CC  0E01               	movlw	1
 43013  00C8CE  0101               	movlb	1	; () banked
 43014  00C8D0  6F7F               	movwf	(_os+14)& (0+255),b	;volatile
 43015                           
 43016                           ; BSR set to: 1
 43017  00C8D2  0012               	return		;funcret
 43018  00C8D4                     __end_of__motor_run:
 43019                           	opt stack 0
 43020                           tosu	equ	0xFFF
 43021                           tosh	equ	0xFFE
 43022                           tosl	equ	0xFFD
 43023                           pclath	equ	0xFFA
 43024                           tblptru	equ	0xFF8
 43025                           tblptrh	equ	0xFF7
 43026                           tblptrl	equ	0xFF6
 43027                           tablat	equ	0xFF5
 43028                           prodh	equ	0xFF4
 43029                           prodl	equ	0xFF3
 43030                           intcon	equ	0xFF2
 43031                           indf0	equ	0xFEF
 43032                           postinc0	equ	0xFEE
 43033                           fsr0h	equ	0xFEA
 43034                           fsr0l	equ	0xFE9
 43035                           wreg	equ	0xFE8
 43036                           indf1	equ	0xFE7
 43037                           postinc1	equ	0xFE6
 43038                           postdec1	equ	0xFE5
 43039                           plusw1	equ	0xFE3
 43040                           fsr1h	equ	0xFE2
 43041                           fsr1l	equ	0xFE1
 43042                           indf2	equ	0xFDF
 43043                           postinc2	equ	0xFDE
 43044                           postdec2	equ	0xFDD
 43045                           plusw2	equ	0xFDB
 43046                           fsr2h	equ	0xFDA
 43047                           fsr2l	equ	0xFD9
 43048                           status	equ	0xFD8
 43049                           
 43050 ;; *************** function _motor_steps_from_degrees *****************
 43051 ;; Defined at:
 43052 ;;		line 32 in file "motor.c"
 43053 ;; Parameters:    Size  Location     Type
 43054 ;;  degrees         2   39[BANK0 ] unsigned int 
 43055 ;; Auto vars:     Size  Location     Type
 43056 ;;  steps           4   43[BANK0 ] float 
 43057 ;; Return value:  Size  Location     Type
 43058 ;;                  4   39[BANK0 ] unsigned long 
 43059 ;; Registers used:
 43060 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 43061 ;; Tracked objects:
 43062 ;;		On entry : 0/0
 43063 ;;		On exit  : 0/0
 43064 ;;		Unchanged: 0/0
 43065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43066 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43067 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43069 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43070 ;;Total ram usage:        8 bytes
 43071 ;; Hardware stack levels used:    1
 43072 ;; Hardware stack levels required when called:   11
 43073 ;; This function calls:
 43074 ;;		___fldiv
 43075 ;;		___flmul
 43076 ;;		___fltol
 43077 ;;		___xxtofl
 43078 ;; This function is called by:
 43079 ;;		_motor_nonzero_steps_from_degrees
 43080 ;;		__motor_run
 43081 ;; This function uses a non-reentrant model
 43082 ;;
 43083                           
 43084                           	psect	text178
 43085  011D92                     __ptext178:
 43086                           	opt stack 0
 43087  011D92                     _motor_steps_from_degrees:
 43088                           	opt stack 17
 43089                           
 43090                           ;motor.c: 34: float steps;;motor.c: 37: if(degrees==0)
 43091                           
 43092                           ; BSR set to: 1
 43093                           ;incstack = 0
 43094  011D92  0100               	movlb	0	; () banked
 43095  011D94  5187               	movf	motor_steps_from_degrees@degrees& (0+255),w,b
 43096  011D96  1188               	iorwf	(motor_steps_from_degrees@degrees+1)& (0+255),w,b
 43097  011D98  A4D8               	btfss	status,2,c
 43098  011D9A  D009               	goto	l2403
 43099                           
 43100                           ; BSR set to: 0
 43101                           ;motor.c: 38: {;motor.c: 39: return 0;
 43102  011D9C  0E00               	movlw	0
 43103  011D9E  6F87               	movwf	?_motor_steps_from_degrees& (0+255),b
 43104  011DA0  0E00               	movlw	0
 43105  011DA2  6F88               	movwf	(?_motor_steps_from_degrees+1)& (0+255),b
 43106  011DA4  0E00               	movlw	0
 43107  011DA6  6F89               	movwf	(?_motor_steps_from_degrees+2)& (0+255),b
 43108  011DA8  0E00               	movlw	0
 43109  011DAA  6F8A               	movwf	(?_motor_steps_from_degrees+3)& (0+255),b
 43110                           
 43111                           ; BSR set to: 0
 43112  011DAC  0012               	return	
 43113  011DAE                     l2403:
 43114                           
 43115                           ; BSR set to: 0
 43116                           ;motor.c: 40: };motor.c: 42: steps = (float) degrees;
 43117                           
 43118                           ; BSR set to: 0
 43119  011DAE  C087  F060         	movff	motor_steps_from_degrees@degrees,___xxtofl@val
 43120  011DB2  C088  F061         	movff	motor_steps_from_degrees@degrees+1,___xxtofl@val+1
 43121  011DB6  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 43122  011DB8  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 43123  011DBA  0E00               	movlw	0
 43124  011DBC  EC34  F081         	call	___xxtofl
 43125  011DC0  C060  F08B         	movff	?___xxtofl,motor_steps_from_degrees@steps
 43126  011DC4  C061  F08C         	movff	?___xxtofl+1,motor_steps_from_degrees@steps+1
 43127  011DC8  C062  F08D         	movff	?___xxtofl+2,motor_steps_from_degrees@steps+2
 43128  011DCC  C063  F08E         	movff	?___xxtofl+3,motor_steps_from_degrees@steps+3
 43129                           
 43130                           ;motor.c: 43: steps *= config.full_circle_in_steps;
 43131  011DD0  C08B  F06E         	movff	motor_steps_from_degrees@steps,___flmul@b
 43132  011DD4  C08C  F06F         	movff	motor_steps_from_degrees@steps+1,___flmul@b+1
 43133  011DD8  C08D  F070         	movff	motor_steps_from_degrees@steps+2,___flmul@b+2
 43134  011DDC  C08E  F071         	movff	motor_steps_from_degrees@steps+3,___flmul@b+3
 43135  011DE0  C1A1  F060         	movff	_config,___xxtofl@val
 43136  011DE4  C1A2  F061         	movff	_config+1,___xxtofl@val+1
 43137  011DE8  C1A3  F062         	movff	_config+2,___xxtofl@val+2
 43138  011DEC  C1A4  F063         	movff	_config+3,___xxtofl@val+3
 43139  011DF0  0E00               	movlw	0
 43140  011DF2  EC34  F081         	call	___xxtofl
 43141  011DF6  C060  F072         	movff	?___xxtofl,___flmul@a
 43142  011DFA  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 43143  011DFE  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 43144  011E02  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 43145  011E06  EC1E  F066         	call	___flmul	;wreg free
 43146  011E0A  C06E  F08B         	movff	?___flmul,motor_steps_from_degrees@steps
 43147  011E0E  C06F  F08C         	movff	?___flmul+1,motor_steps_from_degrees@steps+1
 43148  011E12  C070  F08D         	movff	?___flmul+2,motor_steps_from_degrees@steps+2
 43149  011E16  C071  F08E         	movff	?___flmul+3,motor_steps_from_degrees@steps+3
 43150                           
 43151                           ;motor.c: 44: steps /= 36000;
 43152  011E1A  C08B  F06E         	movff	motor_steps_from_degrees@steps,___fldiv@b
 43153  011E1E  C08C  F06F         	movff	motor_steps_from_degrees@steps+1,___fldiv@b+1
 43154  011E22  C08D  F070         	movff	motor_steps_from_degrees@steps+2,___fldiv@b+2
 43155  011E26  C08E  F071         	movff	motor_steps_from_degrees@steps+3,___fldiv@b+3
 43156  011E2A  0E00               	movlw	0
 43157  011E2C  0100               	movlb	0	; () banked
 43158  011E2E  6F72               	movwf	___fldiv@a& (0+255),b
 43159  011E30  0EA0               	movlw	160
 43160  011E32  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 43161  011E34  0E0C               	movlw	12
 43162  011E36  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 43163  011E38  0E47               	movlw	71
 43164  011E3A  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 43165  011E3C  ECD6  F06D         	call	___fldiv	;wreg free
 43166  011E40  C06E  F08B         	movff	?___fldiv,motor_steps_from_degrees@steps
 43167  011E44  C06F  F08C         	movff	?___fldiv+1,motor_steps_from_degrees@steps+1
 43168  011E48  C070  F08D         	movff	?___fldiv+2,motor_steps_from_degrees@steps+2
 43169  011E4C  C071  F08E         	movff	?___fldiv+3,motor_steps_from_degrees@steps+3
 43170                           
 43171                           ;motor.c: 46: return (uint32_t) steps;
 43172  011E50  C08B  F060         	movff	motor_steps_from_degrees@steps,___fltol@f1
 43173  011E54  C08C  F061         	movff	motor_steps_from_degrees@steps+1,___fltol@f1+1
 43174  011E58  C08D  F062         	movff	motor_steps_from_degrees@steps+2,___fltol@f1+2
 43175  011E5C  C08E  F063         	movff	motor_steps_from_degrees@steps+3,___fltol@f1+3
 43176  011E60  EC8A  F090         	call	___fltol	;wreg free
 43177  011E64  C060  F087         	movff	?___fltol,?_motor_steps_from_degrees
 43178  011E68  C061  F088         	movff	?___fltol+1,?_motor_steps_from_degrees+1
 43179  011E6C  C062  F089         	movff	?___fltol+2,?_motor_steps_from_degrees+2
 43180  011E70  C063  F08A         	movff	?___fltol+3,?_motor_steps_from_degrees+3
 43181  011E74  0012               	return	
 43182  011E76                     __end_of_motor_steps_from_degrees:
 43183                           	opt stack 0
 43184                           tosu	equ	0xFFF
 43185                           tosh	equ	0xFFE
 43186                           tosl	equ	0xFFD
 43187                           pclath	equ	0xFFA
 43188                           tblptru	equ	0xFF8
 43189                           tblptrh	equ	0xFF7
 43190                           tblptrl	equ	0xFF6
 43191                           tablat	equ	0xFF5
 43192                           prodh	equ	0xFF4
 43193                           prodl	equ	0xFF3
 43194                           intcon	equ	0xFF2
 43195                           indf0	equ	0xFEF
 43196                           postinc0	equ	0xFEE
 43197                           fsr0h	equ	0xFEA
 43198                           fsr0l	equ	0xFE9
 43199                           wreg	equ	0xFE8
 43200                           indf1	equ	0xFE7
 43201                           postinc1	equ	0xFE6
 43202                           postdec1	equ	0xFE5
 43203                           plusw1	equ	0xFE3
 43204                           fsr1h	equ	0xFE2
 43205                           fsr1l	equ	0xFE1
 43206                           indf2	equ	0xFDF
 43207                           postinc2	equ	0xFDE
 43208                           postdec2	equ	0xFDD
 43209                           plusw2	equ	0xFDB
 43210                           fsr2h	equ	0xFDA
 43211                           fsr2l	equ	0xFD9
 43212                           status	equ	0xFD8
 43213                           
 43214 ;; *************** function _motor_calculate_position_in_degrees *****************
 43215 ;; Defined at:
 43216 ;;		line 59 in file "motor.c"
 43217 ;; Parameters:    Size  Location     Type
 43218 ;;		None
 43219 ;; Auto vars:     Size  Location     Type
 43220 ;;  tmp             4   39[BANK0 ] float 
 43221 ;; Return value:  Size  Location     Type
 43222 ;;                  1    wreg      void 
 43223 ;; Registers used:
 43224 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 43225 ;; Tracked objects:
 43226 ;;		On entry : 0/0
 43227 ;;		On exit  : 0/0
 43228 ;;		Unchanged: 0/0
 43229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43231 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43233 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43234 ;;Total ram usage:        4 bytes
 43235 ;; Hardware stack levels used:    1
 43236 ;; Hardware stack levels required when called:   11
 43237 ;; This function calls:
 43238 ;;		___fldiv
 43239 ;;		___flmul
 43240 ;;		___fltol
 43241 ;;		___xxtofl
 43242 ;; This function is called by:
 43243 ;;		_main
 43244 ;;		_system_init
 43245 ;;		__motor_run
 43246 ;; This function uses a non-reentrant model
 43247 ;;
 43248                           
 43249                           	psect	text179
 43250  012036                     __ptext179:
 43251                           	opt stack 0
 43252  012036                     _motor_calculate_position_in_degrees:
 43253                           	opt stack 18
 43254                           
 43255                           ;motor.c: 61: float tmp;;motor.c: 63: tmp = (float) os.current_position_in_steps;
 43256                           
 43257                           ;incstack = 0
 43258  012036  C178  F060         	movff	_os+7,___xxtofl@val	;volatile
 43259  01203A  C179  F061         	movff	_os+8,___xxtofl@val+1	;volatile
 43260  01203E  C17A  F062         	movff	_os+9,___xxtofl@val+2	;volatile
 43261  012042  C17B  F063         	movff	_os+10,___xxtofl@val+3	;volatile
 43262  012046  0E00               	movlw	0
 43263  012048  EC34  F081         	call	___xxtofl
 43264  01204C  C060  F087         	movff	?___xxtofl,motor_calculate_position_in_degrees@tmp
 43265  012050  C061  F088         	movff	?___xxtofl+1,motor_calculate_position_in_degrees@tmp+1
 43266  012054  C062  F089         	movff	?___xxtofl+2,motor_calculate_position_in_degrees@tmp+2
 43267  012058  C063  F08A         	movff	?___xxtofl+3,motor_calculate_position_in_degrees@tmp+3
 43268                           
 43269                           ;motor.c: 64: tmp *= 36000;
 43270  01205C  C087  F06E         	movff	motor_calculate_position_in_degrees@tmp,___flmul@b
 43271  012060  C088  F06F         	movff	motor_calculate_position_in_degrees@tmp+1,___flmul@b+1
 43272  012064  C089  F070         	movff	motor_calculate_position_in_degrees@tmp+2,___flmul@b+2
 43273  012068  C08A  F071         	movff	motor_calculate_position_in_degrees@tmp+3,___flmul@b+3
 43274  01206C  0E00               	movlw	0
 43275  01206E  0100               	movlb	0	; () banked
 43276  012070  6F72               	movwf	___flmul@a& (0+255),b
 43277  012072  0EA0               	movlw	160
 43278  012074  6F73               	movwf	(___flmul@a+1)& (0+255),b
 43279  012076  0E0C               	movlw	12
 43280  012078  6F74               	movwf	(___flmul@a+2)& (0+255),b
 43281  01207A  0E47               	movlw	71
 43282  01207C  6F75               	movwf	(___flmul@a+3)& (0+255),b
 43283  01207E  EC1E  F066         	call	___flmul	;wreg free
 43284  012082  C06E  F087         	movff	?___flmul,motor_calculate_position_in_degrees@tmp
 43285  012086  C06F  F088         	movff	?___flmul+1,motor_calculate_position_in_degrees@tmp+1
 43286  01208A  C070  F089         	movff	?___flmul+2,motor_calculate_position_in_degrees@tmp+2
 43287  01208E  C071  F08A         	movff	?___flmul+3,motor_calculate_position_in_degrees@tmp+3
 43288                           
 43289                           ;motor.c: 65: tmp /= config.full_circle_in_steps;
 43290  012092  C087  F06E         	movff	motor_calculate_position_in_degrees@tmp,___fldiv@b
 43291  012096  C088  F06F         	movff	motor_calculate_position_in_degrees@tmp+1,___fldiv@b+1
 43292  01209A  C089  F070         	movff	motor_calculate_position_in_degrees@tmp+2,___fldiv@b+2
 43293  01209E  C08A  F071         	movff	motor_calculate_position_in_degrees@tmp+3,___fldiv@b+3
 43294  0120A2  C1A1  F060         	movff	_config,___xxtofl@val
 43295  0120A6  C1A2  F061         	movff	_config+1,___xxtofl@val+1
 43296  0120AA  C1A3  F062         	movff	_config+2,___xxtofl@val+2
 43297  0120AE  C1A4  F063         	movff	_config+3,___xxtofl@val+3
 43298  0120B2  0E00               	movlw	0
 43299  0120B4  EC34  F081         	call	___xxtofl
 43300  0120B8  C060  F072         	movff	?___xxtofl,___fldiv@a
 43301  0120BC  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
 43302  0120C0  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
 43303  0120C4  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
 43304  0120C8  ECD6  F06D         	call	___fldiv	;wreg free
 43305  0120CC  C06E  F087         	movff	?___fldiv,motor_calculate_position_in_degrees@tmp
 43306  0120D0  C06F  F088         	movff	?___fldiv+1,motor_calculate_position_in_degrees@tmp+1
 43307  0120D4  C070  F089         	movff	?___fldiv+2,motor_calculate_position_in_degrees@tmp+2
 43308  0120D8  C071  F08A         	movff	?___fldiv+3,motor_calculate_position_in_degrees@tmp+3
 43309                           
 43310                           ;motor.c: 67: os.current_position_in_degrees = (uint16_t) tmp;
 43311  0120DC  C087  F060         	movff	motor_calculate_position_in_degrees@tmp,___fltol@f1
 43312  0120E0  C088  F061         	movff	motor_calculate_position_in_degrees@tmp+1,___fltol@f1+1
 43313  0120E4  C089  F062         	movff	motor_calculate_position_in_degrees@tmp+2,___fltol@f1+2
 43314  0120E8  C08A  F063         	movff	motor_calculate_position_in_degrees@tmp+3,___fltol@f1+3
 43315  0120EC  EC8A  F090         	call	___fltol	;wreg free
 43316  0120F0  C060  F17C         	movff	?___fltol,_os+11	;volatile
 43317  0120F4  C061  F17D         	movff	?___fltol+1,_os+12	;volatile
 43318                           
 43319                           ;motor.c: 68: if(os.current_position_in_degrees==36000)
 43320  0120F8  0EA0               	movlw	160
 43321  0120FA  0101               	movlb	1	; () banked
 43322  0120FC  197C               	xorwf	(_os+11)& (0+255),w,b	;volatile
 43323  0120FE  E109               	bnz	l2412
 43324  012100  0E8C               	movlw	140
 43325  012102  197D               	xorwf	(_os+12)& (0+255),w,b	;volatile
 43326  012104  A4D8               	btfss	status,2,c
 43327  012106  0012               	return	
 43328                           
 43329                           ; BSR set to: 1
 43330                           ;motor.c: 69: {;motor.c: 71: os.current_position_in_degrees = 0;
 43331  012108  0E00               	movlw	0
 43332  01210A  6F7D               	movwf	(_os+12)& (0+255),b	;volatile
 43333  01210C  0E00               	movlw	0
 43334  01210E  6F7C               	movwf	(_os+11)& (0+255),b	;volatile
 43335  012110  0012               	return	
 43336  012112                     l2412:
 43337                           
 43338                           ; BSR set to: 1
 43339  012112  0012               	return		;funcret
 43340  012114                     __end_of_motor_calculate_position_in_degrees:
 43341                           	opt stack 0
 43342                           tosu	equ	0xFFF
 43343                           tosh	equ	0xFFE
 43344                           tosl	equ	0xFFD
 43345                           pclath	equ	0xFFA
 43346                           tblptru	equ	0xFF8
 43347                           tblptrh	equ	0xFF7
 43348                           tblptrl	equ	0xFF6
 43349                           tablat	equ	0xFF5
 43350                           prodh	equ	0xFF4
 43351                           prodl	equ	0xFF3
 43352                           intcon	equ	0xFF2
 43353                           indf0	equ	0xFEF
 43354                           postinc0	equ	0xFEE
 43355                           fsr0h	equ	0xFEA
 43356                           fsr0l	equ	0xFE9
 43357                           wreg	equ	0xFE8
 43358                           indf1	equ	0xFE7
 43359                           postinc1	equ	0xFE6
 43360                           postdec1	equ	0xFE5
 43361                           plusw1	equ	0xFE3
 43362                           fsr1h	equ	0xFE2
 43363                           fsr1l	equ	0xFE1
 43364                           indf2	equ	0xFDF
 43365                           postinc2	equ	0xFDE
 43366                           postdec2	equ	0xFDD
 43367                           plusw2	equ	0xFDB
 43368                           fsr2h	equ	0xFDA
 43369                           fsr2l	equ	0xFD9
 43370                           status	equ	0xFD8
 43371                           
 43372 ;; *************** function ___xxtofl *****************
 43373 ;; Defined at:
 43374 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
 43375 ;; Parameters:    Size  Location     Type
 43376 ;;  sign            1    wreg     unsigned char 
 43377 ;;  val             4    0[BANK0 ] long 
 43378 ;; Auto vars:     Size  Location     Type
 43379 ;;  sign            1    8[BANK0 ] unsigned char 
 43380 ;;  arg             4   10[BANK0 ] unsigned long 
 43381 ;;  exp             1    9[BANK0 ] unsigned char 
 43382 ;; Return value:  Size  Location     Type
 43383 ;;                  4    0[BANK0 ] unsigned char 
 43384 ;; Registers used:
 43385 ;;		wreg, status,2, status,0
 43386 ;; Tracked objects:
 43387 ;;		On entry : 0/0
 43388 ;;		On exit  : 0/0
 43389 ;;		Unchanged: 0/0
 43390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43391 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43392 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43393 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43394 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43395 ;;Total ram usage:       14 bytes
 43396 ;; Hardware stack levels used:    1
 43397 ;; Hardware stack levels required when called:   10
 43398 ;; This function calls:
 43399 ;;		Nothing
 43400 ;; This function is called by:
 43401 ;;		_motor_steps_from_degrees
 43402 ;;		_motor_calculate_position_in_degrees
 43403 ;;		__motor_get_speed_in_degrees
 43404 ;;		__step_position_from_divide_position
 43405 ;;		_motor_divide_jump_to_nearest
 43406 ;;		_motor_arc_move
 43407 ;;		_adc_read_temperature
 43408 ;;		_motor_go_to_degrees_position
 43409 ;; This function uses a non-reentrant model
 43410 ;;
 43411                           
 43412                           	psect	text180
 43413  010268                     __ptext180:
 43414                           	opt stack 0
 43415  010268                     ___xxtofl:
 43416                           	opt stack 18
 43417                           
 43418                           ; BSR set to: 1
 43419                           ;incstack = 0
 43420                           ;___xxtofl@sign stored from wreg
 43421  010268  0100               	movlb	0	; () banked
 43422  01026A  6F68               	movwf	___xxtofl@sign& (0+255),b
 43423  01026C  0100               	movlb	0	; () banked
 43424  01026E  5168               	movf	___xxtofl@sign& (0+255),w,b
 43425  010270  A4D8               	btfss	status,2,c
 43426                           
 43427                           ; BSR set to: 0
 43428  010272  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 43429  010274  D01A               	goto	l3614
 43430                           
 43431                           ; BSR set to: 0
 43432  010276  C060  F064         	movff	___xxtofl@val,??___xxtofl
 43433  01027A  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
 43434  01027E  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
 43435  010282  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
 43436  010286  1F64               	comf	??___xxtofl& (0+255),f,b
 43437  010288  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
 43438  01028A  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
 43439  01028C  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
 43440  01028E  2B64               	incf	??___xxtofl& (0+255),f,b
 43441  010290  0E00               	movlw	0
 43442  010292  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
 43443  010294  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
 43444  010296  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
 43445  010298  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
 43446  01029C  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
 43447  0102A0  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
 43448  0102A4  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
 43449  0102A8  D008               	goto	l3615
 43450  0102AA                     l3614:
 43451                           
 43452                           ; BSR set to: 0
 43453  0102AA  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
 43454  0102AE  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 43455  0102B2  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 43456  0102B6  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 43457  0102BA                     l3615:
 43458                           
 43459                           ; BSR set to: 0
 43460                           
 43461                           ; BSR set to: 0
 43462  0102BA  5160               	movf	___xxtofl@val& (0+255),w,b
 43463  0102BC  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 43464  0102BE  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 43465  0102C0  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 43466  0102C2  A4D8               	btfss	status,2,c
 43467  0102C4  D009               	goto	l3616
 43468                           
 43469                           ; BSR set to: 0
 43470  0102C6  0E00               	movlw	0
 43471  0102C8  6F60               	movwf	?___xxtofl& (0+255),b
 43472  0102CA  0E00               	movlw	0
 43473  0102CC  6F61               	movwf	(?___xxtofl+1)& (0+255),b
 43474  0102CE  0E00               	movlw	0
 43475  0102D0  6F62               	movwf	(?___xxtofl+2)& (0+255),b
 43476  0102D2  0E00               	movlw	0
 43477  0102D4  6F63               	movwf	(?___xxtofl+3)& (0+255),b
 43478                           
 43479                           ; BSR set to: 0
 43480  0102D6  0012               	return	
 43481  0102D8                     l3616:
 43482                           
 43483                           ; BSR set to: 0
 43484                           
 43485                           ; BSR set to: 0
 43486  0102D8  0E96               	movlw	150
 43487  0102DA  6F69               	movwf	___xxtofl@exp& (0+255),b
 43488  0102DC  D006               	goto	l3618
 43489  0102DE                     
 43490                           ; BSR set to: 0
 43491                           
 43492                           ; BSR set to: 0
 43493  0102DE  2B69               	incf	___xxtofl@exp& (0+255),f,b
 43494  0102E0  90D8               	bcf	status,0,c
 43495  0102E2  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 43496  0102E4  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 43497  0102E6  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 43498  0102E8  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 43499  0102EA                     l3618:
 43500                           
 43501                           ; BSR set to: 0
 43502                           
 43503                           ; BSR set to: 0
 43504  0102EA  0E00               	movlw	0
 43505  0102EC  156A               	andwf	___xxtofl@arg& (0+255),w,b
 43506  0102EE  6F64               	movwf	??___xxtofl& (0+255),b
 43507  0102F0  0E00               	movlw	0
 43508  0102F2  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 43509  0102F4  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 43510  0102F6  0E00               	movlw	0
 43511  0102F8  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 43512  0102FA  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 43513  0102FC  0EFE               	movlw	254
 43514  0102FE  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 43515  010300  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 43516  010302  5164               	movf	??___xxtofl& (0+255),w,b
 43517  010304  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 43518  010306  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 43519  010308  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 43520  01030A  B4D8               	btfsc	status,2,c
 43521  01030C  D00D               	goto	l3621
 43522  01030E  D7E7               	goto	l3619
 43523  010310                     
 43524                           ; BSR set to: 0
 43525                           
 43526                           ; BSR set to: 0
 43527  010310  2B69               	incf	___xxtofl@exp& (0+255),f,b
 43528                           
 43529                           ; BSR set to: 0
 43530  010312  0E01               	movlw	1
 43531  010314  276A               	addwf	___xxtofl@arg& (0+255),f,b
 43532  010316  0E00               	movlw	0
 43533  010318  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 43534  01031A  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 43535  01031C  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 43536                           
 43537                           ; BSR set to: 0
 43538  01031E  90D8               	bcf	status,0,c
 43539  010320  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 43540  010322  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 43541  010324  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 43542  010326  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 43543  010328                     l3621:
 43544                           
 43545                           ; BSR set to: 0
 43546  010328  0E00               	movlw	0
 43547  01032A  156A               	andwf	___xxtofl@arg& (0+255),w,b
 43548  01032C  6F64               	movwf	??___xxtofl& (0+255),b
 43549  01032E  0E00               	movlw	0
 43550  010330  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 43551  010332  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 43552  010334  0E00               	movlw	0
 43553  010336  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 43554  010338  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 43555  01033A  0EFF               	movlw	255
 43556  01033C  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 43557  01033E  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 43558  010340  5164               	movf	??___xxtofl& (0+255),w,b
 43559  010342  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 43560  010344  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 43561  010346  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 43562  010348  B4D8               	btfsc	status,2,c
 43563  01034A  D007               	goto	l3624
 43564  01034C  D7E1               	goto	l3622
 43565  01034E                     
 43566                           ; BSR set to: 0
 43567                           
 43568                           ; BSR set to: 0
 43569  01034E  0769               	decf	___xxtofl@exp& (0+255),f,b
 43570  010350  90D8               	bcf	status,0,c
 43571  010352  376A               	rlcf	___xxtofl@arg& (0+255),f,b
 43572  010354  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 43573  010356  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 43574  010358  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 43575  01035A                     l3624:
 43576                           
 43577                           ; BSR set to: 0
 43578                           
 43579                           ; BSR set to: 0
 43580  01035A  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 43581  01035C  D003               	goto	u10540
 43582                           
 43583                           ; BSR set to: 0
 43584  01035E  0E02               	movlw	2
 43585  010360  6169               	cpfslt	___xxtofl@exp& (0+255),b
 43586  010362  D7F5               	goto	l3625
 43587  010364                     u10540:
 43588                           
 43589                           ; BSR set to: 0
 43590                           
 43591                           ; BSR set to: 0
 43592  010364  A169               	btfss	___xxtofl@exp& (0+255),0,b
 43593                           
 43594                           ; BSR set to: 0
 43595  010366  9F6C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 43596                           
 43597                           ; BSR set to: 0
 43598                           
 43599                           ; BSR set to: 0
 43600  010368  90D8               	bcf	status,0,c
 43601  01036A  3369               	rrcf	___xxtofl@exp& (0+255),f,b
 43602                           
 43603                           ; BSR set to: 0
 43604  01036C  C069  F064         	movff	___xxtofl@exp,??___xxtofl
 43605  010370  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 43606  010372  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 43607  010374  6B67               	clrf	(??___xxtofl+3)& (0+255),b
 43608  010376  C064  F067         	movff	??___xxtofl,??___xxtofl+3
 43609  01037A  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 43610  01037C  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 43611  01037E  6B64               	clrf	??___xxtofl& (0+255),b
 43612  010380  5164               	movf	??___xxtofl& (0+255),w,b
 43613  010382  136A               	iorwf	___xxtofl@arg& (0+255),f,b
 43614  010384  5165               	movf	(??___xxtofl+1)& (0+255),w,b
 43615  010386  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 43616  010388  5166               	movf	(??___xxtofl+2)& (0+255),w,b
 43617  01038A  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 43618  01038C  5167               	movf	(??___xxtofl+3)& (0+255),w,b
 43619  01038E  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 43620                           
 43621                           ; BSR set to: 0
 43622  010390  5168               	movf	___xxtofl@sign& (0+255),w,b
 43623  010392  A4D8               	btfss	status,2,c
 43624                           
 43625                           ; BSR set to: 0
 43626  010394  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 43627  010396  D001               	goto	l3630
 43628                           
 43629                           ; BSR set to: 0
 43630  010398  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 43631  01039A                     l3630:
 43632                           
 43633                           ; BSR set to: 0
 43634                           
 43635                           ; BSR set to: 0
 43636  01039A  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
 43637  01039E  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
 43638  0103A2  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
 43639  0103A6  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
 43640  0103AA  0012               	return	
 43641  0103AC                     __end_of___xxtofl:
 43642                           	opt stack 0
 43643                           tosu	equ	0xFFF
 43644                           tosh	equ	0xFFE
 43645                           tosl	equ	0xFFD
 43646                           pclath	equ	0xFFA
 43647                           tblptru	equ	0xFF8
 43648                           tblptrh	equ	0xFF7
 43649                           tblptrl	equ	0xFF6
 43650                           tablat	equ	0xFF5
 43651                           prodh	equ	0xFF4
 43652                           prodl	equ	0xFF3
 43653                           intcon	equ	0xFF2
 43654                           indf0	equ	0xFEF
 43655                           postinc0	equ	0xFEE
 43656                           fsr0h	equ	0xFEA
 43657                           fsr0l	equ	0xFE9
 43658                           wreg	equ	0xFE8
 43659                           indf1	equ	0xFE7
 43660                           postinc1	equ	0xFE6
 43661                           postdec1	equ	0xFE5
 43662                           plusw1	equ	0xFE3
 43663                           fsr1h	equ	0xFE2
 43664                           fsr1l	equ	0xFE1
 43665                           indf2	equ	0xFDF
 43666                           postinc2	equ	0xFDE
 43667                           postdec2	equ	0xFDD
 43668                           plusw2	equ	0xFDB
 43669                           fsr2h	equ	0xFDA
 43670                           fsr2l	equ	0xFD9
 43671                           status	equ	0xFD8
 43672                           
 43673 ;; *************** function ___fltol *****************
 43674 ;; Defined at:
 43675 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
 43676 ;; Parameters:    Size  Location     Type
 43677 ;;  f1              4    0[BANK0 ] unsigned char 
 43678 ;; Auto vars:     Size  Location     Type
 43679 ;;  exp1            1    9[BANK0 ] unsigned char 
 43680 ;;  sign1           1    8[BANK0 ] unsigned char 
 43681 ;; Return value:  Size  Location     Type
 43682 ;;                  4    0[BANK0 ] long 
 43683 ;; Registers used:
 43684 ;;		wreg, status,2, status,0
 43685 ;; Tracked objects:
 43686 ;;		On entry : 0/0
 43687 ;;		On exit  : 0/0
 43688 ;;		Unchanged: 0/0
 43689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43690 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43691 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43692 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43693 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43694 ;;Total ram usage:       10 bytes
 43695 ;; Hardware stack levels used:    1
 43696 ;; Hardware stack levels required when called:   10
 43697 ;; This function calls:
 43698 ;;		Nothing
 43699 ;; This function is called by:
 43700 ;;		_motor_steps_from_degrees
 43701 ;;		_motor_calculate_position_in_degrees
 43702 ;;		__motor_get_speed_in_degrees
 43703 ;;		__step_position_from_divide_position
 43704 ;;		_motor_divide_jump_to_nearest
 43705 ;;		_motor_arc_move
 43706 ;;		_adc_read_temperature
 43707 ;;		_motor_go_to_degrees_position
 43708 ;; This function uses a non-reentrant model
 43709 ;;
 43710                           
 43711                           	psect	text181
 43712  012114                     __ptext181:
 43713                           	opt stack 0
 43714  012114                     ___fltol:
 43715                           	opt stack 18
 43716                           
 43717                           ; BSR set to: 0
 43718                           ;incstack = 0
 43719  012114  0100               	movlb	0	; () banked
 43720  012116  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
 43721  012118  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
 43722  01211A  6F69               	movwf	___fltol@exp1& (0+255),b
 43723  01211C  5169               	movf	___fltol@exp1& (0+255),w,b
 43724  01211E  A4D8               	btfss	status,2,c
 43725  012120  D009               	goto	l3259
 43726                           
 43727                           ; BSR set to: 0
 43728  012122  0E00               	movlw	0
 43729  012124  6F60               	movwf	?___fltol& (0+255),b
 43730  012126  0E00               	movlw	0
 43731  012128  6F61               	movwf	(?___fltol+1)& (0+255),b
 43732  01212A  0E00               	movlw	0
 43733  01212C  6F62               	movwf	(?___fltol+2)& (0+255),b
 43734  01212E  0E00               	movlw	0
 43735  012130  6F63               	movwf	(?___fltol+3)& (0+255),b
 43736                           
 43737                           ; BSR set to: 0
 43738  012132  0012               	return	
 43739  012134                     l3259:
 43740                           
 43741                           ; BSR set to: 0
 43742                           
 43743                           ; BSR set to: 0
 43744  012134  C060  F064         	movff	___fltol@f1,??___fltol
 43745  012138  C061  F065         	movff	___fltol@f1+1,??___fltol+1
 43746  01213C  C062  F066         	movff	___fltol@f1+2,??___fltol+2
 43747  012140  C063  F067         	movff	___fltol@f1+3,??___fltol+3
 43748  012144  0E20               	movlw	32
 43749  012146  D005               	goto	u10420
 43750  012148                     u10425:
 43751  012148  90D8               	bcf	status,0,c
 43752  01214A  3367               	rrcf	(??___fltol+3)& (0+255),f,b
 43753  01214C  3366               	rrcf	(??___fltol+2)& (0+255),f,b
 43754  01214E  3365               	rrcf	(??___fltol+1)& (0+255),f,b
 43755  012150  3364               	rrcf	??___fltol& (0+255),f,b
 43756  012152                     u10420:
 43757  012152  2EE8               	decfsz	wreg,f,c
 43758  012154  D7F9               	goto	u10425
 43759  012156  5164               	movf	??___fltol& (0+255),w,b
 43760  012158  6F68               	movwf	___fltol@sign1& (0+255),b
 43761                           
 43762                           ; BSR set to: 0
 43763  01215A  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
 43764                           
 43765                           ; BSR set to: 0
 43766  01215C  0EFF               	movlw	255
 43767  01215E  1760               	andwf	___fltol@f1& (0+255),f,b
 43768  012160  0EFF               	movlw	255
 43769  012162  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
 43770  012164  0EFF               	movlw	255
 43771  012166  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
 43772  012168  0E00               	movlw	0
 43773  01216A  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
 43774                           
 43775                           ; BSR set to: 0
 43776  01216C  0E96               	movlw	150
 43777  01216E  5F69               	subwf	___fltol@exp1& (0+255),f,b
 43778                           
 43779                           ; BSR set to: 0
 43780  012170  AF69               	btfss	___fltol@exp1& (0+255),7,b
 43781  012172  D016               	goto	l3261
 43782                           
 43783                           ; BSR set to: 0
 43784  012174  5169               	movf	___fltol@exp1& (0+255),w,b
 43785  012176  0A80               	xorlw	128
 43786  012178  0F97               	addlw	151
 43787  01217A  B0D8               	btfsc	status,0,c
 43788  01217C  D009               	goto	l3262
 43789                           
 43790                           ; BSR set to: 0
 43791  01217E  0E00               	movlw	0
 43792  012180  6F60               	movwf	?___fltol& (0+255),b
 43793  012182  0E00               	movlw	0
 43794  012184  6F61               	movwf	(?___fltol+1)& (0+255),b
 43795  012186  0E00               	movlw	0
 43796  012188  6F62               	movwf	(?___fltol+2)& (0+255),b
 43797  01218A  0E00               	movlw	0
 43798  01218C  6F63               	movwf	(?___fltol+3)& (0+255),b
 43799                           
 43800                           ; BSR set to: 0
 43801  01218E  0012               	return	
 43802  012190                     l3262:
 43803                           
 43804                           ; BSR set to: 0
 43805                           
 43806                           ; BSR set to: 0
 43807                           
 43808                           ; BSR set to: 0
 43809  012190  90D8               	bcf	status,0,c
 43810  012192  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
 43811  012194  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
 43812  012196  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
 43813  012198  3360               	rrcf	___fltol@f1& (0+255),f,b
 43814                           
 43815                           ; BSR set to: 0
 43816  01219A  3F69               	incfsz	___fltol@exp1& (0+255),f,b
 43817  01219C  D7F9               	goto	l3262
 43818                           
 43819                           ; BSR set to: 0
 43820  01219E  D015               	goto	u10460
 43821  0121A0                     l3261:
 43822                           
 43823                           ; BSR set to: 0
 43824                           
 43825                           ; BSR set to: 0
 43826  0121A0  0E1F               	movlw	31
 43827  0121A2  6569               	cpfsgt	___fltol@exp1& (0+255),b
 43828  0121A4  D00F               	goto	l3267
 43829                           
 43830                           ; BSR set to: 0
 43831  0121A6  0E00               	movlw	0
 43832  0121A8  6F60               	movwf	?___fltol& (0+255),b
 43833  0121AA  0E00               	movlw	0
 43834  0121AC  6F61               	movwf	(?___fltol+1)& (0+255),b
 43835  0121AE  0E00               	movlw	0
 43836  0121B0  6F62               	movwf	(?___fltol+2)& (0+255),b
 43837  0121B2  0E00               	movlw	0
 43838  0121B4  6F63               	movwf	(?___fltol+3)& (0+255),b
 43839                           
 43840                           ; BSR set to: 0
 43841  0121B6  0012               	return	
 43842  0121B8                     
 43843                           ; BSR set to: 0
 43844                           
 43845                           ; BSR set to: 0
 43846  0121B8  90D8               	bcf	status,0,c
 43847  0121BA  3760               	rlcf	___fltol@f1& (0+255),f,b
 43848  0121BC  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
 43849  0121BE  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
 43850  0121C0  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
 43851  0121C2  0769               	decf	___fltol@exp1& (0+255),f,b
 43852  0121C4                     l3267:
 43853                           
 43854                           ; BSR set to: 0
 43855                           
 43856                           ; BSR set to: 0
 43857  0121C4  5169               	movf	___fltol@exp1& (0+255),w,b
 43858  0121C6  A4D8               	btfss	status,2,c
 43859  0121C8  D7F7               	goto	l3268
 43860  0121CA                     u10460:
 43861                           
 43862                           ; BSR set to: 0
 43863                           
 43864                           ; BSR set to: 0
 43865                           
 43866                           ; BSR set to: 0
 43867  0121CA  5168               	movf	___fltol@sign1& (0+255),w,b
 43868  0121CC  B4D8               	btfsc	status,2,c
 43869  0121CE  D008               	goto	l3270
 43870                           
 43871                           ; BSR set to: 0
 43872  0121D0  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
 43873  0121D2  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
 43874  0121D4  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
 43875  0121D6  6D60               	negf	___fltol@f1& (0+255),b
 43876  0121D8  0E00               	movlw	0
 43877  0121DA  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
 43878  0121DC  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
 43879  0121DE  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
 43880  0121E0                     l3270:
 43881                           
 43882                           ; BSR set to: 0
 43883                           
 43884                           ; BSR set to: 0
 43885  0121E0  C060  F060         	movff	___fltol@f1,?___fltol
 43886  0121E4  C061  F061         	movff	___fltol@f1+1,?___fltol+1
 43887  0121E8  C062  F062         	movff	___fltol@f1+2,?___fltol+2
 43888  0121EC  C063  F063         	movff	___fltol@f1+3,?___fltol+3
 43889  0121F0  0012               	return	
 43890  0121F2                     __end_of___fltol:
 43891                           	opt stack 0
 43892                           tosu	equ	0xFFF
 43893                           tosh	equ	0xFFE
 43894                           tosl	equ	0xFFD
 43895                           pclath	equ	0xFFA
 43896                           tblptru	equ	0xFF8
 43897                           tblptrh	equ	0xFF7
 43898                           tblptrl	equ	0xFF6
 43899                           tablat	equ	0xFF5
 43900                           prodh	equ	0xFF4
 43901                           prodl	equ	0xFF3
 43902                           intcon	equ	0xFF2
 43903                           indf0	equ	0xFEF
 43904                           postinc0	equ	0xFEE
 43905                           fsr0h	equ	0xFEA
 43906                           fsr0l	equ	0xFE9
 43907                           wreg	equ	0xFE8
 43908                           indf1	equ	0xFE7
 43909                           postinc1	equ	0xFE6
 43910                           postdec1	equ	0xFE5
 43911                           plusw1	equ	0xFE3
 43912                           fsr1h	equ	0xFE2
 43913                           fsr1l	equ	0xFE1
 43914                           indf2	equ	0xFDF
 43915                           postinc2	equ	0xFDE
 43916                           postdec2	equ	0xFDD
 43917                           plusw2	equ	0xFDB
 43918                           fsr2h	equ	0xFDA
 43919                           fsr2l	equ	0xFD9
 43920                           status	equ	0xFD8
 43921                           
 43922 ;; *************** function ___flmul *****************
 43923 ;; Defined at:
 43924 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
 43925 ;; Parameters:    Size  Location     Type
 43926 ;;  b               4   14[BANK0 ] long 
 43927 ;;  a               4   18[BANK0 ] long 
 43928 ;; Auto vars:     Size  Location     Type
 43929 ;;  prod            4   33[BANK0 ] struct .
 43930 ;;  grs             4   27[BANK0 ] unsigned long 
 43931 ;;  temp            2   37[BANK0 ] struct .
 43932 ;;  bexp            1   32[BANK0 ] unsigned char 
 43933 ;;  aexp            1   31[BANK0 ] unsigned char 
 43934 ;;  sign            1   26[BANK0 ] unsigned char 
 43935 ;; Return value:  Size  Location     Type
 43936 ;;                  4   14[BANK0 ] unsigned char 
 43937 ;; Registers used:
 43938 ;;		wreg, status,2, status,0, prodl, prodh
 43939 ;; Tracked objects:
 43940 ;;		On entry : 0/0
 43941 ;;		On exit  : 0/0
 43942 ;;		Unchanged: 0/0
 43943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43944 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43945 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43946 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43947 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43948 ;;Total ram usage:       25 bytes
 43949 ;; Hardware stack levels used:    1
 43950 ;; Hardware stack levels required when called:   10
 43951 ;; This function calls:
 43952 ;;		Nothing
 43953 ;; This function is called by:
 43954 ;;		_motor_steps_from_degrees
 43955 ;;		_motor_calculate_position_in_degrees
 43956 ;;		__step_position_from_divide_position
 43957 ;;		_motor_divide_jump_to_nearest
 43958 ;;		_motor_arc_move
 43959 ;;		_adc_read_temperature
 43960 ;;		_motor_go_to_degrees_position
 43961 ;; This function uses a non-reentrant model
 43962 ;;
 43963                           
 43964                           	psect	text182
 43965  00CC3C                     __ptext182:
 43966                           	opt stack 0
 43967  00CC3C                     ___flmul:
 43968                           	opt stack 18
 43969                           
 43970                           ; BSR set to: 0
 43971                           ;incstack = 0
 43972  00CC3C  0100               	movlb	0	; () banked
 43973  00CC3E  5171               	movf	(___flmul@b+3)& (0+255),w,b
 43974  00CC40  0B80               	andlw	128
 43975  00CC42  6F7A               	movwf	___flmul@sign& (0+255),b
 43976  00CC44  5171               	movf	(___flmul@b+3)& (0+255),w,b
 43977  00CC46  2571               	addwf	(___flmul@b+3)& (0+255),w,b
 43978  00CC48  6F80               	movwf	___flmul@bexp& (0+255),b
 43979                           
 43980                           ; BSR set to: 0
 43981  00CC4A  BF70               	btfsc	(___flmul@b+2)& (0+255),7,b
 43982                           
 43983                           ; BSR set to: 0
 43984  00CC4C  8180               	bsf	___flmul@bexp& (0+255),0,b
 43985                           
 43986                           ; BSR set to: 0
 43987                           
 43988                           ; BSR set to: 0
 43989  00CC4E  5180               	movf	___flmul@bexp& (0+255),w,b
 43990  00CC50  B4D8               	btfsc	status,2,c
 43991  00CC52  D00D               	goto	l3567
 43992                           
 43993                           ; BSR set to: 0
 43994  00CC54  2980               	incf	___flmul@bexp& (0+255),w,b
 43995  00CC56  A4D8               	btfss	status,2,c
 43996  00CC58  D008               	goto	l3568
 43997                           
 43998                           ; BSR set to: 0
 43999  00CC5A  0E00               	movlw	0
 44000  00CC5C  6F6E               	movwf	___flmul@b& (0+255),b
 44001  00CC5E  0E00               	movlw	0
 44002  00CC60  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 44003  00CC62  0E00               	movlw	0
 44004  00CC64  6F70               	movwf	(___flmul@b+2)& (0+255),b
 44005  00CC66  0E00               	movlw	0
 44006  00CC68  6F71               	movwf	(___flmul@b+3)& (0+255),b
 44007  00CC6A                     l3568:
 44008                           
 44009                           ; BSR set to: 0
 44010                           
 44011                           ; BSR set to: 0
 44012  00CC6A  8F70               	bsf	(___flmul@b+2)& (0+255),7,b
 44013  00CC6C  D008               	goto	l3569
 44014  00CC6E                     l3567:
 44015                           
 44016                           ; BSR set to: 0
 44017                           
 44018                           ; BSR set to: 0
 44019  00CC6E  0E00               	movlw	0
 44020  00CC70  6F6E               	movwf	___flmul@b& (0+255),b
 44021  00CC72  0E00               	movlw	0
 44022  00CC74  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 44023  00CC76  0E00               	movlw	0
 44024  00CC78  6F70               	movwf	(___flmul@b+2)& (0+255),b
 44025  00CC7A  0E00               	movlw	0
 44026  00CC7C  6F71               	movwf	(___flmul@b+3)& (0+255),b
 44027  00CC7E                     l3569:
 44028                           
 44029                           ; BSR set to: 0
 44030                           
 44031                           ; BSR set to: 0
 44032  00CC7E  5175               	movf	(___flmul@a+3)& (0+255),w,b
 44033  00CC80  0B80               	andlw	128
 44034  00CC82  1B7A               	xorwf	___flmul@sign& (0+255),f,b
 44035                           
 44036                           ; BSR set to: 0
 44037  00CC84  5175               	movf	(___flmul@a+3)& (0+255),w,b
 44038  00CC86  2575               	addwf	(___flmul@a+3)& (0+255),w,b
 44039  00CC88  6F7F               	movwf	___flmul@aexp& (0+255),b
 44040                           
 44041                           ; BSR set to: 0
 44042  00CC8A  BF74               	btfsc	(___flmul@a+2)& (0+255),7,b
 44043                           
 44044                           ; BSR set to: 0
 44045  00CC8C  817F               	bsf	___flmul@aexp& (0+255),0,b
 44046                           
 44047                           ; BSR set to: 0
 44048                           
 44049                           ; BSR set to: 0
 44050  00CC8E  517F               	movf	___flmul@aexp& (0+255),w,b
 44051  00CC90  B4D8               	btfsc	status,2,c
 44052  00CC92  D00D               	goto	l3571
 44053                           
 44054                           ; BSR set to: 0
 44055  00CC94  297F               	incf	___flmul@aexp& (0+255),w,b
 44056  00CC96  A4D8               	btfss	status,2,c
 44057  00CC98  D008               	goto	l3572
 44058                           
 44059                           ; BSR set to: 0
 44060  00CC9A  0E00               	movlw	0
 44061  00CC9C  6F72               	movwf	___flmul@a& (0+255),b
 44062  00CC9E  0E00               	movlw	0
 44063  00CCA0  6F73               	movwf	(___flmul@a+1)& (0+255),b
 44064  00CCA2  0E00               	movlw	0
 44065  00CCA4  6F74               	movwf	(___flmul@a+2)& (0+255),b
 44066  00CCA6  0E00               	movlw	0
 44067  00CCA8  6F75               	movwf	(___flmul@a+3)& (0+255),b
 44068  00CCAA                     l3572:
 44069                           
 44070                           ; BSR set to: 0
 44071                           
 44072                           ; BSR set to: 0
 44073  00CCAA  8F74               	bsf	(___flmul@a+2)& (0+255),7,b
 44074  00CCAC  D008               	goto	l3573
 44075  00CCAE                     l3571:
 44076                           
 44077                           ; BSR set to: 0
 44078                           
 44079                           ; BSR set to: 0
 44080  00CCAE  0E00               	movlw	0
 44081  00CCB0  6F72               	movwf	___flmul@a& (0+255),b
 44082  00CCB2  0E00               	movlw	0
 44083  00CCB4  6F73               	movwf	(___flmul@a+1)& (0+255),b
 44084  00CCB6  0E00               	movlw	0
 44085  00CCB8  6F74               	movwf	(___flmul@a+2)& (0+255),b
 44086  00CCBA  0E00               	movlw	0
 44087  00CCBC  6F75               	movwf	(___flmul@a+3)& (0+255),b
 44088  00CCBE                     l3573:
 44089                           
 44090                           ; BSR set to: 0
 44091  00CCBE  517F               	movf	___flmul@aexp& (0+255),w,b
 44092  00CCC0  B4D8               	btfsc	status,2,c
 44093  00CCC2  D003               	goto	u10290
 44094                           
 44095                           ; BSR set to: 0
 44096  00CCC4  5180               	movf	___flmul@bexp& (0+255),w,b
 44097  00CCC6  A4D8               	btfss	status,2,c
 44098  00CCC8  D009               	goto	l3574
 44099  00CCCA                     u10290:
 44100                           
 44101                           ; BSR set to: 0
 44102                           
 44103                           ; BSR set to: 0
 44104  00CCCA  0E00               	movlw	0
 44105  00CCCC  6F6E               	movwf	?___flmul& (0+255),b
 44106  00CCCE  0E00               	movlw	0
 44107  00CCD0  6F6F               	movwf	(?___flmul+1)& (0+255),b
 44108  00CCD2  0E00               	movlw	0
 44109  00CCD4  6F70               	movwf	(?___flmul+2)& (0+255),b
 44110  00CCD6  0E00               	movlw	0
 44111  00CCD8  6F71               	movwf	(?___flmul+3)& (0+255),b
 44112                           
 44113                           ; BSR set to: 0
 44114  00CCDA  0012               	return	
 44115  00CCDC                     l3574:
 44116                           
 44117                           ; BSR set to: 0
 44118                           
 44119                           ; BSR set to: 0
 44120  00CCDC  5174               	movf	(___flmul@a+2)& (0+255),w,b
 44121  00CCDE  036E               	mulwf	___flmul@b& (0+255),b
 44122  00CCE0  CFF3 F085          	movff	prodl,___flmul@temp
 44123  00CCE4  CFF4 F086          	movff	prodh,___flmul@temp+1
 44124                           
 44125                           ; BSR set to: 0
 44126  00CCE8  5185               	movf	___flmul@temp& (0+255),w,b
 44127  00CCEA  6F7B               	movwf	___flmul@grs& (0+255),b
 44128  00CCEC  6B7C               	clrf	(___flmul@grs+1)& (0+255),b
 44129  00CCEE  6B7D               	clrf	(___flmul@grs+2)& (0+255),b
 44130  00CCF0  6B7E               	clrf	(___flmul@grs+3)& (0+255),b
 44131                           
 44132                           ; BSR set to: 0
 44133  00CCF2  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44134  00CCF4  6F81               	movwf	___flmul@prod& (0+255),b
 44135  00CCF6  6B82               	clrf	(___flmul@prod+1)& (0+255),b
 44136  00CCF8  6B83               	clrf	(___flmul@prod+2)& (0+255),b
 44137  00CCFA  6B84               	clrf	(___flmul@prod+3)& (0+255),b
 44138  00CCFC  5173               	movf	(___flmul@a+1)& (0+255),w,b
 44139  00CCFE  036F               	mulwf	(___flmul@b+1)& (0+255),b
 44140  00CD00  CFF3 F085          	movff	prodl,___flmul@temp
 44141  00CD04  CFF4 F086          	movff	prodh,___flmul@temp+1
 44142                           
 44143                           ; BSR set to: 0
 44144  00CD08  5185               	movf	___flmul@temp& (0+255),w,b
 44145  00CD0A  277B               	addwf	___flmul@grs& (0+255),f,b
 44146  00CD0C  0E00               	movlw	0
 44147  00CD0E  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 44148  00CD10  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 44149  00CD12  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 44150                           
 44151                           ; BSR set to: 0
 44152  00CD14  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44153  00CD16  2781               	addwf	___flmul@prod& (0+255),f,b
 44154  00CD18  0E00               	movlw	0
 44155  00CD1A  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 44156  00CD1C  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 44157  00CD1E  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 44158  00CD20  5172               	movf	___flmul@a& (0+255),w,b
 44159  00CD22  0370               	mulwf	(___flmul@b+2)& (0+255),b
 44160  00CD24  CFF3 F085          	movff	prodl,___flmul@temp
 44161  00CD28  CFF4 F086          	movff	prodh,___flmul@temp+1
 44162                           
 44163                           ; BSR set to: 0
 44164  00CD2C  5185               	movf	___flmul@temp& (0+255),w,b
 44165  00CD2E  277B               	addwf	___flmul@grs& (0+255),f,b
 44166  00CD30  0E00               	movlw	0
 44167  00CD32  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 44168  00CD34  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 44169  00CD36  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 44170                           
 44171                           ; BSR set to: 0
 44172  00CD38  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44173  00CD3A  2781               	addwf	___flmul@prod& (0+255),f,b
 44174  00CD3C  0E00               	movlw	0
 44175  00CD3E  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 44176  00CD40  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 44177  00CD42  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 44178                           
 44179                           ; BSR set to: 0
 44180  00CD44  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
 44181  00CD48  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
 44182  00CD4C  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
 44183  00CD50  6B7B               	clrf	___flmul@grs& (0+255),b
 44184                           
 44185                           ; BSR set to: 0
 44186  00CD52  5172               	movf	___flmul@a& (0+255),w,b
 44187  00CD54  036F               	mulwf	(___flmul@b+1)& (0+255),b
 44188  00CD56  CFF3 F085          	movff	prodl,___flmul@temp
 44189  00CD5A  CFF4 F086          	movff	prodh,___flmul@temp+1
 44190                           
 44191                           ; BSR set to: 0
 44192  00CD5E  5185               	movf	___flmul@temp& (0+255),w,b
 44193  00CD60  277B               	addwf	___flmul@grs& (0+255),f,b
 44194  00CD62  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44195  00CD64  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 44196  00CD66  0E00               	movlw	0
 44197  00CD68  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 44198  00CD6A  0E00               	movlw	0
 44199  00CD6C  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 44200                           
 44201                           ; BSR set to: 0
 44202  00CD6E  5173               	movf	(___flmul@a+1)& (0+255),w,b
 44203  00CD70  036E               	mulwf	___flmul@b& (0+255),b
 44204  00CD72  CFF3 F085          	movff	prodl,___flmul@temp
 44205  00CD76  CFF4 F086          	movff	prodh,___flmul@temp+1
 44206                           
 44207                           ; BSR set to: 0
 44208  00CD7A  5185               	movf	___flmul@temp& (0+255),w,b
 44209  00CD7C  277B               	addwf	___flmul@grs& (0+255),f,b
 44210  00CD7E  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44211  00CD80  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 44212  00CD82  0E00               	movlw	0
 44213  00CD84  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 44214  00CD86  0E00               	movlw	0
 44215  00CD88  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 44216                           
 44217                           ; BSR set to: 0
 44218  00CD8A  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
 44219  00CD8E  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
 44220  00CD92  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
 44221  00CD96  6B7B               	clrf	___flmul@grs& (0+255),b
 44222  00CD98  5172               	movf	___flmul@a& (0+255),w,b
 44223  00CD9A  036E               	mulwf	___flmul@b& (0+255),b
 44224  00CD9C  CFF3 F085          	movff	prodl,___flmul@temp
 44225  00CDA0  CFF4 F086          	movff	prodh,___flmul@temp+1
 44226                           
 44227                           ; BSR set to: 0
 44228  00CDA4  5185               	movf	___flmul@temp& (0+255),w,b
 44229  00CDA6  277B               	addwf	___flmul@grs& (0+255),f,b
 44230  00CDA8  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44231  00CDAA  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 44232  00CDAC  0E00               	movlw	0
 44233  00CDAE  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 44234  00CDB0  0E00               	movlw	0
 44235  00CDB2  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 44236                           
 44237                           ; BSR set to: 0
 44238  00CDB4  5174               	movf	(___flmul@a+2)& (0+255),w,b
 44239  00CDB6  036F               	mulwf	(___flmul@b+1)& (0+255),b
 44240  00CDB8  CFF3 F085          	movff	prodl,___flmul@temp
 44241  00CDBC  CFF4 F086          	movff	prodh,___flmul@temp+1
 44242  00CDC0  5185               	movf	___flmul@temp& (0+255),w,b
 44243  00CDC2  2781               	addwf	___flmul@prod& (0+255),f,b
 44244  00CDC4  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44245  00CDC6  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 44246  00CDC8  0E00               	movlw	0
 44247  00CDCA  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 44248  00CDCC  0E00               	movlw	0
 44249  00CDCE  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 44250                           
 44251                           ; BSR set to: 0
 44252  00CDD0  5173               	movf	(___flmul@a+1)& (0+255),w,b
 44253  00CDD2  0370               	mulwf	(___flmul@b+2)& (0+255),b
 44254  00CDD4  CFF3 F085          	movff	prodl,___flmul@temp
 44255  00CDD8  CFF4 F086          	movff	prodh,___flmul@temp+1
 44256                           
 44257                           ; BSR set to: 0
 44258  00CDDC  5185               	movf	___flmul@temp& (0+255),w,b
 44259  00CDDE  2781               	addwf	___flmul@prod& (0+255),f,b
 44260  00CDE0  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44261  00CDE2  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 44262  00CDE4  0E00               	movlw	0
 44263  00CDE6  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 44264  00CDE8  0E00               	movlw	0
 44265  00CDEA  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 44266  00CDEC  5174               	movf	(___flmul@a+2)& (0+255),w,b
 44267  00CDEE  0370               	mulwf	(___flmul@b+2)& (0+255),b
 44268  00CDF0  CFF3 F085          	movff	prodl,___flmul@temp
 44269  00CDF4  CFF4 F086          	movff	prodh,___flmul@temp+1
 44270                           
 44271                           ; BSR set to: 0
 44272  00CDF8  5185               	movf	___flmul@temp& (0+255),w,b
 44273  00CDFA  6F76               	movwf	??___flmul& (0+255),b
 44274  00CDFC  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44275  00CDFE  6F77               	movwf	(??___flmul+1)& (0+255),b
 44276  00CE00  6B78               	clrf	(??___flmul+2)& (0+255),b
 44277  00CE02  6B79               	clrf	(??___flmul+3)& (0+255),b
 44278  00CE04  C078  F079         	movff	??___flmul+2,??___flmul+3
 44279  00CE08  C077  F078         	movff	??___flmul+1,??___flmul+2
 44280  00CE0C  C076  F077         	movff	??___flmul,??___flmul+1
 44281  00CE10  6B76               	clrf	??___flmul& (0+255),b
 44282  00CE12  5176               	movf	??___flmul& (0+255),w,b
 44283  00CE14  2781               	addwf	___flmul@prod& (0+255),f,b
 44284  00CE16  5177               	movf	(??___flmul+1)& (0+255),w,b
 44285  00CE18  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 44286  00CE1A  5178               	movf	(??___flmul+2)& (0+255),w,b
 44287  00CE1C  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 44288  00CE1E  5179               	movf	(??___flmul+3)& (0+255),w,b
 44289  00CE20  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 44290                           
 44291                           ; BSR set to: 0
 44292  00CE22  C07B  F076         	movff	___flmul@grs,??___flmul
 44293  00CE26  C07C  F077         	movff	___flmul@grs+1,??___flmul+1
 44294  00CE2A  C07D  F078         	movff	___flmul@grs+2,??___flmul+2
 44295  00CE2E  C07E  F079         	movff	___flmul@grs+3,??___flmul+3
 44296  00CE32  0E19               	movlw	25
 44297  00CE34  D005               	goto	u10300
 44298  00CE36                     u10305:
 44299  00CE36  90D8               	bcf	status,0,c
 44300  00CE38  3379               	rrcf	(??___flmul+3)& (0+255),f,b
 44301  00CE3A  3378               	rrcf	(??___flmul+2)& (0+255),f,b
 44302  00CE3C  3377               	rrcf	(??___flmul+1)& (0+255),f,b
 44303  00CE3E  3376               	rrcf	??___flmul& (0+255),f,b
 44304  00CE40                     u10300:
 44305  00CE40  2EE8               	decfsz	wreg,f,c
 44306  00CE42  D7F9               	goto	u10305
 44307  00CE44  5176               	movf	??___flmul& (0+255),w,b
 44308  00CE46  2781               	addwf	___flmul@prod& (0+255),f,b
 44309  00CE48  5177               	movf	(??___flmul+1)& (0+255),w,b
 44310  00CE4A  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 44311  00CE4C  5178               	movf	(??___flmul+2)& (0+255),w,b
 44312  00CE4E  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 44313  00CE50  5179               	movf	(??___flmul+3)& (0+255),w,b
 44314  00CE52  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 44315                           
 44316                           ; BSR set to: 0
 44317  00CE54  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
 44318  00CE58  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
 44319  00CE5C  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
 44320  00CE60  6B7B               	clrf	___flmul@grs& (0+255),b
 44321                           
 44322                           ; BSR set to: 0
 44323  00CE62  517F               	movf	___flmul@aexp& (0+255),w,b
 44324  00CE64  C080  F076         	movff	___flmul@bexp,??___flmul
 44325  00CE68  6B77               	clrf	(??___flmul+1)& (0+255),b
 44326  00CE6A  2776               	addwf	??___flmul& (0+255),f,b
 44327  00CE6C  0E00               	movlw	0
 44328  00CE6E  2377               	addwfc	(??___flmul+1)& (0+255),f,b
 44329  00CE70  0E82               	movlw	130
 44330  00CE72  2576               	addwf	??___flmul& (0+255),w,b
 44331  00CE74  6F85               	movwf	___flmul@temp& (0+255),b
 44332  00CE76  0EFF               	movlw	255
 44333  00CE78  2177               	addwfc	(??___flmul+1)& (0+255),w,b
 44334  00CE7A  6F86               	movwf	(___flmul@temp+1)& (0+255),b
 44335  00CE7C  D00F               	goto	l3578
 44336  00CE7E                     
 44337                           ; BSR set to: 0
 44338                           
 44339                           ; BSR set to: 0
 44340  00CE7E  90D8               	bcf	status,0,c
 44341  00CE80  3781               	rlcf	___flmul@prod& (0+255),f,b
 44342  00CE82  3782               	rlcf	(___flmul@prod+1)& (0+255),f,b
 44343  00CE84  3783               	rlcf	(___flmul@prod+2)& (0+255),f,b
 44344  00CE86  3784               	rlcf	(___flmul@prod+3)& (0+255),f,b
 44345                           
 44346                           ; BSR set to: 0
 44347  00CE88  BF7E               	btfsc	(___flmul@grs+3)& (0+255),7,b
 44348                           
 44349                           ; BSR set to: 0
 44350  00CE8A  8181               	bsf	___flmul@prod& (0+255),0,b
 44351                           
 44352                           ; BSR set to: 0
 44353  00CE8C  90D8               	bcf	status,0,c
 44354  00CE8E  377B               	rlcf	___flmul@grs& (0+255),f,b
 44355  00CE90  377C               	rlcf	(___flmul@grs+1)& (0+255),f,b
 44356  00CE92  377D               	rlcf	(___flmul@grs+2)& (0+255),f,b
 44357  00CE94  377E               	rlcf	(___flmul@grs+3)& (0+255),f,b
 44358  00CE96  0785               	decf	___flmul@temp& (0+255),f,b
 44359  00CE98  A0D8               	btfss	status,0,c
 44360  00CE9A  0786               	decf	(___flmul@temp+1)& (0+255),f,b
 44361  00CE9C                     l3578:
 44362                           
 44363                           ; BSR set to: 0
 44364                           
 44365                           ; BSR set to: 0
 44366  00CE9C  AF83               	btfss	(___flmul@prod+2)& (0+255),7,b
 44367  00CE9E  D7EF               	goto	l3579
 44368                           
 44369                           ; BSR set to: 0
 44370                           
 44371                           ; BSR set to: 0
 44372  00CEA0  0E00               	movlw	0
 44373  00CEA2  6F7F               	movwf	___flmul@aexp& (0+255),b
 44374                           
 44375                           ; BSR set to: 0
 44376  00CEA4  AF7E               	btfss	(___flmul@grs+3)& (0+255),7,b
 44377  00CEA6  D016               	goto	l3585
 44378                           
 44379                           ; BSR set to: 0
 44380  00CEA8  0EFF               	movlw	255
 44381  00CEAA  157B               	andwf	___flmul@grs& (0+255),w,b
 44382  00CEAC  6F76               	movwf	??___flmul& (0+255),b
 44383  00CEAE  0EFF               	movlw	255
 44384  00CEB0  157C               	andwf	(___flmul@grs+1)& (0+255),w,b
 44385  00CEB2  6F77               	movwf	(??___flmul+1)& (0+255),b
 44386  00CEB4  0EFF               	movlw	255
 44387  00CEB6  157D               	andwf	(___flmul@grs+2)& (0+255),w,b
 44388  00CEB8  6F78               	movwf	(??___flmul+2)& (0+255),b
 44389  00CEBA  0E7F               	movlw	127
 44390  00CEBC  157E               	andwf	(___flmul@grs+3)& (0+255),w,b
 44391  00CEBE  6F79               	movwf	(??___flmul+3)& (0+255),b
 44392  00CEC0  5176               	movf	??___flmul& (0+255),w,b
 44393  00CEC2  1177               	iorwf	(??___flmul+1)& (0+255),w,b
 44394  00CEC4  1178               	iorwf	(??___flmul+2)& (0+255),w,b
 44395  00CEC6  1179               	iorwf	(??___flmul+3)& (0+255),w,b
 44396  00CEC8  A4D8               	btfss	status,2,c
 44397  00CECA  D002               	goto	u10350
 44398                           
 44399                           ; BSR set to: 0
 44400                           
 44401                           ; BSR set to: 0
 44402  00CECC  A181               	btfss	___flmul@prod& (0+255),0,b
 44403  00CECE  D002               	goto	l3585
 44404  00CED0                     u10350:
 44405                           
 44406                           ; BSR set to: 0
 44407  00CED0  0E01               	movlw	1
 44408  00CED2  6F7F               	movwf	___flmul@aexp& (0+255),b
 44409  00CED4                     l3585:
 44410                           
 44411                           ; BSR set to: 0
 44412                           
 44413                           ; BSR set to: 0
 44414                           
 44415                           ; BSR set to: 0
 44416  00CED4  517F               	movf	___flmul@aexp& (0+255),w,b
 44417  00CED6  B4D8               	btfsc	status,2,c
 44418  00CED8  D01F               	goto	l3587
 44419                           
 44420                           ; BSR set to: 0
 44421  00CEDA  0E01               	movlw	1
 44422  00CEDC  2781               	addwf	___flmul@prod& (0+255),f,b
 44423  00CEDE  0E00               	movlw	0
 44424  00CEE0  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 44425  00CEE2  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 44426  00CEE4  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 44427                           
 44428                           ; BSR set to: 0
 44429  00CEE6  A184               	btfss	(___flmul@prod+3)& (0+255),0,b
 44430  00CEE8  D017               	goto	l3587
 44431                           
 44432                           ; BSR set to: 0
 44433  00CEEA  C081  F076         	movff	___flmul@prod,??___flmul
 44434  00CEEE  C082  F077         	movff	___flmul@prod+1,??___flmul+1
 44435  00CEF2  C083  F078         	movff	___flmul@prod+2,??___flmul+2
 44436  00CEF6  C084  F079         	movff	___flmul@prod+3,??___flmul+3
 44437  00CEFA  3579               	rlcf	(??___flmul+3)& (0+255),w,b
 44438  00CEFC  3379               	rrcf	(??___flmul+3)& (0+255),f,b
 44439  00CEFE  3378               	rrcf	(??___flmul+2)& (0+255),f,b
 44440  00CF00  3377               	rrcf	(??___flmul+1)& (0+255),f,b
 44441  00CF02  3376               	rrcf	??___flmul& (0+255),f,b
 44442  00CF04  C076  F081         	movff	??___flmul,___flmul@prod
 44443  00CF08  C077  F082         	movff	??___flmul+1,___flmul@prod+1
 44444  00CF0C  C078  F083         	movff	??___flmul+2,___flmul@prod+2
 44445  00CF10  C079  F084         	movff	??___flmul+3,___flmul@prod+3
 44446                           
 44447                           ; BSR set to: 0
 44448  00CF14  4B85               	infsnz	___flmul@temp& (0+255),f,b
 44449  00CF16  2B86               	incf	(___flmul@temp+1)& (0+255),f,b
 44450  00CF18                     l3587:
 44451                           
 44452                           ; BSR set to: 0
 44453                           
 44454                           ; BSR set to: 0
 44455                           
 44456                           ; BSR set to: 0
 44457  00CF18  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 44458  00CF1A  D00D               	goto	l3588
 44459  00CF1C  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44460  00CF1E  E103               	bnz	u10380
 44461  00CF20  2985               	incf	___flmul@temp& (0+255),w,b
 44462  00CF22  A0D8               	btfss	status,0,c
 44463  00CF24  D008               	goto	l3588
 44464  00CF26                     u10380:
 44465                           
 44466                           ; BSR set to: 0
 44467  00CF26  0E00               	movlw	0
 44468  00CF28  6F81               	movwf	___flmul@prod& (0+255),b
 44469  00CF2A  0E00               	movlw	0
 44470  00CF2C  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 44471  00CF2E  0E80               	movlw	128
 44472  00CF30  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 44473  00CF32  0E7F               	movlw	127
 44474  00CF34  D020               	goto	L67
 44475  00CF36                     l3588:
 44476                           
 44477                           ; BSR set to: 0
 44478                           
 44479                           ; BSR set to: 0
 44480  00CF36  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 44481  00CF38  D005               	goto	u10390
 44482  00CF3A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44483  00CF3C  E10E               	bnz	l3590
 44484  00CF3E  0585               	decf	___flmul@temp& (0+255),w,b
 44485  00CF40  B0D8               	btfsc	status,0,c
 44486  00CF42  D00B               	goto	l3590
 44487  00CF44                     u10390:
 44488                           
 44489                           ; BSR set to: 0
 44490  00CF44  0E00               	movlw	0
 44491  00CF46  6F81               	movwf	___flmul@prod& (0+255),b
 44492  00CF48  0E00               	movlw	0
 44493  00CF4A  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 44494  00CF4C  0E00               	movlw	0
 44495  00CF4E  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 44496  00CF50  0E00               	movlw	0
 44497  00CF52  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 44498  00CF54  0E00               	movlw	0
 44499  00CF56  6F7A               	movwf	___flmul@sign& (0+255),b
 44500  00CF58  D00F               	goto	l3591
 44501  00CF5A                     l3590:
 44502                           
 44503                           ; BSR set to: 0
 44504  00CF5A  C085  F080         	movff	___flmul@temp,___flmul@bexp
 44505                           
 44506                           ; BSR set to: 0
 44507  00CF5E  0EFF               	movlw	255
 44508  00CF60  1781               	andwf	___flmul@prod& (0+255),f,b
 44509  00CF62  0EFF               	movlw	255
 44510  00CF64  1782               	andwf	(___flmul@prod+1)& (0+255),f,b
 44511  00CF66  0E7F               	movlw	127
 44512  00CF68  1783               	andwf	(___flmul@prod+2)& (0+255),f,b
 44513  00CF6A  0E00               	movlw	0
 44514  00CF6C  1784               	andwf	(___flmul@prod+3)& (0+255),f,b
 44515                           
 44516                           ; BSR set to: 0
 44517  00CF6E  B180               	btfsc	___flmul@bexp& (0+255),0,b
 44518                           
 44519                           ; BSR set to: 0
 44520  00CF70  8F83               	bsf	(___flmul@prod+2)& (0+255),7,b
 44521                           
 44522                           ; BSR set to: 0
 44523                           
 44524                           ; BSR set to: 0
 44525  00CF72  90D8               	bcf	status,0,c
 44526  00CF74  3180               	rrcf	___flmul@bexp& (0+255),w,b
 44527  00CF76                     L67:
 44528  00CF76  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 44529  00CF78                     l3591:
 44530                           
 44531                           ; BSR set to: 0
 44532                           
 44533                           ; BSR set to: 0
 44534                           
 44535                           ; BSR set to: 0
 44536  00CF78  517A               	movf	___flmul@sign& (0+255),w,b
 44537  00CF7A  1384               	iorwf	(___flmul@prod+3)& (0+255),f,b
 44538                           
 44539                           ; BSR set to: 0
 44540  00CF7C  C081  F06E         	movff	___flmul@prod,?___flmul
 44541  00CF80  C082  F06F         	movff	___flmul@prod+1,?___flmul+1
 44542  00CF84  C083  F070         	movff	___flmul@prod+2,?___flmul+2
 44543  00CF88  C084  F071         	movff	___flmul@prod+3,?___flmul+3
 44544  00CF8C  0012               	return	
 44545  00CF8E                     __end_of___flmul:
 44546                           	opt stack 0
 44547                           tosu	equ	0xFFF
 44548                           tosh	equ	0xFFE
 44549                           tosl	equ	0xFFD
 44550                           pclath	equ	0xFFA
 44551                           tblptru	equ	0xFF8
 44552                           tblptrh	equ	0xFF7
 44553                           tblptrl	equ	0xFF6
 44554                           tablat	equ	0xFF5
 44555                           prodh	equ	0xFF4
 44556                           prodl	equ	0xFF3
 44557                           intcon	equ	0xFF2
 44558                           indf0	equ	0xFEF
 44559                           postinc0	equ	0xFEE
 44560                           fsr0h	equ	0xFEA
 44561                           fsr0l	equ	0xFE9
 44562                           wreg	equ	0xFE8
 44563                           indf1	equ	0xFE7
 44564                           postinc1	equ	0xFE6
 44565                           postdec1	equ	0xFE5
 44566                           plusw1	equ	0xFE3
 44567                           fsr1h	equ	0xFE2
 44568                           fsr1l	equ	0xFE1
 44569                           indf2	equ	0xFDF
 44570                           postinc2	equ	0xFDE
 44571                           postdec2	equ	0xFDD
 44572                           plusw2	equ	0xFDB
 44573                           fsr2h	equ	0xFDA
 44574                           fsr2l	equ	0xFD9
 44575                           status	equ	0xFD8
 44576                           
 44577 ;; *************** function ___fldiv *****************
 44578 ;; Defined at:
 44579 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
 44580 ;; Parameters:    Size  Location     Type
 44581 ;;  b               4   14[BANK0 ] unsigned char 
 44582 ;;  a               4   18[BANK0 ] unsigned char 
 44583 ;; Auto vars:     Size  Location     Type
 44584 ;;  grs             4   33[BANK0 ] unsigned long 
 44585 ;;  rem             4   26[BANK0 ] unsigned long 
 44586 ;;  new_exp         2   31[BANK0 ] int 
 44587 ;;  aexp            1   38[BANK0 ] unsigned char 
 44588 ;;  bexp            1   37[BANK0 ] unsigned char 
 44589 ;;  sign            1   30[BANK0 ] unsigned char 
 44590 ;; Return value:  Size  Location     Type
 44591 ;;                  4   14[BANK0 ] unsigned char 
 44592 ;; Registers used:
 44593 ;;		wreg, status,2, status,0
 44594 ;; Tracked objects:
 44595 ;;		On entry : 0/0
 44596 ;;		On exit  : 0/0
 44597 ;;		Unchanged: 0/0
 44598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44599 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44600 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44601 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44602 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44603 ;;Total ram usage:       25 bytes
 44604 ;; Hardware stack levels used:    1
 44605 ;; Hardware stack levels required when called:   10
 44606 ;; This function calls:
 44607 ;;		Nothing
 44608 ;; This function is called by:
 44609 ;;		_motor_steps_from_degrees
 44610 ;;		_motor_calculate_position_in_degrees
 44611 ;;		__motor_get_speed_in_degrees
 44612 ;;		__step_position_from_divide_position
 44613 ;;		_motor_divide_jump_to_nearest
 44614 ;;		_motor_arc_move
 44615 ;;		_motor_go_to_degrees_position
 44616 ;; This function uses a non-reentrant model
 44617 ;;
 44618                           
 44619                           	psect	text183
 44620  00DBAC                     __ptext183:
 44621                           	opt stack 0
 44622  00DBAC                     ___fldiv:
 44623                           	opt stack 18
 44624                           
 44625                           ; BSR set to: 0
 44626                           ;incstack = 0
 44627  00DBAC  0100               	movlb	0	; () banked
 44628  00DBAE  5171               	movf	(___fldiv@b+3)& (0+255),w,b
 44629  00DBB0  0B80               	andlw	128
 44630  00DBB2  6F7E               	movwf	___fldiv@sign& (0+255),b
 44631  00DBB4  5171               	movf	(___fldiv@b+3)& (0+255),w,b
 44632  00DBB6  2571               	addwf	(___fldiv@b+3)& (0+255),w,b
 44633  00DBB8  6F85               	movwf	___fldiv@bexp& (0+255),b
 44634                           
 44635                           ; BSR set to: 0
 44636  00DBBA  BF70               	btfsc	(___fldiv@b+2)& (0+255),7,b
 44637                           
 44638                           ; BSR set to: 0
 44639  00DBBC  8185               	bsf	___fldiv@bexp& (0+255),0,b
 44640                           
 44641                           ; BSR set to: 0
 44642                           
 44643                           ; BSR set to: 0
 44644  00DBBE  5185               	movf	___fldiv@bexp& (0+255),w,b
 44645  00DBC0  B4D8               	btfsc	status,2,c
 44646  00DBC2  D00D               	goto	l3533
 44647                           
 44648                           ; BSR set to: 0
 44649  00DBC4  2985               	incf	___fldiv@bexp& (0+255),w,b
 44650  00DBC6  A4D8               	btfss	status,2,c
 44651  00DBC8  D008               	goto	l3534
 44652                           
 44653                           ; BSR set to: 0
 44654  00DBCA  0E00               	movlw	0
 44655  00DBCC  6F6E               	movwf	___fldiv@b& (0+255),b
 44656  00DBCE  0E00               	movlw	0
 44657  00DBD0  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 44658  00DBD2  0E00               	movlw	0
 44659  00DBD4  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 44660  00DBD6  0E00               	movlw	0
 44661  00DBD8  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 44662  00DBDA                     l3534:
 44663                           
 44664                           ; BSR set to: 0
 44665                           
 44666                           ; BSR set to: 0
 44667  00DBDA  8F70               	bsf	(___fldiv@b+2)& (0+255),7,b
 44668  00DBDC  D006               	goto	L68
 44669  00DBDE                     l3533:
 44670                           
 44671                           ; BSR set to: 0
 44672                           
 44673                           ; BSR set to: 0
 44674  00DBDE  0E00               	movlw	0
 44675  00DBE0  6F6E               	movwf	___fldiv@b& (0+255),b
 44676  00DBE2  0E00               	movlw	0
 44677  00DBE4  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 44678  00DBE6  0E00               	movlw	0
 44679  00DBE8  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 44680  00DBEA                     L68:
 44681  00DBEA  0E00               	movlw	0
 44682  00DBEC  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 44683                           
 44684                           ; BSR set to: 0
 44685                           
 44686                           ; BSR set to: 0
 44687  00DBEE  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 44688  00DBF0  0B80               	andlw	128
 44689  00DBF2  1B7E               	xorwf	___fldiv@sign& (0+255),f,b
 44690                           
 44691                           ; BSR set to: 0
 44692  00DBF4  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 44693  00DBF6  2575               	addwf	(___fldiv@a+3)& (0+255),w,b
 44694  00DBF8  6F86               	movwf	___fldiv@aexp& (0+255),b
 44695                           
 44696                           ; BSR set to: 0
 44697  00DBFA  BF74               	btfsc	(___fldiv@a+2)& (0+255),7,b
 44698                           
 44699                           ; BSR set to: 0
 44700  00DBFC  8186               	bsf	___fldiv@aexp& (0+255),0,b
 44701                           
 44702                           ; BSR set to: 0
 44703                           
 44704                           ; BSR set to: 0
 44705  00DBFE  5186               	movf	___fldiv@aexp& (0+255),w,b
 44706  00DC00  B4D8               	btfsc	status,2,c
 44707  00DC02  D00D               	goto	l3537
 44708                           
 44709                           ; BSR set to: 0
 44710  00DC04  2986               	incf	___fldiv@aexp& (0+255),w,b
 44711  00DC06  A4D8               	btfss	status,2,c
 44712  00DC08  D008               	goto	l3538
 44713                           
 44714                           ; BSR set to: 0
 44715  00DC0A  0E00               	movlw	0
 44716  00DC0C  6F72               	movwf	___fldiv@a& (0+255),b
 44717  00DC0E  0E00               	movlw	0
 44718  00DC10  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 44719  00DC12  0E00               	movlw	0
 44720  00DC14  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 44721  00DC16  0E00               	movlw	0
 44722  00DC18  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 44723  00DC1A                     l3538:
 44724                           
 44725                           ; BSR set to: 0
 44726                           
 44727                           ; BSR set to: 0
 44728  00DC1A  8F74               	bsf	(___fldiv@a+2)& (0+255),7,b
 44729  00DC1C  D006               	goto	L69
 44730  00DC1E                     l3537:
 44731                           
 44732                           ; BSR set to: 0
 44733                           
 44734                           ; BSR set to: 0
 44735  00DC1E  0E00               	movlw	0
 44736  00DC20  6F72               	movwf	___fldiv@a& (0+255),b
 44737  00DC22  0E00               	movlw	0
 44738  00DC24  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 44739  00DC26  0E00               	movlw	0
 44740  00DC28  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 44741  00DC2A                     L69:
 44742  00DC2A  0E00               	movlw	0
 44743  00DC2C  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 44744                           
 44745                           ; BSR set to: 0
 44746                           
 44747                           ; BSR set to: 0
 44748  00DC2E  5172               	movf	___fldiv@a& (0+255),w,b
 44749  00DC30  1173               	iorwf	(___fldiv@a+1)& (0+255),w,b
 44750  00DC32  1174               	iorwf	(___fldiv@a+2)& (0+255),w,b
 44751  00DC34  1175               	iorwf	(___fldiv@a+3)& (0+255),w,b
 44752  00DC36  A4D8               	btfss	status,2,c
 44753  00DC38  D017               	goto	l3540
 44754                           
 44755                           ; BSR set to: 0
 44756  00DC3A  0E00               	movlw	0
 44757  00DC3C  6F6E               	movwf	___fldiv@b& (0+255),b
 44758  00DC3E  0E00               	movlw	0
 44759  00DC40  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 44760  00DC42  0E00               	movlw	0
 44761  00DC44  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 44762  00DC46  0E00               	movlw	0
 44763  00DC48  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 44764                           
 44765                           ; BSR set to: 0
 44766  00DC4A  0E80               	movlw	128
 44767  00DC4C  1370               	iorwf	(___fldiv@b+2)& (0+255),f,b
 44768  00DC4E  0E7F               	movlw	127
 44769  00DC50  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
 44770                           
 44771                           ; BSR set to: 0
 44772  00DC52  517E               	movf	___fldiv@sign& (0+255),w,b
 44773  00DC54  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
 44774                           
 44775                           ; BSR set to: 0
 44776  00DC56  C06E  F06E         	movff	___fldiv@b,?___fldiv
 44777  00DC5A  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
 44778  00DC5E  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
 44779  00DC62  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
 44780                           
 44781                           ; BSR set to: 0
 44782  00DC66  0012               	return	
 44783  00DC68                     l3540:
 44784                           
 44785                           ; BSR set to: 0
 44786                           
 44787                           ; BSR set to: 0
 44788  00DC68  5185               	movf	___fldiv@bexp& (0+255),w,b
 44789  00DC6A  A4D8               	btfss	status,2,c
 44790  00DC6C  D011               	goto	l3542
 44791                           
 44792                           ; BSR set to: 0
 44793  00DC6E  0E00               	movlw	0
 44794  00DC70  6F6E               	movwf	___fldiv@b& (0+255),b
 44795  00DC72  0E00               	movlw	0
 44796  00DC74  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 44797  00DC76  0E00               	movlw	0
 44798  00DC78  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 44799  00DC7A  0E00               	movlw	0
 44800  00DC7C  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 44801                           
 44802                           ; BSR set to: 0
 44803  00DC7E  C06E  F06E         	movff	___fldiv@b,?___fldiv
 44804  00DC82  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
 44805  00DC86  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
 44806  00DC8A  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
 44807                           
 44808                           ; BSR set to: 0
 44809  00DC8E  0012               	return	
 44810  00DC90                     l3542:
 44811                           
 44812                           ; BSR set to: 0
 44813                           
 44814                           ; BSR set to: 0
 44815  00DC90  5186               	movf	___fldiv@aexp& (0+255),w,b
 44816  00DC92  6F76               	movwf	??___fldiv& (0+255),b
 44817  00DC94  6B77               	clrf	(??___fldiv+1)& (0+255),b
 44818  00DC96  1F76               	comf	??___fldiv& (0+255),f,b
 44819  00DC98  1F77               	comf	(??___fldiv+1)& (0+255),f,b
 44820  00DC9A  4B76               	infsnz	??___fldiv& (0+255),f,b
 44821  00DC9C  2B77               	incf	(??___fldiv+1)& (0+255),f,b
 44822  00DC9E  5185               	movf	___fldiv@bexp& (0+255),w,b
 44823  00DCA0  6F78               	movwf	(??___fldiv+2)& (0+255),b
 44824  00DCA2  6B79               	clrf	(??___fldiv+3)& (0+255),b
 44825  00DCA4  5176               	movf	??___fldiv& (0+255),w,b
 44826  00DCA6  2778               	addwf	(??___fldiv+2)& (0+255),f,b
 44827  00DCA8  5177               	movf	(??___fldiv+1)& (0+255),w,b
 44828  00DCAA  2379               	addwfc	(??___fldiv+3)& (0+255),f,b
 44829  00DCAC  0E7F               	movlw	127
 44830  00DCAE  2578               	addwf	(??___fldiv+2)& (0+255),w,b
 44831  00DCB0  6F7F               	movwf	___fldiv@new_exp& (0+255),b
 44832  00DCB2  0E00               	movlw	0
 44833  00DCB4  2179               	addwfc	(??___fldiv+3)& (0+255),w,b
 44834  00DCB6  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 44835                           
 44836                           ; BSR set to: 0
 44837  00DCB8  C06E  F07A         	movff	___fldiv@b,___fldiv@rem
 44838  00DCBC  C06F  F07B         	movff	___fldiv@b+1,___fldiv@rem+1
 44839  00DCC0  C070  F07C         	movff	___fldiv@b+2,___fldiv@rem+2
 44840  00DCC4  C071  F07D         	movff	___fldiv@b+3,___fldiv@rem+3
 44841                           
 44842                           ; BSR set to: 0
 44843  00DCC8  0E00               	movlw	0
 44844  00DCCA  6F6E               	movwf	___fldiv@b& (0+255),b
 44845  00DCCC  0E00               	movlw	0
 44846  00DCCE  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 44847  00DCD0  0E00               	movlw	0
 44848  00DCD2  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 44849  00DCD4  0E00               	movlw	0
 44850  00DCD6  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 44851                           
 44852                           ; BSR set to: 0
 44853  00DCD8  0E00               	movlw	0
 44854  00DCDA  6F81               	movwf	___fldiv@grs& (0+255),b
 44855  00DCDC  0E00               	movlw	0
 44856  00DCDE  6F82               	movwf	(___fldiv@grs+1)& (0+255),b
 44857  00DCE0  0E00               	movlw	0
 44858  00DCE2  6F83               	movwf	(___fldiv@grs+2)& (0+255),b
 44859  00DCE4  0E00               	movlw	0
 44860  00DCE6  6F84               	movwf	(___fldiv@grs+3)& (0+255),b
 44861                           
 44862                           ; BSR set to: 0
 44863  00DCE8  0E00               	movlw	0
 44864  00DCEA  6F86               	movwf	___fldiv@aexp& (0+255),b
 44865  00DCEC  D028               	goto	l3543
 44866  00DCEE                     
 44867                           ; BSR set to: 0
 44868                           
 44869                           ; BSR set to: 0
 44870  00DCEE  5186               	movf	___fldiv@aexp& (0+255),w,b
 44871  00DCF0  B4D8               	btfsc	status,2,c
 44872  00DCF2  D011               	goto	l3545
 44873                           
 44874                           ; BSR set to: 0
 44875  00DCF4  90D8               	bcf	status,0,c
 44876  00DCF6  377A               	rlcf	___fldiv@rem& (0+255),f,b
 44877  00DCF8  377B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 44878  00DCFA  377C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 44879  00DCFC  377D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 44880  00DCFE  90D8               	bcf	status,0,c
 44881  00DD00  376E               	rlcf	___fldiv@b& (0+255),f,b
 44882  00DD02  376F               	rlcf	(___fldiv@b+1)& (0+255),f,b
 44883  00DD04  3770               	rlcf	(___fldiv@b+2)& (0+255),f,b
 44884  00DD06  3771               	rlcf	(___fldiv@b+3)& (0+255),f,b
 44885                           
 44886                           ; BSR set to: 0
 44887  00DD08  BF84               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 44888                           
 44889                           ; BSR set to: 0
 44890  00DD0A  816E               	bsf	___fldiv@b& (0+255),0,b
 44891                           
 44892                           ; BSR set to: 0
 44893  00DD0C  90D8               	bcf	status,0,c
 44894  00DD0E  3781               	rlcf	___fldiv@grs& (0+255),f,b
 44895  00DD10  3782               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 44896  00DD12  3783               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 44897  00DD14  3784               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 44898  00DD16                     l3545:
 44899                           
 44900                           ; BSR set to: 0
 44901                           
 44902                           ; BSR set to: 0
 44903  00DD16  5172               	movf	___fldiv@a& (0+255),w,b
 44904  00DD18  5D7A               	subwf	___fldiv@rem& (0+255),w,b
 44905  00DD1A  5173               	movf	(___fldiv@a+1)& (0+255),w,b
 44906  00DD1C  597B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 44907  00DD1E  5174               	movf	(___fldiv@a+2)& (0+255),w,b
 44908  00DD20  597C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 44909  00DD22  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 44910  00DD24  597D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 44911  00DD26  A0D8               	btfss	status,0,c
 44912  00DD28  D009               	goto	l3547
 44913                           
 44914                           ; BSR set to: 0
 44915  00DD2A  8D84               	bsf	(___fldiv@grs+3)& (0+255),6,b
 44916                           
 44917                           ; BSR set to: 0
 44918  00DD2C  5172               	movf	___fldiv@a& (0+255),w,b
 44919  00DD2E  5F7A               	subwf	___fldiv@rem& (0+255),f,b
 44920  00DD30  5173               	movf	(___fldiv@a+1)& (0+255),w,b
 44921  00DD32  5B7B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 44922  00DD34  5174               	movf	(___fldiv@a+2)& (0+255),w,b
 44923  00DD36  5B7C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 44924  00DD38  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 44925  00DD3A  5B7D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 44926  00DD3C                     l3547:
 44927                           
 44928                           ; BSR set to: 0
 44929                           
 44930                           ; BSR set to: 0
 44931  00DD3C  2B86               	incf	___fldiv@aexp& (0+255),f,b
 44932  00DD3E                     l3543:
 44933                           
 44934                           ; BSR set to: 0
 44935  00DD3E  0E19               	movlw	25
 44936  00DD40  6586               	cpfsgt	___fldiv@aexp& (0+255),b
 44937  00DD42  D7D5               	goto	l3544
 44938                           
 44939                           ; BSR set to: 0
 44940                           
 44941                           ; BSR set to: 0
 44942  00DD44  517A               	movf	___fldiv@rem& (0+255),w,b
 44943  00DD46  117B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 44944  00DD48  117C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 44945  00DD4A  117D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 44946  00DD4C  B4D8               	btfsc	status,2,c
 44947  00DD4E  D011               	goto	l3550
 44948                           
 44949                           ; BSR set to: 0
 44950  00DD50  8181               	bsf	___fldiv@grs& (0+255),0,b
 44951                           
 44952                           ; BSR set to: 0
 44953  00DD52  D00F               	goto	l3550
 44954  00DD54                     
 44955                           ; BSR set to: 0
 44956                           
 44957                           ; BSR set to: 0
 44958  00DD54  90D8               	bcf	status,0,c
 44959  00DD56  376E               	rlcf	___fldiv@b& (0+255),f,b
 44960  00DD58  376F               	rlcf	(___fldiv@b+1)& (0+255),f,b
 44961  00DD5A  3770               	rlcf	(___fldiv@b+2)& (0+255),f,b
 44962  00DD5C  3771               	rlcf	(___fldiv@b+3)& (0+255),f,b
 44963                           
 44964                           ; BSR set to: 0
 44965  00DD5E  BF84               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 44966                           
 44967                           ; BSR set to: 0
 44968  00DD60  816E               	bsf	___fldiv@b& (0+255),0,b
 44969                           
 44970                           ; BSR set to: 0
 44971  00DD62  90D8               	bcf	status,0,c
 44972  00DD64  3781               	rlcf	___fldiv@grs& (0+255),f,b
 44973  00DD66  3782               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 44974  00DD68  3783               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 44975  00DD6A  3784               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 44976  00DD6C  077F               	decf	___fldiv@new_exp& (0+255),f,b
 44977  00DD6E  A0D8               	btfss	status,0,c
 44978  00DD70  0780               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 44979  00DD72                     l3550:
 44980                           
 44981                           ; BSR set to: 0
 44982                           
 44983                           ; BSR set to: 0
 44984  00DD72  AF70               	btfss	(___fldiv@b+2)& (0+255),7,b
 44985  00DD74  D7EF               	goto	l3551
 44986                           
 44987                           ; BSR set to: 0
 44988                           
 44989                           ; BSR set to: 0
 44990  00DD76  0E00               	movlw	0
 44991  00DD78  6F86               	movwf	___fldiv@aexp& (0+255),b
 44992                           
 44993                           ; BSR set to: 0
 44994  00DD7A  AF84               	btfss	(___fldiv@grs+3)& (0+255),7,b
 44995  00DD7C  D016               	goto	l3557
 44996                           
 44997                           ; BSR set to: 0
 44998  00DD7E  0EFF               	movlw	255
 44999  00DD80  1581               	andwf	___fldiv@grs& (0+255),w,b
 45000  00DD82  6F76               	movwf	??___fldiv& (0+255),b
 45001  00DD84  0EFF               	movlw	255
 45002  00DD86  1582               	andwf	(___fldiv@grs+1)& (0+255),w,b
 45003  00DD88  6F77               	movwf	(??___fldiv+1)& (0+255),b
 45004  00DD8A  0EFF               	movlw	255
 45005  00DD8C  1583               	andwf	(___fldiv@grs+2)& (0+255),w,b
 45006  00DD8E  6F78               	movwf	(??___fldiv+2)& (0+255),b
 45007  00DD90  0E7F               	movlw	127
 45008  00DD92  1584               	andwf	(___fldiv@grs+3)& (0+255),w,b
 45009  00DD94  6F79               	movwf	(??___fldiv+3)& (0+255),b
 45010  00DD96  5176               	movf	??___fldiv& (0+255),w,b
 45011  00DD98  1177               	iorwf	(??___fldiv+1)& (0+255),w,b
 45012  00DD9A  1178               	iorwf	(??___fldiv+2)& (0+255),w,b
 45013  00DD9C  1179               	iorwf	(??___fldiv+3)& (0+255),w,b
 45014  00DD9E  A4D8               	btfss	status,2,c
 45015  00DDA0  D002               	goto	u10160
 45016                           
 45017                           ; BSR set to: 0
 45018                           
 45019                           ; BSR set to: 0
 45020  00DDA2  A16E               	btfss	___fldiv@b& (0+255),0,b
 45021  00DDA4  D002               	goto	l3557
 45022  00DDA6                     u10160:
 45023                           
 45024                           ; BSR set to: 0
 45025  00DDA6  0E01               	movlw	1
 45026  00DDA8  6F86               	movwf	___fldiv@aexp& (0+255),b
 45027  00DDAA                     l3557:
 45028                           
 45029                           ; BSR set to: 0
 45030                           
 45031                           ; BSR set to: 0
 45032                           
 45033                           ; BSR set to: 0
 45034  00DDAA  5186               	movf	___fldiv@aexp& (0+255),w,b
 45035  00DDAC  B4D8               	btfsc	status,2,c
 45036  00DDAE  D01F               	goto	l3559
 45037                           
 45038                           ; BSR set to: 0
 45039  00DDB0  0E01               	movlw	1
 45040  00DDB2  276E               	addwf	___fldiv@b& (0+255),f,b
 45041  00DDB4  0E00               	movlw	0
 45042  00DDB6  236F               	addwfc	(___fldiv@b+1)& (0+255),f,b
 45043  00DDB8  2370               	addwfc	(___fldiv@b+2)& (0+255),f,b
 45044  00DDBA  2371               	addwfc	(___fldiv@b+3)& (0+255),f,b
 45045                           
 45046                           ; BSR set to: 0
 45047  00DDBC  A171               	btfss	(___fldiv@b+3)& (0+255),0,b
 45048  00DDBE  D017               	goto	l3559
 45049                           
 45050                           ; BSR set to: 0
 45051  00DDC0  C06E  F076         	movff	___fldiv@b,??___fldiv
 45052  00DDC4  C06F  F077         	movff	___fldiv@b+1,??___fldiv+1
 45053  00DDC8  C070  F078         	movff	___fldiv@b+2,??___fldiv+2
 45054  00DDCC  C071  F079         	movff	___fldiv@b+3,??___fldiv+3
 45055  00DDD0  3579               	rlcf	(??___fldiv+3)& (0+255),w,b
 45056  00DDD2  3379               	rrcf	(??___fldiv+3)& (0+255),f,b
 45057  00DDD4  3378               	rrcf	(??___fldiv+2)& (0+255),f,b
 45058  00DDD6  3377               	rrcf	(??___fldiv+1)& (0+255),f,b
 45059  00DDD8  3376               	rrcf	??___fldiv& (0+255),f,b
 45060  00DDDA  C076  F06E         	movff	??___fldiv,___fldiv@b
 45061  00DDDE  C077  F06F         	movff	??___fldiv+1,___fldiv@b+1
 45062  00DDE2  C078  F070         	movff	??___fldiv+2,___fldiv@b+2
 45063  00DDE6  C079  F071         	movff	??___fldiv+3,___fldiv@b+3
 45064                           
 45065                           ; BSR set to: 0
 45066  00DDEA  4B7F               	infsnz	___fldiv@new_exp& (0+255),f,b
 45067  00DDEC  2B80               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 45068  00DDEE                     l3559:
 45069                           
 45070                           ; BSR set to: 0
 45071                           
 45072                           ; BSR set to: 0
 45073                           
 45074                           ; BSR set to: 0
 45075  00DDEE  BF80               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 45076  00DDF0  D010               	goto	l3560
 45077  00DDF2  5180               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 45078  00DDF4  E103               	bnz	u10190
 45079  00DDF6  297F               	incf	___fldiv@new_exp& (0+255),w,b
 45080  00DDF8  A0D8               	btfss	status,0,c
 45081  00DDFA  D00B               	goto	l3560
 45082  00DDFC                     u10190:
 45083                           
 45084                           ; BSR set to: 0
 45085  00DDFC  0E00               	movlw	0
 45086  00DDFE  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 45087  00DE00  697F               	setf	___fldiv@new_exp& (0+255),b
 45088  00DE02  0E00               	movlw	0
 45089  00DE04  6F6E               	movwf	___fldiv@b& (0+255),b
 45090  00DE06  0E00               	movlw	0
 45091  00DE08  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 45092  00DE0A  0E00               	movlw	0
 45093  00DE0C  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 45094  00DE0E  0E00               	movlw	0
 45095  00DE10  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 45096  00DE12                     l3560:
 45097                           
 45098                           ; BSR set to: 0
 45099                           
 45100                           ; BSR set to: 0
 45101  00DE12  BF80               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 45102  00DE14  D005               	goto	u10200
 45103  00DE16  5180               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 45104  00DE18  E111               	bnz	l12121
 45105  00DE1A  057F               	decf	___fldiv@new_exp& (0+255),w,b
 45106  00DE1C  B0D8               	btfsc	status,0,c
 45107  00DE1E  D00E               	goto	l3561
 45108  00DE20                     u10200:
 45109                           
 45110                           ; BSR set to: 0
 45111  00DE20  0E00               	movlw	0
 45112  00DE22  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 45113  00DE24  0E00               	movlw	0
 45114  00DE26  6F7F               	movwf	___fldiv@new_exp& (0+255),b
 45115  00DE28  0E00               	movlw	0
 45116  00DE2A  6F6E               	movwf	___fldiv@b& (0+255),b
 45117  00DE2C  0E00               	movlw	0
 45118  00DE2E  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 45119  00DE30  0E00               	movlw	0
 45120  00DE32  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 45121  00DE34  0E00               	movlw	0
 45122  00DE36  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 45123  00DE38  0E00               	movlw	0
 45124  00DE3A  6F7E               	movwf	___fldiv@sign& (0+255),b
 45125  00DE3C                     l3561:
 45126  00DE3C                     l12121:
 45127                           
 45128                           ; BSR set to: 0
 45129  00DE3C  C07F  F085         	movff	___fldiv@new_exp,___fldiv@bexp
 45130                           
 45131                           ; BSR set to: 0
 45132  00DE40  A185               	btfss	___fldiv@bexp& (0+255),0,b
 45133  00DE42  D002               	goto	l3562
 45134                           
 45135                           ; BSR set to: 0
 45136  00DE44  8F70               	bsf	(___fldiv@b+2)& (0+255),7,b
 45137  00DE46  D001               	goto	l3563
 45138  00DE48                     l3562:
 45139                           
 45140                           ; BSR set to: 0
 45141                           
 45142                           ; BSR set to: 0
 45143  00DE48  9F70               	bcf	(___fldiv@b+2)& (0+255),7,b
 45144  00DE4A                     l3563:
 45145                           
 45146                           ; BSR set to: 0
 45147                           
 45148                           ; BSR set to: 0
 45149  00DE4A  90D8               	bcf	status,0,c
 45150  00DE4C  3185               	rrcf	___fldiv@bexp& (0+255),w,b
 45151  00DE4E  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 45152                           
 45153                           ; BSR set to: 0
 45154  00DE50  517E               	movf	___fldiv@sign& (0+255),w,b
 45155  00DE52  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
 45156                           
 45157                           ; BSR set to: 0
 45158  00DE54  C06E  F06E         	movff	___fldiv@b,?___fldiv
 45159  00DE58  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
 45160  00DE5C  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
 45161  00DE60  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
 45162  00DE64  0012               	return	
 45163  00DE66                     __end_of___fldiv:
 45164                           	opt stack 0
 45165                           tosu	equ	0xFFF
 45166                           tosh	equ	0xFFE
 45167                           tosl	equ	0xFFD
 45168                           pclath	equ	0xFFA
 45169                           tblptru	equ	0xFF8
 45170                           tblptrh	equ	0xFF7
 45171                           tblptrl	equ	0xFF6
 45172                           tablat	equ	0xFF5
 45173                           prodh	equ	0xFF4
 45174                           prodl	equ	0xFF3
 45175                           intcon	equ	0xFF2
 45176                           indf0	equ	0xFEF
 45177                           postinc0	equ	0xFEE
 45178                           fsr0h	equ	0xFEA
 45179                           fsr0l	equ	0xFE9
 45180                           wreg	equ	0xFE8
 45181                           indf1	equ	0xFE7
 45182                           postinc1	equ	0xFE6
 45183                           postdec1	equ	0xFE5
 45184                           plusw1	equ	0xFE3
 45185                           fsr1h	equ	0xFE2
 45186                           fsr1l	equ	0xFE1
 45187                           indf2	equ	0xFDF
 45188                           postinc2	equ	0xFDE
 45189                           postdec2	equ	0xFDD
 45190                           plusw2	equ	0xFDB
 45191                           fsr2h	equ	0xFDA
 45192                           fsr2l	equ	0xFD9
 45193                           status	equ	0xFD8
 45194                           
 45195 ;; *************** function _USBTransferOnePacket *****************
 45196 ;; Defined at:
 45197 ;;		line 995 in file "usb_device.c"
 45198 ;; Parameters:    Size  Location     Type
 45199 ;;  ep              1    wreg     unsigned char 
 45200 ;;  dir             1    0[BANK0 ] unsigned char 
 45201 ;;  data            2    1[BANK0 ] PTR unsigned char 
 45202 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 45203 ;;		 -> msd_cbw(31), NULL(0), 
 45204 ;;  len             1    3[BANK0 ] unsigned char 
 45205 ;; Auto vars:     Size  Location     Type
 45206 ;;  ep              1    8[BANK0 ] unsigned char 
 45207 ;;  handle          2    9[BANK0 ] PTR volatile struct __BD
 45208 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 45209 ;; Return value:  Size  Location     Type
 45210 ;;                  2    0[BANK0 ] PTR void 
 45211 ;; Registers used:
 45212 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 45213 ;; Tracked objects:
 45214 ;;		On entry : 0/0
 45215 ;;		On exit  : 0/0
 45216 ;;		Unchanged: 0/0
 45217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45218 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45219 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45220 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45221 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45222 ;;Total ram usage:       11 bytes
 45223 ;; Hardware stack levels used:    1
 45224 ;; Hardware stack levels required when called:   10
 45225 ;; This function calls:
 45226 ;;		Nothing
 45227 ;; This function is called by:
 45228 ;;		_MSDTasks
 45229 ;;		_MSDProcessCommandMediaPresent
 45230 ;;		_MSDReadHandler
 45231 ;;		_MSDWriteHandler
 45232 ;;		_APP_DeviceCustomHIDTasks
 45233 ;; This function uses a non-reentrant model
 45234 ;;
 45235                           
 45236                           	psect	text184
 45237  01100E                     __ptext184:
 45238                           	opt stack 0
 45239  01100E                     _USBTransferOnePacket:
 45240                           	opt stack 18
 45241                           
 45242                           ; BSR set to: 0
 45243                           ;incstack = 0
 45244                           ;USBTransferOnePacket@ep stored from wreg
 45245  01100E  0100               	movlb	0	; () banked
 45246  011010  6F68               	movwf	USBTransferOnePacket@ep& (0+255),b
 45247                           
 45248                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 45249  011012  0100               	movlb	0	; () banked
 45250  011014  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 45251  011016  B4D8               	btfsc	status,2,c
 45252  011018  D007               	goto	l184
 45253                           
 45254                           ; BSR set to: 0
 45255                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 45256  01101A  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 45257  01101C  0D02               	mullw	2
 45258  01101E  0E1B               	movlw	low _pBDTEntryIn
 45259  011020  24F3               	addwf	prodl,w,c
 45260  011022  6ED9               	movwf	fsr2l,c
 45261  011024  0E01               	movlw	high _pBDTEntryIn
 45262  011026  D006               	goto	L70
 45263  011028                     l184:
 45264                           
 45265                           ; BSR set to: 0
 45266                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 45267                           
 45268                           ; BSR set to: 0
 45269  011028  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 45270  01102A  0D02               	mullw	2
 45271  01102C  0E21               	movlw	low _pBDTEntryOut
 45272  01102E  24F3               	addwf	prodl,w,c
 45273  011030  6ED9               	movwf	fsr2l,c
 45274  011032  0E01               	movlw	high _pBDTEntryOut
 45275  011034                     L70:
 45276  011034  20F4               	addwfc	prodh,w,c
 45277  011036  6EDA               	movwf	fsr2h,c
 45278  011038  CFDE F069          	movff	postinc2,USBTransferOnePacket@handle
 45279  01103C  CFDD F06A          	movff	postdec2,USBTransferOnePacket@handle+1
 45280                           
 45281                           ; BSR set to: 0
 45282                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 45283                           
 45284                           ; BSR set to: 0
 45285  011040  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 45286  011042  116A               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 45287  011044  A4D8               	btfss	status,2,c
 45288  011046  D005               	goto	l186
 45289                           
 45290                           ; BSR set to: 0
 45291                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 45292  011048  0E00               	movlw	0
 45293  01104A  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 45294  01104C  0E00               	movlw	0
 45295  01104E  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 45296                           
 45297                           ; BSR set to: 0
 45298  011050  0012               	return	
 45299  011052                     l186:
 45300                           
 45301                           ; BSR set to: 0
 45302                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 45303                           
 45304                           ; BSR set to: 0
 45305  011052  EE20 F002          	lfsr	2,2
 45306  011056  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 45307  011058  26D9               	addwf	fsr2l,f,c
 45308  01105A  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 45309  01105C  22DA               	addwfc	fsr2h,f,c
 45310  01105E  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 45311  011062  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 45312                           
 45313                           ;usb_device.c: 1030: handle->CNT = len;
 45314  011066  EE20 F001          	lfsr	2,1
 45315  01106A  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 45316  01106C  26D9               	addwf	fsr2l,f,c
 45317  01106E  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 45318  011070  22DA               	addwfc	fsr2h,f,c
 45319  011072  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 45320                           
 45321                           ; BSR set to: 0
 45322                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 45323  011076  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 45324  01107A  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 45325  01107E  0E40               	movlw	64
 45326  011080  16DF               	andwf	indf2,f,c
 45327                           
 45328                           ; BSR set to: 0
 45329                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 45330  011082  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 45331  011086  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 45332  01108A  0E00               	movlw	0
 45333  01108C  86DB               	bsf	plusw2,3,c
 45334                           
 45335                           ; BSR set to: 0
 45336                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 45337  01108E  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 45338  011092  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 45339  011096  0E00               	movlw	0
 45340  011098  8EDB               	bsf	plusw2,7,c
 45341                           
 45342                           ; BSR set to: 0
 45343                           ;usb_device.c: 1036: if(dir != 0)
 45344  01109A  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 45345  01109C  B4D8               	btfsc	status,2,c
 45346  01109E  D018               	goto	l188
 45347                           
 45348                           ; BSR set to: 0
 45349                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 45350  0110A0  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 45351  0110A2  0D02               	mullw	2
 45352  0110A4  0E1B               	movlw	low _pBDTEntryIn
 45353  0110A6  24F3               	addwf	prodl,w,c
 45354  0110A8  6ED9               	movwf	fsr2l,c
 45355  0110AA  0E01               	movlw	high _pBDTEntryIn
 45356  0110AC  20F4               	addwfc	prodh,w,c
 45357  0110AE  6EDA               	movwf	fsr2h,c
 45358  0110B0  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 45359  0110B4  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 45360  0110B8  0E04               	movlw	4
 45361  0110BA  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 45362  0110BC  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 45363  0110BE  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 45364  0110C0  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 45365  0110C2  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 45366  0110C4  0D02               	mullw	2
 45367  0110C6  0E1B               	movlw	low _pBDTEntryIn
 45368  0110C8  24F3               	addwf	prodl,w,c
 45369  0110CA  6ED9               	movwf	fsr2l,c
 45370  0110CC  0E01               	movlw	high _pBDTEntryIn
 45371  0110CE  D017               	goto	L71
 45372  0110D0                     l188:
 45373                           
 45374                           ; BSR set to: 0
 45375                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 45376                           
 45377                           ; BSR set to: 0
 45378  0110D0  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 45379  0110D2  0D02               	mullw	2
 45380  0110D4  0E21               	movlw	low _pBDTEntryOut
 45381  0110D6  24F3               	addwf	prodl,w,c
 45382  0110D8  6ED9               	movwf	fsr2l,c
 45383  0110DA  0E01               	movlw	high _pBDTEntryOut
 45384  0110DC  20F4               	addwfc	prodh,w,c
 45385  0110DE  6EDA               	movwf	fsr2h,c
 45386  0110E0  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 45387  0110E4  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 45388  0110E8  0E04               	movlw	4
 45389  0110EA  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 45390  0110EC  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 45391  0110EE  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 45392  0110F0  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 45393  0110F2  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 45394  0110F4  0D02               	mullw	2
 45395  0110F6  0E21               	movlw	low _pBDTEntryOut
 45396  0110F8  24F3               	addwf	prodl,w,c
 45397  0110FA  6ED9               	movwf	fsr2l,c
 45398  0110FC  0E01               	movlw	high _pBDTEntryOut
 45399  0110FE                     L71:
 45400  0110FE  20F4               	addwfc	prodh,w,c
 45401  011100  6EDA               	movwf	fsr2h,c
 45402  011102  C066  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 45403  011106  C067  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 45404                           
 45405                           ; BSR set to: 0
 45406                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 45407                           
 45408                           ; BSR set to: 0
 45409  01110A  C069  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 45410  01110E  C06A  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 45411  011112  0012               	return	
 45412  011114                     __end_of_USBTransferOnePacket:
 45413                           	opt stack 0
 45414                           tosu	equ	0xFFF
 45415                           tosh	equ	0xFFE
 45416                           tosl	equ	0xFFD
 45417                           pclath	equ	0xFFA
 45418                           tblptru	equ	0xFF8
 45419                           tblptrh	equ	0xFF7
 45420                           tblptrl	equ	0xFF6
 45421                           tablat	equ	0xFF5
 45422                           prodh	equ	0xFF4
 45423                           prodl	equ	0xFF3
 45424                           intcon	equ	0xFF2
 45425                           indf0	equ	0xFEF
 45426                           postinc0	equ	0xFEE
 45427                           fsr0h	equ	0xFEA
 45428                           fsr0l	equ	0xFE9
 45429                           wreg	equ	0xFE8
 45430                           indf1	equ	0xFE7
 45431                           postinc1	equ	0xFE6
 45432                           postdec1	equ	0xFE5
 45433                           plusw1	equ	0xFE3
 45434                           fsr1h	equ	0xFE2
 45435                           fsr1l	equ	0xFE1
 45436                           indf2	equ	0xFDF
 45437                           postinc2	equ	0xFDE
 45438                           postdec2	equ	0xFDD
 45439                           plusw2	equ	0xFDB
 45440                           fsr2h	equ	0xFDA
 45441                           fsr2l	equ	0xFD9
 45442                           status	equ	0xFD8
 45443                           
 45444 ;; *************** function _SYS_InterruptHigh *****************
 45445 ;; Defined at:
 45446 ;;		line 162 in file "system.c"
 45447 ;; Parameters:    Size  Location     Type
 45448 ;;		None
 45449 ;; Auto vars:     Size  Location     Type
 45450 ;;		None
 45451 ;; Return value:  Size  Location     Type
 45452 ;;                  1    wreg      void 
 45453 ;; Registers used:
 45454 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 45455 ;; Tracked objects:
 45456 ;;		On entry : 0/0
 45457 ;;		On exit  : 0/0
 45458 ;;		Unchanged: 0/0
 45459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45462 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45463 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45464 ;;Total ram usage:       14 bytes
 45465 ;; Hardware stack levels used:    1
 45466 ;; Hardware stack levels required when called:    9
 45467 ;; This function calls:
 45468 ;;		_USBDeviceTasks
 45469 ;;		_motor_isr
 45470 ;;		_tmr0_isr
 45471 ;; This function is called by:
 45472 ;;		Interrupt level 2
 45473 ;; This function uses a non-reentrant model
 45474 ;;
 45475                           
 45476                           	psect	intcode
 45477  009008                     __pintcode:
 45478                           	opt stack 0
 45479  009008                     _SYS_InterruptHigh:
 45480                           	opt stack 9
 45481                           
 45482                           ; BSR set to: 0
 45483                           ;incstack = 0
 45484  009008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 45485  00900A  CFFA F044          	movff	pclath,??_SYS_InterruptHigh
 45486  00900E  CFFB F045          	movff	pclatu,??_SYS_InterruptHigh+1
 45487  009012  CFE9 F046          	movff	fsr0l,??_SYS_InterruptHigh+2
 45488  009016  CFEA F047          	movff	fsr0h,??_SYS_InterruptHigh+3
 45489  00901A  CFE1 F048          	movff	fsr1l,??_SYS_InterruptHigh+4
 45490  00901E  CFE2 F049          	movff	fsr1h,??_SYS_InterruptHigh+5
 45491  009022  CFD9 F04A          	movff	fsr2l,??_SYS_InterruptHigh+6
 45492  009026  CFDA F04B          	movff	fsr2h,??_SYS_InterruptHigh+7
 45493  00902A  CFF3 F04C          	movff	prodl,??_SYS_InterruptHigh+8
 45494  00902E  CFF4 F04D          	movff	prodh,??_SYS_InterruptHigh+9
 45495  009032  CFF6 F04E          	movff	tblptrl,??_SYS_InterruptHigh+10
 45496  009036  CFF7 F04F          	movff	tblptrh,??_SYS_InterruptHigh+11
 45497  00903A  CFF8 F050          	movff	tblptru,??_SYS_InterruptHigh+12
 45498  00903E  CFF5 F051          	movff	tablat,??_SYS_InterruptHigh+13
 45499                           
 45500                           ;system.c: 165: USBDeviceTasks();
 45501  009042  ECEE  F07F         	call	_USBDeviceTasks	;wreg free
 45502                           
 45503                           ;system.c: 169: if(PIR1bits.TMR2IF)
 45504  009046  B29E               	btfsc	3998,1,c	;volatile
 45505                           
 45506                           ;system.c: 170: {;system.c: 171: motor_isr();
 45507  009048  ECFE  F05B         	call	_motor_isr	;wreg free
 45508                           
 45509                           ;system.c: 172: };system.c: 174: if(INTCONbits.T0IF)
 45510  00904C  B4F2               	btfsc	intcon,2,c	;volatile
 45511                           
 45512                           ;system.c: 175: {;system.c: 176: tmr0_isr();
 45513  00904E  ECBF  F0A8         	call	_tmr0_isr	;wreg free
 45514  009052  C051  FFF5         	movff	??_SYS_InterruptHigh+13,tablat
 45515  009056  C050  FFF8         	movff	??_SYS_InterruptHigh+12,tblptru
 45516  00905A  C04F  FFF7         	movff	??_SYS_InterruptHigh+11,tblptrh
 45517  00905E  C04E  FFF6         	movff	??_SYS_InterruptHigh+10,tblptrl
 45518  009062  C04D  FFF4         	movff	??_SYS_InterruptHigh+9,prodh
 45519  009066  C04C  FFF3         	movff	??_SYS_InterruptHigh+8,prodl
 45520  00906A  C04B  FFDA         	movff	??_SYS_InterruptHigh+7,fsr2h
 45521  00906E  C04A  FFD9         	movff	??_SYS_InterruptHigh+6,fsr2l
 45522  009072  C049  FFE2         	movff	??_SYS_InterruptHigh+5,fsr1h
 45523  009076  C048  FFE1         	movff	??_SYS_InterruptHigh+4,fsr1l
 45524  00907A  C047  FFEA         	movff	??_SYS_InterruptHigh+3,fsr0h
 45525  00907E  C046  FFE9         	movff	??_SYS_InterruptHigh+2,fsr0l
 45526  009082  C045  FFFB         	movff	??_SYS_InterruptHigh+1,pclatu
 45527  009086  C044  FFFA         	movff	??_SYS_InterruptHigh,pclath
 45528  00908A  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 45529  00908C  0011               	retfie		f
 45530  00908E                     __end_of_SYS_InterruptHigh:
 45531                           	opt stack 0
 45532                           tosu	equ	0xFFF
 45533                           tosh	equ	0xFFE
 45534                           tosl	equ	0xFFD
 45535                           pclatu	equ	0xFFB
 45536                           pclath	equ	0xFFA
 45537                           tblptru	equ	0xFF8
 45538                           tblptrh	equ	0xFF7
 45539                           tblptrl	equ	0xFF6
 45540                           tablat	equ	0xFF5
 45541                           prodh	equ	0xFF4
 45542                           prodl	equ	0xFF3
 45543                           intcon	equ	0xFF2
 45544                           indf0	equ	0xFEF
 45545                           postinc0	equ	0xFEE
 45546                           fsr0h	equ	0xFEA
 45547                           fsr0l	equ	0xFE9
 45548                           wreg	equ	0xFE8
 45549                           indf1	equ	0xFE7
 45550                           postinc1	equ	0xFE6
 45551                           postdec1	equ	0xFE5
 45552                           plusw1	equ	0xFE3
 45553                           fsr1h	equ	0xFE2
 45554                           fsr1l	equ	0xFE1
 45555                           indf2	equ	0xFDF
 45556                           postinc2	equ	0xFDE
 45557                           postdec2	equ	0xFDD
 45558                           plusw2	equ	0xFDB
 45559                           fsr2h	equ	0xFDA
 45560                           fsr2l	equ	0xFD9
 45561                           status	equ	0xFD8
 45562                           
 45563 ;; *************** function _tmr0_isr *****************
 45564 ;; Defined at:
 45565 ;;		line 24 in file "os.c"
 45566 ;; Parameters:    Size  Location     Type
 45567 ;;		None
 45568 ;; Auto vars:     Size  Location     Type
 45569 ;;		None
 45570 ;; Return value:  Size  Location     Type
 45571 ;;                  1    wreg      void 
 45572 ;; Registers used:
 45573 ;;		wreg, status,2, status,0, cstack
 45574 ;; Tracked objects:
 45575 ;;		On entry : 0/0
 45576 ;;		On exit  : 0/0
 45577 ;;		Unchanged: 0/0
 45578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45583 ;;Total ram usage:        0 bytes
 45584 ;; Hardware stack levels used:    1
 45585 ;; Hardware stack levels required when called:    1
 45586 ;; This function calls:
 45587 ;;		_encoder_run
 45588 ;; This function is called by:
 45589 ;;		_SYS_InterruptHigh
 45590 ;; This function uses a non-reentrant model
 45591 ;;
 45592                           
 45593                           	psect	text186
 45594  01517E                     __ptext186:
 45595                           	opt stack 0
 45596  01517E                     _tmr0_isr:
 45597                           	opt stack 16
 45598                           
 45599                           ;os.c: 27: if(INTCONbits.T0IF)
 45600                           
 45601                           ;incstack = 0
 45602  01517E  A4F2               	btfss	intcon,2,c	;volatile
 45603  015180  0012               	return	
 45604                           
 45605                           ;os.c: 28: {;os.c: 30: TMR0H = 0xFA;
 45606  015182  0EFA               	movlw	250
 45607  015184  6ED7               	movwf	4055,c	;volatile
 45608                           
 45609                           ;os.c: 31: TMR0L = 0x24;
 45610  015186  0E24               	movlw	36
 45611  015188  6ED6               	movwf	4054,c	;volatile
 45612                           
 45613                           ;os.c: 34: INTCONbits.T0IF = 0;
 45614  01518A  94F2               	bcf	intcon,2,c	;volatile
 45615                           
 45616                           ;os.c: 37: encoder_run();
 45617  01518C  EC04  F08C         	call	_encoder_run	;wreg free
 45618                           
 45619                           ;os.c: 40: ++os.subTimeSlot;
 45620  015190  0101               	movlb	1	; () banked
 45621  015192  2B71               	incf	_os& (0+255),f,b	;volatile
 45622                           
 45623                           ; BSR set to: 1
 45624                           ;os.c: 41: if(os.subTimeSlot>=10)
 45625  015194  0E09               	movlw	9
 45626  015196  6571               	cpfsgt	_os& (0+255),b	;volatile
 45627  015198  0012               	return	
 45628                           
 45629                           ; BSR set to: 1
 45630                           ;os.c: 42: {;os.c: 43: if(os.done)
 45631  01519A  5173               	movf	(_os+2)& (0+255),w,b	;volatile
 45632  01519C  B4D8               	btfsc	status,2,c
 45633  01519E  0012               	return	
 45634                           
 45635                           ; BSR set to: 1
 45636                           ;os.c: 44: {;os.c: 45: ++os.timeSlot;
 45637  0151A0  2B72               	incf	(_os+1)& (0+255),f,b	;volatile
 45638                           
 45639                           ; BSR set to: 1
 45640                           ;os.c: 46: if(os.timeSlot==16)
 45641  0151A2  0E10               	movlw	16
 45642  0151A4  1972               	xorwf	(_os+1)& (0+255),w,b	;volatile
 45643  0151A6  A4D8               	btfss	status,2,c
 45644  0151A8  D002               	goto	i2l1066
 45645                           
 45646                           ; BSR set to: 1
 45647                           ;os.c: 47: {;os.c: 48: os.timeSlot = 0;
 45648  0151AA  0E00               	movlw	0
 45649  0151AC  6F72               	movwf	(_os+1)& (0+255),b	;volatile
 45650  0151AE                     i2l1066:
 45651                           
 45652                           ; BSR set to: 1
 45653                           ;os.c: 49: };os.c: 50: os.subTimeSlot = 0;
 45654  0151AE  0E00               	movlw	0
 45655  0151B0  6F71               	movwf	_os& (0+255),b	;volatile
 45656                           
 45657                           ;os.c: 51: os.done = 0;
 45658  0151B2  0E00               	movlw	0
 45659  0151B4  6F73               	movwf	(_os+2)& (0+255),b	;volatile
 45660                           
 45661                           ; BSR set to: 1
 45662                           
 45663                           ; BSR set to: 1
 45664  0151B6  0012               	return	
 45665  0151B8                     __end_of_tmr0_isr:
 45666                           	opt stack 0
 45667                           tosu	equ	0xFFF
 45668                           tosh	equ	0xFFE
 45669                           tosl	equ	0xFFD
 45670                           pclatu	equ	0xFFB
 45671                           pclath	equ	0xFFA
 45672                           tblptru	equ	0xFF8
 45673                           tblptrh	equ	0xFF7
 45674                           tblptrl	equ	0xFF6
 45675                           tablat	equ	0xFF5
 45676                           prodh	equ	0xFF4
 45677                           prodl	equ	0xFF3
 45678                           intcon	equ	0xFF2
 45679                           indf0	equ	0xFEF
 45680                           postinc0	equ	0xFEE
 45681                           fsr0h	equ	0xFEA
 45682                           fsr0l	equ	0xFE9
 45683                           wreg	equ	0xFE8
 45684                           indf1	equ	0xFE7
 45685                           postinc1	equ	0xFE6
 45686                           postdec1	equ	0xFE5
 45687                           plusw1	equ	0xFE3
 45688                           fsr1h	equ	0xFE2
 45689                           fsr1l	equ	0xFE1
 45690                           indf2	equ	0xFDF
 45691                           postinc2	equ	0xFDE
 45692                           postdec2	equ	0xFDD
 45693                           plusw2	equ	0xFDB
 45694                           fsr2h	equ	0xFDA
 45695                           fsr2l	equ	0xFD9
 45696                           status	equ	0xFD8
 45697                           
 45698 ;; *************** function _encoder_run *****************
 45699 ;; Defined at:
 45700 ;;		line 103 in file "encoder.c"
 45701 ;; Parameters:    Size  Location     Type
 45702 ;;		None
 45703 ;; Auto vars:     Size  Location     Type
 45704 ;;		None
 45705 ;; Return value:  Size  Location     Type
 45706 ;;                  1    wreg      void 
 45707 ;; Registers used:
 45708 ;;		wreg, status,2, status,0
 45709 ;; Tracked objects:
 45710 ;;		On entry : 0/0
 45711 ;;		On exit  : 0/0
 45712 ;;		Unchanged: 0/0
 45713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45718 ;;Total ram usage:        0 bytes
 45719 ;; Hardware stack levels used:    1
 45720 ;; This function calls:
 45721 ;;		Nothing
 45722 ;; This function is called by:
 45723 ;;		_tmr0_isr
 45724 ;; This function uses a non-reentrant model
 45725 ;;
 45726                           
 45727                           	psect	text187
 45728  011808                     __ptext187:
 45729                           	opt stack 0
 45730  011808                     _encoder_run:
 45731                           	opt stack 16
 45732                           
 45733                           ;encoder.c: 105: if(enc1 != (PORTE&0b00000111))
 45734                           
 45735                           ;incstack = 0
 45736  011808  5084               	movf	3972,w,c	;volatile
 45737  01180A  0B07               	andlw	7
 45738  01180C  0101               	movlb	1	; () banked
 45739  01180E  1954               	xorwf	_enc1& (0+255),w,b
 45740  011810  B4D8               	btfsc	status,2,c
 45741  011812  D033               	goto	i2l2644
 45742                           
 45743                           ; BSR set to: 1
 45744                           ;encoder.c: 106: {;encoder.c: 108: if(PORTEbits.RE0 && PORTEbits.RE2 && (!(enc1&0b000000
      +                          01)))
 45745  011814  B084               	btfsc	3972,0,c	;volatile
 45746                           
 45747                           ; BSR set to: 1
 45748  011816  A484               	btfss	3972,2,c	;volatile
 45749  011818  D00D               	goto	i2l2647
 45750                           
 45751                           ; BSR set to: 1
 45752  01181A  B154               	btfsc	_enc1& (0+255),0,b
 45753  01181C  D00B               	goto	i2l2647
 45754                           
 45755                           ; BSR set to: 1
 45756                           ;encoder.c: 109: {;encoder.c: 110: if(os.encoder1Count<127)
 45757  01181E  0E7F               	movlw	127
 45758  011820  1974               	xorwf	(_os+3)& (0+255),w,b	;volatile
 45759  011822  B4D8               	btfsc	status,2,c
 45760  011824  D007               	goto	i2l2647
 45761                           
 45762                           ; BSR set to: 1
 45763                           ;encoder.c: 111: {;encoder.c: 112: ++os.encoder1Count;
 45764  011826  2B74               	incf	(_os+3)& (0+255),f,b	;volatile
 45765                           
 45766                           ; BSR set to: 1
 45767                           ;encoder.c: 113: if(config.beep_duration)
 45768  011828  51B6               	movf	(_config+21)& (0+255),w,b
 45769  01182A  B4D8               	btfsc	status,2,c
 45770  01182C  D003               	goto	i2l2647
 45771                           
 45772                           ; BSR set to: 1
 45773                           ;encoder.c: 114: {;encoder.c: 115: LATCbits.LC7 = 1;
 45774  01182E  8E8B               	bsf	3979,7,c	;volatile
 45775                           
 45776                           ;encoder.c: 116: os.beep_count = config.beep_duration;
 45777  011830  C1B6  F197         	movff	_config+21,_os+38	;volatile
 45778  011834                     i2l2647:
 45779                           
 45780                           ; BSR set to: 1
 45781                           ;encoder.c: 117: };encoder.c: 118: };encoder.c: 119: };encoder.c: 121: if(PORTEbits.RE2 
      +                          && PORTEbits.RE0 && (!(enc1&0b00000100)))
 45782                           
 45783                           ; BSR set to: 1
 45784                           
 45785                           ; BSR set to: 1
 45786  011834  B484               	btfsc	3972,2,c	;volatile
 45787                           
 45788                           ; BSR set to: 1
 45789  011836  A084               	btfss	3972,0,c	;volatile
 45790  011838  D00E               	goto	i2l2650
 45791                           
 45792                           ; BSR set to: 1
 45793  01183A  B554               	btfsc	_enc1& (0+255),2,b
 45794  01183C  D00C               	goto	i2l2650
 45795                           
 45796                           ; BSR set to: 1
 45797                           ;encoder.c: 122: {;encoder.c: 123: if(os.encoder1Count>-128)
 45798  01183E  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 45799  011840  0A80               	xorlw	128
 45800  011842  0FFF               	addlw	255
 45801  011844  A0D8               	btfss	status,0,c
 45802  011846  D007               	goto	i2l2650
 45803                           
 45804                           ; BSR set to: 1
 45805                           ;encoder.c: 124: {;encoder.c: 125: --os.encoder1Count;
 45806  011848  0774               	decf	(_os+3)& (0+255),f,b	;volatile
 45807                           
 45808                           ; BSR set to: 1
 45809                           ;encoder.c: 126: if(config.beep_duration)
 45810  01184A  51B6               	movf	(_config+21)& (0+255),w,b
 45811  01184C  B4D8               	btfsc	status,2,c
 45812  01184E  D003               	goto	i2l2650
 45813                           
 45814                           ; BSR set to: 1
 45815                           ;encoder.c: 127: {;encoder.c: 128: LATCbits.LC7 = 1;
 45816  011850  8E8B               	bsf	3979,7,c	;volatile
 45817                           
 45818                           ;encoder.c: 129: os.beep_count = config.beep_duration;
 45819  011852  C1B6  F197         	movff	_config+21,_os+38	;volatile
 45820  011856                     i2l2650:
 45821                           
 45822                           ; BSR set to: 1
 45823                           ;encoder.c: 130: };encoder.c: 131: };encoder.c: 132: };encoder.c: 134: if(PORTEbits.RE1 
      +                          && (!(enc1&0b00000010)))
 45824                           
 45825                           ; BSR set to: 1
 45826                           
 45827                           ; BSR set to: 1
 45828  011856  B284               	btfsc	3972,1,c	;volatile
 45829                           
 45830                           ; BSR set to: 1
 45831  011858  B354               	btfsc	_enc1& (0+255),1,b
 45832  01185A  D008               	goto	i2l2652
 45833                           
 45834                           ; BSR set to: 1
 45835                           ;encoder.c: 135: {;encoder.c: 136: os.button1 = 1;
 45836  01185C  0E01               	movlw	1
 45837  01185E  6F75               	movwf	(_os+4)& (0+255),b	;volatile
 45838                           
 45839                           ;encoder.c: 137: if(config.beep_duration)
 45840  011860  51B6               	movf	(_config+21)& (0+255),w,b
 45841  011862  B4D8               	btfsc	status,2,c
 45842  011864  D003               	goto	i2l2652
 45843                           
 45844                           ; BSR set to: 1
 45845                           ;encoder.c: 138: {;encoder.c: 139: LATCbits.LC7 = 1;
 45846  011866  8E8B               	bsf	3979,7,c	;volatile
 45847                           
 45848                           ;encoder.c: 140: os.beep_count = config.beep_duration;
 45849  011868  C1B6  F197         	movff	_config+21,_os+38	;volatile
 45850  01186C                     i2l2652:
 45851                           
 45852                           ; BSR set to: 1
 45853                           ;encoder.c: 141: };encoder.c: 142: };encoder.c: 144: if((!PORTEbits.RE1) && (enc1&0b0000
      +                          0010))
 45854                           
 45855                           ; BSR set to: 1
 45856  01186C  A284               	btfss	3972,1,c	;volatile
 45857                           
 45858                           ; BSR set to: 1
 45859  01186E  A354               	btfss	_enc1& (0+255),1,b
 45860  011870  D001               	goto	i2l2653
 45861                           
 45862                           ; BSR set to: 1
 45863                           ;encoder.c: 145: {;encoder.c: 146: os.button1 = -1;
 45864  011872  6975               	setf	(_os+4)& (0+255),b	;volatile
 45865  011874                     i2l2653:
 45866                           
 45867                           ; BSR set to: 1
 45868                           ;encoder.c: 147: };encoder.c: 149: enc1 = PORTE & 0b00000111;
 45869                           
 45870                           ; BSR set to: 1
 45871  011874  5084               	movf	3972,w,c	;volatile
 45872  011876  0B07               	andlw	7
 45873  011878  6F54               	movwf	_enc1& (0+255),b
 45874  01187A                     i2l2644:
 45875                           
 45876                           ; BSR set to: 1
 45877                           ;encoder.c: 150: };encoder.c: 152: if(enc2 != (PORTA&0b00000111))
 45878  01187A  5080               	movf	3968,w,c	;volatile
 45879  01187C  0B07               	andlw	7
 45880  01187E  1953               	xorwf	_enc2& (0+255),w,b
 45881  011880  B4D8               	btfsc	status,2,c
 45882  011882  D033               	goto	i2l2654
 45883                           
 45884                           ; BSR set to: 1
 45885                           ;encoder.c: 153: {;encoder.c: 155: if(PORTAbits.RA2 && PORTAbits.RA0 && (!(enc2&0b000001
      +                          00)))
 45886  011884  B480               	btfsc	3968,2,c	;volatile
 45887                           
 45888                           ; BSR set to: 1
 45889  011886  A080               	btfss	3968,0,c	;volatile
 45890  011888  D00D               	goto	i2l2657
 45891                           
 45892                           ; BSR set to: 1
 45893  01188A  B553               	btfsc	_enc2& (0+255),2,b
 45894  01188C  D00B               	goto	i2l2657
 45895                           
 45896                           ; BSR set to: 1
 45897                           ;encoder.c: 156: {;encoder.c: 157: if(os.encoder2Count<127)
 45898  01188E  0E7F               	movlw	127
 45899  011890  1976               	xorwf	(_os+5)& (0+255),w,b	;volatile
 45900  011892  B4D8               	btfsc	status,2,c
 45901  011894  D007               	goto	i2l2657
 45902                           
 45903                           ; BSR set to: 1
 45904                           ;encoder.c: 158: {;encoder.c: 159: ++os.encoder2Count;
 45905  011896  2B76               	incf	(_os+5)& (0+255),f,b	;volatile
 45906                           
 45907                           ; BSR set to: 1
 45908                           ;encoder.c: 160: if(config.beep_duration)
 45909  011898  51B6               	movf	(_config+21)& (0+255),w,b
 45910  01189A  B4D8               	btfsc	status,2,c
 45911  01189C  D003               	goto	i2l2657
 45912                           
 45913                           ; BSR set to: 1
 45914                           ;encoder.c: 161: {;encoder.c: 162: LATCbits.LC7 = 1;
 45915  01189E  8E8B               	bsf	3979,7,c	;volatile
 45916                           
 45917                           ;encoder.c: 163: os.beep_count = config.beep_duration;
 45918  0118A0  C1B6  F197         	movff	_config+21,_os+38	;volatile
 45919  0118A4                     i2l2657:
 45920                           
 45921                           ; BSR set to: 1
 45922                           ;encoder.c: 164: };encoder.c: 165: };encoder.c: 166: };encoder.c: 168: if(PORTAbits.RA0 
      +                          && PORTAbits.RA2 && (!(enc2&0b00000001)))
 45923                           
 45924                           ; BSR set to: 1
 45925                           
 45926                           ; BSR set to: 1
 45927  0118A4  B080               	btfsc	3968,0,c	;volatile
 45928                           
 45929                           ; BSR set to: 1
 45930  0118A6  A480               	btfss	3968,2,c	;volatile
 45931  0118A8  D00E               	goto	i2l2660
 45932                           
 45933                           ; BSR set to: 1
 45934  0118AA  B153               	btfsc	_enc2& (0+255),0,b
 45935  0118AC  D00C               	goto	i2l2660
 45936                           
 45937                           ; BSR set to: 1
 45938                           ;encoder.c: 169: {;encoder.c: 170: if(os.encoder2Count>-128)
 45939  0118AE  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 45940  0118B0  0A80               	xorlw	128
 45941  0118B2  0FFF               	addlw	255
 45942  0118B4  A0D8               	btfss	status,0,c
 45943  0118B6  D007               	goto	i2l2660
 45944                           
 45945                           ; BSR set to: 1
 45946                           ;encoder.c: 171: {;encoder.c: 172: --os.encoder2Count;
 45947  0118B8  0776               	decf	(_os+5)& (0+255),f,b	;volatile
 45948                           
 45949                           ; BSR set to: 1
 45950                           ;encoder.c: 173: if(config.beep_duration)
 45951  0118BA  51B6               	movf	(_config+21)& (0+255),w,b
 45952  0118BC  B4D8               	btfsc	status,2,c
 45953  0118BE  D003               	goto	i2l2660
 45954                           
 45955                           ; BSR set to: 1
 45956                           ;encoder.c: 174: {;encoder.c: 175: LATCbits.LC7 = 1;
 45957  0118C0  8E8B               	bsf	3979,7,c	;volatile
 45958                           
 45959                           ;encoder.c: 176: os.beep_count = config.beep_duration;
 45960  0118C2  C1B6  F197         	movff	_config+21,_os+38	;volatile
 45961  0118C6                     i2l2660:
 45962                           
 45963                           ; BSR set to: 1
 45964                           ;encoder.c: 177: };encoder.c: 178: };encoder.c: 179: };encoder.c: 181: if(PORTAbits.RA1 
      +                          && (!(enc2&0b00000010)))
 45965                           
 45966                           ; BSR set to: 1
 45967                           
 45968                           ; BSR set to: 1
 45969  0118C6  B280               	btfsc	3968,1,c	;volatile
 45970                           
 45971                           ; BSR set to: 1
 45972  0118C8  B353               	btfsc	_enc2& (0+255),1,b
 45973  0118CA  D008               	goto	i2l2662
 45974                           
 45975                           ; BSR set to: 1
 45976                           ;encoder.c: 182: {;encoder.c: 183: os.button2 = 1;
 45977  0118CC  0E01               	movlw	1
 45978  0118CE  6F77               	movwf	(_os+6)& (0+255),b	;volatile
 45979                           
 45980                           ;encoder.c: 184: if(config.beep_duration)
 45981  0118D0  51B6               	movf	(_config+21)& (0+255),w,b
 45982  0118D2  B4D8               	btfsc	status,2,c
 45983  0118D4  D003               	goto	i2l2662
 45984                           
 45985                           ; BSR set to: 1
 45986                           ;encoder.c: 185: {;encoder.c: 186: LATCbits.LC7 = 1;
 45987  0118D6  8E8B               	bsf	3979,7,c	;volatile
 45988                           
 45989                           ;encoder.c: 187: os.beep_count = config.beep_duration;
 45990  0118D8  C1B6  F197         	movff	_config+21,_os+38	;volatile
 45991  0118DC                     i2l2662:
 45992                           
 45993                           ; BSR set to: 1
 45994                           ;encoder.c: 188: };encoder.c: 189: };encoder.c: 191: if((!PORTAbits.RA1) && (enc2&0b0000
      +                          0010))
 45995                           
 45996                           ; BSR set to: 1
 45997  0118DC  A280               	btfss	3968,1,c	;volatile
 45998                           
 45999                           ; BSR set to: 1
 46000  0118DE  A353               	btfss	_enc2& (0+255),1,b
 46001  0118E0  D001               	goto	i2l2663
 46002                           
 46003                           ; BSR set to: 1
 46004                           ;encoder.c: 192: {;encoder.c: 193: os.button2 = -1;
 46005  0118E2  6977               	setf	(_os+6)& (0+255),b	;volatile
 46006  0118E4                     i2l2663:
 46007                           
 46008                           ; BSR set to: 1
 46009                           ;encoder.c: 194: };encoder.c: 196: enc2 = PORTA & 0b00000111;
 46010                           
 46011                           ; BSR set to: 1
 46012  0118E4  5080               	movf	3968,w,c	;volatile
 46013  0118E6  0B07               	andlw	7
 46014  0118E8  6F53               	movwf	_enc2& (0+255),b
 46015  0118EA                     i2l2654:
 46016                           
 46017                           ; BSR set to: 1
 46018                           ;encoder.c: 197: };encoder.c: 200: if(os.beep_count)
 46019                           
 46020                           ; BSR set to: 1
 46021  0118EA  5197               	movf	(_os+38)& (0+255),w,b	;volatile
 46022  0118EC  B4D8               	btfsc	status,2,c
 46023  0118EE  0012               	return	
 46024                           
 46025                           ; BSR set to: 1
 46026                           ;encoder.c: 201: {;encoder.c: 202: --os.beep_count;
 46027  0118F0  0797               	decf	(_os+38)& (0+255),f,b	;volatile
 46028                           
 46029                           ; BSR set to: 1
 46030                           ;encoder.c: 203: if(!os.beep_count)
 46031  0118F2  5197               	movf	(_os+38)& (0+255),w,b	;volatile
 46032  0118F4  A4D8               	btfss	status,2,c
 46033  0118F6  0012               	return	
 46034                           
 46035                           ; BSR set to: 1
 46036                           ;encoder.c: 204: {;encoder.c: 205: LATCbits.LC7 = 0;
 46037  0118F8  9E8B               	bcf	3979,7,c	;volatile
 46038                           
 46039                           ; BSR set to: 1
 46040  0118FA  0012               	return	
 46041  0118FC                     __end_of_encoder_run:
 46042                           	opt stack 0
 46043                           tosu	equ	0xFFF
 46044                           tosh	equ	0xFFE
 46045                           tosl	equ	0xFFD
 46046                           pclatu	equ	0xFFB
 46047                           pclath	equ	0xFFA
 46048                           tblptru	equ	0xFF8
 46049                           tblptrh	equ	0xFF7
 46050                           tblptrl	equ	0xFF6
 46051                           tablat	equ	0xFF5
 46052                           prodh	equ	0xFF4
 46053                           prodl	equ	0xFF3
 46054                           intcon	equ	0xFF2
 46055                           indf0	equ	0xFEF
 46056                           postinc0	equ	0xFEE
 46057                           fsr0h	equ	0xFEA
 46058                           fsr0l	equ	0xFE9
 46059                           wreg	equ	0xFE8
 46060                           indf1	equ	0xFE7
 46061                           postinc1	equ	0xFE6
 46062                           postdec1	equ	0xFE5
 46063                           plusw1	equ	0xFE3
 46064                           fsr1h	equ	0xFE2
 46065                           fsr1l	equ	0xFE1
 46066                           indf2	equ	0xFDF
 46067                           postinc2	equ	0xFDE
 46068                           postdec2	equ	0xFDD
 46069                           plusw2	equ	0xFDB
 46070                           fsr2h	equ	0xFDA
 46071                           fsr2l	equ	0xFD9
 46072                           status	equ	0xFD8
 46073                           
 46074 ;; *************** function _motor_isr *****************
 46075 ;; Defined at:
 46076 ;;		line 365 in file "motor.c"
 46077 ;; Parameters:    Size  Location     Type
 46078 ;;		None
 46079 ;; Auto vars:     Size  Location     Type
 46080 ;;  steps_remain    4   63[COMRAM] unsigned long 
 46081 ;;  steps_until_    2   61[COMRAM] unsigned int 
 46082 ;;  steps_until_    2   59[COMRAM] unsigned int 
 46083 ;; Return value:  Size  Location     Type
 46084 ;;                  1    wreg      void 
 46085 ;; Registers used:
 46086 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46087 ;; Tracked objects:
 46088 ;;		On entry : 0/0
 46089 ;;		On exit  : 0/0
 46090 ;;		Unchanged: 0/0
 46091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46093 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46094 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46095 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46096 ;;Total ram usage:       24 bytes
 46097 ;; Hardware stack levels used:    1
 46098 ;; Hardware stack levels required when called:    4
 46099 ;; This function calls:
 46100 ;;		_i2c_eeprom_writeUint32
 46101 ;; This function is called by:
 46102 ;;		_SYS_InterruptHigh
 46103 ;; This function uses a non-reentrant model
 46104 ;;
 46105                           
 46106                           	psect	text188
 46107  00B7FC                     __ptext188:
 46108                           	opt stack 0
 46109  00B7FC                     _motor_isr:
 46110                           	opt stack 13
 46111                           
 46112                           ;motor.c: 367: uint32_t steps_remaining;;motor.c: 368: uint16_t steps_until_standstill;;
      +                          motor.c: 369: uint16_t steps_until_standstill_if_accelerate;;motor.c: 372: PIR1bits.TMR2
      +                          IF = 0;
 46113                           
 46114                           ; BSR set to: 1
 46115                           ;incstack = 0
 46116  00B7FC  929E               	bcf	3998,1,c	;volatile
 46117                           
 46118                           ;motor.c: 374: if(motor_mode==MOTOR_MODE_MANUAL)
 46119  00B7FE  0101               	movlb	1	; () banked
 46120  00B800  5156               	movf	_motor_mode& (0+255),w,b
 46121  00B802  A4D8               	btfss	status,2,c
 46122  00B804  D026               	goto	i2l2480
 46123                           
 46124                           ; BSR set to: 1
 46125                           ;motor.c: 375: {;motor.c: 377: if(LATBbits.LB1)
 46126  00B806  A28A               	btfss	3978,1,c	;volatile
 46127  00B808  D023               	goto	i2l2477
 46128                           
 46129                           ; BSR set to: 1
 46130                           ;motor.c: 378: {;motor.c: 380: LATBbits.LB1 = 0;
 46131  00B80A  928A               	bcf	3978,1,c	;volatile
 46132                           
 46133                           ; BSR set to: 1
 46134                           ;motor.c: 383: if(motor_current_stepcount==motor_final_stepcount)
 46135  00B80C  5127               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 46136  00B80E  1858               	xorwf	_motor_current_stepcount,w,c	;volatile
 46137  00B810  E109               	bnz	i2u1850_41
 46138  00B812  5128               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 46139  00B814  1859               	xorwf	_motor_current_stepcount+1,w,c	;volatile
 46140  00B816  E106               	bnz	i2u1850_41
 46141  00B818  5129               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 46142  00B81A  185A               	xorwf	_motor_current_stepcount+2,w,c	;volatile
 46143  00B81C  E103               	bnz	i2u1850_41
 46144  00B81E  512A               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 46145  00B820  185B               	xorwf	_motor_current_stepcount+3,w,c	;volatile
 46146  00B822  A4D8               	btfss	status,2,c
 46147  00B824                     i2u1850_41:
 46148  00B824  0012               	return	
 46149                           
 46150                           ; BSR set to: 1
 46151                           ;motor.c: 384: {;motor.c: 387: T2CONbits.TMR2ON = 0;
 46152  00B826  94CA               	bcf	4042,2,c	;volatile
 46153                           
 46154                           ;motor.c: 389: PIR1bits.TMR2IF = 0;
 46155  00B828  929E               	bcf	3998,1,c	;volatile
 46156                           
 46157                           ;motor.c: 390: PIE1bits.TMR2IE = 0;
 46158  00B82A  929D               	bcf	3997,1,c	;volatile
 46159                           
 46160                           ; BSR set to: 1
 46161                           ;motor.c: 392: i2c_eeprom_writeUint32(0x200, os.current_position_in_steps);
 46162  00B82C  0E02               	movlw	2
 46163  00B82E  6E27               	movwf	i2c_eeprom_writeUint32@address+1,c
 46164  00B830  0E00               	movlw	0
 46165  00B832  6E26               	movwf	i2c_eeprom_writeUint32@address,c
 46166  00B834  C178  F028         	movff	_os+7,i2c_eeprom_writeUint32@data	;volatile
 46167  00B838  C179  F029         	movff	_os+8,i2c_eeprom_writeUint32@data+1	;volatile
 46168  00B83C  C17A  F02A         	movff	_os+9,i2c_eeprom_writeUint32@data+2	;volatile
 46169  00B840  C17B  F02B         	movff	_os+10,i2c_eeprom_writeUint32@data+3	;volatile
 46170  00B844  EC34  F0AC         	call	_i2c_eeprom_writeUint32	;wreg free
 46171                           
 46172                           ;motor.c: 394: os.busy = 0;
 46173  00B848  0E00               	movlw	0
 46174  00B84A  0101               	movlb	1	; () banked
 46175  00B84C  6F7F               	movwf	(_os+14)& (0+255),b	;volatile
 46176                           
 46177                           ; BSR set to: 1
 46178                           ;motor.c: 395: };motor.c: 398: return;
 46179                           
 46180                           ; BSR set to: 1
 46181  00B84E  0012               	return	
 46182  00B850                     i2l2477:
 46183                           
 46184                           ; BSR set to: 1
 46185                           ;motor.c: 400: else;motor.c: 401: {;motor.c: 403: LATBbits.LB1 = 1;
 46186  00B850  828A               	bsf	3978,1,c	;volatile
 46187  00B852                     i2l2480:
 46188                           
 46189                           ; BSR set to: 1
 46190                           ;motor.c: 404: };motor.c: 405: };motor.c: 407: ++motor_current_stepcount;
 46191                           
 46192                           ; BSR set to: 1
 46193                           
 46194                           ; BSR set to: 1
 46195  00B852  0E01               	movlw	1
 46196  00B854  2658               	addwf	_motor_current_stepcount,f,c	;volatile
 46197  00B856  0E00               	movlw	0
 46198  00B858  2259               	addwfc	_motor_current_stepcount+1,f,c	;volatile
 46199  00B85A  225A               	addwfc	_motor_current_stepcount+2,f,c	;volatile
 46200  00B85C  225B               	addwfc	_motor_current_stepcount+3,f,c	;volatile
 46201                           
 46202                           ;motor.c: 410: os.current_position_in_steps += motor_direction;
 46203  00B85E  5155               	movf	_motor_direction& (0+255),w,b
 46204  00B860  6E2C               	movwf	??_motor_isr& (0+255),c
 46205  00B862  0E00               	movlw	0
 46206  00B864  BE2C               	btfsc	??_motor_isr& (0+255),7,c
 46207  00B866  0EFF               	movlw	255
 46208  00B868  6E2D               	movwf	(??_motor_isr+1)& (0+255),c
 46209  00B86A  6E2E               	movwf	(??_motor_isr+2)& (0+255),c
 46210  00B86C  6E2F               	movwf	(??_motor_isr+3)& (0+255),c
 46211  00B86E  502C               	movf	??_motor_isr,w,c
 46212  00B870  2778               	addwf	(_os+7)& (0+255),f,b	;volatile
 46213  00B872  502D               	movf	??_motor_isr+1,w,c
 46214  00B874  2379               	addwfc	(_os+8)& (0+255),f,b	;volatile
 46215  00B876  502E               	movf	??_motor_isr+2,w,c
 46216  00B878  237A               	addwfc	(_os+9)& (0+255),f,b	;volatile
 46217  00B87A  502F               	movf	??_motor_isr+3,w,c
 46218  00B87C  237B               	addwfc	(_os+10)& (0+255),f,b	;volatile
 46219                           
 46220                           ;motor.c: 411: if(os.current_position_in_steps==config.full_circle_in_steps)
 46221  00B87E  51A1               	movf	_config& (0+255),w,b
 46222  00B880  1978               	xorwf	(_os+7)& (0+255),w,b	;volatile
 46223  00B882  E112               	bnz	i2l18531
 46224  00B884  51A2               	movf	(_config+1)& (0+255),w,b
 46225  00B886  1979               	xorwf	(_os+8)& (0+255),w,b	;volatile
 46226  00B888  E10F               	bnz	i2l18531
 46227  00B88A  51A3               	movf	(_config+2)& (0+255),w,b
 46228  00B88C  197A               	xorwf	(_os+9)& (0+255),w,b	;volatile
 46229  00B88E  E10C               	bnz	i2l18531
 46230  00B890  51A4               	movf	(_config+3)& (0+255),w,b
 46231  00B892  197B               	xorwf	(_os+10)& (0+255),w,b	;volatile
 46232  00B894  A4D8               	btfss	status,2,c
 46233  00B896  D008               	goto	i2l2481
 46234                           
 46235                           ; BSR set to: 1
 46236                           ;motor.c: 412: os.current_position_in_steps = 0;
 46237  00B898  0E00               	movlw	0
 46238  00B89A  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 46239  00B89C  0E00               	movlw	0
 46240  00B89E  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 46241  00B8A0  0E00               	movlw	0
 46242  00B8A2  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 46243  00B8A4  0E00               	movlw	0
 46244  00B8A6  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 46245  00B8A8                     i2l2481:
 46246  00B8A8                     i2l18531:
 46247                           
 46248                           ; BSR set to: 1
 46249                           ;motor.c: 413: if(os.current_position_in_steps==0xFFFFFFFF)
 46250  00B8A8  2978               	incf	(_os+7)& (0+255),w,b	;volatile
 46251  00B8AA  E113               	bnz	i2l2482
 46252  00B8AC  2979               	incf	(_os+8)& (0+255),w,b	;volatile
 46253  00B8AE  E111               	bnz	i2l2482
 46254  00B8B0  297A               	incf	(_os+9)& (0+255),w,b	;volatile
 46255  00B8B2  E10F               	bnz	i2l2482
 46256  00B8B4  297B               	incf	(_os+10)& (0+255),w,b	;volatile
 46257  00B8B6  A4D8               	btfss	status,2,c
 46258  00B8B8  D00C               	goto	i2l2482
 46259                           
 46260                           ; BSR set to: 1
 46261                           ;motor.c: 414: os.current_position_in_steps = (config.full_circle_in_steps-1);
 46262  00B8BA  0EFF               	movlw	255
 46263  00B8BC  25A1               	addwf	_config& (0+255),w,b
 46264  00B8BE  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 46265  00B8C0  0EFF               	movlw	255
 46266  00B8C2  21A2               	addwfc	(_config+1)& (0+255),w,b
 46267  00B8C4  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 46268  00B8C6  0EFF               	movlw	255
 46269  00B8C8  21A3               	addwfc	(_config+2)& (0+255),w,b
 46270  00B8CA  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 46271  00B8CC  0EFF               	movlw	255
 46272  00B8CE  21A4               	addwfc	(_config+3)& (0+255),w,b
 46273  00B8D0  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 46274  00B8D2                     i2l2482:
 46275                           
 46276                           ; BSR set to: 1
 46277                           ;motor.c: 417: if(motor_current_stepcount==motor_next_speed_check)
 46278  00B8D2  0102               	movlb	2	; () banked
 46279  00B8D4  5126               	movf	_motor_next_speed_check& (0+255),w,b	;volatile
 46280  00B8D6  1858               	xorwf	_motor_current_stepcount,w,c	;volatile
 46281  00B8D8  E109               	bnz	i2u1853_41
 46282  00B8DA  5127               	movf	(_motor_next_speed_check+1)& (0+255),w,b	;volatile
 46283  00B8DC  1859               	xorwf	_motor_current_stepcount+1,w,c	;volatile
 46284  00B8DE  E106               	bnz	i2u1853_41
 46285  00B8E0  5128               	movf	(_motor_next_speed_check+2)& (0+255),w,b	;volatile
 46286  00B8E2  185A               	xorwf	_motor_current_stepcount+2,w,c	;volatile
 46287  00B8E4  E103               	bnz	i2u1853_41
 46288  00B8E6  5129               	movf	(_motor_next_speed_check+3)& (0+255),w,b	;volatile
 46289  00B8E8  185B               	xorwf	_motor_current_stepcount+3,w,c	;volatile
 46290  00B8EA  A4D8               	btfss	status,2,c
 46291  00B8EC                     i2u1853_41:
 46292  00B8EC  D217               	goto	i2l2495
 46293                           
 46294                           ; BSR set to: 2
 46295                           ;motor.c: 418: {;motor.c: 420: steps_remaining = motor_final_stepcount - motor_current_s
      +                          tepcount;
 46296  00B8EE  C058  F02C         	movff	_motor_current_stepcount,??_motor_isr	;volatile
 46297  00B8F2  C059  F02D         	movff	_motor_current_stepcount+1,??_motor_isr+1	;volatile
 46298  00B8F6  C05A  F02E         	movff	_motor_current_stepcount+2,??_motor_isr+2	;volatile
 46299  00B8FA  C05B  F02F         	movff	_motor_current_stepcount+3,??_motor_isr+3	;volatile
 46300  00B8FE  1E2C               	comf	??_motor_isr,f,c
 46301  00B900  1E2D               	comf	??_motor_isr+1,f,c
 46302  00B902  1E2E               	comf	??_motor_isr+2,f,c
 46303  00B904  1E2F               	comf	??_motor_isr+3,f,c
 46304  00B906  2A2C               	incf	??_motor_isr,f,c
 46305  00B908  0E00               	movlw	0
 46306  00B90A  222D               	addwfc	??_motor_isr+1,f,c
 46307  00B90C  222E               	addwfc	??_motor_isr+2,f,c
 46308  00B90E  222F               	addwfc	??_motor_isr+3,f,c
 46309  00B910  0101               	movlb	1	; () banked
 46310  00B912  5127               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 46311  00B914  242C               	addwf	??_motor_isr,w,c
 46312  00B916  6E40               	movwf	motor_isr@steps_remaining,c
 46313  00B918  5128               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 46314  00B91A  202D               	addwfc	??_motor_isr+1,w,c
 46315  00B91C  6E41               	movwf	motor_isr@steps_remaining+1,c
 46316  00B91E  5129               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 46317  00B920  202E               	addwfc	??_motor_isr+2,w,c
 46318  00B922  6E42               	movwf	motor_isr@steps_remaining+2,c
 46319  00B924  512A               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 46320  00B926  202F               	addwfc	??_motor_isr+3,w,c
 46321  00B928  6E43               	movwf	motor_isr@steps_remaining+3,c
 46322                           
 46323                           ; BSR set to: 1
 46324                           ;motor.c: 421: steps_until_standstill = motor_steps_lookup[motor_current_speed];
 46325  00B92A  90D8               	bcf	status,0,c
 46326  00B92C  0100               	movlb	0	; () banked
 46327  00B92E  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 46328  00B930  6EF6               	movwf	tblptrl,c
 46329  00B932  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46330  00B934  6EF7               	movwf	tblptrh,c
 46331  00B936  0E61               	movlw	low _motor_steps_lookup
 46332  00B938  26F6               	addwf	tblptrl,f,c
 46333  00B93A  0E94               	movlw	high _motor_steps_lookup
 46334  00B93C  22F7               	addwfc	tblptrh,f,c
 46335  00B93E                     	if	1	;There are 3 active tblptr bytes
 46336  00B93E  6AF8               	clrf	tblptru,c
 46337  00B940  0E00               	movlw	low (__mediumconst shr (0+16))
 46338  00B942  22F8               	addwfc	tblptru,f,c
 46339  00B944                     	endif
 46340  00B944  0009               	tblrd		*+
 46341  00B946  CFF5 F03C          	movff	tablat,motor_isr@steps_until_standstill
 46342  00B94A  000A               	tblrd		*-
 46343  00B94C  CFF5 F03D          	movff	tablat,motor_isr@steps_until_standstill+1
 46344                           
 46345                           ; BSR set to: 0
 46346                           ;motor.c: 422: steps_until_standstill_if_accelerate = motor_steps_lookup[motor_current_s
      +                          peed+2];
 46347  00B950  C0FE  F02C         	movff	_motor_current_speed,??_motor_isr	;volatile
 46348  00B954  C0FF  F02D         	movff	_motor_current_speed+1,??_motor_isr+1	;volatile
 46349  00B958  90D8               	bcf	status,0,c
 46350  00B95A  362C               	rlcf	??_motor_isr,f,c
 46351  00B95C  362D               	rlcf	??_motor_isr+1,f,c
 46352  00B95E  0E04               	movlw	4
 46353  00B960  262C               	addwf	??_motor_isr,f,c
 46354  00B962  0E00               	movlw	0
 46355  00B964  222D               	addwfc	??_motor_isr+1,f,c
 46356  00B966  0E61               	movlw	low _motor_steps_lookup
 46357  00B968  242C               	addwf	??_motor_isr,w,c
 46358  00B96A  6EF6               	movwf	tblptrl,c
 46359  00B96C  0E94               	movlw	high _motor_steps_lookup
 46360  00B96E  202D               	addwfc	??_motor_isr+1,w,c
 46361  00B970  6EF7               	movwf	tblptrh,c
 46362  00B972                     	if	1	;There are 3 active tblptr bytes
 46363  00B972  6AF8               	clrf	tblptru,c
 46364  00B974  0E00               	movlw	low (__mediumconst shr (0+16))
 46365  00B976  22F8               	addwfc	tblptru,f,c
 46366  00B978                     	endif
 46367  00B978  0009               	tblrd		*+
 46368  00B97A  CFF5 F03E          	movff	tablat,motor_isr@steps_until_standstill_if_accelerate
 46369  00B97E  000A               	tblrd		*-
 46370  00B980  CFF5 F03F          	movff	tablat,motor_isr@steps_until_standstill_if_accelerate+1
 46371                           
 46372                           ;motor.c: 424: if((motor_current_speed>motor_maximum_speed) || (steps_until_standstill>=
      +                          steps_remaining))
 46373  00B984  51FE               	movf	_motor_current_speed& (0+255),w,b	;volatile
 46374  00B986  0101               	movlb	1	; () banked
 46375  00B988  5D3F               	subwf	_motor_maximum_speed& (0+255),w,b
 46376  00B98A  0100               	movlb	0	; () banked
 46377  00B98C  51FF               	movf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46378  00B98E  0101               	movlb	1	; () banked
 46379  00B990  5940               	subwfb	(_motor_maximum_speed+1)& (0+255),w,b
 46380  00B992  A0D8               	btfss	status,0,c
 46381  00B994  D010               	goto	i2u1855_40
 46382                           
 46383                           ; BSR set to: 1
 46384  00B996  503C               	movf	motor_isr@steps_until_standstill,w,c
 46385  00B998  6E2C               	movwf	??_motor_isr& (0+255),c
 46386  00B99A  503D               	movf	motor_isr@steps_until_standstill+1,w,c
 46387  00B99C  6E2D               	movwf	(??_motor_isr+1)& (0+255),c
 46388  00B99E  6A2E               	clrf	(??_motor_isr+2)& (0+255),c
 46389  00B9A0  6A2F               	clrf	(??_motor_isr+3)& (0+255),c
 46390  00B9A2  5040               	movf	motor_isr@steps_remaining,w,c
 46391  00B9A4  5C2C               	subwf	??_motor_isr,w,c
 46392  00B9A6  5041               	movf	motor_isr@steps_remaining+1,w,c
 46393  00B9A8  582D               	subwfb	??_motor_isr+1,w,c
 46394  00B9AA  5042               	movf	motor_isr@steps_remaining+2,w,c
 46395  00B9AC  582E               	subwfb	??_motor_isr+2,w,c
 46396  00B9AE  5043               	movf	motor_isr@steps_remaining+3,w,c
 46397  00B9B0  582F               	subwfb	??_motor_isr+3,w,c
 46398  00B9B2  A0D8               	btfss	status,0,c
 46399  00B9B4  D0E3               	goto	i2l2484
 46400  00B9B6                     i2u1855_40:
 46401                           
 46402                           ; BSR set to: 1
 46403                           ;motor.c: 425: {;motor.c: 427: if(motor_current_speed>0)
 46404                           
 46405                           ; BSR set to: 1
 46406  00B9B6  0100               	movlb	0	; () banked
 46407  00B9B8  51FE               	movf	_motor_current_speed& (0+255),w,b	;volatile
 46408  00B9BA  11FF               	iorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46409  00B9BC  B4D8               	btfsc	status,2,c
 46410  00B9BE  D003               	goto	i2l2487
 46411                           
 46412                           ; BSR set to: 0
 46413                           ;motor.c: 428: {;motor.c: 429: --motor_current_speed;
 46414  00B9C0  07FE               	decf	_motor_current_speed& (0+255),f,b	;volatile
 46415  00B9C2  A0D8               	btfss	status,0,c
 46416  00B9C4  07FF               	decf	(_motor_current_speed+1)& (0+255),f,b	;volatile
 46417  00B9C6                     i2l2487:
 46418                           
 46419                           ; BSR set to: 0
 46420                           ;motor.c: 430: };motor.c: 433: if((motor_mode==MOTOR_MODE_PWM) && (motor_postscaler_look
      +                          up[motor_current_speed]>0))
 46421                           
 46422                           ; BSR set to: 0
 46423  00B9C6  0101               	movlb	1	; () banked
 46424  00B9C8  0556               	decf	_motor_mode& (0+255),w,b
 46425  00B9CA  A4D8               	btfss	status,2,c
 46426  00B9CC  D026               	goto	i2l2488
 46427                           
 46428                           ; BSR set to: 1
 46429  00B9CE  0E2F               	movlw	low _motor_postscaler_lookup
 46430  00B9D0  0100               	movlb	0	; () banked
 46431  00B9D2  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 46432  00B9D4  6EF6               	movwf	tblptrl,c
 46433  00B9D6  0E98               	movlw	high _motor_postscaler_lookup
 46434  00B9D8  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46435  00B9DA  6EF7               	movwf	tblptrh,c
 46436  00B9DC                     	if	1	;There are 3 active tblptr bytes
 46437  00B9DC  6AF8               	clrf	tblptru,c
 46438  00B9DE  0E00               	movlw	low (__mediumconst shr (0+16))
 46439  00B9E0  22F8               	addwfc	tblptru,f,c
 46440  00B9E2                     	endif
 46441  00B9E2  0008               	tblrd		*
 46442  00B9E4  50F5               	movf	tablat,w,c
 46443  00B9E6  0900               	iorlw	0
 46444  00B9E8  B4D8               	btfsc	status,2,c
 46445  00B9EA  D017               	goto	i2l2488
 46446                           
 46447                           ; BSR set to: 0
 46448                           ;motor.c: 434: {;motor.c: 436: motor_mode = MOTOR_MODE_MANUAL;
 46449  00B9EC  0E00               	movlw	0
 46450  00B9EE  0101               	movlb	1	; () banked
 46451  00B9F0  6F56               	movwf	_motor_mode& (0+255),b
 46452                           
 46453                           ; BSR set to: 1
 46454                           ;motor.c: 439: LATBbits.LB1 = 1;
 46455  00B9F2  828A               	bsf	3978,1,c	;volatile
 46456                           
 46457                           ;motor.c: 440: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 46458  00B9F4  0E55               	movlw	85
 46459  00B9F6  6EA7               	movwf	4007,c	;volsfr
 46460  00B9F8  0EAA               	movlw	170
 46461  00B9FA  6EA7               	movwf	4007,c	;volsfr
 46462                           
 46463                           ; BSR set to: 1
 46464  00B9FC  010E               	movlb	14	; () banked
 46465  00B9FE  91BF               	bcf	191,0,b	;volatile
 46466                           
 46467                           ;motor.c: 441: RPOR4 = 0;
 46468  00BA00  0E00               	movlw	0
 46469  00BA02  6FC4               	movwf	196,b	;volatile
 46470                           
 46471                           ;motor.c: 442: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 46472  00BA04  0E55               	movlw	85
 46473  00BA06  6EA7               	movwf	4007,c	;volsfr
 46474  00BA08  0EAA               	movlw	170
 46475  00BA0A  6EA7               	movwf	4007,c	;volsfr
 46476                           
 46477                           ; BSR set to: 14
 46478  00BA0C  81BF               	bsf	191,0,b	;volatile
 46479                           
 46480                           ;motor.c: 445: TMR2 = 0;
 46481  00BA0E  0E00               	movlw	0
 46482  00BA10  6ECC               	movwf	4044,c	;volatile
 46483                           
 46484                           ; BSR set to: 14
 46485                           ;motor.c: 448: CCP1CONbits.CCP1M = 0b0000;
 46486  00BA12  90BA               	bcf	4026,0,c	;volatile
 46487  00BA14  92BA               	bcf	4026,1,c	;volatile
 46488  00BA16  94BA               	bcf	4026,2,c	;volatile
 46489  00BA18  96BA               	bcf	4026,3,c	;volatile
 46490  00BA1A                     i2l2488:
 46491                           
 46492                           ;motor.c: 449: };motor.c: 453: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_s
      +                          peed];
 46493                           
 46494                           ; BSR set to: 14
 46495  00BA1A  0EFD               	movlw	low _motor_prescaler_lookup
 46496  00BA1C  0100               	movlb	0	; () banked
 46497  00BA1E  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 46498  00BA20  6EF6               	movwf	tblptrl,c
 46499  00BA22  0E9B               	movlw	high _motor_prescaler_lookup
 46500  00BA24  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46501  00BA26  6EF7               	movwf	tblptrh,c
 46502  00BA28                     	if	1	;There are 3 active tblptr bytes
 46503  00BA28  6AF8               	clrf	tblptru,c
 46504  00BA2A  0E00               	movlw	low (__mediumconst shr (0+16))
 46505  00BA2C  22F8               	addwfc	tblptru,f,c
 46506  00BA2E                     	endif
 46507  00BA2E  0008               	tblrd		*
 46508  00BA30  CFF5 F02C          	movff	tablat,??_motor_isr
 46509  00BA34  50CA               	movf	4042,w,c	;volatile
 46510  00BA36  182C               	xorwf	??_motor_isr,w,c
 46511  00BA38  0BFC               	andlw	-4
 46512  00BA3A  182C               	xorwf	??_motor_isr,w,c
 46513  00BA3C  6ECA               	movwf	4042,c	;volatile
 46514                           
 46515                           ; BSR set to: 0
 46516                           ;motor.c: 455: PR2 = motor_period_lookup[motor_current_speed];
 46517  00BA3E  0E16               	movlw	low _motor_period_lookup
 46518  00BA40  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 46519  00BA42  6EF6               	movwf	tblptrl,c
 46520  00BA44  0E9A               	movlw	high _motor_period_lookup
 46521  00BA46  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46522  00BA48  6EF7               	movwf	tblptrh,c
 46523  00BA4A                     	if	1	;There are 3 active tblptr bytes
 46524  00BA4A  6AF8               	clrf	tblptru,c
 46525  00BA4C  0E00               	movlw	low (__mediumconst shr (0+16))
 46526  00BA4E  22F8               	addwfc	tblptru,f,c
 46527  00BA50                     	endif
 46528  00BA50  0008               	tblrd		*
 46529  00BA52  CFF5 FFCB          	movff	tablat,4043	;volatile
 46530                           
 46531                           ; BSR set to: 0
 46532                           ;motor.c: 457: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 46533  00BA56  0E2F               	movlw	low _motor_postscaler_lookup
 46534  00BA58  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 46535  00BA5A  6EF6               	movwf	tblptrl,c
 46536  00BA5C  0E98               	movlw	high _motor_postscaler_lookup
 46537  00BA5E  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46538  00BA60  6EF7               	movwf	tblptrh,c
 46539  00BA62                     	if	1	;There are 3 active tblptr bytes
 46540  00BA62  6AF8               	clrf	tblptru,c
 46541  00BA64  0E00               	movlw	low (__mediumconst shr (0+16))
 46542  00BA66  22F8               	addwfc	tblptru,f,c
 46543  00BA68                     	endif
 46544  00BA68  0008               	tblrd		*
 46545  00BA6A  CFF5 F02C          	movff	tablat,??_motor_isr
 46546  00BA6E  462C               	rlncf	??_motor_isr,f,c
 46547  00BA70  462C               	rlncf	??_motor_isr,f,c
 46548  00BA72  462C               	rlncf	??_motor_isr,f,c
 46549  00BA74  50CA               	movf	4042,w,c	;volatile
 46550  00BA76  182C               	xorwf	??_motor_isr,w,c
 46551  00BA78  0B87               	andlw	-121
 46552  00BA7A  182C               	xorwf	??_motor_isr,w,c
 46553  00BA7C  6ECA               	movwf	4042,c	;volatile
 46554                           
 46555                           ; BSR set to: 0
 46556                           ;motor.c: 459: CCPR1L = PR2>>1;
 46557  00BA7E  90D8               	bcf	status,0,c
 46558  00BA80  30CB               	rrcf	4043,w,c	;volatile
 46559  00BA82  6EBB               	movwf	4027,c	;volatile
 46560                           
 46561                           ; BSR set to: 0
 46562                           ;motor.c: 462: if(motor_current_speed>0)
 46563  00BA84  51FE               	movf	_motor_current_speed& (0+255),w,b	;volatile
 46564  00BA86  11FF               	iorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46565  00BA88  B4D8               	btfsc	status,2,c
 46566  00BA8A  D058               	goto	i2l2489
 46567                           
 46568                           ; BSR set to: 0
 46569                           ;motor.c: 463: {;motor.c: 464: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed] - motor_steps_lookup[motor_current_speed-1];
 46570  00BA8C  0EFE               	movlw	254
 46571  00BA8E  6E2C               	movwf	??_motor_isr& (0+255),c
 46572  00BA90  0EFF               	movlw	255
 46573  00BA92  6E2D               	movwf	(??_motor_isr+1)& (0+255),c
 46574  00BA94  C0FE  F02E         	movff	_motor_current_speed,??_motor_isr+2	;volatile
 46575  00BA98  C0FF  F02F         	movff	_motor_current_speed+1,??_motor_isr+3	;volatile
 46576  00BA9C  90D8               	bcf	status,0,c
 46577  00BA9E  362E               	rlcf	??_motor_isr+2,f,c
 46578  00BAA0  362F               	rlcf	??_motor_isr+3,f,c
 46579  00BAA2  502C               	movf	??_motor_isr,w,c
 46580  00BAA4  262E               	addwf	??_motor_isr+2,f,c
 46581  00BAA6  502D               	movf	??_motor_isr+1,w,c
 46582  00BAA8  222F               	addwfc	??_motor_isr+3,f,c
 46583  00BAAA  0E61               	movlw	low _motor_steps_lookup
 46584  00BAAC  242E               	addwf	??_motor_isr+2,w,c
 46585  00BAAE  6EF6               	movwf	tblptrl,c
 46586  00BAB0  0E94               	movlw	high _motor_steps_lookup
 46587  00BAB2  202F               	addwfc	??_motor_isr+3,w,c
 46588  00BAB4  6EF7               	movwf	tblptrh,c
 46589  00BAB6                     	if	1	;There are 3 active tblptr bytes
 46590  00BAB6  6AF8               	clrf	tblptru,c
 46591  00BAB8  0E00               	movlw	low (__mediumconst shr (0+16))
 46592  00BABA  22F8               	addwfc	tblptru,f,c
 46593  00BABC                     	endif
 46594  00BABC  0009               	tblrd		*+
 46595  00BABE  CFF5 F030          	movff	tablat,??_motor_isr+4
 46596  00BAC2  0009               	tblrd		*+
 46597  00BAC4  CFF5 F031          	movff	tablat,??_motor_isr+5
 46598  00BAC8  5030               	movf	??_motor_isr+4,w,c
 46599  00BACA  6E32               	movwf	(??_motor_isr+6)& (0+255),c
 46600  00BACC  5031               	movf	??_motor_isr+5,w,c
 46601  00BACE  6E33               	movwf	(??_motor_isr+7)& (0+255),c
 46602  00BAD0  6A34               	clrf	(??_motor_isr+8)& (0+255),c
 46603  00BAD2  6A35               	clrf	(??_motor_isr+9)& (0+255),c
 46604  00BAD4  1E32               	comf	??_motor_isr+6,f,c
 46605  00BAD6  1E33               	comf	??_motor_isr+7,f,c
 46606  00BAD8  1E34               	comf	??_motor_isr+8,f,c
 46607  00BADA  1E35               	comf	??_motor_isr+9,f,c
 46608  00BADC  2A32               	incf	??_motor_isr+6,f,c
 46609  00BADE  0E00               	movlw	0
 46610  00BAE0  2233               	addwfc	??_motor_isr+7,f,c
 46611  00BAE2  2234               	addwfc	??_motor_isr+8,f,c
 46612  00BAE4  2235               	addwfc	??_motor_isr+9,f,c
 46613  00BAE6  90D8               	bcf	status,0,c
 46614  00BAE8  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 46615  00BAEA  6EF6               	movwf	tblptrl,c
 46616  00BAEC  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46617  00BAEE  6EF7               	movwf	tblptrh,c
 46618  00BAF0  0E61               	movlw	low _motor_steps_lookup
 46619  00BAF2  26F6               	addwf	tblptrl,f,c
 46620  00BAF4  0E94               	movlw	high _motor_steps_lookup
 46621  00BAF6  22F7               	addwfc	tblptrh,f,c
 46622  00BAF8                     	if	1	;There are 3 active tblptr bytes
 46623  00BAF8  6AF8               	clrf	tblptru,c
 46624  00BAFA  0E00               	movlw	low (__mediumconst shr (0+16))
 46625  00BAFC  22F8               	addwfc	tblptru,f,c
 46626  00BAFE                     	endif
 46627  00BAFE  0009               	tblrd		*+
 46628  00BB00  CFF5 F036          	movff	tablat,??_motor_isr+10
 46629  00BB04  0009               	tblrd		*+
 46630  00BB06  CFF5 F037          	movff	tablat,??_motor_isr+11
 46631  00BB0A  5036               	movf	??_motor_isr+10,w,c
 46632  00BB0C  2432               	addwf	??_motor_isr+6,w,c
 46633  00BB0E  6E38               	movwf	(??_motor_isr+12)& (0+255),c
 46634  00BB10  5037               	movf	??_motor_isr+11,w,c
 46635  00BB12  2033               	addwfc	??_motor_isr+7,w,c
 46636  00BB14  6E39               	movwf	(??_motor_isr+13)& (0+255),c
 46637  00BB16  0E00               	movlw	0
 46638  00BB18  2034               	addwfc	??_motor_isr+8,w,c
 46639  00BB1A  6E3A               	movwf	(??_motor_isr+14)& (0+255),c
 46640  00BB1C  0E00               	movlw	0
 46641  00BB1E  2035               	addwfc	??_motor_isr+9,w,c
 46642  00BB20  6E3B               	movwf	(??_motor_isr+15)& (0+255),c
 46643  00BB22  5058               	movf	_motor_current_stepcount,w,c	;volatile
 46644  00BB24  2438               	addwf	??_motor_isr+12,w,c
 46645  00BB26  0102               	movlb	2	; () banked
 46646  00BB28  6F26               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 46647  00BB2A  5059               	movf	_motor_current_stepcount+1,w,c	;volatile
 46648  00BB2C  2039               	addwfc	??_motor_isr+13,w,c
 46649  00BB2E  6F27               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 46650  00BB30  505A               	movf	_motor_current_stepcount+2,w,c	;volatile
 46651  00BB32  203A               	addwfc	??_motor_isr+14,w,c
 46652  00BB34  6F28               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 46653  00BB36  505B               	movf	_motor_current_stepcount+3,w,c	;volatile
 46654  00BB38  203B               	addwfc	??_motor_isr+15,w,c
 46655  00BB3A  D0EF               	goto	L75
 46656  00BB3C                     i2l2489:
 46657                           
 46658                           ;motor.c: 466: else;motor.c: 467: {;motor.c: 468: motor_next_speed_check = motor_current
      +                          _stepcount + motor_steps_lookup[motor_current_speed];
 46659                           
 46660                           ; BSR set to: 2
 46661  00BB3C  90D8               	bcf	status,0,c
 46662  00BB3E  0100               	movlb	0	; () banked
 46663  00BB40  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 46664  00BB42  6EF6               	movwf	tblptrl,c
 46665  00BB44  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46666  00BB46  6EF7               	movwf	tblptrh,c
 46667  00BB48  0E61               	movlw	low _motor_steps_lookup
 46668  00BB4A  26F6               	addwf	tblptrl,f,c
 46669  00BB4C  0E94               	movlw	high _motor_steps_lookup
 46670  00BB4E  22F7               	addwfc	tblptrh,f,c
 46671  00BB50                     	if	1	;There are 3 active tblptr bytes
 46672  00BB50  6AF8               	clrf	tblptru,c
 46673  00BB52  0E00               	movlw	low (__mediumconst shr (0+16))
 46674  00BB54  22F8               	addwfc	tblptru,f,c
 46675  00BB56                     	endif
 46676  00BB56  0009               	tblrd		*+
 46677  00BB58  CFF5 F02C          	movff	tablat,??_motor_isr
 46678  00BB5C  0009               	tblrd		*+
 46679  00BB5E  CFF5 F02D          	movff	tablat,??_motor_isr+1
 46680  00BB62  502C               	movf	??_motor_isr,w,c
 46681  00BB64  2458               	addwf	_motor_current_stepcount,w,c	;volatile
 46682  00BB66  0102               	movlb	2	; () banked
 46683  00BB68  6F26               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 46684  00BB6A  502D               	movf	??_motor_isr+1,w,c
 46685  00BB6C  2059               	addwfc	_motor_current_stepcount+1,w,c	;volatile
 46686  00BB6E  6F27               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 46687  00BB70  0E00               	movlw	0
 46688  00BB72  205A               	addwfc	_motor_current_stepcount+2,w,c	;volatile
 46689  00BB74  6F28               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 46690  00BB76  0E00               	movlw	0
 46691  00BB78  205B               	addwfc	_motor_current_stepcount+3,w,c	;volatile
 46692  00BB7A  D0CF               	goto	L75
 46693  00BB7C                     i2l2484:
 46694                           
 46695                           ;motor.c: 471: else if((motor_current_speed==motor_maximum_speed) || (steps_until_stands
      +                          till_if_accelerate>=steps_remaining))
 46696                           
 46697                           ; BSR set to: 2
 46698  00BB7C  0101               	movlb	1	; () banked
 46699  00BB7E  513F               	movf	_motor_maximum_speed& (0+255),w,b
 46700  00BB80  0100               	movlb	0	; () banked
 46701  00BB82  19FE               	xorwf	_motor_current_speed& (0+255),w,b	;volatile
 46702  00BB84  E106               	bnz	i2u1860_40
 46703  00BB86  0101               	movlb	1	; () banked
 46704  00BB88  5140               	movf	(_motor_maximum_speed+1)& (0+255),w,b
 46705  00BB8A  0100               	movlb	0	; () banked
 46706  00BB8C  19FF               	xorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46707  00BB8E  B4D8               	btfsc	status,2,c
 46708  00BB90  D010               	goto	i2u1861_40
 46709  00BB92                     i2u1860_40:
 46710                           
 46711                           ; BSR set to: 0
 46712  00BB92  503E               	movf	motor_isr@steps_until_standstill_if_accelerate,w,c
 46713  00BB94  6E2C               	movwf	??_motor_isr& (0+255),c
 46714  00BB96  503F               	movf	motor_isr@steps_until_standstill_if_accelerate+1,w,c
 46715  00BB98  6E2D               	movwf	(??_motor_isr+1)& (0+255),c
 46716  00BB9A  6A2E               	clrf	(??_motor_isr+2)& (0+255),c
 46717  00BB9C  6A2F               	clrf	(??_motor_isr+3)& (0+255),c
 46718  00BB9E  5040               	movf	motor_isr@steps_remaining,w,c
 46719  00BBA0  5C2C               	subwf	??_motor_isr,w,c
 46720  00BBA2  5041               	movf	motor_isr@steps_remaining+1,w,c
 46721  00BBA4  582D               	subwfb	??_motor_isr+1,w,c
 46722  00BBA6  5042               	movf	motor_isr@steps_remaining+2,w,c
 46723  00BBA8  582E               	subwfb	??_motor_isr+2,w,c
 46724  00BBAA  5043               	movf	motor_isr@steps_remaining+3,w,c
 46725  00BBAC  582F               	subwfb	??_motor_isr+3,w,c
 46726  00BBAE  A0D8               	btfss	status,0,c
 46727  00BBB0  D002               	goto	i2l2492
 46728  00BBB2                     i2u1861_40:
 46729                           
 46730                           ; BSR set to: 0
 46731                           ;motor.c: 472: {;motor.c: 475: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed+1] - motor_steps_lookup[motor_current_speed];
 46732                           
 46733                           ; BSR set to: 0
 46734  00BBB2  90D8               	bcf	status,0,c
 46735  00BBB4  D060               	goto	L74
 46736  00BBB6                     i2l2492:
 46737                           
 46738                           ;motor.c: 477: else;motor.c: 478: {;motor.c: 480: ++motor_current_speed;
 46739                           
 46740                           ; BSR set to: 2
 46741  00BBB6  0100               	movlb	0	; () banked
 46742  00BBB8  4BFE               	infsnz	_motor_current_speed& (0+255),f,b	;volatile
 46743  00BBBA  2BFF               	incf	(_motor_current_speed+1)& (0+255),f,b	;volatile
 46744                           
 46745                           ; BSR set to: 0
 46746                           ;motor.c: 484: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_speed];
 46747  00BBBC  0EFD               	movlw	low _motor_prescaler_lookup
 46748  00BBBE  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 46749  00BBC0  6EF6               	movwf	tblptrl,c
 46750  00BBC2  0E9B               	movlw	high _motor_prescaler_lookup
 46751  00BBC4  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46752  00BBC6  6EF7               	movwf	tblptrh,c
 46753  00BBC8                     	if	1	;There are 3 active tblptr bytes
 46754  00BBC8  6AF8               	clrf	tblptru,c
 46755  00BBCA  0E00               	movlw	low (__mediumconst shr (0+16))
 46756  00BBCC  22F8               	addwfc	tblptru,f,c
 46757  00BBCE                     	endif
 46758  00BBCE  0008               	tblrd		*
 46759  00BBD0  CFF5 F02C          	movff	tablat,??_motor_isr
 46760  00BBD4  50CA               	movf	4042,w,c	;volatile
 46761  00BBD6  182C               	xorwf	??_motor_isr,w,c
 46762  00BBD8  0BFC               	andlw	-4
 46763  00BBDA  182C               	xorwf	??_motor_isr,w,c
 46764  00BBDC  6ECA               	movwf	4042,c	;volatile
 46765                           
 46766                           ; BSR set to: 0
 46767                           ;motor.c: 486: PR2 = motor_period_lookup[motor_current_speed];
 46768  00BBDE  0E16               	movlw	low _motor_period_lookup
 46769  00BBE0  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 46770  00BBE2  6EF6               	movwf	tblptrl,c
 46771  00BBE4  0E9A               	movlw	high _motor_period_lookup
 46772  00BBE6  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46773  00BBE8  6EF7               	movwf	tblptrh,c
 46774  00BBEA                     	if	1	;There are 3 active tblptr bytes
 46775  00BBEA  6AF8               	clrf	tblptru,c
 46776  00BBEC  0E00               	movlw	low (__mediumconst shr (0+16))
 46777  00BBEE  22F8               	addwfc	tblptru,f,c
 46778  00BBF0                     	endif
 46779  00BBF0  0008               	tblrd		*
 46780  00BBF2  CFF5 FFCB          	movff	tablat,4043	;volatile
 46781                           
 46782                           ; BSR set to: 0
 46783                           ;motor.c: 488: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 46784  00BBF6  0E2F               	movlw	low _motor_postscaler_lookup
 46785  00BBF8  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 46786  00BBFA  6EF6               	movwf	tblptrl,c
 46787  00BBFC  0E98               	movlw	high _motor_postscaler_lookup
 46788  00BBFE  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46789  00BC00  6EF7               	movwf	tblptrh,c
 46790  00BC02                     	if	1	;There are 3 active tblptr bytes
 46791  00BC02  6AF8               	clrf	tblptru,c
 46792  00BC04  0E00               	movlw	low (__mediumconst shr (0+16))
 46793  00BC06  22F8               	addwfc	tblptru,f,c
 46794  00BC08                     	endif
 46795  00BC08  0008               	tblrd		*
 46796  00BC0A  CFF5 F02C          	movff	tablat,??_motor_isr
 46797  00BC0E  462C               	rlncf	??_motor_isr,f,c
 46798  00BC10  462C               	rlncf	??_motor_isr,f,c
 46799  00BC12  462C               	rlncf	??_motor_isr,f,c
 46800  00BC14  50CA               	movf	4042,w,c	;volatile
 46801  00BC16  182C               	xorwf	??_motor_isr,w,c
 46802  00BC18  0B87               	andlw	-121
 46803  00BC1A  182C               	xorwf	??_motor_isr,w,c
 46804  00BC1C  6ECA               	movwf	4042,c	;volatile
 46805                           
 46806                           ; BSR set to: 0
 46807                           ;motor.c: 490: CCPR1L = PR2>>1;
 46808  00BC1E  90D8               	bcf	status,0,c
 46809  00BC20  30CB               	rrcf	4043,w,c	;volatile
 46810  00BC22  6EBB               	movwf	4027,c	;volatile
 46811                           
 46812                           ; BSR set to: 0
 46813                           ;motor.c: 492: if((motor_mode==MOTOR_MODE_MANUAL) && (motor_postscaler_lookup[motor_curr
      +                          ent_speed]==0))
 46814  00BC24  0101               	movlb	1	; () banked
 46815  00BC26  5156               	movf	_motor_mode& (0+255),w,b
 46816  00BC28  A4D8               	btfss	status,2,c
 46817  00BC2A  D023               	goto	i2l2496
 46818                           
 46819                           ; BSR set to: 1
 46820  00BC2C  0E2F               	movlw	low _motor_postscaler_lookup
 46821  00BC2E  0100               	movlb	0	; () banked
 46822  00BC30  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 46823  00BC32  6EF6               	movwf	tblptrl,c
 46824  00BC34  0E98               	movlw	high _motor_postscaler_lookup
 46825  00BC36  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46826  00BC38  6EF7               	movwf	tblptrh,c
 46827  00BC3A                     	if	1	;There are 3 active tblptr bytes
 46828  00BC3A  6AF8               	clrf	tblptru,c
 46829  00BC3C  0E00               	movlw	low (__mediumconst shr (0+16))
 46830  00BC3E  22F8               	addwfc	tblptru,f,c
 46831  00BC40                     	endif
 46832  00BC40  0008               	tblrd		*
 46833  00BC42  50F5               	movf	tablat,w,c
 46834  00BC44  0900               	iorlw	0
 46835  00BC46  A4D8               	btfss	status,2,c
 46836  00BC48  D014               	goto	i2l2496
 46837                           
 46838                           ; BSR set to: 0
 46839                           ;motor.c: 493: {;motor.c: 495: motor_mode = MOTOR_MODE_PWM;
 46840  00BC4A  0E01               	movlw	1
 46841  00BC4C  0101               	movlb	1	; () banked
 46842  00BC4E  6F56               	movwf	_motor_mode& (0+255),b
 46843                           
 46844                           ;motor.c: 498: CCP1CONbits.CCP1M = 0b1100;
 46845  00BC50  50BA               	movf	4026,w,c	;volatile
 46846  00BC52  0BF0               	andlw	-16
 46847  00BC54  090C               	iorlw	12
 46848  00BC56  6EBA               	movwf	4026,c	;volatile
 46849                           
 46850                           ;motor.c: 501: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 46851  00BC58  0E55               	movlw	85
 46852  00BC5A  6EA7               	movwf	4007,c	;volsfr
 46853  00BC5C  0EAA               	movlw	170
 46854  00BC5E  6EA7               	movwf	4007,c	;volsfr
 46855                           
 46856                           ; BSR set to: 1
 46857  00BC60  010E               	movlb	14	; () banked
 46858  00BC62  91BF               	bcf	191,0,b	;volatile
 46859                           
 46860                           ;motor.c: 502: RPOR4 = 14;
 46861  00BC64  0E0E               	movlw	14
 46862  00BC66  6FC4               	movwf	196,b	;volatile
 46863                           
 46864                           ;motor.c: 503: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 46865  00BC68  0E55               	movlw	85
 46866  00BC6A  6EA7               	movwf	4007,c	;volsfr
 46867  00BC6C  0EAA               	movlw	170
 46868  00BC6E  6EA7               	movwf	4007,c	;volsfr
 46869                           
 46870                           ; BSR set to: 14
 46871  00BC70  81BF               	bsf	191,0,b	;volatile
 46872  00BC72                     i2l2496:
 46873                           
 46874                           ;motor.c: 504: };motor.c: 507: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed+1] - motor_steps_lookup[motor_current_speed];
 46875                           
 46876                           ; BSR set to: 14
 46877  00BC72  90D8               	bcf	status,0,c
 46878  00BC74  0100               	movlb	0	; () banked
 46879  00BC76                     L74:
 46880  00BC76  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 46881  00BC78  6EF6               	movwf	tblptrl,c
 46882  00BC7A  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46883  00BC7C  6EF7               	movwf	tblptrh,c
 46884  00BC7E  0E61               	movlw	low _motor_steps_lookup
 46885  00BC80  26F6               	addwf	tblptrl,f,c
 46886  00BC82  0E94               	movlw	high _motor_steps_lookup
 46887  00BC84  22F7               	addwfc	tblptrh,f,c
 46888  00BC86                     	if	1	;There are 3 active tblptr bytes
 46889  00BC86  6AF8               	clrf	tblptru,c
 46890  00BC88  0E00               	movlw	low (__mediumconst shr (0+16))
 46891  00BC8A  22F8               	addwfc	tblptru,f,c
 46892  00BC8C                     	endif
 46893  00BC8C  0009               	tblrd		*+
 46894  00BC8E  CFF5 F02C          	movff	tablat,??_motor_isr
 46895  00BC92  0009               	tblrd		*+
 46896  00BC94  CFF5 F02D          	movff	tablat,??_motor_isr+1
 46897  00BC98  502C               	movf	??_motor_isr,w,c
 46898  00BC9A  6E2E               	movwf	(??_motor_isr+2)& (0+255),c
 46899  00BC9C  502D               	movf	??_motor_isr+1,w,c
 46900  00BC9E  6E2F               	movwf	(??_motor_isr+3)& (0+255),c
 46901  00BCA0  6A30               	clrf	(??_motor_isr+4)& (0+255),c
 46902  00BCA2  6A31               	clrf	(??_motor_isr+5)& (0+255),c
 46903  00BCA4  1E2E               	comf	??_motor_isr+2,f,c
 46904  00BCA6  1E2F               	comf	??_motor_isr+3,f,c
 46905  00BCA8  1E30               	comf	??_motor_isr+4,f,c
 46906  00BCAA  1E31               	comf	??_motor_isr+5,f,c
 46907  00BCAC  2A2E               	incf	??_motor_isr+2,f,c
 46908  00BCAE  0E00               	movlw	0
 46909  00BCB0  222F               	addwfc	??_motor_isr+3,f,c
 46910  00BCB2  2230               	addwfc	??_motor_isr+4,f,c
 46911  00BCB4  2231               	addwfc	??_motor_isr+5,f,c
 46912  00BCB6  C0FE  F032         	movff	_motor_current_speed,??_motor_isr+6	;volatile
 46913  00BCBA  C0FF  F033         	movff	_motor_current_speed+1,??_motor_isr+7	;volatile
 46914  00BCBE  90D8               	bcf	status,0,c
 46915  00BCC0  3632               	rlcf	??_motor_isr+6,f,c
 46916  00BCC2  3633               	rlcf	??_motor_isr+7,f,c
 46917  00BCC4  0E02               	movlw	2
 46918  00BCC6  2632               	addwf	??_motor_isr+6,f,c
 46919  00BCC8  0E00               	movlw	0
 46920  00BCCA  2233               	addwfc	??_motor_isr+7,f,c
 46921  00BCCC  0E61               	movlw	low _motor_steps_lookup
 46922  00BCCE  2432               	addwf	??_motor_isr+6,w,c
 46923  00BCD0  6EF6               	movwf	tblptrl,c
 46924  00BCD2  0E94               	movlw	high _motor_steps_lookup
 46925  00BCD4  2033               	addwfc	??_motor_isr+7,w,c
 46926  00BCD6  6EF7               	movwf	tblptrh,c
 46927  00BCD8                     	if	1	;There are 3 active tblptr bytes
 46928  00BCD8  6AF8               	clrf	tblptru,c
 46929  00BCDA  0E00               	movlw	low (__mediumconst shr (0+16))
 46930  00BCDC  22F8               	addwfc	tblptru,f,c
 46931  00BCDE                     	endif
 46932  00BCDE  0009               	tblrd		*+
 46933  00BCE0  CFF5 F034          	movff	tablat,??_motor_isr+8
 46934  00BCE4  0009               	tblrd		*+
 46935  00BCE6  CFF5 F035          	movff	tablat,??_motor_isr+9
 46936  00BCEA  5034               	movf	??_motor_isr+8,w,c
 46937  00BCEC  242E               	addwf	??_motor_isr+2,w,c
 46938  00BCEE  6E36               	movwf	(??_motor_isr+10)& (0+255),c
 46939  00BCF0  5035               	movf	??_motor_isr+9,w,c
 46940  00BCF2  202F               	addwfc	??_motor_isr+3,w,c
 46941  00BCF4  6E37               	movwf	(??_motor_isr+11)& (0+255),c
 46942  00BCF6  0E00               	movlw	0
 46943  00BCF8  2030               	addwfc	??_motor_isr+4,w,c
 46944  00BCFA  6E38               	movwf	(??_motor_isr+12)& (0+255),c
 46945  00BCFC  0E00               	movlw	0
 46946  00BCFE  2031               	addwfc	??_motor_isr+5,w,c
 46947  00BD00  6E39               	movwf	(??_motor_isr+13)& (0+255),c
 46948  00BD02  5058               	movf	_motor_current_stepcount,w,c	;volatile
 46949  00BD04  2436               	addwf	??_motor_isr+10,w,c
 46950  00BD06  0102               	movlb	2	; () banked
 46951  00BD08  6F26               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 46952  00BD0A  5059               	movf	_motor_current_stepcount+1,w,c	;volatile
 46953  00BD0C  2037               	addwfc	??_motor_isr+11,w,c
 46954  00BD0E  6F27               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 46955  00BD10  505A               	movf	_motor_current_stepcount+2,w,c	;volatile
 46956  00BD12  2038               	addwfc	??_motor_isr+12,w,c
 46957  00BD14  6F28               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 46958  00BD16  505B               	movf	_motor_current_stepcount+3,w,c	;volatile
 46959  00BD18  2039               	addwfc	??_motor_isr+13,w,c
 46960  00BD1A                     L75:
 46961  00BD1A  6F29               	movwf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 46962  00BD1C                     i2l2495:
 46963                           
 46964                           ; BSR set to: 2
 46965                           ;motor.c: 508: };motor.c: 509: };motor.c: 512: if(PIR1bits.TMR2IF)
 46966                           
 46967                           ; BSR set to: 2
 46968                           
 46969                           ; BSR set to: 2
 46970                           
 46971                           ; BSR set to: 2
 46972  00BD1C  A29E               	btfss	3998,1,c	;volatile
 46973  00BD1E  0012               	return	
 46974                           
 46975                           ; BSR set to: 2
 46976                           ;motor.c: 513: {;motor.c: 515: PIR1bits.TMR2IF = 0;
 46977  00BD20  929E               	bcf	3998,1,c	;volatile
 46978                           
 46979                           ; BSR set to: 2
 46980                           ;motor.c: 517: ++motor_current_stepcount;
 46981  00BD22  0E01               	movlw	1
 46982  00BD24  2658               	addwf	_motor_current_stepcount,f,c	;volatile
 46983  00BD26  0E00               	movlw	0
 46984  00BD28  2259               	addwfc	_motor_current_stepcount+1,f,c	;volatile
 46985  00BD2A  225A               	addwfc	_motor_current_stepcount+2,f,c	;volatile
 46986  00BD2C  225B               	addwfc	_motor_current_stepcount+3,f,c	;volatile
 46987                           
 46988                           ;motor.c: 520: os.current_position_in_steps += motor_direction;
 46989  00BD2E  0101               	movlb	1	; () banked
 46990  00BD30  5155               	movf	_motor_direction& (0+255),w,b
 46991  00BD32  6E2C               	movwf	??_motor_isr& (0+255),c
 46992  00BD34  0E00               	movlw	0
 46993  00BD36  BE2C               	btfsc	??_motor_isr& (0+255),7,c
 46994  00BD38  0EFF               	movlw	255
 46995  00BD3A  6E2D               	movwf	(??_motor_isr+1)& (0+255),c
 46996  00BD3C  6E2E               	movwf	(??_motor_isr+2)& (0+255),c
 46997  00BD3E  6E2F               	movwf	(??_motor_isr+3)& (0+255),c
 46998  00BD40  502C               	movf	??_motor_isr,w,c
 46999  00BD42  2778               	addwf	(_os+7)& (0+255),f,b	;volatile
 47000  00BD44  502D               	movf	??_motor_isr+1,w,c
 47001  00BD46  2379               	addwfc	(_os+8)& (0+255),f,b	;volatile
 47002  00BD48  502E               	movf	??_motor_isr+2,w,c
 47003  00BD4A  237A               	addwfc	(_os+9)& (0+255),f,b	;volatile
 47004  00BD4C  502F               	movf	??_motor_isr+3,w,c
 47005  00BD4E  237B               	addwfc	(_os+10)& (0+255),f,b	;volatile
 47006                           
 47007                           ;motor.c: 521: if(os.current_position_in_steps==config.full_circle_in_steps)
 47008  00BD50  51A1               	movf	_config& (0+255),w,b
 47009  00BD52  1978               	xorwf	(_os+7)& (0+255),w,b	;volatile
 47010  00BD54  E112               	bnz	i2l18611
 47011  00BD56  51A2               	movf	(_config+1)& (0+255),w,b
 47012  00BD58  1979               	xorwf	(_os+8)& (0+255),w,b	;volatile
 47013  00BD5A  E10F               	bnz	i2l18611
 47014  00BD5C  51A3               	movf	(_config+2)& (0+255),w,b
 47015  00BD5E  197A               	xorwf	(_os+9)& (0+255),w,b	;volatile
 47016  00BD60  E10C               	bnz	i2l18611
 47017  00BD62  51A4               	movf	(_config+3)& (0+255),w,b
 47018  00BD64  197B               	xorwf	(_os+10)& (0+255),w,b	;volatile
 47019  00BD66  A4D8               	btfss	status,2,c
 47020  00BD68  D008               	goto	i2l2498
 47021                           
 47022                           ; BSR set to: 1
 47023                           ;motor.c: 522: os.current_position_in_steps = 0;
 47024  00BD6A  0E00               	movlw	0
 47025  00BD6C  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 47026  00BD6E  0E00               	movlw	0
 47027  00BD70  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 47028  00BD72  0E00               	movlw	0
 47029  00BD74  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 47030  00BD76  0E00               	movlw	0
 47031  00BD78  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 47032  00BD7A                     i2l2498:
 47033  00BD7A                     i2l18611:
 47034                           
 47035                           ; BSR set to: 1
 47036                           ;motor.c: 523: if(os.current_position_in_steps==0xFFFFFFFF)
 47037  00BD7A  2978               	incf	(_os+7)& (0+255),w,b	;volatile
 47038  00BD7C  E114               	bnz	i2l2479
 47039  00BD7E  2979               	incf	(_os+8)& (0+255),w,b	;volatile
 47040  00BD80  E112               	bnz	i2l2479
 47041  00BD82  297A               	incf	(_os+9)& (0+255),w,b	;volatile
 47042  00BD84  E110               	bnz	i2l2479
 47043  00BD86  297B               	incf	(_os+10)& (0+255),w,b	;volatile
 47044  00BD88  A4D8               	btfss	status,2,c
 47045  00BD8A  0012               	return	
 47046                           
 47047                           ; BSR set to: 1
 47048                           ;motor.c: 524: os.current_position_in_steps = (config.full_circle_in_steps-1);
 47049  00BD8C  0EFF               	movlw	255
 47050  00BD8E  25A1               	addwf	_config& (0+255),w,b
 47051  00BD90  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 47052  00BD92  0EFF               	movlw	255
 47053  00BD94  21A2               	addwfc	(_config+1)& (0+255),w,b
 47054  00BD96  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 47055  00BD98  0EFF               	movlw	255
 47056  00BD9A  21A3               	addwfc	(_config+2)& (0+255),w,b
 47057  00BD9C  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 47058  00BD9E  0EFF               	movlw	255
 47059  00BDA0  21A4               	addwfc	(_config+3)& (0+255),w,b
 47060  00BDA2  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 47061                           
 47062                           ; BSR set to: 1
 47063  00BDA4  0012               	return	
 47064  00BDA6                     i2l2479:
 47065  00BDA6  0012               	return		;funcret
 47066  00BDA8                     __end_of_motor_isr:
 47067                           	opt stack 0
 47068                           tosu	equ	0xFFF
 47069                           tosh	equ	0xFFE
 47070                           tosl	equ	0xFFD
 47071                           pclatu	equ	0xFFB
 47072                           pclath	equ	0xFFA
 47073                           tblptru	equ	0xFF8
 47074                           tblptrh	equ	0xFF7
 47075                           tblptrl	equ	0xFF6
 47076                           tablat	equ	0xFF5
 47077                           prodh	equ	0xFF4
 47078                           prodl	equ	0xFF3
 47079                           intcon	equ	0xFF2
 47080                           indf0	equ	0xFEF
 47081                           postinc0	equ	0xFEE
 47082                           fsr0h	equ	0xFEA
 47083                           fsr0l	equ	0xFE9
 47084                           wreg	equ	0xFE8
 47085                           indf1	equ	0xFE7
 47086                           postinc1	equ	0xFE6
 47087                           postdec1	equ	0xFE5
 47088                           plusw1	equ	0xFE3
 47089                           fsr1h	equ	0xFE2
 47090                           fsr1l	equ	0xFE1
 47091                           indf2	equ	0xFDF
 47092                           postinc2	equ	0xFDE
 47093                           postdec2	equ	0xFDD
 47094                           plusw2	equ	0xFDB
 47095                           fsr2h	equ	0xFDA
 47096                           fsr2l	equ	0xFD9
 47097                           status	equ	0xFD8
 47098                           
 47099 ;; *************** function _i2c_eeprom_writeUint32 *****************
 47100 ;; Defined at:
 47101 ;;		line 230 in file "i2c.c"
 47102 ;; Parameters:    Size  Location     Type
 47103 ;;  address         2   37[COMRAM] unsigned int 
 47104 ;;  data            4   39[COMRAM] unsigned long 
 47105 ;; Auto vars:     Size  Location     Type
 47106 ;;		None
 47107 ;; Return value:  Size  Location     Type
 47108 ;;                  1    wreg      void 
 47109 ;; Registers used:
 47110 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 47111 ;; Tracked objects:
 47112 ;;		On entry : 0/0
 47113 ;;		On exit  : 0/0
 47114 ;;		Unchanged: 0/0
 47115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47116 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47119 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47120 ;;Total ram usage:        6 bytes
 47121 ;; Hardware stack levels used:    1
 47122 ;; Hardware stack levels required when called:    3
 47123 ;; This function calls:
 47124 ;;		_i2c_eeprom_write
 47125 ;; This function is called by:
 47126 ;;		_motor_isr
 47127 ;; This function uses a non-reentrant model
 47128 ;;
 47129                           
 47130                           	psect	text189
 47131  015868                     __ptext189:
 47132                           	opt stack 0
 47133  015868                     _i2c_eeprom_writeUint32:
 47134                           	opt stack 13
 47135                           
 47136                           ;i2c.c: 232: i2c_eeprom_write(address, &data, 4);
 47137                           
 47138                           ;incstack = 0
 47139  015868  C026  F00B         	movff	i2c_eeprom_writeUint32@address,i2c_eeprom_write@address
 47140  01586C  C027  F00C         	movff	i2c_eeprom_writeUint32@address+1,i2c_eeprom_write@address+1
 47141  015870  0E28               	movlw	low i2c_eeprom_writeUint32@data
 47142  015872  6E0D               	movwf	i2c_eeprom_write@data,c
 47143  015874  0E00               	movlw	high i2c_eeprom_writeUint32@data
 47144  015876  6E0E               	movwf	i2c_eeprom_write@data+1,c
 47145  015878  0E04               	movlw	4
 47146  01587A  6E0F               	movwf	i2c_eeprom_write@length,c
 47147  01587C  EC3B  F09D         	call	_i2c_eeprom_write	;wreg free
 47148  015880  0012               	return		;funcret
 47149  015882                     __end_of_i2c_eeprom_writeUint32:
 47150                           	opt stack 0
 47151                           tosu	equ	0xFFF
 47152                           tosh	equ	0xFFE
 47153                           tosl	equ	0xFFD
 47154                           pclatu	equ	0xFFB
 47155                           pclath	equ	0xFFA
 47156                           tblptru	equ	0xFF8
 47157                           tblptrh	equ	0xFF7
 47158                           tblptrl	equ	0xFF6
 47159                           tablat	equ	0xFF5
 47160                           prodh	equ	0xFF4
 47161                           prodl	equ	0xFF3
 47162                           intcon	equ	0xFF2
 47163                           indf0	equ	0xFEF
 47164                           postinc0	equ	0xFEE
 47165                           fsr0h	equ	0xFEA
 47166                           fsr0l	equ	0xFE9
 47167                           wreg	equ	0xFE8
 47168                           indf1	equ	0xFE7
 47169                           postinc1	equ	0xFE6
 47170                           postdec1	equ	0xFE5
 47171                           plusw1	equ	0xFE3
 47172                           fsr1h	equ	0xFE2
 47173                           fsr1l	equ	0xFE1
 47174                           indf2	equ	0xFDF
 47175                           postinc2	equ	0xFDE
 47176                           postdec2	equ	0xFDD
 47177                           plusw2	equ	0xFDB
 47178                           fsr2h	equ	0xFDA
 47179                           fsr2l	equ	0xFD9
 47180                           status	equ	0xFD8
 47181                           
 47182 ;; *************** function _i2c_eeprom_write *****************
 47183 ;; Defined at:
 47184 ;;		line 242 in file "i2c.c"
 47185 ;; Parameters:    Size  Location     Type
 47186 ;;  address         2   10[COMRAM] unsigned int 
 47187 ;;  data            2   12[COMRAM] PTR unsigned char 
 47188 ;;		 -> i2c_eeprom_writeUint32@data(4), i2c_eeprom_writeUint16@data(2), 
 47189 ;;  length          1   14[COMRAM] unsigned char 
 47190 ;; Auto vars:     Size  Location     Type
 47191 ;;  dat            17   18[COMRAM] unsigned char [17]
 47192 ;;  cntr            1   36[COMRAM] unsigned char 
 47193 ;;  slave_addres    1   35[COMRAM] unsigned char 
 47194 ;; Return value:  Size  Location     Type
 47195 ;;                  1    wreg      void 
 47196 ;; Registers used:
 47197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 47198 ;; Tracked objects:
 47199 ;;		On entry : 0/0
 47200 ;;		On exit  : 0/0
 47201 ;;		Unchanged: 0/0
 47202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47203 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47204 ;;      Locals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47205 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47206 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47207 ;;Total ram usage:       27 bytes
 47208 ;; Hardware stack levels used:    1
 47209 ;; Hardware stack levels required when called:    2
 47210 ;; This function calls:
 47211 ;;		i2__i2c_eeprom_busy
 47212 ;;		i2__i2c_write
 47213 ;; This function is called by:
 47214 ;;		_i2c_eeprom_writeUint32
 47215 ;;		_i2c_eeprom_writeUint16
 47216 ;; This function uses a non-reentrant model
 47217 ;;
 47218                           
 47219                           	psect	text190
 47220  013A76                     __ptext190:
 47221                           	opt stack 0
 47222  013A76                     _i2c_eeprom_write:
 47223                           	opt stack 13
 47224                           
 47225                           ;i2c.c: 244: uint8_t cntr;;i2c.c: 245: uint8_t slave_address;;i2c.c: 246: uint8_t dat[17
      +                          ];;i2c.c: 248: slave_address = 0b10100000 | ((address&0b0000011100000000)>>7);
 47226                           
 47227                           ;incstack = 0
 47228  013A76  C00B  F010         	movff	i2c_eeprom_write@address,??_i2c_eeprom_write
 47229  013A7A  C00C  F011         	movff	i2c_eeprom_write@address+1,??_i2c_eeprom_write+1
 47230  013A7E  0E07               	movlw	7
 47231  013A80  6E12               	movwf	(??_i2c_eeprom_write+2)& (0+255),c
 47232  013A82                     i2u1410_45:
 47233  013A82  90D8               	bcf	status,0,c
 47234  013A84  3211               	rrcf	??_i2c_eeprom_write+1,f,c
 47235  013A86  3210               	rrcf	??_i2c_eeprom_write,f,c
 47236  013A88  2E12               	decfsz	(??_i2c_eeprom_write+2)& (0+255),f,c
 47237  013A8A  D7FB               	goto	i2u1410_45
 47238  013A8C  5010               	movf	??_i2c_eeprom_write,w,c
 47239  013A8E  0B0E               	andlw	14
 47240  013A90  09A0               	iorlw	160
 47241  013A92  6E24               	movwf	i2c_eeprom_write@slave_address,c
 47242                           
 47243                           ;i2c.c: 249: dat[0] = address & 0xFF;
 47244  013A94  C00B  F013         	movff	i2c_eeprom_write@address,i2c_eeprom_write@dat
 47245                           
 47246                           ;i2c.c: 251: length &= 0b00001111;
 47247  013A98  0E0F               	movlw	15
 47248  013A9A  160F               	andwf	i2c_eeprom_write@length,f,c
 47249                           
 47250                           ;i2c.c: 252: for(cntr=0; cntr<length; ++cntr)
 47251  013A9C  0E00               	movlw	0
 47252  013A9E  6E25               	movwf	i2c_eeprom_write@cntr,c
 47253  013AA0  D018               	goto	i2l1203
 47254  013AA2                     
 47255                           ;i2c.c: 253: {;i2c.c: 254: dat[cntr+1] = data[cntr];
 47256  013AA2  5025               	movf	i2c_eeprom_write@cntr,w,c
 47257  013AA4  0D01               	mullw	1
 47258  013AA6  50F3               	movf	prodl,w,c
 47259  013AA8  240D               	addwf	i2c_eeprom_write@data,w,c
 47260  013AAA  6ED9               	movwf	fsr2l,c
 47261  013AAC  50F4               	movf	prodh,w,c
 47262  013AAE  200E               	addwfc	i2c_eeprom_write@data+1,w,c
 47263  013AB0  6EDA               	movwf	fsr2h,c
 47264  013AB2  5025               	movf	i2c_eeprom_write@cntr,w,c
 47265  013AB4  6E10               	movwf	??_i2c_eeprom_write& (0+255),c
 47266  013AB6  6A11               	clrf	(??_i2c_eeprom_write+1)& (0+255),c
 47267  013AB8  0E01               	movlw	1
 47268  013ABA  2610               	addwf	??_i2c_eeprom_write,f,c
 47269  013ABC  0E00               	movlw	0
 47270  013ABE  2211               	addwfc	??_i2c_eeprom_write+1,f,c
 47271  013AC0  0E13               	movlw	low i2c_eeprom_write@dat
 47272  013AC2  2410               	addwf	??_i2c_eeprom_write,w,c
 47273  013AC4  6EE1               	movwf	fsr1l,c
 47274  013AC6  0E00               	movlw	high i2c_eeprom_write@dat
 47275  013AC8  2011               	addwfc	??_i2c_eeprom_write+1,w,c
 47276  013ACA  6EE2               	movwf	fsr1h,c
 47277  013ACC  CFDF FFE7          	movff	indf2,indf1
 47278  013AD0  2A25               	incf	i2c_eeprom_write@cntr,f,c
 47279  013AD2                     i2l1203:
 47280  013AD2  500F               	movf	i2c_eeprom_write@length,w,c
 47281  013AD4  5C25               	subwf	i2c_eeprom_write@cntr,w,c
 47282  013AD6  A0D8               	btfss	status,0,c
 47283  013AD8  D7E4               	goto	i2l1204
 47284  013ADA                     i2u1411_40:
 47285                           
 47286                           ;i2c.c: 255: };i2c.c: 258: while(_i2c_eeprom_busy());
 47287  013ADA  EC53  F0AB         	call	i2__i2c_eeprom_busy	;wreg free
 47288  013ADE  0900               	iorlw	0
 47289  013AE0  A4D8               	btfss	status,2,c
 47290  013AE2  D7FB               	goto	i2u1411_40
 47291                           
 47292                           ;i2c.c: 260: _i2c_write(slave_address, &dat[0], length+1);
 47293  013AE4  0E13               	movlw	low i2c_eeprom_write@dat
 47294  013AE6  6E06               	movwf	i2__i2c_write@data,c
 47295  013AE8  0E00               	movlw	high i2c_eeprom_write@dat
 47296  013AEA  6E07               	movwf	i2__i2c_write@data+1,c
 47297  013AEC  280F               	incf	i2c_eeprom_write@length,w,c
 47298  013AEE  6E08               	movwf	i2__i2c_write@length,c
 47299  013AF0  5024               	movf	i2c_eeprom_write@slave_address,w,c
 47300  013AF2  EC56  F0A7         	call	i2__i2c_write
 47301  013AF6  0012               	return		;funcret
 47302  013AF8                     __end_of_i2c_eeprom_write:
 47303                           	opt stack 0
 47304                           tosu	equ	0xFFF
 47305                           tosh	equ	0xFFE
 47306                           tosl	equ	0xFFD
 47307                           pclatu	equ	0xFFB
 47308                           pclath	equ	0xFFA
 47309                           tblptru	equ	0xFF8
 47310                           tblptrh	equ	0xFF7
 47311                           tblptrl	equ	0xFF6
 47312                           tablat	equ	0xFF5
 47313                           prodh	equ	0xFF4
 47314                           prodl	equ	0xFF3
 47315                           intcon	equ	0xFF2
 47316                           indf0	equ	0xFEF
 47317                           postinc0	equ	0xFEE
 47318                           fsr0h	equ	0xFEA
 47319                           fsr0l	equ	0xFE9
 47320                           wreg	equ	0xFE8
 47321                           indf1	equ	0xFE7
 47322                           postinc1	equ	0xFE6
 47323                           postdec1	equ	0xFE5
 47324                           plusw1	equ	0xFE3
 47325                           fsr1h	equ	0xFE2
 47326                           fsr1l	equ	0xFE1
 47327                           indf2	equ	0xFDF
 47328                           postinc2	equ	0xFDE
 47329                           postdec2	equ	0xFDD
 47330                           plusw2	equ	0xFDB
 47331                           fsr2h	equ	0xFDA
 47332                           fsr2l	equ	0xFD9
 47333                           status	equ	0xFD8
 47334                           
 47335 ;; *************** function i2__i2c_write *****************
 47336 ;; Defined at:
 47337 ;;		line 84 in file "i2c.c"
 47338 ;; Parameters:    Size  Location     Type
 47339 ;;  slave_addres    1    wreg     unsigned char 
 47340 ;;  data            2    5[COMRAM] PTR unsigned char 
 47341 ;;		 -> i2c_display_program_custom_character@data_array(11), _ic2_display_set_cgram_address@data_array(3), _ic2_display_
      +set_ddram_address@data_array(2), i2c_display_init@init_sequence(9), 
 47342 ;;		 -> _i2c_display_send_init_sequence@init_sequence(9), i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_
      +readByte@addr(1), 
 47343 ;;		 -> i2c_eeprom_writeByte@dat(2), i2c_adc_start@configuration_byte(1), 
 47344 ;;  length          1    7[COMRAM] unsigned char 
 47345 ;; Auto vars:     Size  Location     Type
 47346 ;;  slave_addres    1    8[COMRAM] unsigned char 
 47347 ;;  _i2c_write      1    9[COMRAM] unsigned char 
 47348 ;; Return value:  Size  Location     Type
 47349 ;;                  1    wreg      void 
 47350 ;; Registers used:
 47351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 47352 ;; Tracked objects:
 47353 ;;		On entry : 0/0
 47354 ;;		On exit  : 0/0
 47355 ;;		Unchanged: 0/0
 47356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47357 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47358 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47360 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47361 ;;Total ram usage:        5 bytes
 47362 ;; Hardware stack levels used:    1
 47363 ;; Hardware stack levels required when called:    1
 47364 ;; This function calls:
 47365 ;;		i2__i2c_send
 47366 ;;		i2__i2c_start
 47367 ;;		i2__i2c_stop
 47368 ;;		i2__i2c_wait_idle
 47369 ;; This function is called by:
 47370 ;;		_i2c_eeprom_write
 47371 ;; This function uses a non-reentrant model
 47372 ;;
 47373                           
 47374                           	psect	text191
 47375  014EAC                     __ptext191:
 47376                           	opt stack 0
 47377  014EAC                     i2__i2c_write:
 47378                           	opt stack 13
 47379                           
 47380                           ;incstack = 0
 47381                           ;i2__i2c_write@slave_address stored from wreg
 47382  014EAC  6E09               	movwf	i2__i2c_write@slave_address,c
 47383                           
 47384                           ;i2c.c: 86: uint8_t cntr;;i2c.c: 88: _i2c_wait_idle();
 47385  014EAE  EC7F  F0A4         	call	i2__i2c_wait_idle	;wreg free
 47386                           
 47387                           ;i2c.c: 89: _i2c_start();
 47388  014EB2  ECD9  F0AC         	call	i2__i2c_start	;wreg free
 47389                           
 47390                           ;i2c.c: 90: _i2c_wait_idle();
 47391  014EB6  EC7F  F0A4         	call	i2__i2c_wait_idle	;wreg free
 47392                           
 47393                           ;i2c.c: 91: _i2c_send(slave_address);
 47394  014EBA  5009               	movf	i2__i2c_write@slave_address,w,c
 47395  014EBC  ECDD  F0AC         	call	i2__i2c_send
 47396                           
 47397                           ;i2c.c: 92: _i2c_wait_idle();
 47398  014EC0  EC7F  F0A4         	call	i2__i2c_wait_idle	;wreg free
 47399                           
 47400                           ;i2c.c: 94: for(cntr=0; cntr<length; ++cntr)
 47401  014EC4  0E00               	movlw	0
 47402  014EC6  6E0A               	movwf	i2__i2c_write@cntr,c
 47403  014EC8  D00E               	goto	i2l1158
 47404  014ECA                     
 47405                           ;i2c.c: 95: {;i2c.c: 96: _i2c_send(data[cntr]);
 47406  014ECA  500A               	movf	i2__i2c_write@cntr,w,c
 47407  014ECC  0D01               	mullw	1
 47408  014ECE  50F3               	movf	prodl,w,c
 47409  014ED0  2406               	addwf	i2__i2c_write@data,w,c
 47410  014ED2  6ED9               	movwf	fsr2l,c
 47411  014ED4  50F4               	movf	prodh,w,c
 47412  014ED6  2007               	addwfc	i2__i2c_write@data+1,w,c
 47413  014ED8  6EDA               	movwf	fsr2h,c
 47414  014EDA  50DF               	movf	indf2,w,c
 47415  014EDC  ECDD  F0AC         	call	i2__i2c_send
 47416                           
 47417                           ;i2c.c: 97: _i2c_wait_idle();
 47418  014EE0  EC7F  F0A4         	call	i2__i2c_wait_idle	;wreg free
 47419  014EE4  2A0A               	incf	i2__i2c_write@cntr,f,c
 47420  014EE6                     i2l1158:
 47421  014EE6  5008               	movf	i2__i2c_write@length,w,c
 47422  014EE8  5C0A               	subwf	i2__i2c_write@cntr,w,c
 47423  014EEA  A0D8               	btfss	status,0,c
 47424  014EEC  D7EE               	goto	i2l1159
 47425                           
 47426                           ;i2c.c: 98: };i2c.c: 100: _i2c_stop();
 47427  014EEE  ECD5  F0AC         	call	i2__i2c_stop	;wreg free
 47428  014EF2  0012               	return		;funcret
 47429  014EF4                     __end_ofi2__i2c_write:
 47430                           	opt stack 0
 47431                           tosu	equ	0xFFF
 47432                           tosh	equ	0xFFE
 47433                           tosl	equ	0xFFD
 47434                           pclatu	equ	0xFFB
 47435                           pclath	equ	0xFFA
 47436                           tblptru	equ	0xFF8
 47437                           tblptrh	equ	0xFF7
 47438                           tblptrl	equ	0xFF6
 47439                           tablat	equ	0xFF5
 47440                           prodh	equ	0xFF4
 47441                           prodl	equ	0xFF3
 47442                           intcon	equ	0xFF2
 47443                           indf0	equ	0xFEF
 47444                           postinc0	equ	0xFEE
 47445                           fsr0h	equ	0xFEA
 47446                           fsr0l	equ	0xFE9
 47447                           wreg	equ	0xFE8
 47448                           indf1	equ	0xFE7
 47449                           postinc1	equ	0xFE6
 47450                           postdec1	equ	0xFE5
 47451                           plusw1	equ	0xFE3
 47452                           fsr1h	equ	0xFE2
 47453                           fsr1l	equ	0xFE1
 47454                           indf2	equ	0xFDF
 47455                           postinc2	equ	0xFDE
 47456                           postdec2	equ	0xFDD
 47457                           plusw2	equ	0xFDB
 47458                           fsr2h	equ	0xFDA
 47459                           fsr2l	equ	0xFD9
 47460                           status	equ	0xFD8
 47461                           
 47462 ;; *************** function i2__i2c_eeprom_busy *****************
 47463 ;; Defined at:
 47464 ;;		line 169 in file "i2c.c"
 47465 ;; Parameters:    Size  Location     Type
 47466 ;;		None
 47467 ;; Auto vars:     Size  Location     Type
 47468 ;;  _i2c_eeprom_    1    5[COMRAM] unsigned char 
 47469 ;; Return value:  Size  Location     Type
 47470 ;;                  1    wreg      unsigned char 
 47471 ;; Registers used:
 47472 ;;		wreg, status,2, status,0, cstack
 47473 ;; Tracked objects:
 47474 ;;		On entry : 0/0
 47475 ;;		On exit  : 0/0
 47476 ;;		Unchanged: 0/0
 47477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47479 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47481 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47482 ;;Total ram usage:        1 bytes
 47483 ;; Hardware stack levels used:    1
 47484 ;; Hardware stack levels required when called:    1
 47485 ;; This function calls:
 47486 ;;		i2__i2c_send
 47487 ;;		i2__i2c_start
 47488 ;;		i2__i2c_stop
 47489 ;;		i2__i2c_wait_idle
 47490 ;; This function is called by:
 47491 ;;		_i2c_eeprom_write
 47492 ;; This function uses a non-reentrant model
 47493 ;;
 47494                           
 47495                           	psect	text192
 47496  0156A6                     __ptext192:
 47497                           	opt stack 0
 47498  0156A6                     i2__i2c_eeprom_busy:
 47499                           	opt stack 13
 47500                           
 47501                           ;i2c.c: 171: uint8_t busy;;i2c.c: 172: _i2c_wait_idle();
 47502                           
 47503                           ;incstack = 0
 47504  0156A6  EC7F  F0A4         	call	i2__i2c_wait_idle	;wreg free
 47505                           
 47506                           ;i2c.c: 173: _i2c_start();
 47507  0156AA  ECD9  F0AC         	call	i2__i2c_start	;wreg free
 47508                           
 47509                           ;i2c.c: 174: _i2c_wait_idle();
 47510  0156AE  EC7F  F0A4         	call	i2__i2c_wait_idle	;wreg free
 47511                           
 47512                           ;i2c.c: 175: _i2c_send(0b10100000);
 47513  0156B2  0EA0               	movlw	160
 47514  0156B4  ECDD  F0AC         	call	i2__i2c_send
 47515                           
 47516                           ;i2c.c: 176: _i2c_wait_idle();
 47517  0156B8  EC7F  F0A4         	call	i2__i2c_wait_idle	;wreg free
 47518                           
 47519                           ;i2c.c: 180: busy = SSP1CON2bits.ACKSTAT;
 47520  0156BC  0E00               	movlw	0
 47521  0156BE  BCC5               	btfsc	4037,6,c	;volatile
 47522  0156C0  0E01               	movlw	1
 47523  0156C2  6E06               	movwf	i2__i2c_eeprom_busy@busy,c
 47524                           
 47525                           ;i2c.c: 181: _i2c_stop();
 47526  0156C4  ECD5  F0AC         	call	i2__i2c_stop	;wreg free
 47527                           
 47528                           ;i2c.c: 183: return 0;
 47529  0156C8  0E00               	movlw	0
 47530  0156CA  0012               	return	
 47531  0156CC                     __end_ofi2__i2c_eeprom_busy:
 47532                           	opt stack 0
 47533                           tosu	equ	0xFFF
 47534                           tosh	equ	0xFFE
 47535                           tosl	equ	0xFFD
 47536                           pclatu	equ	0xFFB
 47537                           pclath	equ	0xFFA
 47538                           tblptru	equ	0xFF8
 47539                           tblptrh	equ	0xFF7
 47540                           tblptrl	equ	0xFF6
 47541                           tablat	equ	0xFF5
 47542                           prodh	equ	0xFF4
 47543                           prodl	equ	0xFF3
 47544                           intcon	equ	0xFF2
 47545                           indf0	equ	0xFEF
 47546                           postinc0	equ	0xFEE
 47547                           fsr0h	equ	0xFEA
 47548                           fsr0l	equ	0xFE9
 47549                           wreg	equ	0xFE8
 47550                           indf1	equ	0xFE7
 47551                           postinc1	equ	0xFE6
 47552                           postdec1	equ	0xFE5
 47553                           plusw1	equ	0xFE3
 47554                           fsr1h	equ	0xFE2
 47555                           fsr1l	equ	0xFE1
 47556                           indf2	equ	0xFDF
 47557                           postinc2	equ	0xFDE
 47558                           postdec2	equ	0xFDD
 47559                           plusw2	equ	0xFDB
 47560                           fsr2h	equ	0xFDA
 47561                           fsr2l	equ	0xFD9
 47562                           status	equ	0xFD8
 47563                           
 47564 ;; *************** function i2__i2c_wait_idle *****************
 47565 ;; Defined at:
 47566 ;;		line 40 in file "i2c.c"
 47567 ;; Parameters:    Size  Location     Type
 47568 ;;		None
 47569 ;; Auto vars:     Size  Location     Type
 47570 ;;		None
 47571 ;; Return value:  Size  Location     Type
 47572 ;;                  1    wreg      void 
 47573 ;; Registers used:
 47574 ;;		wreg, status,2, status,0
 47575 ;; Tracked objects:
 47576 ;;		On entry : 0/0
 47577 ;;		On exit  : 0/0
 47578 ;;		Unchanged: 0/0
 47579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47582 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47583 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47584 ;;Total ram usage:        5 bytes
 47585 ;; Hardware stack levels used:    1
 47586 ;; This function calls:
 47587 ;;		Nothing
 47588 ;; This function is called by:
 47589 ;;		i2__i2c_write
 47590 ;;		i2__i2c_eeprom_busy
 47591 ;; This function uses a non-reentrant model
 47592 ;;
 47593                           
 47594                           	psect	text193
 47595  0148FE                     __ptext193:
 47596                           	opt stack 0
 47597  0148FE                     i2__i2c_wait_idle:
 47598                           	opt stack 13
 47599                           
 47600                           ;i2c.c: 42: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 47601                           
 47602                           ;incstack = 0
 47603  0148FE  A4C7               	btfss	4039,2,c	;volatile
 47604  014900  D003               	goto	i2u1287_40
 47605  014902  6A01               	clrf	??i2__i2c_wait_idle& (0+255),c
 47606  014904  2A01               	incf	??i2__i2c_wait_idle& (0+255),f,c
 47607  014906  D001               	goto	i2u1287_48
 47608  014908                     i2u1287_40:
 47609  014908  6A01               	clrf	??i2__i2c_wait_idle& (0+255),c
 47610  01490A                     i2u1287_48:
 47611  01490A  A0C5               	btfss	4037,0,c	;volatile
 47612  01490C  D003               	goto	i2u1288_40
 47613  01490E  6A02               	clrf	(??i2__i2c_wait_idle+1)& (0+255),c
 47614  014910  2A02               	incf	(??i2__i2c_wait_idle+1)& (0+255),f,c
 47615  014912  D001               	goto	i2u1288_48
 47616  014914                     i2u1288_40:
 47617  014914  6A02               	clrf	(??i2__i2c_wait_idle+1)& (0+255),c
 47618  014916                     i2u1288_48:
 47619  014916  A2C5               	btfss	4037,1,c	;volatile
 47620  014918  D003               	goto	i2u1289_40
 47621  01491A  6A03               	clrf	(??i2__i2c_wait_idle+2)& (0+255),c
 47622  01491C  2A03               	incf	(??i2__i2c_wait_idle+2)& (0+255),f,c
 47623  01491E  D001               	goto	i2u1289_48
 47624  014920                     i2u1289_40:
 47625  014920  6A03               	clrf	(??i2__i2c_wait_idle+2)& (0+255),c
 47626  014922                     i2u1289_48:
 47627  014922  A4C5               	btfss	4037,2,c	;volatile
 47628  014924  D003               	goto	i2u1290_40
 47629  014926  6A04               	clrf	(??i2__i2c_wait_idle+3)& (0+255),c
 47630  014928  2A04               	incf	(??i2__i2c_wait_idle+3)& (0+255),f,c
 47631  01492A  D001               	goto	i2u1290_48
 47632  01492C                     i2u1290_40:
 47633  01492C  6A04               	clrf	(??i2__i2c_wait_idle+3)& (0+255),c
 47634  01492E                     i2u1290_48:
 47635  01492E  A6C5               	btfss	4037,3,c	;volatile
 47636  014930  D003               	goto	i2u1291_40
 47637  014932  6A05               	clrf	(??i2__i2c_wait_idle+4)& (0+255),c
 47638  014934  2A05               	incf	(??i2__i2c_wait_idle+4)& (0+255),f,c
 47639  014936  D001               	goto	i2u1291_48
 47640  014938                     i2u1291_40:
 47641  014938  6A05               	clrf	(??i2__i2c_wait_idle+4)& (0+255),c
 47642  01493A                     i2u1291_48:
 47643  01493A  A8C5               	btfss	4037,4,c	;volatile
 47644  01493C  D002               	goto	i2u1292_40
 47645  01493E  0E01               	movlw	1
 47646  014940  D001               	goto	i2u1292_46
 47647  014942                     i2u1292_40:
 47648  014942  0E00               	movlw	0
 47649  014944                     i2u1292_46:
 47650  014944  1005               	iorwf	??i2__i2c_wait_idle+4,w,c
 47651  014946  1004               	iorwf	??i2__i2c_wait_idle+3,w,c
 47652  014948  1003               	iorwf	??i2__i2c_wait_idle+2,w,c
 47653  01494A  1002               	iorwf	??i2__i2c_wait_idle+1,w,c
 47654  01494C  1001               	iorwf	??i2__i2c_wait_idle,w,c
 47655  01494E  0900               	iorlw	0
 47656  014950  B4D8               	btfsc	status,2,c
 47657  014952  0012               	return	
 47658  014954  D7D4               	goto	i2__i2c_wait_idle
 47659  014956                     __end_ofi2__i2c_wait_idle:
 47660                           	opt stack 0
 47661                           tosu	equ	0xFFF
 47662                           tosh	equ	0xFFE
 47663                           tosl	equ	0xFFD
 47664                           pclatu	equ	0xFFB
 47665                           pclath	equ	0xFFA
 47666                           tblptru	equ	0xFF8
 47667                           tblptrh	equ	0xFF7
 47668                           tblptrl	equ	0xFF6
 47669                           tablat	equ	0xFF5
 47670                           prodh	equ	0xFF4
 47671                           prodl	equ	0xFF3
 47672                           intcon	equ	0xFF2
 47673                           indf0	equ	0xFEF
 47674                           postinc0	equ	0xFEE
 47675                           fsr0h	equ	0xFEA
 47676                           fsr0l	equ	0xFE9
 47677                           wreg	equ	0xFE8
 47678                           indf1	equ	0xFE7
 47679                           postinc1	equ	0xFE6
 47680                           postdec1	equ	0xFE5
 47681                           plusw1	equ	0xFE3
 47682                           fsr1h	equ	0xFE2
 47683                           fsr1l	equ	0xFE1
 47684                           indf2	equ	0xFDF
 47685                           postinc2	equ	0xFDE
 47686                           postdec2	equ	0xFDD
 47687                           plusw2	equ	0xFDB
 47688                           fsr2h	equ	0xFDA
 47689                           fsr2l	equ	0xFD9
 47690                           status	equ	0xFD8
 47691                           
 47692 ;; *************** function i2__i2c_stop *****************
 47693 ;; Defined at:
 47694 ;;		line 63 in file "i2c.c"
 47695 ;; Parameters:    Size  Location     Type
 47696 ;;		None
 47697 ;; Auto vars:     Size  Location     Type
 47698 ;;		None
 47699 ;; Return value:  Size  Location     Type
 47700 ;;                  1    wreg      void 
 47701 ;; Registers used:
 47702 ;;		None
 47703 ;; Tracked objects:
 47704 ;;		On entry : 0/0
 47705 ;;		On exit  : 0/0
 47706 ;;		Unchanged: 0/0
 47707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47712 ;;Total ram usage:        0 bytes
 47713 ;; Hardware stack levels used:    1
 47714 ;; This function calls:
 47715 ;;		Nothing
 47716 ;; This function is called by:
 47717 ;;		i2__i2c_write
 47718 ;;		i2__i2c_eeprom_busy
 47719 ;; This function uses a non-reentrant model
 47720 ;;
 47721                           
 47722                           	psect	text194
 47723  0159AA                     __ptext194:
 47724                           	opt stack 0
 47725  0159AA                     i2__i2c_stop:
 47726                           	opt stack 13
 47727                           
 47728                           ;i2c.c: 65: SSP1CON2bits.PEN = 1;
 47729                           
 47730                           ;incstack = 0
 47731  0159AA  84C5               	bsf	4037,2,c	;volatile
 47732  0159AC  A4C5               	btfss	4037,2,c	;volatile
 47733  0159AE  0012               	return	
 47734  0159B0  D7FD               	goto	i2l1141
 47735  0159B2                     __end_ofi2__i2c_stop:
 47736                           	opt stack 0
 47737                           tosu	equ	0xFFF
 47738                           tosh	equ	0xFFE
 47739                           tosl	equ	0xFFD
 47740                           pclatu	equ	0xFFB
 47741                           pclath	equ	0xFFA
 47742                           tblptru	equ	0xFF8
 47743                           tblptrh	equ	0xFF7
 47744                           tblptrl	equ	0xFF6
 47745                           tablat	equ	0xFF5
 47746                           prodh	equ	0xFF4
 47747                           prodl	equ	0xFF3
 47748                           intcon	equ	0xFF2
 47749                           indf0	equ	0xFEF
 47750                           postinc0	equ	0xFEE
 47751                           fsr0h	equ	0xFEA
 47752                           fsr0l	equ	0xFE9
 47753                           wreg	equ	0xFE8
 47754                           indf1	equ	0xFE7
 47755                           postinc1	equ	0xFE6
 47756                           postdec1	equ	0xFE5
 47757                           plusw1	equ	0xFE3
 47758                           fsr1h	equ	0xFE2
 47759                           fsr1l	equ	0xFE1
 47760                           indf2	equ	0xFDF
 47761                           postinc2	equ	0xFDE
 47762                           postdec2	equ	0xFDD
 47763                           plusw2	equ	0xFDB
 47764                           fsr2h	equ	0xFDA
 47765                           fsr2l	equ	0xFD9
 47766                           status	equ	0xFD8
 47767                           
 47768 ;; *************** function i2__i2c_start *****************
 47769 ;; Defined at:
 47770 ;;		line 45 in file "i2c.c"
 47771 ;; Parameters:    Size  Location     Type
 47772 ;;		None
 47773 ;; Auto vars:     Size  Location     Type
 47774 ;;		None
 47775 ;; Return value:  Size  Location     Type
 47776 ;;                  1    wreg      void 
 47777 ;; Registers used:
 47778 ;;		None
 47779 ;; Tracked objects:
 47780 ;;		On entry : 0/0
 47781 ;;		On exit  : 0/0
 47782 ;;		Unchanged: 0/0
 47783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47788 ;;Total ram usage:        0 bytes
 47789 ;; Hardware stack levels used:    1
 47790 ;; This function calls:
 47791 ;;		Nothing
 47792 ;; This function is called by:
 47793 ;;		i2__i2c_write
 47794 ;;		i2__i2c_eeprom_busy
 47795 ;; This function uses a non-reentrant model
 47796 ;;
 47797                           
 47798                           	psect	text195
 47799  0159B2                     __ptext195:
 47800                           	opt stack 0
 47801  0159B2                     i2__i2c_start:
 47802                           	opt stack 13
 47803                           
 47804                           ;i2c.c: 47: SSP1CON2bits.SEN=1;
 47805                           
 47806                           ;incstack = 0
 47807  0159B2  80C5               	bsf	4037,0,c	;volatile
 47808  0159B4  A0C5               	btfss	4037,0,c	;volatile
 47809  0159B6  0012               	return	
 47810  0159B8  D7FD               	goto	i2l1126
 47811  0159BA                     __end_ofi2__i2c_start:
 47812                           	opt stack 0
 47813                           tosu	equ	0xFFF
 47814                           tosh	equ	0xFFE
 47815                           tosl	equ	0xFFD
 47816                           pclatu	equ	0xFFB
 47817                           pclath	equ	0xFFA
 47818                           tblptru	equ	0xFF8
 47819                           tblptrh	equ	0xFF7
 47820                           tblptrl	equ	0xFF6
 47821                           tablat	equ	0xFF5
 47822                           prodh	equ	0xFF4
 47823                           prodl	equ	0xFF3
 47824                           intcon	equ	0xFF2
 47825                           indf0	equ	0xFEF
 47826                           postinc0	equ	0xFEE
 47827                           fsr0h	equ	0xFEA
 47828                           fsr0l	equ	0xFE9
 47829                           wreg	equ	0xFE8
 47830                           indf1	equ	0xFE7
 47831                           postinc1	equ	0xFE6
 47832                           postdec1	equ	0xFE5
 47833                           plusw1	equ	0xFE3
 47834                           fsr1h	equ	0xFE2
 47835                           fsr1l	equ	0xFE1
 47836                           indf2	equ	0xFDF
 47837                           postinc2	equ	0xFDE
 47838                           postdec2	equ	0xFDD
 47839                           plusw2	equ	0xFDB
 47840                           fsr2h	equ	0xFDA
 47841                           fsr2l	equ	0xFD9
 47842                           status	equ	0xFD8
 47843                           
 47844 ;; *************** function i2__i2c_send *****************
 47845 ;; Defined at:
 47846 ;;		line 51 in file "i2c.c"
 47847 ;; Parameters:    Size  Location     Type
 47848 ;;  dat             1    wreg     unsigned char 
 47849 ;; Auto vars:     Size  Location     Type
 47850 ;;  dat             1    0[COMRAM] unsigned char 
 47851 ;; Return value:  Size  Location     Type
 47852 ;;                  1    wreg      void 
 47853 ;; Registers used:
 47854 ;;		wreg
 47855 ;; Tracked objects:
 47856 ;;		On entry : 0/0
 47857 ;;		On exit  : 0/0
 47858 ;;		Unchanged: 0/0
 47859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47861 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47863 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47864 ;;Total ram usage:        1 bytes
 47865 ;; Hardware stack levels used:    1
 47866 ;; This function calls:
 47867 ;;		Nothing
 47868 ;; This function is called by:
 47869 ;;		i2__i2c_write
 47870 ;;		i2__i2c_eeprom_busy
 47871 ;; This function uses a non-reentrant model
 47872 ;;
 47873                           
 47874                           	psect	text196
 47875  0159BA                     __ptext196:
 47876                           	opt stack 0
 47877  0159BA                     i2__i2c_send:
 47878                           	opt stack 13
 47879                           
 47880                           ;incstack = 0
 47881                           ;i2__i2c_send@dat stored from wreg
 47882  0159BA  6E01               	movwf	i2__i2c_send@dat,c
 47883                           
 47884                           ;i2c.c: 53: SSP1BUF = dat;
 47885  0159BC  C001  FFC9         	movff	i2__i2c_send@dat,4041	;volatile
 47886  0159C0  0012               	return		;funcret
 47887  0159C2                     __end_ofi2__i2c_send:
 47888                           	opt stack 0
 47889                           tosu	equ	0xFFF
 47890                           tosh	equ	0xFFE
 47891                           tosl	equ	0xFFD
 47892                           pclatu	equ	0xFFB
 47893                           pclath	equ	0xFFA
 47894                           tblptru	equ	0xFF8
 47895                           tblptrh	equ	0xFF7
 47896                           tblptrl	equ	0xFF6
 47897                           tablat	equ	0xFF5
 47898                           prodh	equ	0xFF4
 47899                           prodl	equ	0xFF3
 47900                           intcon	equ	0xFF2
 47901                           indf0	equ	0xFEF
 47902                           postinc0	equ	0xFEE
 47903                           fsr0h	equ	0xFEA
 47904                           fsr0l	equ	0xFE9
 47905                           wreg	equ	0xFE8
 47906                           indf1	equ	0xFE7
 47907                           postinc1	equ	0xFE6
 47908                           postdec1	equ	0xFE5
 47909                           plusw1	equ	0xFE3
 47910                           fsr1h	equ	0xFE2
 47911                           fsr1l	equ	0xFE1
 47912                           indf2	equ	0xFDF
 47913                           postinc2	equ	0xFDE
 47914                           postdec2	equ	0xFDD
 47915                           plusw2	equ	0xFDB
 47916                           fsr2h	equ	0xFDA
 47917                           fsr2l	equ	0xFD9
 47918                           status	equ	0xFD8
 47919                           
 47920 ;; *************** function _USBDeviceTasks *****************
 47921 ;; Defined at:
 47922 ;;		line 477 in file "usb_device.c"
 47923 ;; Parameters:    Size  Location     Type
 47924 ;;		None
 47925 ;; Auto vars:     Size  Location     Type
 47926 ;;  i               1   30[COMRAM] unsigned char 
 47927 ;; Return value:  Size  Location     Type
 47928 ;;                  1    wreg      void 
 47929 ;; Registers used:
 47930 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 47931 ;; Tracked objects:
 47932 ;;		On entry : 0/0
 47933 ;;		On exit  : 0/0
 47934 ;;		Unchanged: 0/0
 47935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47937 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47939 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47940 ;;Total ram usage:        1 bytes
 47941 ;; Hardware stack levels used:    1
 47942 ;; Hardware stack levels required when called:    8
 47943 ;; This function calls:
 47944 ;;		_USBCtrlEPAllowStatusStage
 47945 ;;		_USBCtrlEPService
 47946 ;;		_USBIncrement1msInternalTimers
 47947 ;;		_USBStallHandler
 47948 ;;		_USBSuspend
 47949 ;;		_USBWakeFromSuspend
 47950 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 47951 ;;		i2_USBDeviceInit
 47952 ;; This function is called by:
 47953 ;;		_SYS_InterruptHigh
 47954 ;; This function uses a non-reentrant model
 47955 ;;
 47956                           
 47957                           	psect	text197
 47958  00FFDC                     __ptext197:
 47959                           	opt stack 0
 47960  00FFDC                     _USBDeviceTasks:
 47961                           	opt stack 9
 47962                           
 47963                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 47964                           
 47965                           ;incstack = 0
 47966  00FFDC  045E               	decf	_USBDeviceState,w,c	;volatile
 47967  00FFDE  B4D8               	btfsc	status,2,c
 47968                           
 47969                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 47970  00FFE0  BA65               	btfsc	3941,5,c	;volatile
 47971  00FFE2  D007               	goto	i2l155
 47972                           
 47973                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 47974  00FFE4  0E00               	movlw	0
 47975  00FFE6  6E62               	movwf	3938,c	;volatile
 47976                           
 47977                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 47978  00FFE8  010F               	movlb	15	; () banked
 47979  00FFEA  8136               	bsf	54,0,b	;volatile
 47980                           
 47981                           ; BSR set to: 15
 47982                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 47983  00FFEC  8936               	bsf	54,4,b	;volatile
 47984                           
 47985                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 47986  00FFEE  0E02               	movlw	2
 47987  00FFF0  6E5E               	movwf	_USBDeviceState,c	;volatile
 47988  00FFF2                     i2l155:
 47989                           
 47990                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 47991                           
 47992                           ; BSR set to: 15
 47993                           
 47994                           ; BSR set to: 15
 47995  00FFF2  A462               	btfss	3938,2,c	;volatile
 47996  00FFF4  D006               	goto	i2l156
 47997  00FFF6  010F               	movlb	15	; () banked
 47998  00FFF8  A536               	btfss	54,2,b	;volatile
 47999  00FFFA  D003               	goto	i2l156
 48000                           
 48001                           ; BSR set to: 15
 48002                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 48003  00FFFC  9462               	bcf	3938,2,c	;volatile
 48004                           
 48005                           ; BSR set to: 15
 48006                           ;usb_device.c: 640: USBWakeFromSuspend();
 48007  00FFFE  EC14  F0A9         	call	_USBWakeFromSuspend	;wreg free
 48008  010002                     i2l156:
 48009                           
 48010                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 48011  010002  A265               	btfss	3941,1,c	;volatile
 48012  010004  D002               	goto	i2l157
 48013                           
 48014                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 48015  010006  98A1               	bcf	4001,4,c	;volatile
 48016                           
 48017                           ;usb_device.c: 650: return;
 48018  010008  0012               	return	
 48019  01000A                     i2l157:
 48020                           
 48021                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 48022  01000A  A062               	btfss	3938,0,c	;volatile
 48023  01000C  D009               	goto	i2l159
 48024  01000E  010F               	movlb	15	; () banked
 48025  010010  A136               	btfss	54,0,b	;volatile
 48026  010012  D006               	goto	i2l159
 48027                           
 48028                           ; BSR set to: 15
 48029                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 48030  010014  EC91  F080         	call	i2_USBDeviceInit	;wreg free
 48031                           
 48032                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
 48033  010018  88A0               	bsf	4000,4,c	;volatile
 48034                           
 48035                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 48036  01001A  0E04               	movlw	4
 48037  01001C  6E5E               	movwf	_USBDeviceState,c	;volatile
 48038                           
 48039                           ;usb_device.c: 681: (UIR &= 0xFE);
 48040  01001E  9062               	bcf	3938,0,c	;volatile
 48041  010020                     i2l159:
 48042                           
 48043                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 48044  010020  A862               	btfss	3938,4,c	;volatile
 48045  010022  D004               	goto	i2l160
 48046  010024  010F               	movlb	15	; () banked
 48047  010026  B936               	btfsc	54,4,b	;volatile
 48048                           
 48049                           ; BSR set to: 15
 48050                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 48051  010028  EC14  F0AA         	call	_USBSuspend	;wreg free
 48052  01002C                     i2l160:
 48053                           
 48054                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 48055  01002C  AC62               	btfss	3938,6,c	;volatile
 48056  01002E  D01C               	goto	i2l164
 48057                           
 48058                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 48059  010030  010F               	movlb	15	; () banked
 48060  010032  AD36               	btfss	54,6,b	;volatile
 48061  010034  D00E               	goto	i2l162
 48062                           
 48063                           ; BSR set to: 15
 48064                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 48065  010036  0E00               	movlw	0
 48066  010038  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 48067  01003A  0E73               	movlw	115
 48068  01003C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 48069  01003E  0E00               	movlw	0
 48070  010040  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 48071  010042  0E00               	movlw	0
 48072  010044  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 48073  010046  0E00               	movlw	0
 48074  010048  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 48075  01004A  0E01               	movlw	1
 48076  01004C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 48077  01004E  EC74  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 48078  010052                     i2l162:
 48079                           
 48080                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 48081  010052  9C62               	bcf	3938,6,c	;volatile
 48082                           
 48083                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 48084  010054  ECE0  F0AB         	call	_USBIncrement1msInternalTimers	;wreg free
 48085                           
 48086                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 48087  010058  0101               	movlb	1	; () banked
 48088  01005A  516A               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b	;volatile
 48089  01005C  A4D8               	btfss	status,2,c
 48090                           
 48091                           ; BSR set to: 1
 48092                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 48093  01005E  076A               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b	;volatile
 48094                           
 48095                           ; BSR set to: 1
 48096                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 48097                           
 48098                           ; BSR set to: 1
 48099  010060  516A               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b	;volatile
 48100  010062  B4D8               	btfsc	status,2,c
 48101                           
 48102                           ; BSR set to: 1
 48103                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 48104  010064  EC4A  F094         	call	_USBCtrlEPAllowStatusStage	;wreg free
 48105  010068                     i2l164:
 48106                           
 48107                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 48108  010068  AA62               	btfss	3938,5,c	;volatile
 48109  01006A  D004               	goto	i2l165
 48110  01006C  010F               	movlb	15	; () banked
 48111  01006E  BB36               	btfsc	54,5,b	;volatile
 48112                           
 48113                           ; BSR set to: 15
 48114                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 48115  010070  EC03  F0A8         	call	_USBStallHandler	;wreg free
 48116  010074                     i2l165:
 48117                           
 48118                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 48119  010074  A262               	btfss	3938,1,c	;volatile
 48120  010076  D012               	goto	i2l166
 48121  010078  010F               	movlb	15	; () banked
 48122  01007A  A336               	btfss	54,1,b	;volatile
 48123  01007C  D00F               	goto	i2l166
 48124                           
 48125                           ; BSR set to: 15
 48126                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 48127  01007E  0E7F               	movlw	127
 48128  010080  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 48129  010082  6810               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 48130  010084  0E00               	movlw	0
 48131  010086  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 48132  010088  0E00               	movlw	0
 48133  01008A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 48134  01008C  0E00               	movlw	0
 48135  01008E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 48136  010090  0E01               	movlw	1
 48137  010092  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 48138  010094  EC74  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 48139                           
 48140                           ;usb_device.c: 759: {UEIR = 0;};
 48141  010098  0E00               	movlw	0
 48142  01009A  6E63               	movwf	3939,c	;volatile
 48143  01009C                     i2l166:
 48144                           
 48145                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 48146  01009C  0E04               	movlw	4
 48147  01009E  605E               	cpfslt	_USBDeviceState,c	;volatile
 48148  0100A0  D002               	goto	i2l167
 48149                           
 48150                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 48151  0100A2  98A1               	bcf	4001,4,c	;volatile
 48152                           
 48153                           ;usb_device.c: 777: return;
 48154  0100A4  0012               	return	
 48155  0100A6                     i2l167:
 48156                           
 48157                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 48158  0100A6  010F               	movlb	15	; () banked
 48159  0100A8  A736               	btfss	54,3,b	;volatile
 48160  0100AA  D039               	goto	i2u1704_40
 48161                           
 48162                           ; BSR set to: 15
 48163                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 48164  0100AC  0E00               	movlw	0
 48165  0100AE  6E1F               	movwf	USBDeviceTasks@i,c
 48166  0100B0                     i2l17561:
 48167                           
 48168                           ; BSR set to: 15
 48169  0100B0  0E03               	movlw	3
 48170  0100B2  641F               	cpfsgt	USBDeviceTasks@i,c
 48171  0100B4  D001               	goto	i2l169
 48172  0100B6  D033               	goto	i2u1704_40
 48173  0100B8                     i2l169:
 48174                           
 48175                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 48176  0100B8  A662               	btfss	3938,3,c	;volatile
 48177  0100BA  D031               	goto	i2u1704_40
 48178                           
 48179                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 48180  0100BC  CF64 F1C1          	movff	3940,_USTATcopy	;volatile
 48181                           
 48182                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 48183  0100C0  0101               	movlb	1	; () banked
 48184  0100C2  31C1               	rrcf	_USTATcopy& (0+255),w,b	;volatile
 48185  0100C4  32E8               	rrcf	wreg,f,c
 48186  0100C6  32E8               	rrcf	wreg,f,c
 48187  0100C8  0B0F               	andlw	15
 48188  0100CA  6F6C               	movwf	_endpoint_number& (0+255),b	;volatile
 48189                           
 48190                           ; BSR set to: 1
 48191                           ;usb_device.c: 793: (UIR &= 0xF7);
 48192  0100CC  9662               	bcf	3938,3,c	;volatile
 48193                           
 48194                           ; BSR set to: 1
 48195                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 48196  0100CE  B5C1               	btfsc	_USTATcopy& (0+255),2,b	;volatile
 48197  0100D0  D007               	goto	i2l172
 48198                           
 48199                           ; BSR set to: 1
 48200                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 48201  0100D2  516C               	movf	_endpoint_number& (0+255),w,b	;volatile
 48202  0100D4  0D01               	mullw	1
 48203  0100D6  0E39               	movlw	low _ep_data_out
 48204  0100D8  24F3               	addwf	prodl,w,c
 48205  0100DA  6ED9               	movwf	fsr2l,c
 48206  0100DC  0E01               	movlw	high _ep_data_out
 48207  0100DE  D006               	goto	L76
 48208  0100E0                     i2l172:
 48209                           
 48210                           ; BSR set to: 1
 48211                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 48212                           
 48213                           ; BSR set to: 1
 48214  0100E0  516C               	movf	_endpoint_number& (0+255),w,b	;volatile
 48215  0100E2  0D01               	mullw	1
 48216  0100E4  0E3C               	movlw	low _ep_data_in
 48217  0100E6  24F3               	addwf	prodl,w,c
 48218  0100E8  6ED9               	movwf	fsr2l,c
 48219  0100EA  0E01               	movlw	high _ep_data_in
 48220  0100EC                     L76:
 48221  0100EC  20F4               	addwfc	prodh,w,c
 48222  0100EE  6EDA               	movwf	fsr2h,c
 48223  0100F0  70DF               	btg	indf2,0,c
 48224                           
 48225                           ; BSR set to: 1
 48226                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 48227                           
 48228                           ; BSR set to: 1
 48229  0100F2  516C               	movf	_endpoint_number& (0+255),w,b	;volatile
 48230  0100F4  A4D8               	btfss	status,2,c
 48231  0100F6  D003               	goto	i2l174
 48232                           
 48233                           ; BSR set to: 1
 48234                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 48235  0100F8  ECD5  F099         	call	_USBCtrlEPService	;wreg free
 48236                           
 48237                           ;usb_device.c: 813: }
 48238  0100FC  D00E               	goto	i2l176
 48239  0100FE                     i2l174:
 48240                           
 48241                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 48242  0100FE  0E00               	movlw	0
 48243  010100  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 48244  010102  0E72               	movlw	114
 48245  010104  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 48246  010106  0EC1               	movlw	low _USTATcopy
 48247  010108  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 48248  01010A  0E01               	movlw	high _USTATcopy
 48249  01010C  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 48250  01010E  0E00               	movlw	0
 48251  010110  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 48252  010112  0E00               	movlw	0
 48253  010114  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 48254  010116  EC74  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 48255  01011A                     i2l176:
 48256  01011A  2A1F               	incf	USBDeviceTasks@i,f,c
 48257  01011C  D7C9               	goto	i2l17561
 48258  01011E                     i2u1704_40:
 48259                           
 48260                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 48261  01011E  98A1               	bcf	4001,4,c	;volatile
 48262  010120  0012               	return		;funcret
 48263  010122                     __end_of_USBDeviceTasks:
 48264                           	opt stack 0
 48265                           tosu	equ	0xFFF
 48266                           tosh	equ	0xFFE
 48267                           tosl	equ	0xFFD
 48268                           pclatu	equ	0xFFB
 48269                           pclath	equ	0xFFA
 48270                           tblptru	equ	0xFF8
 48271                           tblptrh	equ	0xFF7
 48272                           tblptrl	equ	0xFF6
 48273                           tablat	equ	0xFF5
 48274                           prodh	equ	0xFF4
 48275                           prodl	equ	0xFF3
 48276                           intcon	equ	0xFF2
 48277                           indf0	equ	0xFEF
 48278                           postinc0	equ	0xFEE
 48279                           fsr0h	equ	0xFEA
 48280                           fsr0l	equ	0xFE9
 48281                           wreg	equ	0xFE8
 48282                           indf1	equ	0xFE7
 48283                           postinc1	equ	0xFE6
 48284                           postdec1	equ	0xFE5
 48285                           plusw1	equ	0xFE3
 48286                           fsr1h	equ	0xFE2
 48287                           fsr1l	equ	0xFE1
 48288                           indf2	equ	0xFDF
 48289                           postinc2	equ	0xFDE
 48290                           postdec2	equ	0xFDD
 48291                           plusw2	equ	0xFDB
 48292                           fsr2h	equ	0xFDA
 48293                           fsr2l	equ	0xFD9
 48294                           status	equ	0xFD8
 48295                           
 48296 ;; *************** function i2_USBDeviceInit *****************
 48297 ;; Defined at:
 48298 ;;		line 277 in file "usb_device.c"
 48299 ;; Parameters:    Size  Location     Type
 48300 ;;		None
 48301 ;; Auto vars:     Size  Location     Type
 48302 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 48303 ;; Return value:  Size  Location     Type
 48304 ;;                  1    wreg      void 
 48305 ;; Registers used:
 48306 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 48307 ;; Tracked objects:
 48308 ;;		On entry : 0/0
 48309 ;;		On exit  : 0/0
 48310 ;;		Unchanged: 0/0
 48311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48313 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48315 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48316 ;;Total ram usage:        1 bytes
 48317 ;; Hardware stack levels used:    1
 48318 ;; Hardware stack levels required when called:    1
 48319 ;; This function calls:
 48320 ;;		i2_memset
 48321 ;; This function is called by:
 48322 ;;		_USBDeviceTasks
 48323 ;; This function uses a non-reentrant model
 48324 ;;
 48325                           
 48326                           	psect	text198
 48327  010122                     __ptext198:
 48328                           	opt stack 0
 48329  010122                     i2_USBDeviceInit:
 48330                           	opt stack 15
 48331                           
 48332                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 48333                           
 48334                           ;incstack = 0
 48335  010122  98A0               	bcf	4000,4,c	;volatile
 48336                           
 48337                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 48338  010124  0E00               	movlw	0
 48339  010126  6E63               	movwf	3939,c	;volatile
 48340                           
 48341                           ;usb_device.c: 291: {UIR = 0;};
 48342  010128  0E00               	movlw	0
 48343  01012A  6E62               	movwf	3938,c	;volatile
 48344                           
 48345                           ;usb_device.c: 294: UEP0 = 0;
 48346  01012C  0E00               	movlw	0
 48347  01012E  010F               	movlb	15	; () banked
 48348  010130  6F26               	movwf	38,b	;volatile
 48349                           
 48350                           ; BSR set to: 15
 48351                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 48352  010132  0E27               	movlw	39
 48353  010134  6E01               	movwf	i2memset@p1,c
 48354  010136  0E0F               	movlw	15
 48355  010138  6E02               	movwf	i2memset@p1+1,c
 48356  01013A  0E00               	movlw	0
 48357  01013C  6E04               	movwf	i2memset@c+1,c
 48358  01013E  0E00               	movlw	0
 48359  010140  6E03               	movwf	i2memset@c,c
 48360  010142  0E00               	movlw	0
 48361  010144  6E06               	movwf	i2memset@n+1,c
 48362  010146  0E02               	movlw	2
 48363  010148  6E05               	movwf	i2memset@n,c
 48364  01014A  EC86  F0AA         	call	i2_memset	;wreg free
 48365                           
 48366                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 48367  01014E  0E16               	movlw	22
 48368  010150  010F               	movlb	15	; () banked
 48369  010152  6F39               	movwf	57,b	;volatile
 48370                           
 48371                           ; BSR set to: 15
 48372  010154  0E9F               	movlw	159
 48373  010156  6F37               	movwf	55,b	;volatile
 48374                           
 48375                           ; BSR set to: 15
 48376  010158  0E7B               	movlw	123
 48377  01015A  6F36               	movwf	54,b	;volatile
 48378                           
 48379                           ; BSR set to: 15
 48380                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 48381  01015C  0E00               	movlw	0
 48382  01015E  6E09               	movwf	i2USBDeviceInit@i,c
 48383  010160                     i2l17355:
 48384                           
 48385                           ; BSR set to: 15
 48386  010160  0E0B               	movlw	11
 48387  010162  6409               	cpfsgt	i2USBDeviceInit@i,c
 48388  010164  D001               	goto	i2l145
 48389  010166  D00E               	goto	i2u1672_40
 48390  010168                     i2l145:
 48391                           
 48392                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 48393                           
 48394                           ; BSR set to: 15
 48395  010168  5009               	movf	i2USBDeviceInit@i,w,c
 48396  01016A  0D04               	mullw	4
 48397  01016C  0E00               	movlw	0
 48398  01016E  24F3               	addwf	prodl,w,c
 48399  010170  6ED9               	movwf	fsr2l,c
 48400  010172  0E0D               	movlw	13
 48401  010174  20F4               	addwfc	prodh,w,c
 48402  010176  6EDA               	movwf	fsr2h,c
 48403  010178  6ADE               	clrf	postinc2,c
 48404  01017A  6ADE               	clrf	postinc2,c
 48405  01017C  6ADE               	clrf	postinc2,c
 48406  01017E  6ADD               	clrf	postdec2,c
 48407  010180  2A09               	incf	i2USBDeviceInit@i,f,c
 48408  010182  D7EE               	goto	i2l17355
 48409  010184                     i2u1672_40:
 48410                           
 48411                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 48412  010184  8C65               	bsf	3941,6,c	;volatile
 48413                           
 48414                           ;usb_device.c: 316: UADDR = 0x00;
 48415  010186  0E00               	movlw	0
 48416  010188  010F               	movlb	15	; () banked
 48417  01018A  6F38               	movwf	56,b	;volatile
 48418                           
 48419                           ; BSR set to: 15
 48420                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 48421  01018C  9865               	bcf	3941,4,c	;volatile
 48422                           
 48423                           ; BSR set to: 15
 48424                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 48425  01018E  9C65               	bcf	3941,6,c	;volatile
 48426  010190                     
 48427                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 48428                           
 48429                           ; BSR set to: 15
 48430  010190  9662               	bcf	3938,3,c	;volatile
 48431                           
 48432                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 48433  010192  0E00               	movlw	0
 48434  010194  6E55               	movwf	_inPipes+3,c	;volatile
 48435                           
 48436                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 48437  010196  0E00               	movlw	0
 48438  010198  0101               	movlb	1	; () banked
 48439  01019A  6F15               	movwf	(_outPipes+3)& (0+255),b	;volatile
 48440                           
 48441                           ; BSR set to: 1
 48442                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 48443  01019C  0E00               	movlw	0
 48444  01019E  6F17               	movwf	(_outPipes+5)& (0+255),b	;volatile
 48445  0101A0  0E00               	movlw	0
 48446  0101A2  6F16               	movwf	(_outPipes+4)& (0+255),b	;volatile
 48447                           
 48448                           ; BSR set to: 1
 48449                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 48450  0101A4  B662               	btfsc	3938,3,c	;volatile
 48451  0101A6  D7F4               	goto	i2l147
 48452                           
 48453                           ; BSR set to: 1
 48454                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 48455                           
 48456                           ; BSR set to: 1
 48457  0101A8  0E01               	movlw	1
 48458  0101AA  6F68               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 48459                           
 48460                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 48461  0101AC  0E01               	movlw	1
 48462  0101AE  6F67               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 48463                           
 48464                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 48465  0101B0  0E00               	movlw	0
 48466  0101B2  6F66               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 48467                           
 48468                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 48469  0101B4  0E00               	movlw	0
 48470  0101B6  6F65               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 48471                           
 48472                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 48473  0101B8  0E00               	movlw	0
 48474  0101BA  6F6D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 48475                           
 48476                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 48477  0101BC  0E00               	movlw	0
 48478  0101BE  6E09               	movwf	i2USBDeviceInit@i,c
 48479  0101C0                     i2l17383:
 48480                           
 48481                           ; BSR set to: 1
 48482  0101C0  0E02               	movlw	2
 48483  0101C2  6409               	cpfsgt	i2USBDeviceInit@i,c
 48484  0101C4  D001               	goto	i2l149
 48485  0101C6  D02E               	goto	i2u1675_40
 48486  0101C8                     i2l149:
 48487                           
 48488                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 48489                           
 48490                           ; BSR set to: 1
 48491  0101C8  5009               	movf	i2USBDeviceInit@i,w,c
 48492  0101CA  0D02               	mullw	2
 48493  0101CC  0E1B               	movlw	low _pBDTEntryIn
 48494  0101CE  24F3               	addwf	prodl,w,c
 48495  0101D0  6ED9               	movwf	fsr2l,c
 48496  0101D2  0E01               	movlw	high _pBDTEntryIn
 48497  0101D4  20F4               	addwfc	prodh,w,c
 48498  0101D6  6EDA               	movwf	fsr2h,c
 48499  0101D8  0E00               	movlw	0
 48500  0101DA  6EDE               	movwf	postinc2,c
 48501  0101DC  0E00               	movlw	0
 48502  0101DE  6EDD               	movwf	postdec2,c
 48503                           
 48504                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 48505  0101E0  5009               	movf	i2USBDeviceInit@i,w,c
 48506  0101E2  0D02               	mullw	2
 48507  0101E4  0E21               	movlw	low _pBDTEntryOut
 48508  0101E6  24F3               	addwf	prodl,w,c
 48509  0101E8  6ED9               	movwf	fsr2l,c
 48510  0101EA  0E01               	movlw	high _pBDTEntryOut
 48511  0101EC  20F4               	addwfc	prodh,w,c
 48512  0101EE  6EDA               	movwf	fsr2h,c
 48513  0101F0  0E00               	movlw	0
 48514  0101F2  6EDE               	movwf	postinc2,c
 48515  0101F4  0E00               	movlw	0
 48516  0101F6  6EDD               	movwf	postdec2,c
 48517                           
 48518                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 48519  0101F8  5009               	movf	i2USBDeviceInit@i,w,c
 48520  0101FA  0D01               	mullw	1
 48521  0101FC  0E3C               	movlw	low _ep_data_in
 48522  0101FE  24F3               	addwf	prodl,w,c
 48523  010200  6ED9               	movwf	fsr2l,c
 48524  010202  0E01               	movlw	high _ep_data_in
 48525  010204  20F4               	addwfc	prodh,w,c
 48526  010206  6EDA               	movwf	fsr2h,c
 48527  010208  0E00               	movlw	0
 48528  01020A  6EDF               	movwf	indf2,c
 48529                           
 48530                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 48531  01020C  5009               	movf	i2USBDeviceInit@i,w,c
 48532  01020E  0D01               	mullw	1
 48533  010210  0E39               	movlw	low _ep_data_out
 48534  010212  24F3               	addwf	prodl,w,c
 48535  010214  6ED9               	movwf	fsr2l,c
 48536  010216  0E01               	movlw	high _ep_data_out
 48537  010218  20F4               	addwfc	prodh,w,c
 48538  01021A  6EDA               	movwf	fsr2h,c
 48539  01021C  0E00               	movlw	0
 48540  01021E  6EDF               	movwf	indf2,c
 48541  010220  2A09               	incf	i2USBDeviceInit@i,f,c
 48542  010222  D7CE               	goto	i2l17383
 48543  010224                     i2u1675_40:
 48544                           
 48545                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 48546  010224  0E08               	movlw	8
 48547  010226  0101               	movlb	1	; () banked
 48548  010228  6F1B               	movwf	_pBDTEntryIn& (0+255),b
 48549  01022A  0E0D               	movlw	13
 48550  01022C  6F1C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 48551                           
 48552                           ; BSR set to: 1
 48553                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 48554  01022E  0E16               	movlw	22
 48555  010230  010F               	movlb	15	; () banked
 48556  010232  6F26               	movwf	38,b	;volatile
 48557                           
 48558                           ; BSR set to: 15
 48559                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 48560  010234  0E0D               	movlw	13
 48561  010236  010D               	movlb	13	; () banked
 48562  010238  6F03               	movwf	3,b	;volatile
 48563  01023A  0E30               	movlw	48
 48564  01023C  6F02               	movwf	2,b	;volatile
 48565                           
 48566                           ; BSR set to: 13
 48567                           ;usb_device.c: 359: BDT[0].CNT = 8;
 48568  01023E  0E08               	movlw	8
 48569  010240  6F01               	movwf	1,b	;volatile
 48570                           
 48571                           ; BSR set to: 13
 48572                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 48573  010242  0E04               	movlw	4
 48574  010244  6F00               	movwf	0,b	;volatile
 48575                           
 48576                           ; BSR set to: 13
 48577                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 48578  010246  8F00               	bsf	0,7,b	;volatile
 48579                           
 48580                           ; BSR set to: 13
 48581                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 48582  010248  0E00               	movlw	0
 48583  01024A  0101               	movlb	1	; () banked
 48584  01024C  6FC2               	movwf	_USBActiveConfiguration& (0+255),b	;volatile
 48585                           
 48586                           ; BSR set to: 1
 48587                           ;usb_device.c: 366: USB1msTickCount = 0;
 48588  01024E  0E00               	movlw	0
 48589  010250  6F2F               	movwf	_USB1msTickCount& (0+255),b	;volatile
 48590  010252  0E00               	movlw	0
 48591  010254  6F30               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 48592  010256  0E00               	movlw	0
 48593  010258  6F31               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 48594  01025A  0E00               	movlw	0
 48595  01025C  6F32               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 48596                           
 48597                           ; BSR set to: 1
 48598                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 48599  01025E  0E00               	movlw	0
 48600  010260  6F64               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 48601                           
 48602                           ; BSR set to: 1
 48603                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 48604  010262  0E00               	movlw	0
 48605  010264  6E5E               	movwf	_USBDeviceState,c	;volatile
 48606                           
 48607                           ; BSR set to: 1
 48608  010266  0012               	return		;funcret
 48609  010268                     __end_ofi2_USBDeviceInit:
 48610                           	opt stack 0
 48611                           tosu	equ	0xFFF
 48612                           tosh	equ	0xFFE
 48613                           tosl	equ	0xFFD
 48614                           pclatu	equ	0xFFB
 48615                           pclath	equ	0xFFA
 48616                           tblptru	equ	0xFF8
 48617                           tblptrh	equ	0xFF7
 48618                           tblptrl	equ	0xFF6
 48619                           tablat	equ	0xFF5
 48620                           prodh	equ	0xFF4
 48621                           prodl	equ	0xFF3
 48622                           intcon	equ	0xFF2
 48623                           indf0	equ	0xFEF
 48624                           postinc0	equ	0xFEE
 48625                           fsr0h	equ	0xFEA
 48626                           fsr0l	equ	0xFE9
 48627                           wreg	equ	0xFE8
 48628                           indf1	equ	0xFE7
 48629                           postinc1	equ	0xFE6
 48630                           postdec1	equ	0xFE5
 48631                           plusw1	equ	0xFE3
 48632                           fsr1h	equ	0xFE2
 48633                           fsr1l	equ	0xFE1
 48634                           indf2	equ	0xFDF
 48635                           postinc2	equ	0xFDE
 48636                           postdec2	equ	0xFDD
 48637                           plusw2	equ	0xFDB
 48638                           fsr2h	equ	0xFDA
 48639                           fsr2l	equ	0xFD9
 48640                           status	equ	0xFD8
 48641                           
 48642 ;; *************** function _USBWakeFromSuspend *****************
 48643 ;; Defined at:
 48644 ;;		line 2305 in file "usb_device.c"
 48645 ;; Parameters:    Size  Location     Type
 48646 ;;		None
 48647 ;; Auto vars:     Size  Location     Type
 48648 ;;		None
 48649 ;; Return value:  Size  Location     Type
 48650 ;;                  1    wreg      void 
 48651 ;; Registers used:
 48652 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 48653 ;; Tracked objects:
 48654 ;;		On entry : 0/0
 48655 ;;		On exit  : 0/0
 48656 ;;		Unchanged: 0/0
 48657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48662 ;;Total ram usage:        0 bytes
 48663 ;; Hardware stack levels used:    1
 48664 ;; Hardware stack levels required when called:    4
 48665 ;; This function calls:
 48666 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 48667 ;; This function is called by:
 48668 ;;		_USBDeviceTasks
 48669 ;; This function uses a non-reentrant model
 48670 ;;
 48671                           
 48672                           	psect	text199
 48673  015228                     __ptext199:
 48674                           	opt stack 0
 48675  015228                     _USBWakeFromSuspend:
 48676                           	opt stack 12
 48677                           
 48678                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 48679                           
 48680                           ; BSR set to: 1
 48681                           ;incstack = 0
 48682  015228  0E00               	movlw	0
 48683  01522A  0101               	movlb	1	; () banked
 48684  01522C  6F6D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 48685                           
 48686                           ; BSR set to: 1
 48687                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 48688  01522E  0E00               	movlw	0
 48689  015230  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 48690  015232  0E74               	movlw	116
 48691  015234  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 48692  015236  0E00               	movlw	0
 48693  015238  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 48694  01523A  0E00               	movlw	0
 48695  01523C  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 48696  01523E  0E00               	movlw	0
 48697  015240  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 48698  015242  0E00               	movlw	0
 48699  015244  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 48700  015246  EC74  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 48701                           
 48702                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 48703  01524A  9265               	bcf	3941,1,c	;volatile
 48704                           
 48705                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 48706  01524C  010F               	movlb	15	; () banked
 48707  01524E  9536               	bcf	54,2,b	;volatile
 48708                           
 48709                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 48710  015250  D001               	goto	i2l315
 48711  015252                     
 48712                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 48713                           
 48714                           ; BSR set to: 15
 48715  015252  9462               	bcf	3938,2,c	;volatile
 48716  015254                     i2l315:
 48717  015254  B462               	btfsc	3938,2,c	;volatile
 48718  015256  D7FD               	goto	i2l316
 48719                           
 48720                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 48721  015258  0E00               	movlw	0
 48722  01525A  0101               	movlb	1	; () banked
 48723  01525C  6F64               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 48724                           
 48725                           ; BSR set to: 1
 48726  01525E  0012               	return		;funcret
 48727  015260                     __end_of_USBWakeFromSuspend:
 48728                           	opt stack 0
 48729                           tosu	equ	0xFFF
 48730                           tosh	equ	0xFFE
 48731                           tosl	equ	0xFFD
 48732                           pclatu	equ	0xFFB
 48733                           pclath	equ	0xFFA
 48734                           tblptru	equ	0xFF8
 48735                           tblptrh	equ	0xFF7
 48736                           tblptrl	equ	0xFF6
 48737                           tablat	equ	0xFF5
 48738                           prodh	equ	0xFF4
 48739                           prodl	equ	0xFF3
 48740                           intcon	equ	0xFF2
 48741                           indf0	equ	0xFEF
 48742                           postinc0	equ	0xFEE
 48743                           fsr0h	equ	0xFEA
 48744                           fsr0l	equ	0xFE9
 48745                           wreg	equ	0xFE8
 48746                           indf1	equ	0xFE7
 48747                           postinc1	equ	0xFE6
 48748                           postdec1	equ	0xFE5
 48749                           plusw1	equ	0xFE3
 48750                           fsr1h	equ	0xFE2
 48751                           fsr1l	equ	0xFE1
 48752                           indf2	equ	0xFDF
 48753                           postinc2	equ	0xFDE
 48754                           postdec2	equ	0xFDD
 48755                           plusw2	equ	0xFDB
 48756                           fsr2h	equ	0xFDA
 48757                           fsr2l	equ	0xFD9
 48758                           status	equ	0xFD8
 48759                           
 48760 ;; *************** function _USBSuspend *****************
 48761 ;; Defined at:
 48762 ;;		line 2247 in file "usb_device.c"
 48763 ;; Parameters:    Size  Location     Type
 48764 ;;		None
 48765 ;; Auto vars:     Size  Location     Type
 48766 ;;		None
 48767 ;; Return value:  Size  Location     Type
 48768 ;;                  1    wreg      void 
 48769 ;; Registers used:
 48770 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 48771 ;; Tracked objects:
 48772 ;;		On entry : 0/0
 48773 ;;		On exit  : 0/0
 48774 ;;		Unchanged: 0/0
 48775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48780 ;;Total ram usage:        0 bytes
 48781 ;; Hardware stack levels used:    1
 48782 ;; Hardware stack levels required when called:    4
 48783 ;; This function calls:
 48784 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 48785 ;; This function is called by:
 48786 ;;		_USBDeviceTasks
 48787 ;; This function uses a non-reentrant model
 48788 ;;
 48789                           
 48790                           	psect	text200
 48791  015428                     __ptext200:
 48792                           	opt stack 0
 48793  015428                     _USBSuspend:
 48794                           	opt stack 12
 48795                           
 48796                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 48797                           
 48798                           ; BSR set to: 1
 48799                           ;incstack = 0
 48800  015428  010F               	movlb	15	; () banked
 48801  01542A  8536               	bsf	54,2,b	;volatile
 48802                           
 48803                           ; BSR set to: 15
 48804                           ;usb_device.c: 2273: (UIR &= 0xEF);
 48805  01542C  9862               	bcf	3938,4,c	;volatile
 48806                           
 48807                           ; BSR set to: 15
 48808                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 48809  01542E  8265               	bsf	3941,1,c	;volatile
 48810                           
 48811                           ; BSR set to: 15
 48812                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 48813  015430  0E01               	movlw	1
 48814  015432  0101               	movlb	1	; () banked
 48815  015434  6F6D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 48816                           
 48817                           ; BSR set to: 1
 48818                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 48819  015436  0E00               	movlw	0
 48820  015438  6F64               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 48821                           
 48822                           ; BSR set to: 1
 48823                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 48824  01543A  0E00               	movlw	0
 48825  01543C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 48826  01543E  0E75               	movlw	117
 48827  015440  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 48828  015442  0E00               	movlw	0
 48829  015444  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 48830  015446  0E00               	movlw	0
 48831  015448  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 48832  01544A  0E00               	movlw	0
 48833  01544C  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 48834  01544E  0E00               	movlw	0
 48835  015450  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 48836  015452  EC74  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 48837  015456  0012               	return		;funcret
 48838  015458                     __end_of_USBSuspend:
 48839                           	opt stack 0
 48840                           tosu	equ	0xFFF
 48841                           tosh	equ	0xFFE
 48842                           tosl	equ	0xFFD
 48843                           pclatu	equ	0xFFB
 48844                           pclath	equ	0xFFA
 48845                           tblptru	equ	0xFF8
 48846                           tblptrh	equ	0xFF7
 48847                           tblptrl	equ	0xFF6
 48848                           tablat	equ	0xFF5
 48849                           prodh	equ	0xFF4
 48850                           prodl	equ	0xFF3
 48851                           intcon	equ	0xFF2
 48852                           indf0	equ	0xFEF
 48853                           postinc0	equ	0xFEE
 48854                           fsr0h	equ	0xFEA
 48855                           fsr0l	equ	0xFE9
 48856                           wreg	equ	0xFE8
 48857                           indf1	equ	0xFE7
 48858                           postinc1	equ	0xFE6
 48859                           postdec1	equ	0xFE5
 48860                           plusw1	equ	0xFE3
 48861                           fsr1h	equ	0xFE2
 48862                           fsr1l	equ	0xFE1
 48863                           indf2	equ	0xFDF
 48864                           postinc2	equ	0xFDE
 48865                           postdec2	equ	0xFDD
 48866                           plusw2	equ	0xFDB
 48867                           fsr2h	equ	0xFDA
 48868                           fsr2l	equ	0xFD9
 48869                           status	equ	0xFD8
 48870                           
 48871 ;; *************** function _USBStallHandler *****************
 48872 ;; Defined at:
 48873 ;;		line 2204 in file "usb_device.c"
 48874 ;; Parameters:    Size  Location     Type
 48875 ;;		None
 48876 ;; Auto vars:     Size  Location     Type
 48877 ;;		None
 48878 ;; Return value:  Size  Location     Type
 48879 ;;                  1    wreg      void 
 48880 ;; Registers used:
 48881 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 48882 ;; Tracked objects:
 48883 ;;		On entry : 0/0
 48884 ;;		On exit  : 0/0
 48885 ;;		Unchanged: 0/0
 48886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48889 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48890 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48891 ;;Total ram usage:        1 bytes
 48892 ;; Hardware stack levels used:    1
 48893 ;; This function calls:
 48894 ;;		Nothing
 48895 ;; This function is called by:
 48896 ;;		_USBDeviceTasks
 48897 ;; This function uses a non-reentrant model
 48898 ;;
 48899                           
 48900                           	psect	text201
 48901  015006                     __ptext201:
 48902                           	opt stack 0
 48903  015006                     _USBStallHandler:
 48904                           	opt stack 16
 48905                           
 48906                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 48907                           
 48908                           ;incstack = 0
 48909  015006  010F               	movlb	15	; () banked
 48910  015008  A126               	btfss	38,0,b	;volatile
 48911  01500A  D01D               	goto	i2l307
 48912                           
 48913                           ; BSR set to: 15
 48914                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 48915  01500C  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 48916  015010  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 48917  015014  0E80               	movlw	128
 48918  015016  18DE               	xorwf	postinc2,w,c
 48919  015018  A4D8               	btfss	status,2,c
 48920  01501A  D014               	goto	i2l308
 48921                           
 48922                           ; BSR set to: 15
 48923  01501C  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 48924  015020  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 48925  015024  0E84               	movlw	132
 48926  015026  18DE               	xorwf	postinc2,w,c
 48927  015028  A4D8               	btfss	status,2,c
 48928  01502A  D00C               	goto	i2l308
 48929                           
 48930                           ; BSR set to: 15
 48931                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 48932  01502C  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 48933  015030  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 48934  015034  0E0C               	movlw	12
 48935  015036  6EDF               	movwf	indf2,c
 48936                           
 48937                           ; BSR set to: 15
 48938                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 48939  015038  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 48940  01503C  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 48941  015040  0E00               	movlw	0
 48942  015042  8EDB               	bsf	plusw2,7,c
 48943  015044                     i2l308:
 48944                           
 48945                           ; BSR set to: 15
 48946                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 48947                           
 48948                           ; BSR set to: 15
 48949  015044  9126               	bcf	38,0,b	;volatile
 48950  015046                     i2l307:
 48951                           
 48952                           ; BSR set to: 15
 48953                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 48954  015046  9A62               	bcf	3938,5,c	;volatile
 48955                           
 48956                           ; BSR set to: 15
 48957  015048  0012               	return		;funcret
 48958  01504A                     __end_of_USBStallHandler:
 48959                           	opt stack 0
 48960                           tosu	equ	0xFFF
 48961                           tosh	equ	0xFFE
 48962                           tosl	equ	0xFFD
 48963                           pclatu	equ	0xFFB
 48964                           pclath	equ	0xFFA
 48965                           tblptru	equ	0xFF8
 48966                           tblptrh	equ	0xFF7
 48967                           tblptrl	equ	0xFF6
 48968                           tablat	equ	0xFF5
 48969                           prodh	equ	0xFF4
 48970                           prodl	equ	0xFF3
 48971                           intcon	equ	0xFF2
 48972                           indf0	equ	0xFEF
 48973                           postinc0	equ	0xFEE
 48974                           fsr0h	equ	0xFEA
 48975                           fsr0l	equ	0xFE9
 48976                           wreg	equ	0xFE8
 48977                           indf1	equ	0xFE7
 48978                           postinc1	equ	0xFE6
 48979                           postdec1	equ	0xFE5
 48980                           plusw1	equ	0xFE3
 48981                           fsr1h	equ	0xFE2
 48982                           fsr1l	equ	0xFE1
 48983                           indf2	equ	0xFDF
 48984                           postinc2	equ	0xFDE
 48985                           postdec2	equ	0xFDD
 48986                           plusw2	equ	0xFDB
 48987                           fsr2h	equ	0xFDA
 48988                           fsr2l	equ	0xFD9
 48989                           status	equ	0xFD8
 48990                           
 48991 ;; *************** function _USBIncrement1msInternalTimers *****************
 48992 ;; Defined at:
 48993 ;;		line 3027 in file "usb_device.c"
 48994 ;; Parameters:    Size  Location     Type
 48995 ;;		None
 48996 ;; Auto vars:     Size  Location     Type
 48997 ;;		None
 48998 ;; Return value:  Size  Location     Type
 48999 ;;                  1    wreg      void 
 49000 ;; Registers used:
 49001 ;;		wreg, status,2, status,0
 49002 ;; Tracked objects:
 49003 ;;		On entry : 0/0
 49004 ;;		On exit  : 0/0
 49005 ;;		Unchanged: 0/0
 49006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49011 ;;Total ram usage:        0 bytes
 49012 ;; Hardware stack levels used:    1
 49013 ;; This function calls:
 49014 ;;		Nothing
 49015 ;; This function is called by:
 49016 ;;		_USBDeviceTasks
 49017 ;; This function uses a non-reentrant model
 49018 ;;
 49019                           
 49020                           	psect	text202
 49021  0157C0                     __ptext202:
 49022                           	opt stack 0
 49023  0157C0                     _USBIncrement1msInternalTimers:
 49024                           	opt stack 16
 49025                           
 49026                           ;usb_device.c: 3035: USB1msTickCount++;
 49027                           
 49028                           ; BSR set to: 15
 49029                           ;incstack = 0
 49030  0157C0  0E01               	movlw	1
 49031  0157C2  0101               	movlb	1	; () banked
 49032  0157C4  272F               	addwf	_USB1msTickCount& (0+255),f,b	;volatile
 49033  0157C6  0E00               	movlw	0
 49034  0157C8  2330               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
 49035  0157CA  2331               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
 49036  0157CC  2332               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
 49037                           
 49038                           ; BSR set to: 1
 49039                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 49040  0157CE  516D               	movf	_USBBusIsSuspended& (0+255),w,b	;volatile
 49041  0157D0  A4D8               	btfss	status,2,c
 49042  0157D2  0012               	return	
 49043                           
 49044                           ; BSR set to: 1
 49045                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 49046  0157D4  2B64               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
 49047                           
 49048                           ; BSR set to: 1
 49049                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 49050  0157D6  5164               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
 49051  0157D8  A4D8               	btfss	status,2,c
 49052  0157DA  0012               	return	
 49053                           
 49054                           ; BSR set to: 1
 49055                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 49056  0157DC  6964               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 49057                           
 49058                           ; BSR set to: 1
 49059  0157DE  0012               	return	
 49060  0157E0                     __end_of_USBIncrement1msInternalTimers:
 49061                           	opt stack 0
 49062                           tosu	equ	0xFFF
 49063                           tosh	equ	0xFFE
 49064                           tosl	equ	0xFFD
 49065                           pclatu	equ	0xFFB
 49066                           pclath	equ	0xFFA
 49067                           tblptru	equ	0xFF8
 49068                           tblptrh	equ	0xFF7
 49069                           tblptrl	equ	0xFF6
 49070                           tablat	equ	0xFF5
 49071                           prodh	equ	0xFF4
 49072                           prodl	equ	0xFF3
 49073                           intcon	equ	0xFF2
 49074                           indf0	equ	0xFEF
 49075                           postinc0	equ	0xFEE
 49076                           fsr0h	equ	0xFEA
 49077                           fsr0l	equ	0xFE9
 49078                           wreg	equ	0xFE8
 49079                           indf1	equ	0xFE7
 49080                           postinc1	equ	0xFE6
 49081                           postdec1	equ	0xFE5
 49082                           plusw1	equ	0xFE3
 49083                           fsr1h	equ	0xFE2
 49084                           fsr1l	equ	0xFE1
 49085                           indf2	equ	0xFDF
 49086                           postinc2	equ	0xFDE
 49087                           postdec2	equ	0xFDD
 49088                           plusw2	equ	0xFDB
 49089                           fsr2h	equ	0xFDA
 49090                           fsr2l	equ	0xFD9
 49091                           status	equ	0xFD8
 49092                           
 49093 ;; *************** function _USBCtrlEPService *****************
 49094 ;; Defined at:
 49095 ;;		line 2374 in file "usb_device.c"
 49096 ;; Parameters:    Size  Location     Type
 49097 ;;		None
 49098 ;; Auto vars:     Size  Location     Type
 49099 ;;		None
 49100 ;; Return value:  Size  Location     Type
 49101 ;;                  1    wreg      void 
 49102 ;; Registers used:
 49103 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 49104 ;; Tracked objects:
 49105 ;;		On entry : 0/0
 49106 ;;		On exit  : 0/0
 49107 ;;		Unchanged: 0/0
 49108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49111 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49112 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49113 ;;Total ram usage:        1 bytes
 49114 ;; Hardware stack levels used:    1
 49115 ;; Hardware stack levels required when called:    7
 49116 ;; This function calls:
 49117 ;;		_USBCtrlTrfInHandler
 49118 ;;		_USBCtrlTrfOutHandler
 49119 ;;		_USBCtrlTrfSetupHandler
 49120 ;;		i2_memcpy
 49121 ;; This function is called by:
 49122 ;;		_USBDeviceTasks
 49123 ;; This function uses a non-reentrant model
 49124 ;;
 49125                           
 49126                           	psect	text203
 49127  0133AA                     __ptext203:
 49128                           	opt stack 0
 49129  0133AA                     _USBCtrlEPService:
 49130                           	opt stack 9
 49131                           
 49132                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 49133                           
 49134                           ; BSR set to: 1
 49135                           ;incstack = 0
 49136  0133AA  0E2D               	movlw	45
 49137  0133AC  0101               	movlb	1	; () banked
 49138  0133AE  6F6A               	movwf	_USBStatusStageTimeoutCounter& (0+255),b	;volatile
 49139                           
 49140                           ; BSR set to: 1
 49141                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 49142  0133B0  C1C1  F01E         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 49143  0133B4  0EFD               	movlw	253
 49144  0133B6  161E               	andwf	??_USBCtrlEPService,f,c
 49145  0133B8  A4D8               	btfss	status,2,c
 49146  0133BA  D03B               	goto	i2l321
 49147                           
 49148                           ; BSR set to: 1
 49149                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 49150  0133BC  C1C1  F01E         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 49151  0133C0  90D8               	bcf	status,0,c
 49152  0133C2  321E               	rrcf	??_USBCtrlEPService,f,c
 49153  0133C4  0E3F               	movlw	63
 49154  0133C6  161E               	andwf	??_USBCtrlEPService,f,c
 49155  0133C8  501E               	movf	??_USBCtrlEPService,w,c
 49156  0133CA  0D04               	mullw	4
 49157  0133CC  0E00               	movlw	0
 49158  0133CE  24F3               	addwf	prodl,w,c
 49159  0133D0  6F51               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 49160  0133D2  0E0D               	movlw	13
 49161  0133D4  20F4               	addwfc	prodh,w,c
 49162  0133D6  6F52               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 49163                           
 49164                           ; BSR set to: 1
 49165                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 49166  0133D8  C151  F05C         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 49167  0133DC  C152  F05D         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 49168                           
 49169                           ; BSR set to: 1
 49170                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 49171  0133E0  0E04               	movlw	4
 49172  0133E2  185C               	xorwf	_pBDTEntryEP0OutNext,w,c
 49173  0133E4  6E5C               	movwf	_pBDTEntryEP0OutNext,c
 49174  0133E6  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 49175  0133E8  6E5D               	movwf	_pBDTEntryEP0OutNext+1,c
 49176                           
 49177                           ; BSR set to: 1
 49178                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 49179  0133EA  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 49180  0133EE  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 49181  0133F2  30DF               	rrcf	223,w,c
 49182  0133F4  32E8               	rrcf	wreg,f,c
 49183  0133F6  0B0F               	andlw	15
 49184  0133F8  0A0D               	xorlw	13
 49185  0133FA  A4D8               	btfss	status,2,c
 49186  0133FC  D017               	goto	i2l322
 49187                           
 49188                           ; BSR set to: 1
 49189                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 49190  0133FE  0E30               	movlw	48
 49191  013400  6E01               	movwf	i2memcpy@d1,c
 49192  013402  0E0D               	movlw	13
 49193  013404  6E02               	movwf	i2memcpy@d1+1,c
 49194  013406  EE20 F002          	lfsr	2,2
 49195  01340A  5151               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 49196  01340C  26D9               	addwf	fsr2l,f,c
 49197  01340E  5152               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 49198  013410  22DA               	addwfc	fsr2h,f,c
 49199  013412  CFDE F003          	movff	postinc2,i2memcpy@s1
 49200  013416  CFDD F004          	movff	postdec2,i2memcpy@s1+1
 49201  01341A  0E00               	movlw	0
 49202  01341C  6E06               	movwf	i2memcpy@n+1,c
 49203  01341E  0E08               	movlw	8
 49204  013420  6E05               	movwf	i2memcpy@n,c
 49205  013422  EC94  F0A2         	call	i2_memcpy	;wreg free
 49206                           
 49207                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 49208  013426  EC2C  F09C         	call	_USBCtrlTrfSetupHandler	;wreg free
 49209                           
 49210                           ;usb_device.c: 2411: }
 49211  01342A  0012               	return	
 49212  01342C                     i2l322:
 49213                           
 49214                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 49215  01342C  EC35  F0A2         	call	_USBCtrlTrfOutHandler	;wreg free
 49216                           
 49217                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 49218  013430  0012               	return	
 49219  013432                     i2l321:
 49220                           
 49221                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 49222  013432  0101               	movlb	1	; () banked
 49223  013434  51C1               	movf	_USTATcopy& (0+255),w,b	;volatile
 49224  013436  0BFD               	andlw	253
 49225  013438  0A04               	xorlw	4
 49226  01343A  A4D8               	btfss	status,2,c
 49227  01343C  0012               	return	
 49228                           
 49229                           ; BSR set to: 1
 49230                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 49231  01343E  ECAC  F094         	call	_USBCtrlTrfInHandler	;wreg free
 49232  013442  0012               	return	
 49233  013444                     __end_of_USBCtrlEPService:
 49234                           	opt stack 0
 49235                           tosu	equ	0xFFF
 49236                           tosh	equ	0xFFE
 49237                           tosl	equ	0xFFD
 49238                           pclatu	equ	0xFFB
 49239                           pclath	equ	0xFFA
 49240                           tblptru	equ	0xFF8
 49241                           tblptrh	equ	0xFF7
 49242                           tblptrl	equ	0xFF6
 49243                           tablat	equ	0xFF5
 49244                           prodh	equ	0xFF4
 49245                           prodl	equ	0xFF3
 49246                           intcon	equ	0xFF2
 49247                           indf0	equ	0xFEF
 49248                           postinc0	equ	0xFEE
 49249                           fsr0h	equ	0xFEA
 49250                           fsr0l	equ	0xFE9
 49251                           wreg	equ	0xFE8
 49252                           indf1	equ	0xFE7
 49253                           postinc1	equ	0xFE6
 49254                           postdec1	equ	0xFE5
 49255                           plusw1	equ	0xFE3
 49256                           fsr1h	equ	0xFE2
 49257                           fsr1l	equ	0xFE1
 49258                           indf2	equ	0xFDF
 49259                           postinc2	equ	0xFDE
 49260                           postdec2	equ	0xFDD
 49261                           plusw2	equ	0xFDB
 49262                           fsr2h	equ	0xFDA
 49263                           fsr2l	equ	0xFD9
 49264                           status	equ	0xFD8
 49265                           
 49266 ;; *************** function i2_memcpy *****************
 49267 ;; Defined at:
 49268 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 49269 ;; Parameters:    Size  Location     Type
 49270 ;;  d1              2    0[COMRAM] PTR void 
 49271 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 49272 ;;		 -> msd_buffer(512), SetupPkt(8), 
 49273 ;;  s1              2    2[COMRAM] PTR const void 
 49274 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 49275 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 49276 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 49277 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 49278 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main(80), dc_startup(80), 
 49279 ;;		 -> config(28), ReceivedDataBuffer(64), os(48), inq_resp(36), 
 49280 ;;		 -> CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 49281 ;;  n               2    4[COMRAM] unsigned int 
 49282 ;; Auto vars:     Size  Location     Type
 49283 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
 49284 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 49285 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 49286 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 49287 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 49288 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main(80), dc_startup(80), 
 49289 ;;		 -> config(28), ReceivedDataBuffer(64), os(48), inq_resp(36), 
 49290 ;;		 -> CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 49291 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
 49292 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 49293 ;;		 -> msd_buffer(512), SetupPkt(8), 
 49294 ;;  memcpy          1   10[COMRAM] unsigned char 
 49295 ;; Return value:  Size  Location     Type
 49296 ;;                  2    0[COMRAM] PTR void 
 49297 ;; Registers used:
 49298 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 49299 ;; Tracked objects:
 49300 ;;		On entry : 0/0
 49301 ;;		On exit  : 0/0
 49302 ;;		Unchanged: 0/0
 49303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49304 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49305 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49307 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49308 ;;Total ram usage:       11 bytes
 49309 ;; Hardware stack levels used:    1
 49310 ;; This function calls:
 49311 ;;		Nothing
 49312 ;; This function is called by:
 49313 ;;		_USBCtrlEPService
 49314 ;; This function uses a non-reentrant model
 49315 ;;
 49316                           
 49317                           	psect	text204
 49318  014528                     __ptext204:
 49319                           	opt stack 0
 49320  014528                     i2_memcpy:
 49321                           	opt stack 15
 49322                           
 49323                           ;incstack = 0
 49324  014528  C003  F009         	movff	i2memcpy@s1,i2memcpy@s
 49325  01452C  C004  F00A         	movff	i2memcpy@s1+1,i2memcpy@s+1
 49326  014530  C001  F007         	movff	i2memcpy@d1,i2memcpy@d
 49327  014534  C002  F008         	movff	i2memcpy@d1+1,i2memcpy@d+1
 49328  014538  D01C               	goto	i2l3695
 49329  01453A                     i2l16547:
 49330  01453A  C009  FFF6         	movff	i2memcpy@s,tblptrl
 49331  01453E  C00A  FFF7         	movff	i2memcpy@s+1,tblptrh
 49332  014542  0E00               	movlw	low (__mediumconst shr (0+16))
 49333  014544  6EF8               	movwf	tblptru,c
 49334  014546  0E0E               	movlw	(high __ramtop+-1)
 49335  014548  64F7               	cpfsgt	tblptrh,c
 49336  01454A  D003               	bra	i2u1570_47
 49337  01454C  0008               	tblrd		*
 49338  01454E  50F5               	movf	tablat,w,c
 49339  014550  D005               	bra	i2u1570_40
 49340  014552                     i2u1570_47:
 49341  014552  CFF6 FFE9          	movff	tblptrl,fsr0l
 49342  014556  CFF7 FFEA          	movff	tblptrh,fsr0h
 49343  01455A  50EF               	movf	indf0,w,c
 49344  01455C                     i2u1570_40:
 49345  01455C  6E0B               	movwf	i2memcpy@tmp,c
 49346  01455E  4A09               	infsnz	i2memcpy@s,f,c
 49347  014560  2A0A               	incf	i2memcpy@s+1,f,c
 49348  014562  C007  FFD9         	movff	i2memcpy@d,fsr2l
 49349  014566  C008  FFDA         	movff	i2memcpy@d+1,fsr2h
 49350  01456A  C00B  FFDF         	movff	i2memcpy@tmp,indf2
 49351  01456E  4A07               	infsnz	i2memcpy@d,f,c
 49352  014570  2A08               	incf	i2memcpy@d+1,f,c
 49353  014572                     i2l3695:
 49354  014572  0605               	decf	i2memcpy@n,f,c
 49355  014574  A0D8               	btfss	status,0,c
 49356  014576  0606               	decf	i2memcpy@n+1,f,c
 49357  014578  2805               	incf	i2memcpy@n,w,c
 49358  01457A  E1DF               	bnz	i2l16547
 49359  01457C  2806               	incf	i2memcpy@n+1,w,c
 49360  01457E  B4D8               	btfsc	status,2,c
 49361  014580  0012               	return	
 49362  014582  D7DB               	goto	i2l3696
 49363  014584                     __end_ofi2_memcpy:
 49364                           	opt stack 0
 49365                           tosu	equ	0xFFF
 49366                           tosh	equ	0xFFE
 49367                           tosl	equ	0xFFD
 49368                           pclatu	equ	0xFFB
 49369                           pclath	equ	0xFFA
 49370                           tblptru	equ	0xFF8
 49371                           tblptrh	equ	0xFF7
 49372                           tblptrl	equ	0xFF6
 49373                           tablat	equ	0xFF5
 49374                           prodh	equ	0xFF4
 49375                           prodl	equ	0xFF3
 49376                           intcon	equ	0xFF2
 49377                           indf0	equ	0xFEF
 49378                           postinc0	equ	0xFEE
 49379                           fsr0h	equ	0xFEA
 49380                           fsr0l	equ	0xFE9
 49381                           wreg	equ	0xFE8
 49382                           indf1	equ	0xFE7
 49383                           postinc1	equ	0xFE6
 49384                           postdec1	equ	0xFE5
 49385                           plusw1	equ	0xFE3
 49386                           fsr1h	equ	0xFE2
 49387                           fsr1l	equ	0xFE1
 49388                           indf2	equ	0xFDF
 49389                           postinc2	equ	0xFDE
 49390                           postdec2	equ	0xFDD
 49391                           plusw2	equ	0xFDB
 49392                           fsr2h	equ	0xFDA
 49393                           fsr2l	equ	0xFD9
 49394                           status	equ	0xFD8
 49395                           
 49396 ;; *************** function _USBCtrlTrfSetupHandler *****************
 49397 ;; Defined at:
 49398 ;;		line 2467 in file "usb_device.c"
 49399 ;; Parameters:    Size  Location     Type
 49400 ;;		None
 49401 ;; Auto vars:     Size  Location     Type
 49402 ;;		None
 49403 ;; Return value:  Size  Location     Type
 49404 ;;                  1    wreg      void 
 49405 ;; Registers used:
 49406 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 49407 ;; Tracked objects:
 49408 ;;		On entry : 0/0
 49409 ;;		On exit  : 0/0
 49410 ;;		Unchanged: 0/0
 49411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49416 ;;Total ram usage:        0 bytes
 49417 ;; Hardware stack levels used:    1
 49418 ;; Hardware stack levels required when called:    6
 49419 ;; This function calls:
 49420 ;;		_USBCheckStdRequest
 49421 ;;		_USBCtrlEPServiceComplete
 49422 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 49423 ;; This function is called by:
 49424 ;;		_USBCtrlEPService
 49425 ;; This function uses a non-reentrant model
 49426 ;;
 49427                           
 49428                           	psect	text205
 49429  013858                     __ptext205:
 49430                           	opt stack 0
 49431  013858                     _USBCtrlTrfSetupHandler:
 49432                           	opt stack 9
 49433                           
 49434                           ;usb_device.c: 2472: shortPacketStatus = 0;
 49435                           
 49436                           ;incstack = 0
 49437  013858  0E00               	movlw	0
 49438  01385A  0101               	movlb	1	; () banked
 49439  01385C  6F70               	movwf	_shortPacketStatus& (0+255),b	;volatile
 49440                           
 49441                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 49442  01385E  0E00               	movlw	0
 49443  013860  6F69               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
 49444                           
 49445                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 49446  013862  0E00               	movlw	0
 49447  013864  6F66               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 49448                           
 49449                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 49450  013866  0E00               	movlw	0
 49451  013868  6F65               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 49452                           
 49453                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 49454  01386A  0E00               	movlw	0
 49455  01386C  6F6B               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 49456                           
 49457                           ;usb_device.c: 2477: controlTransferState = 0;
 49458  01386E  0E00               	movlw	0
 49459  013870  6F6F               	movwf	_controlTransferState& (0+255),b	;volatile
 49460                           
 49461                           ; BSR set to: 1
 49462                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 49463  013872  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 49464  013876  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49465  01387A  0E7F               	movlw	127
 49466  01387C  16DF               	andwf	indf2,f,c
 49467                           
 49468                           ; BSR set to: 1
 49469                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 49470  01387E  0E04               	movlw	4
 49471  013880  191B               	xorwf	_pBDTEntryIn& (0+255),w,b
 49472  013882  6F1B               	movwf	_pBDTEntryIn& (0+255),b
 49473  013884  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 49474  013886  6F1C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 49475                           
 49476                           ; BSR set to: 1
 49477                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 49478  013888  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 49479  01388C  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49480  013890  0E7F               	movlw	127
 49481  013892  16DF               	andwf	indf2,f,c
 49482                           
 49483                           ; BSR set to: 1
 49484                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 49485  013894  0E04               	movlw	4
 49486  013896  191B               	xorwf	_pBDTEntryIn& (0+255),w,b
 49487  013898  6F1B               	movwf	_pBDTEntryIn& (0+255),b
 49488  01389A  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 49489  01389C  6F1C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 49490                           
 49491                           ; BSR set to: 1
 49492                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 49493  01389E  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49494  0138A2  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49495  0138A6  0E7F               	movlw	127
 49496  0138A8  16DF               	andwf	indf2,f,c
 49497                           
 49498                           ; BSR set to: 1
 49499                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 49500  0138AA  0E00               	movlw	0
 49501  0138AC  6E55               	movwf	_inPipes+3,c	;volatile
 49502                           
 49503                           ; BSR set to: 1
 49504                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 49505  0138AE  0E00               	movlw	0
 49506  0138B0  6E57               	movwf	_inPipes+5,c	;volatile
 49507  0138B2  0E00               	movlw	0
 49508  0138B4  6E56               	movwf	_inPipes+4,c	;volatile
 49509                           
 49510                           ; BSR set to: 1
 49511                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 49512  0138B6  0E00               	movlw	0
 49513  0138B8  6F15               	movwf	(_outPipes+3)& (0+255),b	;volatile
 49514                           
 49515                           ; BSR set to: 1
 49516                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 49517  0138BA  0E00               	movlw	0
 49518  0138BC  6F17               	movwf	(_outPipes+5)& (0+255),b	;volatile
 49519  0138BE  0E00               	movlw	0
 49520  0138C0  6F16               	movwf	(_outPipes+4)& (0+255),b	;volatile
 49521                           
 49522                           ; BSR set to: 1
 49523                           ;usb_device.c: 2502: USBCheckStdRequest();
 49524  0138C2  ECD4  F091         	call	_USBCheckStdRequest	;wreg free
 49525                           
 49526                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 49527  0138C6  0E00               	movlw	0
 49528  0138C8  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 49529  0138CA  0E03               	movlw	3
 49530  0138CC  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 49531  0138CE  0E00               	movlw	0
 49532  0138D0  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 49533  0138D2  0E00               	movlw	0
 49534  0138D4  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 49535  0138D6  0E00               	movlw	0
 49536  0138D8  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 49537  0138DA  0E00               	movlw	0
 49538  0138DC  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 49539  0138DE  EC74  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 49540                           
 49541                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 49542  0138E2  EC87  F08B         	call	_USBCtrlEPServiceComplete	;wreg free
 49543  0138E6  0012               	return		;funcret
 49544  0138E8                     __end_of_USBCtrlTrfSetupHandler:
 49545                           	opt stack 0
 49546                           tosu	equ	0xFFF
 49547                           tosh	equ	0xFFE
 49548                           tosl	equ	0xFFD
 49549                           pclatu	equ	0xFFB
 49550                           pclath	equ	0xFFA
 49551                           tblptru	equ	0xFF8
 49552                           tblptrh	equ	0xFF7
 49553                           tblptrl	equ	0xFF6
 49554                           tablat	equ	0xFF5
 49555                           prodh	equ	0xFF4
 49556                           prodl	equ	0xFF3
 49557                           intcon	equ	0xFF2
 49558                           indf0	equ	0xFEF
 49559                           postinc0	equ	0xFEE
 49560                           fsr0h	equ	0xFEA
 49561                           fsr0l	equ	0xFE9
 49562                           wreg	equ	0xFE8
 49563                           indf1	equ	0xFE7
 49564                           postinc1	equ	0xFE6
 49565                           postdec1	equ	0xFE5
 49566                           plusw1	equ	0xFE3
 49567                           fsr1h	equ	0xFE2
 49568                           fsr1l	equ	0xFE1
 49569                           indf2	equ	0xFDF
 49570                           postinc2	equ	0xFDE
 49571                           postdec2	equ	0xFDD
 49572                           plusw2	equ	0xFDB
 49573                           fsr2h	equ	0xFDA
 49574                           fsr2l	equ	0xFD9
 49575                           status	equ	0xFD8
 49576                           
 49577 ;; *************** function _USBCtrlEPServiceComplete *****************
 49578 ;; Defined at:
 49579 ;;		line 1618 in file "usb_device.c"
 49580 ;; Parameters:    Size  Location     Type
 49581 ;;		None
 49582 ;; Auto vars:     Size  Location     Type
 49583 ;;		None
 49584 ;; Return value:  Size  Location     Type
 49585 ;;                  1    wreg      void 
 49586 ;; Registers used:
 49587 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 49588 ;; Tracked objects:
 49589 ;;		On entry : 0/0
 49590 ;;		On exit  : 0/0
 49591 ;;		Unchanged: 0/0
 49592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49597 ;;Total ram usage:        0 bytes
 49598 ;; Hardware stack levels used:    1
 49599 ;; Hardware stack levels required when called:    2
 49600 ;; This function calls:
 49601 ;;		_USBCtrlEPAllowDataStage
 49602 ;;		_USBCtrlEPAllowStatusStage
 49603 ;; This function is called by:
 49604 ;;		_USBCtrlTrfSetupHandler
 49605 ;; This function uses a non-reentrant model
 49606 ;;
 49607                           
 49608                           	psect	text206
 49609  01170E                     __ptext206:
 49610                           	opt stack 0
 49611  01170E                     _USBCtrlEPServiceComplete:
 49612                           	opt stack 12
 49613                           
 49614                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 49615                           
 49616                           ;incstack = 0
 49617  01170E  9865               	bcf	3941,4,c	;volatile
 49618                           
 49619                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 49620  011710  BE55               	btfsc	_inPipes+3,7,c	;volatile
 49621  011712  D03A               	goto	i2l231
 49622                           
 49623                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 49624  011714  0101               	movlb	1	; () banked
 49625  011716  AF15               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 49626  011718  D00C               	goto	i2l232
 49627                           
 49628                           ; BSR set to: 1
 49629                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 49630  01171A  0E02               	movlw	2
 49631  01171C  6F6F               	movwf	_controlTransferState& (0+255),b	;volatile
 49632                           
 49633                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 49634  01171E  5165               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 49635  011720  B4D8               	btfsc	status,2,c
 49636                           
 49637                           ; BSR set to: 1
 49638                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 49639  011722  EC22  F09A         	call	_USBCtrlEPAllowDataStage	;wreg free
 49640                           
 49641                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 49642  011726  0E00               	movlw	0
 49643  011728  0101               	movlb	1	; () banked
 49644  01172A  6F67               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 49645                           
 49646                           ; BSR set to: 1
 49647                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 49648  01172C  0E00               	movlw	0
 49649  01172E  6F68               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 49650                           
 49651                           ;usb_device.c: 1654: }
 49652  011730  0012               	return	
 49653  011732                     i2l232:
 49654                           
 49655                           ; BSR set to: 1
 49656                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 49657                           
 49658                           ; BSR set to: 1
 49659  011732  EE20 F001          	lfsr	2,1
 49660  011736  505C               	movf	_pBDTEntryEP0OutNext,w,c
 49661  011738  26D9               	addwf	fsr2l,f,c
 49662  01173A  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 49663  01173C  22DA               	addwfc	fsr2h,f,c
 49664  01173E  0E08               	movlw	8
 49665  011740  6EDF               	movwf	indf2,c
 49666                           
 49667                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 49668  011742  EE20 F002          	lfsr	2,2
 49669  011746  505C               	movf	_pBDTEntryEP0OutNext,w,c
 49670  011748  26D9               	addwf	fsr2l,f,c
 49671  01174A  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 49672  01174C  22DA               	addwfc	fsr2h,f,c
 49673  01174E  0E30               	movlw	48
 49674  011750  6EDE               	movwf	postinc2,c
 49675  011752  0E0D               	movlw	13
 49676  011754  6EDD               	movwf	postdec2,c
 49677                           
 49678                           ; BSR set to: 1
 49679                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 49680  011756  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49681  01175A  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49682  01175E  0E0C               	movlw	12
 49683  011760  6EDF               	movwf	indf2,c
 49684                           
 49685                           ; BSR set to: 1
 49686                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 49687  011762  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49688  011766  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49689  01176A  0E00               	movlw	0
 49690  01176C  8EDB               	bsf	plusw2,7,c
 49691                           
 49692                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 49693  01176E  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 49694  011772  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49695  011776  0E04               	movlw	4
 49696  011778  6EDF               	movwf	indf2,c
 49697                           
 49698                           ; BSR set to: 1
 49699                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 49700  01177A  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 49701  01177E  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49702  011782  0E00               	movlw	0
 49703  011784  8EDB               	bsf	plusw2,7,c
 49704                           
 49705                           ; BSR set to: 1
 49706                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 49707  011786  0012               	return	
 49708  011788                     i2l231:
 49709                           
 49710                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 49711  011788  010D               	movlb	13	; () banked
 49712  01178A  AF30               	btfss	48,7,b	;volatile
 49713  01178C  D012               	goto	i2l236
 49714                           
 49715                           ; BSR set to: 13
 49716                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 49717  01178E  0E01               	movlw	1
 49718  011790  0101               	movlb	1	; () banked
 49719  011792  6F6F               	movwf	_controlTransferState& (0+255),b	;volatile
 49720                           
 49721                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 49722  011794  5166               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 49723  011796  B4D8               	btfsc	status,2,c
 49724                           
 49725                           ; BSR set to: 1
 49726                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 49727  011798  EC22  F09A         	call	_USBCtrlEPAllowDataStage	;wreg free
 49728                           
 49729                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 49730  01179C  0E00               	movlw	0
 49731  01179E  0101               	movlb	1	; () banked
 49732  0117A0  6F67               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 49733                           
 49734                           ; BSR set to: 1
 49735                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 49736  0117A2  0E00               	movlw	0
 49737  0117A4  6F68               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 49738                           
 49739                           ; BSR set to: 1
 49740                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 49741  0117A6  5169               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 49742  0117A8  A4D8               	btfss	status,2,c
 49743  0117AA  0012               	return	
 49744                           
 49745                           ; BSR set to: 1
 49746                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 49747  0117AC  EC4A  F094         	call	_USBCtrlEPAllowStatusStage	;wreg free
 49748                           
 49749                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 49750  0117B0  0012               	return	
 49751  0117B2                     i2l236:
 49752                           
 49753                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 49754  0117B2  0E02               	movlw	2
 49755  0117B4  0101               	movlb	1	; () banked
 49756  0117B6  6F6F               	movwf	_controlTransferState& (0+255),b	;volatile
 49757                           
 49758                           ; BSR set to: 1
 49759                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 49760  0117B8  EE20 F001          	lfsr	2,1
 49761  0117BC  505C               	movf	_pBDTEntryEP0OutNext,w,c
 49762  0117BE  26D9               	addwf	fsr2l,f,c
 49763  0117C0  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 49764  0117C2  22DA               	addwfc	fsr2h,f,c
 49765  0117C4  0E08               	movlw	8
 49766  0117C6  6EDF               	movwf	indf2,c
 49767                           
 49768                           ; BSR set to: 1
 49769                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 49770  0117C8  EE20 F002          	lfsr	2,2
 49771  0117CC  505C               	movf	_pBDTEntryEP0OutNext,w,c
 49772  0117CE  26D9               	addwf	fsr2l,f,c
 49773  0117D0  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 49774  0117D2  22DA               	addwfc	fsr2h,f,c
 49775  0117D4  0E30               	movlw	48
 49776  0117D6  6EDE               	movwf	postinc2,c
 49777  0117D8  0E0D               	movlw	13
 49778  0117DA  6EDD               	movwf	postdec2,c
 49779                           
 49780                           ; BSR set to: 1
 49781                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 49782  0117DC  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49783  0117E0  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49784  0117E4  0E04               	movlw	4
 49785  0117E6  6EDF               	movwf	indf2,c
 49786                           
 49787                           ; BSR set to: 1
 49788                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 49789  0117E8  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49790  0117EC  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49791  0117F0  0E00               	movlw	0
 49792  0117F2  8EDB               	bsf	plusw2,7,c
 49793                           
 49794                           ; BSR set to: 1
 49795                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 49796  0117F4  0E00               	movlw	0
 49797  0117F6  6F67               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 49798                           
 49799                           ; BSR set to: 1
 49800                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 49801  0117F8  0E00               	movlw	0
 49802  0117FA  6F68               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 49803                           
 49804                           ; BSR set to: 1
 49805                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 49806  0117FC  5169               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 49807  0117FE  A4D8               	btfss	status,2,c
 49808  011800  0012               	return	
 49809                           
 49810                           ; BSR set to: 1
 49811                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 49812  011802  EC4A  F094         	call	_USBCtrlEPAllowStatusStage	;wreg free
 49813  011806  0012               	return	
 49814  011808                     __end_of_USBCtrlEPServiceComplete:
 49815                           	opt stack 0
 49816                           tosu	equ	0xFFF
 49817                           tosh	equ	0xFFE
 49818                           tosl	equ	0xFFD
 49819                           pclatu	equ	0xFFB
 49820                           pclath	equ	0xFFA
 49821                           tblptru	equ	0xFF8
 49822                           tblptrh	equ	0xFF7
 49823                           tblptrl	equ	0xFF6
 49824                           tablat	equ	0xFF5
 49825                           prodh	equ	0xFF4
 49826                           prodl	equ	0xFF3
 49827                           intcon	equ	0xFF2
 49828                           indf0	equ	0xFEF
 49829                           postinc0	equ	0xFEE
 49830                           fsr0h	equ	0xFEA
 49831                           fsr0l	equ	0xFE9
 49832                           wreg	equ	0xFE8
 49833                           indf1	equ	0xFE7
 49834                           postinc1	equ	0xFE6
 49835                           postdec1	equ	0xFE5
 49836                           plusw1	equ	0xFE3
 49837                           fsr1h	equ	0xFE2
 49838                           fsr1l	equ	0xFE1
 49839                           indf2	equ	0xFDF
 49840                           postinc2	equ	0xFDE
 49841                           postdec2	equ	0xFDD
 49842                           plusw2	equ	0xFDB
 49843                           fsr2h	equ	0xFDA
 49844                           fsr2l	equ	0xFD9
 49845                           status	equ	0xFD8
 49846                           
 49847 ;; *************** function _USBCtrlEPAllowDataStage *****************
 49848 ;; Defined at:
 49849 ;;		line 1490 in file "usb_device.c"
 49850 ;; Parameters:    Size  Location     Type
 49851 ;;		None
 49852 ;; Auto vars:     Size  Location     Type
 49853 ;;		None
 49854 ;; Return value:  Size  Location     Type
 49855 ;;                  1    wreg      void 
 49856 ;; Registers used:
 49857 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 49858 ;; Tracked objects:
 49859 ;;		On entry : 0/0
 49860 ;;		On exit  : 0/0
 49861 ;;		Unchanged: 0/0
 49862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49867 ;;Total ram usage:        0 bytes
 49868 ;; Hardware stack levels used:    1
 49869 ;; Hardware stack levels required when called:    1
 49870 ;; This function calls:
 49871 ;;		_USBCtrlTrfTxService
 49872 ;; This function is called by:
 49873 ;;		_USBCtrlEPServiceComplete
 49874 ;; This function uses a non-reentrant model
 49875 ;;
 49876                           
 49877                           	psect	text207
 49878  013444                     __ptext207:
 49879                           	opt stack 0
 49880  013444                     _USBCtrlEPAllowDataStage:
 49881                           	opt stack 12
 49882                           
 49883                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 49884                           
 49885                           ;incstack = 0
 49886  013444  0E00               	movlw	0
 49887  013446  0101               	movlb	1	; () banked
 49888  013448  6F66               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 49889                           
 49890                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 49891  01344A  0E00               	movlw	0
 49892  01344C  6F65               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 49893                           
 49894                           ; BSR set to: 1
 49895                           ;usb_device.c: 1495: if(controlTransferState == 2)
 49896  01344E  0E02               	movlw	2
 49897  013450  196F               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 49898  013452  A4D8               	btfss	status,2,c
 49899  013454  D01F               	goto	i2l220
 49900                           
 49901                           ; BSR set to: 1
 49902                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 49903  013456  EE20 F001          	lfsr	2,1
 49904  01345A  505C               	movf	_pBDTEntryEP0OutNext,w,c
 49905  01345C  26D9               	addwf	fsr2l,f,c
 49906  01345E  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 49907  013460  22DA               	addwfc	fsr2h,f,c
 49908  013462  0E08               	movlw	8
 49909  013464  6EDF               	movwf	indf2,c
 49910                           
 49911                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 49912  013466  EE20 F002          	lfsr	2,2
 49913  01346A  505C               	movf	_pBDTEntryEP0OutNext,w,c
 49914  01346C  26D9               	addwf	fsr2l,f,c
 49915  01346E  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 49916  013470  22DA               	addwfc	fsr2h,f,c
 49917  013472  0E38               	movlw	56
 49918  013474  6EDE               	movwf	postinc2,c
 49919  013476  0E0D               	movlw	13
 49920  013478  6EDD               	movwf	postdec2,c
 49921                           
 49922                           ; BSR set to: 1
 49923                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 49924  01347A  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49925  01347E  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49926  013482  0E48               	movlw	72
 49927  013484  6EDF               	movwf	indf2,c
 49928                           
 49929                           ; BSR set to: 1
 49930                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 49931  013486  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49932  01348A  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49933  01348E  0E00               	movlw	0
 49934  013490  8EDB               	bsf	plusw2,7,c
 49935                           
 49936                           ;usb_device.c: 1502: }
 49937  013492  0012               	return	
 49938  013494                     i2l220:
 49939                           
 49940                           ; BSR set to: 1
 49941                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 49942                           
 49943                           ; BSR set to: 1
 49944  013494  5056               	movf	_inPipes+4,w,c	;volatile
 49945  013496  010D               	movlb	13	; () banked
 49946  013498  5D36               	subwf	54,w,b	;volatile
 49947  01349A  5057               	movf	_inPipes+5,w,c	;volatile
 49948  01349C  5937               	subwfb	55,w,b	;volatile
 49949  01349E  B0D8               	btfsc	status,0,c
 49950  0134A0  D004               	goto	i2l222
 49951                           
 49952                           ; BSR set to: 13
 49953                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 49954  0134A2  CD36 F056          	movff	3382,_inPipes+4	;volatile
 49955  0134A6  CD37 F057          	movff	3383,_inPipes+5	;volatile
 49956  0134AA                     i2l222:
 49957                           
 49958                           ; BSR set to: 13
 49959                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 49960                           
 49961                           ; BSR set to: 13
 49962  0134AA  ECAB  F092         	call	_USBCtrlTrfTxService	;wreg free
 49963                           
 49964                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 49965  0134AE  0101               	movlb	1	; () banked
 49966  0134B0  EE20 F002          	lfsr	2,2
 49967  0134B4  511B               	movf	_pBDTEntryIn& (0+255),w,b
 49968  0134B6  26D9               	addwf	fsr2l,f,c
 49969  0134B8  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 49970  0134BA  22DA               	addwfc	fsr2h,f,c
 49971  0134BC  0E38               	movlw	56
 49972  0134BE  6EDE               	movwf	postinc2,c
 49973  0134C0  0E0D               	movlw	13
 49974  0134C2  6EDD               	movwf	postdec2,c
 49975                           
 49976                           ; BSR set to: 1
 49977                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 49978  0134C4  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 49979  0134C8  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49980  0134CC  0E48               	movlw	72
 49981  0134CE  6EDF               	movwf	indf2,c
 49982                           
 49983                           ; BSR set to: 1
 49984                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 49985  0134D0  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 49986  0134D4  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49987  0134D8  0E00               	movlw	0
 49988  0134DA  8EDB               	bsf	plusw2,7,c
 49989  0134DC  0012               	return	
 49990  0134DE                     __end_of_USBCtrlEPAllowDataStage:
 49991                           	opt stack 0
 49992                           tosu	equ	0xFFF
 49993                           tosh	equ	0xFFE
 49994                           tosl	equ	0xFFD
 49995                           pclatu	equ	0xFFB
 49996                           pclath	equ	0xFFA
 49997                           tblptru	equ	0xFF8
 49998                           tblptrh	equ	0xFF7
 49999                           tblptrl	equ	0xFF6
 50000                           tablat	equ	0xFF5
 50001                           prodh	equ	0xFF4
 50002                           prodl	equ	0xFF3
 50003                           intcon	equ	0xFF2
 50004                           indf0	equ	0xFEF
 50005                           postinc0	equ	0xFEE
 50006                           fsr0h	equ	0xFEA
 50007                           fsr0l	equ	0xFE9
 50008                           wreg	equ	0xFE8
 50009                           indf1	equ	0xFE7
 50010                           postinc1	equ	0xFE6
 50011                           postdec1	equ	0xFE5
 50012                           plusw1	equ	0xFE3
 50013                           fsr1h	equ	0xFE2
 50014                           fsr1l	equ	0xFE1
 50015                           indf2	equ	0xFDF
 50016                           postinc2	equ	0xFDE
 50017                           postdec2	equ	0xFDD
 50018                           plusw2	equ	0xFDB
 50019                           fsr2h	equ	0xFDA
 50020                           fsr2l	equ	0xFD9
 50021                           status	equ	0xFD8
 50022                           
 50023 ;; *************** function _USBCheckStdRequest *****************
 50024 ;; Defined at:
 50025 ;;		line 2688 in file "usb_device.c"
 50026 ;; Parameters:    Size  Location     Type
 50027 ;;		None
 50028 ;; Auto vars:     Size  Location     Type
 50029 ;;		None
 50030 ;; Return value:  Size  Location     Type
 50031 ;;                  1    wreg      void 
 50032 ;; Registers used:
 50033 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 50034 ;; Tracked objects:
 50035 ;;		On entry : 0/0
 50036 ;;		On exit  : 0/0
 50037 ;;		Unchanged: 0/0
 50038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50043 ;;Total ram usage:        0 bytes
 50044 ;; Hardware stack levels used:    1
 50045 ;; Hardware stack levels required when called:    5
 50046 ;; This function calls:
 50047 ;;		_USBStdFeatureReqHandler
 50048 ;;		_USBStdGetDscHandler
 50049 ;;		_USBStdGetStatusHandler
 50050 ;;		_USBStdSetCfgHandler
 50051 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 50052 ;; This function is called by:
 50053 ;;		_USBCtrlTrfSetupHandler
 50054 ;; This function uses a non-reentrant model
 50055 ;;
 50056                           
 50057                           	psect	text208
 50058  0123A8                     __ptext208:
 50059                           	opt stack 0
 50060  0123A8                     _USBCheckStdRequest:
 50061                           	opt stack 9
 50062                           
 50063                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 50064                           
 50065                           ; BSR set to: 1
 50066                           ;incstack = 0
 50067  0123A8  010D               	movlb	13	; () banked
 50068  0123AA  3930               	swapf	48,w,b	;volatile
 50069  0123AC  32E8               	rrcf	wreg,f,c
 50070  0123AE  0B03               	andlw	3
 50071  0123B0  0900               	iorlw	0
 50072  0123B2  A4D8               	btfss	status,2,c
 50073  0123B4  0012               	return	
 50074  0123B6  D042               	goto	i2l355
 50075  0123B8                     i2l356:
 50076                           
 50077                           ; BSR set to: 13
 50078                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 50079  0123B8  8E55               	bsf	_inPipes+3,7,c	;volatile
 50080                           
 50081                           ; BSR set to: 13
 50082                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 50083  0123BA  0E08               	movlw	8
 50084  0123BC  6E5E               	movwf	_USBDeviceState,c	;volatile
 50085                           
 50086                           ;usb_device.c: 2698: break;
 50087  0123BE  0012               	return	
 50088  0123C0                     
 50089                           ; BSR set to: 13
 50090                           ;usb_device.c: 2700: USBStdGetDscHandler();
 50091                           
 50092                           ; BSR set to: 13
 50093  0123C0  ECAA  F083         	call	_USBStdGetDscHandler	;wreg free
 50094                           
 50095                           ;usb_device.c: 2701: break;
 50096  0123C4  0012               	return	
 50097  0123C6                     
 50098                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 50099  0123C6  ECF9  F090         	call	_USBStdSetCfgHandler	;wreg free
 50100                           
 50101                           ;usb_device.c: 2704: break;
 50102  0123CA  0012               	return	
 50103  0123CC                     
 50104                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 50105  0123CC  0EC2               	movlw	low _USBActiveConfiguration
 50106  0123CE  6E52               	movwf	_inPipes,c	;volatile
 50107  0123D0  0E01               	movlw	high _USBActiveConfiguration
 50108  0123D2  6E53               	movwf	_inPipes+1,c	;volatile
 50109                           
 50110                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 50111  0123D4  8055               	bsf	_inPipes+3,0,c	;volatile
 50112                           
 50113                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 50114  0123D6  0E01               	movlw	1
 50115  0123D8  6E56               	movwf	_inPipes+4,c	;volatile
 50116                           
 50117                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 50118  0123DA  8E55               	bsf	_inPipes+3,7,c	;volatile
 50119                           
 50120                           ;usb_device.c: 2710: break;
 50121  0123DC  0012               	return	
 50122  0123DE                     
 50123                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 50124  0123DE  EC85  F099         	call	_USBStdGetStatusHandler	;wreg free
 50125                           
 50126                           ;usb_device.c: 2713: break;
 50127  0123E2  0012               	return	
 50128  0123E4                     
 50129                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 50130  0123E4  EC33  F06F         	call	_USBStdFeatureReqHandler	;wreg free
 50131                           
 50132                           ;usb_device.c: 2717: break;
 50133  0123E8  0012               	return	
 50134  0123EA                     
 50135                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 50136  0123EA  010D               	movlb	13	; () banked
 50137  0123EC  5134               	movf	52,w,b	;volatile
 50138  0123EE  0D01               	mullw	1
 50139  0123F0  0EBD               	movlw	low _USBAlternateInterface
 50140  0123F2  24F3               	addwf	prodl,w,c
 50141  0123F4  6E52               	movwf	_inPipes,c	;volatile
 50142  0123F6  0E01               	movlw	high _USBAlternateInterface
 50143  0123F8  20F4               	addwfc	prodh,w,c
 50144  0123FA  6E53               	movwf	_inPipes+1,c	;volatile
 50145                           
 50146                           ; BSR set to: 13
 50147                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 50148  0123FC  8055               	bsf	_inPipes+3,0,c	;volatile
 50149                           
 50150                           ; BSR set to: 13
 50151                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 50152  0123FE  0E01               	movlw	1
 50153  012400  6E56               	movwf	_inPipes+4,c	;volatile
 50154                           
 50155                           ; BSR set to: 13
 50156                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 50157  012402  8E55               	bsf	_inPipes+3,7,c	;volatile
 50158                           
 50159                           ;usb_device.c: 2723: break;
 50160  012404  0012               	return	
 50161  012406                     i2l365:
 50162                           
 50163                           ; BSR set to: 13
 50164                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 50165  012406  8E55               	bsf	_inPipes+3,7,c	;volatile
 50166                           
 50167                           ; BSR set to: 13
 50168                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 50169  012408  5134               	movf	52,w,b	;volatile
 50170  01240A  0D01               	mullw	1
 50171  01240C  0EBD               	movlw	low _USBAlternateInterface
 50172  01240E  24F3               	addwf	prodl,w,c
 50173  012410  6ED9               	movwf	fsr2l,c
 50174  012412  0E01               	movlw	high _USBAlternateInterface
 50175  012414  20F4               	addwfc	prodh,w,c
 50176  012416  6EDA               	movwf	fsr2h,c
 50177  012418  CD32 FFDF          	movff	3378,indf2	;volatile
 50178                           
 50179                           ;usb_device.c: 2727: break;
 50180  01241C  0012               	return	
 50181  01241E                     
 50182                           ; BSR set to: 13
 50183                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 50184                           
 50185                           ; BSR set to: 13
 50186  01241E  0E00               	movlw	0
 50187  012420  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 50188  012422  0E02               	movlw	2
 50189  012424  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 50190  012426  0E00               	movlw	0
 50191  012428  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 50192  01242A  0E00               	movlw	0
 50193  01242C  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 50194  01242E  0E00               	movlw	0
 50195  012430  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 50196  012432  0E00               	movlw	0
 50197  012434  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 50198  012436  EC74  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 50199                           
 50200                           ;usb_device.c: 2734: }
 50201                           
 50202                           ;usb_device.c: 2733: break;
 50203                           
 50204                           ;usb_device.c: 2732: default:
 50205                           
 50206                           ;usb_device.c: 2731: case 12:
 50207                           
 50208                           ;usb_device.c: 2730: break;
 50209  01243A  0012               	return	
 50210  01243C                     i2l355:
 50211  01243C  010D               	movlb	13	; () banked
 50212  01243E  5131               	movf	49,w,b	;volatile
 50213                           
 50214                           ; Switch size 1, requested type "space"
 50215                           ; Number of cases is 11, Range of values is 0 to 12
 50216                           ; switch strategies available:
 50217                           ; Name         Instructions Cycles
 50218                           ; simple_byte           34    18 (average)
 50219                           ;	Chosen strategy is simple_byte
 50220  012440  0A00               	xorlw	0	; case 0
 50221  012442  B4D8               	btfsc	status,2,c
 50222  012444  D7CC               	goto	i2l361
 50223  012446  0A01               	xorlw	1	; case 1
 50224  012448  B4D8               	btfsc	status,2,c
 50225  01244A  D7CC               	goto	i2l362
 50226  01244C  0A02               	xorlw	2	; case 3
 50227  01244E  B4D8               	btfsc	status,2,c
 50228  012450  D7C9               	goto	i2l362
 50229  012452  0A06               	xorlw	6	; case 5
 50230  012454  B4D8               	btfsc	status,2,c
 50231  012456  D7B0               	goto	i2l356
 50232  012458  0A03               	xorlw	3	; case 6
 50233  01245A  B4D8               	btfsc	status,2,c
 50234  01245C  D7B1               	goto	i2l358
 50235  01245E  0A01               	xorlw	1	; case 7
 50236  012460  B4D8               	btfsc	status,2,c
 50237  012462  D7DD               	goto	i2l366
 50238  012464  0A0F               	xorlw	15	; case 8
 50239  012466  B4D8               	btfsc	status,2,c
 50240  012468  D7B1               	goto	i2l360
 50241  01246A  0A01               	xorlw	1	; case 9
 50242  01246C  B4D8               	btfsc	status,2,c
 50243  01246E  D7AB               	goto	i2l359
 50244  012470  0A03               	xorlw	3	; case 10
 50245  012472  B4D8               	btfsc	status,2,c
 50246  012474  D7BA               	goto	i2l364
 50247  012476  0A01               	xorlw	1	; case 11
 50248  012478  B4D8               	btfsc	status,2,c
 50249  01247A  D7C5               	goto	i2l365
 50250  01247C  0A07               	xorlw	7	; case 12
 50251  01247E  0012               	return	
 50252  012480                     __end_of_USBCheckStdRequest:
 50253                           	opt stack 0
 50254                           tosu	equ	0xFFF
 50255                           tosh	equ	0xFFE
 50256                           tosl	equ	0xFFD
 50257                           pclatu	equ	0xFFB
 50258                           pclath	equ	0xFFA
 50259                           tblptru	equ	0xFF8
 50260                           tblptrh	equ	0xFF7
 50261                           tblptrl	equ	0xFF6
 50262                           tablat	equ	0xFF5
 50263                           prodh	equ	0xFF4
 50264                           prodl	equ	0xFF3
 50265                           intcon	equ	0xFF2
 50266                           indf0	equ	0xFEF
 50267                           postinc0	equ	0xFEE
 50268                           fsr0h	equ	0xFEA
 50269                           fsr0l	equ	0xFE9
 50270                           wreg	equ	0xFE8
 50271                           indf1	equ	0xFE7
 50272                           postinc1	equ	0xFE6
 50273                           postdec1	equ	0xFE5
 50274                           plusw1	equ	0xFE3
 50275                           fsr1h	equ	0xFE2
 50276                           fsr1l	equ	0xFE1
 50277                           indf2	equ	0xFDF
 50278                           postinc2	equ	0xFDE
 50279                           postdec2	equ	0xFDD
 50280                           plusw2	equ	0xFDB
 50281                           fsr2h	equ	0xFDA
 50282                           fsr2l	equ	0xFD9
 50283                           status	equ	0xFD8
 50284                           
 50285 ;; *************** function _USBStdSetCfgHandler *****************
 50286 ;; Defined at:
 50287 ;;		line 1970 in file "usb_device.c"
 50288 ;; Parameters:    Size  Location     Type
 50289 ;;		None
 50290 ;; Auto vars:     Size  Location     Type
 50291 ;;  i               1   23[COMRAM] unsigned char 
 50292 ;; Return value:  Size  Location     Type
 50293 ;;                  1    wreg      void 
 50294 ;; Registers used:
 50295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 50296 ;; Tracked objects:
 50297 ;;		On entry : 0/0
 50298 ;;		On exit  : 0/0
 50299 ;;		Unchanged: 0/0
 50300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50302 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50304 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50305 ;;Total ram usage:        1 bytes
 50306 ;; Hardware stack levels used:    1
 50307 ;; Hardware stack levels required when called:    4
 50308 ;; This function calls:
 50309 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 50310 ;;		i2_memset
 50311 ;; This function is called by:
 50312 ;;		_USBCheckStdRequest
 50313 ;; This function uses a non-reentrant model
 50314 ;;
 50315                           
 50316                           	psect	text209
 50317  0121F2                     __ptext209:
 50318                           	opt stack 0
 50319  0121F2                     _USBStdSetCfgHandler:
 50320                           	opt stack 9
 50321                           
 50322                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 50323                           
 50324                           ;incstack = 0
 50325  0121F2  8E55               	bsf	_inPipes+3,7,c	;volatile
 50326                           
 50327                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 50328  0121F4  0E27               	movlw	39
 50329  0121F6  6E01               	movwf	i2memset@p1,c
 50330  0121F8  0E0F               	movlw	15
 50331  0121FA  6E02               	movwf	i2memset@p1+1,c
 50332  0121FC  0E00               	movlw	0
 50333  0121FE  6E04               	movwf	i2memset@c+1,c
 50334  012200  0E00               	movlw	0
 50335  012202  6E03               	movwf	i2memset@c,c
 50336  012204  0E00               	movlw	0
 50337  012206  6E06               	movwf	i2memset@n+1,c
 50338  012208  0E02               	movlw	2
 50339  01220A  6E05               	movwf	i2memset@n,c
 50340  01220C  EC86  F0AA         	call	i2_memset	;wreg free
 50341                           
 50342                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 50343  012210  0E00               	movlw	0
 50344  012212  6E01               	movwf	i2memset@p1,c
 50345  012214  0E0D               	movlw	13
 50346  012216  6E02               	movwf	i2memset@p1+1,c
 50347  012218  0E00               	movlw	0
 50348  01221A  6E04               	movwf	i2memset@c+1,c
 50349  01221C  0E00               	movlw	0
 50350  01221E  6E03               	movwf	i2memset@c,c
 50351  012220  0E00               	movlw	0
 50352  012222  6E06               	movwf	i2memset@n+1,c
 50353  012224  0E30               	movlw	48
 50354  012226  6E05               	movwf	i2memset@n,c
 50355  012228  EC86  F0AA         	call	i2_memset	;wreg free
 50356                           
 50357                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 50358  01222C  8C65               	bsf	3941,6,c	;volatile
 50359                           
 50360                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 50361  01222E  0E00               	movlw	0
 50362  012230  6E18               	movwf	USBStdSetCfgHandler@i,c
 50363  012232                     i2l13365:
 50364  012232  0E02               	movlw	2
 50365  012234  6418               	cpfsgt	USBStdSetCfgHandler@i,c
 50366  012236  D001               	goto	i2l272
 50367  012238  D016               	goto	i2u1199_40
 50368  01223A                     i2l272:
 50369                           
 50370                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 50371  01223A  5018               	movf	USBStdSetCfgHandler@i,w,c
 50372  01223C  0D01               	mullw	1
 50373  01223E  0E3C               	movlw	low _ep_data_in
 50374  012240  24F3               	addwf	prodl,w,c
 50375  012242  6ED9               	movwf	fsr2l,c
 50376  012244  0E01               	movlw	high _ep_data_in
 50377  012246  20F4               	addwfc	prodh,w,c
 50378  012248  6EDA               	movwf	fsr2h,c
 50379  01224A  0E00               	movlw	0
 50380  01224C  6EDF               	movwf	indf2,c
 50381                           
 50382                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 50383  01224E  5018               	movf	USBStdSetCfgHandler@i,w,c
 50384  012250  0D01               	mullw	1
 50385  012252  0E39               	movlw	low _ep_data_out
 50386  012254  24F3               	addwf	prodl,w,c
 50387  012256  6ED9               	movwf	fsr2l,c
 50388  012258  0E01               	movlw	high _ep_data_out
 50389  01225A  20F4               	addwfc	prodh,w,c
 50390  01225C  6EDA               	movwf	fsr2h,c
 50391  01225E  0E00               	movlw	0
 50392  012260  6EDF               	movwf	indf2,c
 50393  012262  2A18               	incf	USBStdSetCfgHandler@i,f,c
 50394  012264  D7E6               	goto	i2l13365
 50395  012266                     i2u1199_40:
 50396                           
 50397                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 50398  012266  0EBD               	movlw	low _USBAlternateInterface
 50399  012268  6E01               	movwf	i2memset@p1,c
 50400  01226A  0E01               	movlw	high _USBAlternateInterface
 50401  01226C  6E02               	movwf	i2memset@p1+1,c
 50402  01226E  0E00               	movlw	0
 50403  012270  6E04               	movwf	i2memset@c+1,c
 50404  012272  0E00               	movlw	0
 50405  012274  6E03               	movwf	i2memset@c,c
 50406  012276  0E00               	movlw	0
 50407  012278  6E06               	movwf	i2memset@n+1,c
 50408  01227A  0E02               	movlw	2
 50409  01227C  6E05               	movwf	i2memset@n,c
 50410  01227E  EC86  F0AA         	call	i2_memset	;wreg free
 50411                           
 50412                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 50413  012282  9C65               	bcf	3941,6,c	;volatile
 50414                           
 50415                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 50416  012284  0E08               	movlw	8
 50417  012286  0101               	movlb	1	; () banked
 50418  012288  6F1B               	movwf	_pBDTEntryIn& (0+255),b
 50419  01228A  0E0D               	movlw	13
 50420  01228C  6F1C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 50421                           
 50422                           ; BSR set to: 1
 50423                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 50424  01228E  0E00               	movlw	0
 50425  012290  6F51               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 50426  012292  0E0D               	movlw	13
 50427  012294  6F52               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 50428                           
 50429                           ; BSR set to: 1
 50430                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 50431  012296  C151  F05C         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 50432  01229A  C152  F05D         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 50433                           
 50434                           ; BSR set to: 1
 50435                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 50436  01229E  CD32 F1C2          	movff	3378,_USBActiveConfiguration	;volatile
 50437                           
 50438                           ; BSR set to: 1
 50439                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 50440  0122A2  51C2               	movf	_USBActiveConfiguration& (0+255),w,b	;volatile
 50441  0122A4  A4D8               	btfss	status,2,c
 50442  0122A6  D003               	goto	i2l274
 50443                           
 50444                           ; BSR set to: 1
 50445                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 50446  0122A8  0E10               	movlw	16
 50447  0122AA  6E5E               	movwf	_USBDeviceState,c	;volatile
 50448                           
 50449                           ;usb_device.c: 2015: }
 50450  0122AC  0012               	return	
 50451  0122AE                     i2l274:
 50452                           
 50453                           ; BSR set to: 1
 50454                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 50455                           
 50456                           ; BSR set to: 1
 50457  0122AE  0E00               	movlw	0
 50458  0122B0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 50459  0122B2  0E01               	movlw	1
 50460  0122B4  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 50461  0122B6  0EC2               	movlw	low _USBActiveConfiguration
 50462  0122B8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 50463  0122BA  0E01               	movlw	high _USBActiveConfiguration
 50464  0122BC  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 50465  0122BE  0E00               	movlw	0
 50466  0122C0  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 50467  0122C2  0E01               	movlw	1
 50468  0122C4  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 50469  0122C6  EC74  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 50470                           
 50471                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 50472  0122CA  0E20               	movlw	32
 50473  0122CC  6E5E               	movwf	_USBDeviceState,c	;volatile
 50474  0122CE  0012               	return	
 50475  0122D0                     __end_of_USBStdSetCfgHandler:
 50476                           	opt stack 0
 50477                           tosu	equ	0xFFF
 50478                           tosh	equ	0xFFE
 50479                           tosl	equ	0xFFD
 50480                           pclatu	equ	0xFFB
 50481                           pclath	equ	0xFFA
 50482                           tblptru	equ	0xFF8
 50483                           tblptrh	equ	0xFF7
 50484                           tblptrl	equ	0xFF6
 50485                           tablat	equ	0xFF5
 50486                           prodh	equ	0xFF4
 50487                           prodl	equ	0xFF3
 50488                           intcon	equ	0xFF2
 50489                           indf0	equ	0xFEF
 50490                           postinc0	equ	0xFEE
 50491                           fsr0h	equ	0xFEA
 50492                           fsr0l	equ	0xFE9
 50493                           wreg	equ	0xFE8
 50494                           indf1	equ	0xFE7
 50495                           postinc1	equ	0xFE6
 50496                           postdec1	equ	0xFE5
 50497                           plusw1	equ	0xFE3
 50498                           fsr1h	equ	0xFE2
 50499                           fsr1l	equ	0xFE1
 50500                           indf2	equ	0xFDF
 50501                           postinc2	equ	0xFDE
 50502                           postdec2	equ	0xFDD
 50503                           plusw2	equ	0xFDB
 50504                           fsr2h	equ	0xFDA
 50505                           fsr2l	equ	0xFD9
 50506                           status	equ	0xFD8
 50507                           
 50508 ;; *************** function i2_memset *****************
 50509 ;; Defined at:
 50510 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 50511 ;; Parameters:    Size  Location     Type
 50512 ;;  p1              2    0[COMRAM] PTR void 
 50513 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 50514 ;;  c               2    2[COMRAM] int 
 50515 ;;  n               2    4[COMRAM] unsigned int 
 50516 ;; Auto vars:     Size  Location     Type
 50517 ;;  memset          2    6[COMRAM] PTR unsigned char 
 50518 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 50519 ;; Return value:  Size  Location     Type
 50520 ;;                  2    0[COMRAM] PTR void 
 50521 ;; Registers used:
 50522 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 50523 ;; Tracked objects:
 50524 ;;		On entry : 0/0
 50525 ;;		On exit  : 0/0
 50526 ;;		Unchanged: 0/0
 50527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50528 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50529 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50531 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50532 ;;Total ram usage:        8 bytes
 50533 ;; Hardware stack levels used:    1
 50534 ;; This function calls:
 50535 ;;		Nothing
 50536 ;; This function is called by:
 50537 ;;		_USBStdSetCfgHandler
 50538 ;;		i2_USBDeviceInit
 50539 ;; This function uses a non-reentrant model
 50540 ;;
 50541                           
 50542                           	psect	text210
 50543  01550C                     __ptext210:
 50544                           	opt stack 0
 50545  01550C                     i2_memset:
 50546                           	opt stack 15
 50547                           
 50548                           ;incstack = 0
 50549  01550C  C001  F007         	movff	i2memset@p1,i2memset@p
 50550  015510  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 50551  015514  D008               	goto	i2l3701
 50552  015516                     i2l13295:
 50553  015516  C007  FFD9         	movff	i2memset@p,fsr2l
 50554  01551A  C008  FFDA         	movff	i2memset@p+1,fsr2h
 50555  01551E  C003  FFDF         	movff	i2memset@c,indf2
 50556  015522  4A07               	infsnz	i2memset@p,f,c
 50557  015524  2A08               	incf	i2memset@p+1,f,c
 50558  015526                     i2l3701:
 50559  015526  0605               	decf	i2memset@n,f,c
 50560  015528  A0D8               	btfss	status,0,c
 50561  01552A  0606               	decf	i2memset@n+1,f,c
 50562  01552C  2805               	incf	i2memset@n,w,c
 50563  01552E  E1F3               	bnz	i2l13295
 50564  015530  2806               	incf	i2memset@n+1,w,c
 50565  015532  B4D8               	btfsc	status,2,c
 50566  015534  0012               	return	
 50567  015536  D7EF               	goto	i2l3702
 50568  015538                     __end_ofi2_memset:
 50569                           	opt stack 0
 50570                           tosu	equ	0xFFF
 50571                           tosh	equ	0xFFE
 50572                           tosl	equ	0xFFD
 50573                           pclatu	equ	0xFFB
 50574                           pclath	equ	0xFFA
 50575                           tblptru	equ	0xFF8
 50576                           tblptrh	equ	0xFF7
 50577                           tblptrl	equ	0xFF6
 50578                           tablat	equ	0xFF5
 50579                           prodh	equ	0xFF4
 50580                           prodl	equ	0xFF3
 50581                           intcon	equ	0xFF2
 50582                           indf0	equ	0xFEF
 50583                           postinc0	equ	0xFEE
 50584                           fsr0h	equ	0xFEA
 50585                           fsr0l	equ	0xFE9
 50586                           wreg	equ	0xFE8
 50587                           indf1	equ	0xFE7
 50588                           postinc1	equ	0xFE6
 50589                           postdec1	equ	0xFE5
 50590                           plusw1	equ	0xFE3
 50591                           fsr1h	equ	0xFE2
 50592                           fsr1l	equ	0xFE1
 50593                           indf2	equ	0xFDF
 50594                           postinc2	equ	0xFDE
 50595                           postdec2	equ	0xFDD
 50596                           plusw2	equ	0xFDB
 50597                           fsr2h	equ	0xFDA
 50598                           fsr2l	equ	0xFD9
 50599                           status	equ	0xFD8
 50600                           
 50601 ;; *************** function _USBStdGetStatusHandler *****************
 50602 ;; Defined at:
 50603 ;;		line 2131 in file "usb_device.c"
 50604 ;; Parameters:    Size  Location     Type
 50605 ;;		None
 50606 ;; Auto vars:     Size  Location     Type
 50607 ;;  p               2    1[COMRAM] PTR struct __BDT
 50608 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 50609 ;; Return value:  Size  Location     Type
 50610 ;;                  1    wreg      void 
 50611 ;; Registers used:
 50612 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 50613 ;; Tracked objects:
 50614 ;;		On entry : 0/0
 50615 ;;		On exit  : 0/0
 50616 ;;		Unchanged: 0/0
 50617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50619 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50620 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50621 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50622 ;;Total ram usage:        3 bytes
 50623 ;; Hardware stack levels used:    1
 50624 ;; This function calls:
 50625 ;;		Nothing
 50626 ;; This function is called by:
 50627 ;;		_USBCheckStdRequest
 50628 ;; This function uses a non-reentrant model
 50629 ;;
 50630                           
 50631                           	psect	text211
 50632  01330A                     __ptext211:
 50633                           	opt stack 0
 50634  01330A                     _USBStdGetStatusHandler:
 50635                           	opt stack 13
 50636                           
 50637                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 50638                           
 50639                           ;incstack = 0
 50640  01330A  0E00               	movlw	0
 50641  01330C  010D               	movlb	13	; () banked
 50642  01330E  6F38               	movwf	56,b	;volatile
 50643                           
 50644                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 50645  013310  0E00               	movlw	0
 50646  013312  6F39               	movwf	57,b	;volatile
 50647                           
 50648                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 50649  013314  D035               	goto	i2l293
 50650  013316                     i2l294:
 50651                           
 50652                           ; BSR set to: 13
 50653                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 50654  013316  8E55               	bsf	_inPipes+3,7,c	;volatile
 50655                           
 50656                           ; BSR set to: 13
 50657                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 50658                           
 50659                           ; BSR set to: 13
 50660                           
 50661                           ; BSR set to: 13
 50662                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 50663                           
 50664                           ;usb_device.c: 2144: if(0 == 1)
 50665  013318  0101               	movlb	1	; () banked
 50666  01331A  056E               	decf	_RemoteWakeup& (0+255),w,b	;volatile
 50667  01331C  A4D8               	btfss	status,2,c
 50668  01331E  D03B               	goto	i2l297
 50669                           
 50670                           ; BSR set to: 1
 50671                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 50672  013320  010D               	movlb	13	; () banked
 50673  013322  8338               	bsf	56,1,b	;volatile
 50674                           
 50675                           ; BSR set to: 13
 50676                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 50677  013324  D038               	goto	i2l297
 50678  013326                     i2l298:
 50679                           
 50680                           ; BSR set to: 13
 50681                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 50682  013326  8E55               	bsf	_inPipes+3,7,c	;volatile
 50683                           
 50684                           ;usb_device.c: 2156: break;
 50685  013328  D036               	goto	i2l297
 50686  01332A                     i2l299:
 50687                           
 50688                           ; BSR set to: 13
 50689                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 50690  01332A  8E55               	bsf	_inPipes+3,7,c	;volatile
 50691                           
 50692                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 50693  01332C  BF34               	btfsc	52,7,b	;volatile
 50694  01332E  D00A               	goto	i2l300
 50695                           
 50696                           ; BSR set to: 13
 50697                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 50698  013330  5134               	movf	52,w,b	;volatile
 50699  013332  0B0F               	andlw	15
 50700  013334  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 50701  013336  5001               	movf	??_USBStdGetStatusHandler,w,c
 50702  013338  0D02               	mullw	2
 50703  01333A  0E21               	movlw	low _pBDTEntryOut
 50704  01333C  24F3               	addwf	prodl,w,c
 50705  01333E  6ED9               	movwf	fsr2l,c
 50706  013340  0E01               	movlw	high _pBDTEntryOut
 50707  013342  D009               	goto	L77
 50708  013344                     i2l300:
 50709                           
 50710                           ; BSR set to: 13
 50711                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 50712                           
 50713                           ; BSR set to: 13
 50714  013344  5134               	movf	52,w,b	;volatile
 50715  013346  0B0F               	andlw	15
 50716  013348  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 50717  01334A  5001               	movf	??_USBStdGetStatusHandler,w,c
 50718  01334C  0D02               	mullw	2
 50719  01334E  0E1B               	movlw	low _pBDTEntryIn
 50720  013350  24F3               	addwf	prodl,w,c
 50721  013352  6ED9               	movwf	fsr2l,c
 50722  013354  0E01               	movlw	high _pBDTEntryIn
 50723  013356                     L77:
 50724  013356  20F4               	addwfc	prodh,w,c
 50725  013358  6EDA               	movwf	fsr2h,c
 50726  01335A  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 50727  01335E  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 50728                           
 50729                           ; BSR set to: 13
 50730                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 50731                           
 50732                           ; BSR set to: 13
 50733  013362  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 50734  013366  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 50735  01336A  AEDF               	btfss	indf2,7,c
 50736  01336C  D014               	goto	i2l297
 50737                           
 50738                           ; BSR set to: 13
 50739  01336E  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 50740  013372  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 50741  013376  A4DF               	btfss	indf2,2,c
 50742  013378  D00E               	goto	i2l297
 50743                           
 50744                           ; BSR set to: 13
 50745                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 50746  01337A  0E01               	movlw	1
 50747  01337C  6F38               	movwf	56,b	;volatile
 50748                           
 50749                           ; BSR set to: 13
 50750                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 50751                           
 50752                           ; BSR set to: 13
 50753                           ;usb_device.c: 2176: break;
 50754  01337E  D00B               	goto	i2l297
 50755  013380                     i2l293:
 50756                           
 50757                           ; BSR set to: 13
 50758                           
 50759                           ; BSR set to: 13
 50760  013380  5130               	movf	48,w,b	;volatile
 50761  013382  0B1F               	andlw	31
 50762                           
 50763                           ; Switch size 1, requested type "space"
 50764                           ; Number of cases is 3, Range of values is 0 to 2
 50765                           ; switch strategies available:
 50766                           ; Name         Instructions Cycles
 50767                           ; simple_byte           10     6 (average)
 50768                           ;	Chosen strategy is simple_byte
 50769  013384  0A00               	xorlw	0	; case 0
 50770  013386  B4D8               	btfsc	status,2,c
 50771  013388  D7C6               	goto	i2l294
 50772  01338A  0A01               	xorlw	1	; case 1
 50773  01338C  B4D8               	btfsc	status,2,c
 50774  01338E  D7CB               	goto	i2l298
 50775  013390  0A03               	xorlw	3	; case 2
 50776  013392  B4D8               	btfsc	status,2,c
 50777  013394  D7CA               	goto	i2l299
 50778  013396                     i2l297:
 50779                           
 50780                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 50781  013396  AE55               	btfss	_inPipes+3,7,c	;volatile
 50782  013398  0012               	return	
 50783                           
 50784                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 50785  01339A  0E38               	movlw	56
 50786  01339C  6E52               	movwf	_inPipes,c	;volatile
 50787  01339E  0E0D               	movlw	13
 50788  0133A0  6E53               	movwf	_inPipes+1,c	;volatile
 50789                           
 50790                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 50791  0133A2  8055               	bsf	_inPipes+3,0,c	;volatile
 50792                           
 50793                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 50794  0133A4  0E02               	movlw	2
 50795  0133A6  6E56               	movwf	_inPipes+4,c	;volatile
 50796  0133A8  0012               	return	
 50797  0133AA                     __end_of_USBStdGetStatusHandler:
 50798                           	opt stack 0
 50799                           tosu	equ	0xFFF
 50800                           tosh	equ	0xFFE
 50801                           tosl	equ	0xFFD
 50802                           pclatu	equ	0xFFB
 50803                           pclath	equ	0xFFA
 50804                           tblptru	equ	0xFF8
 50805                           tblptrh	equ	0xFF7
 50806                           tblptrl	equ	0xFF6
 50807                           tablat	equ	0xFF5
 50808                           prodh	equ	0xFF4
 50809                           prodl	equ	0xFF3
 50810                           intcon	equ	0xFF2
 50811                           indf0	equ	0xFEF
 50812                           postinc0	equ	0xFEE
 50813                           fsr0h	equ	0xFEA
 50814                           fsr0l	equ	0xFE9
 50815                           wreg	equ	0xFE8
 50816                           indf1	equ	0xFE7
 50817                           postinc1	equ	0xFE6
 50818                           postdec1	equ	0xFE5
 50819                           plusw1	equ	0xFE3
 50820                           fsr1h	equ	0xFE2
 50821                           fsr1l	equ	0xFE1
 50822                           indf2	equ	0xFDF
 50823                           postinc2	equ	0xFDE
 50824                           postdec2	equ	0xFDD
 50825                           plusw2	equ	0xFDB
 50826                           fsr2h	equ	0xFDA
 50827                           fsr2l	equ	0xFD9
 50828                           status	equ	0xFD8
 50829                           
 50830 ;; *************** function _USBStdGetDscHandler *****************
 50831 ;; Defined at:
 50832 ;;		line 2045 in file "usb_device.c"
 50833 ;; Parameters:    Size  Location     Type
 50834 ;;		None
 50835 ;; Auto vars:     Size  Location     Type
 50836 ;;		None
 50837 ;; Return value:  Size  Location     Type
 50838 ;;                  1    wreg      void 
 50839 ;; Registers used:
 50840 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 50841 ;; Tracked objects:
 50842 ;;		On entry : 0/0
 50843 ;;		On exit  : 0/0
 50844 ;;		Unchanged: 0/0
 50845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50848 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50849 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50850 ;;Total ram usage:        2 bytes
 50851 ;; Hardware stack levels used:    1
 50852 ;; This function calls:
 50853 ;;		Nothing
 50854 ;; This function is called by:
 50855 ;;		_USBCheckStdRequest
 50856 ;; This function uses a non-reentrant model
 50857 ;;
 50858                           
 50859                           	psect	text212
 50860  010754                     __ptext212:
 50861                           	opt stack 0
 50862  010754                     _USBStdGetDscHandler:
 50863                           	opt stack 13
 50864                           
 50865                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 50866                           
 50867                           ;incstack = 0
 50868  010754  0E80               	movlw	128
 50869  010756  010D               	movlb	13	; () banked
 50870  010758  1930               	xorwf	48,w,b	;volatile
 50871  01075A  A4D8               	btfss	status,2,c
 50872  01075C  0012               	return	
 50873                           
 50874                           ; BSR set to: 13
 50875                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 50876  01075E  0EC0               	movlw	192
 50877  010760  6E55               	movwf	_inPipes+3,c	;volatile
 50878                           
 50879                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 50880  010762  D082               	goto	i2l280
 50881  010764                     
 50882                           ; BSR set to: 13
 50883                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 50884                           
 50885                           ; BSR set to: 13
 50886  010764  0E5B               	movlw	low _device_dsc
 50887  010766  6E52               	movwf	_inPipes,c	;volatile
 50888  010768  0EA2               	movlw	high _device_dsc
 50889  01076A  6E53               	movwf	_inPipes+1,c	;volatile
 50890                           
 50891                           ; BSR set to: 13
 50892                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 50893  01076C  0E00               	movlw	0
 50894  01076E  6E57               	movwf	_inPipes+5,c	;volatile
 50895  010770  0E12               	movlw	18
 50896  010772  6E56               	movwf	_inPipes+4,c	;volatile
 50897                           
 50898                           ;usb_device.c: 2060: break;
 50899  010774  0012               	return	
 50900  010776                     
 50901                           ; BSR set to: 13
 50902                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 50903                           
 50904                           ; BSR set to: 13
 50905  010776  5132               	movf	50,w,b	;volatile
 50906  010778  A4D8               	btfss	status,2,c
 50907  01077A  D042               	goto	i2l284
 50908                           
 50909                           ; BSR set to: 13
 50910                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 50911  01077C  5132               	movf	50,w,b	;volatile
 50912  01077E  0D02               	mullw	2
 50913  010780  0EEC               	movlw	low _USB_CD_Ptr
 50914  010782  24F3               	addwf	prodl,w,c
 50915  010784  6EF6               	movwf	tblptrl,c
 50916  010786  0E9D               	movlw	high _USB_CD_Ptr
 50917  010788  20F4               	addwfc	prodh,w,c
 50918  01078A  6EF7               	movwf	tblptrh,c
 50919  01078C                     	if	1	;There are 3 active tblptr bytes
 50920  01078C  6AF8               	clrf	tblptru,c
 50921  01078E  0E00               	movlw	low (__mediumconst shr (0+16))
 50922  010790  22F8               	addwfc	tblptru,f,c
 50923  010792                     	endif
 50924  010792  0009               	tblrd		*+
 50925  010794  CFF5 F052          	movff	tablat,_inPipes	;volatile
 50926  010798  000A               	tblrd		*-
 50927  01079A  CFF5 F053          	movff	tablat,_inPipes+1	;volatile
 50928                           
 50929                           ; BSR set to: 13
 50930                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 50931  01079E  0E02               	movlw	2
 50932  0107A0  2452               	addwf	_inPipes,w,c	;volatile
 50933  0107A2  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 50934  0107A4  0E00               	movlw	0
 50935  0107A6  2053               	addwfc	_inPipes+1,w,c	;volatile
 50936  0107A8  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 50937  0107AA  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 50938  0107AE  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 50939  0107B2  0E00               	movlw	low (__mediumconst shr (0+16))
 50940  0107B4  6EF8               	movwf	tblptru,c
 50941  0107B6  0E0E               	movlw	(high __ramtop+-1)
 50942  0107B8  64F7               	cpfsgt	tblptrh,c
 50943  0107BA  D003               	bra	i2u1203_47
 50944  0107BC  0008               	tblrd		*
 50945  0107BE  50F5               	movf	tablat,w,c
 50946  0107C0  D005               	bra	i2u1203_40
 50947  0107C2                     i2u1203_47:
 50948  0107C2  CFF6 FFE9          	movff	tblptrl,fsr0l
 50949  0107C6  CFF7 FFEA          	movff	tblptrh,fsr0h
 50950  0107CA  50EF               	movf	indf0,w,c
 50951  0107CC                     i2u1203_40:
 50952  0107CC  6E56               	movwf	_inPipes+4,c	;volatile
 50953                           
 50954                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 50955  0107CE  0E03               	movlw	3
 50956  0107D0  2452               	addwf	_inPipes,w,c	;volatile
 50957  0107D2  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 50958  0107D4  0E00               	movlw	0
 50959  0107D6  2053               	addwfc	_inPipes+1,w,c	;volatile
 50960  0107D8  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 50961  0107DA  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 50962  0107DE  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 50963  0107E2  0E00               	movlw	low (__mediumconst shr (0+16))
 50964  0107E4  6EF8               	movwf	tblptru,c
 50965  0107E6  0E0E               	movlw	(high __ramtop+-1)
 50966  0107E8  64F7               	cpfsgt	tblptrh,c
 50967  0107EA  D003               	bra	i2u1204_47
 50968  0107EC  0008               	tblrd		*
 50969  0107EE  50F5               	movf	tablat,w,c
 50970  0107F0  D005               	bra	i2u1204_40
 50971  0107F2                     i2u1204_47:
 50972  0107F2  CFF6 FFE9          	movff	tblptrl,fsr0l
 50973  0107F6  CFF7 FFEA          	movff	tblptrh,fsr0h
 50974  0107FA  50EF               	movf	indf0,w,c
 50975  0107FC                     i2u1204_40:
 50976  0107FC  6E57               	movwf	_inPipes+5,c	;volatile
 50977                           
 50978                           ;usb_device.c: 2078: }
 50979  0107FE  0012               	return	
 50980  010800                     i2l284:
 50981                           
 50982                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 50983  010800  0E00               	movlw	0
 50984  010802  6E55               	movwf	_inPipes+3,c	;volatile
 50985                           
 50986                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 50987  010804  0012               	return	
 50988  010806                     
 50989                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 50990  010806  0E04               	movlw	4
 50991  010808  010D               	movlb	13	; () banked
 50992  01080A  6132               	cpfslt	50,b	;volatile
 50993  01080C  D027               	goto	i2l287
 50994                           
 50995                           ; BSR set to: 13
 50996                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 50997  01080E  5132               	movf	50,w,b	;volatile
 50998  010810  0D02               	mullw	2
 50999  010812  0EE4               	movlw	low _USB_SD_Ptr
 51000  010814  24F3               	addwf	prodl,w,c
 51001  010816  6EF6               	movwf	tblptrl,c
 51002  010818  0E9D               	movlw	high _USB_SD_Ptr
 51003  01081A  20F4               	addwfc	prodh,w,c
 51004  01081C  6EF7               	movwf	tblptrh,c
 51005  01081E                     	if	1	;There are 3 active tblptr bytes
 51006  01081E  6AF8               	clrf	tblptru,c
 51007  010820  0E00               	movlw	low (__mediumconst shr (0+16))
 51008  010822  22F8               	addwfc	tblptru,f,c
 51009  010824                     	endif
 51010  010824  0009               	tblrd		*+
 51011  010826  CFF5 F052          	movff	tablat,_inPipes	;volatile
 51012  01082A  000A               	tblrd		*-
 51013  01082C  CFF5 F053          	movff	tablat,_inPipes+1	;volatile
 51014                           
 51015                           ; BSR set to: 13
 51016                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 51017  010830  C052  FFF6         	movff	_inPipes,tblptrl	;volatile
 51018  010834  C053  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 51019  010838  0E00               	movlw	low (__mediumconst shr (0+16))
 51020  01083A  6EF8               	movwf	tblptru,c
 51021  01083C  0E0E               	movlw	(high __ramtop+-1)
 51022  01083E  64F7               	cpfsgt	tblptrh,c
 51023  010840  D003               	bra	i2u1206_47
 51024  010842  0008               	tblrd		*
 51025  010844  50F5               	movf	tablat,w,c
 51026  010846  D005               	bra	i2u1206_40
 51027  010848                     i2u1206_47:
 51028  010848  CFF6 FFE9          	movff	tblptrl,fsr0l
 51029  01084C  CFF7 FFEA          	movff	tblptrh,fsr0h
 51030  010850  50EF               	movf	indf0,w,c
 51031  010852                     i2u1206_40:
 51032  010852  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 51033  010854  5001               	movf	??_USBStdGetDscHandler,w,c
 51034  010856  6E56               	movwf	_inPipes+4,c	;volatile
 51035  010858  6A57               	clrf	_inPipes+5,c	;volatile
 51036                           
 51037                           ;usb_device.c: 2094: }
 51038  01085A  0012               	return	
 51039  01085C                     i2l287:
 51040                           
 51041                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 51042  01085C  0E00               	movlw	0
 51043  01085E  6E55               	movwf	_inPipes+3,c	;volatile
 51044                           
 51045                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 51046  010860  0012               	return	
 51047  010862                     
 51048                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 51049  010862  0E00               	movlw	0
 51050  010864  6E55               	movwf	_inPipes+3,c	;volatile
 51051                           
 51052                           ;usb_device.c: 2112: }
 51053                           
 51054                           ;usb_device.c: 2111: break;
 51055  010866  0012               	return	
 51056  010868                     i2l280:
 51057  010868  010D               	movlb	13	; () banked
 51058  01086A  5133               	movf	51,w,b	;volatile
 51059                           
 51060                           ; Switch size 1, requested type "space"
 51061                           ; Number of cases is 3, Range of values is 1 to 3
 51062                           ; switch strategies available:
 51063                           ; Name         Instructions Cycles
 51064                           ; simple_byte           10     6 (average)
 51065                           ;	Chosen strategy is simple_byte
 51066  01086C  0A01               	xorlw	1	; case 1
 51067  01086E  B4D8               	btfsc	status,2,c
 51068  010870  D779               	goto	i2l281
 51069  010872  0A03               	xorlw	3	; case 2
 51070  010874  B4D8               	btfsc	status,2,c
 51071  010876  D77F               	goto	i2l283
 51072  010878  0A01               	xorlw	1	; case 3
 51073  01087A  B4D8               	btfsc	status,2,c
 51074  01087C  D7C4               	goto	i2l286
 51075  01087E  D7F1               	goto	i2l289
 51076  010880                     __end_of_USBStdGetDscHandler:
 51077                           	opt stack 0
 51078                           tosu	equ	0xFFF
 51079                           tosh	equ	0xFFE
 51080                           tosl	equ	0xFFD
 51081                           pclatu	equ	0xFFB
 51082                           pclath	equ	0xFFA
 51083                           tblptru	equ	0xFF8
 51084                           tblptrh	equ	0xFF7
 51085                           tblptrl	equ	0xFF6
 51086                           tablat	equ	0xFF5
 51087                           prodh	equ	0xFF4
 51088                           prodl	equ	0xFF3
 51089                           intcon	equ	0xFF2
 51090                           indf0	equ	0xFEF
 51091                           postinc0	equ	0xFEE
 51092                           fsr0h	equ	0xFEA
 51093                           fsr0l	equ	0xFE9
 51094                           wreg	equ	0xFE8
 51095                           indf1	equ	0xFE7
 51096                           postinc1	equ	0xFE6
 51097                           postdec1	equ	0xFE5
 51098                           plusw1	equ	0xFE3
 51099                           fsr1h	equ	0xFE2
 51100                           fsr1l	equ	0xFE1
 51101                           indf2	equ	0xFDF
 51102                           postinc2	equ	0xFDE
 51103                           postdec2	equ	0xFDD
 51104                           plusw2	equ	0xFDB
 51105                           fsr2h	equ	0xFDA
 51106                           fsr2l	equ	0xFD9
 51107                           status	equ	0xFD8
 51108                           
 51109 ;; *************** function _USBStdFeatureReqHandler *****************
 51110 ;; Defined at:
 51111 ;;		line 2756 in file "usb_device.c"
 51112 ;; Parameters:    Size  Location     Type
 51113 ;;		None
 51114 ;; Auto vars:     Size  Location     Type
 51115 ;;  p               2   27[COMRAM] PTR struct __BDT
 51116 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 51117 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 51118 ;;		 -> UEP0(1), 
 51119 ;;  current_ep_d    1   26[COMRAM] struct .
 51120 ;; Return value:  Size  Location     Type
 51121 ;;                  1    wreg      void 
 51122 ;; Registers used:
 51123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 51124 ;; Tracked objects:
 51125 ;;		On entry : 0/0
 51126 ;;		On exit  : 0/0
 51127 ;;		Unchanged: 0/0
 51128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51130 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51131 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51132 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51133 ;;Total ram usage:        6 bytes
 51134 ;; Hardware stack levels used:    1
 51135 ;; Hardware stack levels required when called:    4
 51136 ;; This function calls:
 51137 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 51138 ;; This function is called by:
 51139 ;;		_USBCheckStdRequest
 51140 ;; This function uses a non-reentrant model
 51141 ;;
 51142                           
 51143                           	psect	text213
 51144  00DE66                     __ptext213:
 51145                           	opt stack 0
 51146  00DE66                     _USBStdFeatureReqHandler:
 51147                           	opt stack 9
 51148                           
 51149                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 51150                           
 51151                           ;incstack = 0
 51152  00DE66  010D               	movlb	13	; () banked
 51153  00DE68  0532               	decf	50,w,b	;volatile
 51154  00DE6A  A4D8               	btfss	status,2,c
 51155  00DE6C  D00F               	goto	i2l373
 51156                           
 51157                           ; BSR set to: 13
 51158  00DE6E  5130               	movf	48,w,b	;volatile
 51159  00DE70  0B1F               	andlw	31
 51160  00DE72  0900               	iorlw	0
 51161  00DE74  A4D8               	btfss	status,2,c
 51162  00DE76  D00A               	goto	i2l373
 51163                           
 51164                           ; BSR set to: 13
 51165                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 51166  00DE78  8E55               	bsf	_inPipes+3,7,c	;volatile
 51167                           
 51168                           ; BSR set to: 13
 51169                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 51170  00DE7A  0E03               	movlw	3
 51171  00DE7C  1931               	xorwf	49,w,b	;volatile
 51172  00DE7E  A4D8               	btfss	status,2,c
 51173  00DE80  D002               	goto	i2l372
 51174                           
 51175                           ; BSR set to: 13
 51176                           ;usb_device.c: 2806: RemoteWakeup = 1;
 51177  00DE82  0E01               	movlw	1
 51178  00DE84  D001               	goto	L78
 51179  00DE86                     i2l372:
 51180                           
 51181                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 51182                           
 51183                           ; BSR set to: 1
 51184  00DE86  0E00               	movlw	0
 51185  00DE88                     L78:
 51186  00DE88  0101               	movlb	1	; () banked
 51187  00DE8A  6F6E               	movwf	_RemoteWakeup& (0+255),b	;volatile
 51188  00DE8C                     i2l373:
 51189                           
 51190                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 51191                           
 51192                           ; BSR set to: 1
 51193  00DE8C  010D               	movlb	13	; () banked
 51194  00DE8E  5132               	movf	50,w,b	;volatile
 51195  00DE90  A4D8               	btfss	status,2,c
 51196  00DE92  0012               	return	
 51197                           
 51198                           ; BSR set to: 13
 51199  00DE94  5130               	movf	48,w,b	;volatile
 51200  00DE96  0B1F               	andlw	31
 51201  00DE98  0A02               	xorlw	2
 51202  00DE9A  A4D8               	btfss	status,2,c
 51203  00DE9C  0012               	return	
 51204                           
 51205                           ; BSR set to: 13
 51206  00DE9E  5134               	movf	52,w,b	;volatile
 51207  00DEA0  0B0F               	andlw	15
 51208  00DEA2  0900               	iorlw	0
 51209  00DEA4  B4D8               	btfsc	status,2,c
 51210  00DEA6  0012               	return	
 51211                           
 51212                           ; BSR set to: 13
 51213  00DEA8  5134               	movf	52,w,b	;volatile
 51214  00DEAA  0B0F               	andlw	15
 51215  00DEAC  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51216  00DEAE  0E03               	movlw	3
 51217  00DEB0  6018               	cpfslt	??_USBStdFeatureReqHandler,c
 51218  00DEB2  0012               	return	
 51219                           
 51220                           ; BSR set to: 13
 51221  00DEB4  0E20               	movlw	32
 51222  00DEB6  185E               	xorwf	_USBDeviceState,w,c	;volatile
 51223  00DEB8  A4D8               	btfss	status,2,c
 51224  00DEBA  0012               	return	
 51225                           
 51226                           ; BSR set to: 13
 51227                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 51228  00DEBC  8E55               	bsf	_inPipes+3,7,c	;volatile
 51229                           
 51230                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 51231  00DEBE  BF34               	btfsc	52,7,b	;volatile
 51232  00DEC0  D019               	goto	i2l375
 51233                           
 51234                           ; BSR set to: 13
 51235                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 51236  00DEC2  5134               	movf	52,w,b	;volatile
 51237  00DEC4  0B0F               	andlw	15
 51238  00DEC6  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51239  00DEC8  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51240  00DECA  0D02               	mullw	2
 51241  00DECC  0E21               	movlw	low _pBDTEntryOut
 51242  00DECE  24F3               	addwf	prodl,w,c
 51243  00DED0  6ED9               	movwf	fsr2l,c
 51244  00DED2  0E01               	movlw	high _pBDTEntryOut
 51245  00DED4  20F4               	addwfc	prodh,w,c
 51246  00DED6  6EDA               	movwf	fsr2h,c
 51247  00DED8  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 51248  00DEDC  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 51249                           
 51250                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 51251  00DEE0  5134               	movf	52,w,b	;volatile
 51252  00DEE2  0B0F               	andlw	15
 51253  00DEE4  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51254  00DEE6  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51255  00DEE8  0D01               	mullw	1
 51256  00DEEA  0E39               	movlw	low _ep_data_out
 51257  00DEEC  24F3               	addwf	prodl,w,c
 51258  00DEEE  6ED9               	movwf	fsr2l,c
 51259  00DEF0  0E01               	movlw	high _ep_data_out
 51260  00DEF2  D018               	goto	L79
 51261  00DEF4                     i2l375:
 51262                           
 51263                           ; BSR set to: 13
 51264                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 51265                           
 51266                           ; BSR set to: 13
 51267  00DEF4  5134               	movf	52,w,b	;volatile
 51268  00DEF6  0B0F               	andlw	15
 51269  00DEF8  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51270  00DEFA  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51271  00DEFC  0D02               	mullw	2
 51272  00DEFE  0E1B               	movlw	low _pBDTEntryIn
 51273  00DF00  24F3               	addwf	prodl,w,c
 51274  00DF02  6ED9               	movwf	fsr2l,c
 51275  00DF04  0E01               	movlw	high _pBDTEntryIn
 51276  00DF06  20F4               	addwfc	prodh,w,c
 51277  00DF08  6EDA               	movwf	fsr2h,c
 51278  00DF0A  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 51279  00DF0E  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 51280                           
 51281                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 51282  00DF12  5134               	movf	52,w,b	;volatile
 51283  00DF14  0B0F               	andlw	15
 51284  00DF16  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51285  00DF18  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51286  00DF1A  0D01               	mullw	1
 51287  00DF1C  0E3C               	movlw	low _ep_data_in
 51288  00DF1E  24F3               	addwf	prodl,w,c
 51289  00DF20  6ED9               	movwf	fsr2l,c
 51290  00DF22  0E01               	movlw	high _ep_data_in
 51291  00DF24                     L79:
 51292  00DF24  20F4               	addwfc	prodh,w,c
 51293  00DF26  6EDA               	movwf	fsr2h,c
 51294  00DF28  50DF               	movf	indf2,w,c
 51295  00DF2A  6E1B               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 51296                           
 51297                           ; BSR set to: 13
 51298                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 51299                           
 51300                           ; BSR set to: 13
 51301  00DF2C  B01B               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 51302  00DF2E  D006               	goto	i2l377
 51303                           
 51304                           ; BSR set to: 13
 51305                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 51306  00DF30  0EFB               	movlw	251
 51307  00DF32  141C               	andwf	USBStdFeatureReqHandler@p,w,c
 51308  00DF34  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 51309  00DF36  0EFF               	movlw	255
 51310  00DF38  141D               	andwf	USBStdFeatureReqHandler@p+1,w,c
 51311  00DF3A  D004               	goto	L80
 51312  00DF3C                     i2l377:
 51313                           
 51314                           ; BSR set to: 13
 51315                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 51316                           
 51317                           ; BSR set to: 13
 51318  00DF3C  0E04               	movlw	4
 51319  00DF3E  101C               	iorwf	USBStdFeatureReqHandler@p,w,c
 51320  00DF40  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 51321  00DF42  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 51322  00DF44                     L80:
 51323  00DF44  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 51324                           
 51325                           ; BSR set to: 13
 51326                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 51327                           
 51328                           ; BSR set to: 13
 51329  00DF46  BF34               	btfsc	52,7,b	;volatile
 51330  00DF48  D00A               	goto	i2l379
 51331                           
 51332                           ; BSR set to: 13
 51333                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 51334  00DF4A  5134               	movf	52,w,b	;volatile
 51335  00DF4C  0B0F               	andlw	15
 51336  00DF4E  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51337  00DF50  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51338  00DF52  0D02               	mullw	2
 51339  00DF54  0E21               	movlw	low _pBDTEntryOut
 51340  00DF56  24F3               	addwf	prodl,w,c
 51341  00DF58  6ED9               	movwf	fsr2l,c
 51342  00DF5A  0E01               	movlw	high _pBDTEntryOut
 51343  00DF5C  D009               	goto	L81
 51344  00DF5E                     i2l379:
 51345                           
 51346                           ; BSR set to: 13
 51347                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 51348                           
 51349                           ; BSR set to: 13
 51350  00DF5E  5134               	movf	52,w,b	;volatile
 51351  00DF60  0B0F               	andlw	15
 51352  00DF62  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51353  00DF64  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51354  00DF66  0D02               	mullw	2
 51355  00DF68  0E1B               	movlw	low _pBDTEntryIn
 51356  00DF6A  24F3               	addwf	prodl,w,c
 51357  00DF6C  6ED9               	movwf	fsr2l,c
 51358  00DF6E  0E01               	movlw	high _pBDTEntryIn
 51359  00DF70                     L81:
 51360  00DF70  20F4               	addwfc	prodh,w,c
 51361  00DF72  6EDA               	movwf	fsr2h,c
 51362  00DF74  C01C  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 51363  00DF78  C01D  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 51364                           
 51365                           ; BSR set to: 13
 51366                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 51367                           
 51368                           ; BSR set to: 13
 51369  00DF7C  0E03               	movlw	3
 51370  00DF7E  1931               	xorwf	49,w,b	;volatile
 51371  00DF80  A4D8               	btfss	status,2,c
 51372  00DF82  D02D               	goto	i2l381
 51373                           
 51374                           ; BSR set to: 13
 51375                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 51376  00DF84  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51377  00DF88  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51378  00DF8C  AEDF               	btfss	indf2,7,c
 51379  00DF8E  D01A               	goto	i2l384
 51380                           
 51381                           ; BSR set to: 13
 51382                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 51383  00DF90  BF34               	btfsc	52,7,b	;volatile
 51384  00DF92  D00A               	goto	i2l383
 51385                           
 51386                           ; BSR set to: 13
 51387                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 51388  00DF94  5134               	movf	52,w,b	;volatile
 51389  00DF96  0B0F               	andlw	15
 51390  00DF98  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51391  00DF9A  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51392  00DF9C  0D01               	mullw	1
 51393  00DF9E  0E39               	movlw	low _ep_data_out
 51394  00DFA0  24F3               	addwf	prodl,w,c
 51395  00DFA2  6ED9               	movwf	fsr2l,c
 51396  00DFA4  0E01               	movlw	high _ep_data_out
 51397  00DFA6  D00A               	goto	L82
 51398  00DFA8                     i2l383:
 51399                           
 51400                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 51401                           
 51402                           ; BSR set to: 1
 51403  00DFA8  010D               	movlb	13	; () banked
 51404  00DFAA  5134               	movf	52,w,b	;volatile
 51405  00DFAC  0B0F               	andlw	15
 51406  00DFAE  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51407  00DFB0  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51408  00DFB2  0D01               	mullw	1
 51409  00DFB4  0E3C               	movlw	low _ep_data_in
 51410  00DFB6  24F3               	addwf	prodl,w,c
 51411  00DFB8  6ED9               	movwf	fsr2l,c
 51412  00DFBA  0E01               	movlw	high _ep_data_in
 51413  00DFBC                     L82:
 51414  00DFBC  20F4               	addwfc	prodh,w,c
 51415  00DFBE  6EDA               	movwf	fsr2h,c
 51416  00DFC0  0101               	movlb	1	; () banked
 51417  00DFC2  82DF               	bsf	indf2,1,c
 51418  00DFC4                     i2l384:
 51419                           
 51420                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 51421                           
 51422                           ; BSR set to: 1
 51423                           
 51424                           ; BSR set to: 1
 51425  00DFC4  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51426  00DFC8  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51427  00DFCC  0E00               	movlw	0
 51428  00DFCE  84DB               	bsf	plusw2,2,c
 51429                           
 51430                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 51431  00DFD0  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51432  00DFD4  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51433  00DFD8  0E00               	movlw	0
 51434  00DFDA  8EDB               	bsf	plusw2,7,c
 51435                           
 51436                           ;usb_device.c: 2878: }
 51437  00DFDC  0012               	return	
 51438  00DFDE                     i2l381:
 51439                           
 51440                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 51441  00DFDE  0E04               	movlw	4
 51442  00DFE0  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 51443  00DFE2  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 51444  00DFE4  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 51445  00DFE6  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 51446                           
 51447                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 51448  00DFE8  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51449  00DFEC  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51450  00DFF0  AEDF               	btfss	indf2,7,c
 51451  00DFF2  D01B               	goto	i2l386
 51452                           
 51453                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 51454  00DFF4  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51455  00DFF8  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51456  00DFFC  0E7F               	movlw	127
 51457  00DFFE  16DF               	andwf	indf2,f,c
 51458                           
 51459                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 51460  00E000  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51461  00E004  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51462  00E008  0E00               	movlw	0
 51463  00E00A  8CDB               	bsf	plusw2,6,c
 51464                           
 51465                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 51466  00E00C  0E00               	movlw	0
 51467  00E00E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 51468  00E010  0E05               	movlw	5
 51469  00E012  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 51470  00E014  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 51471  00E018  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 51472  00E01C  0E00               	movlw	0
 51473  00E01E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 51474  00E020  0E02               	movlw	2
 51475  00E022  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 51476  00E024  EC74  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 51477                           
 51478                           ;usb_device.c: 2893: }
 51479  00E028  D006               	goto	i2l387
 51480  00E02A                     i2l386:
 51481                           
 51482                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 51483  00E02A  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51484  00E02E  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51485  00E032  0E00               	movlw	0
 51486  00E034  8CDB               	bsf	plusw2,6,c
 51487  00E036                     i2l387:
 51488                           
 51489                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 51490  00E036  0E04               	movlw	4
 51491  00E038  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 51492  00E03A  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 51493  00E03C  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 51494  00E03E  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 51495                           
 51496                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 51497  00E040  B21B               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 51498  00E042  D006               	goto	i2u1228_40
 51499  00E044  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51500  00E048  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51501  00E04C  AEDF               	btfss	indf2,7,c
 51502  00E04E  D030               	goto	i2l388
 51503  00E050                     i2u1228_40:
 51504                           
 51505                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 51506  00E050  010D               	movlb	13	; () banked
 51507  00E052  BF34               	btfsc	52,7,b	;volatile
 51508  00E054  D00A               	goto	i2l391
 51509                           
 51510                           ; BSR set to: 13
 51511                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 51512  00E056  5134               	movf	52,w,b	;volatile
 51513  00E058  0B0F               	andlw	15
 51514  00E05A  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51515  00E05C  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51516  00E05E  0D01               	mullw	1
 51517  00E060  0E39               	movlw	low _ep_data_out
 51518  00E062  24F3               	addwf	prodl,w,c
 51519  00E064  6ED9               	movwf	fsr2l,c
 51520  00E066  0E01               	movlw	high _ep_data_out
 51521  00E068  D00A               	goto	L83
 51522  00E06A                     i2l391:
 51523                           
 51524                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 51525                           
 51526                           ; BSR set to: 1
 51527  00E06A  010D               	movlb	13	; () banked
 51528  00E06C  5134               	movf	52,w,b	;volatile
 51529  00E06E  0B0F               	andlw	15
 51530  00E070  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51531  00E072  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51532  00E074  0D01               	mullw	1
 51533  00E076  0E3C               	movlw	low _ep_data_in
 51534  00E078  24F3               	addwf	prodl,w,c
 51535  00E07A  6ED9               	movwf	fsr2l,c
 51536  00E07C  0E01               	movlw	high _ep_data_in
 51537  00E07E                     L83:
 51538  00E07E  20F4               	addwfc	prodh,w,c
 51539  00E080  6EDA               	movwf	fsr2h,c
 51540  00E082  0101               	movlb	1	; () banked
 51541  00E084  92DF               	bcf	indf2,1,c
 51542                           
 51543                           ; BSR set to: 1
 51544                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 51545                           
 51546                           ; BSR set to: 1
 51547  00E086  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51548  00E08A  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51549  00E08E  0E3B               	movlw	59
 51550  00E090  16DF               	andwf	indf2,f,c
 51551                           
 51552                           ; BSR set to: 1
 51553                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 51554  00E092  0E00               	movlw	0
 51555  00E094  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 51556  00E096  0E05               	movlw	5
 51557  00E098  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 51558  00E09A  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 51559  00E09E  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 51560  00E0A2  0E00               	movlw	0
 51561  00E0A4  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 51562  00E0A6  0E02               	movlw	2
 51563  00E0A8  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 51564  00E0AA  EC74  F09C         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 51565                           
 51566                           ;usb_device.c: 2923: }
 51567  00E0AE  D006               	goto	i2l393
 51568  00E0B0                     i2l388:
 51569                           
 51570                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 51571  00E0B0  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51572  00E0B4  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51573  00E0B8  0E3B               	movlw	59
 51574  00E0BA  16DF               	andwf	indf2,f,c
 51575  00E0BC                     i2l393:
 51576                           
 51577                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 51578  00E0BC  010D               	movlb	13	; () banked
 51579  00E0BE  5134               	movf	52,w,b	;volatile
 51580  00E0C0  0B0F               	andlw	15
 51581  00E0C2  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51582  00E0C4  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51583  00E0C6  0D01               	mullw	1
 51584  00E0C8  0E26               	movlw	38
 51585  00E0CA  24F3               	addwf	prodl,w,c
 51586  00E0CC  6E19               	movwf	USBStdFeatureReqHandler@pUEP,c
 51587  00E0CE  0E0F               	movlw	15
 51588  00E0D0  20F4               	addwfc	prodh,w,c
 51589  00E0D2  6E1A               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 51590                           
 51591                           ; BSR set to: 13
 51592                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 51593  00E0D4  C019  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 51594  00E0D8  C01A  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 51595  00E0DC  0EFE               	movlw	254
 51596  00E0DE  16DF               	andwf	indf2,f,c
 51597                           
 51598                           ; BSR set to: 13
 51599  00E0E0  0012               	return	
 51600  00E0E2                     __end_of_USBStdFeatureReqHandler:
 51601                           	opt stack 0
 51602                           tosu	equ	0xFFF
 51603                           tosh	equ	0xFFE
 51604                           tosl	equ	0xFFD
 51605                           pclatu	equ	0xFFB
 51606                           pclath	equ	0xFFA
 51607                           tblptru	equ	0xFF8
 51608                           tblptrh	equ	0xFF7
 51609                           tblptrl	equ	0xFF6
 51610                           tablat	equ	0xFF5
 51611                           prodh	equ	0xFF4
 51612                           prodl	equ	0xFF3
 51613                           intcon	equ	0xFF2
 51614                           indf0	equ	0xFEF
 51615                           postinc0	equ	0xFEE
 51616                           fsr0h	equ	0xFEA
 51617                           fsr0l	equ	0xFE9
 51618                           wreg	equ	0xFE8
 51619                           indf1	equ	0xFE7
 51620                           postinc1	equ	0xFE6
 51621                           postdec1	equ	0xFE5
 51622                           plusw1	equ	0xFE3
 51623                           fsr1h	equ	0xFE2
 51624                           fsr1l	equ	0xFE1
 51625                           indf2	equ	0xFDF
 51626                           postinc2	equ	0xFDE
 51627                           postdec2	equ	0xFDD
 51628                           plusw2	equ	0xFDB
 51629                           fsr2h	equ	0xFDA
 51630                           fsr2l	equ	0xFD9
 51631                           status	equ	0xFD8
 51632                           
 51633 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 51634 ;; Defined at:
 51635 ;;		line 54 in file "usb_events.c"
 51636 ;; Parameters:    Size  Location     Type
 51637 ;;  event           2   15[COMRAM] enum E6832
 51638 ;;  pdata           2   17[COMRAM] PTR void 
 51639 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 51640 ;;		 -> BDT(48), 
 51641 ;;  size            2   19[COMRAM] unsigned int 
 51642 ;; Auto vars:     Size  Location     Type
 51643 ;;		None
 51644 ;; Return value:  Size  Location     Type
 51645 ;;                  1    wreg      unsigned char 
 51646 ;; Registers used:
 51647 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 51648 ;; Tracked objects:
 51649 ;;		On entry : 0/0
 51650 ;;		On exit  : 0/0
 51651 ;;		Unchanged: 0/0
 51652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51653 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51655 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51656 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51657 ;;Total ram usage:        8 bytes
 51658 ;; Hardware stack levels used:    1
 51659 ;; Hardware stack levels required when called:    3
 51660 ;; This function calls:
 51661 ;;		_APP_DeviceCustomHIDInitialize
 51662 ;;		_APP_DeviceMSDInitialize
 51663 ;;		_MSDTransferTerminated
 51664 ;;		_USBCheckHIDRequest
 51665 ;;		_USBCheckMSDRequest
 51666 ;;		i2_SYSTEM_Initialize
 51667 ;; This function is called by:
 51668 ;;		_USBDeviceTasks
 51669 ;;		_USBStdSetCfgHandler
 51670 ;;		_USBSuspend
 51671 ;;		_USBWakeFromSuspend
 51672 ;;		_USBCtrlTrfSetupHandler
 51673 ;;		_USBCheckStdRequest
 51674 ;;		_USBStdFeatureReqHandler
 51675 ;; This function uses a non-reentrant model
 51676 ;;
 51677                           
 51678                           	psect	text214
 51679  0138E8                     __ptext214:
 51680                           	opt stack 0
 51681  0138E8                     _USER_USB_CALLBACK_EVENT_HANDLER:
 51682                           	opt stack 13
 51683                           
 51684                           ;usb_events.c: 56: switch((int)event)
 51685                           
 51686                           ;incstack = 0
 51687  0138E8  D019               	goto	i2l816
 51688  0138EA                     
 51689                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 51690  0138EA  0E01               	movlw	1
 51691  0138EC  EC7F  F0A5         	call	i2_SYSTEM_Initialize
 51692                           
 51693                           ;usb_events.c: 79: break;
 51694  0138F0  0012               	return	
 51695  0138F2                     
 51696                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 51697  0138F2  0E02               	movlw	2
 51698  0138F4  EC7F  F0A5         	call	i2_SYSTEM_Initialize
 51699                           
 51700                           ;usb_events.c: 90: break;
 51701  0138F8  0012               	return	
 51702  0138FA                     
 51703                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 51704  0138FA  EC99  F0A9         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 51705                           
 51706                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 51707  0138FE  EC88  F0AC         	call	_APP_DeviceMSDInitialize	;wreg free
 51708                           
 51709                           ;usb_events.c: 100: break;
 51710                           
 51711                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 51712                           
 51713                           ;usb_events.c: 97: break;
 51714  013902  0012               	return	
 51715  013904                     
 51716                           ;usb_events.c: 105: USBCheckHIDRequest();
 51717  013904  EC40  F092         	call	_USBCheckHIDRequest	;wreg free
 51718                           
 51719                           ;usb_events.c: 108: USBCheckMSDRequest();
 51720  013908  EC6E  F095         	call	_USBCheckMSDRequest	;wreg free
 51721                           
 51722                           ;usb_events.c: 112: break;
 51723                           
 51724                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 51725                           
 51726                           ;usb_events.c: 109: break;
 51727  01390C  0012               	return	
 51728  01390E                     
 51729                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 51730  01390E  C012  F00C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 51731  013912  C013  F00D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 51732  013916  ECD6  F0A4         	call	_MSDTransferTerminated	;wreg free
 51733                           
 51734                           ;usb_events.c: 129: }
 51735                           
 51736                           ;usb_events.c: 128: break;
 51737                           
 51738                           ;usb_events.c: 127: default:
 51739                           
 51740                           ;usb_events.c: 125: break;
 51741  01391A  0012               	return	
 51742  01391C                     i2l816:
 51743  01391C  C010  F016         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 51744  013920  C011  F017         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 51745                           
 51746                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 51747                           ; Switch size 1, requested type "space"
 51748                           ; Number of cases is 2, Range of values is 0 to 127
 51749                           ; switch strategies available:
 51750                           ; Name         Instructions Cycles
 51751                           ; simple_byte            7     4 (average)
 51752                           ;	Chosen strategy is simple_byte
 51753  013924  5017               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 51754  013926  0A00               	xorlw	0	; case 0
 51755  013928  B4D8               	btfsc	status,2,c
 51756  01392A  D004               	goto	i2l19377
 51757  01392C  0A7F               	xorlw	127	; case 127
 51758  01392E  A4D8               	btfss	status,2,c
 51759  013930  0012               	return	
 51760  013932  D01A               	goto	i2l19379
 51761  013934                     i2l19377:
 51762                           
 51763                           ; Switch size 1, requested type "space"
 51764                           ; Number of cases is 8, Range of values is 1 to 117
 51765                           ; switch strategies available:
 51766                           ; Name         Instructions Cycles
 51767                           ; simple_byte           25    13 (average)
 51768                           ;	Chosen strategy is simple_byte
 51769  013934  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 51770  013936  0A01               	xorlw	1	; case 1
 51771  013938  B4D8               	btfsc	status,2,c
 51772  01393A  D7DF               	goto	i2l822
 51773  01393C  0A03               	xorlw	3	; case 2
 51774  01393E  B4D8               	btfsc	status,2,c
 51775  013940  0012               	return	
 51776  013942  0A01               	xorlw	1	; case 3
 51777  013944  B4D8               	btfsc	status,2,c
 51778  013946  D7DE               	goto	i2l824
 51779  013948  0A06               	xorlw	6	; case 5
 51780  01394A  B4D8               	btfsc	status,2,c
 51781  01394C  D7E0               	goto	i2l826
 51782  01394E  0A77               	xorlw	119	; case 114
 51783  013950  B4D8               	btfsc	status,2,c
 51784  013952  0012               	return	
 51785  013954  0A01               	xorlw	1	; case 115
 51786  013956  B4D8               	btfsc	status,2,c
 51787  013958  0012               	return	
 51788  01395A  0A07               	xorlw	7	; case 116
 51789  01395C  B4D8               	btfsc	status,2,c
 51790  01395E  D7C9               	goto	i2l821
 51791  013960  0A01               	xorlw	1	; case 117
 51792  013962  A4D8               	btfss	status,2,c
 51793  013964  0012               	return	
 51794  013966  D7C1               	goto	i2l820
 51795  013968                     i2l19379:
 51796                           
 51797                           ; Switch size 1, requested type "space"
 51798                           ; Number of cases is 1, Range of values is 255 to 255
 51799                           ; switch strategies available:
 51800                           ; Name         Instructions Cycles
 51801                           ; simple_byte            4     3 (average)
 51802                           ;	Chosen strategy is simple_byte
 51803  013968  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 51804  01396A  0AFF               	xorlw	255	; case 255
 51805  01396C  0012               	return	
 51806  01396E                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 51807                           	opt stack 0
 51808                           tosu	equ	0xFFF
 51809                           tosh	equ	0xFFE
 51810                           tosl	equ	0xFFD
 51811                           pclatu	equ	0xFFB
 51812                           pclath	equ	0xFFA
 51813                           tblptru	equ	0xFF8
 51814                           tblptrh	equ	0xFF7
 51815                           tblptrl	equ	0xFF6
 51816                           tablat	equ	0xFF5
 51817                           prodh	equ	0xFF4
 51818                           prodl	equ	0xFF3
 51819                           intcon	equ	0xFF2
 51820                           indf0	equ	0xFEF
 51821                           postinc0	equ	0xFEE
 51822                           fsr0h	equ	0xFEA
 51823                           fsr0l	equ	0xFE9
 51824                           wreg	equ	0xFE8
 51825                           indf1	equ	0xFE7
 51826                           postinc1	equ	0xFE6
 51827                           postdec1	equ	0xFE5
 51828                           plusw1	equ	0xFE3
 51829                           fsr1h	equ	0xFE2
 51830                           fsr1l	equ	0xFE1
 51831                           indf2	equ	0xFDF
 51832                           postinc2	equ	0xFDE
 51833                           postdec2	equ	0xFDD
 51834                           plusw2	equ	0xFDB
 51835                           fsr2h	equ	0xFDA
 51836                           fsr2l	equ	0xFD9
 51837                           status	equ	0xFD8
 51838                           
 51839 ;; *************** function i2_SYSTEM_Initialize *****************
 51840 ;; Defined at:
 51841 ;;		line 39 in file "system.c"
 51842 ;; Parameters:    Size  Location     Type
 51843 ;;  state           1    wreg     enum E6623
 51844 ;; Auto vars:     Size  Location     Type
 51845 ;;  state           1    4[COMRAM] enum E6623
 51846 ;;  SYSTEM_Initi    2    2[COMRAM] unsigned int 
 51847 ;;  SYSTEM_Initi    2    0[COMRAM] unsigned int 
 51848 ;; Return value:  Size  Location     Type
 51849 ;;                  1    wreg      void 
 51850 ;; Registers used:
 51851 ;;		wreg, status,2, status,0
 51852 ;; Tracked objects:
 51853 ;;		On entry : 0/0
 51854 ;;		On exit  : 0/0
 51855 ;;		Unchanged: 0/0
 51856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51858 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51860 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51861 ;;Total ram usage:        5 bytes
 51862 ;; Hardware stack levels used:    1
 51863 ;; This function calls:
 51864 ;;		Nothing
 51865 ;; This function is called by:
 51866 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 51867 ;; This function uses a non-reentrant model
 51868 ;;
 51869                           
 51870                           	psect	text215
 51871  014AFE                     __ptext215:
 51872                           	opt stack 0
 51873  014AFE                     i2_SYSTEM_Initialize:
 51874                           	opt stack 15
 51875                           
 51876                           ;incstack = 0
 51877                           ;i2SYSTEM_Initialize@state stored from wreg
 51878  014AFE  6E05               	movwf	i2SYSTEM_Initialize@state,c
 51879                           
 51880                           ;system.c: 41: switch(state)
 51881  014B00  D01D               	goto	i2l897
 51882  014B02                     
 51883                           ;system.c: 50: {;system.c: 51: unsigned int pll_startup_counter = 600;
 51884  014B02  0E02               	movlw	2
 51885  014B04  6E02               	movwf	i2SYSTEM_Initialize@pll_startup_counter+1,c
 51886  014B06  0E58               	movlw	88
 51887  014B08  6E01               	movwf	i2SYSTEM_Initialize@pll_startup_counter,c
 51888                           
 51889                           ;system.c: 52: OSCTUNEbits.PLLEN = 1;
 51890  014B0A  8C9B               	bsf	3995,6,c	;volatile
 51891  014B0C                     i2l12739:
 51892  014B0C  0601               	decf	i2SYSTEM_Initialize@pll_startup_counter,f,c
 51893  014B0E  A0D8               	btfss	status,0,c
 51894  014B10  0602               	decf	i2SYSTEM_Initialize@pll_startup_counter+1,f,c
 51895  014B12  2801               	incf	i2SYSTEM_Initialize@pll_startup_counter,w,c
 51896  014B14  E1FB               	bnz	i2l12739
 51897  014B16  2802               	incf	i2SYSTEM_Initialize@pll_startup_counter+1,w,c
 51898  014B18  B4D8               	btfsc	status,2,c
 51899  014B1A  0012               	return	
 51900  014B1C  D7F7               	goto	i2l900
 51901  014B1E                     
 51902                           ;system.c: 78: OSCCON = 0x70;
 51903  014B1E  0E70               	movlw	112
 51904  014B20  6ED3               	movwf	4051,c	;volatile
 51905                           
 51906                           ;system.c: 84: {;system.c: 85: unsigned int pll_startup_counter = 800;
 51907  014B22  0E03               	movlw	3
 51908  014B24  6E04               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3132+1,c
 51909  014B26  0E20               	movlw	32
 51910  014B28  6E03               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3132,c
 51911  014B2A                     i2l12743:
 51912  014B2A  0603               	decf	i2SYSTEM_Initialize@pll_startup_counter_3132,f,c
 51913  014B2C  A0D8               	btfss	status,0,c
 51914  014B2E  0604               	decf	i2SYSTEM_Initialize@pll_startup_counter_3132+1,f,c
 51915  014B30  2803               	incf	i2SYSTEM_Initialize@pll_startup_counter_3132,w,c
 51916  014B32  E1FB               	bnz	i2l12743
 51917  014B34  2804               	incf	i2SYSTEM_Initialize@pll_startup_counter_3132+1,w,c
 51918  014B36  B4D8               	btfsc	status,2,c
 51919  014B38  0012               	return	
 51920  014B3A  D7F7               	goto	i2l906
 51921  014B3C                     i2l897:
 51922  014B3C  5005               	movf	i2SYSTEM_Initialize@state,w,c
 51923                           
 51924                           ; Switch size 1, requested type "space"
 51925                           ; Number of cases is 3, Range of values is 0 to 2
 51926                           ; switch strategies available:
 51927                           ; Name         Instructions Cycles
 51928                           ; simple_byte           10     6 (average)
 51929                           ;	Chosen strategy is simple_byte
 51930  014B3E  0A00               	xorlw	0	; case 0
 51931  014B40  B4D8               	btfsc	status,2,c
 51932  014B42  D7DF               	goto	i2l898
 51933  014B44  0A01               	xorlw	1	; case 1
 51934  014B46  B4D8               	btfsc	status,2,c
 51935  014B48  0012               	return	
 51936  014B4A  0A03               	xorlw	3	; case 2
 51937  014B4C  A4D8               	btfss	status,2,c
 51938  014B4E  0012               	return	
 51939  014B50  D7E6               	goto	i2l904
 51940  014B52                     __end_ofi2_SYSTEM_Initialize:
 51941                           	opt stack 0
 51942                           tosu	equ	0xFFF
 51943                           tosh	equ	0xFFE
 51944                           tosl	equ	0xFFD
 51945                           pclatu	equ	0xFFB
 51946                           pclath	equ	0xFFA
 51947                           tblptru	equ	0xFF8
 51948                           tblptrh	equ	0xFF7
 51949                           tblptrl	equ	0xFF6
 51950                           tablat	equ	0xFF5
 51951                           prodh	equ	0xFF4
 51952                           prodl	equ	0xFF3
 51953                           intcon	equ	0xFF2
 51954                           indf0	equ	0xFEF
 51955                           postinc0	equ	0xFEE
 51956                           fsr0h	equ	0xFEA
 51957                           fsr0l	equ	0xFE9
 51958                           wreg	equ	0xFE8
 51959                           indf1	equ	0xFE7
 51960                           postinc1	equ	0xFE6
 51961                           postdec1	equ	0xFE5
 51962                           plusw1	equ	0xFE3
 51963                           fsr1h	equ	0xFE2
 51964                           fsr1l	equ	0xFE1
 51965                           indf2	equ	0xFDF
 51966                           postinc2	equ	0xFDE
 51967                           postdec2	equ	0xFDD
 51968                           plusw2	equ	0xFDB
 51969                           fsr2h	equ	0xFDA
 51970                           fsr2l	equ	0xFD9
 51971                           status	equ	0xFD8
 51972                           
 51973 ;; *************** function _USBCheckMSDRequest *****************
 51974 ;; Defined at:
 51975 ;;		line 218 in file "usb_device_msd.c"
 51976 ;; Parameters:    Size  Location     Type
 51977 ;;		None
 51978 ;; Auto vars:     Size  Location     Type
 51979 ;;		None
 51980 ;; Return value:  Size  Location     Type
 51981 ;;                  1    wreg      void 
 51982 ;; Registers used:
 51983 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 51984 ;; Tracked objects:
 51985 ;;		On entry : 0/0
 51986 ;;		On exit  : 0/0
 51987 ;;		Unchanged: 0/0
 51988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51990 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51992 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51993 ;;Total ram usage:        4 bytes
 51994 ;; Hardware stack levels used:    1
 51995 ;; Hardware stack levels required when called:    1
 51996 ;; This function calls:
 51997 ;;		i2_USBTransferOnePacket
 51998 ;; This function is called by:
 51999 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 52000 ;; This function uses a non-reentrant model
 52001 ;;
 52002                           
 52003                           	psect	text216
 52004  012ADC                     __ptext216:
 52005                           	opt stack 0
 52006  012ADC                     _USBCheckMSDRequest:
 52007                           	opt stack 14
 52008                           
 52009                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 52010                           
 52011                           ;incstack = 0
 52012  012ADC  010D               	movlb	13	; () banked
 52013  012ADE  5130               	movf	48,w,b	;volatile
 52014  012AE0  0B1F               	andlw	31
 52015  012AE2  06E8               	decf	wreg,f,c
 52016  012AE4  A4D8               	btfss	status,2,c
 52017  012AE6  0012               	return	
 52018                           
 52019                           ; BSR set to: 13
 52020                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 52021                           
 52022                           ; BSR set to: 13
 52023                           
 52024                           ; BSR set to: 13
 52025                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 52026  012AE8  5134               	movf	52,w,b	;volatile
 52027  012AEA  A4D8               	btfss	status,2,c
 52028  012AEC  0012               	return	
 52029  012AEE  D04C               	goto	i2l545
 52030  012AF0                     
 52031                           ; BSR set to: 13
 52032                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 52033                           
 52034                           ; BSR set to: 13
 52035  012AF0  5132               	movf	50,w,b	;volatile
 52036  012AF2  1133               	iorwf	51,w,b	;volatile
 52037  012AF4  A4D8               	btfss	status,2,c
 52038  012AF6  0012               	return	
 52039                           
 52040                           ; BSR set to: 13
 52041  012AF8  5136               	movf	54,w,b	;volatile
 52042  012AFA  1137               	iorwf	55,w,b	;volatile
 52043  012AFC  A4D8               	btfss	status,2,c
 52044  012AFE  0012               	return	
 52045                           
 52046                           ; BSR set to: 13
 52047                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 52048                           
 52049                           ; BSR set to: 13
 52050                           
 52051                           ; BSR set to: 13
 52052                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 52053  012B00  0E00               	movlw	0
 52054  012B02  0101               	movlb	1	; () banked
 52055  012B04  6F63               	movwf	_MSD_State& (0+255),b
 52056                           
 52057                           ; BSR set to: 1
 52058                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 52059  012B06  6962               	setf	_MSDCommandState& (0+255),b
 52060                           
 52061                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 52062  012B08  0E00               	movlw	0
 52063  012B0A  6F61               	movwf	_MSDReadState& (0+255),b
 52064                           
 52065                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 52066  012B0C  0E00               	movlw	0
 52067  012B0E  6F60               	movwf	_MSDWriteState& (0+255),b
 52068                           
 52069                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 52070  012B10  0E01               	movlw	1
 52071  012B12  6F5B               	movwf	_MSDCBWValid& (0+255),b
 52072                           
 52073                           ; BSR set to: 1
 52074                           
 52075                           ; BSR set to: 1
 52076                           
 52077                           ; BSR set to: 1
 52078                           
 52079                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 52080  012B14  C125  F00C         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2534
 52081  012B18  C126  F00D         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2534+1
 52082                           
 52083                           ; BSR set to: 1
 52084  012B1C  500C               	movf	_USBCheckMSDRequest$2534,w,c
 52085  012B1E  100D               	iorwf	_USBCheckMSDRequest$2534+1,w,c
 52086  012B20  B4D8               	btfsc	status,2,c
 52087  012B22  D00A               	goto	i2u1072_40
 52088                           
 52089                           ; BSR set to: 1
 52090                           
 52091                           ; BSR set to: 1
 52092                           
 52093                           ; BSR set to: 1
 52094                           
 52095                           ; BSR set to: 1
 52096  012B24  C125  F00E         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2535
 52097  012B28  C126  F00F         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2535+1
 52098                           
 52099                           ; BSR set to: 1
 52100                           
 52101                           ; BSR set to: 1
 52102  012B2C  C00E  FFD9         	movff	_USBCheckMSDRequest$2535,fsr2l
 52103  012B30  C00F  FFDA         	movff	_USBCheckMSDRequest$2535+1,fsr2h
 52104  012B34  BEDF               	btfsc	indf2,7,c
 52105  012B36  D00F               	goto	i2l550
 52106  012B38                     i2u1072_40:
 52107                           
 52108                           ; BSR set to: 1
 52109                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 52110                           
 52111                           ; BSR set to: 1
 52112  012B38  0E00               	movlw	0
 52113  012B3A  6E01               	movwf	i2USBTransferOnePacket@dir,c
 52114  012B3C  0E40               	movlw	64
 52115  012B3E  6E02               	movwf	i2USBTransferOnePacket@data,c
 52116  012B40  0E0D               	movlw	13
 52117  012B42  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 52118  012B44  0E40               	movlw	64
 52119  012B46  6E04               	movwf	i2USBTransferOnePacket@len,c
 52120  012B48  0E02               	movlw	2
 52121  012B4A  EC0D  F089         	call	i2_USBTransferOnePacket
 52122  012B4E  C001  F14B         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 52123  012B52  C002  F14C         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 52124  012B56                     i2l550:
 52125                           
 52126                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 52127  012B56  0E80               	movlw	128
 52128  012B58  6E55               	movwf	_inPipes+3,c	;volatile
 52129                           
 52130                           ;usb_device_msd.c: 263: break;
 52131  012B5A  0012               	return	
 52132  012B5C                     
 52133                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 52134  012B5C  010D               	movlb	13	; () banked
 52135  012B5E  5132               	movf	50,w,b	;volatile
 52136  012B60  1133               	iorwf	51,w,b	;volatile
 52137  012B62  A4D8               	btfss	status,2,c
 52138  012B64  0012               	return	
 52139                           
 52140                           ; BSR set to: 13
 52141  012B66  0536               	decf	54,w,b	;volatile
 52142  012B68  1137               	iorwf	55,w,b	;volatile
 52143  012B6A  A4D8               	btfss	status,2,c
 52144  012B6C  0012               	return	
 52145                           
 52146                           ; BSR set to: 13
 52147                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 52148                           
 52149                           ; BSR set to: 13
 52150                           
 52151                           ; BSR set to: 13
 52152                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 52153  012B6E  0E00               	movlw	0
 52154  012B70  6F38               	movwf	56,b	;volatile
 52155                           
 52156                           ; BSR set to: 13
 52157                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 52158  012B72  0E38               	movlw	56
 52159  012B74  6E52               	movwf	_inPipes,c	;volatile
 52160  012B76  0E0D               	movlw	13
 52161  012B78  6E53               	movwf	_inPipes+1,c	;volatile
 52162                           
 52163                           ; BSR set to: 13
 52164  012B7A  0E00               	movlw	0
 52165  012B7C  6E57               	movwf	_inPipes+5,c	;volatile
 52166  012B7E  0E01               	movlw	1
 52167  012B80  6E56               	movwf	_inPipes+4,c	;volatile
 52168                           
 52169                           ; BSR set to: 13
 52170  012B82  0EC1               	movlw	193
 52171  012B84  6E55               	movwf	_inPipes+3,c	;volatile
 52172                           
 52173                           ; BSR set to: 13
 52174                           ;usb_device_msd.c: 278: }
 52175                           
 52176                           ;usb_device_msd.c: 277: break;
 52177  012B86  0012               	return	
 52178  012B88                     i2l545:
 52179                           
 52180                           ; BSR set to: 13
 52181                           
 52182                           ; BSR set to: 13
 52183  012B88  5131               	movf	49,w,b	;volatile
 52184                           
 52185                           ; Switch size 1, requested type "space"
 52186                           ; Number of cases is 2, Range of values is 254 to 255
 52187                           ; switch strategies available:
 52188                           ; Name         Instructions Cycles
 52189                           ; simple_byte            7     4 (average)
 52190                           ;	Chosen strategy is simple_byte
 52191  012B8A  0AFE               	xorlw	254	; case 254
 52192  012B8C  B4D8               	btfsc	status,2,c
 52193  012B8E  D7E6               	goto	i2l562
 52194  012B90  0A01               	xorlw	1	; case 255
 52195  012B92  A4D8               	btfss	status,2,c
 52196  012B94  0012               	return	
 52197  012B96  D7AC               	goto	i2l546
 52198  012B98                     __end_of_USBCheckMSDRequest:
 52199                           	opt stack 0
 52200                           tosu	equ	0xFFF
 52201                           tosh	equ	0xFFE
 52202                           tosl	equ	0xFFD
 52203                           pclatu	equ	0xFFB
 52204                           pclath	equ	0xFFA
 52205                           tblptru	equ	0xFF8
 52206                           tblptrh	equ	0xFF7
 52207                           tblptrl	equ	0xFF6
 52208                           tablat	equ	0xFF5
 52209                           prodh	equ	0xFF4
 52210                           prodl	equ	0xFF3
 52211                           intcon	equ	0xFF2
 52212                           indf0	equ	0xFEF
 52213                           postinc0	equ	0xFEE
 52214                           fsr0h	equ	0xFEA
 52215                           fsr0l	equ	0xFE9
 52216                           wreg	equ	0xFE8
 52217                           indf1	equ	0xFE7
 52218                           postinc1	equ	0xFE6
 52219                           postdec1	equ	0xFE5
 52220                           plusw1	equ	0xFE3
 52221                           fsr1h	equ	0xFE2
 52222                           fsr1l	equ	0xFE1
 52223                           indf2	equ	0xFDF
 52224                           postinc2	equ	0xFDE
 52225                           postdec2	equ	0xFDD
 52226                           plusw2	equ	0xFDB
 52227                           fsr2h	equ	0xFDA
 52228                           fsr2l	equ	0xFD9
 52229                           status	equ	0xFD8
 52230                           
 52231 ;; *************** function _USBCheckHIDRequest *****************
 52232 ;; Defined at:
 52233 ;;		line 153 in file "usb_device_hid.c"
 52234 ;; Parameters:    Size  Location     Type
 52235 ;;		None
 52236 ;; Auto vars:     Size  Location     Type
 52237 ;;		None
 52238 ;; Return value:  Size  Location     Type
 52239 ;;                  1    wreg      void 
 52240 ;; Registers used:
 52241 ;;		wreg, status,2, status,0
 52242 ;; Tracked objects:
 52243 ;;		On entry : 0/0
 52244 ;;		On exit  : 0/0
 52245 ;;		Unchanged: 0/0
 52246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52251 ;;Total ram usage:        0 bytes
 52252 ;; Hardware stack levels used:    1
 52253 ;; This function calls:
 52254 ;;		Nothing
 52255 ;; This function is called by:
 52256 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 52257 ;; This function uses a non-reentrant model
 52258 ;;
 52259                           
 52260                           	psect	text217
 52261  012480                     __ptext217:
 52262                           	opt stack 0
 52263  012480                     _USBCheckHIDRequest:
 52264                           	opt stack 15
 52265                           
 52266                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 52267                           
 52268                           ;incstack = 0
 52269  012480  010D               	movlb	13	; () banked
 52270  012482  5130               	movf	48,w,b	;volatile
 52271  012484  0B1F               	andlw	31
 52272  012486  06E8               	decf	wreg,f,c
 52273  012488  A4D8               	btfss	status,2,c
 52274  01248A  0012               	return	
 52275                           
 52276                           ; BSR set to: 13
 52277                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 52278                           
 52279                           ; BSR set to: 13
 52280                           
 52281                           ; BSR set to: 13
 52282  01248C  5134               	movf	52,w,b	;volatile
 52283  01248E  A4D8               	btfss	status,2,c
 52284  012490  0012               	return	
 52285                           
 52286                           ; BSR set to: 13
 52287                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 52288                           
 52289                           ; BSR set to: 13
 52290                           
 52291                           ; BSR set to: 13
 52292  012492  0E06               	movlw	6
 52293  012494  1931               	xorwf	49,w,b	;volatile
 52294  012496  B4D8               	btfsc	status,2,c
 52295  012498  D019               	goto	i2l425
 52296  01249A  D021               	goto	i2l428
 52297  01249C                     
 52298                           ; BSR set to: 13
 52299                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 52300                           
 52301                           ; BSR set to: 13
 52302  01249C  0101               	movlb	1	; () banked
 52303  01249E  05C2               	decf	_USBActiveConfiguration& (0+255),w,b	;volatile
 52304  0124A0  A4D8               	btfss	status,2,c
 52305  0124A2  D01D               	goto	i2l428
 52306                           
 52307                           ; BSR set to: 1
 52308                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 52309  0124A4  0ED0               	movlw	low (_configDescriptor1+18)
 52310  0124A6  6E52               	movwf	_inPipes,c	;volatile
 52311  0124A8  0EA0               	movlw	high (_configDescriptor1+18)
 52312  0124AA  6E53               	movwf	_inPipes+1,c	;volatile
 52313                           
 52314                           ; BSR set to: 1
 52315  0124AC  0E00               	movlw	0
 52316  0124AE  6E57               	movwf	_inPipes+5,c	;volatile
 52317  0124B0  0E09               	movlw	9
 52318  0124B2  D00A               	goto	L84
 52319  0124B4                     i2l12427:
 52320                           
 52321                           ; BSR set to: 1
 52322  0124B4  0EC0               	movlw	192
 52323  0124B6  6E55               	movwf	_inPipes+3,c	;volatile
 52324                           
 52325                           ; BSR set to: 1
 52326                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 52327  0124B8  D012               	goto	i2l428
 52328  0124BA                     
 52329                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 52330                           
 52331                           ; BSR set to: 1
 52332  0124BA  0E84               	movlw	low _hid_rpt01
 52333  0124BC  6E52               	movwf	_inPipes,c	;volatile
 52334  0124BE  0EA1               	movlw	high _hid_rpt01
 52335  0124C0  6E53               	movwf	_inPipes+1,c	;volatile
 52336  0124C2  0E00               	movlw	0
 52337  0124C4  6E57               	movwf	_inPipes+5,c	;volatile
 52338  0124C6  0E1D               	movlw	29
 52339  0124C8                     L84:
 52340  0124C8  6E56               	movwf	_inPipes+4,c	;volatile
 52341  0124CA  D7F4               	goto	i2l12427
 52342  0124CC                     i2l425:
 52343  0124CC  010D               	movlb	13	; () banked
 52344  0124CE  5133               	movf	51,w,b	;volatile
 52345                           
 52346                           ; Switch size 1, requested type "space"
 52347                           ; Number of cases is 3, Range of values is 33 to 35
 52348                           ; switch strategies available:
 52349                           ; Name         Instructions Cycles
 52350                           ; simple_byte           10     6 (average)
 52351                           ;	Chosen strategy is simple_byte
 52352  0124D0  0A21               	xorlw	33	; case 33
 52353  0124D2  B4D8               	btfsc	status,2,c
 52354  0124D4  D7E3               	goto	i2l426
 52355  0124D6  0A03               	xorlw	3	; case 34
 52356  0124D8  B4D8               	btfsc	status,2,c
 52357  0124DA  D7EF               	goto	i2l429
 52358  0124DC  0A01               	xorlw	1	; case 35
 52359  0124DE                     i2l428:
 52360                           
 52361                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 52362                           
 52363                           ; BSR set to: 13
 52364                           
 52365                           ; BSR set to: 13
 52366  0124DE  010D               	movlb	13	; () banked
 52367  0124E0  3930               	swapf	48,w,b	;volatile
 52368  0124E2  32E8               	rrcf	wreg,f,c
 52369  0124E4  0B03               	andlw	3
 52370  0124E6  06E8               	decf	wreg,f,c
 52371  0124E8  A4D8               	btfss	status,2,c
 52372  0124EA  0012               	return	
 52373  0124EC  D020               	goto	i2l432
 52374  0124EE                     
 52375                           ; BSR set to: 13
 52376                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 52377                           
 52378                           ; BSR set to: 13
 52379  0124EE  0EC0               	movlw	low _idle_rate
 52380  0124F0  6E52               	movwf	_inPipes,c	;volatile
 52381  0124F2  0E01               	movlw	high _idle_rate
 52382  0124F4  6E53               	movwf	_inPipes+1,c	;volatile
 52383                           
 52384                           ; BSR set to: 13
 52385  0124F6  0E00               	movlw	0
 52386  0124F8  6E57               	movwf	_inPipes+5,c	;volatile
 52387  0124FA  0E01               	movlw	1
 52388  0124FC  6E56               	movwf	_inPipes+4,c	;volatile
 52389                           
 52390                           ; BSR set to: 13
 52391  0124FE  0EC1               	movlw	193
 52392  012500  6E55               	movwf	_inPipes+3,c	;volatile
 52393                           
 52394                           ;usb_device_hid.c: 223: break;
 52395  012502  0012               	return	
 52396  012504                     
 52397                           ; BSR set to: 13
 52398                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 52399                           
 52400                           ; BSR set to: 13
 52401  012504  0E80               	movlw	128
 52402  012506  6E55               	movwf	_inPipes+3,c	;volatile
 52403                           
 52404                           ; BSR set to: 13
 52405                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 52406  012508  CD33 F1C0          	movff	3379,_idle_rate	;volatile
 52407                           
 52408                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 52409  01250C  0012               	return	
 52410  01250E                     
 52411                           ; BSR set to: 13
 52412                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 52413                           
 52414                           ; BSR set to: 13
 52415  01250E  0EBF               	movlw	low _active_protocol
 52416  012510  6E52               	movwf	_inPipes,c	;volatile
 52417  012512  0E01               	movlw	high _active_protocol
 52418  012514  6E53               	movwf	_inPipes+1,c	;volatile
 52419                           
 52420                           ; BSR set to: 13
 52421  012516  0E00               	movlw	0
 52422  012518  6E57               	movwf	_inPipes+5,c	;volatile
 52423  01251A  0E01               	movlw	1
 52424  01251C  6E56               	movwf	_inPipes+4,c	;volatile
 52425                           
 52426                           ; BSR set to: 13
 52427  01251E  0E81               	movlw	129
 52428  012520  6E55               	movwf	_inPipes+3,c	;volatile
 52429                           
 52430                           ;usb_device_hid.c: 234: break;
 52431  012522  0012               	return	
 52432  012524                     
 52433                           ; BSR set to: 13
 52434                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 52435                           
 52436                           ; BSR set to: 13
 52437  012524  0E80               	movlw	128
 52438  012526  6E55               	movwf	_inPipes+3,c	;volatile
 52439                           
 52440                           ; BSR set to: 13
 52441                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 52442  012528  CD32 F1BF          	movff	3378,_active_protocol	;volatile
 52443                           
 52444                           ; BSR set to: 13
 52445                           ;usb_device_hid.c: 239: }
 52446                           
 52447                           ;usb_device_hid.c: 238: break;
 52448  01252C  0012               	return	
 52449  01252E                     i2l432:
 52450                           
 52451                           ; BSR set to: 13
 52452                           
 52453                           ; BSR set to: 13
 52454  01252E  5131               	movf	49,w,b	;volatile
 52455                           
 52456                           ; Switch size 1, requested type "space"
 52457                           ; Number of cases is 6, Range of values is 1 to 11
 52458                           ; switch strategies available:
 52459                           ; Name         Instructions Cycles
 52460                           ; simple_byte           19    10 (average)
 52461                           ;	Chosen strategy is simple_byte
 52462  012530  0A01               	xorlw	1	; case 1
 52463  012532  B4D8               	btfsc	status,2,c
 52464  012534  0012               	return	
 52465  012536  0A03               	xorlw	3	; case 2
 52466  012538  B4D8               	btfsc	status,2,c
 52467  01253A  D7D9               	goto	i2l436
 52468  01253C  0A01               	xorlw	1	; case 3
 52469  01253E  B4D8               	btfsc	status,2,c
 52470  012540  D7E6               	goto	i2l438
 52471  012542  0A0A               	xorlw	10	; case 9
 52472  012544  B4D8               	btfsc	status,2,c
 52473  012546  0012               	return	
 52474  012548  0A03               	xorlw	3	; case 10
 52475  01254A  B4D8               	btfsc	status,2,c
 52476  01254C  D7DB               	goto	i2l437
 52477  01254E  0A01               	xorlw	1	; case 11
 52478  012550  A4D8               	btfss	status,2,c
 52479  012552  0012               	return	
 52480  012554  D7E7               	goto	i2l439
 52481  012556                     __end_of_USBCheckHIDRequest:
 52482                           	opt stack 0
 52483                           tosu	equ	0xFFF
 52484                           tosh	equ	0xFFE
 52485                           tosl	equ	0xFFD
 52486                           pclatu	equ	0xFFB
 52487                           pclath	equ	0xFFA
 52488                           tblptru	equ	0xFF8
 52489                           tblptrh	equ	0xFF7
 52490                           tblptrl	equ	0xFF6
 52491                           tablat	equ	0xFF5
 52492                           prodh	equ	0xFF4
 52493                           prodl	equ	0xFF3
 52494                           intcon	equ	0xFF2
 52495                           indf0	equ	0xFEF
 52496                           postinc0	equ	0xFEE
 52497                           fsr0h	equ	0xFEA
 52498                           fsr0l	equ	0xFE9
 52499                           wreg	equ	0xFE8
 52500                           indf1	equ	0xFE7
 52501                           postinc1	equ	0xFE6
 52502                           postdec1	equ	0xFE5
 52503                           plusw1	equ	0xFE3
 52504                           fsr1h	equ	0xFE2
 52505                           fsr1l	equ	0xFE1
 52506                           indf2	equ	0xFDF
 52507                           postinc2	equ	0xFDE
 52508                           postdec2	equ	0xFDD
 52509                           plusw2	equ	0xFDB
 52510                           fsr2h	equ	0xFDA
 52511                           fsr2l	equ	0xFD9
 52512                           status	equ	0xFD8
 52513                           
 52514 ;; *************** function _MSDTransferTerminated *****************
 52515 ;; Defined at:
 52516 ;;		line 1674 in file "usb_device_msd.c"
 52517 ;; Parameters:    Size  Location     Type
 52518 ;;  handle          2   11[COMRAM] PTR void 
 52519 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 52520 ;;		 -> BDT(48), 
 52521 ;; Auto vars:     Size  Location     Type
 52522 ;;		None
 52523 ;; Return value:  Size  Location     Type
 52524 ;;                  1    wreg      void 
 52525 ;; Registers used:
 52526 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 52527 ;; Tracked objects:
 52528 ;;		On entry : 0/0
 52529 ;;		On exit  : 0/0
 52530 ;;		Unchanged: 0/0
 52531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52532 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52533 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52535 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52536 ;;Total ram usage:        4 bytes
 52537 ;; Hardware stack levels used:    1
 52538 ;; Hardware stack levels required when called:    1
 52539 ;; This function calls:
 52540 ;;		i2_USBStallEndpoint
 52541 ;;		i2_USBTransferOnePacket
 52542 ;; This function is called by:
 52543 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 52544 ;; This function uses a non-reentrant model
 52545 ;;
 52546                           
 52547                           	psect	text218
 52548  0149AC                     __ptext218:
 52549                           	opt stack 0
 52550  0149AC                     _MSDTransferTerminated:
 52551                           	opt stack 14
 52552                           
 52553                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 52554                           
 52555                           ; BSR set to: 13
 52556                           ;incstack = 0
 52557  0149AC  0101               	movlb	1	; () banked
 52558  0149AE  515B               	movf	_MSDCBWValid& (0+255),w,b
 52559  0149B0  A4D8               	btfss	status,2,c
 52560  0149B2  D00B               	goto	i2l780
 52561                           
 52562                           ; BSR set to: 1
 52563                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 52564  0149B4  0E01               	movlw	1
 52565  0149B6  6E01               	movwf	i2USBStallEndpoint@dir,c
 52566  0149B8  0E02               	movlw	2
 52567  0149BA  EC8A  F088         	call	i2_USBStallEndpoint
 52568                           
 52569                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 52570  0149BE  0E00               	movlw	0
 52571  0149C0  6E01               	movwf	i2USBStallEndpoint@dir,c
 52572  0149C2  0E02               	movlw	2
 52573  0149C4  EC8A  F088         	call	i2_USBStallEndpoint
 52574                           
 52575                           ;usb_device_msd.c: 1681: }
 52576  0149C8  0012               	return	
 52577  0149CA                     i2l780:
 52578  0149CA  C125  F00E         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2623
 52579  0149CE  C126  F00F         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2623+1
 52580  0149D2  500E               	movf	_MSDTransferTerminated$2623,w,c
 52581  0149D4  180C               	xorwf	MSDTransferTerminated@handle,w,c
 52582  0149D6  E114               	bnz	i2l783
 52583  0149D8  500F               	movf	_MSDTransferTerminated$2623+1,w,c
 52584  0149DA  180D               	xorwf	MSDTransferTerminated@handle+1,w,c
 52585  0149DC  A4D8               	btfss	status,2,c
 52586  0149DE  0012               	return	
 52587                           
 52588                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 52589  0149E0  0E00               	movlw	0
 52590  0149E2  6E01               	movwf	i2USBTransferOnePacket@dir,c
 52591  0149E4  0E40               	movlw	64
 52592  0149E6  6E02               	movwf	i2USBTransferOnePacket@data,c
 52593  0149E8  0E0D               	movlw	13
 52594  0149EA  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 52595  0149EC  0E40               	movlw	64
 52596  0149EE  6E04               	movwf	i2USBTransferOnePacket@len,c
 52597  0149F0  0E02               	movlw	2
 52598  0149F2  EC0D  F089         	call	i2_USBTransferOnePacket
 52599  0149F6  C001  F14B         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 52600  0149FA  C002  F14C         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 52601  0149FE  0012               	return	
 52602  014A00                     i2l783:
 52603  014A00  0012               	return		;funcret
 52604  014A02                     __end_of_MSDTransferTerminated:
 52605                           	opt stack 0
 52606                           tosu	equ	0xFFF
 52607                           tosh	equ	0xFFE
 52608                           tosl	equ	0xFFD
 52609                           pclatu	equ	0xFFB
 52610                           pclath	equ	0xFFA
 52611                           tblptru	equ	0xFF8
 52612                           tblptrh	equ	0xFF7
 52613                           tblptrl	equ	0xFF6
 52614                           tablat	equ	0xFF5
 52615                           prodh	equ	0xFF4
 52616                           prodl	equ	0xFF3
 52617                           intcon	equ	0xFF2
 52618                           indf0	equ	0xFEF
 52619                           postinc0	equ	0xFEE
 52620                           fsr0h	equ	0xFEA
 52621                           fsr0l	equ	0xFE9
 52622                           wreg	equ	0xFE8
 52623                           indf1	equ	0xFE7
 52624                           postinc1	equ	0xFE6
 52625                           postdec1	equ	0xFE5
 52626                           plusw1	equ	0xFE3
 52627                           fsr1h	equ	0xFE2
 52628                           fsr1l	equ	0xFE1
 52629                           indf2	equ	0xFDF
 52630                           postinc2	equ	0xFDE
 52631                           postdec2	equ	0xFDD
 52632                           plusw2	equ	0xFDB
 52633                           fsr2h	equ	0xFDA
 52634                           fsr2l	equ	0xFD9
 52635                           status	equ	0xFD8
 52636                           
 52637 ;; *************** function i2_USBStallEndpoint *****************
 52638 ;; Defined at:
 52639 ;;		line 1073 in file "usb_device.c"
 52640 ;; Parameters:    Size  Location     Type
 52641 ;;  ep              1    wreg     unsigned char 
 52642 ;;  dir             1    0[COMRAM] unsigned char 
 52643 ;; Auto vars:     Size  Location     Type
 52644 ;;  ep              1    5[COMRAM] unsigned char 
 52645 ;;  USBStallEndp    2    6[COMRAM] PTR struct __BDT
 52646 ;;		 -> BDT(48), 
 52647 ;; Return value:  Size  Location     Type
 52648 ;;                  1    wreg      void 
 52649 ;; Registers used:
 52650 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 52651 ;; Tracked objects:
 52652 ;;		On entry : 0/0
 52653 ;;		On exit  : 0/0
 52654 ;;		Unchanged: 0/0
 52655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52656 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52657 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52658 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52659 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52660 ;;Total ram usage:        8 bytes
 52661 ;; Hardware stack levels used:    1
 52662 ;; This function calls:
 52663 ;;		Nothing
 52664 ;; This function is called by:
 52665 ;;		_MSDTransferTerminated
 52666 ;; This function uses a non-reentrant model
 52667 ;;
 52668                           
 52669                           	psect	text219
 52670  011114                     __ptext219:
 52671                           	opt stack 0
 52672  011114                     i2_USBStallEndpoint:
 52673                           	opt stack 14
 52674                           
 52675                           ;incstack = 0
 52676                           ;i2USBStallEndpoint@ep stored from wreg
 52677  011114  6E06               	movwf	i2USBStallEndpoint@ep,c
 52678                           
 52679                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 52680  011116  5006               	movf	i2USBStallEndpoint@ep,w,c
 52681  011118  A4D8               	btfss	status,2,c
 52682  01111A  D02B               	goto	i2l192
 52683                           
 52684                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 52685  01111C  EE20 F001          	lfsr	2,1
 52686  011120  505C               	movf	_pBDTEntryEP0OutNext,w,c
 52687  011122  26D9               	addwf	fsr2l,f,c
 52688  011124  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 52689  011126  22DA               	addwfc	fsr2h,f,c
 52690  011128  0E08               	movlw	8
 52691  01112A  6EDF               	movwf	indf2,c
 52692                           
 52693                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 52694  01112C  EE20 F002          	lfsr	2,2
 52695  011130  505C               	movf	_pBDTEntryEP0OutNext,w,c
 52696  011132  26D9               	addwf	fsr2l,f,c
 52697  011134  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 52698  011136  22DA               	addwfc	fsr2h,f,c
 52699  011138  0E30               	movlw	48
 52700  01113A  6EDE               	movwf	postinc2,c
 52701  01113C  0E0D               	movlw	13
 52702  01113E  6EDD               	movwf	postdec2,c
 52703                           
 52704                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 52705  011140  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 52706  011144  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 52707  011148  0E0C               	movlw	12
 52708  01114A  6EDF               	movwf	indf2,c
 52709                           
 52710                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 52711  01114C  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 52712  011150  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 52713  011154  0E00               	movlw	0
 52714  011156  8EDB               	bsf	plusw2,7,c
 52715                           
 52716                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 52717  011158  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 52718  01115C  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52719  011160  0E04               	movlw	4
 52720  011162  6EDF               	movwf	indf2,c
 52721                           
 52722                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 52723  011164  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 52724  011168  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52725  01116C  0E00               	movlw	0
 52726  01116E  8EDB               	bsf	plusw2,7,c
 52727                           
 52728                           ;usb_device.c: 1089: }
 52729  011170  0012               	return	
 52730  011172                     i2l192:
 52731                           
 52732                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 52733  011172  5001               	movf	i2USBStallEndpoint@dir,w,c
 52734  011174  6E02               	movwf	??i2_USBStallEndpoint& (0+255),c
 52735  011176  6A03               	clrf	(??i2_USBStallEndpoint+1)& (0+255),c
 52736  011178  90D8               	bcf	status,0,c
 52737  01117A  3602               	rlcf	??i2_USBStallEndpoint,f,c
 52738  01117C  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 52739  01117E  5006               	movf	i2USBStallEndpoint@ep,w,c
 52740  011180  6E04               	movwf	(??i2_USBStallEndpoint+2)& (0+255),c
 52741  011182  6A05               	clrf	(??i2_USBStallEndpoint+3)& (0+255),c
 52742  011184  90D8               	bcf	status,0,c
 52743  011186  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 52744  011188  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 52745  01118A  90D8               	bcf	status,0,c
 52746  01118C  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 52747  01118E  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 52748  011190  5002               	movf	??i2_USBStallEndpoint,w,c
 52749  011192  2604               	addwf	??i2_USBStallEndpoint+2,f,c
 52750  011194  5003               	movf	??i2_USBStallEndpoint+1,w,c
 52751  011196  2205               	addwfc	??i2_USBStallEndpoint+3,f,c
 52752  011198  90D8               	bcf	status,0,c
 52753  01119A  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 52754  01119C  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 52755  01119E  90D8               	bcf	status,0,c
 52756  0111A0  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 52757  0111A2  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 52758  0111A4  0E00               	movlw	0
 52759  0111A6  2404               	addwf	??i2_USBStallEndpoint+2,w,c
 52760  0111A8  6E07               	movwf	i2USBStallEndpoint@p,c
 52761  0111AA  0E0D               	movlw	13
 52762  0111AC  2005               	addwfc	??i2_USBStallEndpoint+3,w,c
 52763  0111AE  6E08               	movwf	i2USBStallEndpoint@p+1,c
 52764                           
 52765                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 52766  0111B0  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 52767  0111B4  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 52768  0111B8  0E00               	movlw	0
 52769  0111BA  84DB               	bsf	plusw2,2,c
 52770                           
 52771                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 52772  0111BC  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 52773  0111C0  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 52774  0111C4  0E00               	movlw	0
 52775  0111C6  8EDB               	bsf	plusw2,7,c
 52776                           
 52777                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 52778  0111C8  5006               	movf	i2USBStallEndpoint@ep,w,c
 52779  0111CA  0D04               	mullw	4
 52780  0111CC  CFF3 F002          	movff	prodl,??i2_USBStallEndpoint
 52781  0111D0  CFF4 F003          	movff	prodh,??i2_USBStallEndpoint+1
 52782  0111D4  5001               	movf	i2USBStallEndpoint@dir,w,c
 52783  0111D6  0D02               	mullw	2
 52784  0111D8  50F3               	movf	prodl,w,c
 52785  0111DA  2602               	addwf	??i2_USBStallEndpoint,f,c
 52786  0111DC  50F4               	movf	prodh,w,c
 52787  0111DE  2203               	addwfc	??i2_USBStallEndpoint+1,f,c
 52788  0111E0  90D8               	bcf	status,0,c
 52789  0111E2  3602               	rlcf	??i2_USBStallEndpoint,f,c
 52790  0111E4  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 52791  0111E6  90D8               	bcf	status,0,c
 52792  0111E8  3602               	rlcf	??i2_USBStallEndpoint,f,c
 52793  0111EA  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 52794  0111EC  0E04               	movlw	4
 52795  0111EE  2602               	addwf	??i2_USBStallEndpoint,f,c
 52796  0111F0  0E00               	movlw	0
 52797  0111F2  2203               	addwfc	??i2_USBStallEndpoint+1,f,c
 52798  0111F4  0E00               	movlw	0
 52799  0111F6  2402               	addwf	??i2_USBStallEndpoint,w,c
 52800  0111F8  6E07               	movwf	i2USBStallEndpoint@p,c
 52801  0111FA  0E0D               	movlw	13
 52802  0111FC  2003               	addwfc	??i2_USBStallEndpoint+1,w,c
 52803  0111FE  6E08               	movwf	i2USBStallEndpoint@p+1,c
 52804                           
 52805                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 52806  011200  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 52807  011204  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 52808  011208  0E00               	movlw	0
 52809  01120A  84DB               	bsf	plusw2,2,c
 52810                           
 52811                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 52812  01120C  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 52813  011210  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 52814  011214  0E00               	movlw	0
 52815  011216  8EDB               	bsf	plusw2,7,c
 52816  011218  0012               	return	
 52817  01121A                     __end_ofi2_USBStallEndpoint:
 52818                           	opt stack 0
 52819                           tosu	equ	0xFFF
 52820                           tosh	equ	0xFFE
 52821                           tosl	equ	0xFFD
 52822                           pclatu	equ	0xFFB
 52823                           pclath	equ	0xFFA
 52824                           tblptru	equ	0xFF8
 52825                           tblptrh	equ	0xFF7
 52826                           tblptrl	equ	0xFF6
 52827                           tablat	equ	0xFF5
 52828                           prodh	equ	0xFF4
 52829                           prodl	equ	0xFF3
 52830                           intcon	equ	0xFF2
 52831                           indf0	equ	0xFEF
 52832                           postinc0	equ	0xFEE
 52833                           fsr0h	equ	0xFEA
 52834                           fsr0l	equ	0xFE9
 52835                           wreg	equ	0xFE8
 52836                           indf1	equ	0xFE7
 52837                           postinc1	equ	0xFE6
 52838                           postdec1	equ	0xFE5
 52839                           plusw1	equ	0xFE3
 52840                           fsr1h	equ	0xFE2
 52841                           fsr1l	equ	0xFE1
 52842                           indf2	equ	0xFDF
 52843                           postinc2	equ	0xFDE
 52844                           postdec2	equ	0xFDD
 52845                           plusw2	equ	0xFDB
 52846                           fsr2h	equ	0xFDA
 52847                           fsr2l	equ	0xFD9
 52848                           status	equ	0xFD8
 52849                           
 52850 ;; *************** function _APP_DeviceMSDInitialize *****************
 52851 ;; Defined at:
 52852 ;;		line 84 in file "app_device_msd.c"
 52853 ;; Parameters:    Size  Location     Type
 52854 ;;		None
 52855 ;; Auto vars:     Size  Location     Type
 52856 ;;		None
 52857 ;; Return value:  Size  Location     Type
 52858 ;;                  1    wreg      void 
 52859 ;; Registers used:
 52860 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 52861 ;; Tracked objects:
 52862 ;;		On entry : 0/0
 52863 ;;		On exit  : 0/0
 52864 ;;		Unchanged: 0/0
 52865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52870 ;;Total ram usage:        0 bytes
 52871 ;; Hardware stack levels used:    1
 52872 ;; Hardware stack levels required when called:    2
 52873 ;; This function calls:
 52874 ;;		_USBEnableEndpoint
 52875 ;;		_USBMSDInit
 52876 ;; This function is called by:
 52877 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 52878 ;; This function uses a non-reentrant model
 52879 ;;
 52880                           
 52881                           	psect	text220
 52882  015910                     __ptext220:
 52883                           	opt stack 0
 52884  015910                     _APP_DeviceMSDInitialize:
 52885                           	opt stack 13
 52886                           
 52887                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 52888                           
 52889                           ;incstack = 0
 52890  015910  0E1E               	movlw	30
 52891  015912  6E09               	movwf	USBEnableEndpoint@options,c
 52892  015914  0E02               	movlw	2
 52893  015916  EC84  F0A8         	call	_USBEnableEndpoint
 52894                           
 52895                           ;app_device_msd.c: 93: USBMSDInit();
 52896  01591A  EC74  F086         	call	_USBMSDInit	;wreg free
 52897  01591E  0012               	return		;funcret
 52898  015920                     __end_of_APP_DeviceMSDInitialize:
 52899                           	opt stack 0
 52900                           tosu	equ	0xFFF
 52901                           tosh	equ	0xFFE
 52902                           tosl	equ	0xFFD
 52903                           pclatu	equ	0xFFB
 52904                           pclath	equ	0xFFA
 52905                           tblptru	equ	0xFF8
 52906                           tblptrh	equ	0xFF7
 52907                           tblptrl	equ	0xFF6
 52908                           tablat	equ	0xFF5
 52909                           prodh	equ	0xFF4
 52910                           prodl	equ	0xFF3
 52911                           intcon	equ	0xFF2
 52912                           indf0	equ	0xFEF
 52913                           postinc0	equ	0xFEE
 52914                           fsr0h	equ	0xFEA
 52915                           fsr0l	equ	0xFE9
 52916                           wreg	equ	0xFE8
 52917                           indf1	equ	0xFE7
 52918                           postinc1	equ	0xFE6
 52919                           postdec1	equ	0xFE5
 52920                           plusw1	equ	0xFE3
 52921                           fsr1h	equ	0xFE2
 52922                           fsr1l	equ	0xFE1
 52923                           indf2	equ	0xFDF
 52924                           postinc2	equ	0xFDE
 52925                           postdec2	equ	0xFDD
 52926                           plusw2	equ	0xFDB
 52927                           fsr2h	equ	0xFDA
 52928                           fsr2l	equ	0xFD9
 52929                           status	equ	0xFD8
 52930                           
 52931 ;; *************** function _USBMSDInit *****************
 52932 ;; Defined at:
 52933 ;;		line 142 in file "usb_device_msd.c"
 52934 ;; Parameters:    Size  Location     Type
 52935 ;;		None
 52936 ;; Auto vars:     Size  Location     Type
 52937 ;;		None
 52938 ;; Return value:  Size  Location     Type
 52939 ;;                  1    wreg      void 
 52940 ;; Registers used:
 52941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 52942 ;; Tracked objects:
 52943 ;;		On entry : 0/0
 52944 ;;		On exit  : 0/0
 52945 ;;		Unchanged: 0/0
 52946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52949 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52950 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52951 ;;Total ram usage:        3 bytes
 52952 ;; Hardware stack levels used:    1
 52953 ;; Hardware stack levels required when called:    1
 52954 ;; This function calls:
 52955 ;;		i2_ExternalFlash_MediaDetect
 52956 ;;		i2_ExternalFlash_MediaInitialize
 52957 ;;		i2_ResetSenseData
 52958 ;;		i2_USBTransferOnePacket
 52959 ;; This function is called by:
 52960 ;;		_APP_DeviceMSDInitialize
 52961 ;; This function uses a non-reentrant model
 52962 ;;
 52963                           
 52964                           	psect	text221
 52965  010CE8                     __ptext221:
 52966                           	opt stack 0
 52967  010CE8                     _USBMSDInit:
 52968                           	opt stack 13
 52969                           
 52970                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 52971                           
 52972                           ;incstack = 0
 52973  010CE8  0E00               	movlw	0
 52974  010CEA  6E01               	movwf	i2USBTransferOnePacket@dir,c
 52975  010CEC  0E40               	movlw	64
 52976  010CEE  6E02               	movwf	i2USBTransferOnePacket@data,c
 52977  010CF0  0E0D               	movlw	13
 52978  010CF2  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 52979  010CF4  0E40               	movlw	64
 52980  010CF6  6E04               	movwf	i2USBTransferOnePacket@len,c
 52981  010CF8  0E02               	movlw	2
 52982  010CFA  EC0D  F089         	call	i2_USBTransferOnePacket
 52983  010CFE  C001  F14B         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 52984  010D02  C002  F14C         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 52985  010D06  C11F  F149         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 52986  010D0A  C120  F14A         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 52987                           
 52988                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 52989  010D0E  0E00               	movlw	0
 52990  010D10  0101               	movlb	1	; () banked
 52991  010D12  6F63               	movwf	_MSD_State& (0+255),b
 52992                           
 52993                           ; BSR set to: 1
 52994                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 52995  010D14  6962               	setf	_MSDCommandState& (0+255),b
 52996                           
 52997                           ; BSR set to: 1
 52998                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 52999  010D16  0E00               	movlw	0
 53000  010D18  6F61               	movwf	_MSDReadState& (0+255),b
 53001                           
 53002                           ; BSR set to: 1
 53003                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 53004  010D1A  0E00               	movlw	0
 53005  010D1C  6F60               	movwf	_MSDWriteState& (0+255),b
 53006                           
 53007                           ; BSR set to: 1
 53008                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 53009  010D1E  0E00               	movlw	0
 53010  010D20  6F5C               	movwf	_MSDHostNoData& (0+255),b
 53011                           
 53012                           ; BSR set to: 1
 53013                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 53014  010D22  0E00               	movlw	0
 53015  010D24  0102               	movlb	2	; () banked
 53016  010D26  6F2E               	movwf	_gblNumBLKS& (0+255),b
 53017  010D28  0E00               	movlw	0
 53018  010D2A  6F2F               	movwf	(_gblNumBLKS+1)& (0+255),b
 53019  010D2C  0E00               	movlw	0
 53020  010D2E  6F30               	movwf	(_gblNumBLKS+2)& (0+255),b
 53021  010D30  0E00               	movlw	0
 53022  010D32  6F31               	movwf	(_gblNumBLKS+3)& (0+255),b
 53023                           
 53024                           ; BSR set to: 2
 53025                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 53026  010D34  0E00               	movlw	0
 53027  010D36  6F2A               	movwf	_gblBLKLen& (0+255),b
 53028  010D38  0E00               	movlw	0
 53029  010D3A  6F2B               	movwf	(_gblBLKLen+1)& (0+255),b
 53030  010D3C  0E00               	movlw	0
 53031  010D3E  6F2C               	movwf	(_gblBLKLen+2)& (0+255),b
 53032  010D40  0E00               	movlw	0
 53033  010D42  6F2D               	movwf	(_gblBLKLen+3)& (0+255),b
 53034                           
 53035                           ; BSR set to: 2
 53036                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 53037  010D44  0E01               	movlw	1
 53038  010D46  0101               	movlb	1	; () banked
 53039  010D48  6F5B               	movwf	_MSDCBWValid& (0+255),b
 53040                           
 53041                           ; BSR set to: 1
 53042                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 53043  010D4A  0E00               	movlw	0
 53044  010D4C  6F48               	movwf	(_gblMediaPresent+1)& (0+255),b
 53045  010D4E  0E00               	movlw	0
 53046  010D50  6F47               	movwf	_gblMediaPresent& (0+255),b
 53047                           
 53048                           ; BSR set to: 1
 53049                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 53050  010D52  0E00               	movlw	0
 53051  010D54  0102               	movlb	2	; () banked
 53052  010D56  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 53053  010D58  D04A               	goto	i2l534
 53054  010D5A                     
 53055                           ; BSR set to: 2
 53056                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 53057                           
 53058                           ; BSR set to: 2
 53059  010D5A  510D               	movf	(_gblCBW+13)& (0+255),w,b
 53060  010D5C  0D01               	mullw	1
 53061  010D5E  0E5D               	movlw	low _SoftDetach
 53062  010D60  24F3               	addwf	prodl,w,c
 53063  010D62  6ED9               	movwf	fsr2l,c
 53064  010D64  0E01               	movlw	high _SoftDetach
 53065  010D66  20F4               	addwfc	prodh,w,c
 53066  010D68  6EDA               	movwf	fsr2h,c
 53067  010D6A  0E00               	movlw	0
 53068  010D6C  6EDF               	movwf	indf2,c
 53069                           
 53070                           ; BSR set to: 2
 53071                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 53072  010D6E  C29E  F001         	movff	_LUN+21,i2ExternalFlash_MediaDetect@config
 53073  010D72  C29F  F002         	movff	_LUN+22,i2ExternalFlash_MediaDetect@config+1
 53074  010D76  EE22  F092         	lfsr	2,_LUN+9
 53075  010D7A  D801               	call	i2u986_48
 53076  010D7C  D00A               	goto	i2u986_49
 53077  010D7E                     i2u986_48:
 53078  010D7E  0005               	push	
 53079  010D80  6EFA               	movwf	pclath,c
 53080  010D82  50DE               	movf	postinc2,w,c
 53081  010D84  6EFD               	movwf	tosl,c
 53082  010D86  50DE               	movf	postinc2,w,c
 53083  010D88  6EFE               	movwf	tosh,c
 53084  010D8A  50DE               	movf	postinc2,w,c
 53085  010D8C  6EFF               	movwf	tosu,c
 53086  010D8E  50FA               	movf	pclath,w,c
 53087  010D90  0012               	return		;indir
 53088  010D92                     i2u986_49:
 53089  010D92  0900               	iorlw	0
 53090  010D94  B4D8               	btfsc	status,2,c
 53091  010D96  D027               	goto	i2l537
 53092                           
 53093                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 53094  010D98  C29E  F001         	movff	_LUN+21,i2ExternalFlash_MediaInitialize@config
 53095  010D9C  C29F  F002         	movff	_LUN+22,i2ExternalFlash_MediaInitialize@config+1
 53096  010DA0  D801               	call	i2u988_48
 53097  010DA2  D00B               	goto	i2u988_49
 53098  010DA4                     i2u988_48:
 53099  010DA4  0005               	push	
 53100  010DA6  6EFA               	movwf	pclath,c
 53101  010DA8  0102               	movlb	2	; () banked
 53102  010DAA  5189               	movf	_LUN& (0+255),w,b
 53103  010DAC  6EFD               	movwf	tosl,c
 53104  010DAE  518A               	movf	(_LUN+1)& (0+255),w,b
 53105  010DB0  6EFE               	movwf	tosh,c
 53106  010DB2  518B               	movf	(_LUN+2)& (0+255),w,b
 53107  010DB4  6EFF               	movwf	tosu,c
 53108  010DB6  50FA               	movf	pclath,w,c
 53109  010DB8  0012               	return		;indir
 53110  010DBA                     i2u988_49:
 53111  010DBA  5001               	movf	?i2_ExternalFlash_MediaInitialize,w,c
 53112  010DBC  1002               	iorwf	?i2_ExternalFlash_MediaInitialize+1,w,c
 53113  010DBE  B4D8               	btfsc	status,2,c
 53114  010DC0  D012               	goto	i2l537
 53115                           
 53116                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 53117  010DC2  C20D  F00C         	movff	_gblCBW+13,??_USBMSDInit
 53118  010DC6  0E01               	movlw	1
 53119  010DC8  6E0D               	movwf	(??_USBMSDInit+1)& (0+255),c
 53120  010DCA  0E00               	movlw	0
 53121  010DCC  6E0E               	movwf	(??_USBMSDInit+2)& (0+255),c
 53122  010DCE  2A0C               	incf	??_USBMSDInit,f,c
 53123  010DD0  D003               	goto	i2u990_44
 53124  010DD2                     i2u990_45:
 53125  010DD2  90D8               	bcf	status,0,c
 53126  010DD4  360D               	rlcf	??_USBMSDInit+1,f,c
 53127  010DD6  360E               	rlcf	??_USBMSDInit+2,f,c
 53128  010DD8                     i2u990_44:
 53129  010DD8  2E0C               	decfsz	??_USBMSDInit,f,c
 53130  010DDA  D7FB               	goto	i2u990_45
 53131  010DDC  500D               	movf	??_USBMSDInit+1,w,c
 53132  010DDE  0101               	movlb	1	; () banked
 53133  010DE0  1347               	iorwf	_gblMediaPresent& (0+255),f,b
 53134  010DE2  500E               	movf	??_USBMSDInit+2,w,c
 53135  010DE4  1348               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 53136  010DE6                     i2l537:
 53137                           
 53138                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 53139                           
 53140                           ; BSR set to: 1
 53141                           
 53142                           ; BSR set to: 1
 53143  010DE6  ECD4  F0A1         	call	i2_ResetSenseData	;wreg free
 53144  010DEA  0102               	movlb	2	; () banked
 53145  010DEC  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 53146  010DEE                     i2l534:
 53147                           
 53148                           ; BSR set to: 2
 53149                           
 53150                           ; BSR set to: 2
 53151  010DEE  510D               	movf	(_gblCBW+13)& (0+255),w,b
 53152  010DF0  A4D8               	btfss	status,2,c
 53153  010DF2  0012               	return	
 53154  010DF4  D7B2               	goto	i2l535
 53155  010DF6                     __end_of_USBMSDInit:
 53156                           	opt stack 0
 53157                           tosu	equ	0xFFF
 53158                           tosh	equ	0xFFE
 53159                           tosl	equ	0xFFD
 53160                           pclatu	equ	0xFFB
 53161                           pclath	equ	0xFFA
 53162                           tblptru	equ	0xFF8
 53163                           tblptrh	equ	0xFF7
 53164                           tblptrl	equ	0xFF6
 53165                           tablat	equ	0xFF5
 53166                           prodh	equ	0xFF4
 53167                           prodl	equ	0xFF3
 53168                           intcon	equ	0xFF2
 53169                           indf0	equ	0xFEF
 53170                           postinc0	equ	0xFEE
 53171                           fsr0h	equ	0xFEA
 53172                           fsr0l	equ	0xFE9
 53173                           wreg	equ	0xFE8
 53174                           indf1	equ	0xFE7
 53175                           postinc1	equ	0xFE6
 53176                           postdec1	equ	0xFE5
 53177                           plusw1	equ	0xFE3
 53178                           fsr1h	equ	0xFE2
 53179                           fsr1l	equ	0xFE1
 53180                           indf2	equ	0xFDF
 53181                           postinc2	equ	0xFDE
 53182                           postdec2	equ	0xFDD
 53183                           plusw2	equ	0xFDB
 53184                           fsr2h	equ	0xFDA
 53185                           fsr2l	equ	0xFD9
 53186                           status	equ	0xFD8
 53187                           
 53188 ;; *************** function i2_ResetSenseData *****************
 53189 ;; Defined at:
 53190 ;;		line 1373 in file "usb_device_msd.c"
 53191 ;; Parameters:    Size  Location     Type
 53192 ;;		None
 53193 ;; Auto vars:     Size  Location     Type
 53194 ;;		None
 53195 ;; Return value:  Size  Location     Type
 53196 ;;                  1    wreg      void 
 53197 ;; Registers used:
 53198 ;;		wreg, status,2
 53199 ;; Tracked objects:
 53200 ;;		On entry : 0/0
 53201 ;;		On exit  : 0/0
 53202 ;;		Unchanged: 0/0
 53203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53208 ;;Total ram usage:        0 bytes
 53209 ;; Hardware stack levels used:    1
 53210 ;; This function calls:
 53211 ;;		Nothing
 53212 ;; This function is called by:
 53213 ;;		_USBMSDInit
 53214 ;; This function uses a non-reentrant model
 53215 ;;
 53216                           
 53217                           	psect	text222
 53218  0143A8                     __ptext222:
 53219                           	opt stack 0
 53220  0143A8                     i2_ResetSenseData:
 53221                           	opt stack 13
 53222                           
 53223                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 53224                           
 53225                           ; BSR set to: 2
 53226                           ;incstack = 0
 53227  0143A8  0101               	movlb	1	; () banked
 53228  0143AA  9100               	bcf	_gblSenseData& (0+255),0,b
 53229  0143AC  9300               	bcf	_gblSenseData& (0+255),1,b
 53230  0143AE  9500               	bcf	_gblSenseData& (0+255),2,b
 53231  0143B0  9700               	bcf	_gblSenseData& (0+255),3,b
 53232  0143B2  8900               	bsf	_gblSenseData& (0+255),4,b
 53233  0143B4  8B00               	bsf	_gblSenseData& (0+255),5,b
 53234  0143B6  8D00               	bsf	_gblSenseData& (0+255),6,b
 53235                           
 53236                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 53237  0143B8  9F00               	bcf	_gblSenseData& (0+255),7,b
 53238                           
 53239                           ; BSR set to: 1
 53240                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 53241  0143BA  0E00               	movlw	0
 53242  0143BC  6F01               	movwf	(_gblSenseData+1)& (0+255),b
 53243                           
 53244                           ; BSR set to: 1
 53245                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 53246  0143BE  9102               	bcf	(_gblSenseData+2)& (0+255),0,b
 53247  0143C0  9302               	bcf	(_gblSenseData+2)& (0+255),1,b
 53248  0143C2  9502               	bcf	(_gblSenseData+2)& (0+255),2,b
 53249  0143C4  9702               	bcf	(_gblSenseData+2)& (0+255),3,b
 53250                           
 53251                           ; BSR set to: 1
 53252                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 53253  0143C6  9B02               	bcf	(_gblSenseData+2)& (0+255),5,b
 53254                           
 53255                           ; BSR set to: 1
 53256                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 53257  0143C8  9D02               	bcf	(_gblSenseData+2)& (0+255),6,b
 53258                           
 53259                           ; BSR set to: 1
 53260                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 53261  0143CA  9F02               	bcf	(_gblSenseData+2)& (0+255),7,b
 53262                           
 53263                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 53264  0143CC  0E00               	movlw	0
 53265  0143CE  6F03               	movwf	(_gblSenseData+3)& (0+255),b
 53266                           
 53267                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 53268  0143D0  0E00               	movlw	0
 53269  0143D2  6F04               	movwf	(_gblSenseData+4)& (0+255),b
 53270                           
 53271                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 53272  0143D4  0E00               	movlw	0
 53273  0143D6  6F05               	movwf	(_gblSenseData+5)& (0+255),b
 53274                           
 53275                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 53276  0143D8  0E00               	movlw	0
 53277  0143DA  6F06               	movwf	(_gblSenseData+6)& (0+255),b
 53278                           
 53279                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 53280  0143DC  0E0A               	movlw	10
 53281  0143DE  6F07               	movwf	(_gblSenseData+7)& (0+255),b
 53282                           
 53283                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 53284  0143E0  0E00               	movlw	0
 53285  0143E2  6F08               	movwf	(_gblSenseData+8)& (0+255),b
 53286  0143E4  0E00               	movlw	0
 53287  0143E6  6F09               	movwf	(_gblSenseData+9)& (0+255),b
 53288  0143E8  0E00               	movlw	0
 53289  0143EA  6F0A               	movwf	(_gblSenseData+10)& (0+255),b
 53290  0143EC  0E00               	movlw	0
 53291  0143EE  6F0B               	movwf	(_gblSenseData+11)& (0+255),b
 53292                           
 53293                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 53294  0143F0  0E00               	movlw	0
 53295  0143F2  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 53296                           
 53297                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 53298  0143F4  0E00               	movlw	0
 53299  0143F6  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 53300                           
 53301                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 53302  0143F8  0E00               	movlw	0
 53303  0143FA  6F0E               	movwf	(_gblSenseData+14)& (0+255),b
 53304                           
 53305                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 53306  0143FC  0E00               	movlw	0
 53307  0143FE  6F0F               	movwf	(_gblSenseData+15)& (0+255),b
 53308                           
 53309                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 53310  014400  0E00               	movlw	0
 53311  014402  6F10               	movwf	(_gblSenseData+16)& (0+255),b
 53312                           
 53313                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 53314  014404  0E00               	movlw	0
 53315  014406  6F11               	movwf	(_gblSenseData+17)& (0+255),b
 53316                           
 53317                           ; BSR set to: 1
 53318  014408  0012               	return		;funcret
 53319  01440A                     __end_ofi2_ResetSenseData:
 53320                           	opt stack 0
 53321                           tosu	equ	0xFFF
 53322                           tosh	equ	0xFFE
 53323                           tosl	equ	0xFFD
 53324                           pclatu	equ	0xFFB
 53325                           pclath	equ	0xFFA
 53326                           tblptru	equ	0xFF8
 53327                           tblptrh	equ	0xFF7
 53328                           tblptrl	equ	0xFF6
 53329                           tablat	equ	0xFF5
 53330                           prodh	equ	0xFF4
 53331                           prodl	equ	0xFF3
 53332                           intcon	equ	0xFF2
 53333                           indf0	equ	0xFEF
 53334                           postinc0	equ	0xFEE
 53335                           fsr0h	equ	0xFEA
 53336                           fsr0l	equ	0xFE9
 53337                           wreg	equ	0xFE8
 53338                           indf1	equ	0xFE7
 53339                           postinc1	equ	0xFE6
 53340                           postdec1	equ	0xFE5
 53341                           plusw1	equ	0xFE3
 53342                           fsr1h	equ	0xFE2
 53343                           fsr1l	equ	0xFE1
 53344                           indf2	equ	0xFDF
 53345                           postinc2	equ	0xFDE
 53346                           postdec2	equ	0xFDD
 53347                           plusw2	equ	0xFDB
 53348                           fsr2h	equ	0xFDA
 53349                           fsr2l	equ	0xFD9
 53350                           status	equ	0xFD8
 53351                           
 53352 ;; *************** function i2_ExternalFlash_MediaInitialize *****************
 53353 ;; Defined at:
 53354 ;;		line 10 in file "external_flash.c"
 53355 ;; Parameters:    Size  Location     Type
 53356 ;;  config          2    0[COMRAM] PTR void 
 53357 ;;		 -> NULL(0), 
 53358 ;; Auto vars:     Size  Location     Type
 53359 ;;		None
 53360 ;; Return value:  Size  Location     Type
 53361 ;;                  2    0[COMRAM] PTR struct .
 53362 ;; Registers used:
 53363 ;;		wreg, status,2, status,0
 53364 ;; Tracked objects:
 53365 ;;		On entry : 0/0
 53366 ;;		On exit  : 0/0
 53367 ;;		Unchanged: 0/0
 53368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53369 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53372 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53373 ;;Total ram usage:        2 bytes
 53374 ;; Hardware stack levels used:    1
 53375 ;; This function calls:
 53376 ;;		Nothing
 53377 ;; This function is called by:
 53378 ;;		_USBMSDInit
 53379 ;;		_MSDProcessCommand
 53380 ;; This function uses a non-reentrant model
 53381 ;;
 53382                           
 53383                           	psect	text223
 53384  015882                     __ptext223:
 53385                           	opt stack 0
 53386  015882                     i2_ExternalFlash_MediaInitialize:
 53387                           	opt stack 13
 53388                           
 53389                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 53390                           
 53391                           ; BSR set to: 1
 53392                           ;incstack = 0
 53393  015882  0102               	movlb	2	; () banked
 53394  015884  8185               	bsf	(_mediaInformation+1)& (0+255),0,b
 53395                           
 53396                           ; BSR set to: 2
 53397                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 53398  015886  0E02               	movlw	2
 53399  015888  6F87               	movwf	(_mediaInformation+3)& (0+255),b
 53400  01588A  0E00               	movlw	0
 53401  01588C  6F86               	movwf	(_mediaInformation+2)& (0+255),b
 53402                           
 53403                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 53404  01588E  0E00               	movlw	0
 53405  015890  6F84               	movwf	_mediaInformation& (0+255),b
 53406                           
 53407                           ; BSR set to: 2
 53408                           ;external_flash.c: 15: return &mediaInformation;
 53409  015892  0E84               	movlw	low _mediaInformation
 53410  015894  6E01               	movwf	?i2_ExternalFlash_MediaInitialize,c
 53411  015896  0E02               	movlw	high _mediaInformation
 53412  015898  6E02               	movwf	?i2_ExternalFlash_MediaInitialize+1,c
 53413  01589A  0012               	return	
 53414  01589C                     __end_ofi2_ExternalFlash_MediaInitialize:
 53415                           	opt stack 0
 53416                           tosu	equ	0xFFF
 53417                           tosh	equ	0xFFE
 53418                           tosl	equ	0xFFD
 53419                           pclatu	equ	0xFFB
 53420                           pclath	equ	0xFFA
 53421                           tblptru	equ	0xFF8
 53422                           tblptrh	equ	0xFF7
 53423                           tblptrl	equ	0xFF6
 53424                           tablat	equ	0xFF5
 53425                           prodh	equ	0xFF4
 53426                           prodl	equ	0xFF3
 53427                           intcon	equ	0xFF2
 53428                           indf0	equ	0xFEF
 53429                           postinc0	equ	0xFEE
 53430                           fsr0h	equ	0xFEA
 53431                           fsr0l	equ	0xFE9
 53432                           wreg	equ	0xFE8
 53433                           indf1	equ	0xFE7
 53434                           postinc1	equ	0xFE6
 53435                           postdec1	equ	0xFE5
 53436                           plusw1	equ	0xFE3
 53437                           fsr1h	equ	0xFE2
 53438                           fsr1l	equ	0xFE1
 53439                           indf2	equ	0xFDF
 53440                           postinc2	equ	0xFDE
 53441                           postdec2	equ	0xFDD
 53442                           plusw2	equ	0xFDB
 53443                           fsr2h	equ	0xFDA
 53444                           fsr2l	equ	0xFD9
 53445                           status	equ	0xFD8
 53446                           
 53447 ;; *************** function i2_ExternalFlash_MediaDetect *****************
 53448 ;; Defined at:
 53449 ;;		line 29 in file "external_flash.c"
 53450 ;; Parameters:    Size  Location     Type
 53451 ;;  config          2    0[COMRAM] PTR void 
 53452 ;;		 -> NULL(0), 
 53453 ;; Auto vars:     Size  Location     Type
 53454 ;;		None
 53455 ;; Return value:  Size  Location     Type
 53456 ;;                  1    wreg      unsigned char 
 53457 ;; Registers used:
 53458 ;;		wreg
 53459 ;; Tracked objects:
 53460 ;;		On entry : 0/0
 53461 ;;		On exit  : 0/0
 53462 ;;		Unchanged: 0/0
 53463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53464 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53467 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53468 ;;Total ram usage:        2 bytes
 53469 ;; Hardware stack levels used:    1
 53470 ;; This function calls:
 53471 ;;		Nothing
 53472 ;; This function is called by:
 53473 ;;		_USBMSDInit
 53474 ;;		_MSDProcessCommand
 53475 ;; This function uses a non-reentrant model
 53476 ;;
 53477                           
 53478                           	psect	text224
 53479  0159D0                     __ptext224:
 53480                           	opt stack 0
 53481  0159D0                     i2_ExternalFlash_MediaDetect:
 53482                           	opt stack 13
 53483                           
 53484                           ;external_flash.c: 31: return 1;
 53485                           
 53486                           ; BSR set to: 2
 53487                           ;incstack = 0
 53488  0159D0  0E01               	movlw	1
 53489  0159D2  0012               	return	
 53490  0159D4                     __end_ofi2_ExternalFlash_MediaDetect:
 53491                           	opt stack 0
 53492                           tosu	equ	0xFFF
 53493                           tosh	equ	0xFFE
 53494                           tosl	equ	0xFFD
 53495                           pclatu	equ	0xFFB
 53496                           pclath	equ	0xFFA
 53497                           tblptru	equ	0xFF8
 53498                           tblptrh	equ	0xFF7
 53499                           tblptrl	equ	0xFF6
 53500                           tablat	equ	0xFF5
 53501                           prodh	equ	0xFF4
 53502                           prodl	equ	0xFF3
 53503                           intcon	equ	0xFF2
 53504                           indf0	equ	0xFEF
 53505                           postinc0	equ	0xFEE
 53506                           fsr0h	equ	0xFEA
 53507                           fsr0l	equ	0xFE9
 53508                           wreg	equ	0xFE8
 53509                           indf1	equ	0xFE7
 53510                           postinc1	equ	0xFE6
 53511                           postdec1	equ	0xFE5
 53512                           plusw1	equ	0xFE3
 53513                           fsr1h	equ	0xFE2
 53514                           fsr1l	equ	0xFE1
 53515                           indf2	equ	0xFDF
 53516                           postinc2	equ	0xFDE
 53517                           postdec2	equ	0xFDD
 53518                           plusw2	equ	0xFDB
 53519                           fsr2h	equ	0xFDA
 53520                           fsr2l	equ	0xFD9
 53521                           status	equ	0xFD8
 53522                           
 53523 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 53524 ;; Defined at:
 53525 ;;		line 46 in file "app_device_custom_hid.c"
 53526 ;; Parameters:    Size  Location     Type
 53527 ;;		None
 53528 ;; Auto vars:     Size  Location     Type
 53529 ;;		None
 53530 ;; Return value:  Size  Location     Type
 53531 ;;                  1    wreg      void 
 53532 ;; Registers used:
 53533 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 53534 ;; Tracked objects:
 53535 ;;		On entry : 0/0
 53536 ;;		On exit  : 0/0
 53537 ;;		Unchanged: 0/0
 53538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53543 ;;Total ram usage:        0 bytes
 53544 ;; Hardware stack levels used:    1
 53545 ;; Hardware stack levels required when called:    2
 53546 ;; This function calls:
 53547 ;;		_USBEnableEndpoint
 53548 ;;		i2_USBTransferOnePacket
 53549 ;; This function is called by:
 53550 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 53551 ;; This function uses a non-reentrant model
 53552 ;;
 53553                           
 53554                           	psect	text225
 53555  015332                     __ptext225:
 53556                           	opt stack 0
 53557  015332                     _APP_DeviceCustomHIDInitialize:
 53558                           	opt stack 13
 53559                           
 53560                           ;app_device_custom_hid.c: 50: USBInHandle = 0;
 53561                           
 53562                           ;incstack = 0
 53563  015332  0E00               	movlw	0
 53564  015334  0101               	movlb	1	; () banked
 53565  015336  6F41               	movwf	_USBInHandle& (0+255),b
 53566  015338  0E00               	movlw	0
 53567  01533A  6F42               	movwf	(_USBInHandle+1)& (0+255),b
 53568                           
 53569                           ; BSR set to: 1
 53570                           ;app_device_custom_hid.c: 53: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 53571  01533C  0E1E               	movlw	30
 53572  01533E  6E09               	movwf	USBEnableEndpoint@options,c
 53573  015340  0E01               	movlw	1
 53574  015342  EC84  F0A8         	call	_USBEnableEndpoint
 53575                           
 53576                           ;app_device_custom_hid.c: 56: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 53577  015346  0E00               	movlw	0
 53578  015348  6E01               	movwf	i2USBTransferOnePacket@dir,c
 53579  01534A  0E78               	movlw	low _ReceivedDataBuffer
 53580  01534C  6E02               	movwf	i2USBTransferOnePacket@data,c
 53581  01534E  0E03               	movlw	high _ReceivedDataBuffer
 53582  015350  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 53583  015352  0E40               	movlw	64
 53584  015354  6E04               	movwf	i2USBTransferOnePacket@len,c
 53585  015356  0E01               	movlw	1
 53586  015358  EC0D  F089         	call	i2_USBTransferOnePacket
 53587  01535C  C001  F143         	movff	?i2_USBTransferOnePacket,_USBOutHandle
 53588  015360  C002  F144         	movff	?i2_USBTransferOnePacket+1,_USBOutHandle+1
 53589  015364  0012               	return		;funcret
 53590  015366                     __end_of_APP_DeviceCustomHIDInitialize:
 53591                           	opt stack 0
 53592                           tosu	equ	0xFFF
 53593                           tosh	equ	0xFFE
 53594                           tosl	equ	0xFFD
 53595                           pclatu	equ	0xFFB
 53596                           pclath	equ	0xFFA
 53597                           tblptru	equ	0xFF8
 53598                           tblptrh	equ	0xFF7
 53599                           tblptrl	equ	0xFF6
 53600                           tablat	equ	0xFF5
 53601                           prodh	equ	0xFF4
 53602                           prodl	equ	0xFF3
 53603                           intcon	equ	0xFF2
 53604                           indf0	equ	0xFEF
 53605                           postinc0	equ	0xFEE
 53606                           fsr0h	equ	0xFEA
 53607                           fsr0l	equ	0xFE9
 53608                           wreg	equ	0xFE8
 53609                           indf1	equ	0xFE7
 53610                           postinc1	equ	0xFE6
 53611                           postdec1	equ	0xFE5
 53612                           plusw1	equ	0xFE3
 53613                           fsr1h	equ	0xFE2
 53614                           fsr1l	equ	0xFE1
 53615                           indf2	equ	0xFDF
 53616                           postinc2	equ	0xFDE
 53617                           postdec2	equ	0xFDD
 53618                           plusw2	equ	0xFDB
 53619                           fsr2h	equ	0xFDA
 53620                           fsr2l	equ	0xFD9
 53621                           status	equ	0xFD8
 53622                           
 53623 ;; *************** function i2_USBTransferOnePacket *****************
 53624 ;; Defined at:
 53625 ;;		line 995 in file "usb_device.c"
 53626 ;; Parameters:    Size  Location     Type
 53627 ;;  ep              1    wreg     unsigned char 
 53628 ;;  dir             1    0[COMRAM] unsigned char 
 53629 ;;  data            2    1[COMRAM] PTR unsigned char 
 53630 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 53631 ;;		 -> msd_cbw(31), NULL(0), 
 53632 ;;  len             1    3[COMRAM] unsigned char 
 53633 ;; Auto vars:     Size  Location     Type
 53634 ;;  ep              1    8[COMRAM] unsigned char 
 53635 ;;  USBTransferO    2    9[COMRAM] PTR volatile struct __BD
 53636 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 53637 ;; Return value:  Size  Location     Type
 53638 ;;                  2    0[COMRAM] PTR void 
 53639 ;; Registers used:
 53640 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 53641 ;; Tracked objects:
 53642 ;;		On entry : 0/0
 53643 ;;		On exit  : 0/0
 53644 ;;		Unchanged: 0/0
 53645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53646 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53647 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53648 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53649 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53650 ;;Total ram usage:       11 bytes
 53651 ;; Hardware stack levels used:    1
 53652 ;; This function calls:
 53653 ;;		Nothing
 53654 ;; This function is called by:
 53655 ;;		_USBMSDInit
 53656 ;;		_USBCheckMSDRequest
 53657 ;;		_MSDTransferTerminated
 53658 ;;		_APP_DeviceCustomHIDInitialize
 53659 ;; This function uses a non-reentrant model
 53660 ;;
 53661                           
 53662                           	psect	text226
 53663  01121A                     __ptext226:
 53664                           	opt stack 0
 53665  01121A                     i2_USBTransferOnePacket:
 53666                           	opt stack 14
 53667                           
 53668                           ;incstack = 0
 53669                           ;i2USBTransferOnePacket@ep stored from wreg
 53670  01121A  6E09               	movwf	i2USBTransferOnePacket@ep,c
 53671                           
 53672                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 53673  01121C  5001               	movf	i2USBTransferOnePacket@dir,w,c
 53674  01121E  B4D8               	btfsc	status,2,c
 53675  011220  D007               	goto	i2l184
 53676                           
 53677                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 53678  011222  5009               	movf	i2USBTransferOnePacket@ep,w,c
 53679  011224  0D02               	mullw	2
 53680  011226  0E1B               	movlw	low _pBDTEntryIn
 53681  011228  24F3               	addwf	prodl,w,c
 53682  01122A  6ED9               	movwf	fsr2l,c
 53683  01122C  0E01               	movlw	high _pBDTEntryIn
 53684  01122E  D006               	goto	L85
 53685  011230                     i2l184:
 53686                           
 53687                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 53688  011230  5009               	movf	i2USBTransferOnePacket@ep,w,c
 53689  011232  0D02               	mullw	2
 53690  011234  0E21               	movlw	low _pBDTEntryOut
 53691  011236  24F3               	addwf	prodl,w,c
 53692  011238  6ED9               	movwf	fsr2l,c
 53693  01123A  0E01               	movlw	high _pBDTEntryOut
 53694  01123C                     L85:
 53695  01123C  20F4               	addwfc	prodh,w,c
 53696  01123E  6EDA               	movwf	fsr2h,c
 53697  011240  CFDE F00A          	movff	postinc2,i2USBTransferOnePacket@handle
 53698  011244  CFDD F00B          	movff	postdec2,i2USBTransferOnePacket@handle+1
 53699                           
 53700                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 53701  011248  500A               	movf	i2USBTransferOnePacket@handle,w,c
 53702  01124A  100B               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 53703  01124C  A4D8               	btfss	status,2,c
 53704  01124E  D005               	goto	i2l186
 53705                           
 53706                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 53707  011250  0E00               	movlw	0
 53708  011252  6E01               	movwf	?i2_USBTransferOnePacket,c
 53709  011254  0E00               	movlw	0
 53710  011256  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 53711  011258  0012               	return	
 53712  01125A                     i2l186:
 53713                           
 53714                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 53715  01125A  EE20 F002          	lfsr	2,2
 53716  01125E  500A               	movf	i2USBTransferOnePacket@handle,w,c
 53717  011260  26D9               	addwf	fsr2l,f,c
 53718  011262  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 53719  011264  22DA               	addwfc	fsr2h,f,c
 53720  011266  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 53721  01126A  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 53722                           
 53723                           ;usb_device.c: 1030: handle->CNT = len;
 53724  01126E  EE20 F001          	lfsr	2,1
 53725  011272  500A               	movf	i2USBTransferOnePacket@handle,w,c
 53726  011274  26D9               	addwf	fsr2l,f,c
 53727  011276  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 53728  011278  22DA               	addwfc	fsr2h,f,c
 53729  01127A  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 53730                           
 53731                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 53732  01127E  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 53733  011282  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 53734  011286  0E40               	movlw	64
 53735  011288  16DF               	andwf	indf2,f,c
 53736                           
 53737                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 53738  01128A  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 53739  01128E  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 53740  011292  0E00               	movlw	0
 53741  011294  86DB               	bsf	plusw2,3,c
 53742                           
 53743                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 53744  011296  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 53745  01129A  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 53746  01129E  0E00               	movlw	0
 53747  0112A0  8EDB               	bsf	plusw2,7,c
 53748                           
 53749                           ;usb_device.c: 1036: if(dir != 0)
 53750  0112A2  5001               	movf	i2USBTransferOnePacket@dir,w,c
 53751  0112A4  B4D8               	btfsc	status,2,c
 53752  0112A6  D018               	goto	i2l188
 53753                           
 53754                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 53755  0112A8  5009               	movf	i2USBTransferOnePacket@ep,w,c
 53756  0112AA  0D02               	mullw	2
 53757  0112AC  0E1B               	movlw	low _pBDTEntryIn
 53758  0112AE  24F3               	addwf	prodl,w,c
 53759  0112B0  6ED9               	movwf	fsr2l,c
 53760  0112B2  0E01               	movlw	high _pBDTEntryIn
 53761  0112B4  20F4               	addwfc	prodh,w,c
 53762  0112B6  6EDA               	movwf	fsr2h,c
 53763  0112B8  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 53764  0112BC  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 53765  0112C0  0E04               	movlw	4
 53766  0112C2  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 53767  0112C4  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 53768  0112C6  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 53769  0112C8  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 53770  0112CA  5009               	movf	i2USBTransferOnePacket@ep,w,c
 53771  0112CC  0D02               	mullw	2
 53772  0112CE  0E1B               	movlw	low _pBDTEntryIn
 53773  0112D0  24F3               	addwf	prodl,w,c
 53774  0112D2  6ED9               	movwf	fsr2l,c
 53775  0112D4  0E01               	movlw	high _pBDTEntryIn
 53776  0112D6  D017               	goto	L86
 53777  0112D8                     i2l188:
 53778                           
 53779                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 53780  0112D8  5009               	movf	i2USBTransferOnePacket@ep,w,c
 53781  0112DA  0D02               	mullw	2
 53782  0112DC  0E21               	movlw	low _pBDTEntryOut
 53783  0112DE  24F3               	addwf	prodl,w,c
 53784  0112E0  6ED9               	movwf	fsr2l,c
 53785  0112E2  0E01               	movlw	high _pBDTEntryOut
 53786  0112E4  20F4               	addwfc	prodh,w,c
 53787  0112E6  6EDA               	movwf	fsr2h,c
 53788  0112E8  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 53789  0112EC  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 53790  0112F0  0E04               	movlw	4
 53791  0112F2  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 53792  0112F4  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 53793  0112F6  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 53794  0112F8  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 53795  0112FA  5009               	movf	i2USBTransferOnePacket@ep,w,c
 53796  0112FC  0D02               	mullw	2
 53797  0112FE  0E21               	movlw	low _pBDTEntryOut
 53798  011300  24F3               	addwf	prodl,w,c
 53799  011302  6ED9               	movwf	fsr2l,c
 53800  011304  0E01               	movlw	high _pBDTEntryOut
 53801  011306                     L86:
 53802  011306  20F4               	addwfc	prodh,w,c
 53803  011308  6EDA               	movwf	fsr2h,c
 53804  01130A  C007  FFDE         	movff	??i2_USBTransferOnePacket+2,postinc2
 53805  01130E  C008  FFDD         	movff	??i2_USBTransferOnePacket+3,postdec2
 53806                           
 53807                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 53808  011312  C00A  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 53809  011316  C00B  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 53810  01131A  0012               	return	
 53811  01131C                     __end_ofi2_USBTransferOnePacket:
 53812                           	opt stack 0
 53813                           tosu	equ	0xFFF
 53814                           tosh	equ	0xFFE
 53815                           tosl	equ	0xFFD
 53816                           pclatu	equ	0xFFB
 53817                           pclath	equ	0xFFA
 53818                           tblptru	equ	0xFF8
 53819                           tblptrh	equ	0xFF7
 53820                           tblptrl	equ	0xFF6
 53821                           tablat	equ	0xFF5
 53822                           prodh	equ	0xFF4
 53823                           prodl	equ	0xFF3
 53824                           intcon	equ	0xFF2
 53825                           indf0	equ	0xFEF
 53826                           postinc0	equ	0xFEE
 53827                           fsr0h	equ	0xFEA
 53828                           fsr0l	equ	0xFE9
 53829                           wreg	equ	0xFE8
 53830                           indf1	equ	0xFE7
 53831                           postinc1	equ	0xFE6
 53832                           postdec1	equ	0xFE5
 53833                           plusw1	equ	0xFE3
 53834                           fsr1h	equ	0xFE2
 53835                           fsr1l	equ	0xFE1
 53836                           indf2	equ	0xFDF
 53837                           postinc2	equ	0xFDE
 53838                           postdec2	equ	0xFDD
 53839                           plusw2	equ	0xFDB
 53840                           fsr2h	equ	0xFDA
 53841                           fsr2l	equ	0xFD9
 53842                           status	equ	0xFD8
 53843                           
 53844 ;; *************** function _USBEnableEndpoint *****************
 53845 ;; Defined at:
 53846 ;;		line 878 in file "usb_device.c"
 53847 ;; Parameters:    Size  Location     Type
 53848 ;;  ep              1    wreg     unsigned char 
 53849 ;;  options         1    8[COMRAM] unsigned char 
 53850 ;; Auto vars:     Size  Location     Type
 53851 ;;  ep              1   11[COMRAM] unsigned char 
 53852 ;;  p               2    9[COMRAM] PTR unsigned char 
 53853 ;;		 -> UEP0(1), 
 53854 ;; Return value:  Size  Location     Type
 53855 ;;                  1    wreg      void 
 53856 ;; Registers used:
 53857 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 53858 ;; Tracked objects:
 53859 ;;		On entry : 0/0
 53860 ;;		On exit  : 0/0
 53861 ;;		Unchanged: 0/0
 53862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53863 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53864 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53866 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53867 ;;Total ram usage:        4 bytes
 53868 ;; Hardware stack levels used:    1
 53869 ;; Hardware stack levels required when called:    1
 53870 ;; This function calls:
 53871 ;;		_USBConfigureEndpoint
 53872 ;; This function is called by:
 53873 ;;		_APP_DeviceCustomHIDInitialize
 53874 ;;		_APP_DeviceMSDInitialize
 53875 ;; This function uses a non-reentrant model
 53876 ;;
 53877                           
 53878                           	psect	text227
 53879  015108                     __ptext227:
 53880                           	opt stack 0
 53881  015108                     _USBEnableEndpoint:
 53882                           	opt stack 13
 53883                           
 53884                           ;incstack = 0
 53885                           ;USBEnableEndpoint@ep stored from wreg
 53886  015108  6E0C               	movwf	USBEnableEndpoint@ep,c
 53887                           
 53888                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 53889  01510A  A409               	btfss	USBEnableEndpoint@options,2,c
 53890  01510C  D005               	goto	i2l179
 53891                           
 53892                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 53893  01510E  0E00               	movlw	0
 53894  015110  6E01               	movwf	USBConfigureEndpoint@direction,c
 53895  015112  500C               	movf	USBEnableEndpoint@ep,w,c
 53896  015114  EC9A  F09B         	call	_USBConfigureEndpoint
 53897  015118                     i2l179:
 53898                           
 53899                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 53900  015118  A209               	btfss	USBEnableEndpoint@options,1,c
 53901  01511A  D005               	goto	i2l180
 53902                           
 53903                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 53904  01511C  0E01               	movlw	1
 53905  01511E  6E01               	movwf	USBConfigureEndpoint@direction,c
 53906  015120  500C               	movf	USBEnableEndpoint@ep,w,c
 53907  015122  EC9A  F09B         	call	_USBConfigureEndpoint
 53908  015126                     i2l180:
 53909                           
 53910                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 53911  015126  500C               	movf	USBEnableEndpoint@ep,w,c
 53912  015128  0D01               	mullw	1
 53913  01512A  0E26               	movlw	38
 53914  01512C  24F3               	addwf	prodl,w,c
 53915  01512E  6E0A               	movwf	USBEnableEndpoint@p,c
 53916  015130  0E0F               	movlw	15
 53917  015132  20F4               	addwfc	prodh,w,c
 53918  015134  6E0B               	movwf	USBEnableEndpoint@p+1,c
 53919                           
 53920                           ;usb_device.c: 901: *p = options;
 53921  015136  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 53922  01513A  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 53923  01513E  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 53924  015142  0012               	return		;funcret
 53925  015144                     __end_of_USBEnableEndpoint:
 53926                           	opt stack 0
 53927                           tosu	equ	0xFFF
 53928                           tosh	equ	0xFFE
 53929                           tosl	equ	0xFFD
 53930                           pclatu	equ	0xFFB
 53931                           pclath	equ	0xFFA
 53932                           tblptru	equ	0xFF8
 53933                           tblptrh	equ	0xFF7
 53934                           tblptrl	equ	0xFF6
 53935                           tablat	equ	0xFF5
 53936                           prodh	equ	0xFF4
 53937                           prodl	equ	0xFF3
 53938                           intcon	equ	0xFF2
 53939                           indf0	equ	0xFEF
 53940                           postinc0	equ	0xFEE
 53941                           fsr0h	equ	0xFEA
 53942                           fsr0l	equ	0xFE9
 53943                           wreg	equ	0xFE8
 53944                           indf1	equ	0xFE7
 53945                           postinc1	equ	0xFE6
 53946                           postdec1	equ	0xFE5
 53947                           plusw1	equ	0xFE3
 53948                           fsr1h	equ	0xFE2
 53949                           fsr1l	equ	0xFE1
 53950                           indf2	equ	0xFDF
 53951                           postinc2	equ	0xFDE
 53952                           postdec2	equ	0xFDD
 53953                           plusw2	equ	0xFDB
 53954                           fsr2h	equ	0xFDA
 53955                           fsr2l	equ	0xFD9
 53956                           status	equ	0xFD8
 53957                           
 53958 ;; *************** function _USBConfigureEndpoint *****************
 53959 ;; Defined at:
 53960 ;;		line 1545 in file "usb_device.c"
 53961 ;; Parameters:    Size  Location     Type
 53962 ;;  EPNum           1    wreg     unsigned char 
 53963 ;;  direction       1    0[COMRAM] unsigned char 
 53964 ;; Auto vars:     Size  Location     Type
 53965 ;;  EPNum           1    5[COMRAM] unsigned char 
 53966 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 53967 ;;		 -> BDT(48), 
 53968 ;; Return value:  Size  Location     Type
 53969 ;;                  1    wreg      void 
 53970 ;; Registers used:
 53971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 53972 ;; Tracked objects:
 53973 ;;		On entry : 0/0
 53974 ;;		On exit  : 0/0
 53975 ;;		Unchanged: 0/0
 53976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53977 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53978 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53979 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53980 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53981 ;;Total ram usage:        8 bytes
 53982 ;; Hardware stack levels used:    1
 53983 ;; This function calls:
 53984 ;;		Nothing
 53985 ;; This function is called by:
 53986 ;;		_USBEnableEndpoint
 53987 ;; This function uses a non-reentrant model
 53988 ;;
 53989                           
 53990                           	psect	text228
 53991  013734                     __ptext228:
 53992                           	opt stack 0
 53993  013734                     _USBConfigureEndpoint:
 53994                           	opt stack 13
 53995                           
 53996                           ;incstack = 0
 53997                           ;USBConfigureEndpoint@EPNum stored from wreg
 53998  013734  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 53999                           
 54000                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 54001  013736  0E00               	movlw	0
 54002  013738  6E07               	movwf	USBConfigureEndpoint@handle,c
 54003  01373A  0E0D               	movlw	13
 54004  01373C  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 54005                           
 54006                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 54007  01373E  5001               	movf	USBConfigureEndpoint@direction,w,c
 54008  013740  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 54009  013742  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 54010  013744  90D8               	bcf	status,0,c
 54011  013746  3602               	rlcf	??_USBConfigureEndpoint,f,c
 54012  013748  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 54013  01374A  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 54014  01374C  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 54015  01374E  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 54016  013750  90D8               	bcf	status,0,c
 54017  013752  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 54018  013754  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 54019  013756  90D8               	bcf	status,0,c
 54020  013758  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 54021  01375A  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 54022  01375C  5002               	movf	??_USBConfigureEndpoint,w,c
 54023  01375E  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 54024  013760  5003               	movf	??_USBConfigureEndpoint+1,w,c
 54025  013762  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 54026  013764  90D8               	bcf	status,0,c
 54027  013766  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 54028  013768  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 54029  01376A  90D8               	bcf	status,0,c
 54030  01376C  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 54031  01376E  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 54032  013770  5004               	movf	??_USBConfigureEndpoint+2,w,c
 54033  013772  2607               	addwf	USBConfigureEndpoint@handle,f,c
 54034  013774  5005               	movf	??_USBConfigureEndpoint+3,w,c
 54035  013776  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 54036                           
 54037                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 54038  013778  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 54039  01377C  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 54040  013780  9EDF               	bcf	indf2,7,c
 54041                           
 54042                           ;usb_device.c: 1559: if(direction == 0)
 54043  013782  5001               	movf	USBConfigureEndpoint@direction,w,c
 54044  013784  A4D8               	btfss	status,2,c
 54045  013786  D007               	goto	i2l226
 54046                           
 54047                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 54048  013788  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 54049  01378A  0D02               	mullw	2
 54050  01378C  0E21               	movlw	low _pBDTEntryOut
 54051  01378E  24F3               	addwf	prodl,w,c
 54052  013790  6ED9               	movwf	fsr2l,c
 54053  013792  0E01               	movlw	high _pBDTEntryOut
 54054  013794  D006               	goto	L87
 54055  013796                     i2l226:
 54056                           
 54057                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 54058  013796  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 54059  013798  0D02               	mullw	2
 54060  01379A  0E1B               	movlw	low _pBDTEntryIn
 54061  01379C  24F3               	addwf	prodl,w,c
 54062  01379E  6ED9               	movwf	fsr2l,c
 54063  0137A0  0E01               	movlw	high _pBDTEntryIn
 54064  0137A2                     L87:
 54065  0137A2  20F4               	addwfc	prodh,w,c
 54066  0137A4  6EDA               	movwf	fsr2h,c
 54067  0137A6  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 54068  0137AA  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 54069                           
 54070                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 54071  0137AE  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 54072  0137B2  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 54073  0137B6  9CDF               	bcf	indf2,6,c
 54074                           
 54075                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 54076  0137B8  EE20 F004          	lfsr	2,4
 54077  0137BC  5007               	movf	USBConfigureEndpoint@handle,w,c
 54078  0137BE  26D9               	addwf	fsr2l,f,c
 54079  0137C0  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 54080  0137C2  22DA               	addwfc	fsr2h,f,c
 54081  0137C4  8CDF               	bsf	indf2,6,c
 54082  0137C6  0012               	return		;funcret
 54083  0137C8                     __end_of_USBConfigureEndpoint:
 54084                           	opt stack 0
 54085                           tosu	equ	0xFFF
 54086                           tosh	equ	0xFFE
 54087                           tosl	equ	0xFFD
 54088                           pclatu	equ	0xFFB
 54089                           pclath	equ	0xFFA
 54090                           tblptru	equ	0xFF8
 54091                           tblptrh	equ	0xFF7
 54092                           tblptrl	equ	0xFF6
 54093                           tablat	equ	0xFF5
 54094                           prodh	equ	0xFF4
 54095                           prodl	equ	0xFF3
 54096                           intcon	equ	0xFF2
 54097                           indf0	equ	0xFEF
 54098                           postinc0	equ	0xFEE
 54099                           fsr0h	equ	0xFEA
 54100                           fsr0l	equ	0xFE9
 54101                           wreg	equ	0xFE8
 54102                           indf1	equ	0xFE7
 54103                           postinc1	equ	0xFE6
 54104                           postdec1	equ	0xFE5
 54105                           plusw1	equ	0xFE3
 54106                           fsr1h	equ	0xFE2
 54107                           fsr1l	equ	0xFE1
 54108                           indf2	equ	0xFDF
 54109                           postinc2	equ	0xFDE
 54110                           postdec2	equ	0xFDD
 54111                           plusw2	equ	0xFDB
 54112                           fsr2h	equ	0xFDA
 54113                           fsr2l	equ	0xFD9
 54114                           status	equ	0xFD8
 54115                           
 54116 ;; *************** function _USBCtrlTrfOutHandler *****************
 54117 ;; Defined at:
 54118 ;;		line 2540 in file "usb_device.c"
 54119 ;; Parameters:    Size  Location     Type
 54120 ;;		None
 54121 ;; Auto vars:     Size  Location     Type
 54122 ;;		None
 54123 ;; Return value:  Size  Location     Type
 54124 ;;                  1    wreg      void 
 54125 ;; Registers used:
 54126 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 54127 ;; Tracked objects:
 54128 ;;		On entry : 0/0
 54129 ;;		On exit  : 0/0
 54130 ;;		Unchanged: 0/0
 54131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54136 ;;Total ram usage:        0 bytes
 54137 ;; Hardware stack levels used:    1
 54138 ;; Hardware stack levels required when called:    2
 54139 ;; This function calls:
 54140 ;;		_USBCtrlTrfRxService
 54141 ;; This function is called by:
 54142 ;;		_USBCtrlEPService
 54143 ;; This function uses a non-reentrant model
 54144 ;;
 54145                           
 54146                           	psect	text229
 54147  01446A                     __ptext229:
 54148                           	opt stack 0
 54149  01446A                     _USBCtrlTrfOutHandler:
 54150                           	opt stack 13
 54151                           
 54152                           ;usb_device.c: 2542: if(controlTransferState == 2)
 54153                           
 54154                           ;incstack = 0
 54155  01446A  0E02               	movlw	2
 54156  01446C  0101               	movlb	1	; () banked
 54157  01446E  196F               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 54158  014470  A4D8               	btfss	status,2,c
 54159  014472  D003               	goto	i2l332
 54160                           
 54161                           ; BSR set to: 1
 54162                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 54163  014474  ECFB  F086         	call	_USBCtrlTrfRxService	;wreg free
 54164                           
 54165                           ;usb_device.c: 2545: }
 54166  014478  0012               	return	
 54167  01447A                     i2l332:
 54168                           
 54169                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 54170  01447A  0E00               	movlw	0
 54171  01447C  0101               	movlb	1	; () banked
 54172  01447E  6F6F               	movwf	_controlTransferState& (0+255),b	;volatile
 54173                           
 54174                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 54175  014480  516B               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 54176  014482  A4D8               	btfss	status,2,c
 54177  014484  D01F               	goto	i2l334
 54178                           
 54179                           ; BSR set to: 1
 54180                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 54181  014486  EE20 F001          	lfsr	2,1
 54182  01448A  505C               	movf	_pBDTEntryEP0OutNext,w,c
 54183  01448C  26D9               	addwf	fsr2l,f,c
 54184  01448E  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 54185  014490  22DA               	addwfc	fsr2h,f,c
 54186  014492  0E08               	movlw	8
 54187  014494  6EDF               	movwf	indf2,c
 54188                           
 54189                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 54190  014496  EE20 F002          	lfsr	2,2
 54191  01449A  505C               	movf	_pBDTEntryEP0OutNext,w,c
 54192  01449C  26D9               	addwf	fsr2l,f,c
 54193  01449E  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 54194  0144A0  22DA               	addwfc	fsr2h,f,c
 54195  0144A2  0E30               	movlw	48
 54196  0144A4  6EDE               	movwf	postinc2,c
 54197  0144A6  0E0D               	movlw	13
 54198  0144A8  6EDD               	movwf	postdec2,c
 54199                           
 54200                           ; BSR set to: 1
 54201                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 54202  0144AA  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 54203  0144AE  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 54204  0144B2  0E0C               	movlw	12
 54205  0144B4  6EDF               	movwf	indf2,c
 54206                           
 54207                           ; BSR set to: 1
 54208                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 54209  0144B6  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 54210  0144BA  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 54211  0144BE  0E00               	movlw	0
 54212  0144C0  8EDB               	bsf	plusw2,7,c
 54213                           
 54214                           ;usb_device.c: 2563: }
 54215  0144C2  0012               	return	
 54216  0144C4                     i2l334:
 54217                           
 54218                           ; BSR set to: 1
 54219                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 54220                           
 54221                           ; BSR set to: 1
 54222  0144C4  0E00               	movlw	0
 54223  0144C6  6F6B               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 54224                           
 54225                           ; BSR set to: 1
 54226  0144C8  0012               	return	
 54227  0144CA                     __end_of_USBCtrlTrfOutHandler:
 54228                           	opt stack 0
 54229                           tosu	equ	0xFFF
 54230                           tosh	equ	0xFFE
 54231                           tosl	equ	0xFFD
 54232                           pclatu	equ	0xFFB
 54233                           pclath	equ	0xFFA
 54234                           tblptru	equ	0xFF8
 54235                           tblptrh	equ	0xFF7
 54236                           tblptrl	equ	0xFF6
 54237                           tablat	equ	0xFF5
 54238                           prodh	equ	0xFF4
 54239                           prodl	equ	0xFF3
 54240                           intcon	equ	0xFF2
 54241                           indf0	equ	0xFEF
 54242                           postinc0	equ	0xFEE
 54243                           fsr0h	equ	0xFEA
 54244                           fsr0l	equ	0xFE9
 54245                           wreg	equ	0xFE8
 54246                           indf1	equ	0xFE7
 54247                           postinc1	equ	0xFE6
 54248                           postdec1	equ	0xFE5
 54249                           plusw1	equ	0xFE3
 54250                           fsr1h	equ	0xFE2
 54251                           fsr1l	equ	0xFE1
 54252                           indf2	equ	0xFDF
 54253                           postinc2	equ	0xFDE
 54254                           postdec2	equ	0xFDD
 54255                           plusw2	equ	0xFDB
 54256                           fsr2h	equ	0xFDA
 54257                           fsr2l	equ	0xFD9
 54258                           status	equ	0xFD8
 54259                           
 54260 ;; *************** function _USBCtrlTrfRxService *****************
 54261 ;; Defined at:
 54262 ;;		line 1854 in file "usb_device.c"
 54263 ;; Parameters:    Size  Location     Type
 54264 ;;		None
 54265 ;; Auto vars:     Size  Location     Type
 54266 ;;  byteToRead      1    1[COMRAM] unsigned char 
 54267 ;;  i               1    0[COMRAM] unsigned char 
 54268 ;; Return value:  Size  Location     Type
 54269 ;;                  1    wreg      void 
 54270 ;; Registers used:
 54271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 54272 ;; Tracked objects:
 54273 ;;		On entry : 0/0
 54274 ;;		On exit  : 0/0
 54275 ;;		Unchanged: 0/0
 54276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54278 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54280 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54281 ;;Total ram usage:        2 bytes
 54282 ;; Hardware stack levels used:    1
 54283 ;; Hardware stack levels required when called:    1
 54284 ;; This function calls:
 54285 ;;		_USBCtrlEPAllowStatusStage
 54286 ;; This function is called by:
 54287 ;;		_USBCtrlTrfOutHandler
 54288 ;; This function uses a non-reentrant model
 54289 ;;
 54290                           
 54291                           	psect	text230
 54292  010DF6                     __ptext230:
 54293                           	opt stack 0
 54294  010DF6                     _USBCtrlTrfRxService:
 54295                           	opt stack 13
 54296                           
 54297                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 54298                           
 54299                           ;incstack = 0
 54300  010DF6  0101               	movlb	1	; () banked
 54301  010DF8  EE20 F001          	lfsr	2,1
 54302  010DFC  5151               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 54303  010DFE  26D9               	addwf	fsr2l,f,c
 54304  010E00  5152               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 54305  010E02  22DA               	addwfc	fsr2h,f,c
 54306  010E04  50DF               	movf	indf2,w,c
 54307  010E06  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 54308                           
 54309                           ; BSR set to: 1
 54310                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 54311  010E08  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 54312  010E0A  5D16               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 54313  010E0C  0E00               	movlw	0
 54314  010E0E  5917               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 54315  010E10  A0D8               	btfss	status,0,c
 54316                           
 54317                           ; BSR set to: 1
 54318                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 54319  010E12  C116  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 54320                           
 54321                           ; BSR set to: 1
 54322                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 54323                           
 54324                           ; BSR set to: 1
 54325  010E16  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 54326  010E18  5F16               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 54327  010E1A  0E00               	movlw	0
 54328  010E1C  5B17               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 54329                           
 54330                           ; BSR set to: 1
 54331                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 54332  010E1E  0E00               	movlw	0
 54333  010E20  6E01               	movwf	USBCtrlTrfRxService@i,c
 54334  010E22  D011               	goto	i2l260
 54335  010E24                     
 54336                           ; BSR set to: 1
 54337                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 54338                           
 54339                           ; BSR set to: 1
 54340  010E24  5001               	movf	USBCtrlTrfRxService@i,w,c
 54341  010E26  0D01               	mullw	1
 54342  010E28  0E38               	movlw	56
 54343  010E2A  24F3               	addwf	prodl,w,c
 54344  010E2C  6ED9               	movwf	fsr2l,c
 54345  010E2E  0E0D               	movlw	13
 54346  010E30  20F4               	addwfc	prodh,w,c
 54347  010E32  6EDA               	movwf	fsr2h,c
 54348  010E34  C112  FFE1         	movff	_outPipes,fsr1l	;volatile
 54349  010E38  C113  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 54350  010E3C  CFDF FFE7          	movff	indf2,indf1
 54351                           
 54352                           ; BSR set to: 1
 54353  010E40  4B12               	infsnz	_outPipes& (0+255),f,b	;volatile
 54354  010E42  2B13               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 54355                           
 54356                           ; BSR set to: 1
 54357  010E44  2A01               	incf	USBCtrlTrfRxService@i,f,c
 54358  010E46                     i2l260:
 54359                           
 54360                           ; BSR set to: 1
 54361                           
 54362                           ; BSR set to: 1
 54363  010E46  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 54364  010E48  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 54365  010E4A  A0D8               	btfss	status,0,c
 54366  010E4C  D7EB               	goto	i2l261
 54367                           
 54368                           ; BSR set to: 1
 54369                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 54370                           
 54371                           ; BSR set to: 1
 54372  010E4E  5116               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 54373  010E50  1117               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 54374  010E52  B4D8               	btfsc	status,2,c
 54375  010E54  D032               	goto	i2l263
 54376                           
 54377                           ; BSR set to: 1
 54378                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 54379  010E56  EE20 F001          	lfsr	2,1
 54380  010E5A  505C               	movf	_pBDTEntryEP0OutNext,w,c
 54381  010E5C  26D9               	addwf	fsr2l,f,c
 54382  010E5E  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 54383  010E60  22DA               	addwfc	fsr2h,f,c
 54384  010E62  0E08               	movlw	8
 54385  010E64  6EDF               	movwf	indf2,c
 54386                           
 54387                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 54388  010E66  EE20 F002          	lfsr	2,2
 54389  010E6A  505C               	movf	_pBDTEntryEP0OutNext,w,c
 54390  010E6C  26D9               	addwf	fsr2l,f,c
 54391  010E6E  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 54392  010E70  22DA               	addwfc	fsr2h,f,c
 54393  010E72  0E38               	movlw	56
 54394  010E74  6EDE               	movwf	postinc2,c
 54395  010E76  0E0D               	movlw	13
 54396  010E78  6EDD               	movwf	postdec2,c
 54397                           
 54398                           ; BSR set to: 1
 54399                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 54400  010E7A  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 54401  010E7E  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 54402  010E82  BCDF               	btfsc	indf2,6,c
 54403  010E84  D00D               	goto	i2l264
 54404                           
 54405                           ; BSR set to: 1
 54406                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 54407  010E86  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 54408  010E8A  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 54409  010E8E  0E48               	movlw	72
 54410  010E90  6EDF               	movwf	indf2,c
 54411                           
 54412                           ; BSR set to: 1
 54413                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 54414  010E92  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 54415  010E96  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 54416  010E9A  0E00               	movlw	0
 54417  010E9C  8EDB               	bsf	plusw2,7,c
 54418                           
 54419                           ;usb_device.c: 1891: }
 54420  010E9E  0012               	return	
 54421  010EA0                     i2l264:
 54422                           
 54423                           ; BSR set to: 1
 54424                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 54425                           
 54426                           ; BSR set to: 1
 54427  010EA0  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 54428  010EA4  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 54429  010EA8  0E08               	movlw	8
 54430  010EAA  6EDF               	movwf	indf2,c
 54431                           
 54432                           ; BSR set to: 1
 54433                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 54434  010EAC  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 54435  010EB0  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 54436  010EB4  0E00               	movlw	0
 54437  010EB6  8EDB               	bsf	plusw2,7,c
 54438                           
 54439                           ; BSR set to: 1
 54440                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 54441  010EB8  0012               	return	
 54442  010EBA                     i2l263:
 54443                           
 54444                           ; BSR set to: 1
 54445                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 54446                           
 54447                           ; BSR set to: 1
 54448  010EBA  EE20 F001          	lfsr	2,1
 54449  010EBE  505C               	movf	_pBDTEntryEP0OutNext,w,c
 54450  010EC0  26D9               	addwf	fsr2l,f,c
 54451  010EC2  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 54452  010EC4  22DA               	addwfc	fsr2h,f,c
 54453  010EC6  0E08               	movlw	8
 54454  010EC8  6EDF               	movwf	indf2,c
 54455                           
 54456                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 54457  010ECA  EE20 F002          	lfsr	2,2
 54458  010ECE  505C               	movf	_pBDTEntryEP0OutNext,w,c
 54459  010ED0  26D9               	addwf	fsr2l,f,c
 54460  010ED2  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 54461  010ED4  22DA               	addwfc	fsr2h,f,c
 54462  010ED6  0E30               	movlw	48
 54463  010ED8  6EDE               	movwf	postinc2,c
 54464  010EDA  0E0D               	movlw	13
 54465  010EDC  6EDD               	movwf	postdec2,c
 54466                           
 54467                           ; BSR set to: 1
 54468                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 54469  010EDE  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 54470  010EE2  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 54471  010EE6  0E04               	movlw	4
 54472  010EE8  6EDF               	movwf	indf2,c
 54473                           
 54474                           ; BSR set to: 1
 54475                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 54476  010EEA  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 54477  010EEE  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 54478  010EF2  0E00               	movlw	0
 54479  010EF4  8EDB               	bsf	plusw2,7,c
 54480                           
 54481                           ; BSR set to: 1
 54482                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 54483                           
 54484                           ; BSR set to: 1
 54485                           ;usb_device.c: 1917: {;usb_device.c: 1923: outPipes[0].pFunc();
 54486  010EF6  9F15               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 54487                           
 54488                           ; BSR set to: 1
 54489                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 54490  010EF8  5169               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 54491  010EFA  A4D8               	btfss	status,2,c
 54492  010EFC  0012               	return	
 54493                           
 54494                           ; BSR set to: 1
 54495                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 54496  010EFE  EC4A  F094         	call	_USBCtrlEPAllowStatusStage	;wreg free
 54497  010F02  0012               	return	
 54498  010F04                     __end_of_USBCtrlTrfRxService:
 54499                           	opt stack 0
 54500                           tosu	equ	0xFFF
 54501                           tosh	equ	0xFFE
 54502                           tosl	equ	0xFFD
 54503                           pclatu	equ	0xFFB
 54504                           pclath	equ	0xFFA
 54505                           tblptru	equ	0xFF8
 54506                           tblptrh	equ	0xFF7
 54507                           tblptrl	equ	0xFF6
 54508                           tablat	equ	0xFF5
 54509                           prodh	equ	0xFF4
 54510                           prodl	equ	0xFF3
 54511                           intcon	equ	0xFF2
 54512                           indf0	equ	0xFEF
 54513                           postinc0	equ	0xFEE
 54514                           fsr0h	equ	0xFEA
 54515                           fsr0l	equ	0xFE9
 54516                           wreg	equ	0xFE8
 54517                           indf1	equ	0xFE7
 54518                           postinc1	equ	0xFE6
 54519                           postdec1	equ	0xFE5
 54520                           plusw1	equ	0xFE3
 54521                           fsr1h	equ	0xFE2
 54522                           fsr1l	equ	0xFE1
 54523                           indf2	equ	0xFDF
 54524                           postinc2	equ	0xFDE
 54525                           postdec2	equ	0xFDD
 54526                           plusw2	equ	0xFDB
 54527                           fsr2h	equ	0xFDA
 54528                           fsr2l	equ	0xFD9
 54529                           status	equ	0xFD8
 54530                           
 54531 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 54532 ;; Defined at:
 54533 ;;		line 1418 in file "usb_device.c"
 54534 ;; Parameters:    Size  Location     Type
 54535 ;;		None
 54536 ;; Auto vars:     Size  Location     Type
 54537 ;;		None
 54538 ;; Return value:  Size  Location     Type
 54539 ;;                  1    wreg      void 
 54540 ;; Registers used:
 54541 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 54542 ;; Tracked objects:
 54543 ;;		On entry : 0/0
 54544 ;;		On exit  : 0/0
 54545 ;;		Unchanged: 0/0
 54546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54551 ;;Total ram usage:        0 bytes
 54552 ;; Hardware stack levels used:    1
 54553 ;; This function calls:
 54554 ;;		Nothing
 54555 ;; This function is called by:
 54556 ;;		_USBDeviceTasks
 54557 ;;		_USBCtrlEPServiceComplete
 54558 ;;		_USBCtrlTrfRxService
 54559 ;; This function uses a non-reentrant model
 54560 ;;
 54561                           
 54562                           	psect	text231
 54563  012894                     __ptext231:
 54564                           	opt stack 0
 54565  012894                     _USBCtrlEPAllowStatusStage:
 54566                           	opt stack 13
 54567                           
 54568                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 54569                           
 54570                           ;incstack = 0
 54571  012894  0101               	movlb	1	; () banked
 54572  012896  5168               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 54573  012898  A4D8               	btfss	status,2,c
 54574  01289A  0012               	return	
 54575                           
 54576                           ; BSR set to: 1
 54577                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 54578  01289C  0E01               	movlw	1
 54579  01289E  6F68               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 54580                           
 54581                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 54582  0128A0  5167               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 54583  0128A2  A4D8               	btfss	status,2,c
 54584  0128A4  0012               	return	
 54585                           
 54586                           ; BSR set to: 1
 54587                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 54588  0128A6  0E01               	movlw	1
 54589  0128A8  6F67               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 54590                           
 54591                           ; BSR set to: 1
 54592                           ;usb_device.c: 1434: if(controlTransferState == 2)
 54593  0128AA  0E02               	movlw	2
 54594  0128AC  196F               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 54595  0128AE  A4D8               	btfss	status,2,c
 54596  0128B0  D015               	goto	i2l214
 54597                           
 54598                           ; BSR set to: 1
 54599                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 54600  0128B2  EE20 F001          	lfsr	2,1
 54601  0128B6  511B               	movf	_pBDTEntryIn& (0+255),w,b
 54602  0128B8  26D9               	addwf	fsr2l,f,c
 54603  0128BA  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 54604  0128BC  22DA               	addwfc	fsr2h,f,c
 54605  0128BE  0E00               	movlw	0
 54606  0128C0  6EDF               	movwf	indf2,c
 54607                           
 54608                           ; BSR set to: 1
 54609                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 54610  0128C2  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54611  0128C6  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54612  0128CA  0E48               	movlw	72
 54613  0128CC  6EDF               	movwf	indf2,c
 54614                           
 54615                           ; BSR set to: 1
 54616                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 54617  0128CE  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54618  0128D2  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54619  0128D6  0E00               	movlw	0
 54620  0128D8  8EDB               	bsf	plusw2,7,c
 54621                           
 54622                           ;usb_device.c: 1439: }
 54623  0128DA  0012               	return	
 54624  0128DC                     i2l214:
 54625                           
 54626                           ; BSR set to: 1
 54627                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 54628                           
 54629                           ; BSR set to: 1
 54630  0128DC  056F               	decf	_controlTransferState& (0+255),w,b	;volatile
 54631  0128DE  A4D8               	btfss	status,2,c
 54632  0128E0  0012               	return	
 54633                           
 54634                           ; BSR set to: 1
 54635                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 54636  0128E2  0E00               	movlw	0
 54637  0128E4  6F6B               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 54638                           
 54639                           ; BSR set to: 1
 54640                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 54641  0128E6  EE20 F001          	lfsr	2,1
 54642  0128EA  5151               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 54643  0128EC  26D9               	addwf	fsr2l,f,c
 54644  0128EE  5152               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 54645  0128F0  22DA               	addwfc	fsr2h,f,c
 54646  0128F2  0E08               	movlw	8
 54647  0128F4  6EDF               	movwf	indf2,c
 54648                           
 54649                           ; BSR set to: 1
 54650                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 54651  0128F6  EE20 F002          	lfsr	2,2
 54652  0128FA  5151               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 54653  0128FC  26D9               	addwf	fsr2l,f,c
 54654  0128FE  5152               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 54655  012900  22DA               	addwfc	fsr2h,f,c
 54656  012902  0E30               	movlw	48
 54657  012904  6EDE               	movwf	postinc2,c
 54658  012906  0E0D               	movlw	13
 54659  012908  6EDD               	movwf	postdec2,c
 54660                           
 54661                           ; BSR set to: 1
 54662                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 54663  01290A  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 54664  01290E  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 54665  012912  0E04               	movlw	4
 54666  012914  6EDF               	movwf	indf2,c
 54667                           
 54668                           ; BSR set to: 1
 54669                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 54670  012916  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 54671  01291A  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 54672  01291E  0E00               	movlw	0
 54673  012920  8EDB               	bsf	plusw2,7,c
 54674                           
 54675                           ; BSR set to: 1
 54676                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 54677  012922  0E01               	movlw	1
 54678  012924  6F6B               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 54679                           
 54680                           ; BSR set to: 1
 54681                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 54682  012926  EE20 F001          	lfsr	2,1
 54683  01292A  505C               	movf	_pBDTEntryEP0OutNext,w,c
 54684  01292C  26D9               	addwf	fsr2l,f,c
 54685  01292E  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 54686  012930  22DA               	addwfc	fsr2h,f,c
 54687  012932  0E08               	movlw	8
 54688  012934  6EDF               	movwf	indf2,c
 54689                           
 54690                           ; BSR set to: 1
 54691                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 54692  012936  EE20 F002          	lfsr	2,2
 54693  01293A  505C               	movf	_pBDTEntryEP0OutNext,w,c
 54694  01293C  26D9               	addwf	fsr2l,f,c
 54695  01293E  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 54696  012940  22DA               	addwfc	fsr2h,f,c
 54697  012942  0E30               	movlw	48
 54698  012944  6EDE               	movwf	postinc2,c
 54699  012946  0E0D               	movlw	13
 54700  012948  6EDD               	movwf	postdec2,c
 54701                           
 54702                           ; BSR set to: 1
 54703                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 54704  01294A  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 54705  01294E  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 54706  012952  0E80               	movlw	128
 54707  012954  6EDF               	movwf	indf2,c
 54708                           
 54709                           ; BSR set to: 1
 54710                           
 54711                           ; BSR set to: 1
 54712                           
 54713                           ; BSR set to: 1
 54714  012956  0012               	return	
 54715  012958                     __end_of_USBCtrlEPAllowStatusStage:
 54716                           	opt stack 0
 54717                           tosu	equ	0xFFF
 54718                           tosh	equ	0xFFE
 54719                           tosl	equ	0xFFD
 54720                           pclatu	equ	0xFFB
 54721                           pclath	equ	0xFFA
 54722                           tblptru	equ	0xFF8
 54723                           tblptrh	equ	0xFF7
 54724                           tblptrl	equ	0xFF6
 54725                           tablat	equ	0xFF5
 54726                           prodh	equ	0xFF4
 54727                           prodl	equ	0xFF3
 54728                           intcon	equ	0xFF2
 54729                           indf0	equ	0xFEF
 54730                           postinc0	equ	0xFEE
 54731                           fsr0h	equ	0xFEA
 54732                           fsr0l	equ	0xFE9
 54733                           wreg	equ	0xFE8
 54734                           indf1	equ	0xFE7
 54735                           postinc1	equ	0xFE6
 54736                           postdec1	equ	0xFE5
 54737                           plusw1	equ	0xFE3
 54738                           fsr1h	equ	0xFE2
 54739                           fsr1l	equ	0xFE1
 54740                           indf2	equ	0xFDF
 54741                           postinc2	equ	0xFDE
 54742                           postdec2	equ	0xFDD
 54743                           plusw2	equ	0xFDB
 54744                           fsr2h	equ	0xFDA
 54745                           fsr2l	equ	0xFD9
 54746                           status	equ	0xFD8
 54747                           
 54748 ;; *************** function _USBCtrlTrfInHandler *****************
 54749 ;; Defined at:
 54750 ;;		line 2594 in file "usb_device.c"
 54751 ;; Parameters:    Size  Location     Type
 54752 ;;		None
 54753 ;; Auto vars:     Size  Location     Type
 54754 ;;  lastDTS         1    1[COMRAM] unsigned char 
 54755 ;; Return value:  Size  Location     Type
 54756 ;;                  1    wreg      void 
 54757 ;; Registers used:
 54758 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 54759 ;; Tracked objects:
 54760 ;;		On entry : 0/0
 54761 ;;		On exit  : 0/0
 54762 ;;		Unchanged: 0/0
 54763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54765 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54767 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54768 ;;Total ram usage:        1 bytes
 54769 ;; Hardware stack levels used:    1
 54770 ;; Hardware stack levels required when called:    1
 54771 ;; This function calls:
 54772 ;;		_USBCtrlTrfTxService
 54773 ;; This function is called by:
 54774 ;;		_USBCtrlEPService
 54775 ;; This function uses a non-reentrant model
 54776 ;;
 54777                           
 54778                           	psect	text232
 54779  012958                     __ptext232:
 54780                           	opt stack 0
 54781  012958                     _USBCtrlTrfInHandler:
 54782                           	opt stack 14
 54783                           
 54784                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 54785                           
 54786                           ; BSR set to: 1
 54787                           ;incstack = 0
 54788  012958  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54789  01295C  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54790  012960  0101               	movlb	1	; () banked
 54791  012962  0E00               	movlw	0
 54792  012964  BCDF               	btfsc	indf2,6,c
 54793  012966  0E01               	movlw	1
 54794  012968  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 54795                           
 54796                           ; BSR set to: 1
 54797                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 54798  01296A  0E04               	movlw	4
 54799  01296C  191B               	xorwf	_pBDTEntryIn& (0+255),w,b
 54800  01296E  6F1B               	movwf	_pBDTEntryIn& (0+255),b
 54801  012970  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 54802  012972  6F1C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 54803                           
 54804                           ; BSR set to: 1
 54805                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 54806  012974  0E08               	movlw	8
 54807  012976  185E               	xorwf	_USBDeviceState,w,c	;volatile
 54808  012978  A4D8               	btfss	status,2,c
 54809  01297A  D00C               	goto	i2l341
 54810                           
 54811                           ; BSR set to: 1
 54812                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 54813  01297C  010D               	movlb	13	; () banked
 54814  01297E  5132               	movf	50,w,b	;volatile
 54815  012980  0B7F               	andlw	127
 54816  012982  010F               	movlb	15	; () banked
 54817  012984  6F38               	movwf	56,b	;volatile
 54818                           
 54819                           ; BSR set to: 15
 54820                           ;usb_device.c: 2609: if(UADDR != 0u)
 54821  012986  5138               	movf	56,w,b	;volatile
 54822  012988  B4D8               	btfsc	status,2,c
 54823  01298A  D002               	goto	i2l340
 54824                           
 54825                           ; BSR set to: 15
 54826                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 54827  01298C  0E10               	movlw	16
 54828  01298E  D001               	goto	L88
 54829  012990                     i2l340:
 54830                           
 54831                           ; BSR set to: 15
 54832                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 54833                           
 54834                           ; BSR set to: 15
 54835  012990  0E04               	movlw	4
 54836  012992                     L88:
 54837  012992  6E5E               	movwf	_USBDeviceState,c	;volatile
 54838  012994                     i2l341:
 54839                           
 54840                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 54841                           
 54842                           ; BSR set to: 15
 54843                           
 54844                           ; BSR set to: 15
 54845  012994  0101               	movlb	1	; () banked
 54846  012996  056F               	decf	_controlTransferState& (0+255),w,b	;volatile
 54847  012998  A4D8               	btfss	status,2,c
 54848  01299A  D03B               	goto	i2l342
 54849                           
 54850                           ; BSR set to: 1
 54851                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 54852  01299C  EE20 F002          	lfsr	2,2
 54853  0129A0  511B               	movf	_pBDTEntryIn& (0+255),w,b
 54854  0129A2  26D9               	addwf	fsr2l,f,c
 54855  0129A4  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 54856  0129A6  22DA               	addwfc	fsr2h,f,c
 54857  0129A8  0E38               	movlw	56
 54858  0129AA  6EDE               	movwf	postinc2,c
 54859  0129AC  0E0D               	movlw	13
 54860  0129AE  6EDD               	movwf	postdec2,c
 54861                           
 54862                           ; BSR set to: 1
 54863                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 54864  0129B0  ECAB  F092         	call	_USBCtrlTrfTxService	;wreg free
 54865                           
 54866                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 54867  0129B4  0E02               	movlw	2
 54868  0129B6  0101               	movlb	1	; () banked
 54869  0129B8  1970               	xorwf	_shortPacketStatus& (0+255),w,b	;volatile
 54870  0129BA  A4D8               	btfss	status,2,c
 54871  0129BC  D00D               	goto	i2l343
 54872                           
 54873                           ; BSR set to: 1
 54874                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 54875  0129BE  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54876  0129C2  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54877  0129C6  0E04               	movlw	4
 54878  0129C8  6EDF               	movwf	indf2,c
 54879                           
 54880                           ; BSR set to: 1
 54881                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 54882  0129CA  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54883  0129CE  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54884  0129D2  0E00               	movlw	0
 54885  0129D4  8EDB               	bsf	plusw2,7,c
 54886                           
 54887                           ;usb_device.c: 2635: }
 54888  0129D6  0012               	return	
 54889  0129D8                     i2l343:
 54890                           
 54891                           ; BSR set to: 1
 54892                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 54893                           
 54894                           ; BSR set to: 1
 54895  0129D8  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 54896  0129DA  A4D8               	btfss	status,2,c
 54897  0129DC  D00D               	goto	i2l345
 54898                           
 54899                           ; BSR set to: 1
 54900                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 54901  0129DE  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54902  0129E2  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54903  0129E6  0E48               	movlw	72
 54904  0129E8  6EDF               	movwf	indf2,c
 54905                           
 54906                           ; BSR set to: 1
 54907                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 54908  0129EA  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54909  0129EE  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54910  0129F2  0E00               	movlw	0
 54911  0129F4  8EDB               	bsf	plusw2,7,c
 54912                           
 54913                           ;usb_device.c: 2642: }
 54914  0129F6  0012               	return	
 54915  0129F8                     i2l345:
 54916                           
 54917                           ; BSR set to: 1
 54918                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 54919                           
 54920                           ; BSR set to: 1
 54921  0129F8  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54922  0129FC  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54923  012A00  0E08               	movlw	8
 54924  012A02  6EDF               	movwf	indf2,c
 54925                           
 54926                           ; BSR set to: 1
 54927                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 54928  012A04  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54929  012A08  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54930  012A0C  0E00               	movlw	0
 54931  012A0E  8EDB               	bsf	plusw2,7,c
 54932                           
 54933                           ; BSR set to: 1
 54934                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 54935                           
 54936                           ; BSR set to: 1
 54937  012A10  0012               	return	
 54938  012A12                     i2l342:
 54939                           
 54940                           ; BSR set to: 1
 54941                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 54942  012A12  BF15               	btfsc	(_outPipes+3)& (0+255),7,b	;volatile
 54943                           
 54944                           ; BSR set to: 1
 54945                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 54946                           
 54947                           ; BSR set to: 1
 54948                           ;usb_device.c: 2658: {;usb_device.c: 2659: outPipes[0].pFunc();
 54949  012A14  9F15               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 54950                           
 54951                           ; BSR set to: 1
 54952                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 54953                           
 54954                           ; BSR set to: 1
 54955  012A16  0E00               	movlw	0
 54956  012A18  6F6F               	movwf	_controlTransferState& (0+255),b	;volatile
 54957  012A1A  0012               	return	
 54958  012A1C                     __end_of_USBCtrlTrfInHandler:
 54959                           	opt stack 0
 54960                           tosu	equ	0xFFF
 54961                           tosh	equ	0xFFE
 54962                           tosl	equ	0xFFD
 54963                           pclatu	equ	0xFFB
 54964                           pclath	equ	0xFFA
 54965                           tblptru	equ	0xFF8
 54966                           tblptrh	equ	0xFF7
 54967                           tblptrl	equ	0xFF6
 54968                           tablat	equ	0xFF5
 54969                           prodh	equ	0xFF4
 54970                           prodl	equ	0xFF3
 54971                           intcon	equ	0xFF2
 54972                           indf0	equ	0xFEF
 54973                           postinc0	equ	0xFEE
 54974                           fsr0h	equ	0xFEA
 54975                           fsr0l	equ	0xFE9
 54976                           wreg	equ	0xFE8
 54977                           indf1	equ	0xFE7
 54978                           postinc1	equ	0xFE6
 54979                           postdec1	equ	0xFE5
 54980                           plusw1	equ	0xFE3
 54981                           fsr1h	equ	0xFE2
 54982                           fsr1l	equ	0xFE1
 54983                           indf2	equ	0xFDF
 54984                           postinc2	equ	0xFDE
 54985                           postdec2	equ	0xFDD
 54986                           plusw2	equ	0xFDB
 54987                           fsr2h	equ	0xFDA
 54988                           fsr2l	equ	0xFD9
 54989                           status	equ	0xFD8
 54990                           
 54991 ;; *************** function _USBCtrlTrfTxService *****************
 54992 ;; Defined at:
 54993 ;;		line 1773 in file "usb_device.c"
 54994 ;; Parameters:    Size  Location     Type
 54995 ;;		None
 54996 ;; Auto vars:     Size  Location     Type
 54997 ;;  byteToSend      1    0[COMRAM] unsigned char 
 54998 ;; Return value:  Size  Location     Type
 54999 ;;                  1    wreg      void 
 55000 ;; Registers used:
 55001 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 55002 ;; Tracked objects:
 55003 ;;		On entry : 0/0
 55004 ;;		On exit  : 0/0
 55005 ;;		Unchanged: 0/0
 55006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55008 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55010 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55011 ;;Total ram usage:        1 bytes
 55012 ;; Hardware stack levels used:    1
 55013 ;; This function calls:
 55014 ;;		Nothing
 55015 ;; This function is called by:
 55016 ;;		_USBCtrlEPAllowDataStage
 55017 ;;		_USBCtrlTrfInHandler
 55018 ;; This function uses a non-reentrant model
 55019 ;;
 55020                           
 55021                           	psect	text233
 55022  012556                     __ptext233:
 55023                           	opt stack 0
 55024  012556                     _USBCtrlTrfTxService:
 55025                           	opt stack 12
 55026                           
 55027                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 55028                           
 55029                           ; BSR set to: 1
 55030                           ;incstack = 0
 55031  012556  0E08               	movlw	8
 55032  012558  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 55033                           
 55034                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 55035  01255A  5057               	movf	_inPipes+5,w,c	;volatile
 55036  01255C  E111               	bnz	i2l12791
 55037  01255E  0E08               	movlw	8
 55038  012560  5C56               	subwf	_inPipes+4,w,c	;volatile
 55039  012562  B0D8               	btfsc	status,0,c
 55040  012564  D00D               	goto	i2l247
 55041                           
 55042                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 55043  012566  C056  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 55044                           
 55045                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 55046  01256A  0101               	movlb	1	; () banked
 55047  01256C  5170               	movf	_shortPacketStatus& (0+255),w,b	;volatile
 55048  01256E  A4D8               	btfss	status,2,c
 55049  012570  D002               	goto	i2l245
 55050                           
 55051                           ; BSR set to: 1
 55052                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 55053  012572  0E01               	movlw	1
 55054  012574  D004               	goto	L89
 55055  012576                     i2l245:
 55056                           
 55057                           ; BSR set to: 1
 55058                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 55059                           
 55060                           ; BSR set to: 1
 55061  012576  0570               	decf	_shortPacketStatus& (0+255),w,b	;volatile
 55062  012578  A4D8               	btfss	status,2,c
 55063  01257A  D002               	goto	i2l247
 55064                           
 55065                           ; BSR set to: 1
 55066                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 55067  01257C  0E02               	movlw	2
 55068  01257E                     L89:
 55069  01257E  6F70               	movwf	_shortPacketStatus& (0+255),b	;volatile
 55070  012580                     i2l247:
 55071  012580                     i2l12791:
 55072                           
 55073                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 55074  012580  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 55075  012582  5E56               	subwf	_inPipes+4,f,c	;volatile
 55076  012584  0E00               	movlw	0
 55077  012586  5A57               	subwfb	_inPipes+5,f,c	;volatile
 55078                           
 55079                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 55080  012588  0101               	movlb	1	; () banked
 55081  01258A  EE20 F001          	lfsr	2,1
 55082  01258E  511B               	movf	_pBDTEntryIn& (0+255),w,b
 55083  012590  26D9               	addwf	fsr2l,f,c
 55084  012592  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 55085  012594  22DA               	addwfc	fsr2h,f,c
 55086  012596  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 55087                           
 55088                           ; BSR set to: 1
 55089                           ;usb_device.c: 1810: pDst = (volatile uint8_t*)CtrlTrfData;
 55090  01259A  0E38               	movlw	56
 55091  01259C  6F4F               	movwf	_pDst& (0+255),b
 55092  01259E  0E0D               	movlw	13
 55093  0125A0  6F50               	movwf	(_pDst+1)& (0+255),b
 55094                           
 55095                           ; BSR set to: 1
 55096                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 55097  0125A2  A055               	btfss	_inPipes+3,0,c	;volatile
 55098  0125A4  D01D               	goto	i2l249
 55099  0125A6  D03C               	goto	i2l253
 55100  0125A8                     
 55101                           ; BSR set to: 1
 55102                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 55103                           
 55104                           ; BSR set to: 1
 55105  0125A8  C052  FFF6         	movff	_inPipes,tblptrl	;volatile
 55106  0125AC  C053  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 55107  0125B0  0E00               	movlw	low (__mediumconst shr (0+16))
 55108  0125B2  6EF8               	movwf	tblptru,c
 55109  0125B4  C14F  FFD9         	movff	_pDst,fsr2l
 55110  0125B8  C150  FFDA         	movff	_pDst+1,fsr2h
 55111  0125BC  0E0E               	movlw	(high __ramtop+-1)
 55112  0125BE  64F7               	cpfsgt	tblptrh,c
 55113  0125C0  D003               	bra	i2u1111_47
 55114  0125C2  0008               	tblrd		*
 55115  0125C4  50F5               	movf	tablat,w,c
 55116  0125C6  D005               	bra	i2u1111_40
 55117  0125C8                     i2u1111_47:
 55118  0125C8  CFF6 FFE9          	movff	tblptrl,fsr0l
 55119  0125CC  CFF7 FFEA          	movff	tblptrh,fsr0h
 55120  0125D0  50EF               	movf	indf0,w,c
 55121  0125D2                     i2u1111_40:
 55122  0125D2  6EDF               	movwf	indf2,c
 55123  0125D4  4A52               	infsnz	_inPipes,f,c	;volatile
 55124  0125D6  2A53               	incf	_inPipes+1,f,c	;volatile
 55125  0125D8  0101               	movlb	1	; () banked
 55126  0125DA  4B4F               	infsnz	_pDst& (0+255),f,b
 55127  0125DC  2B50               	incf	(_pDst+1)& (0+255),f,b
 55128                           
 55129                           ; BSR set to: 1
 55130                           ;usb_device.c: 1816: byteToSend--;
 55131  0125DE  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 55132  0125E0                     i2l249:
 55133                           
 55134                           ; BSR set to: 1
 55135                           
 55136                           ; BSR set to: 1
 55137  0125E0  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 55138  0125E2  B4D8               	btfsc	status,2,c
 55139  0125E4  0012               	return	
 55140  0125E6  D7E0               	goto	i2l250
 55141  0125E8                     
 55142                           ; BSR set to: 1
 55143                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 55144                           
 55145                           ; BSR set to: 1
 55146  0125E8  C052  FFF6         	movff	_inPipes,tblptrl	;volatile
 55147  0125EC  C053  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 55148  0125F0  0E00               	movlw	low (__mediumconst shr (0+16))
 55149  0125F2  6EF8               	movwf	tblptru,c
 55150  0125F4  C14F  FFD9         	movff	_pDst,fsr2l
 55151  0125F8  C150  FFDA         	movff	_pDst+1,fsr2h
 55152  0125FC  0E0E               	movlw	(high __ramtop+-1)
 55153  0125FE  64F7               	cpfsgt	tblptrh,c
 55154  012600  D003               	bra	i2u1113_47
 55155  012602  0008               	tblrd		*
 55156  012604  50F5               	movf	tablat,w,c
 55157  012606  D005               	bra	i2u1113_40
 55158  012608                     i2u1113_47:
 55159  012608  CFF6 FFE9          	movff	tblptrl,fsr0l
 55160  01260C  CFF7 FFEA          	movff	tblptrh,fsr0h
 55161  012610  50EF               	movf	indf0,w,c
 55162  012612                     i2u1113_40:
 55163  012612  6EDF               	movwf	indf2,c
 55164  012614  4A52               	infsnz	_inPipes,f,c	;volatile
 55165  012616  2A53               	incf	_inPipes+1,f,c	;volatile
 55166  012618  0101               	movlb	1	; () banked
 55167  01261A  4B4F               	infsnz	_pDst& (0+255),f,b
 55168  01261C  2B50               	incf	(_pDst+1)& (0+255),f,b
 55169                           
 55170                           ; BSR set to: 1
 55171                           ;usb_device.c: 1824: byteToSend--;
 55172  01261E  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 55173  012620                     i2l253:
 55174                           
 55175                           ; BSR set to: 1
 55176                           
 55177                           ; BSR set to: 1
 55178  012620  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 55179  012622  B4D8               	btfsc	status,2,c
 55180  012624  0012               	return	
 55181  012626  D7E0               	goto	i2l254
 55182  012628                     __end_of_USBCtrlTrfTxService:
 55183                           	opt stack 0
 55184                           tosu	equ	0xFFF
 55185                           tosh	equ	0xFFE
 55186                           tosl	equ	0xFFD
 55187                           pclatu	equ	0xFFB
 55188                           pclath	equ	0xFFA
 55189                           tblptru	equ	0xFF8
 55190                           tblptrh	equ	0xFF7
 55191                           tblptrl	equ	0xFF6
 55192                           tablat	equ	0xFF5
 55193                           prodh	equ	0xFF4
 55194                           prodl	equ	0xFF3
 55195                           intcon	equ	0xFF2
 55196                           indf0	equ	0xFEF
 55197                           postinc0	equ	0xFEE
 55198                           fsr0h	equ	0xFEA
 55199                           fsr0l	equ	0xFE9
 55200                           wreg	equ	0xFE8
 55201                           indf1	equ	0xFE7
 55202                           postinc1	equ	0xFE6
 55203                           postdec1	equ	0xFE5
 55204                           plusw1	equ	0xFE3
 55205                           fsr1h	equ	0xFE2
 55206                           fsr1l	equ	0xFE1
 55207                           indf2	equ	0xFDF
 55208                           postinc2	equ	0xFDE
 55209                           postdec2	equ	0xFDD
 55210                           plusw2	equ	0xFDB
 55211                           fsr2h	equ	0xFDA
 55212                           fsr2l	equ	0xFD9
 55213                           status	equ	0xFD8
 55214                           tosu	equ	0xFFF
 55215                           tosh	equ	0xFFE
 55216                           tosl	equ	0xFFD
 55217                           pclatu	equ	0xFFB
 55218                           pclath	equ	0xFFA
 55219                           tblptru	equ	0xFF8
 55220                           tblptrh	equ	0xFF7
 55221                           tblptrl	equ	0xFF6
 55222                           tablat	equ	0xFF5
 55223                           prodh	equ	0xFF4
 55224                           prodl	equ	0xFF3
 55225                           intcon	equ	0xFF2
 55226                           indf0	equ	0xFEF
 55227                           postinc0	equ	0xFEE
 55228                           fsr0h	equ	0xFEA
 55229                           fsr0l	equ	0xFE9
 55230                           wreg	equ	0xFE8
 55231                           indf1	equ	0xFE7
 55232                           postinc1	equ	0xFE6
 55233                           postdec1	equ	0xFE5
 55234                           plusw1	equ	0xFE3
 55235                           fsr1h	equ	0xFE2
 55236                           fsr1l	equ	0xFE1
 55237                           indf2	equ	0xFDF
 55238                           postinc2	equ	0xFDE
 55239                           postdec2	equ	0xFDD
 55240                           plusw2	equ	0xFDB
 55241                           fsr2h	equ	0xFDA
 55242                           fsr2l	equ	0xFD9
 55243                           status	equ	0xFD8
 55244                           
 55245                           	psect	text234
 55246  000000                     __ptext234:
 55247                           	opt stack 0
 55248                           tosu	equ	0xFFF
 55249                           tosh	equ	0xFFE
 55250                           tosl	equ	0xFFD
 55251                           pclatu	equ	0xFFB
 55252                           pclath	equ	0xFFA
 55253                           tblptru	equ	0xFF8
 55254                           tblptrh	equ	0xFF7
 55255                           tblptrl	equ	0xFF6
 55256                           tablat	equ	0xFF5
 55257                           prodh	equ	0xFF4
 55258                           prodl	equ	0xFF3
 55259                           intcon	equ	0xFF2
 55260                           indf0	equ	0xFEF
 55261                           postinc0	equ	0xFEE
 55262                           fsr0h	equ	0xFEA
 55263                           fsr0l	equ	0xFE9
 55264                           wreg	equ	0xFE8
 55265                           indf1	equ	0xFE7
 55266                           postinc1	equ	0xFE6
 55267                           postdec1	equ	0xFE5
 55268                           plusw1	equ	0xFE3
 55269                           fsr1h	equ	0xFE2
 55270                           fsr1l	equ	0xFE1
 55271                           indf2	equ	0xFDF
 55272                           postinc2	equ	0xFDE
 55273                           postdec2	equ	0xFDD
 55274                           plusw2	equ	0xFDB
 55275                           fsr2h	equ	0xFDA
 55276                           fsr2l	equ	0xFD9
 55277                           status	equ	0xFD8
 55278                           
 55279                           	psect	rparam
 55280  0000                     tosu	equ	0xFFF
 55281                           tosh	equ	0xFFE
 55282                           tosl	equ	0xFFD
 55283                           pclatu	equ	0xFFB
 55284                           pclath	equ	0xFFA
 55285                           tblptru	equ	0xFF8
 55286                           tblptrh	equ	0xFF7
 55287                           tblptrl	equ	0xFF6
 55288                           tablat	equ	0xFF5
 55289                           prodh	equ	0xFF4
 55290                           prodl	equ	0xFF3
 55291                           intcon	equ	0xFF2
 55292                           indf0	equ	0xFEF
 55293                           postinc0	equ	0xFEE
 55294                           fsr0h	equ	0xFEA
 55295                           fsr0l	equ	0xFE9
 55296                           wreg	equ	0xFE8
 55297                           indf1	equ	0xFE7
 55298                           postinc1	equ	0xFE6
 55299                           postdec1	equ	0xFE5
 55300                           plusw1	equ	0xFE3
 55301                           fsr1h	equ	0xFE2
 55302                           fsr1l	equ	0xFE1
 55303                           indf2	equ	0xFDF
 55304                           postinc2	equ	0xFDE
 55305                           postdec2	equ	0xFDD
 55306                           plusw2	equ	0xFDB
 55307                           fsr2h	equ	0xFDA
 55308                           fsr2l	equ	0xFD9
 55309                           status	equ	0xFD8
 55310                           
 55311                           	psect	temp
 55312  00005F                     btemp:
 55313                           	opt stack 0
 55314  00005F                     	ds	1
 55315  0000                     int$flags	set	btemp
 55316  0000                     wtemp8	set	btemp+1
 55317  0000                     ttemp5	set	btemp+1
 55318  0000                     ttemp6	set	btemp+4
 55319  0000                     ttemp7	set	btemp+8
 55320                           tosu	equ	0xFFF
 55321                           tosh	equ	0xFFE
 55322                           tosl	equ	0xFFD
 55323                           pclatu	equ	0xFFB
 55324                           pclath	equ	0xFFA
 55325                           tblptru	equ	0xFF8
 55326                           tblptrh	equ	0xFF7
 55327                           tblptrl	equ	0xFF6
 55328                           tablat	equ	0xFF5
 55329                           prodh	equ	0xFF4
 55330                           prodl	equ	0xFF3
 55331                           intcon	equ	0xFF2
 55332                           indf0	equ	0xFEF
 55333                           postinc0	equ	0xFEE
 55334                           fsr0h	equ	0xFEA
 55335                           fsr0l	equ	0xFE9
 55336                           wreg	equ	0xFE8
 55337                           indf1	equ	0xFE7
 55338                           postinc1	equ	0xFE6
 55339                           postdec1	equ	0xFE5
 55340                           plusw1	equ	0xFE3
 55341                           fsr1h	equ	0xFE2
 55342                           fsr1l	equ	0xFE1
 55343                           indf2	equ	0xFDF
 55344                           postinc2	equ	0xFDE
 55345                           postdec2	equ	0xFDD
 55346                           plusw2	equ	0xFDB
 55347                           fsr2h	equ	0xFDA
 55348                           fsr2l	equ	0xFD9
 55349                           status	equ	0xFD8


Data Sizes:
    Strings     69
    Constant    4694
    Data        157
    BSS         1555
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     81      94
    BANK0           160    158     160
    BANK1           256     60     255
    BANK2           256      0     214
    BANK3           256      0     184
    BANK4           256      0      80
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2167$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2167$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 8
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), configFile_extention(BANK2[3]), configFile_name(BANK2[8]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    stricmp@s2	PTR const unsigned char  size(2) Largest target is 24
		 -> ccw_limit_string(CODE[10]), use_ccw_limit_string(CODE[14]), cw_limit_string(CODE[9]), use_cw_limit_string(CODE[13]), 
		 -> beep_duration_string(CODE[14]), maximum_speed_manual_string(CODE[21]), initial_speed_manual_string(CODE[21]), maximum_speed_arc_string(CODE[18]), 
		 -> initial_speed_arc_string(CODE[18]), maximum_speed_string(CODE[14]), minimum_speed_string(CODE[14]), overshoot_cost_in_steps_string(CODE[24]), 
		 -> inverse_direction_string(CODE[18]), overshoot_in_steps_string(CODE[19]), full_circle_in_steps_string(CODE[21]), 

    stricmp@s1	PTR const unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), ToSendDataBuffer(BANK3[64]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), ToSendDataBuffer(BANK3[64]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3759
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> STR_6(CODE[6]), STR_5(CODE[9]), STR_4(CODE[7]), STR_3(CODE[9]), 
		 -> dc_manual(CODE[80]), dc_zero(CODE[80]), STR_2(CODE[7]), STR_1(CODE[9]), 
		 -> dc_arc2(CODE[80]), dc_arc1(CODE[80]), os.current_position_in_degrees(BANK1[2]), dc_divide2(CODE[80]), 
		 -> dc_divide1(CODE[80]), dc_setup2(CODE[80]), dc_setup1(CODE[80]), dc_main(CODE[80]), 
		 -> dc_startup(BANK4[80]), os.current_position_in_steps(BANK1[4]), config(BANK1[28]), ReceivedDataBuffer(BANK3[64]), 
		 -> os(BANK1[48]), inq_resp(CODE[36]), RAM(DATA[3759]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3759
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> STR_6(CODE[6]), STR_5(CODE[9]), STR_4(CODE[7]), STR_3(CODE[9]), 
		 -> dc_manual(CODE[80]), dc_zero(CODE[80]), STR_2(CODE[7]), STR_1(CODE[9]), 
		 -> dc_arc2(CODE[80]), dc_arc1(CODE[80]), os.current_position_in_degrees(BANK1[2]), dc_divide2(CODE[80]), 
		 -> dc_divide1(CODE[80]), dc_setup2(CODE[80]), dc_setup1(CODE[80]), dc_main(CODE[80]), 
		 -> dc_startup(BANK4[80]), os.current_position_in_steps(BANK1[4]), config(BANK1[28]), ReceivedDataBuffer(BANK3[64]), 
		 -> os(BANK1[48]), inq_resp(CODE[36]), RAM(DATA[3759]), 

    ultoa@buf	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    ltoa@buf	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    ltoa@cp	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _parse_item@value_string	PTR unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _parse_item@item_string	PTR unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    _get_item@value_string	PTR unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _get_item@item_string	PTR unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    _get_item@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    _add_item@item_string	PTR unsigned char  size(2) Largest target is 24
		 -> ccw_limit_string(CODE[10]), use_ccw_limit_string(CODE[14]), cw_limit_string(CODE[9]), use_cw_limit_string(CODE[13]), 
		 -> beep_duration_string(CODE[14]), maximum_speed_manual_string(CODE[21]), initial_speed_manual_string(CODE[21]), maximum_speed_arc_string(CODE[18]), 
		 -> initial_speed_arc_string(CODE[18]), maximum_speed_string(CODE[14]), minimum_speed_string(CODE[14]), overshoot_cost_in_steps_string(CODE[24]), 
		 -> inverse_direction_string(CODE[18]), overshoot_in_steps_string(CODE[19]), full_circle_in_steps_string(CODE[21]), 

    _add_item@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    _parse_set_manual_speed@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_set_manual_speed@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_set_manual_speed@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _parse_jump_steps@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_jump_steps@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_jump_steps@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _parse_command_long@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_command_long@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_command_long@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _fill_buffer_get_mode_details@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _fill_buffer_get_display@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _fill_buffer_get_status@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_parse@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_parse@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    api_parse@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    api_prepare@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_prepare@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), buffer(BIGRAMll[512]), _flash_get_status@status(BANK0[2]), msd_buffer(BIGRAMll[512]), 

    spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_buffer_read@command(COMRAM[4]), _flash_partial_read@command(BANK0[4]), _flash_get_status@command(BANK0[1]), 

    spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(BANK0[4]), 

    spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(BANK0[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(BANK0[4]), 
		 -> _flash_copy_page_to_buffer@command(BANK0[4]), _flash_wakeup@command(BANK0[1]), _flash_set_page_size@command(BANK0[4]), 

    fat_get_file_information@data	PTR struct . size(2) Largest target is 32
		 -> fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), 

    fat_modify_file@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_read_from_file_fast@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_read_from_file_fast@cluster	PTR unsigned int  size(2) Largest target is 2
		 -> fat_read_from_file@cluster(BANK0[2]), 

    fat_read_from_file_fast@cluster_number	PTR unsigned int  size(2) Largest target is 2
		 -> fat_read_from_file@cluster_number(BANK0[2]), 

    fat_read_from_file@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_create_file@extension	PTR unsigned char  size(2) Largest target is 3
		 -> configFile_used_extention(BANK2[3]), 

    fat_create_file@name	PTR unsigned char  size(2) Largest target is 8
		 -> configFile_used_name(BANK2[8]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 3
		 -> configFile_used_extention(BANK2[3]), configFile_extention(BANK2[3]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 8
		 -> configFile_used_name(BANK2[8]), configFile_name(BANK2[8]), 

    _write_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 

    _write_value_to_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _read_value_from_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _get_available_offset_from_buffer@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    flash_partial_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), 

    flash_sector_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_sector_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _display_itoa_u16@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    _display_itoa_long@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    _display_itoa@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_prepare@temp(BANK0[10]), display_content(BANK2[80]), 

    _display_signed_itoa@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    _display_padded_itoa@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    i2c_display_program_custom_character@bit_pattern	PTR unsigned char  size(2) Largest target is 8
		 -> bit_pattern_ae(CODE[8]), bit_pattern_degree(CODE[8]), bit_pattern_verticalbar(CODE[8]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    i2c_eeprom_read@data	PTR unsigned char  size(2) Largest target is 4
		 -> i2c_eeprom_readUint32@data(BANK0[4]), i2c_eeprom_readUint16@data(COMRAM[2]), 

    i2c_eeprom_write@data	PTR unsigned char  size(2) Largest target is 4
		 -> i2c_eeprom_writeUint32@data(COMRAM[4]), i2c_eeprom_writeUint16@data(COMRAM[2]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 4
		 -> i2c_eeprom_readUint32@data(BANK0[4]), i2c_eeprom_readUint16@data(COMRAM[2]), i2c_eeprom_readByte@addr(COMRAM[1]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_display_program_custom_character@data_array(BANK0[11]), _ic2_display_set_cgram_address@data_array(BANK0[3]), _ic2_display_set_ddram_address@data_array(BANK0[2]), i2c_display_init@init_sequence(BANK0[9]), 
		 -> _i2c_display_send_init_sequence@init_sequence(COMRAM[9]), i2c_eeprom_read@addr(BANK0[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), 
		 -> i2c_eeprom_writeByte@dat(COMRAM[2]), i2c_adc_start@configuration_byte(COMRAM[1]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK1[1]), USBActiveConfiguration(BANK1[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2623	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK1[1]), USBActiveConfiguration(BANK1[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2589	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2588	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2535	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2534	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S2167$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    S2167$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2167$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2167$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S2167$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S2167$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S2167$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> i2_ExternalFlash_MediaDetect(), ExternalFlash_MediaDetect(), 

    S2167$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S2167$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S2167$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> i2_ExternalFlash_MediaInitialize(), ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), ToSendDataBuffer(BANK3[64]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK3[64]), ReceivedDataBuffer(BANK3[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S105$pFunc	PTR FTN()void  size(3) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0

    S95$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S71$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_motor_isr
    _motor_isr->_i2c_eeprom_writeUint32
    _i2c_eeprom_writeUint32->_i2c_eeprom_write
    _i2c_eeprom_write->i2__i2c_write
    i2__i2c_write->i2__i2c_wait_idle
    i2__i2c_eeprom_busy->i2__i2c_wait_idle
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->i2_USBTransferOnePacket
    _MSDTransferTerminated->i2_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->i2_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _i2c_eeprom_readUint32->_i2c_eeprom_read
    _i2c_eeprom_read->__i2c_read
    __i2c_read->__i2c_wait_idle
    __i2c_eeprom_busy->__i2c_wait_idle
    _flash_init->__flash_set_page_size
    _spi_init->__spi_init
    __flash_set_page_size->__flash_is_busy
    _fat_init->_fat_get_format_status
    _fat_get_format_status->_flash_sector_read
    _fat_format->_flash_sector_write
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_ddram_address
    __ic2_display_set_ddram_address->__i2c_write
    _display_init->_i2c_display_program_custom_character
    _i2c_display_program_custom_character->__ic2_display_set_cgram_address
    __ic2_display_set_cgram_address->__i2c_write
    _i2c_display_init->__i2c_write
    __i2c_write->__i2c_wait_idle
    __display_start->__display_itoa_u16
    __display_itoa_u16->_itoa
    _configFile_write->_fat_modify_file
    _fat_resize_file->__make_cluster_chain
    _fat_modify_file->__find_nth_cluster
    _fat_create_file->__make_cluster_chain
    __write_root->_flash_partial_write
    _flash_partial_write->__flash_compare_page_to_buffer
    __flash_copy_page_to_buffer->__flash_is_busy
    __make_cluster_chain->__get_available_cluster
    __get_available_cluster->_flash_sector_read
    __get_available_root_entry->__root_is_available
    __add_item->_ltoa
    _ltoa->_ultoa
    _ultoa->___lldiv
    _configFile_read->_fat_read_from_file
    _fat_read_from_file->_fat_read_from_file_fast
    _fat_read_from_file_fast->__find_nth_cluster
    __find_nth_cluster->__read_fat
    __read_fat->_flash_partial_read
    _fat_get_file_information->_flash_partial_read
    _fat_get_file_size->__root_is_available
    __root_is_available->_flash_partial_read
    _flash_partial_read->__flash_partial_read
    _fat_find_file->_flash_sector_read
    __parse_item->_atol
    _stricmp->_toupper
    _atol->___lmul
    _atoi->___wmul
    _motor_process_cue->__motor_run
    _encoder_statemachine->_motor_divide_jump_to_nearest
    _motor_nonzero_steps_from_degrees->_motor_steps_from_degrees
    _motor_increase_manual_speed->_motor_set_manual_speed
    _motor_divide_jump_to_nearest->_motor_go_to_steps_position
    _motor_divide_jump->_motor_go_to_steps_position
    __step_position_from_divide_position->___fldiv
    __step_position_from_divide_position->___flmul
    _motor_decrease_manual_speed->_motor_set_manual_speed
    _motor_arc_move->_motor_schedule_command
    _display_prepare->__display_itoa_long
    _motor_speed_from_index->__motor_get_speed_in_degrees
    __motor_get_speed_in_degrees->___fldiv
    __display_signed_itoa->__display_padded_itoa
    __display_padded_itoa->_itoa
    __display_itoa_long->__display_itoa
    __display_itoa->_motor_speed_from_index
    _itoa->_utoa
    _utoa->___lwdiv
    _adc_read_temperature->___flmul
    ___flneg->___xxtofl
    ___fladd->___flneg
    _USBDeviceInit->_memset
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_sector_write
    _flash_sector_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->__flash_is_busy
    __flash_write_page_from_buffer->__flash_is_busy
    __flash_compare_page_to_buffer->__flash_is_busy
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_sector_read
    _flash_sector_read->__flash_partial_read
    __flash_partial_read->__flash_is_busy
    __flash_is_busy->__flash_get_status
    __flash_wakeup->_spi_tx
    __flash_get_status->_spi_tx_rx
    _APP_DeviceCustomHIDTasks->_api_parse
    _api_prepare->__fill_buffer_get_display
    __fill_buffer_get_status->_memcpy
    __fill_buffer_get_display->_display_get_character
    _api_parse->__parse_command_short
    __parse_command_short->_motor_go_to_steps_position
    _motor_set_zero->_motor_schedule_command
    _motor_go_to_steps_position->_motor_schedule_command
    __parse_command_long->__parse_jump_steps
    __parse_set_manual_speed->_motor_set_manual_speed
    _motor_set_manual_speed->_motor_change_speed
    __parse_jump_steps->_motor_schedule_command
    _motor_schedule_command->__motor_run
    __motor_run->_motor_steps_from_degrees
    _motor_steps_from_degrees->___fldiv
    _motor_steps_from_degrees->___flmul
    _motor_calculate_position_in_degrees->___fldiv
    _motor_calculate_position_in_degrees->___flmul
    ___flmul->___xxtofl
    ___fldiv->___xxtofl

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _system_init->_configFile_read

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _SYS_InterruptHigh in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _SYS_InterruptHigh in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SYS_InterruptHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  852074
                                            157 BANK0      1     1      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
               _adc_read_temperature
                    _display_prepare
                     _display_update
               _encoder_statemachine
_motor_calculate_position_in_degrees
                  _motor_process_cue
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0  378508
                    __backlight_init
                  __system_pin_setup
                __system_timer0_init
                           _adc_init
                    _configFile_read
             _configFile_readDefault
                   _configFile_write
                       _display_init
                     _display_update
                       _encoder_init
                           _fat_init
                         _flash_init
              _i2c_eeprom_readUint32
                           _i2c_init
_motor_calculate_position_in_degrees
                         _motor_init
 ---------------------------------------------------------------------------------
 (2) _motor_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_readUint32                                8     4      4    3272
                                             25 BANK0      8     4      4
                    _i2c_eeprom_read
 ---------------------------------------------------------------------------------
 (3) _i2c_eeprom_read                                      8     3      5    3113
                                             17 BANK0      8     3      5
                   __i2c_eeprom_busy
                          __i2c_read
                         __i2c_write
 ---------------------------------------------------------------------------------
 (4) __i2c_read                                           12     9      3     534
                                              5 BANK0     12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (5) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_eeprom_busy                                     1     1      0      23
                                              5 BANK0      1     1      0
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0   11368
               __flash_set_page_size
                           _spi_init
 ---------------------------------------------------------------------------------
 (3) _spi_init                                             1     1      0     222
                                              3 BANK0      1     1      0
                          __spi_init
 ---------------------------------------------------------------------------------
 (4) __spi_init                                            3     0      3     178
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0   11146
                                             19 BANK0      5     5      0
                     __flash_is_busy
                             _memcpy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (2) _fat_init                                             0     0      0   25475
                         _fat_format
              _fat_get_format_status
 ---------------------------------------------------------------------------------
 (3) _fat_get_format_status                                4     4      0    6769
                                             43 BANK0      4     4      0
                           __get_fbr
                           __get_mbr
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (3) _fat_format                                           2     2      0   18706
                                             36 BANK0      2     2      0
                          __get_data
                           __get_fat
                           __get_fbr
                           __get_mbr
                          __get_root
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (4) __get_root                                            6     4      2     310
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) __get_mbr                                             4     2      2     200
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fbr                                             4     2      2     200
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fat                                             4     2      2     111
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_data                                            2     0      2     133
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _encoder_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_update                                       1     1      0    2472
                                             16 BANK0      1     1      0
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (3) _i2c_display_write_fixed                              4     1      3     290
                                              5 BANK0      4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_display_cursor                                   3     2      1    2092
                                             13 BANK0      3     2      1
     __ic2_display_set_ddram_address
 ---------------------------------------------------------------------------------
 (4) __ic2_display_set_ddram_address                       3     3      0    1933
                                             10 BANK0      3     3      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (2) _display_init                                         0     0      0   16444
                     __display_start
                   _i2c_display_init
_i2c_display_program_custom_characte
 ---------------------------------------------------------------------------------
 (3) _i2c_display_program_custom_character                19    17      2    4270
                                             14 BANK0     19    17      2
                         __i2c_write
     __ic2_display_set_cgram_address
 ---------------------------------------------------------------------------------
 (4) __ic2_display_set_cgram_address                       4     4      0    1958
                                             10 BANK0      4     4      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_display_init                                    10    10      0    1887
                                             10 BANK0     10    10      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (4) __i2c_write                                           5     2      3    1862
                                              5 BANK0      5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (5) __i2c_wait_idle                                       5     5      0       0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (5) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_send                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) __display_start                                       1     1      0   10287
                                             28 BANK0      1     1      0
                  __display_itoa_u16
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) __display_itoa_u16                                    4     0      4    3164
                                             24 BANK0      4     0      4
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _configFile_write                                     6     6      0  231174
                                            131 BANK0      6     6      0
                          __add_item
                    _fat_create_file
                      _fat_find_file
                    _fat_modify_file
                    _fat_resize_file
 ---------------------------------------------------------------------------------
 (3) _fat_resize_file                                     47    43      4   75530
                                             76 BANK0     47    43      4
                __make_cluster_chain
                 __root_is_available
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (3) _fat_modify_file                                     66    58      8   58065
                                             65 BANK0     66    58      8
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
           _fat_get_file_information
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) _fat_create_file                                     49    41      8   83178
                                             76 BANK0     49    41      8
          __get_available_root_entry
                          __get_date
                          __get_time
                __make_cluster_chain
                        __write_root
                      _fat_find_file
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) __write_root                                          7     5      2   24113
                                             40 BANK0      7     5      2
           __offset_from_file_number
           __sector_from_file_number
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (5) _flash_partial_write                                  9     1      8   23640
                                             31 BANK0      9     1      8
      __flash_compare_page_to_buffer
         __flash_copy_page_to_buffer
                     __flash_is_busy
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (6) __flash_copy_page_to_buffer                          10     7      3    4565
                                             19 BANK0     10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) __make_cluster_chain                                 23    19      4   35708
                                             53 BANK0     23    19      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
             __get_available_cluster
  __get_available_offset_from_buffer
            __read_value_from_offset
             __write_value_to_offset
                  _flash_sector_read
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (5) __write_value_to_offset                               8     2      6     934
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) __get_available_cluster                              10     6      4    7752
                                             43 BANK0     10     6      4
    __cluster_from_sector_and_offset
  __get_available_offset_from_buffer
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (5) __get_available_offset_from_buffer                    8     4      4     712
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (6) __cluster_from_sector_and_offset                      4     0      4     226
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) __get_time                                            2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __get_date                                            2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __get_available_root_entry                            1     1      0    7485
                                             53 BANK0      1     1      0
                 __root_is_available
 ---------------------------------------------------------------------------------
 (3) __add_item                                           11     3      8    6260
                                             36 BANK0     11     3      8
                               _ltoa
 ---------------------------------------------------------------------------------
 (4) _ltoa                                                10     2      8    1853
                                             26 BANK0     10     2      8
                              _ultoa
 ---------------------------------------------------------------------------------
 (5) _ultoa                                               13     5      8    1423
                                             13 BANK0     13     5      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     337
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     518
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) _configFile_readDefault                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configFile_read                                     60    60      0   80164
                                              0 BANK1     60    60      0
                          __get_item
                        __parse_item
                      _fat_find_file
                  _fat_get_file_size
                 _fat_read_from_file
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file                                  52    42     10   42312
                                            105 BANK0     52    42     10
           _fat_get_file_information
            _fat_read_from_file_fast
 ---------------------------------------------------------------------------------
 (4) _fat_read_from_file_fast                             40    26     14   33651
                                             65 BANK0     40    26     14
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __find_nth_cluster                                   10     6      4   16816
                                             55 BANK0     10     6      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                          __read_fat
            __read_value_from_offset
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (5) __read_value_from_offset                              9     5      4     825
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (4) __read_fat                                            8     6      2    8284
                                             47 BANK0      8     6      2
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __fat_sector_from_cluster                             2     0      2     469
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) __fat_offset_from_cluster                             2     0      2     291
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __data_sector_from_cluster                            2     0      2     289
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _fat_get_file_information                             8     6      2    7751
                                             47 BANK0      8     6      2
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_size                                   13     9      4   14768
                                             53 BANK0     13     9      4
           __offset_from_file_number
                 __root_is_available
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __root_is_available                                   6     6      0    7395
                                             47 BANK0      6     6      0
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) _flash_partial_read                                   8     0      8    7123
                                             39 BANK0      8     0      8
                __flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __sector_from_file_number                             5     3      2      47
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (5) __offset_from_file_number                             5     3      2      47
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _fat_find_file                                       11     7      4    7661
                                             43 BANK0     11     7      4
                  _flash_sector_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     668
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) __parse_item                                          4     0      4   13915
                                             26 BANK0      4     0      4
                               _atoi
                               _atol
                            _stricmp
 ---------------------------------------------------------------------------------
 (4) _stricmp                                              6     2      4    3006
                                              1 BANK0      6     2      4
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              1     1      0      67
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _atol                                                14    10      4    1700
                                             12 BANK0     14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2    8327
                                              6 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    7141
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) __get_item                                           11     5      6    1132
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_pin_setup                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __backlight_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motor_process_cue                                    0     0      0   17215
                         __motor_run
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (1) _encoder_statemachine                                 4     4      0  173015
                                            109 BANK0      4     4      0
        __divide_jump_size_decrement
        __divide_jump_size_increment
        __encoder_next_arc_step_size
     __encoder_next_divide_step_size
       __encoder_next_setup_stepsize
                     _motor_arc_move
                 _motor_change_speed
        _motor_decrease_manual_speed
                  _motor_divide_jump
       _motor_divide_jump_to_nearest
         _motor_go_to_steps_position
        _motor_increase_manual_speed
   _motor_nonzero_steps_from_degrees
             _motor_schedule_command
                     _motor_set_zero
                         _motor_stop
 ---------------------------------------------------------------------------------
 (2) _motor_nonzero_steps_from_degrees                     8     4      4    8696
                                             47 BANK0      8     4      4
           _motor_steps_from_degrees
 ---------------------------------------------------------------------------------
 (2) _motor_increase_manual_speed                          0     0      0     644
             _motor_set_manual_speed
 ---------------------------------------------------------------------------------
 (2) _motor_divide_jump_to_nearest                        10    10      0   40685
                                             99 BANK0     10    10      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
__step_position_from_divide_position
         _motor_go_to_steps_position
 ---------------------------------------------------------------------------------
 (2) _motor_divide_jump                                    7     7      0   29926
                                             99 BANK0      7     7      0
__step_position_from_divide_position
         _motor_go_to_steps_position
 ---------------------------------------------------------------------------------
 (3) __step_position_from_divide_position                  8     4      4    8339
                                             39 BANK0      8     4      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _motor_decrease_manual_speed                          0     0      0     644
             _motor_set_manual_speed
 ---------------------------------------------------------------------------------
 (2) _motor_arc_move                                       9     9      0   28913
                                             71 BANK0      9     9      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
             _motor_schedule_command
 ---------------------------------------------------------------------------------
 (2) __encoder_next_setup_stepsize                         4     2      2     111
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) __encoder_next_divide_step_size                       1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __encoder_next_arc_step_size                          4     2      2     111
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) __divide_jump_size_increment                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __divide_jump_size_decrement                          3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _display_prepare                                     14    14      0   43870
                                             92 BANK0     14    14      0
                     __display_clear
                      __display_itoa
                 __display_itoa_long
               __display_padded_itoa
               __display_signed_itoa
                             _memcpy
             _motor_speed_from_index
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _motor_speed_from_index                               2     0      2    6589
                                             51 BANK0      2     0      2
        __motor_get_speed_in_degrees
 ---------------------------------------------------------------------------------
 (3) __motor_get_speed_in_degrees                         12    10      2    6389
                                             39 BANK0     12    10      2
                            ___fldiv
                            ___fltol
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     778
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) __display_signed_itoa                                 4     0      4    4979
                                             47 BANK0      4     0      4
               __display_padded_itoa
 ---------------------------------------------------------------------------------
 (3) __display_padded_itoa                                23    18      5    4668
                                             24 BANK0     23    18      5
                               _itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (2) __display_itoa_long                                  15     8      7   10370
                                             77 BANK0     15     8      7
                            ___aldiv
                            ___almod
                      __display_itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (3) __display_itoa                                       24    19      5    6858
                                             53 BANK0     24    19      5
                               _itoa
             _motor_speed_from_index (ARG)
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     535
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _itoa                                                 8     2      6    2388
                                             16 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                 9     3      6    1424
                                              7 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     337
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     518
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     474
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     478
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __display_clear                                       4     4      0     136
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _adc_read_temperature                                 8     8      0    8400
                                             39 BANK0      8     8      0
                            ___fladd
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     134
                                             14 BANK0      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2644
                                             18 BANK0     20    12      8
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1132
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     930
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    5     5      0      68
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0  113120
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0  113120
                                             76 BANK0      6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0  108320
                                             71 BANK0      5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   54911
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   53205
                                             57 BANK0     14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   24547
                                             47 BANK0      5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     192
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   17375
                                             36 BANK0     11     2      9
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (4) _flash_sector_write                                   5     1      4   17030
                                             31 BANK0      5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    4519
                                             19 BANK0     11     4      7
                     __flash_is_busy
                          _spi_tx_tx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_tx                                           12     4      8     532
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    4743
                                             19 BANK0     10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    5899
                                             19 BANK0     12     9      3
                  __flash_get_status
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   13450
                                             53 BANK0      4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2318
                                             10 BANK0      7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    1706
                                              8 BANK0      2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (3) _USBStallEndpoint                                     8     7      1    1661
                                              0 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    6470
                                             43 BANK0     10     2      8
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (4) _flash_sector_read                                    4     0      4    6189
                                             39 BANK0      4     0      4
                __flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __flash_partial_read                                 20    12      8    4899
                                             19 BANK0     20    12      8
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (4) __flash_is_busy                                       2     2      0    2691
                                             17 BANK0      2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1357
                                              8 BANK0      1     1      0
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) _spi_tx                                               8     4      4    1334
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2    1311
                                             12 BANK0      5     3      2
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_rx                                           12     4      8    1244
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     422
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      64
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      64
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaInitialize                        2     0      2     102
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaDetect                            2     0      2     102
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                             1     1      0  106111
               _USBTransferOnePacket
                          _api_parse
                        _api_prepare
 ---------------------------------------------------------------------------------
 (2) _api_prepare                                          5     1      4   16518
                                             16 BANK0      5     1      4
           __fill_buffer_get_display
      __fill_buffer_get_mode_details
            __fill_buffer_get_status
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_status                              2     0      2    7690
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              11     5      6    7007
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_mode_details                        4     2      2     529
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_display                            12     9      3     827
                                              4 BANK0     12     9      3
              _display_get_character
 ---------------------------------------------------------------------------------
 (4) _display_get_character                                4     3      1     133
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _api_parse                                           11     6      5   86592
                                            100 BANK0     11     6      5
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (3) __parse_command_short                                 1     1      0   62996
                                             99 BANK0      1     1      0
            _motor_clear_command_cue
         _motor_go_to_steps_position
             _motor_schedule_command
                     _motor_set_zero
                         _motor_stop
 ---------------------------------------------------------------------------------
 (2) _motor_stop                                           2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _motor_set_zero                                       1     1      0   20773
                                             71 BANK0      1     1      0
             _motor_schedule_command
 ---------------------------------------------------------------------------------
 (2) _motor_go_to_steps_position                          28    24      4   21472
                                             71 BANK0     28    24      4
             _motor_schedule_command
 ---------------------------------------------------------------------------------
 (4) _motor_clear_command_cue                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) __parse_command_long                                  7     1      6   22850
                                             83 BANK0      7     1      6
                  __parse_jump_steps
            __parse_set_manual_speed
 ---------------------------------------------------------------------------------
 (4) __parse_set_manual_speed                              9     3      6    1068
                                              4 BANK0      9     3      6
             _motor_set_manual_speed
 ---------------------------------------------------------------------------------
 (3) _motor_set_manual_speed                               2     0      2     644
                                              2 BANK0      2     0      2
                 _motor_change_speed
 ---------------------------------------------------------------------------------
 (4) _motor_change_speed                                   2     0      2     289
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __parse_jump_steps                                   12     6      6   21336
                                             71 BANK0     12     6      6
             _motor_schedule_command
 ---------------------------------------------------------------------------------
 (3) _motor_schedule_command                               7     1      6   20729
                                             64 BANK0      7     1      6
                         __motor_run
                 _motor_items_in_cue
   _motor_nonzero_steps_from_degrees (ARG)
 ---------------------------------------------------------------------------------
 (2) _motor_items_in_cue                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __motor_run                                          17    11      6   17215
                                             47 BANK0     17    11      6
_motor_calculate_position_in_degrees
           _motor_steps_from_degrees
 ---------------------------------------------------------------------------------
 (3) _motor_steps_from_degrees                             8     4      4    8450
                                             39 BANK0      8     4      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _motor_calculate_position_in_degrees                  4     4      0    8139
                                             39 BANK0      4     4      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1746
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     941
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2864
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2519
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    3001
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _SYS_InterruptHigh                                  14    14      0   55930
                                             67 COMRAM    14    14      0
                     _USBDeviceTasks
                          _motor_isr
                           _tmr0_isr
 ---------------------------------------------------------------------------------
 (14) _tmr0_isr                                            0     0      0       0
                        _encoder_run
 ---------------------------------------------------------------------------------
 (15) _encoder_run                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _motor_isr                                          24    24      0    1308
                                             43 COMRAM    24    24      0
             _i2c_eeprom_writeUint32
 ---------------------------------------------------------------------------------
 (15) _i2c_eeprom_writeUint32                              6     0      6    1217
                                             37 COMRAM     6     0      6
                   _i2c_eeprom_write
 ---------------------------------------------------------------------------------
 (16) _i2c_eeprom_write                                   27    22      5     994
                                             10 COMRAM    27    22      5
                 i2__i2c_eeprom_busy
                       i2__i2c_write
 ---------------------------------------------------------------------------------
 (17) i2__i2c_write                                        5     2      3     186
                                              5 COMRAM     5     2      3
                        i2__i2c_send
                       i2__i2c_start
                        i2__i2c_stop
                   i2__i2c_wait_idle
 ---------------------------------------------------------------------------------
 (17) i2__i2c_eeprom_busy                                  1     1      0      23
                                              5 COMRAM     1     1      0
                        i2__i2c_send
                       i2__i2c_start
                        i2__i2c_stop
                   i2__i2c_wait_idle
 ---------------------------------------------------------------------------------
 (18) i2__i2c_wait_idle                                    5     5      0       0
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_stop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_start                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_send                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) _USBDeviceTasks                                      1     1      0   54622
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (15) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (15) _USBWakeFromSuspend                                  0     0      0    7487
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBSuspend                                          0     0      0    7487
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USBIncrement1msInternalTimers                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPService                                    1     1      0   31505
                                             29 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (16) i2_memcpy                                           11     5      6     221
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfSetupHandler                              0     0      0   31055
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (17) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCheckStdRequest                                  0     0      0   23476
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (18) _USBStdSetCfgHandler                                 1     1      0    7985
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (16) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (18) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (18) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (18) _USBStdFeatureReqHandler                             6     6      0    7958
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    7487
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
                i2_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (16) i2_SYSTEM_Initialize                                 5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (16) _USBCheckMSDRequest                                  4     4      0     736
                                             11 COMRAM     4     4      0
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) _USBCheckHIDRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _MSDTransferTerminated                               4     2      2    1075
                                             11 COMRAM     4     2      2
                 i2_USBStallEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBStallEndpoint                                  8     7      1     252
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceMSDInitialize                             0     0      0    1473
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (17) _USBMSDInit                                          3     3      0     740
                                             11 COMRAM     3     3      0
        i2_ExternalFlash_MediaDetect *
    i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (18) i2_ResetSenseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaInitialize                     2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaDetect                         2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceCustomHIDInitialize                       0     0      0    1421
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBTransferOnePacket                             11     7      4     688
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (17) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (18) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (19) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     _api_parse
       __parse_command_long
         __parse_jump_steps
           _motor_schedule_command
             __motor_run
               _motor_calculate_position_in_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
             _motor_items_in_cue
             _motor_nonzero_steps_from_degrees (ARG)
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
         __parse_set_manual_speed
           _motor_set_manual_speed
             _motor_change_speed
       __parse_command_short
         _motor_clear_command_cue
         _motor_go_to_steps_position
           _motor_schedule_command
             __motor_run
               _motor_calculate_position_in_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
             _motor_items_in_cue
             _motor_nonzero_steps_from_degrees (ARG)
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
         _motor_schedule_command
           __motor_run
             _motor_calculate_position_in_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
           _motor_items_in_cue
           _motor_nonzero_steps_from_degrees (ARG)
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
         _motor_set_zero
           _motor_schedule_command
             __motor_run
               _motor_calculate_position_in_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
             _motor_items_in_cue
             _motor_nonzero_steps_from_degrees (ARG)
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
         _motor_stop
     _api_prepare
       __fill_buffer_get_display
         _display_get_character
       __fill_buffer_get_mode_details
       __fill_buffer_get_status
         _memcpy
       _memcpy
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_sector_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _adc_read_temperature
     ___fladd
       ___flneg (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___xxtofl (ARG)
     ___flneg
       ___xxtofl (ARG)
     ___fltol
     ___xxtofl
   _display_prepare
     __display_clear
     __display_itoa
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _motor_speed_from_index (ARG)
         __motor_get_speed_in_degrees
           ___fldiv
             ___xxtofl (ARG)
           ___fltol
           ___lmul
           ___xxtofl
       _strlen (ARG)
     __display_itoa_long
       ___aldiv
       ___almod
       __display_itoa
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _motor_speed_from_index (ARG)
           __motor_get_speed_in_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___fltol
             ___lmul
             ___xxtofl
         _strlen (ARG)
       _strlen
     __display_padded_itoa
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _strlen
     __display_signed_itoa
       __display_padded_itoa
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _strlen
     _memcpy
     _motor_speed_from_index
       __motor_get_speed_in_degrees
         ___fldiv
           ___xxtofl (ARG)
         ___fltol
         ___lmul
         ___xxtofl
     _strlen
   _display_update
     _i2c_display_cursor
       __ic2_display_set_ddram_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
   _encoder_statemachine
     __divide_jump_size_decrement
     __divide_jump_size_increment
     __encoder_next_arc_step_size
     __encoder_next_divide_step_size
     __encoder_next_setup_stepsize
     _motor_arc_move
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
       _motor_schedule_command
         __motor_run
           _motor_calculate_position_in_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
         _motor_items_in_cue
         _motor_nonzero_steps_from_degrees (ARG)
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
     _motor_change_speed
     _motor_decrease_manual_speed
       _motor_set_manual_speed
         _motor_change_speed
     _motor_divide_jump
       __step_position_from_divide_position
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _motor_go_to_steps_position
         _motor_schedule_command
           __motor_run
             _motor_calculate_position_in_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
           _motor_items_in_cue
           _motor_nonzero_steps_from_degrees (ARG)
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
     _motor_divide_jump_to_nearest
       ___fladd
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
       __step_position_from_divide_position
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _motor_go_to_steps_position
         _motor_schedule_command
           __motor_run
             _motor_calculate_position_in_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
           _motor_items_in_cue
           _motor_nonzero_steps_from_degrees (ARG)
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
     _motor_go_to_steps_position
       _motor_schedule_command
         __motor_run
           _motor_calculate_position_in_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
         _motor_items_in_cue
         _motor_nonzero_steps_from_degrees (ARG)
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
     _motor_increase_manual_speed
       _motor_set_manual_speed
         _motor_change_speed
     _motor_nonzero_steps_from_degrees
       _motor_steps_from_degrees
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
     _motor_schedule_command
       __motor_run
         _motor_calculate_position_in_degrees
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___fltol
           ___xxtofl
         _motor_steps_from_degrees
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___fltol
           ___xxtofl
       _motor_items_in_cue
       _motor_nonzero_steps_from_degrees (ARG)
         _motor_steps_from_degrees
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___fltol
           ___xxtofl
     _motor_set_zero
       _motor_schedule_command
         __motor_run
           _motor_calculate_position_in_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
         _motor_items_in_cue
         _motor_nonzero_steps_from_degrees (ARG)
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
     _motor_stop
   _motor_calculate_position_in_degrees
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___xxtofl (ARG)
     ___fltol
     ___xxtofl
   _motor_process_cue
     __motor_run
       _motor_calculate_position_in_degrees
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _motor_steps_from_degrees
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
     _motor_items_in_cue
   _system_init
     __backlight_init
     __system_pin_setup
     __system_timer0_init
     _adc_init
     _configFile_read
       __get_item
       __parse_item
         _atoi
           ___wmul
           _isdigit
         _atol
           ___lmul
           _isdigit
         _stricmp
           _toupper
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
         _strncmp
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _fat_read_from_file
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _fat_read_from_file_fast
           __data_sector_from_cluster
           __find_nth_cluster
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
             __read_value_from_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
     _configFile_readDefault
     _configFile_write
       __add_item
         _ltoa
           _ultoa
             ___lldiv
             ___llmod
       _fat_create_file
         __get_available_root_entry
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
         __get_date
         __get_time
         __make_cluster_chain
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __get_available_cluster
             __cluster_from_sector_and_offset
             __get_available_offset_from_buffer
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __get_available_offset_from_buffer
           __read_value_from_offset
           __write_value_to_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _flash_sector_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         __write_root
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         _fat_find_file
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _strncmp
         _memcpy
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
         _strncmp
       _fat_modify_file
         __data_sector_from_cluster
         __find_nth_cluster
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __read_value_from_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __read_fat
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _flash_partial_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_copy_page_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_is_busy
             __flash_get_status
               _spi_tx_rx
             __flash_wakeup
               _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
       _fat_resize_file
         __make_cluster_chain
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __get_available_cluster
             __cluster_from_sector_and_offset
             __get_available_offset_from_buffer
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __get_available_offset_from_buffer
           __read_value_from_offset
           __write_value_to_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _flash_sector_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __write_root
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
     _display_init
       __display_start
         __display_itoa_u16
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
         _memcpy
       _i2c_display_init
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
       _i2c_display_program_custom_character
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __ic2_display_set_cgram_address
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
     _display_update
       _i2c_display_cursor
         __ic2_display_set_ddram_address
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
       _i2c_display_write_fixed
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
     _encoder_init
     _fat_init
       _fat_format
         __get_data
         __get_fat
         __get_fbr
         __get_mbr
         __get_root
         _flash_sector_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
       _fat_get_format_status
         __get_fbr
         __get_mbr
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
     _flash_init
       __flash_set_page_size
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _memcpy
         _spi_tx
       _spi_init
         __spi_init
     _i2c_eeprom_readUint32
       _i2c_eeprom_read
         __i2c_eeprom_busy
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __i2c_read
           __i2c_acknowledge
           __i2c_get
           __i2c_not_acknowledge
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
     _i2c_init
     _motor_calculate_position_in_degrees
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
     _motor_init

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 i2_ExternalFlash_MediaDetect *
                 i2_ExternalFlash_MediaInitialize *
                 i2_ResetSenseData *
                 i2_USBTransferOnePacket *
             _MSDTransferTerminated
               i2_USBStallEndpoint
               i2_USBTransferOnePacket
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               i2_USBTransferOnePacket
             i2_SYSTEM_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               i2_ExternalFlash_MediaDetect *
               i2_ExternalFlash_MediaInitialize *
               i2_ResetSenseData *
               i2_USBTransferOnePacket *
           _MSDTransferTerminated
             i2_USBStallEndpoint
             i2_USBTransferOnePacket
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             i2_USBTransferOnePacket
           i2_SYSTEM_Initialize
       i2_memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i2_USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           i2_ExternalFlash_MediaDetect *
           i2_ExternalFlash_MediaInitialize *
           i2_ResetSenseData *
           i2_USBTransferOnePacket *
       _MSDTransferTerminated
         i2_USBStallEndpoint
         i2_USBTransferOnePacket
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         i2_USBTransferOnePacket
       i2_SYSTEM_Initialize
     i2_USBDeviceInit
       i2_memset
   _motor_isr
     _i2c_eeprom_writeUint32
       _i2c_eeprom_write
         i2__i2c_eeprom_busy
           i2__i2c_send
           i2__i2c_start
           i2__i2c_stop
           i2__i2c_wait_idle
         i2__i2c_write
           i2__i2c_send
           i2__i2c_start
           i2__i2c_stop
           i2__i2c_wait_idle
   _tmr0_isr
     _encoder_run

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     400      36       66.7%
BIGRAMlh           500      0       0      35        0.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      50      13       31.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      B8      11       71.9%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      D6       9       83.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     3C      FF       7       99.6%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9E      A0       5      100.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     51      5E       1      100.0%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3DB      31        0.0%
DATA                 0      0     7DB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Jan 01 22:49:07 2020

                           __end_of_fat_read_from_file 1D92  
                               _motor_next_speed_check 0226  
                      __size_of__write_value_to_offset 0036  
                                           _USB_SD_Ptr 9DE4  
                                         ___fldiv@aexp 0086  
                                         ___fldiv@bexp 0085  
                             fat_create_file@extension 00AE  
                                  __get_item@value_ctr 0069  
                                         ___fldiv@sign 007E  
               motor_calculate_position_in_degrees@tmp 0087  
                                  __system_timer0_init 54E0  
                      __size_of_configFile_readDefault 0064  
                            __end_of_motor_divide_jump 3068  
                              configFile_read@position 01FB  
                                                   _os 0171  
                                        _USBDeviceInit FE90  
                                  ___wmul@multiplicand 0062  
                                   _USBCheckHIDRequest 2480  
                          ??__data_sector_from_cluster 0062  
               __end_of__encoder_next_divide_step_size 5486  
              __size_of__encoder_next_divide_step_size 002E  
                       __encoder_next_divide_step_size 5458  
                                     __i2c_eeprom_busy 55E0  
                                     ??__flash_is_busy 0071  
                           ??__sector_from_file_number 0062  
                                         __CFG_CP0$OFF 000000  
                       __root_is_available@root_sector 008F  
                                  __end_of_system_init 1AD8  
                             ?_i2c_display_write_fixed 0065  
                              fat_modify_file@position 00BF  
                                      _fat_resize_file 131C  
                 USER_USB_CALLBACK_EVENT_HANDLER@event 0010  
                 USER_USB_CALLBACK_EVENT_HANDLER@pdata 0012  
                                                  l206 538E  
                                                  l207 538C  
                                                  l145 FEDA  
                                                  l147 FF02  
                                                  l149 FF3C  
                          __end_of_USBStdGetDscHandler 0880  
                                                  l184 1028  
                                                  l192 0F66  
                                                  l186 1052  
                                                  l602 E57E  
                                                  l188 10D0  
                                                  l700 D8AC  
                                                  l620 4284  
                                                  l612 074A  
                                                  l701 D5EC  
                                                  l613 0744  
                                                  l605 E586  
                                                  l710 D6EC  
                                                  l630 C14A  
                                                  l622 42A0  
                                                  l703 D8D0  
                                                  l711 D75A  
                                                  l631 BDAA  
                                                  l615 074E  
                                                  l720 D892  
                                                  l712 D756  
                                                  l704 D698  
                                                  l640 BEEE  
                                                  l624 42AC  
                                                  l608 069E  
                                                  l641 BEF8  
                                                  l625 42B2  
                                                  l714 D76E  
                                                  l706 D69E  
                                                  l650 BFF0  
                                                  l642 BF1C  
                                                  l634 BDBA  
                                                  l626 42B8  
                                                  l570 E59E  
                                                  l731 0B2C  
                                                  l715 D7F2  
                                                  l707 D6AA  
                                                  l619 42C0  
                                                  l571 E362  
                                                  l708 D6C8  
                                                  l660 C096  
                                                  l652 C026  
                                                  l644 BF4C  
                                                  l636 BDCA  
                                                  l580 E474  
                                                  l900 464A  
                                                  l709 D714  
                                                  l661 C0AA  
                                                  l637 BDD4  
                                                  l734 0B38  
                                                  l726 0AD6  
                                                  l718 D862  
                                                  l670 C142  
                                                  l662 C0D2  
                                                  l654 C042  
                                                  l646 BF8C  
                                                  l582 E48C  
                                                  l735 0B60  
                                                  l719 D87A  
                                                  l639 BE28  
                                                  l591 E500  
                                                  l575 E386  
                                                  l728 0AEE  
                                                  l664 C106  
                                                  l656 C05A  
                                                  l592 E504  
                                                  l904 465C  
                                                  l753 0BCA  
                                                  l737 0B9C  
                                                  l681 F204  
                                                  l665 C0DA  
                                                  l649 BFC4  
                                                  l593 E52A  
                                                  l577 E4B2  
                                                  l770 0A50  
                                                  l738 0B82  
                                                  l690 F11A  
                                                  l682 F046  
                                                  l666 C0EC  
                                                  l578 E498  
                                                  l586 E5BC  
                                                  l906 4668  
                                                  l675 2A68  
                                                  l763 0A9A  
                                                  l771 0A8C  
                                                  l747 0BAA  
                                                  l691 F144  
                                                  l667 C102  
                                                  l587 E4D2  
                                                  l579 E46A  
                                                  l764 0A04  
                                                  l684 F228  
                                                  l692 F172  
                                                  _BDT 000D00  
                                                  l677 2A84  
                                                  l757 09D8  
                                                  l749 0BB8  
                                                  l693 F184  
                                                  l685 F0A0  
                                                  l589 E4DE  
                                                  l950 3228  
                                                  l766 0A0C  
                                                  l694 F18A  
                                                  l686 F0AC  
                                                  l862 3590  
                                                  l767 0A1A  
                                                  l695 F19E  
                                                  l687 F0B6  
                                                  l871 35D2  
                                                  l863 35AA  
                                                  l944 31C4  
                                                  l768 0A2E  
                                                  l696 F1EC  
                                                  l688 F0CA  
                                                  l872 35D6  
                                                  l769 0A3C  
                                                  l873 35DC  
                                                  l867 35E2  
                                                  l869 3604  
                                                  l897 467A  
                                                  l986 58E6  
                                                  l898 463E  
                                                  _LBA 012B  
                                        ?_display_init 0001  
                                                  _PR2 000FCB  
                                                  _LUN 0289  
                                                  _UIE 000F36  
                                                  _UIR 000F62  
                                     ??_motor_set_zero 00A7  
                                   api_prepare@command 0074  
                                           _USBSuspend 5428  
                               __end_of_display_update 5228  
                                 USBStdSetCfgHandler@i 0018  
                               i2c_eeprom_read@address 0071  
                                                  prod 000FF3  
                                                  tosl 000FFD  
                                                  wreg 000FE8  
                                       _USBDeviceTasks FFDC  
                                  ?_USBCheckHIDRequest 0001  
                                         __CFG_IESO$ON 000000  
                                       _USBDeviceState 005E  
                                         ___flmul@aexp 007F  
                                         ___flmul@bexp 0080  
                                         ?__write_root 0088  
                              __parse_item@item_string 007A  
                                         ___flmul@sign 007A  
                                         ___flmul@temp 0085  
                                         ___flmul@prod 0081  
                            __size_of_i2c_display_init 0050  
                                ??_USBCtrlTrfRxService 0001  
                             __size_ofi2_USBDeviceInit 0146  
                             USBEnableEndpoint@options 0009  
                                    __find_nth_cluster 3264  
                                    ??_MSDErrorHandler 0068  
                                 ?__system_timer0_init 0001  
                                  api_prepare@inBuffer 0070  
                                         ___fltol@exp1 0069  
                    __size_of__offset_from_file_number 002A  
                          __flash_write_to_buffer@data 0075  
                                                 l2000 4750  
                                                 l2001 4754  
                                                 l2002 4758  
                                                 l2003 475C  
                                                 l2011 F79E  
                                                 l2004 4760  
                                                 l2020 F822  
                                                 l1141 599C  
                                                 l2021 F826  
                                                 l2013 F7D6  
                                                 l1213 4978  
                                                 l1310 4E28  
                                                 l1126 59A4  
                                                 l2030 F84A  
                                                 l2022 F82A  
                                                 l2015 F866  
                                                 l2031 F84E  
                                                 l2023 F82E  
                                                 l1135 596A  
                                                 l1312 4E34  
                                                 l1320 1F22  
                                                 l1400 A460  
                                                 l3000 3992  
                                                 l2040 555E  
                                                 l2032 F852  
                                                 l2024 F832  
                                                 l2016 F812  
                                                 l1321 1EF2  
                                                 l1401 A47E  
                                                 l2033 F856  
                                                 l2025 F836  
                                                 l2017 F816  
                                                 l2009 F790  
                                                 l1153 5962  
                                                 l1410 A560  
                                                 l1402 A4C2  
                                                 l2034 F85A  
                                                 l2026 F83A  
                                                 l2018 F81A  
                                                 l2050 2E5A  
                                                 l1082 1ACE  
                                                 l1331 EAF8  
                                                 l1411 A5D0  
                                                 l3003 39D2  
                                                 l1243 4A48  
                                                 l2035 F85E  
                                                 l2027 F83E  
                                                 l2019 F81E  
                                                 l1147 5976  
                                                 l2300 FABE  
                                                 l1420 A740  
                                                 l1412 A5A0  
                                                 l1404 A510  
                                                 l3004 39E0  
                                                 l1244 4A2A  
                                                 l2036 F862  
                                                 l2028 F842  
                                                 l1164 36E4  
                                                 l2301 FAC6  
                                                 l1341 EB68  
                                                 l1317 1EC4  
                                                 l2037 F8F2  
                                                 l2029 F846  
                                                 l1165 36C6  
                                                 l2310 FB3C  
                                                 l2302 FAEA  
                                                 l1342 EB7C  
                                                 l1318 1EAE  
                                                 l1326 4F54  
                                                 l1430 A8C6  
                                                 l1422 A816  
                                                 l1414 A654  
                                                 l1406 A54C  
                                                 l1158 4C86  
                                                 l2046 2E06  
                                                 l2303 FAF0  
                                                 l1343 EBDC  
                                                 l1335 EAD0  
                                                 l1431 A896  
                                                 l1423 A7E6  
                                                 l1407 A538  
                                                 l1159 4C68  
                                                 l2320 436C  
                                                 l2312 FB6A  
                                                 l2304 FAF6  
                                                 l2240 1FC0  
                                                 l3040 27E4  
                                                 l1344 EB96  
                                                 l1336 EAEE  
                                                 l1440 A9B2  
                                                 l1416 A6E2  
                                                 l2080 3CE6  
                                                 l2305 FAFC  
                                                 l2241 1FCE  
                                                 l3041 27FC  
                                                 l1345 EBDA  
                                                 l1353 0C2A  
                                                 l1441 AA0C  
                                                 l1433 A924  
                                                 l1425 A82E  
                                                 l1417 A6B2  
                                                 l1409 A542  
                                                 l1249 3B9A  
                                                 l2330 3A72  
                                                 l2306 FB02  
                                                 l2234 200E  
                                                 l2242 1FEE  
                                                 l1530 48EC  
                                                 l1338 EB84  
                                                 l1450 AB50  
                                                 l1442 A9BE  
                                                 l1426 A85C  
                                                 l1362 2CB0  
                                                 l1522 3F66  
                                                 l2403 1DAE  
                                                 l2307 FB08  
                                                 l2251 08F2  
                                                 l1531 48A8  
                                                 l3043 282A  
                                                 l1347 EC16  
                                                 l1443 AA66  
                                                 l1435 A960  
                                                 l1427 A84C  
                                                 l1419 A770  
                                                 l1523 3F8A  
                                                 l2412 2112  
                                                 l2324 FDF6  
                                                 l2308 FB0E  
                                                 l2172 473E  
                                                 l3044 281E  
                                                 l3060 2EDC  
                                                 l1348 EBE6  
                                                 l1460 AC62  
                                                 l1452 AB98  
                                                 l1444 AA36  
                                                 l1436 A930  
                                                 l1428 A86C  
                                                 l1540 459A  
                                                 l1364 2CD0  
                                                 l2164 5074  
                                                 l2317 438E  
                                                 l2253 096A  
                                                 l2237 1F8A  
                                                 l1533 48D2  
                                                 l2181 3850  
                                                 l3061 2EEA  
                                                 l3053 2E82  
                                                 l1461 ACA0  
                                                 l1453 AC0A  
                                                 l1429 A854  
                                                 l1381 A35E  
                                                 l1541 45A4  
                                                 l2165 5050  
                                                 l2326 FE8C  
                                                 l2318 434E  
                                                 l2254 090C  
                                                 l2246 089E  
                                                 l2270 2BF0  
                                                 l2238 1F98  
                                                 l2190 356E  
                                                 l3062 2F00  
                                                 l3054 2E96  
                                                 l1462 AD68  
                                                 l1454 ABDA  
                                                 l1446 AB0C  
                                                 l1438 A994  
                                                 l1390 A3E8  
                                                 l2078 3C80  
                                                 l1366 2CF0  
                                                 l2166 5084  
                                                 l2319 43A4  
                                                 l2255 09A0  
                                                 l2271 2BFC  
                                                 l2239 1FAC  
                                                 l1551 3C4C  
                                                 l3047 285E  
                                                 l1471 AE86  
                                                 l1463 AD30  
                                                 l1447 AAD4  
                                                 l1439 A9FC  
                                                 l1383 A368  
                                                 l2407 4E08  
                                                 l1359 2C90  
                                                 l2167 5062  
                                                 l2256 0924  
                                                 l2280 F44C  
                                                 l3048 286C  
                                                 l3056 2EB4  
                                                 l1376 AF1C  
                                                 l1456 AC38  
                                                 l2433 2F4C  
                                                 l2513 4D02  
                                                 l2257 0940  
                                                 l2249 08EC  
                                                 l2265 2BAC  
                                                 l1553 3C6C  
                                                 l3049 2882  
                                                 l3057 2EA8  
                                                 l1473 AEB0  
                                                 l1465 ADDC  
                                                 l1457 ACDE  
                                                 l1449 AB80  
                                                 l1385 AF78  
                                                 l1377 A334  
                                                 l2530 D578  
                                                 l2282 F45E  
                                                 l2178 381A  
                                                 l1466 ADAC  
                                                 l1458 AC56  
                                                 l1386 A392  
                                                 l1378 A372  
                                                 l2602 3E8A  
                                                 l2435 2F5A  
                                                 l2515 4D1E  
                                                 l2531 D530  
                                                 l2291 FB82  
                                                 l2267 2BE6  
                                                 l2187 3530  
                                                 l1475 AEDC  
                                                 l1459 ACF4  
                                                 l1387 A3DC  
                                                 l1379 A354  
                                                 l2603 3E56  
                                                 l2452 C570  
                                                 l2516 4D26  
                                                 l2292 FA86  
                                                 l2284 F4DC  
                                                 l1548 3C0A  
                                                 l3236 53E6  
                                                 l1468 AE4E  
                                                 l1396 A436  
                                                 l2612 546E  
                                                 l2700 B162  
                                                 l1900 132C  
                           USBConfigureEndpoint@handle 0007  
                                                 l3261 21A0  
                                                 l2461 C714  
                                                 l2453 C580  
                                                 l2269 2C26  
                                                 l2277 F56C  
                                                 l1581 5734  
                                                 l1549 3C14  
                                                 l1477 AEEA  
                                                 l1469 AE78  
                                                 l1397 A46A  
                                                 l1389 A418  
                                                 l2621 3EFA  
                                                 l2613 545E  
                                                 l2605 3E62  
                                                 l1741 44D8  
                                                 l1485 51FE  
                                                 l3270 21E0  
                                                 l3262 2190  
                                                 l2470 C7A4  
                                                 l2526 D388  
                                                 l2294 FA8E  
                                                 l3502 D1C4  
                                                 l1398 A456  
                                                 l2622 3EC6  
                                                 l2606 3E6C  
                                                 l2710 B202  
                                                 l1806 408C  
                                                 l1814 559A  
                                                 l1910 E63A  
                                                 l1902 133C  
                                                 l2471 C7A6  
                                                 l2455 C5C8  
                                                 l2535 D5A2  
                                                 l2527 D3D6  
                                                 l2295 FA96  
                                                 l2287 F536  
                                                 l1575 46A8  
                                                 l1567 4B68  
                                                 l3511 D218  
                                                 l1479 AF14  
                                                 l2631 50A0  
                                                 l2615 5462  
                                                 l2607 3E76  
                                                 l2543 300A  
                                                 l2711 B210  
                                                 l2703 B194  
                                                 l1743 4512  
                                                 l1911 E7D2  
                                                 l1903 13F8  
                                                 l2472 C80E  
                                                 l2464 C736  
                                                 l2528 D472  
                                                 l2296 FA9E  
                                                 l1576 46B2  
                                                 l1568 4B72  
                                                 l3504 D1D4  
                                                 l2624 3ED2  
                                                 l2616 5466  
                                                 l2608 3E80  
                                                 l2720 B2A2  
                                                 l1808 40E4  
                                                 l1816 55AC  
                                                 l1760 27AC  
                                                 l1912 E6C0  
                                                 l1904 13F0  
                                                 l2473 C838  
                                                 l2465 C73E  
                                                 l2457 C64A  
                                                 l2529 D4C0  
                                                 l2297 FAA6  
                                                 l1681 52B2  
                                                 l2625 3EDC  
                                                 l2617 546A  
                                                 l2801 B780  
                                                 l2713 B24A  
                                                 l1833 1CA8  
                                                 l1913 E6E8  
                                                 l1921 262E  
                                                 l2466 C798  
                                                 l2298 FAAE  
                                                 l2626 3EE6  
                                                 l2546 302E  
                                                 l2706 B7E8  
                                                 l2810 B73A  
                                                 l2802 B6DE  
                                                 l2714 B218  
                                                 l1842 1C92  
                                                 l1762 27B6  
                                                 l1914 E790  
                                                 l1930 2652  
                                                 l1922 2632  
                                                 l3267 21C4  
                                                 l3259 2134  
                                                 l2459 C692  
                                                 l2299 FAB6  
                                                 l3523 D2A4  
                                                 l3507 D1F8  
                                                 l3451 4ACA  
                                                 l2627 3EF0  
                                                 l2811 B764  
                                                 l2803 B70C  
                                                 l2715 B222  
                                                 l1851 03DC  
                                                 l1931 2656  
                                                 l1923 2636  
                                                 l3540 DC68  
                                                 l3268 21B8  
                                                 l3524 D2AC  
                                                 l3516 D238  
                                                 l3452 4AC2  
                                                 l2636 3FB6  
                                                 l2740 B3C4  
                                                 l2724 B3B2  
                                                 l2732 B348  
                                                 l2708 B23A  
                                                 l2716 B230  
                                                 l1836 1C1A  
                                                 l3380 4172  
                                                 l1780 DABC  
                                                 l1852 043A  
                                                 l1932 265A  
                                                 l1924 263A  
                                                 l3533 DBDE  
                                                 l3621 0328  
                                                 l2557 3160  
                                                 l1677 52E6  
                                                 l3701 5414  
                                                 l3525 D2AE  
                                                 l3509 D20E  
                                                 l3461 4FDA  
                                                 l2813 B76E  
                                                 l2741 B3D4  
                                                 l2733 B35A  
                                                 l2725 B2DC  
                                                 l2709 B1E0  
                                                 l1845 3D08  
                                                 l3381 4166  
                                                 l1757 2752  
                                                 l1933 265E  
                                                 l1925 263E  
                                                 l3550 DD72  
                                                 l3542 DC90  
                                                 l3534 DBDA  
                                                 l3630 039A  
                                                 l3622 0310  
                                                 l3614 02AA  
                                                 l2558 3198  
                                                 l3702 5402  
                                                 l3462 4FD2  
                                                 l2806 B71A  
                                                 l2750 B43E  
                                                 l2742 B3E2  
                                                 l2726 B2F0  
                                                 l2718 B264  
                                                 l3710 45E0  
                                                 l1790 DB0C  
                                                 l1774 D944  
                                                 l1942 E214  
                                                 l1950 E126  
                                                 l1918 2676  
                                                 l1934 2662  
                                                 l1926 2642  
                                                 l3551 DD54  
                                                 l3543 DD3E  
                                                 l3615 02BA  
                                                 l3519 D27E  
                                                 l3455 4AEA  
                                                 l2671 B79E  
                                                 l2807 B724  
                                                 l1767 32F6  
                                                 l1791 DB54  
                                                 l1951 E138  
                                                 l1943 E0E4  
                                                 l1935 2666  
                                                 l1927 2646  
                                                 l1919 262A  
                                                 l3560 DE12  
                                                 l3544 DCEE  
                                                 l3624 035A  
                                                 l3616 02D8  
                                                 l2840 F3E8  
                                                 l3456 4AF4  
                                                 l2808 B732  
                                                 l2760 B4F0  
                                                 l2752 B472  
                                                 l2744 B41C  
                                                 l2736 B38C  
                                                 l1768 328C  
                                                 l1880 E838  
                                                 l3384 419A  
                                                 l2912 1654  
                                                 l1784 DA88  
                                                 l1960 E194  
                                                 l1952 E14A  
                                                 l1936 266A  
                                                 l1928 264A  
                                                 l3561 DE3C  
                                                 l3545 DD16  
                                                 l3537 DC1E  
                                                 l3625 034E  
                                                 l3481 D008  
                                                 l3465 4FF2  
                                                 l2761 B4AC  
                                                 l2745 B3EA  
                                                 l2729 B322  
                                                 l2673 B1BA  
                                                 l2681 B01A  
                                                 l2921 F904  
                                                 l3641 236A  
                                                 l1769 32D8  
                                                 l3385 41A8  
                                                 l2913 161C  
                                                 l1777 D94E  
                                                 l1849 03CA  
                                                 l1961 E198  
                                                 l1953 E15C  
                                                 l1945 E0E8  
                                                 l1937 266E  
                                                 l1929 264E  
                                                 l3562 DE48  
                                                 l3538 DC1A  
                                                 l3618 02EA  
                                                 l3490 D0CC  
                                                 l3482 D004  
                                                 l3466 4FFC  
                                                 l2770 B51A  
                                                 l2762 B4B8  
                                                 l2754 B47E  
                                                 l2746 B3F4  
                                                 l2682 B02A  
                                                 l2674 AFB2  
                                                 l3642 232C  
                                                 l1882 EA02  
                                                 l1786 DA96  
                                                 l1778 D9F4  
                                                 l1970 E1BC  
                                                 l1962 E19C  
                                                 l1954 E16E  
                                                 l1946 E0EC  
                                                 l1938 2672  
                                                 l3563 DE4A  
                                                 l3547 DD3C  
                                                 l3571 CCAE  
                                                 l3619 02DE  
                                                 l3491 D0D0  
                                                 l2843 F3FE  
                                                 l2763 B4C6  
                                                 l2755 B48A  
                                                 l2739 B40C  
                                                 l2747 B402  
                                                 l2691 B0C4  
                                                 l2675 AFC2  
                                                 l3635 22D8  
                                                 l3723 3B5C  
                                                 l1883 E8F0  
                                                 l2915 16C6  
                                                 l1795 DB8E  
                                                 l1787 DA9E  
                                                 l1779 D9A0  
                                                 l1971 E1C0  
                                                 l1963 E1A0  
                                                 l1955 E180  
                                                 l1947 E0F0  
                                                 l3572 CCAA  
                                                 l3484 D064  
                                                 l3476 CFC0  
                                                 l2780 B5FC  
                                                 l2772 B55E  
                                                 l2924 F966  
                                                 l3644 239E  
                                                 l3636 22D2  
                                                 l3652 155A  
                                                 l3732 58B0  
                                                 l2940 C9EA  
                                                 l3724 3AFA  
                                                 l1884 E918  
                                                 l2916 16C2  
                                                 l1796 DBA2  
                                                 l1980 E1E4  
                                                 l1972 E1C4  
                                                 l1964 E1A4  
                                                 l1956 E184  
                                                 l1948 E102  
                                                 l3557 DDAA  
                                                 l3573 CCBE  
                                                 l3485 D028  
                                                 l3477 CFBC  
                                                 l2837 F3C2  
                                                 l3717 50DA  
                                                 l2765 B500  
                                                 l2749 B42C  
                                                 l2693 B0EA  
                                                 l2685 B05C  
                                                 l3709 45EA  
                                                 l2941 CA20  
                                                 l3725 3B52  
                                                 l1885 E9C0  
                                                 l1877 1D44  
                                                 l1789 DB14  
                                                 l1973 E1C8  
                                                 l1965 E1A8  
                                                 l1957 E188  
                                                 l1949 E114  
                                                 l3590 CF5A  
                                                 l3574 CCDC  
                                                 l3494 D13C  
                                                 l3718 50D4  
                                                 l2782 B676  
                                                 l2790 B654  
                                                 l2766 B4CE  
                                                 l2694 B0FA  
                                                 l2678 AFF4  
                                                 l3638 231A  
                                                 l2950 CC06  
                                                 l2942 CA56  
                                                 l1990 E208  
                                                 l1982 E1E8  
                                                 l1974 E1CC  
                                                 l1966 E1AC  
                                                 l1958 E18C  
                                                 l3559 DDEE  
                                                 l3591 CF78  
                                                 l3567 CC6E  
                                                 l3495 D104  
                                                 l2783 B610  
                                                 l2775 B5B6  
                                                 l2767 B4D8  
                                                 l2687 B082  
                                                 l3663 5774  
                                                 l3655 15BC  
                                                 l2943 CA8C  
                                                 l2935 C912  
                                                 l1991 E20C  
                                                 l1983 E1EC  
                                                 l1975 E1D0  
                                                 l1967 E1B0  
                                                 l1959 E190  
                                                 l3568 CC6A  
                                                 l3488 D0E0  
                                                 l2792 B65C  
                                                 l2784 B624  
                                                 l2768 B4E6  
                                                 l2688 B092  
                                                 l3656 1564  
                                                 l2944 CAC2  
                                                 l2960 F604  
                                                 l1992 E210  
                                                 l1984 E1F0  
                                                 l1976 E1D4  
                                                 l1968 E1B4  
                                                 l3585 CED4  
                                                 l3569 CC7E  
                                                 l3489 D0BE  
                                                 l3673 3070  
                                                 l2793 B66E  
                                                 l2777 B5D2  
                                                 l2697 B12C  
                                                 l2945 CAF8  
                                                 l2937 C948  
                                                 l2961 F69A  
                                                 l1985 E1F4  
                                                 l1977 E1D8  
                                                 l1969 E1B8  
                                                 l3578 CE9C  
                                                 l3498 D126  
                                                 l2778 B5E4  
                                                 l3658 1602  
                                                 l2946 CB2E  
                                                 l2938 C97E  
                                                 l2962 F6CC  
                                                 l3690 14F4  
                                                 l1986 E1F8  
                                                 l1978 E1DC  
                                                 l3587 CF18  
                                                 l3579 CE7E  
                                                 l3499 D12A  
                                                 l3675 30AC  
                                                 l2795 B68E  
                                                 l2787 B632  
                                                 l2699 B152  
                                                 l2947 CB64  
                                                 l2939 C9B4  
                                                 l3683 4A84  
                                                 l1987 E1FC  
                                                 l1979 E1E0  
                                                 l3588 CF36  
                                                 l3676 30EE  
                                                 l2980 4860  
                                                 l2796 B6BA  
                                                 l2788 B646  
                                                 l2948 CB9A  
                                                 l1996 4764  
                                                 l1988 E200  
                                                 l3669 4FA4  
                                                 l2981 4874  
                                                 l2949 CBD0  
                                                 l1997 4748  
                                                 l1989 E204  
                            ?__offset_from_file_number 0060  
                                                 l2798 B6C4  
                                                 l2966 C506  
                                                 l3695 4456  
                                                 l2959 F710  
                                                 l3687 142A  
                                                 l2967 C51C  
                                                 l1999 474C  
                                                 l3696 441C  
                                                 l3689 1486  
                                                 l2999 399E  
                  __end_of__encoder_next_arc_step_size 3F34  
                          __encoder_next_arc_step_size 3EC4  
                        __size_of_encoder_statemachine 0868  
                                ??i2_SYSTEM_Initialize 0001  
                                                 STR_1 A314  
                                                 STR_2 A31D  
                                                 STR_3 A314  
                                                 STR_4 A31D  
                                                 STR_5 A314  
                                                 STR_6 A324  
                                                 STR_7 A30B  
                                                 STR_8 A30B  
                                                 STR_9 A30B  
                                ??_USBCtrlTrfTxService 0001  
                                                 _UCFG 000F39  
                                 _configFile_extention 02D3  
                                                 _UEP0 000F26  
                                                 _UEP1 000F27  
                                     ?_fat_create_file 00AC  
                                                 _UEIE 000F37  
                                                 u9805 3D7E  
                                                 _UEIR 000F63  
                                                 _UCON 000F65  
                                                 u9930 09C4  
                                                 u9695 3C20  
                                                 u9785 46BE  
                                                 _TMR2 000FCC  
                          __size_ofi2_USBStallEndpoint 0106  
                 __motor_run@maximum_distance_in_steps 009C  
                                   ?__find_nth_cluster 0097  
                                       ??_encoder_init 0060  
                              ??_fat_get_format_status 008B  
                                 api_parse@out_idx_ptr 00CB  
                                       _ResetSenseData 42E4  
                                                 _enc1 0154  
                                                 _enc2 0153  
               USBStdFeatureReqHandler@current_ep_data 001B  
                                                 _pDst 014F  
                                                 _atoi 22D0  
                                                 _atol 1518  
                                                 _main 3576  
                              _bit_pattern_verticalbar A2D5  
                                                 _itoa 4F7E  
                             ??i2_USBTransferOnePacket 0005  
                                  _use_cw_limit_string A2A5  
                                                 _ltoa 4A56  
                          __size_of_APP_DeviceMSDTasks 0012  
                                                 fsr0h 000FEA  
                                                 fsr1h 000FE2  
                              __end_of_display_prepare AF94  
                                                 indf0 000FEF  
                                                 fsr2h 000FDA  
                                                 fsr0l 000FE9  
                                                 indf1 000FE7  
                                                 indf2 000FDF  
                                                 fsr1l 000FE1  
                                                 fsr2l 000FD9  
                                      _USBDeviceAttach 5366  
                                                 btemp 005F  
                                                 _utoa 3068  
                               __CFG_DSWDTOSC$T1OSCREF 000000  
                           ??_ExternalFlash_SectorRead 0093  
                      __size_of_motor_schedule_command 00AC  
                         ?i2_ExternalFlash_MediaDetect 0001  
                            _ExternalFlash_MediaDetect 5986  
                                                 prodh 000FF4  
                                                 prodl 000FF3  
     __get_available_offset_from_buffer@minimum_offset 0060  
                       fat_modify_file@number_of_bytes 00BD  
                                                 start 908E  
                      __end_of_APP_DeviceMSDInitialize 5920  
                         ?__motor_get_speed_in_degrees 0087  
                                      ___fldiv@new_exp 007F  
                                _display_get_character 5486  
                        motor_steps_from_degrees@steps 008B  
                                 ??_USBCheckHIDRequest 0001  
                                     ?_MSDWriteHandler 0001  
                              __end_of_fat_modify_file E7F4  
                        ??__encoder_next_arc_step_size 0062  
                                  ??__find_nth_cluster 009B  
                       ??_MSDProcessCommandMediaAbsent 00A7  
                           __end_of_USBCheckStdRequest 2480  
                               ??_USBCtrlTrfOutHandler 0003  
                         ??__flash_copy_page_to_buffer 0076  
                       ?__flash_write_page_from_buffer 0073  
                                         ___param_bank 000000  
                            ??_USBStdFeatureReqHandler 0018  
                                         _USBOutHandle 0143  
                     __end_of__fat_sector_from_cluster 5834  
                               __get_available_cluster 26F8  
                        __write_value_to_offset@buffer 0062  
                               __get_item@value_string 0062  
                           __end_ofi2__i2c_eeprom_busy 56CC  
                        __size_of__display_padded_itoa 00E2  
                      __end_of__parse_set_manual_speed 3A76  
                      __size_of__flash_write_to_buffer 0052  
                             ??_USBStdGetStatusHandler 0001  
                        __write_value_to_offset@offset 0060  
                                       ?_USBDeviceInit 0001  
                                    __flash_get_status 52FE  
                 __make_cluster_chain@sector_in_buffer 00A6  
                           i2c_eeprom_writeUint32@data 0028  
                     __fat_offset_from_cluster@cluster 0060  
                    motor_speed_from_index@speed_index 0093  
                             _motor_steps_from_degrees 1D92  
                                        __CFG_PLLDIV$2 000000  
                                 _configFile_used_name 02C0  
                           __end_of_motor_speed_lookup 9461  
                        i2c_display_write_fixed@length 0067  
                                                l12121 DE3C  
                                                l13185 C80E  
                                                l12545 0B38  
                                                l13189 C838  
                                                l12901 F1FE  
                                                l12823 441C  
                                                l14423 1CA8  
                                                l16115 F8FC  
                                                l17101 4E2C  
                                                l15173 2366  
                                                l15405 3B92  
                                                l16151 F9F0  
                                                l16135 F95E  
                                                l14359 5592  
                                                l13833 3AFA  
                                                l15521 3F38  
                                                l17131 0C2A  
                                                l13763 271C  
                                                l13597 BF14  
                                                l15445 EA68  
                                                l14389 1BFC  
                                                l14831 F790  
                                                l15465 EB12  
                                                l15713 2DD6  
                                         spi_tx@length 0062  
                                                l13787 27BC  
                                                l15731 2E2A  
                                                l14845 F7D6  
                                                l14837 F79E  
                                                l15805 ED46  
                                                l17095 4E20  
                                                l15831 EDBE  
                                                l15815 ED6E  
                                                l15751 EC48  
                                                l14937 F866  
                                                l15817 ED76  
                                                l16811 093A  
                                                l17611 4668  
                                                l17427 FED2  
                                                l18243 A508  
                                                l15579 043A  
                                                l14955 555E  
                                                l15843 EDE4  
                                                l16645 E37E  
                                                l18229 A4BA  
                                                l16741 51F6  
                                                l15853 EE0C  
                                                l15765 EC90  
                                                l17607 464A  
                                                l16559 5402  
                                                l17455 FF34  
                                                l15855 EE14  
                                                l15945 2BF4  
                                                l15793 ED20  
                                                l15779 ECD8  
                                                l14999 D2FC  
                                                l19363 3EA4  
                                                l19355 E22E  
                                                l19365 3EBA  
                                                l19357 E346  
                                                l19367 3F14  
                                                l19369 3F2A  
                                        ___fltol@sign1 0068  
                                      __end_of___aldiv 2894  
                                   ?__flash_get_status 006C  
                                       ??_display_init 0081  
                                                ?_atoi 0066  
                                      __end_of___almod 2F12  
                                                ?_atol 006C  
                                      __end_of___fladd D2CA  
                                                ?_main 0001  
                  __end_of_initial_speed_manual_string A1FD  
                          _initial_speed_manual_string A1E8  
                                      __end_of___fldiv DE66  
                                                ?_itoa 0070  
                                      __end_of___flneg 53F8  
                                                STR_10 A30B  
                                                ?_ltoa 007A  
                                                STR_11 A30B  
                                                STR_12 A30B  
                                                STR_13 A30B  
                                                STR_14 A30B  
                                                STR_15 A2F6  
                                                STR_16 A302  
                                                STR_17 A32A  
                                                STR_18 A2E9  
                                      __end_of___flmul CF8E  
                                     ??__display_clear 0060  
                                      _cw_limit_string A2BC  
                    __size_of_USBCtrlEPServiceComplete 00FA  
                                      __end_of___fltol 21F2  
                                      __end_of___lldiv 39F2  
                                                ?_utoa 0067  
                                                u10200 DE20  
                                                u11000 4ACE  
                     MSDCheckForErrorCases@DeviceBytes 006A  
                                                u10300 CE40  
                                                u11030 4FDE  
                                                u10160 DDA6  
                                                u10305 CE36  
                                                u10420 2152  
                                                u10190 DDFC  
                                                u10350 CED0  
                                                u11150 443E  
                                                u10425 2148  
                                                u10290 CCCA  
                                                u11410 D82E  
                                                u10380 CF26  
                                                u10460 21CA  
                                                u10540 0364  
                                                u11228 F0F4  
                                                u11420 D830  
                                                u11308 D650  
                                                u11500 41E2  
                                                u11157 4434  
                                                u11229 F108  
                                                u11309 D664  
                                                u10390 CF44  
                                                u11510 41F0  
                                                u11175 F072  
                                                u13200 DA00  
                                                u11520 41FE  
                                      __end_of___llmod 41BA  
                               __end_of_USBDeviceTasks 0122  
                                                u13210 DA2A  
                                                u13130 2CBC  
                                                u11530 420A  
                                                u10900 0BB2  
                                                u13220 DA36  
                                                u13140 2CDC  
                                                u11508 41E6  
                                                u11285 D618  
                                                u11605 45B0  
                                                u11438 D83C  
                                                u14030 0664  
                                                u13230 DA62  
                                                u11518 41F4  
                                                u11439 D850  
                                                u11615 55CC  
                                                u10920 0BC6  
                                                u11368 D724  
                                                u11536 420C  
                                                u11528 4202  
                                                u11480 41C6  
                                                u11369 D738  
                                                u10850 0B7E  
                                                u12450 C06E  
                                                u14018 0632  
                                                u13410 1C9E  
                                                u12610 277C  
                                                u11490 41D4  
                                                u14019 0646  
                                                u12460 C080  
                                                u12380 BF44  
                                                u12348 BE38  
                                                u14044 067C  
                                                u13420 1CA8  
                                                u13340 55B2  
                                                u13260 DAEC  
                                                u13180 D986  
                                                u12349 BE4C  
                                                u14045 0676  
                                                u12358 BE6C  
                                                u14054 06B6  
                                                u12710 3B20  
                                                u11830 39A2  
                                                u12630 27BC  
                                                u12359 BE80  
                                                u14055 06B0  
                                                u14151 4BFE  
                                                u14135 4968  
                                                u10960 52E2  
                                                u10880 0B98  
                                                u14240 EA7C  
                                                u13280 DB68  
                                                u11488 41CA  
                                                u10970 52AE  
                                                u12490 C10E  
                                                u14250 EAF2  
                                                u13450 3CE2  
                                                u12650 32C4  
                                                u13290 DB74  
                                                u11498 41D8  
                                                u15220 282E  
                                                u13460 E814  
                                                u11860 4176  
                                                u14500 E660  
                                                u14180 3BE0  
                                                u11790 C7A0  
                                                u12398 BF68  
                                                u14094 0714  
                                                u14078 06DE  
                                                u16030 E55E  
                                                u14430 1378  
                                                u12399 BF7C  
                                                u14095 070E  
                                                u14079 06F4  
                                                u13551 F7A8  
                                                u13720 FDD6  
                                                u15400 D094  
                                                u14280 EB26  
                                                u14440 13AA  
                                                u13465 E808  
                                                u14505 E656  
                                                u15410 D0A4  
                                                u14290 EB80  
                                                u12690 40E0  
                                                u14450 13C4  
                            ?_USBCtrlEPServiceComplete 0001  
                                                u14435 136E  
                                                u15420 D0A6  
                                                u14700 ED3E  
                                                u14620 2E60  
                                                u13485 E8AC  
                                                u14445 13A0  
                                                u14390 0402  
                                                u15280 2EB8  
                                                u14800 EE3E  
                                                u14720 ED6E  
                                                u14640 EC72  
                                                u15610 D234  
                                                u15450 D0E8  
                                                u14395 03F8  
                                                u14740 EDA0  
                                                u14660 ECBA  
                                                u17150 31DE  
                                                u17310 B08E  
                                                u17230 AFBE  
                                                u13790 462C  
                                                u14590 2E0C  
                                                u14840 2C24  
                                                u17400 B18E  
                                                u17320 B0BE  
                                                u17240 AFEE  
                                                u14760 EDDC  
                                                u14680 ED02  
                                                u17170 31F2  
                                                u16530 4E60  
                                                u15660 D28A  
                                                u15580 D21C  
                                                u14940 F944  
                                                u14780 EE0C  
                                                u16630 2FCE  
                                                u17350 B0F6  
                                                u17270 B026  
                                                u15840 E378  
                                                u16800 FF98  
                                                u18160 F3AC  
                                                u18240 A4EA  
                                                u17360 B126  
                                                u17280 B056  
                                                u18170 F3BC  
                                                u16491 F75C  
                                                u15860 E3AE  
                                                u18180 F3D2  
                                                u17540 B2EA  
                                                u14980 F9DC  
                                                u18190 F3E2  
                                                u17550 B31C  
                                                u17390 B15E  
                                                u14895 051C  
                                                u19137 4C10  
                                                u16770 FEF6  
                                      __end_of___lwdiv 4AFE  
                                                u19147 4C24  
                                                u17580 B354  
                                                u19157 48C4  
                                                u17830 B54E  
                                                u17590 B386  
                                                u19167 48D6  
                                                u19177 48E0  
                                                u17850 B5A4  
                         __flash_write_to_buffer@start 0073  
                                                u17851 B5A2  
                                                u18740 35B2  
                          __size_of_motor_change_speed 000A  
                                      __end_of___lwmod 5006  
                                                i2l300 3344  
                                                i2l220 3494  
                                                i2l214 28DC  
                                                i2l222 34AA  
                                                i2l231 1788  
                                                i2l232 1732  
                                                i2l160 002C  
                                                i2l321 3432  
                                                i2l145 0168  
                                                i2l250 25A8  
                                                i2l226 3796  
                                                i2l322 342C  
                                                i2l162 0052  
                                      __end_of_dc_arc1 9F2E  
                                                i2l307 5046  
                                                i2l315 5254  
                                                i2l147 0190  
                                                i2l155 FFF2  
                                      __end_of_dc_arc2 9EDE  
                                                i2l340 2990  
                                                i2l260 0E46  
                                                i2l332 447A  
                                                i2l180 5126  
                                                i2l236 17B2  
                                                i2l308 5044  
                                                i2l316 5252  
                                                i2l172 00E0  
                                                i2l164 0068  
                                                i2l156 0002  
                                        __CFG_WDTEN$ON 000000  
                                                i2l253 2620  
                                                i2l245 2576  
                                                i2l341 2994  
                                                i2l261 0E24  
                                                i2l149 01C8  
                                                i2l165 0074  
                                                i2l157 000A  
                                                i2l254 25E8  
                                                i2l342 2A12  
                                                i2l334 44C4  
                                                i2l174 00FE  
                                                i2l166 009C  
                                                i2l247 2580  
                                                i2l343 29D8  
                                                i2l263 0EBA  
                                                i2l167 00A6  
                                                i2l159 0020  
                                                i2l264 0EA0  
                                                i2l184 1230  
                                                i2l192 1172  
                                                i2l432 252E  
                                                i2l280 0868  
                                                i2l272 223A  
                                                i2l360 23CC  
                                                i2l176 011A  
                                                i2l249 25E0  
                                                i2l345 29F8  
                                                i2l425 24CC  
                                                i2l281 0764  
                                                i2l361 23DE  
                                                i2l169 00B8  
                                                i2l186 125A  
                                                i2l426 249C  
                                                i2l274 22AE  
                                                i2l362 23E4  
                                                i2l179 5118  
                                                i2l283 0776  
                                                i2l355 243C  
                                                i2l188 12D8  
                                                i2l436 24EE  
                                                i2l428 24DE  
                                                i2l372 DE86  
                                                i2l284 0800  
                                                i2l364 23EA  
                                                i2l356 23B8  
                                                i2l437 2504  
                                                i2l429 24BA  
                                                i2l381 DFDE  
                                                i2l373 DE8C  
                                                i2l293 3380  
                                                i2l365 2406  
                                                i2l534 0DEE  
                                                i2l438 250E  
                                                i2l550 2B56  
                                                i2l286 0806  
                                                i2l294 3316  
                                                i2l366 241E  
                                                i2l358 23C0  
                                                i2l535 0D5A  
                                                i2l439 2524  
                                                i2l391 E06A  
                                                i2l383 DFA8  
                                                i2l375 DEF4  
                                                i2l287 085C  
                                                i2l359 23C6  
                                                i2l384 DFC4  
                                                i2l537 0DE6  
                                                i2l545 2B88  
                                                i2l393 E0BC  
                                                i2l377 DF3C  
                                                i2l289 0862  
                                                i2l297 3396  
                                                i2l562 2B5C  
                                                i2l546 2AF0  
                                                i2l386 E02A  
                                                i2l298 3326  
                                                i2l387 E036  
                                                i2l379 DF5E  
                                                i2l299 332A  
                                                i2l900 4B0C  
                                                i2l820 38EA  
                                                i2l388 E0B0  
                                                i2l821 38F2  
                                                i2l822 38FA  
                                                i2l904 4B1E  
                                                i2l816 391C  
                                                i2l824 3904  
                                                i2l906 4B2A  
                                                i2l826 390E  
                                                i2l780 49CA  
                                                i2l783 4A00  
                                                _UADDR 000F38  
                                                i2l897 4B3C  
                                                i2l898 4B02  
          __end_of_motor_calculate_position_in_degrees 2114  
         __size_of_motor_calculate_position_in_degrees 00DE  
                 ?_motor_calculate_position_in_degrees 0001  
                ??_motor_calculate_position_in_degrees 0087  
                  _motor_calculate_position_in_degrees 2036  
                                      __end_of_dc_main A0BE  
                                                _TMR0H 000FD7  
                                                _TMR0L 000FD6  
                                                _PORTA 000F80  
                                                _PORTE 000F84  
                                                _RPOR4 000EC4  
                                     ??__display_start 007C  
                                                _USTAT 000F64  
                                      __end_of_dc_zero 9E8E  
                                     __i2c_read@length 0067  
                                 _beep_duration_string A27B  
                          ?_ExternalFlash_CapacityRead 0060  
                                      ?_display_update 0001  
                             __find_nth_cluster@offset 009B  
                   __size_of_USBCtrlEPAllowStatusStage 00C4  
                                      _i2c_eeprom_read 4956  
                                  ___lmul@multiplicand 0064  
                            __end_of__find_nth_cluster 330A  
                             __find_nth_cluster@sector 009F  
                                     __end_of_MSDTasks E5C0  
                                           i2memcpy@d1 0001  
                                       __CFG_FCMEN$OFF 000000  
                                      __read_fat@value 0095  
                                   _USBCheckMSDRequest 2ADC  
                                           i2memcpy@s1 0003  
                      __end_of_USBCtrlEPAllowDataStage 34DE  
            motor_divide_jump@target_position_in_steps 00C4  
                                                _sd000 A2E5  
                               __write_value_to_offset 5260  
                                                _sd001 A0FE  
                                                _sd002 A132  
                                                _sd003 A1A1  
                       ?_USBIncrement1msInternalTimers 0001  
                       __size_of_MSDTransferTerminated 0056  
                                  ??__flash_get_status 006E  
                        __end_of_MSDTransferTerminated 4A02  
                                         _gblCBWLength 015E  
                __i2c_display_send_init_sequence@F6939 02AF  
                                           i2memset@p1 0001  
                               ?_MSDCheckForErrorCases 006A  
                                ??__system_timer0_init 0060  
                                 _use_ccw_limit_string A26D  
                               _configFile_readDefault 421E  
                                      __end_of_isdigit 577C  
                                i2USBStallEndpoint@dir 0001  
                               __end_of_ResetSenseData 4346  
                                                atoi@a 006B  
                                                atol@a 0075  
                                                atol@c 0079  
                                                atoi@s 0066  
                                                atol@s 006C  
                              __end_of__backlight_init 59CC  
                                                _ultoa 141A  
                             __parse_command_long@data 00B3  
                            __data_sector_from_cluster 5900  
                            fat_get_format_status@cntr 008D  
                      __end_of_motor_postscaler_lookup 9A16  
                       __end_of_motor_prescaler_lookup 9DE4  
                                                pclath 000FFA  
                           __end_of__display_itoa_long 0CE8  
                                                tablat 000FF5  
                           i2__i2c_write@slave_address 0009  
                            __size_of_USBStallEndpoint 010A  
                                  ?_USBCheckMSDRequest 0001  
                                      _MSDCommandState 0162  
                          ??_ExternalFlash_SectorWrite 008D  
                                                plusw1 000FE3  
                                                plusw2 000FDB  
                                          ?_USBMSDInit 0001  
             ExternalFlash_WriteProtectStateGet@config 0060  
                                                ttemp5 0060  
                                                ttemp6 0063  
                                                ttemp7 0067  
                                                utoa@c 006F  
                                                utoa@v 006D  
                                                status 000FD8  
                          ?__flash_copy_page_to_buffer 0073  
                                    __CFG_DSWDTPS$8192 000000  
                                                wtemp8 0060  
                             __end_ofi2_ResetSenseData 440A  
                motor_go_to_steps_position@overhead_cw 00B3  
                                      __end_of_stricmp 4638  
                                      __end_of_strncmp 3B78  
                                      __end_of_toupper 58B4  
                                     __end_ofi2_memcpy 4584  
                                     __end_ofi2_memset 5538  
                       ??_MSDComputeDeviceInAndResidue 0062  
                                 __size_of__parse_item 0368  
                                       _MSDReadHandler F044  
          i2c_display_program_custom_character@address 007F  
                         __size_of_USBStdSetCfgHandler 00DE  
                    fat_create_file@number_of_clusters 00B8  
                        ??i2_ExternalFlash_MediaDetect 0003  
                          __end_of__make_cluster_chain DBAC  
                    __make_cluster_chain@first_cluster 0095  
                                      __initialization 360C  
                         ?_motor_decrease_manual_speed 0001  
                        fat_read_from_file@file_number 00D7  
                            __end_of__flash_get_status 5332  
                         fat_get_file_information@data 008F  
                          fat_read_from_file_fast@data 00A9  
              __end_ofi2_ExternalFlash_MediaInitialize 589C  
             __size_ofi2_ExternalFlash_MediaInitialize 001A  
                __end_of_ExternalFlash_MediaInitialize 57C0  
               __size_of_ExternalFlash_MediaInitialize 0022  
                    ??i2_ExternalFlash_MediaInitialize 0003  
                     ?i2_ExternalFlash_MediaInitialize 0001  
                      i2_ExternalFlash_MediaInitialize 5882  
                        _ExternalFlash_MediaInitialize 579E  
                 __offset_from_file_number@file_number 0062  
                                          _system_init 19EC  
                              __end_of_fat_resize_file 141A  
                                         __end_of_atoi 23A8  
                                         __end_of_atol 1614  
                                         __end_of_main 360C  
                                         __end_of_itoa 4FC2  
               __end_of__ic2_display_set_ddram_address 5714  
              __size_of__ic2_display_set_ddram_address 0024  
                       __ic2_display_set_ddram_address 56F0  
                                         __end_of_ltoa 4AAA  
                      __end_of_i2c_display_write_fixed 4A56  
                                         __end_of_utoa 3112  
                        fat_read_from_file_fast@length 00A5  
                        fat_read_from_file_fast@offset 00BF  
                             __parse_command_short@cmd 00C3  
                   fat_read_from_file_fast@read_length 00C3  
                                     __end_of_i2c_init 581A  
                           __display_signed_itoa@value 008F  
                        fat_read_from_file_fast@sector 00BB  
                             __end_of__i2c_acknowledge 597C  
                          configFile_write@file_number 00E4  
                           __size_of_motor_divide_jump 00AA  
                         __motor_run@distance_in_steps 008F  
                       ??__encoder_next_setup_stepsize 0062  
                                 ??_USBCheckMSDRequest 000C  
                    __fill_buffer_get_status@outBuffer 006B  
                                 _adc_read_temperature F22E  
                                       __CFG_OSC$HSPLL 000000  
               MSDComputeDeviceInAndResidue@DiExpected 0060  
                              _USBCheckMSDRequest$2534 000C  
                              _USBCheckMSDRequest$2535 000E  
                            __size_of_USBCtrlEPService 009A  
                 __end_of_motor_divide_jump_to_nearest FD42  
                __size_of_motor_divide_jump_to_nearest 014E  
                         _motor_divide_jump_to_nearest FBF4  
                                         __get_fat@idx 0060  
                                         __get_fbr@idx 0060  
                                    ?i2__i2c_wait_idle 0001  
                                               ??_atoi 0068  
                                               ??_atol 0070  
                                 api_prepare@outBuffer 0072  
                                               ??_main 00FD  
                                     __end_of__i2c_get 5972  
                                               ??_itoa 0076  
                                               ??_ltoa 0082  
                               _motor_schedule_command 2F12  
                                   USBStallEndpoint@ep 0065  
                                               ??_utoa 006D  
                                        __activetblptr 000003  
                                      ?_USBDeviceTasks 0001  
                             _fat_get_file_information 3C70  
                                   __write_root@offset 008C  
                                         __get_mbr@idx 0060  
           __end_of_ExternalFlash_WriteProtectStateGet 59D0  
          __size_of_ExternalFlash_WriteProtectStateGet 0004  
                 ??_ExternalFlash_WriteProtectStateGet 0062  
                  ?_ExternalFlash_WriteProtectStateGet 0060  
                   _ExternalFlash_WriteProtectStateGet 59CC  
                                  __find_nth_cluster@n 0099  
                                          ?_USBSuspend 0001  
                                   __write_root@sector 008A  
                                   ??i2__i2c_wait_idle 0001  
                                 __size_of_api_prepare 00DE  
                                _motor_final_stepcount 0127  
                        __get_available_cluster@offset 0091  
                                   _motor_items_in_cue 5952  
                        i2c_eeprom_writeUint32@address 0026  
                        __get_available_cluster@sector 0093  
                        __flash_write_to_buffer@buffer 0079  
                              __end_of_USBDeviceAttach 5398  
                               __flash_write_to_buffer 4B52  
               __end_of__ic2_display_set_cgram_address 558C  
              __size_of__ic2_display_set_cgram_address 002A  
                       __ic2_display_set_cgram_address 5562  
                                     ___llmod@dividend 0060  
                                               _ADRESH 000FC4  
                                               _ADRESL 000FC3  
                     __end_of__fat_offset_from_cluster 584E  
                                               _CCPR1L 000FBB  
                                     _ccw_limit_string A2B2  
                                               _EECON2 000FA7  
                                               _DMABCH 000F66  
                                               _DMABCL 000F67  
                                      ?_ResetSenseData 0001  
                          ??__get_available_root_entry 0095  
                                               ?_ultoa 006D  
                                           __i2c_start 59A2  
                               SYSTEM_Initialize@state 0064  
                                           __i2c_write 4C44  
                                     __end_of_adc_init 484E  
                                               i2l1203 3AD2  
                                               i2l1204 3AA2  
                                               i2l1141 59AC  
                                               i2l1126 59B4  
                            fat_read_from_file@cluster 00D9  
                                  ?_motor_items_in_cue 0001  
                                               i2l1066 51AE  
                                               i2l1158 4EE6  
                                               i2l1159 4ECA  
                                               i2l2480 B852  
                                               i2l2481 B8A8  
                                               i2l2482 B8D2  
                                               i2l2650 1856  
                                               i2l2492 BBB6  
                                               i2l2484 BB7C  
                                               i2l2660 18C6  
                                               i2l2652 186C  
                                               i2l2644 187A  
                                               i2l3701 5526  
                                               i2l2477 B850  
                                               i2l2653 1874  
                                               i2l3702 5516  
                                               i2l2654 18EA  
                                               i2l2662 18DC  
                                               i2l2495 BD1C  
                                               i2l2487 B9C6  
                                               i2l2479 BDA6  
                                               i2l2663 18E4  
                                               i2l2647 1834  
                                               i2l2496 BC72  
                                               i2l2488 BA1A  
                 __flash_write_page_from_buffer@buffer 0075  
                                               i2l2489 BB3C  
                                               i2l2657 18A4  
                                               i2l2498 BD7A  
                                               i2l3695 4572  
                                               i2l3696 453A  
                      ??_APP_DeviceCustomHIDInitialize 000D  
                             ?__fill_buffer_get_status 006B  
                                     __end_of__get_fat 479E  
                                     __end_of__get_fbr E356  
                                     __end_of__get_mbr 26F8  
                                               _OSCCON 000FD3  
                          __flash_partial_read@address 0083  
                         ??_motor_go_to_steps_position 00AB  
                                       __CFG_WDTPS$512 000000  
                                               _RPOR21 000ED5  
                                               _RPOR23 000ED7  
                                       __CFG_WPCFG$OFF 000000  
                                __display_itoa@missing 00AB  
                               __end_of_MSDReadHandler F22E  
                                    __spi_init@details 0060  
                              i2c_eeprom_write@address 000B  
                                     __end_of___xxtofl 03AC  
                             i2USBTransferOnePacket@ep 0009  
                                     ??__i2c_wait_idle 0060  
                                    ??i2_USBDeviceInit 0009  
                               ?_display_get_character 0060  
                                     ?_display_prepare 0001  
                      __size_ofi2_USBTransferOnePacket 0102  
                         ?__divide_jump_size_decrement 0001  
                              ?_motor_speed_from_index 0093  
                          __flash_partial_read@command 007F  
                                       __CFG_WPDIS$OFF 000000  
                                     _configFile_write C194  
                                     __read_fat@offset 0093  
                                     __end_of_fat_init 5900  
                                     __read_fat@sector 0091  
                                    _shortPacketStatus 0170  
                     __end_of_initial_speed_arc_string A249  
                                       __CFG_XINST$OFF 000000  
                                     _i2c_eeprom_write 3A76  
                                     ?_fat_modify_file 00A1  
                                _i2c_eeprom_readUint32 54B4  
                             __size_of_configFile_read 01A4  
                                  _motor_current_speed 00FE  
                                      USBDeviceTasks@i 001F  
                                          i2memcpy@tmp 000B  
                                         _CCPTMRS0bits 000F52  
                                    _motor_process_cue 3DDE  
                          USBStdFeatureReqHandler@pUEP 0019  
                             USBTransferOnePacket@data 0061  
                           USBCtrlTrfInHandler@lastDTS 0002  
                                 __size_of_encoder_run 00F4  
                         __end_of__flash_set_page_size 3FA2  
                                      ??_USBDeviceInit 0068  
                   __flash_copy_page_to_buffer@command 0079  
                             flash_partial_read@length 008B  
                                               ___lmul 484E  
                              __end_of_cw_limit_string A2C5  
                                               _gblCBW 0200  
                                            ??___aldiv 0068  
                             ?_motor_clear_command_cue 0001  
                                    _fat_get_file_size 3CEA  
                                            ??___almod 0068  
                                   __size_of__i2c_read 0094  
                                            ??___fladd 007A  
                                               ___wmul 5630  
                                   __size_of__i2c_send 000A  
                                            ??___fldiv 0076  
                                            ??___flneg 0072  
                                       __CFG_STVREN$ON 000000  
                       __read_value_from_offset@buffer 0062  
                                            ??___flmul 0076  
                                   __size_of__i2c_stop 0008  
                                            ??___fltol 0064  
                        ??_motor_decrease_manual_speed 0064  
                                            ??___lldiv 0068  
                                            ??___llmod 0068  
          i2SYSTEM_Initialize@pll_startup_counter_3132 0003  
            SYSTEM_Initialize@pll_startup_counter_3132 0062  
                                            ??___lwdiv 0064  
                                   ?_motor_process_cue 0001  
                         __size_of_flash_partial_write 006C  
                                           _SoftDetach 015D  
                                            ??___lwmod 0064  
                                               _config 01A1  
                                               _buffer 0A00  
                                    _USBEnableEndpoint 5108  
                       __read_value_from_offset@offset 0060  
                      __size_of_USBStdGetStatusHandler 00A0  
                                ?_adc_read_temperature 0001  
                                 ??_motor_items_in_cue 0060  
                            _configFile_used_extention 02D0  
                            i2c_eeprom_readUint32@data 007D  
                                               _memcpy 440A  
                                   ?_fat_get_file_size 0095  
                                               _memset 53F8  
                     __end_of__sector_from_file_number 53C8  
                              __end_of_i2c_eeprom_read 49AC  
                                               _params 021F  
                                               clear_0 3654  
                                               clear_1 3666  
                                               clear_2 3672  
                                               clear_3 367E  
                                               clear_4 3690  
                            _ExternalFlash_SectorWrite 5296  
                                    api_parse@inBuffer 00C4  
                                      __CFG_CLKOEC$OFF 000000  
                                     __end_of_inq_resp A184  
                                     __motor_run@speed 0093  
                                 __end_of_encoder_init 56F0  
                                               _spi_tx 46EC  
                                   ?_USBEnableEndpoint 0009  
                                   _flash_partial_read 5680  
               __make_cluster_chain@number_of_clusters 0097  
                                               _tx_buf 02B8  
                                i2c_display_init@F6942 02A6  
                                               _strlen 50CA  
                              _motor_current_stepcount 0058  
                           __parse_command_long@length 00B9  
             i2c_display_program_custom_character@cntr 0080  
                              motor_set_zero@direction 00A7  
                                     __end_of_tmr0_isr 51B8  
                        __size_of_USBTransferOnePacket 0106  
                                  __size_of_USBMSDInit 010E  
                          i2c_display_write_fixed@data 0065  
                        ?_motor_divide_jump_to_nearest 0001  
                               __size_of__flash_wakeup 0058  
                                               itoa@cp 0076  
                                  ??_motor_process_cue 00A0  
                        __size_of__display_signed_itoa 0044  
                                            ??_isdigit 0060  
                           __end_of_motor_steps_lookup 982F  
                                __end_of_fat_find_file 1CAC  
                 __size_of__motor_get_speed_in_degrees 013A  
                              ?_motor_set_manual_speed 0062  
                                               ltoa@cp 0082  
                       __parse_command_long@out_buffer 00B5  
                                  ??_fat_get_file_size 0099  
                        __size_of__parse_command_short 0174  
                     __size_of__read_value_from_offset 0048  
                     __size_of_fat_read_from_file_fast 0226  
                         ?__divide_jump_size_increment 0001  
                  __size_of_motor_go_to_steps_position 0320  
                                         __mediumconst 9092  
                           __size_of__find_nth_cluster 00A6  
                                               tblptrh 000FF7  
                                               tblptrl 000FF6  
                                               tblptru 000FF8  
                                     __end_of_spi_init 508A  
                     __size_of_APP_DeviceMSDInitialize 0010  
                                      _motor_direction 0155  
                      ??__flash_compare_page_to_buffer 0076  
                                  ??_USBEnableEndpoint 000A  
                                  ?_flash_partial_read 0087  
                                     _i2c_display_init 4BF4  
                                               ultoa@c 0079  
                                        spi_tx_rx@data 0064  
                    __size_of__fat_sector_from_cluster 001A  
                                               ultoa@v 0075  
                           __end_of__root_is_available 40E8  
                            ?__fat_sector_from_cluster 0060  
                                        spi_tx_tx@data 0064  
                                            ??_stricmp 0065  
                                          _CtrlTrfData 000D38  
                                    __system_pin_setup 40E8  
                                            ??_strncmp 0066  
               motor_go_to_steps_position@overhead_ccw 00B7  
                                            ??_toupper 0060  
                                   __size_of__add_item 00FA  
                                 __size_of__write_root 004C  
                                     ?__backlight_init 0001  
                    i2ExternalFlash_MediaDetect@config 0001  
                      ExternalFlash_MediaDetect@config 0060  
                                 _controlTransferState 016F  
                           ??_APP_DeviceCustomHIDTasks 00CF  
                                 __CFG_LS48MHZ$SYS48X8 000000  
                                         ___xxtofl@arg 006A  
                                         ___xxtofl@exp 0069  
                                    _SYSTEM_Initialize 4638  
                                         ___xxtofl@val 0060  
                                fat_modify_file@length 00A5  
                                   ?__system_pin_setup 0001  
                                fat_modify_file@offset 00BB  
                             __end_of__i2c_eeprom_busy 5608  
                                           __accesstop 0060  
                              __end_of__initialization 3696  
                       __end_of_motor_speed_from_index 58CA  
                                fat_modify_file@sector 00B5  
                    MSDCheckForErrorCases@MSDErrorCase 006F  
                                           ___flneg@f1 006E  
                                      ?_MSDReadHandler 0001  
                                         ?i2__i2c_send 0001  
                         fat_resize_file@first_cluster 00B8  
                                         ?i2__i2c_stop 0001  
                                 __end_of_display_init 517E  
                                   ?_SYSTEM_Initialize 0001  
                               __size_of__display_itoa 0224  
                                        ___rparam_used 000001  
        motor_isr@steps_until_standstill_if_accelerate 003E  
                             __size_of_USBStallHandler 0044  
                                           ___fltol@f1 0060  
                         __end_of__i2c_not_acknowledge 5968  
                      ExternalFlash_SectorWrite@config 0084  
                      ExternalFlash_SectorWrite@buffer 008A  
                            __end_of_motor_process_cue 3E54  
                          __end_of__parse_command_long 43A8  
                                   __size_of__get_data 002A  
                                   __size_of__get_date 000C  
                            __end_of_fat_get_file_size 3D64  
                                   __size_of__get_item 018A  
                                  __size_of_USBSuspend 0030  
                                   __size_of__get_time 000C  
                                   __size_of__get_root 0198  
                                  ??__system_pin_setup 0060  
                                  _motor_maximum_speed 013F  
                                 ??_flash_partial_read 008F  
                  __end_of_motor_increase_manual_speed 5868  
                          _motor_increase_manual_speed 584E  
                                       __pcstackCOMRAM 0001  
                           __size_of__flash_get_status 0034  
                            __end_of_USBEnableEndpoint 5144  
                  __size_of_ExternalFlash_CapacityRead 0014  
                                        __end_of_sd000 A2E9  
                                        __end_of_sd001 A132  
                                        __end_of_sd002 A160  
                                        __end_of_sd003 A1BB  
                                            ?_MSDTasks 0001  
                                         __pidataBANK2 4D34  
                                         __pidataBANK4 4BA4  
                             __parse_item@value_string 007C  
                                     ?_fat_resize_file 00AC  
                                  ??_SYSTEM_Initialize 0060  
                            __get_available_root_entry 558C  
                 ExternalFlash_SectorWrite@sector_addr 0086  
                      __end_of_bit_pattern_verticalbar A2DD  
                     __size_of_USBCtrlEPAllowDataStage 009A  
                                   __size_of__read_fat 0058  
                                      _active_protocol 01BF  
                                  i2USBStallEndpoint@p 0007  
                        __size_of_USBConfigureEndpoint 0094  
                   __size_of_ExternalFlash_MediaDetect 000A  
                          __end_of_USBCtrlTrfInHandler 2A1C  
                                        __end_of_ultoa 1518  
                                  display_prepare@cntr 00C9  
                                  display_prepare@temp 00BE  
                                         _gblSenseData 0100  
                          motor_change_speed@new_speed 0060  
                                      _MSDErrorHandler 09AA  
                       ?_ExternalFlash_MediaInitialize 0060  
                 __sector_from_file_number@file_number 0062  
                               i2_USBTransferOnePacket 121A  
                       __end_of_motor_set_manual_speed 4D34  
                                   __size_of_api_parse 012A  
                                   _flash_sector_write 4C94  
                                           _dc_divide1 9F7E  
                                           _dc_divide2 9F2E  
                                   _fat_read_from_file 1CAC  
                                   __size_of__spi_init 0038  
                                            ?i2_memcpy 0001  
                                            ?i2_memset 0001  
                              flash_sector_write@match 0083  
                __end_of_MSDProcessCommandMediaPresent C194  
               __size_of_MSDProcessCommandMediaPresent 03EC  
                        _MSDProcessCommandMediaPresent BDA8  
                               flash_partial_read@data 008D  
                            __end_of__system_pin_setup 4152  
                               flash_partial_read@page 0087  
                                        __get_data@idx 0060  
                 __size_of_motor_decrease_manual_speed 0022  
                             ??_USBCtrlTrfSetupHandler 001E  
                              _USBTicksSinceSuspendEnd 0164  
                motor_nonzero_steps_from_degrees@steps 0093  
                    __flash_copy_page_to_buffer@buffer 0075  
                                     ?_USBDeviceAttach 0001  
                            __end_of_SYSTEM_Initialize 4692  
                                    __end_of__i2c_read 3734  
                                    __end_of__i2c_send 5986  
                               _USBStdGetStatusHandler 330A  
                                  ?_flash_sector_write 007F  
                                  USBStallEndpoint@dir 0060  
                                    __end_of__i2c_stop 59A2  
                                          ?__i2c_start 0001  
                                              ??_ultoa 0075  
                      ?__encoder_next_divide_step_size 0001  
                     ??__encoder_next_divide_step_size 0060  
                                  ?_fat_read_from_file 00C9  
                                          ?__i2c_write 0065  
                        __read_value_from_offset@value 0067  
                                           __pbssBANK0 00FE  
                                           __pbssBANK1 0100  
                                           __pbssBANK2 0200  
                                           __pbssBANK3 0300  
                                           _dc_startup 0400  
                     __size_of_i2c_display_write_fixed 0054  
                                     _USBStallEndpoint 0F04  
                                           _gblNumBLKS 022E  
                                            ?_i2c_init 0001  
                            _overshoot_in_steps_string A212  
                                     _mediaInformation 0284  
                       __size_of_fat_get_format_status 00AE  
                       fat_get_file_information@offset 0094  
                       __get_available_cluster@cluster 008F  
                        __end_of_fat_get_format_status 2E64  
                                        __flash_wakeup 48A6  
                             __fill_buffer_get_display 2B98  
                              ?__get_available_cluster 008B  
                                            ?__i2c_get 0001  
                          __size_of_USBWakeFromSuspend 0038  
                           ??_motor_steps_from_degrees 008B  
                                          _pBDTEntryIn 011B  
                               ?_i2c_eeprom_readUint32 0079  
                          __size_of_i2c_display_cursor 0022  
                     __end_of_USBCtrlEPServiceComplete 1808  
                __end_of_APP_DeviceCustomHIDInitialize 5366  
               __size_of_APP_DeviceCustomHIDInitialize 0034  
                        _APP_DeviceCustomHIDInitialize 5332  
                          MSDTransferTerminated@handle 000C  
                   __size_of__data_sector_from_cluster 0010  
                   ExternalFlash_SectorSizeRead@config 0060  
                                 USBCtrlTrfRxService@i 0001  
                                              ?___lmul 0060  
                                           ??_MSDTasks 00AC  
                               __display_itoa@decimals 0097  
                         __parse_jump_steps@out_buffer 00A9  
                               ??_adc_read_temperature 0087  
                                              ?___wmul 0060  
                         __end_of_encoder_statemachine B7FC  
                                           _fat_format EC3E  
                                 ??_flash_sector_write 0083  
                    __size_of__fat_offset_from_cluster 001A  
                       __flash_write_to_buffer@command 007A  
                                 ??_fat_read_from_file 00D3  
                         __size_of__flash_partial_read 007A  
                            ?__fat_offset_from_cluster 0060  
                                    __end_of__add_item 170E  
                                            MSDTasks@i 00B1  
                                              ?_memcpy 0060  
                                              ?_memset 0060  
                                           __motor_run C546  
                                       ___lmul@product 0068  
               __motor_run@maximum_distance_in_degrees 009A  
                                           _device_dsc A25B  
                  fat_get_file_information@file_number 0096  
                                     ??_display_update 0070  
                                        __get_root@idx 0060  
                                     ?_i2c_eeprom_read 0071  
                                     _USBCtrlEPService 33AA  
                                    ??_configFile_read 01C3  
                                           _ep_data_in 013C  
                                              ?_spi_tx 0060  
                                   __display_clear@col 0063  
                                            ?_adc_init 0001  
                                   __display_clear@row 0062  
                                              ?_strlen 0060  
                                            ?__get_fat 0060  
                                            ?__get_fbr 0060  
                __data_sector_from_cluster@fat_cluster 0060  
                                            ?__get_mbr 0060  
                          __end_of_USBCtrlTrfRxService 0F04  
            __ic2_display_set_ddram_address@data_array 006B  
                                        __display_itoa EA1A  
                              ?__write_value_to_offset 0060  
                                   _USBCheckStdRequest 23A8  
                                   __size_of_motor_isr 05AC  
                                    _configDescriptor1 A0BE  
                 __size_of__divide_jump_size_decrement 006E  
                                              i2l12427 24B4  
                                              i2l13365 2232  
                                              i2l12743 4B2A  
                                              i2l13295 5516  
                                              i2l12739 4B0C  
                                              i2l12791 2580  
                                              i2l16547 453A  
                                              i2l17355 0160  
                                              i2l17383 01C0  
                                              i2l17561 00B0  
                              ??_MSDCheckForErrorCases 006E  
                                              i2l18611 BD7A  
                                              i2l18531 B8A8  
                                              i2l19377 3934  
                                              i2l19379 3968  
                                    i2__i2c_write@data 0006  
                                            ?___xxtofl 0060  
                                    i2__i2c_write@cntr 000A  
                              ?_configFile_readDefault 0001  
                          __end_ofi2_SYSTEM_Initialize 4B52  
                                           ??i2_memcpy 0007  
                                           ??i2_memset 0007  
                                           _flash_init 5920  
                   __fill_buffer_get_display@outBuffer 0064  
                             ?__parse_set_manual_speed 0064  
                          __end_of_USBCtrlTrfTxService 2628  
                                    __end_of__get_data 5562  
                                    __end_of__get_date 5946  
                                  _USBStdSetCfgHandler 21F2  
                                    __end_of__get_item FA80  
                                   i2__i2c_eeprom_busy 56A6  
                                    __end_of__get_time 593A  
                     __end_of_maximum_speed_arc_string A237  
                                    __end_of__get_root F8F6  
                                   __size_of_spi_tx_rx 0098  
                                   __size_of_spi_tx_tx 0090  
                                            ?_fat_init 0001  
                                              _RPINR21 000EFC  
                                              _RPINR22 000EFD  
                                              _SSP1ADD 000FC8  
                        i2c_display_init@init_sequence 006B  
                                    __end_of_dc_manual 9E3E  
                         __end_of__display_padded_itoa 1F58  
                                              _SSP1BUF 000FC9  
                                              _RXADDRH 000F68  
                                              _RXADDRL 000F69  
                           __end_ofi2_USBStallEndpoint 121A  
                       ??_motor_divide_jump_to_nearest 00C3  
                                              _TXADDRH 000F6A  
                                              _TXADDRL 000F6B  
                                  ?_USBCheckStdRequest 0001  
                         __size_of_USBStdGetDscHandler 012C  
                                   _motor_speed_lookup 9093  
                                 __flash_set_page_size 3F34  
                                    __end_of_dc_setup1 A06E  
                                    __end_of_dc_setup2 A01E  
                                              _UIEbits 000F36  
                         __parse_set_manual_speed@data 0064  
              motor_nonzero_steps_from_degrees@degrees 008F  
                   __end_of_motor_go_to_steps_position D5EA  
                           _motor_go_to_steps_position D2CA  
             __end_of_motor_nonzero_steps_from_degrees 4E1A  
            __size_of_motor_nonzero_steps_from_degrees 004C  
                   ??_motor_nonzero_steps_from_degrees 0093  
                    ?_motor_nonzero_steps_from_degrees 008F  
                     _motor_nonzero_steps_from_degrees 4DCE  
                                  i2c_eeprom_read@addr 0077  
                           __end_of_APP_DeviceMSDTasks 58F0  
                                              _UIRbits 000F62  
                                    __end_of__read_fat 47F6  
                                  i2c_eeprom_read@data 0073  
          MSDCheckForErrorCases@HostMoreDataThanDevice 006E  
                    __size_of__sector_from_file_number 0030  
                __end_of__flash_compare_page_to_buffer 3C70  
               __size_of__flash_compare_page_to_buffer 007C  
                        __flash_compare_page_to_buffer 3BF4  
                                  ?i2__i2c_eeprom_busy 0001  
                                           ??_i2c_init 0060  
                                     __CFG_CFGPLLEN$ON 000000  
                             __i2c_write@slave_address 0068  
                            ?__sector_from_file_number 0060  
                                         ??_USBMSDInit 000C  
                        fat_read_from_file@return_code 00D8  
                                    __read_fat@cluster 008F  
                       __end_of__get_available_cluster 27C6  
                                       ?__flash_wakeup 0001  
               fat_read_from_file_fast@working_cluster 00BD  
             __encoder_next_arc_step_size@old_stepsize 0060  
                               fat_find_file@extension 008D  
                                    __end_of_api_parse 09AA  
                                    ?i2_ResetSenseData 0001  
                                           ??__i2c_get 0060  
                                    _MSDProcessCommand 0622  
                           __display_padded_itoa@value 0078  
                           __size_of_motor_process_cue 0076  
                             fat_find_file@file_number 0091  
                                        __i2c_send@dat 0060  
                            __flash_get_status@command 006E  
                                            ?_tmr0_isr 0001  
                                              __Hparam 0000  
                      ??_USBIncrement1msInternalTimers 0001  
                                 ?_USBStdSetCfgHandler 0001  
                           __size_of_fat_get_file_size 007A  
            __end_of__get_available_offset_from_buffer 4528  
           __size_of__get_available_offset_from_buffer 005E  
                  ??__get_available_offset_from_buffer 0064  
                   ?__get_available_offset_from_buffer 0060  
                    __get_available_offset_from_buffer 44CA  
                                    __end_of__spi_init 51F0  
                          __size_of_USBCheckHIDRequest 00D6  
                                              __Lparam 0000  
                 __size_of__divide_jump_size_increment 0040  
                                   ??i2_ResetSenseData 0001  
                                   __display_itoa@text 0098  
                             __size_of_fat_create_file 013C  
                                    __end_of_hid_rpt01 A1A1  
                                   ?_MSDProcessCommand 0001  
                              __end_of_MSDErrorHandler 0AC4  
                           _MSDTransferTerminated$2623 000E  
                           __size_of_USBEnableEndpoint 003C  
                                         ?_system_init 0001  
                             _inverse_direction_string A249  
                      motor_steps_from_degrees@degrees 0087  
                                __size_of_encoder_init 0024  
                           ??_fat_get_file_information 0091  
                                 ??_USBCheckStdRequest 001E  
                                              ___aldiv 27C6  
                                              ___almod 2E64  
                                            ?_spi_init 0001  
                                              ___fladd CF8E  
                        __size_of_USBCtrlTrfOutHandler 0060  
                                   __display_itoa_long 0BDA  
                i2ExternalFlash_MediaInitialize@config 0001  
                  ExternalFlash_MediaInitialize@config 0060  
                                              ___fldiv DBAC  
                                     _ToSendDataBuffer 0338  
                                              ___flneg 53C8  
                                      __size_of___lmul 0058  
                    __end_of__data_sector_from_cluster 5910  
                                              ___flmul CC3C  
                                              ___fltol 2114  
                                              ___lldiv 396E  
                             __end_of_ccw_limit_string A2BC  
                                     ??_USBDeviceTasks 001F  
                                      __size_of___wmul 0028  
                                              ___llmod 4152  
                                              ___lwdiv 4AAA  
                              ?_motor_schedule_command 00A0  
                                    ??_USBStallHandler 0001  
                                              ___lwmod 4FC2  
                                              _dc_arc1 9EDE  
                                              _dc_arc2 9E8E  
                          motor_schedule_command@speed 00A4  
       i2c_display_program_custom_character@data_array 0074  
                                              _dc_main A06E  
                                    ?__i2c_acknowledge 0001  
               __ic2_display_set_cgram_address@address 006D  
                           __end_of_motor_change_speed 599A  
                                 ??i2__i2c_eeprom_busy 0006  
                                              _dc_zero 9E3E  
                                  __size_of__i2c_start 0008  
                              __size_of_motor_arc_move 00F0  
                                              __pcinit 360C  
                                      __size_of_memcpy 0060  
                                  __size_of__i2c_write 0050  
                                      __size_of_memset 0030  
                             __size_of_MSDWriteHandler 02EC  
                            __end_of_configDescriptor1 A0FE  
                       __end_of__write_value_to_offset 5296  
                                  ??_MSDProcessCommand 00A7  
                                              __ramtop 0F00  
                         ExternalFlash_SectorRead@page 0093  
                               __display_itoa_u16@text 007A  
                                           ??_adc_init 0060  
                                              __ptext0 3576  
                                              __ptext1 19EC  
                                              __ptext2 57E0  
                                              __ptext3 57FE  
                                              __ptext4 54B4  
                                              __ptext5 4956  
                                              __ptext6 36A0  
                                              __ptext7 595E  
                                              __ptext8 5968  
                                              __ptext9 5972  
                                       ?__display_itoa 0095  
                                              _inPipes 0052  
                                       fat_format@cntr 0084  
                    __size_of_ExternalFlash_SectorRead 0034  
                                      __size_of_spi_tx 005A  
                          _USBDeferOUTDataStagePackets 0165  
                                   ??__i2c_acknowledge 0060  
                                            _T0CONbits 000FD5  
                                           ??__get_fat 0062  
                                           ??__get_fbr 0062  
                       __end_of_configFile_readDefault 4282  
                                  ?__display_itoa_long 00AD  
                                           ??__get_mbr 0062  
                            ?_ExternalFlash_SectorRead 008B  
              motor_divide_jump@target_divide_position 00C8  
                                 __motor_run@direction 0099  
                                      __size_of_strlen 003E  
                          __end_of__system_timer0_init 550C  
                              __read_value_from_offset 4E64  
                              _fat_read_from_file_fast E7F4  
                                         ??_USBSuspend 0018  
                                            _T2CONbits 000FCA  
                                   __end_of_USBMSDInit 0DF6  
                                              _isdigit 575A  
                                     ??_ResetSenseData 0060  
                              ?__flash_write_to_buffer 0073  
                             __end_of_configFile_write C546  
                                           ??___xxtofl 0064  
                              _APP_DeviceMSDInitialize 5910  
                                              _msd_cbw 000D40  
                                     ___aldiv@dividend 0060  
                                              _msd_csw 000D80  
                                 __i2c_not_acknowledge 595E  
                             __offset_from_file_number 55B6  
                             __end_of_i2c_eeprom_write 3AF8  
                          __display_itoa_long@decimals 00B1  
                                      i2_USBDeviceInit 0122  
                                     i2USBDeviceInit@i 0009  
                           __size_of__system_pin_setup 006A  
                      ?__ic2_display_set_ddram_address 0001  
                     ??__ic2_display_set_ddram_address 006A  
                                           ??_fat_init 008F  
                    __parse_set_manual_speed@new_speed 006B  
                             ??_i2c_eeprom_writeUint32 002C  
                   __size_of_ExternalFlash_SectorWrite 0034  
                                ?__flash_set_page_size 0001  
                                   __end_of_USB_CD_Ptr 9DEE  
                                           _msd_buffer 000600  
                           __size_of_SYSTEM_Initialize 005A  
                      __size_of_USBCtrlTrfSetupHandler 0090  
                                              _stricmp 45DE  
                                __size_of_display_init 003A  
                              __size_of__flash_is_busy 0024  
                         fat_get_file_size@file_number 00A1  
                                              _strncmp 3AF8  
                                              _toupper 589C  
                                  _flash_partial_write 4010  
                                 end_of_initialization 3696  
                  __end_of_maximum_speed_manual_string A1E8  
                          _maximum_speed_manual_string A1D3  
                              ??_display_get_character 0061  
                                _MSDTransferTerminated 49AC  
                __flash_compare_page_to_buffer@command 007B  
                       ?_MSDProcessCommandMediaPresent 0001  
                                   __end_of_USB_SD_Ptr 9DEC  
                           __end_of_bit_pattern_degree A2D5  
                                  i2__i2c_write@length 0008  
                              __size_of_motor_set_zero 00AA  
                            __size_ofi2__i2c_wait_idle 0058  
                                  i2c_eeprom_write@dat 0013  
                                              memcpy@d 0066  
                                              memcpy@n 0064  
                                              memcpy@s 0068  
                                        ??__parse_item 007E  
              __motor_get_speed_in_degrees@speed_index 0087  
                                  _pBDTEntryEP0OutNext 005C  
                            __end_of_MSDProcessCommand 0754  
                                              itoa@buf 0070  
                                              memset@c 0062  
                                              itoa@val 0072  
                                              memset@n 0064  
                                              memset@p 0066  
                                         _encoder_init 56CC  
                                      _USB1msTickCount 012F  
                                 ??__display_itoa_long 00B4  
                                            i2u1111_40 25D2  
                             __flash_partial_read@data 0079  
                                            i2u1111_47 25C8  
                                            i2u1113_40 2612  
                                            i2u1113_47 2608  
                                            i2u1203_40 07CC  
                                            i2u1203_47 07C2  
                                            i2u1204_40 07FC  
                                            i2u1204_47 07F2  
                                            i2u1206_40 0852  
                             ?_USBStdFeatureReqHandler 0001  
                                            i2u1206_47 0848  
                                            i2u1072_40 2B38  
                             __flash_partial_read@page 0073  
                                            i2u1410_45 3A82  
                                            i2u1411_40 3ADA  
                                            i2u1228_40 E050  
                        i2c_eeprom_write@slave_address 0024  
                                              ltoa@buf 007A  
                                            i2u1290_40 492C  
                                            i2u1291_40 4938  
                                            i2u1290_48 492E  
                                            i2u1292_40 4942  
                                            i2u1291_48 493A  
                                            i2u1292_46 4944  
                                              ltoa@val 007C  
                                            i2u1199_40 2266  
                                            i2u1287_40 4908  
                                            i2u1704_40 011E  
                                            i2u1288_40 4914  
                                            i2u1287_48 490A  
                                            i2u1289_40 4920  
                                            i2u1288_48 4916  
                                            i2u1570_40 455C  
                                            i2u1289_48 4922  
                                            i2u1570_47 4552  
                                    __end_of_motor_isr BDA8  
                                            i2u1672_40 0184  
                                            i2u1850_41 B824  
                                            i2u1675_40 0224  
                                            i2u1860_40 BB92  
                                            i2u1861_40 BBB2  
                                            i2u1853_41 B8EC  
                                ??_USBStdSetCfgHandler 0018  
                                            i2u1855_40 B9B6  
                      __parse_command_long@out_idx_ptr 00B7  
                                      ___lldiv@divisor 0064  
                                           ??_tmr0_isr 0001  
                                      ___lldiv@counter 006C  
                                 __size_ofi2__i2c_send 0008  
                                 __size_ofi2__i2c_stop 0008  
                      ?__ic2_display_set_cgram_address 0001  
                     ??__ic2_display_set_cgram_address 006A  
                                   __end_of_USBSuspend 5458  
                          __end_of_use_cw_limit_string A2B2  
                                  _motor_period_lookup 9A16  
              __fill_buffer_get_mode_details@outBuffer 0060  
                              _USBCtrlEPAllowDataStage 3444  
                         i2c_eeprom_readUint32@address 0079  
                                    __end_of_spi_tx_rx 3576  
                       __end_of_motor_schedule_command 2FBE  
                                    __end_of_spi_tx_tx 3858  
                             __end_of_i2c_display_init 4C44  
                                     ___aldiv@quotient 006A  
                                              postdec1 000FE5  
                                              postdec2 000FDD  
         __make_cluster_chain@different_sector_cluster 009F  
                 __end_of_ExternalFlash_SectorSizeRead 5952  
                __size_of_ExternalFlash_SectorSizeRead 000C  
                         _ExternalFlash_SectorSizeRead 5946  
                                           ??_spi_init 0063  
                                              postinc0 000FEE  
                                              postinc1 000FE6  
                                              postinc2 000FDE  
                                          ?_fat_format 0001  
                                 ?_flash_partial_write 007F  
                     __size_of__fill_buffer_get_status 01F0  
                                              utoa@buf 0067  
                                           _motor_init 57E0  
              MSDProcessCommandMediaPresent@sectorSize 009E  
                                           _motor_mode 0156  
                             _USBCtrlEPServiceComplete 170E  
                                              utoa@val 0069  
                                            _MSD_State 0163  
                                           _motor_stop 4EF4  
              __end_of__cluster_from_sector_and_offset 5630  
             __size_of__cluster_from_sector_and_offset 0028  
                    ??__cluster_from_sector_and_offset 0064  
                     ?__cluster_from_sector_and_offset 0060  
                      __cluster_from_sector_and_offset 5608  
                                          ?__motor_run 008F  
                                              strlen@s 0060  
                          __size_of_USBCheckMSDRequest 00BC  
                                        ??_api_prepare 0074  
                           _USBStatusStageEnabledFlag1 0168  
                           _USBStatusStageEnabledFlag2 0167  
                             flash_partial_write@match 0087  
                                       _bit_pattern_ae A2C5  
                                   USBEnableEndpoint@p 000A  
                         __size_of__make_cluster_chain 02D6  
                                            _PORTAbits 000F80  
                                            _PORTDbits 000F83  
                                            _PORTEbits 000F84  
                             flash_partial_write@start 0081  
                       __end_of__flash_write_to_buffer 4BA4  
                                     __CFG_DSBOREN$OFF 000000  
                                   __get_item@item_ctr 006A  
                                         _display_init 5144  
motor_divide_jump_to_nearest@nearest_position_in_steps 00C3  
                                          ___fladd@grs 0085  
                   __size_of__get_available_root_entry 002A  
                                 spi_tx_rx@data_length 0066  
                                ?__i2c_not_acknowledge 0001  
                     __make_cluster_chain@next_cluster 00AA  
                               fat_modify_file@cluster 00B9  
                                          ?_flash_init 0001  
                                     __CFG_CPUDIV$OSC1 000000  
                      adc_read_temperature@temperature 008B  
                                        ___xxtofl@sign 0068  
                                            _TRISAbits 000F92  
                                            _TRISBbits 000F93  
                                            _TRISCbits 000F94  
                                   api_parse@outBuffer 00C7  
                                            _TRISDbits 000F95  
                                            _TRISEbits 000F96  
                     __size_of_motor_clear_command_cue 0006  
                                   _ReceivedDataBuffer 0378  
                                   _BothEP0OutUOWNsSet 016B  
                                          ___fldiv@grs 0081  
                                          ___fldiv@rem 007A  
                                        __pbssBIGRAMll 0800  
                                     ??_MSDReadHandler 0095  
                            __flash_partial_read@start 0075  
                            USBConfigureEndpoint@EPNum 0006  
                              _i2c_display_write_fixed 4A02  
                           motor_arc_move@arc_in_steps 00AC  
                                    __CFG_SOSCSEL$HIGH 000000  
                           ?_USBCtrlEPAllowStatusStage 0001  
                                        ?i2__i2c_start 0001  
                                 _encoder_statemachine AF94  
                  USER_USB_CALLBACK_EVENT_HANDLER@size 0014  
                                        ?i2__i2c_write 0006  
                              __size_of__display_clear 004A  
                                            _USTATcopy 01C1  
                                      ??__flash_wakeup 0068  
        MSDProcessCommandMediaPresent@NumBytesInPacket 009D  
  __step_position_from_divide_position@divide_position 0087  
                 __end_of__encoder_next_setup_stepsize 3EC4  
                __size_of__encoder_next_setup_stepsize 0070  
                         __encoder_next_setup_stepsize 3E54  
                                          ___flmul@grs 007B  
                              __size_of__display_start 00B2  
                         __end_of_USBTransferOnePacket 1114  
                                   _motor_steps_lookup 9461  
                                          _CCP1CONbits 000FBA  
                                    ?__i2c_eeprom_busy 0001  
                                __i2c_eeprom_busy@busy 0065  
                  __end_ofi2_ExternalFlash_MediaDetect 59D4  
                                i2c_eeprom_read@length 0075  
                          i2_ExternalFlash_MediaDetect 59D0  
                    __parse_jump_steps@number_of_steps 00AF  
                         __end_of__display_signed_itoa 4F7E  
                     __end_of_motor_steps_from_degrees 1E76  
                  __end_of__motor_get_speed_in_degrees 0622  
                          __motor_get_speed_in_degrees 04E8  
                               i2c_display_cursor@line 006E  
                     __fat_sector_from_cluster@cluster 0060  
                                     __CFG_IOL1WAY$OFF 000000  
                                        ??_encoder_run 0001  
                         __end_of__parse_command_short FBF4  
                                   ??__i2c_eeprom_busy 0065  
                       ?__flash_compare_page_to_buffer 0073  
                        __fill_buffer_get_display@cntr 006C  
                                   __root_is_available 407C  
                        __fill_buffer_get_display@line 006D  
                                    __CFG_WPEND$PAGE_0 000000  
                   __flash_compare_page_to_buffer@page 0073  
                                  __CFG_MSSP7B_EN$MSK7 000000  
                                  __end_of__parse_item CC3C  
                   __make_cluster_chain@minimum_sector 009D  
                                     ?_MSDErrorHandler 0001  
                fat_resize_file@new_number_of_clusters 00B6  
                   __find_nth_cluster@sector_in_buffer 009D  
                         fat_resize_file@new_file_size 00AC  
                                     __write_root@data 0088  
                               _USBCtrlTrfSetupHandler 3858  
                                ??_flash_partial_write 0087  
                         __write_value_to_offset@value 0064  
                                 __display_padded_itoa 1E76  
                               __end_of_bit_pattern_ae A2CD  
                     ExternalFlash_CapacityRead@config 0060  
                              ?i2_USBTransferOnePacket 0001  
                             __size_of_display_prepare 0C64  
                        ??__motor_get_speed_in_degrees 0089  
                                __end_of_USBDeviceInit FFDC  
                __end_of_USBIncrement1msInternalTimers 57E0  
               __size_of_USBIncrement1msInternalTimers 0020  
                        _USBIncrement1msInternalTimers 57C0  
                                       __end_of___lmul 48A6  
                      __sector_from_file_number@sector 0063  
                                      ??__display_itoa 009A  
                        ?_ExternalFlash_SectorSizeRead 0060  
                                       __end_of___wmul 5658  
                          __size_of_motor_items_in_cue 000C  
                            ??__read_value_from_offset 0064  
                                  ?__root_is_available 0001  
                                    __size_of_MSDTasks 026A  
                            ??_fat_read_from_file_fast 00AF  
                             __end_of_USBStallEndpoint 100E  
                                            i2memcpy@d 0007  
                                            i2memcpy@n 0005  
                                    ??_fat_create_file 00B4  
                       adc_read_temperature@adc_result 0089  
                              __end_ofi2_USBDeviceInit 0268  
                                            i2memcpy@s 0009  
                             __size_of_fat_modify_file 0234  
                            ??_APP_DeviceMSDInitialize 000F  
                                            i2memset@c 0003  
                                            i2memset@n 0005  
                                            i2memset@p 0007  
                                       __end_of_memcpy 446A  
                                      _MSDRetryAttempt 015F  
                                 i2USBStallEndpoint@ep 0006  
                                       __end_of_memset 5428  
                                     __CFG_DSWDTEN$OFF 000000  
                                  _motor_arc_move$8784 00A7  
                                    _USBBusIsSuspended 016D  
                            flash_partial_write@length 0083  
                                       __end_of_spi_tx 4746  
                __get_available_root_entry@file_number 0095  
                                  fat_modify_file@data 00A7  
                                       __end_of_strlen 5108  
                         __display_padded_itoa@padding 008E  
                            __flash_set_page_size@size 0077  
                                  start_initialization 360C  
                                  fat_modify_file@root 00C3  
                              ?_USBStdGetStatusHandler 0001  
                                        ??__write_root 008A  
                             i2SYSTEM_Initialize@state 0005  
                        ExternalFlash_SectorWrite@page 008D  
                        USBCtrlTrfRxService@byteToRead 0002  
                               ??__flash_set_page_size 0073  
                                 display_prepare@space 00C8  
                                    ??_MSDWriteHandler 008F  
                                  __end_of_api_prepare 2036  
                    __end_of__get_available_root_entry 55B6  
                            __display_itoa_long@length 00B8  
  __step_position_from_divide_position@target_position 008B  
                           ??__fill_buffer_get_display 0067  
                      __size_of_i2c_eeprom_writeUint32 001A  
                                    __size_ofi2_memcpy 005C  
                           i2c_display_cursor@position 006D  
                               ?_MSDTransferTerminated 000C  
                                    __size_ofi2_memset 002C  
                                       ??i2__i2c_start 0001  
                                      _USBMSDOutHandle 014B  
                         __end_of_USBConfigureEndpoint 37C8  
                                ?_encoder_statemachine 0001  
                                       ??i2__i2c_write 0009  
                                         ??__i2c_start 0060  
                                         ??__i2c_write 0068  
                      __end_of_USBStdFeatureReqHandler E0E2  
                                  __flash_partial_read 3D64  
                                    USBStallEndpoint@p 0066  
                                  __size_of_fat_format 0216  
                                        _MSDHostNoData 015C  
                                 ??__root_is_available 008F  
                    __end_of_USBCtrlEPAllowStatusStage 2958  
                         ?__encoder_next_arc_step_size 0060  
                              ??_i2c_eeprom_readUint32 007D  
                             __end_of_USBCtrlEPService 3444  
                           __size_of_MSDProcessCommand 0132  
                                  __size_of__motor_run 038E  
                                            __i2c_read 36A0  
                                            __i2c_send 597C  
                                      ___llmod@divisor 0064  
                                            __i2c_stop 599A  
                        ?__encoder_next_setup_stepsize 0060  
                                      ___llmod@counter 0068  
              _ExternalFlash_MediaInitialize$intlevel0 57A4  
                                    __size_of_i2c_init 001C  
                           configFile_read@file_number 01FA  
                            ??_USBCtrlEPAllowDataStage 0002  
                                _motor_cue_write_index 0157  
                                      _configFile_name 02C8  
                      ??__fill_buffer_get_mode_details 0062  
                                      _configFile_read F5BA  
                                       USBDeviceInit@i 0068  
                  __end_of_motor_decrease_manual_speed 579E  
                          _motor_decrease_manual_speed 577C  
                             __size_of__backlight_init 0004  
                           __flash_partial_read@length 0077  
                        __root_is_available@first_byte 0094  
                               _pBDTEntryEP0OutCurrent 0151  
                               __size_of_fat_find_file 00E8  
                     __end_of_fat_get_file_information 3CEA  
                                          _DMACON1bits 000F88  
                               i2c_eeprom_write@length 000F  
                                          _DMACON2bits 000F86  
                                  __size_of_flash_init 000E  
                              USBTransferOnePacket@dir 0060  
                              USBTransferOnePacket@len 0063  
                                    __size_of__i2c_get 000A  
                                        _MSDTasks$2588 00AD  
                          MSDErrorHandler@OldMSD_State 0069  
                                        _MSDTasks$2589 00AF  
                       __end_ofi2_USBTransferOnePacket 131C  
                          __size_of_flash_partial_read 0026  
                                             ??___lmul 0068  
                                spi_init@configuration 0063  
                                ?__display_padded_itoa 0078  
                              flash_partial_read@start 0089  
                                             ??___wmul 0064  
                                  _USBStdGetDscHandler 0754  
                                 ?__flash_partial_read 0073  
                                          ?_motor_init 0001  
                                  __end_of_encoder_run 18FC  
                                    __CFG_ADCSEL$BIT12 000000  
                    __size_of_APP_DeviceCustomHIDTasks 00A8  
                           fat_get_file_size@file_size 009D  
                                          __pdataBANK2 0289  
                                          __pdataBANK4 0400  
                             motor_isr@steps_remaining 0040  
                                          ?_motor_stop 0001  
                            ?_APP_DeviceCustomHIDTasks 0001  
                                       _motor_arc_move 18FC  
                    __end_of_overshoot_in_steps_string A225  
                                 __size_of_system_init 00EC  
                                             ??_memcpy 0066  
                              __size_of__i2c_wait_idle 0064  
                                             ??_memset 0066  
                         __size_of__parse_command_long 0062  
                                   __end_of__i2c_start 59AA  
                                             ??_spi_tx 0064  
                                   __end_of__i2c_write 4C94  
                                     __get_item@buffer 0064  
                            __root_is_available@offset 0091  
                                             ??_strlen 0062  
                               ??__i2c_not_acknowledge 0060  
                                            ___fladd@a 0076  
                                            ___fladd@b 0072  
  motor_divide_jump_to_nearest@nearest_divide_position 00C7  
                                            __add_item 1614  
                               _USBActiveConfiguration 01C2  
                       __end_of_USBStdGetStatusHandler 33AA  
                                            ___fldiv@a 0072  
                                            ___fldiv@b 006E  
                             __size_of_fat_resize_file 00FE  
                             __fat_sector_from_cluster 581A  
                          api_parse@receivedDataLength 00C6  
                                     api_parse@out_idx 00CD  
                                    __size_of_adc_init 0058  
                                            ___flmul@a 0072  
                                            ___flmul@b 006E  
                                          __pbssCOMRAM 0052  
                                    __size_of__get_fat 0058  
                                    __size_of__get_fbr 0274  
                            ??_i2c_display_write_fixed 0068  
                                        __pcstackBANK0 0060  
                                        __pcstackBANK1 01C3  
                         __size_of_USBCtrlTrfInHandler 00C4  
                                    __size_of__get_mbr 00D0  
                         ??_ExternalFlash_CapacityRead 0064  
                       __size_of_MSDCheckForErrorCases 0116  
             __get_available_offset_from_buffer@buffer 0062  
                        __end_of_MSDCheckForErrorCases 0BDA  
                           fat_create_file@file_number 00BC  
                                    __size_of___xxtofl 0144  
                                            _gblBLKLen 022A  
             __get_available_offset_from_buffer@offset 0066  
                   __end_of_flash_command_pagesize_512 A2E5  
                           _flash_command_pagesize_512 A2E1  
                   __end_of_flash_command_pagesize_528 A2E1  
                           _flash_command_pagesize_528 A2DD  
                                       __flash_is_busy 5714  
                                 ?_USBStdGetDscHandler 0001  
                                         _isdigit$8180 0061  
         __end_of_i2c_display_program_custom_character 3BF4  
        __size_of_i2c_display_program_custom_character 007C  
               ??_i2c_display_program_custom_character 0070  
                ?_i2c_display_program_custom_character 006E  
                 _i2c_display_program_custom_character 3B78  
                                            __get_data 5538  
                                            __get_date 593A  
                                    _flash_sector_read 5658  
                                    __size_of_fat_init 0010  
                  fat_get_file_information@root_sector 0092  
                      __end_of__read_value_from_offset 4EAC  
                                            __get_item F8F6  
                      __end_of_fat_read_from_file_fast EA1A  
                                       _motor_set_zero 3112  
                          ?_motor_go_to_steps_position 00A7  
                                            __get_time 592E  
                                            __get_root F75E  
                               flash_sector_write@data 0081  
                                     i2__i2c_wait_idle 48FE  
                               flash_sector_write@page 007F  
                                  __end_of__write_root 4DCE  
                                            _dc_manual 9DEE  
                           __end_of_USBWakeFromSuspend 5260  
                                   ?_flash_sector_read 0087  
                           __end_of_i2c_display_cursor 575A  
                                          __parse_item C8D4  
                  __end_of__divide_jump_size_decrement 4010  
                          __divide_jump_size_decrement 3FA2  
                                           ?__i2c_read 0065  
                                           ?__i2c_send 0001  
                                            _dc_setup1 A01E  
                                            _dc_setup2 9FCE  
                                      _USBStallHandler 5006  
                             __display_padded_itoa@len 008C  
                                         _pBDTEntryOut 0121  
                                           ?__i2c_stop 0001  
                           fat_modify_file@file_number 00B7  
                             __display_padded_itoa@pos 008D  
                             __display_padded_itoa@tmp 0082  
                                            __read_fat 479E  
                          configFile_read@value_string 01EA  
                     __size_of__parse_set_manual_speed 0084  
                             __size_of_USBDeviceAttach 0032  
                     __end_of_ExternalFlash_SectorRead 52FE  
          __end_of__step_position_from_divide_position 1BC4  
         __size_of__step_position_from_divide_position 00EC  
                ??__step_position_from_divide_position 008B  
                 ?__step_position_from_divide_position 0087  
                  __step_position_from_divide_position 1AD8  
                   __get_available_cluster@skip_sector 008D  
                                   i2_USBStallEndpoint 1114  
                                     ___lwdiv@dividend 0060  
                                 _motor_cue_read_index 0158  
                                _fat_get_format_status 2DB6  
                    fat_read_from_file_fast@start_byte 00A1  
            motor_go_to_steps_position@target_position 00A7  
                                    fat_find_file@name 008B  
                       MSDProcessCommandMediaPresent@i 00A6  
                                  ??_flash_sector_read 008B  
                               _i2c_eeprom_writeUint32 5868  
                                            _api_parse 0880  
                                            __pintcode 9008  
                            fat_create_file@root_entry 00BD  
                               __end_of_motor_arc_move 19EC  
                              __fill_buffer_get_status EE54  
                                   _APP_DeviceMSDTasks 58DE  
                                        __pmediumconst 9092  
                                             ?___aldiv 0060  
                                    __size_of_tmr0_isr 003A  
                                             ?___almod 0060  
                                             ?___fladd 0072  
                                  fat_find_file@offset 0094  
                                ??__flash_partial_read 007B  
                               __parse_jump_steps@data 00A7  
                                             ?___fldiv 006E  
                                            __ptext100 3EC4  
                                            __ptext101 508A  
                                            __ptext110 EA1A  
                                            __ptext102 3FA2  
                                             ?___flneg 006E  
                                            __ptext111 50CA  
                                            __ptext103 A330  
                                            __ptext200 5428  
                                            __ptext120 53C8  
                                            __ptext112 4F7E  
                                            __ptext104 58B4  
                                            __ptext201 5006  
                                            __ptext121 CF8E  
                                            __ptext113 3068  
                                            __ptext105 04E8  
                                            __ptext210 550C  
                                            __ptext202 57C0  
                                            __ptext130 BDA8  
                                            __ptext122 FE90  
                                            __ptext114 4FC2  
                                            __ptext106 484E  
                                            __ptext211 330A  
                                            __ptext203 33AA  
                                            __ptext131 D5EA  
                                            __ptext123 53F8  
                                            __ptext115 4AAA  
                                            __ptext107 4F3A  
                                            __ptext220 5910  
                                            __ptext212 0754  
                                            __ptext204 4528  
                                            __ptext140 0AC4  
                                            __ptext132 59CC  
                                            __ptext124 5366  
                                            __ptext116 2E64  
                                            __ptext108 1E76  
                                            __ptext221 0CE8  
                                            __ptext213 DE66  
                                            __ptext205 3858  
                                            __ptext141 09AA  
                                            __ptext133 5296  
                                            __ptext125 4638  
                                            __ptext117 27C6  
                                            __ptext109 0BDA  
                                            __ptext230 0DF6  
                                            __ptext222 43A8  
                                            __ptext214 38E8  
                                            __ptext206 170E  
                                            __ptext150 52FE  
                                            __ptext142 0F04  
                                            __ptext134 4C94  
                                            __ptext126 58DE  
                                            __ptext118 4E1A  
                                            __ptext231 2894  
                                            __ptext223 5882  
                                            __ptext215 4AFE  
                                            __ptext207 3444  
                                            __ptext151 34DE  
                                            __ptext143 42E4  
                                            __ptext135 4B52  
                                            __ptext127 E356  
                                            __ptext119 F22E  
                                            __ptext232 2958  
                                            __ptext224 59D0  
                                            __ptext216 2ADC  
                                            __ptext208 23A8  
                                            __ptext160 440A  
                                            __ptext152 2A1C  
                                            __ptext144 52CA  
                                            __ptext136 37C8  
                                            __ptext128 0622  
                                            __ptext233 2556  
                                            __ptext225 5332  
                                            __ptext217 2480  
                                            __ptext209 21F2  
                                            __ptext161 F40C  
                                            __ptext153 5946  
                                            __ptext145 5658  
                                            __ptext137 4692  
                                            __ptext129 4282  
                        ??__divide_jump_size_decrement 0060  
                                            __ptext234 0000  
                                            __ptext226 121A  
                                            __ptext218 49AC  
                                            __ptext170 4346  
                                            __ptext162 2B98  
                                            __ptext154 58CA  
                                            __ptext146 3D64  
                                            __ptext138 3BF4  
                                            __ptext227 5108  
                                            __ptext219 1114  
                                            __ptext171 39F2  
                                            __ptext163 5486  
                                            __ptext155 579E  
                                            __ptext147 5714  
                                            __ptext139 F044  
                                            __ptext228 3734  
                                            __ptext180 0268  
                                            __ptext172 4CE4  
                                            __ptext164 0880  
                                            __ptext156 5986  
                                            __ptext148 48A6  
                                            __ptext229 446A  
                                            __ptext181 2114  
                                            __ptext173 5990  
                                            __ptext165 FA80  
                                            __ptext157 31BC  
                                            __ptext149 46EC  
                                            __ptext190 3A76  
                                            __ptext182 CC3C  
                                            __ptext174 FD42  
                                            __ptext166 4EF4  
                                            __ptext158 1F58  
                                            __ptext191 4EAC  
                                            __ptext183 DBAC  
                                            __ptext175 2F12  
                                            __ptext167 3112  
                                            __ptext159 EE54  
                                            __ptext192 56A6  
                                            __ptext184 100E  
                                            __ptext176 5952  
                                            __ptext168 D2CA  
                                            __ptext193 48FE  
                                            __ptext177 C546  
                                            __ptext169 59C2  
                                            __ptext194 59AA  
                                            __ptext186 517E  
                                            __ptext178 1D92  
                                            __ptext195 59B2  
                                            __ptext187 1808  
                                            __ptext179 2036  
                                            __ptext196 59BA  
                                            __ptext188 B7FC  
                                            __ptext197 FFDC  
                                            __ptext189 5868  
                                            __ptext198 0122  
                                            __ptext199 5228  
                                             ?___flmul 006E  
                                             ?___fltol 0060  
                                  fat_find_file@sector 0092  
                                             ?___lldiv 0060  
                                             ?___llmod 0060  
                          __size_of_flash_sector_write 0050  
                                             ?___lwdiv 0060  
                                            __spi_init 51B8  
                                             ?___lwmod 0060  
                           ??__offset_from_file_number 0062  
                          __size_of_fat_read_from_file 00E6  
                                            _hid_rpt01 A184  
                                  ?i2_USBStallEndpoint 0001  
                        __size_of_adc_read_temperature 01DE  
                        __parse_jump_steps@out_idx_ptr 00AB  
                                            _idle_rate 01C0  
                                   display_update@line 0070  
                                    __size_of_spi_init 0040  
                                     ___almod@dividend 0060  
                                     ?i2_USBDeviceInit 0001  
                                          _api_prepare 1F58  
                            fat_modify_file@start_byte 00A1  
                                      __i2c_write@data 0065  
                                      __i2c_write@cntr 0069  
                                  fat_create_file@name 00AC  
                                  ?_APP_DeviceMSDTasks 0001  
                            __size_ofi2_ResetSenseData 0062  
                   __flash_write_to_buffer@data_length 0077  
                                  fat_create_file@size 00B0  
                                           ?__add_item 0084  
                                 _USBTransferOnePacket 100E  
                    __size_of_motor_steps_from_degrees 00E4  
                           __make_cluster_chain@offset 00A8  
            __ic2_display_set_cgram_address@data_array 006A  
                            ?_motor_steps_from_degrees 0087  
                           ?_ExternalFlash_MediaDetect 0060  
                           __make_cluster_chain@sector 00A4  
                       ??_ExternalFlash_SectorSizeRead 0062  
                                 __display_signed_itoa 4F3A  
                  __end_of__divide_jump_size_increment 50CA  
                          __divide_jump_size_increment 508A  
                                    ??_display_prepare 00BC  
                                             ?_isdigit 0001  
                              _motor_clear_command_cue 59C2  
                                 __CFG_RTCOSC$T1OSCREF 000000  
                                 __parse_command_short FA80  
                               fat_read_from_file@data 00D1  
                  __fill_buffer_get_display@secondHalf 0066  
                                    ?_configFile_write 0001  
                               __end_of__flash_is_busy 5738  
                                        _fat_find_file 1BC4  
                                    __display_itoa@len 00AA  
                                    __display_itoa@pos 00AC  
                                    __display_itoa@tmp 00A0  
                               fat_read_from_file@root 00DD  
                                    __display_itoa_u16 2C50  
                                    ?_i2c_eeprom_write 000B  
                         __end_of_USBCtrlTrfOutHandler 44CA  
                             __size_of_i2c_eeprom_read 0056  
                                    ??_fat_modify_file 00A9  
                               ??_encoder_statemachine 00CD  
                             ??_motor_speed_from_index 0095  
                            __end_of_flash_sector_read 5680  
                                ??_USBStdGetDscHandler 0001  
                  __size_of__flash_copy_page_to_buffer 005A  
                                          _ep_data_out 0139  
                                     ___lwdiv@quotient 0064  
                               __end_of_motor_set_zero 31BC  
                                   ??_configFile_write 00E3  
                                   _motor_change_speed 5990  
                                        _MSDWriteState 0160  
                         __size_of_USBCtrlTrfRxService 010E  
                                             ?_stricmp 0061  
                                    _ConfigFile_buffer 0800  
                                   ?__display_itoa_u16 0078  
                        USBConfigureEndpoint@direction 0001  
                                             ?_strncmp 0060  
                                             ?_toupper 0001  
                                       __display_clear 4E1A  
                                   ??_i2c_eeprom_write 0010  
                            __size_of__i2c_acknowledge 000A  
                                           ?__get_data 0060  
                                           ?__get_date 0060  
               __cluster_from_sector_and_offset@offset 0062  
                                       __size_of_ultoa 00FE  
                              __end_of_configFile_read F75E  
                                 ??i2_USBStallEndpoint 0002  
                                           ?__get_item 0060  
               __cluster_from_sector_and_offset@sector 0060  
                                      _config_internal 0136  
                                           ?__get_time 0060  
                                           ?__get_root 0060  
                        ??__divide_jump_size_increment 0060  
                                  __size_of_motor_init 001E  
                         __size_ofi2_SYSTEM_Initialize 0054  
                              i2__i2c_eeprom_busy@busy 0006  
                                      _config_external 0133  
                                       __display_start 2D04  
                                  __size_of_motor_stop 0046  
                                      ___aldiv@divisor 0064  
                         __size_of_USBCtrlTrfTxService 00D2  
                       __size_of_display_get_character 002E  
                                  __make_cluster_chain D8D6  
                                      ___aldiv@counter 0068  
                                 ??_APP_DeviceMSDTasks 00B2  
                        __end_of_display_get_character 54B4  
                                       ___wmul@product 0064  
                                             _LATAbits 000F89  
                                             _LATBbits 000F8A  
                                             _LATCbits 000F8B  
                                             _LATDbits 000F8C  
                           __end_of_USBCheckHIDRequest 2556  
                       __root_is_available@file_number 0093  
                 __flash_compare_page_to_buffer@buffer 0075  
                                  ?_motor_change_speed 0060  
                           ??_USBCtrlEPServiceComplete 0002  
                                           ?__read_fat 008F  
                                  ??__display_itoa_u16 007C  
                              __i2c_read@slave_address 006F  
                                             _IPR2bits 000FA2  
                                             _PIE1bits 000F9D  
                                             _PIE2bits 000FA0  
                      motor_isr@steps_until_standstill 003C  
                           configFile_read@item_string 01CB  
                                          _encoder_run 1808  
                             __fat_offset_from_cluster 5834  
                 __flash_compare_page_to_buffer@status 0079  
                                             _PIR1bits 000F9E  
                                             _PIR2bits 000FA1  
                               ??__display_padded_itoa 007D  
                                   __end_of_dc_divide1 9FCE  
                                   __end_of_dc_divide2 9F7E  
                                             i2u990_44 0DD8  
                                             i2u990_45 0DD2  
                                             _RCONbits 000FD0  
                                           ?_api_parse 00C4  
                                             i2u986_48 0D7E  
                                             i2u986_49 0D92  
                                             i2u988_48 0DA4  
                                             i2u988_49 0DBA  
                                             _UEP0bits 000F26  
                                      ?_motor_arc_move 0001  
                                             _MSDTasks E356  
                                            _motor_isr B7FC  
                           _USBDeferINDataStagePackets 0166  
                                         ??_fat_format 0084  
                                 _active_configuration 0159  
                             ??_motor_set_manual_speed 0064  
                                    ?_i2c_display_init 0001  
                              spi_tx_rx@command_length 0062  
                              flash_partial_write@data 0085  
                                   _bit_pattern_degree A2CD  
                          __size_of_USBCheckStdRequest 00D8  
                      ??_MSDProcessCommandMediaPresent 0099  
                              flash_partial_write@page 007F  
                __end_of__fill_buffer_get_mode_details F5BA  
               __size_of__fill_buffer_get_mode_details 01AE  
                        __fill_buffer_get_mode_details F40C  
                                             _UCONbits 000F65  
                                           ?__spi_init 0060  
                                 __end_ofi2__i2c_start 59BA  
                                 __end_ofi2__i2c_write 4EF4  
                                 _USBConfigureEndpoint 3734  
                                         ??__motor_run 0095  
                           ?__data_sector_from_cluster 0060  
               __ic2_display_set_ddram_address@address 006A  
                                   ??_i2c_display_init 006A  
                 __size_of__encoder_next_arc_step_size 0070  
                                    __i2c_write@length 0067  
                                    ??__backlight_init 0060  
                                            _spi_tx_rx 34DE  
                                            _spi_tx_tx 37C8  
                          __size_ofi2__i2c_eeprom_busy 0026  
                                 ?__make_cluster_chain 0095  
                      __make_cluster_chain@next_offset 009B  
                   __flash_write_page_from_buffer@page 0073  
                     __size_of_USBStdFeatureReqHandler 027C  
                                       _USBMSDInHandle 0149  
                                           _ADCON0bits 000FC2  
                                           _ADCON1bits 000FC1  
                                flash_sector_read@data 0089  
                                    ___wmul@multiplier 0060  
                                ?_USBTransferOnePacket 0060  
                                flash_sector_read@page 0087  
                                 ??_motor_change_speed 0062  
                             _initial_speed_arc_string A237  
                                ?__display_signed_itoa 008F  
                  _ExternalFlash_MediaDetect$intlevel0 598C  
                                    _SYS_InterruptHigh 9008  
                            __end_of__display_itoa_u16 2D04  
                                ?__parse_command_short 0001  
                            i2c_display_cursor@address 006F  
                                     __CFG_WPFP$PAGE_1 000000  
                                       ?_fat_find_file 008B  
                         i2c_eeprom_read@slave_address 0078  
                                         ??_flash_init 0078  
                                         _RemoteWakeup 016E  
                    __end_of_ExternalFlash_MediaDetect 5990  
                                             i2_memcpy 4528  
                                             i2_memset 550C  
                    MSDCheckForErrorCases@DeviceNoData 0070  
                                 spi_tx_tx@data_length 0066  
                      fat_read_from_file_fast@position 00C5  
                                      ?__flash_is_busy 0001  
                     __end_of__fill_buffer_get_display 2C50  
                                          __write_root 4D82  
                                   ?_SYS_InterruptHigh 0001  
                  __fill_buffer_get_display@start_line 006E  
                               __end_of__display_clear 4E64  
                    __size_of_fat_get_file_information 007A  
                                           spi_tx@data 0060  
                            ?_fat_get_file_information 008F  
               __end_of_overshoot_cost_in_steps_string A1D3  
                       _overshoot_cost_in_steps_string A1BB  
                              __end_of_USBStallHandler 504A  
                      motor_schedule_command@direction 00A6  
                             __sector_from_file_number 5398  
                                      ?_motor_set_zero 0001  
                                       __i2c_read@data 0065  
                      ??__flash_write_page_from_buffer 0076  
                              __size_of_display_update 0038  
               motor_go_to_steps_position@distance_ccw 00BF  
                                       __i2c_read@cntr 0070  
                         __end_of_maximum_speed_string A297  
                               __end_of__display_start 2DB6  
                         __end_of_minimum_speed_string A2A5  
                                    ___lmul@multiplier 0060  
                                     __add_item@buffer 008A  
                                            copy_data0 3620  
                                            copy_data1 3640  
                         __size_of__system_timer0_init 002C  
                                    ??_fat_resize_file 00B0  
                            __display_signed_itoa@text 0091  
          __encoder_next_divide_step_size@old_stepsize 0060  
                                     __add_item@length 008E  
                          ??_USBCtrlEPAllowStatusStage 0001  
                            __find_nth_cluster@cluster 0097  
                          __end_of_USBStdSetCfgHandler 22D0  
                                   __end_of_fat_format EE54  
                          __display_padded_itoa@length 007A  
                                             _i2c_init 57FE  
                                  ??_SYS_InterruptHigh 0044  
                                        ??i2__i2c_send 0001  
                                          ??__i2c_read 0068  
                                          ??__i2c_send 0060  
                                         _MSDReadState 0161  
                                        ??i2__i2c_stop 0001  
                                          ??__i2c_stop 0060  
                                   __end_of__motor_run C8D4  
                                   __end_of_device_dsc A26D  
                          __size_of__display_itoa_long 010E  
            __encoder_next_setup_stepsize@old_stepsize 0060  
                             MSDErrorHandler@ErrorCase 0068  
                               ?_fat_get_format_status 0001  
                                             __i2c_get 5968  
                              ?_USBCtrlTrfSetupHandler 0001  
                                      _fat_create_file 03AC  
                            ??__fill_buffer_get_status 006D  
                                           _ANCON0bits 000F48  
                                           _ANCON1bits 000F49  
                              USBStdGetStatusHandler@p 0002  
                             fat_read_from_file@length 00CD  
                                             __Hrparam 0000  
                                  __display_itoa@value 0095  
                               _motor_prescaler_lookup 9BFD  
                                            memcpy@tmp 006A  
                                             __Lrparam 0000  
                               USBTransferOnePacket@ep 0068  
                                    __parse_jump_steps FD42  
                                             _SetupPkt 000D30  
                                   __end_of_flash_init 592E  
                                       _TransferLength 0145  
                                           ?_motor_isr 0001  
                         ?_motor_increase_manual_speed 0001  
                           __end_of_USBCheckMSDRequest 2B98  
                                      api_parse@in_idx 00CE  
                fat_read_from_file_fast@cluster_number 00AD  
                                ?_USBConfigureEndpoint 0001  
                                __flash_is_busy@status 0071  
                                     __size_of___aldiv 00CE  
                             _ExternalFlash_SectorRead 52CA  
                            display_get_character@line 0063  
                                   ?__parse_jump_steps 00A7  
                                     __size_of___almod 00AE  
                                     __size_of___fladd 033C  
                                    ??_USBDeviceAttach 0060  
                                       __i2c_wait_idle 41BA  
                                      _MSDWriteHandler D5EA  
                                     __size_of___fldiv 02BA  
                                     __size_of___flneg 0030  
                                     __size_of___flmul 0352  
                                     __size_of___fltol 00DE  
                         fat_create_file@first_cluster 00BA  
                                     __size_of___lldiv 0084  
                                     __size_of___llmod 0068  
                                      i2__i2c_send@dat 0001  
                                ??__make_cluster_chain 0099  
                                     __size_of___lwdiv 0054  
                       __display_itoa_long@short_value 00B9  
                                     __size_of___lwmod 0044  
            ExternalFlash_SectorWrite@allowWriteToZero 008C  
                                           ?_spi_tx_rx 0060  
                                           ?_spi_tx_tx 0060  
                 __size_ofi2_ExternalFlash_MediaDetect 0004  
                                          _MSDCBWValid 015B  
                            __size_of__i2c_eeprom_busy 0028  
                            __end_of_SYS_InterruptHigh 908E  
                            ??_motor_clear_command_cue 0060  
                        __display_itoa_long@last_digit 00BB  
                                    ?_USBStallEndpoint 0060  
                           i2c_display_write_fixed@pos 0068  
                                             _adc_init 47F6  
                                             __get_fat 4746  
                                             __get_fbr E0E2  
                                             __get_mbr 2628  
                                          ??__add_item 008C  
                                   ??_USBStallEndpoint 0061  
                                  ??__parse_jump_steps 00AD  
                      __flash_copy_page_to_buffer@page 0073  
                   __end_of_ExternalFlash_CapacityRead 58DE  
                           _ExternalFlash_CapacityRead 58CA  
                                             ___xxtofl 0268  
                              ??_MSDTransferTerminated 000E  
                                     __size_of_isdigit 0022  
                              __size_of_USBDeviceTasks 0146  
                                      ___lwdiv@divisor 0062  
                              __display_itoa_u16@value 0078  
                                             _fat_init 58F0  
                                      ?__display_clear 0001  
                                      ___lwdiv@counter 0066  
                           __size_of_flash_sector_read 0028  
                             ??__get_available_cluster 008F  
                                             __ptext10 55E0  
                                             __ptext11 5920  
                                             __ptext20 E0E2  
                                             __ptext12 504A  
                                             __ptext21 4746  
                                             __ptext13 51B8  
                                             __ptext30 5562  
                                             __ptext22 5538  
                                             __ptext14 3F34  
                                             __ptext31 4BF4  
                                             __ptext23 56CC  
                                             __ptext15 58F0  
                                             __ptext40 131C  
                                             __ptext32 4C44  
                                             __ptext24 51F0  
                                             __ptext16 2DB6  
                                             __ptext41 E5C0  
                                             __ptext33 41BA  
                                             __ptext25 4A02  
                                             __ptext17 EC3E  
                                             __ptext50 5608  
                                             __ptext42 03AC  
                                             __ptext34 599A  
                                             __ptext26 5738  
                                             __ptext18 F75E  
                                             __ptext51 592E  
                                             __ptext43 4D82  
                                             __ptext35 59A2  
                                             __ptext27 56F0  
                                             __ptext19 2628  
                                             __ptext60 F5BA  
                                             __ptext52 593A  
                                             __ptext44 4010  
                                             __ptext36 597C  
                                             __ptext28 5144  
                                             __ptext61 1CAC  
                                             __ptext53 558C  
                                             __ptext45 4584  
                                             __ptext37 2D04  
                                             __ptext29 3B78  
                                             __ptext70 3CEA  
                                             __ptext62 E7F4  
                                             __ptext54 1614  
                                             __ptext46 D8D6  
                                             __ptext38 2C50  
                                             __ptext71 407C  
                                             __ptext63 3264  
                                             __ptext55 4A56  
                                             __ptext47 5260  
                                             __ptext39 C194  
                                             __ptext80 1518  
                                             __ptext72 5680  
                                             __ptext64 4E64  
                                             __ptext56 141A  
                                             __ptext48 26F8  
                                             __ptext81 22D0  
                                             __ptext73 5398  
                                             __ptext65 479E  
                                             __ptext57 4152  
                                             __ptext49 44CA  
                                             __ptext90 AF94  
                                             __ptext82 575A  
                                             __ptext74 55B6  
                                             __ptext66 581A  
                                             __ptext58 396E  
                                             __ptext91 4DCE  
                                             __ptext83 5630  
                                             __ptext75 1BC4  
                                             __ptext67 5834  
                                             __ptext59 421E  
                                             __ptext92 584E  
                                             __ptext84 F8F6  
                                             __ptext76 3AF8  
                                             __ptext68 5900  
                                             __ptext93 FBF4  
                                             __ptext85 47F6  
                                             __ptext77 C8D4  
                                             __ptext69 3C70  
                                             __ptext94 2FBE  
                                             __ptext86 54E0  
                                             __ptext78 45DE  
                                             __ptext95 1AD8  
                                             __ptext87 40E8  
                                             __ptext79 589C  
                                             __ptext96 577C  
                                             __ptext88 59C8  
                                             __ptext97 18FC  
                                             __ptext89 3DDE  
                                             __ptext98 3E54  
                                             __ptext99 5458  
                                         _SSP1CON1bits 000FC6  
                      __size_of_motor_speed_from_index 0016  
                                         _SSP1CON2bits 000FC5  
                                      ?__display_start 0001  
                         __flash_set_page_size@command 0073  
                                         _SSP2CON1bits 000F72  
                 __end_of_MSDProcessCommandMediaAbsent 42E4  
                __size_of_MSDProcessCommandMediaAbsent 0062  
                         _MSDProcessCommandMediaAbsent 4282  
                                      ___almod@divisor 0064  
                                          ??__get_data 0062  
                                          ??__get_date 0062  
                                __flash_wakeup@command 0068  
                                          ??__get_item 0066  
                                      ___almod@counter 0068  
                                          ??__get_time 0062  
                                          ??__get_root 0062  
                                     __size_of_stricmp 005A  
                     __end_of_inverse_direction_string A25B  
                                     ?_configFile_read 0001  
                                     __size_of_strncmp 0080  
                                     __size_of_toupper 0018  
                                  __parse_command_long 4346  
                           ?_ExternalFlash_SectorWrite 0084  
                       ExternalFlash_SectorRead@config 008B  
                       ExternalFlash_SectorRead@buffer 0091  
                   __end_of__flash_copy_page_to_buffer 45DE  
                           __flash_copy_page_to_buffer 4584  
                              __size_of_ResetSenseData 0062  
                     __end_of_APP_DeviceCustomHIDTasks 3264  
                                    ??_i2c_eeprom_read 0076  
                                __end_of__flash_wakeup 48FE  
                              __parse_set_manual_speed 39F2  
                                        __size_of_atoi 00D8  
                                        __size_of_atol 00FC  
                       __end_of_USBCtrlTrfSetupHandler 38E8  
                                        __size_of_main 0096  
                                    ?_USBCtrlEPService 0001  
                                        __size_of_itoa 0044  
                                             _inq_resp A160  
                                        __size_of_ltoa 0054  
                       __size_of_i2c_eeprom_readUint32 002C  
                                        __size_of_utoa 00AA  
                        __end_of_i2c_eeprom_readUint32 54E0  
                                          ??__read_fat 0091  
                          __end_of_flash_partial_write 407C  
                                           strncmp@len 0064  
                              fat_get_file_size@offset 009B  
                              fat_get_file_size@sector 0099  
                            __end_of__parse_jump_steps FE90  
                fat_read_from_file_fast@needed_cluster 00C1  
                                   ??_USBCtrlEPService 001E  
                                             _tmr0_isr 517E  
                                  _USBCtrlTrfInHandler 2958  
                   _MSDProcessCommandMediaPresent$2606 009B  
                             ??__write_value_to_offset 0066  
                  __parse_set_manual_speed@out_idx_ptr 0068  
                       fat_read_from_file_fast@cluster 00AB  
                                          ??_api_parse 00C9  
                               __end_of__i2c_wait_idle 421E  
                fat_resize_file@old_number_of_clusters 00B4  
                                  __end_ofi2__i2c_send 59C2  
                           __end_of_motor_items_in_cue 595E  
                                             _outPipes 0112  
      i2c_display_program_custom_character@bit_pattern 006E  
                                  __end_ofi2__i2c_stop 59B2  
                                             _spi_init 504A  
                             ??_configFile_readDefault 0060  
                                 _USBCtrlTrfOutHandler 446A  
                                             int$flags 005F  
                     __end_of__offset_from_file_number 55E0  
                           ??__fat_sector_from_cluster 0062  
                                             atoi@sign 006A  
                            _USBCtrlEPAllowStatusStage 2894  
                      __size_of_motor_set_manual_speed 0050  
                                         ??_motor_init 0060  
                                          ??__spi_init 0063  
                                             atol@sign 0074  
                                         ??_motor_stop 0060  
                        ??_motor_increase_manual_speed 0064  
                                 ?__parse_command_long 00B3  
                                         _SSP1STATbits 000FC7  
                               ??_USBTransferOnePacket 0064  
                             __end_ofi2__i2c_wait_idle 4956  
                                    main@startup_timer 00FD  
                          __end_of_motor_period_lookup 9BFD  
               __make_cluster_chain@remaining_clusters 00A2  
                                  __display_start@cntr 007C  
                                         _SSP2STATbits 000F73  
                               ??__display_signed_itoa 0093  
                                __end_of__display_itoa EC3E  
                motor_go_to_steps_position@distance_cw 00BB  
                                     i2_ResetSenseData 43A8  
                       ?_APP_DeviceCustomHIDInitialize 0001  
                                      ??_fat_find_file 008F  
                               ??__parse_command_short 00C3  
                MSDProcessCommandMediaPresent@capacity 00A2  
                        display_get_character@position 0060  
                             __size_of_MSDErrorHandler 011A  
                       ?__fill_buffer_get_mode_details 0060  
                                      __add_item@value 0086  
                              _motor_postscaler_lookup 982F  
                            _USBDeferStatusStagePacket 0169  
                           __size_of__display_itoa_u16 00B4  
                      __end_of__fill_buffer_get_status F044  
                    __fill_buffer_get_display@position 006F  
                                          _OSCTUNEbits 000F9B  
                                           _INTCONbits 000FF2  
                       __parse_jump_steps@return_value 00AE  
                                 ?_USBCtrlTrfInHandler 0001  
                                             memcpy@d1 0060  
                                             memcpy@s1 0062  
                                 i2c_eeprom_write@data 000D  
                                 i2c_eeprom_write@cntr 0025  
                        USBCtrlTrfTxService@byteToSend 0001  
                   __motor_get_speed_in_degrees@lookup 008F  
                            __display_padded_itoa@text 007B  
                                             itoa@base 0074  
                                             isdigit@c 0062  
                                             memset@p1 0060  
                                            ultoa@base 0073  
                     fat_read_from_file@cluster_number 00DB  
                 __end_of_MSDComputeDeviceInAndResidue 2ADC  
                __size_of_MSDComputeDeviceInAndResidue 00C0  
                         _MSDComputeDeviceInAndResidue 2A1C  
                           fat_modify_file@return_code 00B8  
                                     ?_USBStallHandler 0001  
                             USBStdFeatureReqHandler@p 001C  
                           ?__get_available_root_entry 0001  
                              spi_tx_tx@command_length 0062  
                        __size_of__flash_set_page_size 006E  
                                     __i2c_acknowledge 5972  
                              __end_of_fat_create_file 04E8  
                                             intlevel2 0000  
                                     spi_tx_rx@command 0060  
                             __flash_get_status@status 006F  
                                             ltoa@base 0080  
                          __size_of__root_is_available 006C  
                               __size_of_USBDeviceInit 014C  
                      __end_of_motor_clear_command_cue 59C8  
                        ?_MSDProcessCommandMediaAbsent 0001  
              __end_of_USER_USB_CALLBACK_EVENT_HANDLER 396E  
             __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
                    ??_USER_USB_CALLBACK_EVENT_HANDLER 0016  
                     ?_USER_USB_CALLBACK_EVENT_HANDLER 0010  
                      _USER_USB_CALLBACK_EVENT_HANDLER 38E8  
              motor_schedule_command@distance_in_steps 00A0  
                                   __end_of_motor_init 57FE  
                                         ?__parse_item 007A  
                                     ___lwmod@dividend 0060  
                  __end_of_full_circle_in_steps_string A212  
                          _full_circle_in_steps_string A1FD  
                         i2USBTransferOnePacket@handle 000A  
                    __end_of_ExternalFlash_SectorWrite 52CA  
                                     ___lldiv@dividend 0060  
                                   __end_of_motor_stop 4F3A  
                __end_of__flash_write_page_from_buffer 46EC  
               __size_of__flash_write_page_from_buffer 005A  
                        __flash_write_page_from_buffer 4692  
                             ??_motor_schedule_command 00A6  
               i2SYSTEM_Initialize@pll_startup_counter 0001  
                 SYSTEM_Initialize@pll_startup_counter 0060  
                                            stricmp@s1 0061  
                                            stricmp@s2 0063  
                              ?_i2c_eeprom_writeUint32 0026  
                             _maximum_speed_arc_string A225  
                         __end_of_beep_duration_string A289  
                         fat_read_from_file@start_byte 00C9  
                                      _display_content 0234  
                           __end_of_flash_partial_read 56A6  
                              __end_of_MSDWriteHandler D8D6  
                                            strncmp@s1 0060  
                                            strncmp@s2 0062  
                              __write_root@file_number 008E  
                                     spi_tx_tx@command 0060  
                                __size_ofi2__i2c_start 0008  
                              __size_of_MSDReadHandler 01EA  
                                __size_ofi2__i2c_write 0048  
                                __add_item@item_string 0084  
                   __parse_set_manual_speed@out_buffer 0066  
                                  fat_resize_file@root 00BB  
                           i2USBTransferOnePacket@data 0002  
                                        ??_system_init 00FD  
                                __get_item@item_string 0060  
                    __size_of__fill_buffer_get_display 00B8  
                         __end_of_use_ccw_limit_string A27B  
                             ?__read_value_from_offset 0060  
                             ?_fat_read_from_file_fast 00A1  
                               _motor_speed_from_index 58B4  
                            ?__fill_buffer_get_display 0064  
                               ??_USBConfigureEndpoint 0002  
                                      ?__i2c_wait_idle 0001  
                                ?_USBCtrlTrfOutHandler 0001  
                                      _display_prepare A330  
                                          ??_motor_isr 002C  
                             ??__flash_write_to_buffer 007A  
                             ?_APP_DeviceMSDInitialize 0001  
                                  _USBCtrlTrfRxService 0DF6  
                                   _USBWakeFromSuspend 5228  
                                ??__parse_command_long 00B9  
                                 _maximum_speed_string A289  
                                   _i2c_display_cursor 5738  
                      motor_set_manual_speed@new_speed 0062  
                                 _minimum_speed_string A297  
                              _USBStdFeatureReqHandler DE66  
                                      _fat_modify_file E5C0  
                                  i2_SYSTEM_Initialize 4AFE  
                                          ??_spi_tx_rx 0068  
                                          ??_spi_tx_tx 0068  
                                  _USBCtrlTrfTxService 2556  
                           __size_of_SYS_InterruptHigh 0086  
                                         ?_api_prepare 0070  
                    __motor_get_speed_in_degrees@speed 008B  
                __flash_write_page_from_buffer@command 0079  
                                             utoa@base 006B  
                                             ultoa@buf 006D  
                                    _motor_divide_jump 2FBE  
                                             ultoa@val 006F  
                                      _gblMediaPresent 0147  
                             configFile_read@file_size 01F6  
                  ExternalFlash_SectorRead@sector_addr 008D  
                                    _motor_command_cue 0300  
                                  ?_USBWakeFromSuspend 0001  
                                           _PPSCONbits 000EBF  
                                     ___lldiv@quotient 0068  
                                      ___lwmod@divisor 0062  
                          ??_ExternalFlash_MediaDetect 0062  
                                  ?_i2c_display_cursor 006D  
                                ??_USBCtrlTrfInHandler 0002  
                                   ?_motor_divide_jump 0001  
                                             stricmp@r 0066  
                                             strlen@cp 0064  
                                _USBAlternateInterface 01BD  
                                      ___lwmod@counter 0064  
                        __size_of__i2c_not_acknowledge 000A  
                                             toupper@c 0060  
                                          _ptrNextData 014D  
                                         ___aldiv@sign 0069  
                     __make_cluster_chain@data_changed 00A1  
                            i2USBTransferOnePacket@dir 0001  
                            i2USBTransferOnePacket@len 0004  
                                  USBEnableEndpoint@ep 000C  
                                      _endpoint_number 016C  
                                       _display_update 51F0  
                  __get_available_cluster@first_sector 008B  
                               _motor_set_manual_speed 4CE4  
                      __size_of__get_available_cluster 00CE  
                                 ?_USBCtrlTrfRxService 0001  
                 __size_of_motor_increase_manual_speed 001A  
                                        ___fladd@signs 0082  
                         __end_of_adc_read_temperature F40C  
                            ??__parse_set_manual_speed 006A  
                                _MSDCheckForErrorCases 0AC4  
                                  ??_motor_divide_jump 00C3  
                           ??__fat_offset_from_cluster 0062  
                        ?_MSDComputeDeviceInAndResidue 0060  
                                         i2__i2c_start 59B2  
                              motor_arc_move@direction 00AB  
                                 ?i2_SYSTEM_Initialize 0001  
                                         i2__i2c_write 4EAC  
                             ?_USBCtrlEPAllowDataStage 0001  
                                       _MSBBufferIndex 0232  
                                         ___almod@sign 0069  
                                 ?_USBCtrlTrfTxService 0001  
                      __offset_from_file_number@offset 0063  
                       __end_of_i2c_eeprom_writeUint32 5882  
                                         ___fladd@aexp 0083  
                                        ?_encoder_init 0001  
                                         ___fladd@bexp 0084  
                                           _USBMSDInit 0CE8  
                         _USBStatusStageTimeoutCounter 016A  
                                          i2__i2c_send 59BA  
                      ??_ExternalFlash_MediaInitialize 0062  
                                          i2__i2c_stop 59AA  
                                     ??_motor_arc_move 00A7  
                                 ??_USBWakeFromSuspend 0018  
                             __display_itoa_long@value 00AD  
                          __end_of__flash_partial_read 3DDE  
                            configFile_write@file_size 00E5  
                           USBTransferOnePacket@handle 0069  
                                      __backlight_init 59C8  
                                 ??_i2c_display_cursor 006E  
                                         ?_encoder_run 0001  
    motor_divide_jump_to_nearest@divide_position_float 00C9  
                           __size_of__parse_jump_steps 014E  
                            __size_of_configFile_write 03B2  
                              __display_itoa_long@text 00B2  
                           fat_resize_file@file_number 00BA  
                                           _USB_CD_Ptr 9DEC  
                            __size_of_i2c_eeprom_write 0082  
                                          _power_state 015A  
                                          _USBInHandle 0141  
                             _APP_DeviceCustomHIDTasks 31BC  
                           __end_of_flash_sector_write 4CE4  
